Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "cond", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cuda.tunable", "cuda_environment_variables", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "debugging_environment_variables", "deploy", "deterministic", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.pipelining", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/control_plane", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/subprocess_handler", "elastic/timer", "elastic/train_script", "export", "export.ir_spec", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "future_mod", "futures", "fx", "fx.experimental", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/python.object-model", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.dynamic-value", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/exportdb/torch.mutation", "generated/exportdb/torch.operator", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/torch.Event", "generated/torch.Generator", "generated/torch.Stream", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.module_load", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.register_post_accumulate_grad_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.xpu", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.NUMERIC_DEBUG_HANDLE_KEY", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.compare_results", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.extract_results_from_loggers", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.generate_numeric_debug_handle", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_for_propagation_comparison", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.pt2e.export_utils.model_is_exported", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.UnpackedDualTensor", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.enter_dual_level", "generated/torch.autograd.forward_ad.exit_dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.BackwardCFunction", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.function.InplaceFunction", "generated/torch.autograd.function.NestedIOFunction", "generated/torch.autograd.function.once_differentiable", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.grad_mode.inference_mode", "generated/torch.autograd.grad_mode.set_grad_enabled", "generated/torch.autograd.grad_mode.set_multithreading_enabled", "generated/torch.autograd.gradcheck.GradcheckError", "generated/torch.autograd.gradcheck.gradcheck", "generated/torch.autograd.gradcheck.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.graph.increment_version", "generated/torch.autograd.profiler.EnforceUnique", "generated/torch.autograd.profiler.KinetoStepTracker", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.parse_nvprof_trace", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.profiler.record_function", "generated/torch.autograd.profiler_util.Interval", "generated/torch.autograd.profiler_util.Kernel", "generated/torch.autograd.profiler_util.MemRecordsAcc", "generated/torch.autograd.profiler_util.StringTable", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.cudagraph_mark_step_begin", "generated/torch.compiler.disable", "generated/torch.compiler.is_compiling", "generated/torch.compiler.is_dynamo_compiling", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.cond", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_device", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.set_device", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.MemPool", "generated/torch.cuda.MemPoolContext", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.cudart", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_file", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.fx.experimental.proxy_tensor.get_proxy_mode", "generated/torch.fx.experimental.proxy_tensor.handle_sym_dispatch", "generated/torch.fx.experimental.proxy_tensor.make_fx", "generated/torch.fx.experimental.proxy_tensor.maybe_disable_thunkify", "generated/torch.fx.experimental.proxy_tensor.maybe_enable_thunkify", "generated/torch.fx.experimental.symbolic_shapes.CallMethodKey", "generated/torch.fx.experimental.symbolic_shapes.ConvertIntKey", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic", "generated/torch.fx.experimental.symbolic_shapes.DivideByKey", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint", "generated/torch.fx.experimental.symbolic_shapes.InnerTensorKey", "generated/torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnvSettings", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "generated/torch.fx.experimental.symbolic_shapes.check_consistent", "generated/torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings", "generated/torch.fx.experimental.symbolic_shapes.constrain_range", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify", "generated/torch.fx.experimental.symbolic_shapes.definitely_false", "generated/torch.fx.experimental.symbolic_shapes.definitely_true", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols", "generated/torch.fx.experimental.symbolic_shapes.hint_int", "generated/torch.fx.experimental.symbolic_shapes.is_accessor_node", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int", "generated/torch.fx.experimental.symbolic_shapes.lru_cache", "generated/torch.fx.experimental.symbolic_shapes.parallel_and", "generated/torch.fx.experimental.symbolic_shapes.parallel_or", "generated/torch.fx.experimental.symbolic_shapes.rebind_unbacked", "generated/torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true", "generated/torch.fx.experimental.symbolic_shapes.sym_eq", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_device", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_device_module", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.interface", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.device_count", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.recommended_max_memory", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mtia.DeferredMtiaCallError", "generated/torch.mtia.Event", "generated/torch.mtia.Stream", "generated/torch.mtia.StreamContext", "generated/torch.mtia.current_device", "generated/torch.mtia.current_stream", "generated/torch.mtia.default_stream", "generated/torch.mtia.device", "generated/torch.mtia.device_count", "generated/torch.mtia.get_rng_state", "generated/torch.mtia.init", "generated/torch.mtia.is_available", "generated/torch.mtia.is_initialized", "generated/torch.mtia.memory_stats", "generated/torch.mtia.set_device", "generated/torch.mtia.set_rng_state", "generated/torch.mtia.set_stream", "generated/torch.mtia.stream", "generated/torch.mtia.synchronize", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.CircularPad1d", "generated/torch.nn.CircularPad2d", "generated/torch.nn.CircularPad3d", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LPPool3d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RMSNorm", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.attention.SDPBackend", "generated/torch.nn.attention.bias.CausalBias", "generated/torch.nn.attention.bias.CausalVariant", "generated/torch.nn.attention.bias.causal_lower_right", "generated/torch.nn.attention.bias.causal_upper_left", "generated/torch.nn.attention.sdpa_kernel", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.lp_pool3d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rms_norm", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.modules.normalization.RMSNorm", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Buffer", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.convert_conv2d_weight_memory_format", "generated/torch.nn.utils.convert_conv3d_weight_memory_format", "generated/torch.nn.utils.fuse_conv_bn_eval", "generated/torch.nn.utils.fuse_conv_bn_weights", "generated/torch.nn.utils.fuse_linear_bn_eval", "generated/torch.nn.utils.fuse_linear_bn_weights", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrizations.weight_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adafactor", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.register_load_state_dict_post_hook", "generated/torch.optim.Optimizer.register_load_state_dict_pre_hook", "generated/torch.optim.Optimizer.register_state_dict_post_hook", "generated/torch.optim.Optimizer.register_state_dict_pre_hook", "generated/torch.optim.Optimizer.register_step_post_hook", "generated/torch.optim.Optimizer.register_step_pre_hook", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LRScheduler", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.as_sparse_gradcheck", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_ite", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unravel_index", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.utils.swap_tensors", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.xpu.Event", "generated/torch.xpu.Stream", "generated/torch.xpu.StreamContext", "generated/torch.xpu.current_device", "generated/torch.xpu.current_stream", "generated/torch.xpu.device", "generated/torch.xpu.device_count", "generated/torch.xpu.device_of", "generated/torch.xpu.empty_cache", "generated/torch.xpu.get_device_capability", "generated/torch.xpu.get_device_name", "generated/torch.xpu.get_device_properties", "generated/torch.xpu.get_rng_state", "generated/torch.xpu.get_rng_state_all", "generated/torch.xpu.init", "generated/torch.xpu.initial_seed", "generated/torch.xpu.is_available", "generated/torch.xpu.is_initialized", "generated/torch.xpu.manual_seed", "generated/torch.xpu.manual_seed_all", "generated/torch.xpu.seed", "generated/torch.xpu.seed_all", "generated/torch.xpu.set_device", "generated/torch.xpu.set_rng_state", "generated/torch.xpu.set_rng_state_all", "generated/torch.xpu.set_stream", "generated/torch.xpu.stream", "generated/torch.xpu.synchronize", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "meta", "miscellaneous_environment_variables", "mobile_optimizer", "model_zoo", "module_tracker", "monitor", "mps", "mps_environment_variables", "mtia", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.attention", "nn.attention.bias", "nn.attention.flex_attention", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/custom_operators", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/fsdp", "notes/get_start_xpu", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_dynamo", "onnx_dynamo_onnxruntime_backend", "onnx_torchscript", "onnx_torchscript_supported_aten_ops", "optim", "package", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "size", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "threading_environment_variables", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_aot_inductor", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_dynamic_shapes", "torch.compiler_dynamo_deepdive", "torch.compiler_dynamo_overview", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "torch_environment_variables", "torch_nccl_environment_variables", "type_info", "utils", "xpu"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "cond.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cuda.tunable.rst", "cuda_environment_variables.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "debugging_environment_variables.rst", "deploy.rst", "deterministic.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.pipelining.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/control_plane.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/subprocess_handler.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "export.ir_spec.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "future_mod.rst", "futures.rst", "fx.rst", "fx.experimental.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/python.object-model.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.dynamic-value.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/exportdb/torch.mutation.rst", "generated/exportdb/torch.operator.rst", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/torch.Event.rst", "generated/torch.Generator.rst", "generated/torch.Stream.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.module_load.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.register_post_accumulate_grad_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.xpu.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.NUMERIC_DEBUG_HANDLE_KEY.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.compare_results.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.extract_results_from_loggers.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.generate_numeric_debug_handle.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_for_propagation_comparison.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.pt2e.export_utils.model_is_exported.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.UnpackedDualTensor.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.enter_dual_level.rst", "generated/torch.autograd.forward_ad.exit_dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.BackwardCFunction.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.function.InplaceFunction.rst", "generated/torch.autograd.function.NestedIOFunction.rst", "generated/torch.autograd.function.once_differentiable.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.grad_mode.inference_mode.rst", "generated/torch.autograd.grad_mode.set_grad_enabled.rst", "generated/torch.autograd.grad_mode.set_multithreading_enabled.rst", "generated/torch.autograd.gradcheck.GradcheckError.rst", "generated/torch.autograd.gradcheck.gradcheck.rst", "generated/torch.autograd.gradcheck.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.graph.increment_version.rst", "generated/torch.autograd.profiler.EnforceUnique.rst", "generated/torch.autograd.profiler.KinetoStepTracker.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.parse_nvprof_trace.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.profiler.record_function.rst", "generated/torch.autograd.profiler_util.Interval.rst", "generated/torch.autograd.profiler_util.Kernel.rst", "generated/torch.autograd.profiler_util.MemRecordsAcc.rst", "generated/torch.autograd.profiler_util.StringTable.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.cudagraph_mark_step_begin.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.is_compiling.rst", "generated/torch.compiler.is_dynamo_compiling.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.cond.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_device.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.set_device.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.MemPool.rst", "generated/torch.cuda.MemPoolContext.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.cudart.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_file.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.fx.experimental.proxy_tensor.get_proxy_mode.rst", "generated/torch.fx.experimental.proxy_tensor.handle_sym_dispatch.rst", "generated/torch.fx.experimental.proxy_tensor.make_fx.rst", "generated/torch.fx.experimental.proxy_tensor.maybe_disable_thunkify.rst", "generated/torch.fx.experimental.proxy_tensor.maybe_enable_thunkify.rst", "generated/torch.fx.experimental.symbolic_shapes.CallMethodKey.rst", "generated/torch.fx.experimental.symbolic_shapes.ConvertIntKey.rst", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints.rst", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic.rst", "generated/torch.fx.experimental.symbolic_shapes.DivideByKey.rst", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.InnerTensorKey.rst", "generated/torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.rst", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv.rst", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnvSettings.rst", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr.rst", "generated/torch.fx.experimental.symbolic_shapes.check_consistent.rst", "generated/torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_range.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_false.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_true.rst", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious.rst", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols.rst", "generated/torch.fx.experimental.symbolic_shapes.hint_int.rst", "generated/torch.fx.experimental.symbolic_shapes.is_accessor_node.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int.rst", "generated/torch.fx.experimental.symbolic_shapes.lru_cache.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_and.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_or.rst", "generated/torch.fx.experimental.symbolic_shapes.rebind_unbacked.rst", "generated/torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings.rst", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true.rst", "generated/torch.fx.experimental.symbolic_shapes.sym_eq.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_device.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_device_module.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.interface.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.device_count.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.recommended_max_memory.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mtia.DeferredMtiaCallError.rst", "generated/torch.mtia.Event.rst", "generated/torch.mtia.Stream.rst", "generated/torch.mtia.StreamContext.rst", "generated/torch.mtia.current_device.rst", "generated/torch.mtia.current_stream.rst", "generated/torch.mtia.default_stream.rst", "generated/torch.mtia.device.rst", "generated/torch.mtia.device_count.rst", "generated/torch.mtia.get_rng_state.rst", "generated/torch.mtia.init.rst", "generated/torch.mtia.is_available.rst", "generated/torch.mtia.is_initialized.rst", "generated/torch.mtia.memory_stats.rst", "generated/torch.mtia.set_device.rst", "generated/torch.mtia.set_rng_state.rst", "generated/torch.mtia.set_stream.rst", "generated/torch.mtia.stream.rst", "generated/torch.mtia.synchronize.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.CircularPad1d.rst", "generated/torch.nn.CircularPad2d.rst", "generated/torch.nn.CircularPad3d.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LPPool3d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RMSNorm.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.attention.SDPBackend.rst", "generated/torch.nn.attention.bias.CausalBias.rst", "generated/torch.nn.attention.bias.CausalVariant.rst", "generated/torch.nn.attention.bias.causal_lower_right.rst", "generated/torch.nn.attention.bias.causal_upper_left.rst", "generated/torch.nn.attention.sdpa_kernel.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.lp_pool3d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rms_norm.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.modules.normalization.RMSNorm.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Buffer.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.convert_conv2d_weight_memory_format.rst", "generated/torch.nn.utils.convert_conv3d_weight_memory_format.rst", "generated/torch.nn.utils.fuse_conv_bn_eval.rst", "generated/torch.nn.utils.fuse_conv_bn_weights.rst", "generated/torch.nn.utils.fuse_linear_bn_eval.rst", "generated/torch.nn.utils.fuse_linear_bn_weights.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrizations.weight_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adafactor.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.register_load_state_dict_post_hook.rst", "generated/torch.optim.Optimizer.register_load_state_dict_pre_hook.rst", "generated/torch.optim.Optimizer.register_state_dict_post_hook.rst", "generated/torch.optim.Optimizer.register_state_dict_pre_hook.rst", "generated/torch.optim.Optimizer.register_step_post_hook.rst", "generated/torch.optim.Optimizer.register_step_pre_hook.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LRScheduler.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.as_sparse_gradcheck.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_ite.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unravel_index.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.utils.swap_tensors.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.xpu.Event.rst", "generated/torch.xpu.Stream.rst", "generated/torch.xpu.StreamContext.rst", "generated/torch.xpu.current_device.rst", "generated/torch.xpu.current_stream.rst", "generated/torch.xpu.device.rst", "generated/torch.xpu.device_count.rst", "generated/torch.xpu.device_of.rst", "generated/torch.xpu.empty_cache.rst", "generated/torch.xpu.get_device_capability.rst", "generated/torch.xpu.get_device_name.rst", "generated/torch.xpu.get_device_properties.rst", "generated/torch.xpu.get_rng_state.rst", "generated/torch.xpu.get_rng_state_all.rst", "generated/torch.xpu.init.rst", "generated/torch.xpu.initial_seed.rst", "generated/torch.xpu.is_available.rst", "generated/torch.xpu.is_initialized.rst", "generated/torch.xpu.manual_seed.rst", "generated/torch.xpu.manual_seed_all.rst", "generated/torch.xpu.seed.rst", "generated/torch.xpu.seed_all.rst", "generated/torch.xpu.set_device.rst", "generated/torch.xpu.set_rng_state.rst", "generated/torch.xpu.set_rng_state_all.rst", "generated/torch.xpu.set_stream.rst", "generated/torch.xpu.stream.rst", "generated/torch.xpu.synchronize.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "meta.rst", "miscellaneous_environment_variables.rst", "mobile_optimizer.rst", "model_zoo.rst", "module_tracker.rst", "monitor.rst", "mps.rst", "mps_environment_variables.rst", "mtia.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.attention.rst", "nn.attention.bias.rst", "nn.attention.flex_attention.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/custom_operators.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/fsdp.rst", "notes/get_start_xpu.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_dynamo.rst", "onnx_dynamo_onnxruntime_backend.rst", "onnx_torchscript.rst", "onnx_torchscript_supported_aten_ops.rst", "optim.rst", "package.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "size.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "threading_environment_variables.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_aot_inductor.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_dynamo_deepdive.rst", "torch.compiler_dynamo_overview.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "torch_environment_variables.rst", "torch_nccl_environment_variables.rst", "type_info.rst", "utils.rst", "xpu.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "Control Flow - Cond", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "TunableOp", "CUDA Environment Variables", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "Debugging Environment Variables", "torch::deploy has been moved to pytorch/multipy", "torch.utils.deterministic", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Pipeline Parallelism", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Control Plane", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Subprocess Handling", "Expiration Timers", "Train script", "torch.export", "torch.export IR Specification", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.__future__", "torch.futures", "torch.fx", "torch.fx.experimental", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "python.object-model", "torch.cond", "torch.dynamic-shape", "torch.dynamic-value", "torch.escape-hatch", "torch.map", "torch.mutation", "torch.operator", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "Event", "Generator", "Stream", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.module_load", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.xpu", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "NUMERIC_DEBUG_HANDLE_KEY", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "compare_results", "convert", "default_eval_fn", "extract_results_from_loggers", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "generate_numeric_debug_handle", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_for_propagation_comparison", "prepare_qat", "propagate_qconfig", "model_is_exported", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "UnpackedDualTensor", "dual_level", "torch.autograd.forward_ad.enter_dual_level", "torch.autograd.forward_ad.exit_dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "BackwardCFunction", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "InplaceFunction", "NestedIOFunction", "torch.autograd.function.once_differentiable", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "inference_mode", "set_grad_enabled", "set_multithreading_enabled", "torch.autograd.gradcheck.GradcheckError", "torch.autograd.gradcheck.gradcheck", "torch.autograd.gradcheck.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.graph.increment_version", "EnforceUnique", "KinetoStepTracker", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.parse_nvprof_trace", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "record_function", "Interval", "Kernel", "MemRecordsAcc", "StringTable", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.cudagraph_mark_step_begin", "torch.compiler.disable", "torch.compiler.is_compiling", "torch.compiler.is_dynamo_compiling", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.cond", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_device", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.set_device", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "MemPool", "MemPoolContext", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.cudart", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_file", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.fx.experimental.proxy_tensor.get_proxy_mode", "torch.fx.experimental.proxy_tensor.handle_sym_dispatch", "torch.fx.experimental.proxy_tensor.make_fx", "torch.fx.experimental.proxy_tensor.maybe_disable_thunkify", "torch.fx.experimental.proxy_tensor.maybe_enable_thunkify", "CallMethodKey", "ConvertIntKey", "DimConstraints", "DimDynamic", "DivideByKey", "EqualityConstraint", "InnerTensorKey", "PropagateUnbackedSymInts", "RelaxedUnspecConstraint", "ShapeEnv", "ShapeEnvSettings", "StatefulSymbolicContext", "StatelessSymbolicContext", "StrictMinMaxConstraint", "SubclassSymbolicContext", "SymbolicContext", "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "torch.fx.experimental.symbolic_shapes.check_consistent", "torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings", "torch.fx.experimental.symbolic_shapes.constrain_range", "torch.fx.experimental.symbolic_shapes.constrain_unify", "torch.fx.experimental.symbolic_shapes.definitely_false", "torch.fx.experimental.symbolic_shapes.definitely_true", "torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "torch.fx.experimental.symbolic_shapes.has_free_symbols", "torch.fx.experimental.symbolic_shapes.hint_int", "torch.fx.experimental.symbolic_shapes.is_accessor_node", "torch.fx.experimental.symbolic_shapes.is_concrete_bool", "torch.fx.experimental.symbolic_shapes.is_concrete_int", "torch.fx.experimental.symbolic_shapes.lru_cache", "torch.fx.experimental.symbolic_shapes.parallel_and", "torch.fx.experimental.symbolic_shapes.parallel_or", "torch.fx.experimental.symbolic_shapes.rebind_unbacked", "torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings", "torch.fx.experimental.symbolic_shapes.statically_known_true", "torch.fx.experimental.symbolic_shapes.sym_eq", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_device", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_device_module", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.interface", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.device_count", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.recommended_max_memory", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mtia.DeferredMtiaCallError", "Event", "Stream", "StreamContext", "torch.mtia.current_device", "torch.mtia.current_stream", "torch.mtia.default_stream", "device", "torch.mtia.device_count", "torch.mtia.get_rng_state", "torch.mtia.init", "torch.mtia.is_available", "torch.mtia.is_initialized", "torch.mtia.memory_stats", "torch.mtia.set_device", "torch.mtia.set_rng_state", "torch.mtia.set_stream", "torch.mtia.stream", "torch.mtia.synchronize", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "CircularPad1d", "CircularPad2d", "CircularPad3d", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LPPool3d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RMSNorm", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "SDPBackend", "torch.nn.attention.bias.CausalBias", "CausalVariant", "torch.nn.attention.bias.causal_lower_right", "torch.nn.attention.bias.causal_upper_left", "torch.nn.attention.sdpa_kernel", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.lp_pool3d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rms_norm", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "RMSNorm", "DistributedDataParallel", "Buffer", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.convert_conv2d_weight_memory_format", "torch.nn.utils.convert_conv3d_weight_memory_format", "torch.nn.utils.fuse_conv_bn_eval", "torch.nn.utils.fuse_conv_bn_weights", "torch.nn.utils.fuse_linear_bn_eval", "torch.nn.utils.fuse_linear_bn_weights", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "torch.nn.utils.parametrizations.weight_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adafactor", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.register_load_state_dict_post_hook", "torch.optim.Optimizer.register_load_state_dict_pre_hook", "torch.optim.Optimizer.register_state_dict_post_hook", "torch.optim.Optimizer.register_state_dict_pre_hook", "torch.optim.Optimizer.register_step_post_hook", "torch.optim.Optimizer.register_step_pre_hook", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LRScheduler", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_ite", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unravel_index", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.utils.swap_tensors", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "Event", "Stream", "StreamContext", "torch.xpu.current_device", "torch.xpu.current_stream", "device", "torch.xpu.device_count", "device_of", "torch.xpu.empty_cache", "torch.xpu.get_device_capability", "torch.xpu.get_device_name", "torch.xpu.get_device_properties", "torch.xpu.get_rng_state", "torch.xpu.get_rng_state_all", "torch.xpu.init", "torch.xpu.initial_seed", "torch.xpu.is_available", "torch.xpu.is_initialized", "torch.xpu.manual_seed", "torch.xpu.manual_seed_all", "torch.xpu.seed", "torch.xpu.seed_all", "torch.xpu.set_device", "torch.xpu.set_rng_state", "torch.xpu.set_rng_state_all", "torch.xpu.set_stream", "torch.xpu.stream", "torch.xpu.synchronize", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "Meta device", "Miscellaneous Environment Variables", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.utils.module_tracker", "torch.monitor", "torch.mps", "MPS Environment Variables", "torch.mtia", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.attention", "torch.nn.attention.bias", "torch.nn.attention.flex_attention", "torch.nn.functional", "torch.nn.init", "Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "PyTorch Custom Operators Landing Page", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "FSDP Notes", "Pytorch 2.4: Getting Started on Intel GPU", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "TorchDynamo-based ONNX Exporter", "ONNX Backend for TorchDynamo", "TorchScript-based ONNX Exporter", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.Size", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "Threading Environment Variables", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "Dynamic shapes", "Dynamo Deep-Dive", "Dynamo Overview", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Torch Environment Variables", "PYTORCH ProcessGroupNCCL Environment Variables", "Type Info", "torch.utils", "torch.xpu"], "terms": {"provid": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 17, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 40, 45, 47, 48, 50, 51, 52, 53, 55, 59, 63, 64, 65, 66, 76, 77, 154, 490, 607, 685, 694, 740, 743, 744, 745, 750, 751, 753, 761, 762, 765, 769, 793, 795, 807, 808, 822, 833, 852, 869, 904, 920, 922, 923, 924, 939, 950, 962, 967, 970, 989, 1005, 1028, 1035, 1075, 1119, 1139, 1176, 1188, 1203, 1213, 1243, 1251, 1252, 1286, 1289, 1296, 1297, 1301, 1303, 1305, 1320, 1337, 1362, 1394, 1478, 1479, 1480, 1483, 1499, 1500, 1508, 1513, 1518, 1519, 1544, 1545, 1546, 1548, 1554, 1555, 1558, 1564, 1566, 1577, 1592, 1593, 1594, 1595, 1596, 1626, 1627, 1706, 1725, 1738, 1746, 1747, 1761, 1781, 1789, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1839, 1842, 1847, 1883, 1893, 1940, 1941, 1942, 1943, 1944, 1945, 1954, 1984, 1986, 1996, 2007, 2042, 2044, 2046, 2047, 2051, 2053, 2054, 2057, 2060, 2064, 2065, 2066, 2067, 2071, 2078, 2080, 2081, 2082, 2085, 2086, 2089, 2090, 2092, 2097, 2099, 2101, 2102, 2104, 2105, 2107, 2109, 2110, 2111, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2123, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2138, 2139, 2143, 2144, 2145, 2147, 2150], "conveni": [0, 3, 7, 14, 28, 44, 47, 48, 49, 55, 61, 1188, 1203, 1347, 1728, 1901, 1996, 1998, 2007, 2042, 2046, 2055, 2074, 2075, 2078, 2081, 2088, 2089, 2102, 2108, 2130, 2132, 2133, 2134, 2139], "method": [0, 3, 7, 9, 14, 15, 18, 23, 28, 29, 30, 32, 33, 35, 36, 37, 39, 45, 47, 52, 55, 62, 63, 64, 66, 74, 75, 82, 91, 225, 226, 327, 419, 490, 491, 492, 501, 502, 503, 524, 618, 799, 804, 807, 823, 824, 825, 847, 852, 865, 885, 886, 887, 903, 904, 911, 912, 913, 914, 915, 916, 917, 935, 936, 950, 1055, 1170, 1194, 1201, 1243, 1287, 1289, 1290, 1292, 1293, 1294, 1300, 1301, 1305, 1306, 1307, 1335, 1353, 1354, 1361, 1362, 1441, 1444, 1452, 1460, 1462, 1463, 1489, 1490, 1505, 1548, 1549, 1550, 1554, 1558, 1559, 1565, 1567, 1577, 1654, 1728, 1738, 1743, 1754, 1756, 1759, 1761, 1763, 1766, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1783, 1788, 1804, 1806, 1807, 1809, 1825, 1858, 1939, 1954, 1958, 1959, 1996, 2042, 2043, 2044, 2047, 2048, 2051, 2055, 2057, 2060, 2064, 2065, 2066, 2071, 2073, 2074, 2075, 2078, 2081, 2082, 2083, 2086, 2089, 2091, 2094, 2097, 2101, 2102, 2104, 2106, 2109, 2111, 2116, 2117, 2119, 2120, 2123, 2126, 2131, 2133, 2134, 2136, 2143, 2145, 2146], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 14, 15, 23, 24, 28, 32, 33, 34, 35, 37, 40, 45, 47, 48, 50, 51, 52, 53, 55, 57, 58, 60, 64, 88, 90, 92, 157, 227, 258, 404, 406, 490, 685, 698, 700, 701, 704, 740, 763, 765, 786, 829, 830, 842, 888, 906, 910, 919, 921, 942, 952, 961, 967, 974, 975, 976, 983, 1001, 1005, 1019, 1023, 1032, 1034, 1098, 1099, 1102, 1106, 1124, 1135, 1136, 1138, 1141, 1142, 1144, 1145, 1147, 1148, 1149, 1151, 1152, 1154, 1156, 1181, 1182, 1183, 1187, 1188, 1201, 1202, 1232, 1246, 1247, 1248, 1249, 1278, 1279, 1281, 1282, 1285, 1286, 1287, 1290, 1303, 1309, 1310, 1311, 1314, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1358, 1359, 1361, 1362, 1367, 1370, 1377, 1378, 1379, 1380, 1384, 1387, 1389, 1390, 1391, 1392, 1395, 1415, 1416, 1434, 1439, 1440, 1442, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1625, 1627, 1637, 1638, 1645, 1650, 1652, 1653, 1671, 1672, 1690, 1692, 1693, 1696, 1697, 1699, 1706, 1709, 1737, 1738, 1741, 1742, 1746, 1747, 1753, 1781, 1782, 1783, 1784, 1793, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1832, 1845, 1855, 1857, 1858, 1878, 1879, 1914, 1920, 1921, 1926, 1930, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1957, 1958, 1959, 1973, 1982, 1983, 1984, 1985, 1986, 1991, 1992, 2002, 2003, 2004, 2005, 2006, 2007, 2013, 2044, 2045, 2047, 2048, 2051, 2053, 2054, 2055, 2058, 2064, 2067, 2071, 2073, 2074, 2075, 2076, 2078, 2081, 2082, 2083, 2084, 2086, 2089, 2091, 2092, 2093, 2094, 2099, 2100, 2101, 2102, 2103, 2104, 2107, 2109, 2111, 2114, 2115, 2117, 2119, 2125, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2140, 2143, 2145, 2146, 2147], "some": [0, 1, 3, 7, 8, 9, 14, 17, 19, 22, 23, 24, 28, 30, 33, 34, 35, 37, 40, 48, 50, 52, 53, 55, 58, 60, 61, 63, 64, 87, 89, 481, 490, 500, 571, 694, 753, 926, 946, 983, 1016, 1053, 1071, 1075, 1078, 1119, 1140, 1142, 1150, 1151, 1152, 1167, 1177, 1188, 1192, 1199, 1203, 1215, 1216, 1286, 1287, 1289, 1290, 1300, 1303, 1305, 1335, 1353, 1359, 1384, 1391, 1394, 1452, 1456, 1460, 1461, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1507, 1510, 1511, 1512, 1513, 1514, 1518, 1539, 1540, 1548, 1551, 1552, 1553, 1555, 1562, 1564, 1565, 1580, 1581, 1597, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1639, 1666, 1671, 1690, 1693, 1698, 1706, 1728, 1738, 1740, 1741, 1742, 1753, 1787, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1832, 1839, 1857, 1877, 1901, 1907, 1921, 1958, 1998, 2007, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2064, 2065, 2066, 2074, 2075, 2078, 2081, 2082, 2083, 2084, 2086, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2099, 2101, 2102, 2103, 2104, 2105, 2107, 2109, 2110, 2111, 2114, 2119, 2126, 2132, 2133, 2134, 2135, 2137, 2138, 2141, 2142, 2143, 2144, 2145], "oper": [0, 2, 4, 5, 7, 8, 11, 12, 15, 17, 18, 23, 27, 30, 33, 34, 35, 36, 41, 44, 45, 47, 48, 53, 56, 61, 63, 64, 65, 66, 81, 82, 84, 85, 86, 87, 88, 258, 317, 325, 339, 356, 406, 449, 450, 451, 452, 453, 490, 492, 497, 500, 503, 517, 519, 521, 593, 685, 691, 694, 746, 747, 748, 752, 753, 762, 763, 773, 774, 784, 790, 798, 799, 801, 802, 807, 832, 835, 870, 872, 873, 876, 900, 902, 911, 912, 914, 916, 917, 926, 937, 951, 952, 954, 956, 959, 961, 963, 965, 970, 973, 980, 983, 985, 993, 997, 999, 1019, 1023, 1035, 1052, 1061, 1093, 1098, 1099, 1100, 1101, 1114, 1119, 1120, 1121, 1122, 1132, 1137, 1155, 1167, 1170, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1188, 1190, 1191, 1196, 1237, 1241, 1247, 1248, 1289, 1300, 1301, 1305, 1306, 1309, 1319, 1332, 1342, 1345, 1346, 1359, 1360, 1369, 1376, 1384, 1389, 1394, 1405, 1406, 1439, 1442, 1456, 1461, 1466, 1467, 1468, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1502, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1520, 1534, 1539, 1544, 1545, 1546, 1548, 1561, 1563, 1567, 1568, 1569, 1576, 1591, 1592, 1594, 1596, 1600, 1622, 1623, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1639, 1640, 1641, 1642, 1646, 1647, 1649, 1650, 1654, 1658, 1665, 1671, 1673, 1680, 1681, 1691, 1693, 1697, 1706, 1712, 1713, 1724, 1725, 1726, 1727, 1737, 1738, 1741, 1742, 1783, 1789, 1794, 1798, 1799, 1824, 1830, 1841, 1845, 1854, 1855, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1877, 1883, 1900, 1901, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1932, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1957, 1973, 1991, 1995, 1996, 1998, 2007, 2010, 2040, 2041, 2043, 2044, 2048, 2051, 2055, 2062, 2074, 2076, 2077, 2078, 2080, 2082, 2083, 2089, 2090, 2091, 2092, 2093, 2096, 2097, 2101, 2103, 2105, 2107, 2108, 2109, 2110, 2113, 2115, 2117, 2118, 2121, 2130, 2132, 2133, 2134, 2136, 2137, 2138, 2139, 2140, 2144, 2145], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 20, 21, 23, 27, 29, 30, 32, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 74, 75, 76, 77, 84, 85, 86, 88, 90, 91, 92, 101, 123, 154, 158, 177, 195, 212, 323, 325, 339, 346, 347, 410, 419, 439, 452, 462, 490, 491, 492, 500, 503, 517, 521, 524, 548, 561, 587, 588, 589, 591, 592, 621, 685, 691, 694, 717, 718, 719, 720, 721, 722, 725, 734, 735, 736, 737, 738, 740, 753, 762, 765, 773, 774, 777, 778, 779, 784, 786, 790, 791, 792, 796, 799, 800, 801, 802, 804, 807, 810, 815, 823, 824, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 840, 841, 842, 843, 846, 865, 869, 870, 872, 873, 876, 889, 890, 891, 900, 901, 902, 904, 906, 907, 908, 909, 910, 911, 913, 914, 916, 917, 919, 920, 921, 922, 925, 926, 927, 928, 930, 931, 935, 936, 939, 943, 946, 951, 952, 953, 961, 963, 964, 971, 973, 983, 985, 986, 991, 993, 997, 998, 1001, 1003, 1016, 1018, 1019, 1020, 1023, 1025, 1026, 1028, 1031, 1042, 1043, 1046, 1047, 1053, 1057, 1061, 1063, 1064, 1065, 1067, 1069, 1070, 1075, 1076, 1086, 1088, 1089, 1095, 1100, 1101, 1102, 1111, 1119, 1120, 1121, 1122, 1132, 1133, 1134, 1137, 1139, 1147, 1149, 1153, 1155, 1162, 1164, 1167, 1171, 1174, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1193, 1196, 1201, 1202, 1203, 1204, 1209, 1212, 1213, 1216, 1217, 1219, 1229, 1233, 1234, 1240, 1241, 1243, 1247, 1248, 1249, 1250, 1264, 1276, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1309, 1311, 1313, 1321, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1342, 1343, 1344, 1346, 1347, 1353, 1354, 1355, 1359, 1360, 1361, 1362, 1367, 1370, 1376, 1379, 1380, 1383, 1384, 1389, 1390, 1391, 1394, 1401, 1402, 1415, 1416, 1434, 1439, 1441, 1442, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1507, 1508, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1534, 1535, 1536, 1541, 1542, 1543, 1544, 1545, 1548, 1550, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1580, 1582, 1585, 1588, 1596, 1597, 1598, 1599, 1601, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1619, 1621, 1622, 1623, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1654, 1656, 1663, 1665, 1666, 1673, 1679, 1680, 1681, 1691, 1693, 1699, 1706, 1710, 1712, 1713, 1721, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1781, 1782, 1783, 1787, 1788, 1789, 1791, 1792, 1794, 1795, 1798, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1855, 1857, 1858, 1859, 1862, 1863, 1864, 1866, 1868, 1870, 1872, 1873, 1879, 1886, 1889, 1894, 1895, 1897, 1898, 1899, 1901, 1903, 1904, 1906, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1925, 1930, 1933, 1934, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1954, 1957, 1958, 1959, 1973, 1977, 1980, 1984, 1986, 1991, 1994, 1995, 1996, 1998, 2004, 2007, 2012, 2013, 2019, 2020, 2021, 2022, 2030, 2032, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2051, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2071, 2072, 2073, 2074, 2077, 2080, 2082, 2083, 2084, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2103, 2105, 2107, 2108, 2109, 2110, 2111, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2139, 2140, 2141, 2142, 2144, 2146, 2149, 2152], "float": [0, 1, 3, 11, 19, 23, 24, 27, 28, 32, 33, 35, 37, 41, 50, 52, 53, 55, 62, 64, 90, 157, 158, 223, 317, 319, 321, 325, 337, 404, 479, 485, 503, 690, 692, 697, 699, 703, 737, 740, 743, 744, 745, 749, 750, 751, 753, 760, 761, 766, 767, 768, 769, 770, 775, 776, 777, 778, 779, 780, 782, 784, 785, 786, 790, 798, 799, 800, 807, 825, 828, 839, 847, 849, 863, 868, 869, 872, 873, 876, 891, 930, 931, 952, 953, 961, 968, 971, 975, 976, 985, 994, 1000, 1001, 1005, 1015, 1089, 1102, 1113, 1114, 1120, 1121, 1122, 1124, 1137, 1155, 1164, 1165, 1166, 1167, 1169, 1201, 1203, 1232, 1236, 1246, 1247, 1248, 1251, 1252, 1271, 1278, 1279, 1281, 1282, 1283, 1284, 1287, 1289, 1305, 1306, 1309, 1313, 1315, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1367, 1376, 1378, 1380, 1389, 1410, 1415, 1433, 1434, 1438, 1439, 1440, 1441, 1442, 1445, 1448, 1452, 1456, 1462, 1463, 1464, 1466, 1469, 1470, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1496, 1501, 1502, 1503, 1506, 1507, 1508, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1534, 1536, 1540, 1548, 1553, 1554, 1556, 1557, 1562, 1563, 1567, 1570, 1571, 1572, 1573, 1574, 1580, 1585, 1586, 1588, 1591, 1592, 1594, 1596, 1597, 1598, 1601, 1602, 1603, 1636, 1637, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1651, 1656, 1665, 1691, 1693, 1698, 1706, 1725, 1737, 1738, 1744, 1745, 1749, 1751, 1754, 1764, 1765, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1783, 1784, 1788, 1794, 1795, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1851, 1854, 1858, 1859, 1860, 1861, 1873, 1877, 1878, 1898, 1899, 1902, 1905, 1914, 1915, 1917, 1918, 1920, 1955, 1958, 1962, 1965, 1980, 1982, 1995, 2044, 2045, 2046, 2047, 2048, 2051, 2054, 2060, 2064, 2065, 2067, 2068, 2071, 2073, 2074, 2078, 2081, 2083, 2089, 2092, 2097, 2099, 2100, 2102, 2103, 2104, 2105, 2109, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2123, 2124, 2132, 2136, 2138, 2140, 2144, 2150], "datatyp": [0, 19, 64, 891, 1286, 1289, 1548, 1741, 1742, 1901, 2092, 2099, 2114], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 19, 23, 24, 29, 30, 32, 33, 35, 36, 37, 40, 44, 45, 47, 48, 52, 53, 55, 56, 58, 60, 61, 63, 64, 92, 101, 102, 117, 133, 134, 137, 149, 150, 153, 154, 163, 164, 169, 170, 200, 201, 202, 211, 238, 243, 247, 248, 249, 259, 278, 279, 286, 287, 288, 289, 295, 296, 297, 298, 299, 300, 307, 308, 311, 312, 313, 314, 317, 319, 325, 328, 348, 356, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 382, 383, 398, 399, 412, 416, 419, 442, 443, 454, 455, 459, 460, 491, 492, 502, 524, 565, 566, 567, 568, 584, 587, 620, 621, 622, 625, 626, 685, 690, 699, 743, 744, 745, 746, 747, 748, 765, 822, 835, 872, 876, 882, 889, 890, 895, 901, 904, 906, 907, 908, 916, 925, 926, 927, 928, 930, 931, 935, 936, 955, 956, 958, 959, 960, 962, 967, 983, 990, 1000, 1015, 1016, 1019, 1023, 1025, 1032, 1043, 1053, 1064, 1107, 1113, 1114, 1115, 1123, 1124, 1125, 1139, 1146, 1164, 1165, 1166, 1167, 1170, 1177, 1178, 1179, 1180, 1183, 1187, 1202, 1203, 1205, 1230, 1231, 1232, 1244, 1245, 1246, 1255, 1256, 1258, 1259, 1264, 1266, 1278, 1287, 1289, 1293, 1301, 1310, 1312, 1313, 1314, 1316, 1317, 1322, 1326, 1340, 1342, 1345, 1346, 1359, 1367, 1368, 1369, 1371, 1373, 1374, 1377, 1378, 1384, 1387, 1388, 1392, 1393, 1397, 1401, 1416, 1433, 1435, 1445, 1448, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1484, 1494, 1499, 1501, 1513, 1548, 1549, 1558, 1577, 1592, 1596, 1600, 1609, 1629, 1630, 1631, 1656, 1665, 1706, 1725, 1728, 1738, 1744, 1745, 1746, 1747, 1770, 1780, 1792, 1796, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1836, 1837, 1843, 1845, 1873, 1877, 1893, 1898, 1901, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1955, 1956, 1973, 1979, 1983, 1985, 1991, 2004, 2005, 2010, 2011, 2013, 2020, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2057, 2059, 2064, 2065, 2066, 2067, 2071, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2089, 2090, 2091, 2092, 2094, 2097, 2099, 2101, 2104, 2105, 2109, 2110, 2111, 2115, 2116, 2119, 2120, 2121, 2127, 2130, 2132, 2133, 2134, 2136, 2137, 2138, 2140, 2143, 2144, 2145, 2146, 2149], "lower": [0, 1, 8, 12, 24, 28, 35, 52, 53, 799, 801, 870, 962, 967, 974, 975, 976, 978, 1133, 1134, 1196, 1203, 1207, 1250, 1251, 1319, 1326, 1328, 1336, 1337, 1344, 1347, 1352, 1390, 1434, 1441, 1452, 1567, 1608, 1609, 1610, 1629, 1630, 1631, 1704, 1705, 1706, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1832, 1839, 1841, 1856, 1858, 1878, 1893, 1901, 1938, 1982, 1983, 1984, 2044, 2045, 2047, 2055, 2062, 2068, 2073, 2075, 2089, 2094, 2100, 2104, 2115, 2121, 2140, 2145], "point": [0, 1, 7, 8, 9, 11, 23, 24, 27, 29, 30, 32, 33, 37, 44, 47, 48, 53, 55, 64, 90, 91, 92, 157, 158, 325, 337, 343, 485, 490, 503, 703, 743, 744, 745, 746, 747, 748, 749, 754, 755, 756, 757, 758, 759, 760, 761, 764, 766, 767, 768, 769, 770, 780, 782, 784, 785, 786, 790, 801, 807, 828, 829, 830, 831, 834, 839, 863, 872, 873, 876, 891, 920, 922, 923, 924, 930, 931, 952, 953, 961, 983, 1000, 1001, 1005, 1067, 1069, 1078, 1083, 1084, 1120, 1121, 1122, 1165, 1166, 1167, 1236, 1243, 1247, 1248, 1252, 1271, 1286, 1289, 1305, 1306, 1313, 1315, 1336, 1337, 1360, 1362, 1367, 1376, 1389, 1415, 1416, 1439, 1441, 1448, 1457, 1458, 1459, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1494, 1541, 1542, 1543, 1548, 1600, 1601, 1619, 1645, 1654, 1665, 1706, 1725, 1738, 1746, 1747, 1794, 1803, 1842, 1858, 1859, 1860, 1864, 1873, 1886, 1898, 1899, 1905, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1995, 1996, 2043, 2044, 2046, 2047, 2048, 2051, 2060, 2068, 2073, 2074, 2075, 2078, 2080, 2084, 2085, 2086, 2089, 2092, 2103, 2104, 2105, 2107, 2109, 2110, 2114, 2117, 2119, 2120, 2121, 2124, 2131, 2133, 2134, 2136, 2138, 2141, 2144, 2147, 2150], "lower_precision_fp": 0, "half": [0, 1, 10, 24, 35, 621, 994, 1133, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1289, 1352, 1358, 1475, 1476, 1477, 1478, 1479, 1480, 1495, 1496, 1498, 1548, 1649, 1650, 1653, 1706, 1746, 1747, 1800, 1832, 1886, 1954, 2065, 2089, 2092, 2097, 2114, 2116, 2117, 2120], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 19, 23, 24, 28, 30, 33, 34, 35, 45, 47, 48, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 340, 490, 593, 621, 765, 799, 803, 852, 871, 889, 911, 914, 916, 930, 931, 950, 952, 961, 993, 997, 1061, 1062, 1071, 1114, 1119, 1120, 1140, 1162, 1165, 1166, 1173, 1177, 1180, 1181, 1182, 1188, 1205, 1213, 1216, 1229, 1247, 1248, 1287, 1289, 1290, 1297, 1300, 1305, 1309, 1336, 1337, 1348, 1361, 1452, 1460, 1491, 1494, 1510, 1511, 1512, 1548, 1549, 1550, 1558, 1559, 1577, 1600, 1607, 1648, 1666, 1724, 1728, 1738, 1740, 1741, 1742, 1754, 1780, 1798, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1851, 1866, 1870, 1889, 1897, 1898, 1901, 1958, 1970, 1996, 2007, 2040, 2042, 2043, 2044, 2046, 2047, 2051, 2054, 2055, 2064, 2065, 2066, 2074, 2075, 2078, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2103, 2104, 2107, 2109, 2110, 2113, 2114, 2116, 2117, 2121, 2123, 2125, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2142, 2143, 2144, 2145, 2146, 2147], "linear": [0, 2, 9, 24, 28, 29, 32, 33, 34, 35, 52, 53, 55, 57, 59, 61, 64, 66, 435, 476, 477, 478, 479, 480, 483, 716, 725, 733, 734, 770, 798, 799, 800, 802, 822, 865, 869, 870, 872, 873, 921, 976, 1023, 1119, 1176, 1178, 1186, 1188, 1243, 1289, 1293, 1301, 1315, 1321, 1326, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1350, 1352, 1380, 1441, 1460, 1466, 1489, 1497, 1498, 1506, 1533, 1548, 1550, 1564, 1566, 1567, 1568, 1576, 1578, 1585, 1588, 1592, 1594, 1596, 1599, 1601, 1643, 1652, 1653, 1665, 1700, 1709, 1714, 1725, 1728, 1738, 1750, 1751, 1753, 1754, 1755, 1759, 1769, 1770, 1771, 1772, 1773, 1775, 1776, 1777, 1778, 1779, 1787, 1788, 1791, 1836, 1839, 1847, 1858, 1995, 2007, 2013, 2043, 2045, 2046, 2052, 2055, 2057, 2059, 2067, 2073, 2078, 2080, 2081, 2083, 2084, 2089, 2094, 2097, 2099, 2100, 2101, 2104, 2105, 2106, 2107, 2109, 2127, 2133, 2143, 2145], "layer": [0, 8, 24, 28, 30, 32, 33, 34, 55, 58, 739, 740, 765, 852, 869, 939, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1486, 1487, 1488, 1492, 1499, 1500, 1502, 1510, 1511, 1512, 1518, 1519, 1520, 1533, 1535, 1541, 1542, 1543, 1554, 1555, 1563, 1564, 1566, 1577, 1588, 1592, 1593, 1594, 1595, 1596, 1668, 1703, 1737, 1738, 1746, 1747, 1753, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 2043, 2073, 2078, 2081, 2083, 2084, 2088, 2089, 2094, 2097, 2099, 2101, 2104, 2105, 2107, 2114, 2125], "convolut": [0, 1, 2, 52, 743, 744, 745, 746, 747, 748, 777, 778, 779, 983, 1299, 1475, 1476, 1477, 1478, 1479, 1480, 1486, 1487, 1488, 1492, 1524, 1525, 1526, 1527, 1528, 1529, 1560, 1561, 1567, 1597, 1598, 1600, 1629, 1630, 1631, 1632, 1633, 1634, 1653, 1654, 1746, 1747, 1748, 1749, 1901, 2043, 2045, 2057, 2073, 2077, 2078, 2086, 2089, 2100, 2103, 2104, 2107, 2140], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 44, 45, 47, 48, 50, 52, 53, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 75, 83, 86, 87, 88, 89, 90, 91, 92, 101, 154, 237, 258, 323, 325, 339, 340, 343, 381, 406, 452, 475, 485, 490, 503, 517, 521, 548, 584, 593, 621, 685, 694, 695, 696, 702, 740, 761, 765, 766, 768, 769, 770, 784, 787, 788, 790, 791, 792, 798, 799, 800, 801, 802, 806, 807, 822, 823, 824, 825, 828, 829, 830, 831, 834, 850, 865, 869, 870, 871, 872, 873, 876, 885, 886, 897, 898, 899, 901, 904, 911, 914, 916, 917, 919, 920, 921, 922, 923, 924, 926, 930, 931, 937, 939, 950, 952, 961, 962, 964, 965, 967, 970, 983, 985, 990, 994, 997, 1000, 1001, 1004, 1005, 1018, 1019, 1023, 1024, 1026, 1031, 1035, 1044, 1055, 1061, 1064, 1065, 1075, 1079, 1086, 1093, 1102, 1107, 1111, 1114, 1119, 1120, 1121, 1122, 1135, 1136, 1137, 1138, 1140, 1142, 1147, 1149, 1155, 1158, 1160, 1161, 1165, 1166, 1167, 1171, 1176, 1177, 1182, 1184, 1186, 1187, 1188, 1189, 1193, 1196, 1199, 1201, 1202, 1203, 1207, 1209, 1212, 1213, 1216, 1226, 1233, 1243, 1247, 1248, 1250, 1252, 1266, 1278, 1279, 1281, 1282, 1285, 1286, 1287, 1289, 1290, 1293, 1296, 1297, 1300, 1303, 1305, 1306, 1311, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1356, 1359, 1360, 1361, 1362, 1371, 1372, 1373, 1374, 1376, 1377, 1379, 1381, 1382, 1384, 1387, 1390, 1391, 1392, 1395, 1397, 1402, 1415, 1416, 1417, 1434, 1438, 1439, 1440, 1441, 1442, 1452, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1469, 1470, 1471, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1494, 1499, 1500, 1501, 1502, 1507, 1510, 1511, 1512, 1513, 1514, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1562, 1564, 1566, 1577, 1580, 1581, 1582, 1588, 1592, 1594, 1596, 1597, 1598, 1600, 1601, 1607, 1609, 1610, 1611, 1619, 1625, 1626, 1627, 1637, 1638, 1645, 1646, 1647, 1648, 1654, 1665, 1666, 1690, 1693, 1695, 1698, 1706, 1724, 1725, 1726, 1727, 1728, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1752, 1753, 1754, 1757, 1759, 1766, 1780, 1784, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1819, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1835, 1838, 1839, 1851, 1857, 1858, 1864, 1873, 1876, 1877, 1884, 1886, 1897, 1898, 1901, 1930, 1931, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1950, 1953, 1954, 1957, 1958, 1968, 1970, 1974, 1976, 1977, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1991, 1995, 1996, 1998, 2001, 2002, 2003, 2007, 2012, 2013, 2014, 2030, 2032, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2053, 2054, 2055, 2057, 2059, 2060, 2063, 2064, 2065, 2066, 2067, 2068, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2111, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2124, 2126, 2127, 2129, 2130, 2131, 2132, 2134, 2135, 2137, 2138, 2139, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2150], "much": [0, 4, 7, 9, 15, 23, 24, 52, 154, 904, 920, 925, 1075, 1193, 1202, 1325, 1326, 1353, 1362, 1491, 1738, 1770, 1839, 2044, 2075, 2078, 2084, 2086, 2089, 2094, 2102, 2109, 2110, 2114, 2132, 2133, 2136, 2149], "faster": [0, 2, 8, 11, 23, 24, 28, 920, 930, 931, 985, 1176, 1218, 1319, 1320, 1325, 1326, 1330, 1335, 1343, 1345, 1347, 1350, 1353, 1355, 1359, 1362, 1565, 1582, 1695, 1706, 1712, 1738, 1744, 1745, 1753, 1807, 1808, 1825, 1826, 1901, 1940, 1941, 1942, 1944, 1945, 2055, 2057, 2075, 2078, 2086, 2101, 2104, 2114, 2119, 2126, 2134, 2136, 2141], "reduct": [0, 2, 11, 28, 34, 55, 325, 517, 521, 983, 1335, 1367, 1441, 1460, 1461, 1467, 1481, 1483, 1491, 1501, 1507, 1508, 1513, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1598, 1626, 1627, 1635, 1637, 1638, 1646, 1651, 1662, 1663, 1666, 1667, 1678, 1686, 1687, 1688, 1689, 1690, 1698, 1710, 1711, 1722, 1723, 1738, 1858, 1935, 2045, 2065, 2071, 2080, 2086, 2102, 2104, 2139, 2145], "often": [0, 2, 4, 7, 8, 14, 23, 28, 33, 35, 48, 55, 58, 64, 154, 904, 925, 1207, 1216, 1305, 1336, 1337, 1346, 1395, 1490, 1510, 1511, 1512, 1619, 1627, 1645, 1654, 1728, 1753, 1841, 2047, 2055, 2075, 2078, 2083, 2088, 2089, 2091, 2092, 2093, 2097, 2102, 2109, 2119, 2133, 2135, 2136, 2143, 2145], "requir": [0, 1, 5, 8, 9, 11, 14, 15, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 46, 47, 52, 53, 55, 58, 60, 63, 64, 123, 154, 225, 339, 462, 490, 492, 500, 517, 519, 521, 564, 799, 801, 832, 835, 891, 900, 904, 911, 913, 916, 917, 919, 920, 921, 922, 923, 924, 925, 983, 985, 1016, 1074, 1119, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1160, 1161, 1184, 1188, 1230, 1286, 1303, 1329, 1360, 1362, 1376, 1483, 1490, 1491, 1592, 1593, 1594, 1595, 1596, 1598, 1646, 1706, 1728, 1738, 1740, 1757, 1759, 1761, 1805, 1810, 1845, 1942, 1954, 1995, 2007, 2042, 2044, 2047, 2049, 2051, 2054, 2057, 2064, 2066, 2067, 2071, 2074, 2075, 2077, 2078, 2080, 2081, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2091, 2093, 2094, 2097, 2098, 2099, 2102, 2104, 2105, 2109, 2110, 2111, 2114, 2117, 2119, 2121, 2125, 2126, 2127, 2130, 2131, 2133, 2134, 2135, 2136, 2141, 2143, 2146], "dynam": [0, 12, 14, 15, 23, 53, 65, 66, 67, 68, 71, 72, 74, 77, 78, 685, 734, 738, 765, 766, 767, 768, 769, 770, 800, 807, 823, 833, 835, 838, 855, 861, 862, 863, 864, 869, 870, 983, 1196, 1197, 1199, 1202, 1209, 1297, 1303, 1305, 1361, 1753, 2046, 2047, 2048, 2073, 2078, 2089, 2092, 2096, 2097, 2099, 2101, 2102, 2105, 2126, 2127, 2133, 2134, 2136, 2142, 2145], "rang": [0, 1, 3, 11, 23, 28, 29, 32, 33, 35, 37, 47, 48, 51, 52, 53, 59, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 91, 305, 485, 689, 766, 768, 770, 801, 828, 829, 830, 831, 832, 834, 835, 836, 896, 953, 978, 988, 1080, 1081, 1089, 1119, 1169, 1186, 1201, 1207, 1213, 1250, 1251, 1252, 1356, 1367, 1382, 1391, 1410, 1441, 1452, 1483, 1493, 1495, 1496, 1500, 1506, 1519, 1538, 1550, 1555, 1559, 1564, 1566, 1582, 1583, 1584, 1588, 1649, 1650, 1654, 1712, 1738, 1745, 1828, 1829, 1831, 1832, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1858, 1937, 1993, 1994, 2044, 2045, 2047, 2071, 2075, 2077, 2078, 2083, 2085, 2089, 2091, 2092, 2099, 2100, 2101, 2103, 2104, 2107, 2108, 2115, 2117, 2119, 2120, 2121, 2123, 2130, 2131, 2132, 2134, 2143, 2145], "tri": [0, 2, 3, 7, 23, 35, 40, 64, 89, 584, 1289, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2046, 2047, 2078, 2083, 2099, 2102, 2133, 2135, 2136, 2138], "match": [0, 1, 3, 12, 28, 30, 32, 33, 35, 47, 52, 55, 64, 66, 74, 75, 86, 90, 154, 317, 319, 325, 477, 478, 503, 504, 584, 587, 698, 704, 784, 799, 800, 801, 865, 889, 904, 925, 930, 931, 997, 1015, 1018, 1032, 1033, 1034, 1064, 1111, 1119, 1176, 1188, 1203, 1266, 1289, 1303, 1305, 1322, 1361, 1383, 1415, 1482, 1491, 1548, 1554, 1601, 1626, 1627, 1665, 1692, 1699, 1706, 1725, 1738, 1759, 1789, 1795, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1859, 1893, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1975, 1991, 2007, 2012, 2044, 2047, 2051, 2054, 2065, 2067, 2075, 2076, 2078, 2081, 2085, 2089, 2094, 2097, 2099, 2101, 2102, 2104, 2105, 2106, 2109, 2117, 2121, 2124, 2133, 2136, 2144, 2145], "each": [0, 1, 2, 5, 9, 14, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 40, 45, 48, 50, 51, 52, 53, 55, 56, 58, 60, 61, 62, 64, 82, 83, 85, 88, 90, 101, 123, 157, 158, 402, 406, 497, 517, 519, 521, 549, 611, 621, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 691, 698, 700, 701, 704, 740, 765, 798, 803, 806, 850, 852, 870, 872, 873, 876, 888, 897, 898, 899, 900, 902, 903, 904, 911, 913, 916, 917, 925, 951, 954, 963, 967, 971, 972, 974, 977, 981, 983, 985, 988, 1005, 1029, 1030, 1034, 1064, 1067, 1069, 1075, 1077, 1082, 1085, 1091, 1096, 1097, 1098, 1099, 1102, 1103, 1114, 1117, 1119, 1136, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1154, 1156, 1160, 1161, 1163, 1168, 1173, 1178, 1179, 1183, 1187, 1188, 1201, 1203, 1230, 1243, 1249, 1251, 1252, 1253, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1289, 1305, 1306, 1311, 1343, 1361, 1362, 1377, 1379, 1387, 1389, 1390, 1391, 1392, 1395, 1397, 1405, 1406, 1415, 1434, 1440, 1442, 1452, 1457, 1460, 1461, 1465, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1499, 1500, 1502, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1528, 1529, 1533, 1535, 1539, 1540, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1562, 1564, 1566, 1577, 1580, 1581, 1583, 1588, 1591, 1597, 1598, 1600, 1609, 1624, 1626, 1627, 1632, 1633, 1634, 1637, 1638, 1640, 1641, 1642, 1645, 1646, 1647, 1651, 1654, 1664, 1666, 1690, 1691, 1693, 1695, 1698, 1706, 1719, 1728, 1738, 1746, 1747, 1780, 1781, 1783, 1793, 1794, 1795, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1850, 1854, 1855, 1858, 1865, 1873, 1878, 1879, 1884, 1888, 1893, 1901, 1905, 1916, 1922, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1957, 1958, 1974, 1976, 1977, 1980, 1991, 1992, 1993, 2001, 2007, 2008, 2036, 2042, 2046, 2047, 2051, 2053, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2088, 2089, 2091, 2092, 2093, 2094, 2097, 2099, 2101, 2103, 2104, 2109, 2110, 2111, 2114, 2115, 2117, 2119, 2120, 2121, 2124, 2125, 2126, 2129, 2130, 2132, 2134, 2136, 2137, 2138, 2139, 2141, 2142, 2143, 2144, 2145, 2147], "its": [0, 1, 4, 5, 7, 8, 9, 12, 14, 15, 18, 19, 23, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 47, 48, 50, 53, 55, 62, 63, 64, 66, 68, 83, 84, 85, 154, 262, 462, 491, 492, 508, 517, 519, 521, 587, 588, 589, 621, 685, 832, 835, 885, 886, 887, 889, 890, 891, 904, 909, 910, 927, 928, 935, 936, 937, 975, 976, 983, 993, 994, 1001, 1005, 1024, 1053, 1055, 1064, 1079, 1102, 1106, 1109, 1119, 1122, 1167, 1173, 1177, 1178, 1179, 1182, 1187, 1203, 1251, 1252, 1256, 1269, 1289, 1300, 1325, 1326, 1330, 1335, 1342, 1344, 1347, 1348, 1353, 1359, 1384, 1394, 1413, 1417, 1460, 1462, 1463, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1510, 1511, 1512, 1548, 1549, 1558, 1580, 1588, 1596, 1654, 1665, 1693, 1699, 1728, 1733, 1734, 1739, 1740, 1741, 1742, 1746, 1747, 1748, 1750, 1754, 1755, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1781, 1787, 1791, 1795, 1801, 1805, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1848, 1873, 1877, 1881, 1882, 1898, 1899, 1922, 1932, 1959, 1979, 1980, 1982, 1990, 2000, 2005, 2014, 2044, 2046, 2047, 2051, 2057, 2059, 2060, 2064, 2074, 2075, 2076, 2078, 2080, 2081, 2083, 2084, 2086, 2089, 2091, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2109, 2110, 2111, 2114, 2117, 2118, 2120, 2124, 2125, 2126, 2127, 2130, 2132, 2133, 2134, 2135, 2136, 2139, 2141, 2147, 2148], "appropri": [0, 7, 8, 9, 28, 29, 30, 35, 55, 63, 64, 65, 490, 906, 937, 1005, 1064, 1216, 1305, 1901, 2047, 2048, 2051, 2066, 2078, 2086, 2091, 2094, 2097, 2104, 2107, 2109, 2110, 2111, 2116, 2133, 2136, 2141, 2146], "ordinarili": [0, 1213, 2074], "train": [0, 1, 12, 15, 23, 24, 28, 29, 30, 31, 32, 33, 37, 45, 46, 47, 48, 55, 58, 59, 64, 717, 718, 719, 720, 721, 722, 723, 724, 725, 735, 736, 737, 738, 807, 809, 847, 849, 866, 867, 868, 870, 872, 873, 874, 926, 988, 997, 1063, 1064, 1067, 1069, 1076, 1186, 1289, 1294, 1301, 1304, 1305, 1452, 1456, 1462, 1463, 1464, 1483, 1484, 1485, 1490, 1491, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1548, 1554, 1555, 1567, 1588, 1596, 1620, 1624, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1704, 1705, 1706, 1738, 1754, 1757, 1759, 1788, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1832, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2042, 2044, 2045, 2051, 2057, 2060, 2073, 2075, 2078, 2080, 2083, 2090, 2092, 2094, 2096, 2099, 2101, 2102, 2103, 2107, 2109, 2111, 2119, 2126, 2129, 2130, 2131, 2133, 2134, 2138, 2139, 2140, 2142, 2145], "gradscal": [0, 2074, 2078, 2085], "togeth": [0, 3, 9, 23, 28, 33, 34, 35, 56, 61, 64, 765, 1061, 1119, 1176, 1178, 1182, 1186, 1187, 1229, 1233, 1329, 1499, 1518, 1564, 1665, 1738, 1744, 1980, 2057, 2074, 2081, 2082, 2083, 2084, 2088, 2089, 2104, 2109, 2110, 2111, 2114, 2119, 2131, 2133, 2135, 2136, 2141, 2149], "shown": [0, 12, 24, 39, 48, 52, 1061, 1071, 1520, 1759, 1801, 1839, 1905, 2044, 2047, 2074, 2078, 2081, 2083, 2089, 2097, 2104, 2114, 2127, 2131, 2133, 2134, 2137], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 14, 17, 18, 19, 20, 23, 24, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 50, 51, 53, 55, 56, 57, 59, 60, 61, 63, 66, 74, 75, 90, 91, 92, 195, 212, 237, 246, 258, 264, 293, 315, 317, 319, 321, 325, 339, 356, 405, 406, 419, 449, 450, 451, 452, 453, 475, 485, 487, 490, 491, 492, 497, 500, 503, 517, 519, 521, 527, 541, 548, 562, 564, 584, 585, 587, 588, 589, 590, 591, 592, 593, 611, 621, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 725, 733, 734, 739, 743, 744, 745, 746, 747, 748, 750, 751, 753, 761, 762, 763, 765, 766, 767, 768, 769, 770, 777, 778, 779, 790, 798, 799, 800, 802, 804, 818, 819, 820, 821, 822, 823, 824, 825, 833, 847, 865, 870, 871, 872, 873, 876, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 926, 927, 933, 935, 936, 937, 939, 946, 951, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 985, 988, 990, 991, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1015, 1035, 1061, 1062, 1067, 1069, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1184, 1186, 1188, 1201, 1202, 1203, 1213, 1216, 1230, 1231, 1232, 1236, 1243, 1246, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1260, 1264, 1266, 1274, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1413, 1415, 1416, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1612, 1619, 1621, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1654, 1656, 1690, 1692, 1693, 1696, 1697, 1706, 1725, 1728, 1737, 1738, 1739, 1746, 1747, 1753, 1754, 1755, 1757, 1759, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1846, 1848, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1868, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1893, 1895, 1896, 1897, 1898, 1899, 1902, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1930, 1932, 1933, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1952, 1953, 1955, 1957, 1958, 1960, 1961, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2051, 2053, 2054, 2058, 2059, 2060, 2065, 2066, 2067, 2071, 2073, 2075, 2076, 2077, 2078, 2083, 2084, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2096, 2098, 2101, 2102, 2103, 2104, 2105, 2109, 2111, 2113, 2114, 2115, 2117, 2118, 2119, 2120, 2121, 2123, 2124, 2125, 2127, 2130, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2142, 2143, 2144, 2145, 2146, 2149], "recip": [0, 3, 32, 55, 1548, 1738, 1761, 2074, 2089, 2135], "howev": [0, 2, 3, 4, 5, 7, 9, 14, 15, 23, 24, 28, 32, 35, 37, 44, 47, 52, 53, 55, 56, 57, 59, 60, 63, 64, 66, 71, 75, 83, 86, 87, 88, 262, 485, 549, 906, 919, 1018, 1043, 1064, 1107, 1109, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1176, 1177, 1181, 1182, 1184, 1187, 1188, 1193, 1202, 1213, 1289, 1292, 1293, 1300, 1302, 1329, 1344, 1345, 1347, 1361, 1362, 1379, 1460, 1462, 1463, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1491, 1548, 1629, 1630, 1631, 1654, 1728, 1738, 1780, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1940, 1941, 1942, 1943, 1944, 1945, 2007, 2012, 2020, 2043, 2047, 2067, 2074, 2075, 2078, 2081, 2087, 2089, 2091, 2093, 2094, 2095, 2096, 2099, 2102, 2109, 2111, 2114, 2120, 2130, 2132, 2133, 2134, 2135, 2136, 2137], "modular": [0, 2074, 2097], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 19, 22, 23, 24, 28, 30, 32, 33, 35, 36, 37, 40, 44, 46, 47, 48, 52, 55, 56, 60, 63, 64, 65, 86, 200, 225, 258, 317, 325, 462, 490, 519, 521, 560, 607, 621, 685, 694, 823, 824, 825, 872, 903, 911, 914, 916, 917, 919, 921, 925, 930, 943, 954, 965, 977, 983, 998, 999, 1001, 1003, 1016, 1018, 1019, 1029, 1043, 1053, 1054, 1055, 1061, 1062, 1064, 1075, 1077, 1082, 1096, 1097, 1119, 1158, 1162, 1167, 1170, 1173, 1180, 1181, 1183, 1202, 1203, 1208, 1213, 1215, 1216, 1217, 1228, 1252, 1286, 1289, 1292, 1293, 1299, 1300, 1302, 1303, 1305, 1311, 1320, 1321, 1325, 1326, 1327, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1345, 1347, 1348, 1351, 1352, 1353, 1359, 1361, 1362, 1367, 1384, 1394, 1410, 1452, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1513, 1518, 1544, 1545, 1546, 1548, 1555, 1564, 1594, 1596, 1601, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1646, 1654, 1656, 1665, 1671, 1693, 1706, 1724, 1725, 1726, 1727, 1728, 1738, 1753, 1756, 1757, 1759, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1816, 1820, 1823, 1824, 1825, 1826, 1827, 1832, 1857, 1877, 1880, 1901, 1907, 1925, 1938, 1954, 1958, 1959, 1982, 1995, 2012, 2020, 2042, 2043, 2044, 2046, 2047, 2051, 2053, 2054, 2055, 2057, 2060, 2062, 2066, 2071, 2074, 2075, 2076, 2077, 2078, 2081, 2082, 2083, 2089, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2107, 2109, 2111, 2114, 2116, 2123, 2127, 2130, 2132, 2133, 2135, 2136, 2139, 2143, 2145, 2146, 2147, 2149], "separ": [0, 1, 3, 9, 11, 14, 20, 23, 28, 30, 32, 47, 48, 55, 56, 58, 61, 63, 64, 740, 765, 901, 916, 1119, 1136, 1138, 1144, 1145, 1148, 1149, 1154, 1156, 1176, 1196, 1300, 1335, 1350, 1502, 1510, 1511, 1512, 1554, 1556, 1673, 1795, 1870, 2042, 2045, 2047, 2051, 2053, 2071, 2074, 2075, 2077, 2078, 2082, 2084, 2094, 2097, 2101, 2102, 2110, 2114, 2115, 2119, 2130, 2143, 2145], "desir": [0, 1, 3, 23, 28, 34, 35, 55, 64, 90, 91, 92, 159, 174, 176, 179, 182, 183, 184, 199, 210, 213, 244, 258, 271, 301, 329, 397, 449, 450, 451, 452, 453, 501, 503, 504, 524, 529, 548, 549, 550, 564, 584, 587, 607, 608, 621, 627, 799, 876, 890, 952, 961, 980, 1065, 1066, 1090, 1091, 1100, 1101, 1120, 1121, 1122, 1132, 1137, 1155, 1171, 1173, 1174, 1175, 1247, 1248, 1289, 1309, 1360, 1376, 1382, 1389, 1404, 1411, 1415, 1416, 1429, 1439, 1441, 1442, 1460, 1461, 1548, 1599, 1627, 1673, 1712, 1713, 1728, 1780, 1794, 1798, 1799, 1805, 1848, 1855, 1858, 1859, 1860, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1906, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1934, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1957, 1973, 1984, 1986, 2030, 2031, 2035, 2036, 2040, 2041, 2065, 2066, 2067, 2074, 2075, 2078, 2082, 2087, 2089, 2094, 2108, 2109, 2115, 2116, 2117, 2120, 2145], "As": [0, 1, 8, 20, 24, 28, 30, 33, 35, 52, 53, 55, 58, 59, 64, 258, 490, 965, 1119, 1293, 1321, 1325, 1326, 1336, 1337, 1348, 1353, 1452, 1486, 1487, 1488, 1492, 1513, 1548, 1580, 1724, 1793, 1799, 2041, 2044, 2046, 2047, 2054, 2067, 2071, 2075, 2078, 2081, 2083, 2084, 2085, 2089, 2092, 2094, 2095, 2096, 2097, 2099, 2102, 2108, 2109, 2110, 2111, 2113, 2114, 2123, 2126, 2129, 2131, 2133, 2136, 2137, 2138, 2145], "section": [0, 1, 7, 23, 35, 37, 39, 53, 59, 64, 88, 123, 1075, 1119, 1243, 1484, 1499, 1518, 1546, 1564, 1637, 1783, 1974, 2044, 2045, 2046, 2047, 2048, 2062, 2064, 2066, 2067, 2074, 2075, 2078, 2080, 2081, 2082, 2085, 2086, 2087, 2089, 2091, 2103, 2110, 2119, 2130, 2131, 2133, 2134, 2136, 2137, 2138, 2139, 2143, 2145], "infer": [0, 1, 2, 3, 5, 11, 15, 30, 33, 35, 47, 55, 584, 621, 872, 873, 876, 890, 891, 926, 988, 1034, 1173, 1174, 1202, 1252, 1273, 1287, 1290, 1299, 1304, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1554, 1601, 1665, 1692, 1728, 1792, 1827, 1839, 1873, 1880, 1898, 1899, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 1990, 2043, 2044, 2046, 2047, 2051, 2065, 2067, 2078, 2089, 2099, 2103, 2104, 2105, 2107, 2114, 2126, 2129, 2130, 2132, 2133, 2136, 2138, 2142], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 45, 47, 48, 52, 53, 55, 59, 60, 63, 64, 84, 85, 86, 123, 258, 315, 325, 327, 339, 356, 449, 450, 451, 452, 453, 462, 485, 490, 492, 517, 519, 521, 561, 587, 588, 589, 591, 592, 618, 621, 685, 700, 701, 740, 743, 744, 745, 746, 748, 777, 778, 779, 784, 790, 791, 792, 797, 799, 809, 822, 825, 829, 830, 833, 837, 853, 860, 869, 889, 906, 908, 911, 914, 915, 916, 917, 919, 921, 930, 937, 939, 946, 952, 953, 961, 983, 991, 997, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1018, 1019, 1023, 1030, 1032, 1034, 1035, 1053, 1061, 1062, 1064, 1086, 1116, 1120, 1122, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1165, 1166, 1170, 1171, 1172, 1177, 1188, 1201, 1203, 1215, 1216, 1242, 1243, 1247, 1248, 1252, 1260, 1265, 1270, 1278, 1287, 1289, 1292, 1293, 1301, 1305, 1306, 1309, 1320, 1325, 1326, 1328, 1329, 1330, 1331, 1333, 1335, 1336, 1337, 1338, 1348, 1350, 1351, 1353, 1354, 1361, 1362, 1379, 1384, 1452, 1478, 1479, 1480, 1483, 1484, 1490, 1491, 1494, 1518, 1520, 1548, 1551, 1553, 1554, 1556, 1565, 1588, 1596, 1600, 1601, 1612, 1637, 1646, 1648, 1654, 1665, 1693, 1706, 1724, 1725, 1728, 1731, 1732, 1733, 1734, 1738, 1741, 1742, 1746, 1747, 1760, 1780, 1781, 1782, 1794, 1802, 1806, 1810, 1827, 1830, 1835, 1838, 1839, 1841, 1845, 1857, 1866, 1870, 1872, 1874, 1897, 1901, 1903, 1906, 1907, 1932, 1935, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1954, 1958, 1965, 1973, 1984, 1986, 1991, 1992, 1995, 1996, 1998, 2004, 2005, 2006, 2007, 2012, 2032, 2042, 2045, 2046, 2047, 2051, 2053, 2054, 2055, 2057, 2058, 2060, 2062, 2063, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2110, 2111, 2114, 2115, 2117, 2118, 2119, 2120, 2121, 2123, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2143, 2144, 2145, 2147, 2149], "arg": [0, 1, 3, 4, 5, 14, 23, 24, 28, 30, 32, 33, 35, 37, 39, 45, 46, 48, 49, 50, 51, 52, 53, 55, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 584, 607, 685, 737, 752, 754, 756, 757, 758, 759, 765, 767, 768, 833, 872, 901, 903, 911, 912, 913, 916, 917, 946, 987, 1020, 1021, 1064, 1079, 1176, 1180, 1181, 1182, 1188, 1190, 1201, 1203, 1224, 1225, 1289, 1292, 1379, 1460, 1461, 1481, 1483, 1507, 1509, 1514, 1537, 1539, 1540, 1548, 1551, 1552, 1553, 1555, 1562, 1577, 1579, 1580, 1581, 1583, 1587, 1588, 1589, 1590, 1597, 1626, 1627, 1637, 1666, 1690, 1698, 1728, 1738, 1761, 1766, 1780, 1787, 1789, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1959, 1992, 2004, 2007, 2042, 2045, 2047, 2048, 2051, 2064, 2066, 2071, 2075, 2078, 2080, 2081, 2082, 2091, 2097, 2099, 2102, 2109, 2110, 2111, 2116, 2120, 2125, 2131, 2133, 2134, 2135, 2136, 2144, 2145, 2146], "deprec": [0, 7, 28, 30, 37, 47, 48, 52, 55, 59, 410, 517, 561, 607, 790, 791, 792, 799, 835, 925, 973, 974, 990, 1015, 1068, 1072, 1234, 1289, 1344, 1347, 1379, 1380, 1460, 1461, 1481, 1483, 1506, 1507, 1513, 1514, 1539, 1540, 1548, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1602, 1603, 1626, 1627, 1637, 1666, 1690, 1698, 1725, 1726, 1727, 1729, 1738, 1743, 1788, 1789, 1791, 1794, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1857, 1873, 1899, 1954, 1958, 1982, 2043, 2044, 2049, 2064, 2076, 2099, 2103, 2107, 2116, 2120, 2121, 2136], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 15, 24, 28, 30, 35, 39, 42, 43, 47, 48, 52, 55, 56, 57, 58, 59, 60, 61, 64, 66, 76, 77, 83, 88, 258, 259, 502, 517, 622, 694, 735, 736, 737, 738, 739, 740, 746, 747, 748, 750, 751, 761, 766, 767, 768, 769, 770, 872, 873, 903, 906, 909, 910, 916, 917, 919, 921, 922, 925, 939, 965, 985, 997, 1102, 1176, 1180, 1181, 1182, 1183, 1184, 1188, 1286, 1289, 1353, 1384, 1394, 1467, 1478, 1513, 1548, 1654, 1665, 1666, 1671, 1693, 1706, 1724, 1738, 1788, 1789, 1791, 1806, 1807, 1808, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1871, 1897, 1899, 1906, 1943, 2007, 2049, 2051, 2054, 2059, 2065, 2066, 2067, 2068, 2071, 2074, 2075, 2081, 2082, 2084, 2085, 2087, 2092, 2093, 2094, 2095, 2099, 2101, 2102, 2104, 2107, 2108, 2109, 2110, 2114, 2115, 2116, 2117, 2118, 2119, 2121, 2127, 2130, 2131, 2134, 2135, 2136, 2142, 2145, 2148], "instead": [0, 1, 3, 5, 8, 9, 14, 19, 20, 23, 24, 28, 30, 34, 35, 37, 44, 47, 48, 52, 53, 55, 58, 59, 60, 62, 64, 66, 75, 410, 462, 490, 503, 517, 753, 762, 773, 774, 799, 825, 835, 891, 901, 916, 917, 919, 920, 921, 922, 925, 930, 967, 973, 985, 1154, 1156, 1181, 1182, 1183, 1184, 1187, 1188, 1216, 1219, 1234, 1276, 1287, 1289, 1290, 1294, 1319, 1320, 1326, 1328, 1344, 1347, 1353, 1359, 1361, 1390, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1481, 1483, 1484, 1486, 1487, 1488, 1492, 1499, 1507, 1513, 1514, 1515, 1516, 1517, 1518, 1539, 1540, 1541, 1542, 1543, 1548, 1551, 1552, 1553, 1555, 1562, 1564, 1576, 1580, 1581, 1582, 1588, 1597, 1621, 1622, 1623, 1626, 1627, 1637, 1647, 1654, 1666, 1679, 1680, 1681, 1690, 1698, 1712, 1738, 1789, 1791, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1832, 1839, 1862, 1863, 1873, 1893, 1897, 1939, 1954, 1958, 1995, 2007, 2044, 2046, 2047, 2051, 2054, 2055, 2062, 2066, 2071, 2073, 2074, 2075, 2080, 2081, 2082, 2083, 2086, 2087, 2091, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2107, 2110, 2113, 2114, 2120, 2121, 2123, 2125, 2130, 2131, 2132, 2133, 2135, 2136, 2141, 2143, 2144, 2145, 2146], "new": [0, 1, 5, 8, 14, 18, 19, 23, 26, 28, 30, 35, 37, 38, 47, 48, 52, 55, 56, 59, 60, 61, 62, 63, 64, 88, 91, 92, 225, 258, 315, 419, 452, 487, 490, 491, 500, 503, 548, 584, 587, 621, 685, 689, 765, 797, 822, 828, 865, 890, 892, 893, 894, 895, 896, 907, 909, 916, 917, 935, 936, 950, 966, 967, 970, 972, 981, 985, 988, 1000, 1002, 1003, 1019, 1023, 1103, 1107, 1129, 1133, 1134, 1160, 1161, 1163, 1177, 1186, 1188, 1191, 1201, 1203, 1211, 1226, 1228, 1260, 1264, 1278, 1279, 1282, 1285, 1289, 1296, 1301, 1303, 1363, 1364, 1365, 1366, 1383, 1416, 1443, 1446, 1462, 1463, 1464, 1499, 1510, 1511, 1512, 1548, 1549, 1554, 1558, 1588, 1599, 1601, 1665, 1730, 1735, 1736, 1738, 1748, 1749, 1750, 1751, 1754, 1759, 1761, 1765, 1766, 1767, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1784, 1788, 1791, 1792, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1816, 1823, 1824, 1825, 1826, 1827, 1841, 1865, 1875, 1876, 1880, 1881, 1882, 1888, 1889, 1893, 1898, 1899, 1908, 1910, 1921, 1923, 1925, 1947, 1948, 1951, 1969, 1971, 1972, 1988, 1990, 1994, 2005, 2006, 2007, 2013, 2042, 2043, 2044, 2046, 2047, 2054, 2055, 2057, 2064, 2065, 2066, 2067, 2068, 2071, 2075, 2078, 2079, 2082, 2085, 2087, 2088, 2089, 2090, 2091, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2107, 2111, 2114, 2115, 2116, 2118, 2119, 2120, 2121, 2125, 2130, 2132, 2133, 2134, 2136, 2144, 2145], "version": [0, 1, 2, 5, 8, 12, 14, 19, 22, 24, 28, 30, 33, 35, 48, 52, 55, 58, 59, 64, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 125, 127, 129, 131, 134, 135, 137, 145, 147, 150, 151, 153, 156, 162, 164, 166, 168, 170, 172, 181, 190, 198, 202, 205, 207, 217, 219, 235, 240, 242, 248, 251, 253, 255, 257, 261, 266, 273, 275, 277, 281, 283, 287, 289, 296, 298, 300, 308, 310, 312, 314, 316, 318, 320, 322, 360, 362, 364, 366, 368, 370, 372, 375, 377, 379, 380, 387, 389, 391, 393, 395, 399, 403, 405, 424, 427, 430, 432, 443, 445, 447, 455, 460, 470, 473, 489, 494, 496, 512, 515, 516, 517, 518, 520, 526, 531, 533, 536, 538, 540, 553, 555, 557, 560, 566, 568, 575, 579, 581, 597, 600, 602, 604, 606, 616, 626, 740, 741, 742, 754, 755, 756, 757, 758, 759, 780, 781, 782, 783, 785, 789, 790, 812, 813, 814, 849, 858, 866, 867, 869, 926, 937, 997, 1064, 1176, 1207, 1209, 1218, 1247, 1286, 1289, 1292, 1293, 1297, 1300, 1319, 1326, 1330, 1332, 1333, 1337, 1338, 1350, 1351, 1384, 1443, 1461, 1518, 1548, 1549, 1564, 1601, 1619, 1644, 1654, 1661, 1670, 1702, 1705, 1720, 1721, 1725, 1729, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1788, 1789, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1890, 1891, 1892, 1949, 1952, 1953, 1954, 1958, 1979, 1993, 1995, 2002, 2003, 2042, 2051, 2065, 2066, 2071, 2075, 2076, 2078, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2093, 2095, 2097, 2099, 2101, 2102, 2103, 2107, 2114, 2121, 2123, 2127, 2130, 2132, 2136, 2137, 2143, 2145, 2147], "1": [0, 1, 2, 3, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 44, 45, 47, 51, 52, 53, 55, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 140, 155, 156, 177, 195, 209, 212, 229, 231, 232, 233, 237, 246, 258, 262, 267, 290, 293, 315, 316, 317, 319, 321, 325, 356, 381, 405, 406, 449, 451, 452, 458, 475, 485, 487, 491, 492, 497, 500, 503, 517, 519, 521, 541, 542, 546, 548, 558, 559, 560, 562, 564, 565, 566, 567, 568, 585, 587, 588, 589, 591, 592, 611, 612, 619, 621, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 717, 718, 719, 720, 721, 722, 723, 724, 728, 729, 730, 731, 732, 735, 736, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 756, 757, 758, 761, 762, 763, 765, 775, 777, 778, 779, 780, 783, 787, 788, 790, 802, 816, 817, 828, 829, 830, 831, 834, 836, 866, 872, 873, 876, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 905, 906, 911, 912, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 926, 927, 935, 936, 939, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 981, 982, 984, 985, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1010, 1015, 1029, 1035, 1061, 1062, 1077, 1082, 1089, 1093, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1203, 1207, 1213, 1230, 1231, 1232, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1260, 1261, 1264, 1266, 1274, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1293, 1295, 1300, 1301, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1335, 1336, 1337, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1365, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1410, 1413, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587, 1588, 1591, 1592, 1594, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1609, 1610, 1611, 1619, 1621, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1652, 1653, 1654, 1656, 1658, 1660, 1661, 1662, 1663, 1664, 1672, 1674, 1679, 1680, 1681, 1687, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1699, 1704, 1705, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1721, 1722, 1723, 1724, 1725, 1728, 1737, 1738, 1746, 1747, 1753, 1754, 1755, 1759, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1780, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1850, 1851, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1893, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1925, 1926, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2043, 2045, 2046, 2047, 2048, 2051, 2054, 2055, 2056, 2057, 2062, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2076, 2077, 2078, 2081, 2083, 2084, 2085, 2086, 2087, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2106, 2109, 2110, 2111, 2113, 2114, 2115, 2117, 2118, 2119, 2120, 2121, 2123, 2125, 2127, 2130, 2131, 2132, 2134, 2136, 2138, 2139, 2140, 2143, 2144, 2145, 2146, 2149, 2150], "10": [0, 1, 3, 5, 12, 22, 23, 24, 28, 29, 33, 35, 36, 47, 50, 52, 66, 71, 74, 75, 317, 325, 339, 475, 517, 564, 585, 587, 588, 589, 690, 691, 702, 739, 750, 751, 765, 766, 767, 768, 770, 951, 963, 973, 976, 977, 981, 997, 1005, 1098, 1099, 1100, 1101, 1102, 1117, 1119, 1136, 1138, 1141, 1142, 1144, 1145, 1148, 1149, 1151, 1152, 1154, 1156, 1162, 1170, 1171, 1231, 1243, 1253, 1278, 1294, 1300, 1301, 1307, 1312, 1315, 1342, 1344, 1345, 1360, 1362, 1364, 1369, 1371, 1372, 1373, 1374, 1376, 1384, 1434, 1450, 1451, 1452, 1454, 1455, 1461, 1464, 1467, 1468, 1474, 1477, 1480, 1490, 1491, 1499, 1500, 1501, 1502, 1512, 1518, 1519, 1520, 1545, 1549, 1550, 1555, 1558, 1559, 1564, 1566, 1588, 1592, 1593, 1594, 1595, 1596, 1600, 1606, 1631, 1634, 1638, 1645, 1646, 1656, 1728, 1738, 1746, 1747, 1770, 1778, 1792, 1795, 1801, 1806, 1832, 1839, 1841, 1859, 1860, 1868, 1893, 1901, 1905, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1930, 1946, 1958, 1959, 1970, 1974, 1975, 1978, 1980, 1993, 1995, 2008, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2054, 2056, 2075, 2078, 2080, 2081, 2084, 2085, 2089, 2092, 2093, 2094, 2095, 2097, 2098, 2099, 2100, 2104, 2113, 2114, 2115, 2117, 2119, 2120, 2121, 2127, 2130, 2131, 2133, 2134, 2136, 2138, 2143, 2145, 2150], "autocast_mod": 0, "is_autocast_avail": 0, "device_typ": [0, 1, 28, 2045, 2051, 2074, 2085, 2108, 2123], "sourc": [0, 1, 2, 3, 4, 5, 9, 13, 14, 18, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 49, 50, 52, 53, 55, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 154, 200, 213, 237, 316, 317, 325, 344, 355, 400, 405, 406, 419, 420, 421, 457, 475, 491, 492, 517, 519, 521, 524, 528, 551, 560, 561, 563, 590, 607, 610, 613, 614, 627, 629, 685, 700, 701, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 807, 808, 809, 810, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 845, 846, 847, 849, 850, 851, 852, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 884, 897, 898, 899, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 949, 950, 962, 964, 965, 969, 971, 973, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1119, 1123, 1170, 1173, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1235, 1237, 1238, 1239, 1242, 1261, 1262, 1263, 1265, 1270, 1275, 1276, 1277, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1361, 1362, 1382, 1391, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1612, 1614, 1615, 1619, 1620, 1624, 1626, 1627, 1628, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1672, 1673, 1675, 1676, 1677, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1698, 1700, 1701, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1716, 1717, 1718, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1847, 1864, 1889, 1894, 1897, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1932, 1933, 1939, 1946, 1954, 1959, 1962, 1963, 1964, 1965, 1966, 1967, 1975, 1993, 1995, 1996, 1997, 1998, 1999, 2000, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2042, 2044, 2045, 2046, 2051, 2053, 2054, 2057, 2058, 2059, 2060, 2064, 2066, 2067, 2071, 2073, 2083, 2087, 2088, 2092, 2094, 2097, 2099, 2101, 2103, 2104, 2108, 2109, 2110, 2116, 2119, 2121, 2123, 2124, 2125, 2133, 2134, 2136, 2137, 2145, 2146, 2147], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 90, 91, 92, 123, 157, 159, 174, 176, 179, 182, 183, 184, 194, 195, 199, 200, 210, 212, 213, 220, 222, 223, 225, 236, 237, 244, 246, 258, 264, 271, 293, 301, 315, 323, 327, 329, 330, 332, 333, 334, 335, 337, 341, 343, 345, 356, 381, 397, 419, 439, 449, 450, 451, 452, 453, 462, 476, 477, 478, 479, 480, 482, 487, 491, 492, 500, 501, 502, 517, 519, 527, 529, 541, 547, 548, 560, 561, 562, 563, 564, 584, 585, 586, 587, 593, 607, 608, 611, 613, 617, 618, 621, 627, 689, 697, 698, 700, 701, 702, 703, 704, 740, 771, 772, 775, 776, 780, 781, 782, 783, 786, 789, 797, 798, 799, 800, 803, 806, 822, 823, 824, 825, 845, 848, 850, 851, 852, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 935, 936, 939, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 961, 962, 964, 967, 969, 971, 972, 973, 974, 976, 977, 978, 980, 982, 983, 984, 985, 986, 988, 990, 991, 992, 997, 998, 999, 1001, 1002, 1003, 1005, 1008, 1009, 1010, 1011, 1013, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1094, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1113, 1119, 1120, 1121, 1122, 1123, 1124, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1167, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1200, 1201, 1203, 1210, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1228, 1232, 1233, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1246, 1247, 1248, 1250, 1251, 1252, 1256, 1260, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1311, 1314, 1315, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1398, 1399, 1400, 1402, 1403, 1408, 1410, 1415, 1416, 1418, 1419, 1420, 1422, 1423, 1425, 1426, 1427, 1431, 1434, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1448, 1452, 1453, 1454, 1455, 1460, 1461, 1481, 1482, 1483, 1484, 1491, 1495, 1496, 1507, 1513, 1514, 1538, 1539, 1540, 1541, 1542, 1543, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1558, 1559, 1562, 1563, 1564, 1577, 1580, 1581, 1582, 1583, 1584, 1588, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1610, 1611, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1624, 1626, 1627, 1628, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1698, 1700, 1701, 1703, 1704, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1719, 1721, 1722, 1723, 1724, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1847, 1848, 1850, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1888, 1893, 1894, 1895, 1896, 1902, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1930, 1932, 1933, 1934, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1953, 1954, 1957, 1958, 1959, 1968, 1969, 1970, 1971, 1972, 1973, 1975, 1977, 1978, 1979, 1982, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2001, 2003, 2005, 2006, 2007, 2010, 2012, 2013, 2015, 2016, 2018, 2021, 2022, 2023, 2024, 2025, 2027, 2028, 2029, 2038, 2040, 2041, 2042, 2044, 2048, 2051, 2057, 2058, 2059, 2060, 2064, 2066, 2067, 2071, 2073, 2074, 2075, 2077, 2078, 2081, 2082, 2086, 2087, 2088, 2089, 2092, 2093, 2094, 2095, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2113, 2114, 2115, 2116, 2117, 2118, 2120, 2121, 2123, 2124, 2125, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2138, 2143, 2144, 2145, 2146, 2147, 2150], "bool": [0, 1, 2, 3, 5, 12, 14, 19, 23, 24, 27, 28, 29, 30, 32, 34, 35, 37, 41, 47, 50, 52, 53, 55, 62, 63, 64, 90, 92, 154, 200, 213, 249, 264, 323, 325, 332, 333, 334, 335, 337, 338, 343, 345, 405, 406, 419, 449, 450, 451, 452, 453, 462, 475, 500, 521, 585, 607, 627, 685, 698, 699, 700, 701, 702, 704, 740, 761, 763, 784, 785, 790, 800, 822, 851, 876, 884, 885, 886, 887, 891, 904, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 939, 952, 955, 957, 958, 960, 961, 967, 968, 974, 975, 976, 982, 983, 984, 985, 990, 991, 997, 1011, 1018, 1019, 1023, 1027, 1058, 1064, 1076, 1120, 1121, 1122, 1125, 1132, 1137, 1155, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1181, 1182, 1183, 1187, 1195, 1196, 1201, 1203, 1217, 1218, 1220, 1221, 1222, 1228, 1230, 1247, 1248, 1251, 1252, 1270, 1274, 1277, 1278, 1280, 1286, 1289, 1293, 1296, 1297, 1305, 1306, 1309, 1311, 1319, 1320, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1353, 1359, 1360, 1361, 1362, 1371, 1372, 1373, 1374, 1376, 1377, 1379, 1381, 1387, 1389, 1390, 1392, 1395, 1402, 1405, 1406, 1415, 1416, 1425, 1434, 1439, 1440, 1441, 1442, 1443, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1496, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1548, 1551, 1552, 1553, 1554, 1555, 1557, 1562, 1563, 1566, 1567, 1568, 1569, 1576, 1580, 1581, 1588, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1601, 1609, 1610, 1611, 1619, 1626, 1627, 1637, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1651, 1654, 1656, 1658, 1665, 1666, 1690, 1698, 1706, 1725, 1731, 1737, 1738, 1739, 1740, 1744, 1745, 1748, 1749, 1751, 1753, 1756, 1758, 1759, 1760, 1780, 1781, 1782, 1783, 1784, 1786, 1789, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1847, 1853, 1855, 1857, 1858, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1893, 1898, 1902, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1930, 1940, 1941, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1957, 1958, 1967, 1973, 1977, 1982, 1991, 1992, 1995, 1996, 1998, 2001, 2002, 2003, 2012, 2013, 2028, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2051, 2058, 2060, 2064, 2065, 2066, 2067, 2071, 2087, 2094, 2097, 2098, 2099, 2100, 2102, 2103, 2108, 2109, 2114, 2116, 2117, 2119, 2120, 2121, 2123, 2125, 2132, 2136, 2140, 2144, 2146], "indic": [0, 1, 2, 3, 5, 12, 19, 23, 24, 28, 29, 30, 34, 35, 47, 52, 53, 82, 85, 86, 90, 92, 195, 212, 317, 319, 321, 322, 323, 325, 475, 517, 519, 521, 548, 576, 577, 587, 618, 700, 701, 740, 750, 751, 807, 833, 885, 886, 887, 888, 889, 911, 913, 916, 930, 931, 967, 974, 975, 976, 988, 989, 990, 991, 997, 1011, 1016, 1018, 1019, 1023, 1058, 1064, 1098, 1099, 1122, 1178, 1179, 1181, 1182, 1183, 1187, 1188, 1203, 1230, 1243, 1264, 1287, 1289, 1294, 1303, 1306, 1307, 1311, 1320, 1331, 1333, 1344, 1347, 1361, 1369, 1377, 1379, 1381, 1387, 1390, 1392, 1395, 1402, 1415, 1416, 1434, 1440, 1444, 1452, 1453, 1454, 1455, 1483, 1490, 1491, 1495, 1496, 1542, 1543, 1544, 1545, 1546, 1551, 1553, 1554, 1616, 1617, 1618, 1637, 1645, 1646, 1649, 1650, 1666, 1682, 1683, 1684, 1692, 1706, 1721, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1773, 1774, 1793, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1837, 1839, 1858, 1893, 1930, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1969, 1970, 1974, 1977, 1983, 1984, 1985, 1986, 1991, 1992, 1993, 1995, 1996, 1998, 2007, 2010, 2012, 2013, 2028, 2044, 2045, 2047, 2051, 2065, 2066, 2071, 2081, 2091, 2094, 2099, 2100, 2109, 2114, 2118, 2119, 2121, 2137, 2140, 2145], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 154, 157, 158, 159, 174, 176, 177, 179, 182, 183, 184, 194, 195, 199, 200, 210, 212, 213, 222, 227, 237, 244, 258, 259, 262, 271, 290, 294, 301, 315, 317, 319, 323, 325, 327, 329, 332, 333, 334, 335, 336, 337, 339, 340, 342, 344, 345, 346, 347, 356, 397, 404, 406, 410, 419, 452, 462, 475, 476, 485, 487, 490, 491, 492, 497, 499, 500, 501, 502, 503, 504, 507, 508, 517, 519, 521, 524, 528, 529, 541, 547, 548, 549, 561, 564, 584, 585, 587, 588, 589, 591, 592, 593, 607, 608, 611, 618, 621, 622, 624, 627, 629, 685, 686, 688, 689, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 728, 729, 730, 731, 732, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 768, 769, 770, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 804, 806, 807, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 833, 835, 836, 842, 847, 849, 850, 868, 869, 870, 872, 873, 876, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 935, 936, 937, 938, 939, 943, 944, 946, 948, 950, 951, 952, 953, 954, 956, 959, 961, 963, 964, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 985, 986, 988, 990, 991, 993, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1011, 1015, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1032, 1034, 1035, 1038, 1039, 1040, 1042, 1046, 1047, 1050, 1053, 1054, 1055, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1129, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1192, 1193, 1196, 1197, 1199, 1201, 1202, 1203, 1205, 1207, 1209, 1210, 1212, 1213, 1215, 1216, 1217, 1219, 1221, 1222, 1224, 1225, 1228, 1230, 1232, 1233, 1234, 1236, 1238, 1242, 1243, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1260, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1372, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1403, 1411, 1413, 1415, 1417, 1419, 1420, 1421, 1423, 1425, 1427, 1428, 1429, 1430, 1431, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1572, 1573, 1574, 1575, 1577, 1578, 1580, 1581, 1582, 1584, 1585, 1588, 1589, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1619, 1622, 1623, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1663, 1665, 1666, 1671, 1672, 1673, 1675, 1676, 1677, 1679, 1680, 1681, 1690, 1691, 1693, 1695, 1696, 1697, 1698, 1699, 1706, 1709, 1712, 1713, 1721, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1781, 1782, 1783, 1784, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1864, 1866, 1867, 1868, 1870, 1871, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1888, 1889, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1925, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1952, 1953, 1954, 1957, 1958, 1959, 1960, 1961, 1965, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1990, 1991, 1992, 1993, 1995, 1998, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2016, 2017, 2019, 2021, 2022, 2024, 2026, 2028, 2030, 2031, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2053, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2124, 2125, 2126, 2127, 2129, 2130, 2131, 2132, 2133, 2137, 2138, 2139, 2140, 2141, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2152], "avail": [0, 1, 2, 5, 8, 9, 14, 15, 19, 20, 23, 28, 30, 33, 37, 47, 48, 53, 84, 85, 1011, 1041, 1043, 1044, 1055, 1058, 1065, 1066, 1086, 1087, 1089, 1119, 1219, 1296, 1353, 1354, 1379, 1399, 1422, 1425, 1592, 1601, 1607, 1665, 1706, 1725, 1847, 1901, 1954, 1959, 1995, 1998, 2018, 2020, 2028, 2030, 2031, 2032, 2033, 2042, 2043, 2044, 2046, 2047, 2051, 2054, 2062, 2064, 2075, 2078, 2081, 2087, 2089, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2101, 2102, 2103, 2104, 2105, 2109, 2123, 2125, 2126, 2134, 2138, 2145, 2146], "paramet": [0, 1, 2, 3, 5, 11, 12, 14, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 41, 45, 47, 50, 52, 53, 55, 57, 59, 62, 63, 64, 66, 90, 91, 92, 154, 159, 174, 176, 177, 179, 182, 183, 184, 199, 200, 210, 213, 237, 244, 258, 259, 264, 271, 301, 317, 319, 321, 323, 325, 329, 335, 397, 404, 406, 419, 449, 450, 451, 452, 453, 462, 475, 497, 500, 501, 502, 503, 504, 517, 519, 521, 524, 529, 541, 548, 549, 550, 564, 570, 587, 588, 589, 591, 592, 607, 608, 611, 621, 622, 627, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 755, 760, 761, 763, 764, 765, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 795, 797, 799, 801, 803, 804, 807, 808, 809, 822, 828, 829, 830, 831, 832, 833, 834, 835, 836, 847, 848, 849, 850, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 904, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 940, 942, 943, 946, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 985, 986, 989, 992, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1009, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1038, 1039, 1040, 1042, 1046, 1047, 1048, 1050, 1053, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1201, 1203, 1210, 1212, 1222, 1228, 1230, 1231, 1232, 1233, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1260, 1264, 1266, 1268, 1269, 1271, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1296, 1297, 1300, 1301, 1302, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1413, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1584, 1585, 1586, 1588, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1651, 1653, 1654, 1656, 1658, 1665, 1666, 1673, 1679, 1680, 1681, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1706, 1712, 1713, 1721, 1725, 1726, 1727, 1728, 1731, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1889, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1958, 1962, 1963, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2016, 2017, 2019, 2021, 2022, 2023, 2024, 2030, 2031, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2047, 2049, 2051, 2055, 2057, 2058, 2064, 2066, 2067, 2068, 2071, 2073, 2074, 2075, 2078, 2080, 2081, 2084, 2085, 2087, 2088, 2089, 2091, 2093, 2094, 2097, 2099, 2102, 2103, 2104, 2108, 2109, 2110, 2114, 2115, 2116, 2119, 2121, 2124, 2125, 2127, 2130, 2136, 2144, 2146, 2147], "str": [0, 1, 2, 3, 5, 14, 19, 23, 24, 28, 30, 32, 33, 34, 35, 37, 41, 45, 47, 50, 52, 53, 55, 64, 325, 517, 521, 607, 784, 790, 798, 799, 800, 803, 806, 823, 824, 825, 865, 919, 921, 933, 940, 942, 946, 971, 983, 992, 1008, 1016, 1030, 1031, 1032, 1034, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1061, 1062, 1063, 1070, 1075, 1076, 1078, 1079, 1081, 1093, 1114, 1119, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1171, 1176, 1177, 1181, 1186, 1188, 1194, 1200, 1201, 1203, 1239, 1287, 1288, 1289, 1290, 1292, 1293, 1296, 1299, 1335, 1348, 1353, 1354, 1361, 1362, 1391, 1405, 1406, 1427, 1441, 1460, 1461, 1467, 1475, 1476, 1477, 1481, 1483, 1491, 1497, 1501, 1507, 1508, 1513, 1514, 1524, 1525, 1526, 1539, 1540, 1548, 1549, 1551, 1552, 1553, 1555, 1558, 1562, 1563, 1566, 1577, 1580, 1581, 1592, 1594, 1596, 1597, 1598, 1599, 1601, 1626, 1627, 1637, 1638, 1646, 1651, 1654, 1665, 1666, 1690, 1693, 1698, 1725, 1737, 1738, 1753, 1754, 1755, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1788, 1789, 1791, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1858, 1889, 1893, 1900, 1901, 1935, 1954, 1997, 1998, 2007, 2017, 2021, 2022, 2023, 2034, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2057, 2058, 2060, 2064, 2066, 2071, 2073, 2075, 2094, 2097, 2099, 2100, 2101, 2102, 2103, 2108, 2109, 2116, 2119, 2121, 2124, 2125, 2133, 2140, 2144, 2146, 2147], "devic": [0, 1, 2, 5, 8, 14, 16, 18, 19, 20, 23, 24, 28, 29, 30, 32, 33, 34, 48, 50, 53, 55, 59, 62, 63, 64, 66, 71, 75, 76, 77, 90, 91, 92, 200, 210, 213, 293, 317, 325, 339, 449, 450, 451, 452, 453, 519, 521, 584, 627, 691, 694, 728, 729, 730, 731, 732, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 754, 755, 756, 757, 758, 759, 760, 876, 888, 890, 891, 919, 921, 948, 951, 952, 954, 961, 963, 985, 988, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1018, 1019, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1042, 1046, 1047, 1048, 1050, 1051, 1059, 1061, 1062, 1063, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1120, 1121, 1122, 1132, 1137, 1155, 1171, 1174, 1175, 1201, 1235, 1238, 1247, 1248, 1289, 1293, 1297, 1300, 1303, 1309, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1336, 1337, 1338, 1344, 1347, 1348, 1350, 1351, 1353, 1354, 1360, 1361, 1376, 1379, 1382, 1384, 1390, 1394, 1399, 1402, 1403, 1408, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1425, 1427, 1428, 1429, 1432, 1452, 1462, 1463, 1464, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1490, 1491, 1499, 1500, 1502, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1548, 1554, 1556, 1563, 1564, 1565, 1566, 1588, 1592, 1594, 1596, 1608, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1646, 1665, 1671, 1706, 1721, 1725, 1726, 1727, 1728, 1737, 1738, 1741, 1742, 1744, 1745, 1746, 1747, 1780, 1787, 1793, 1795, 1798, 1799, 1810, 1857, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1894, 1897, 1901, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1935, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1958, 1973, 1975, 1984, 1986, 1995, 1996, 1998, 2012, 2013, 2014, 2015, 2016, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2034, 2035, 2036, 2039, 2040, 2041, 2043, 2044, 2045, 2046, 2047, 2049, 2051, 2057, 2062, 2065, 2067, 2071, 2074, 2080, 2081, 2082, 2083, 2084, 2087, 2089, 2090, 2091, 2093, 2094, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2108, 2109, 2114, 2116, 2120, 2121, 2123, 2127, 2130, 2133, 2134, 2135, 2136, 2138, 2140, 2142, 2143, 2145, 2147], "possibl": [0, 2, 9, 14, 15, 18, 19, 28, 30, 33, 35, 52, 59, 60, 64, 501, 502, 584, 621, 869, 890, 891, 977, 983, 1027, 1120, 1121, 1122, 1167, 1180, 1193, 1202, 1213, 1215, 1216, 1289, 1303, 1330, 1343, 1346, 1347, 1350, 1355, 1361, 1461, 1467, 1548, 1554, 1645, 1646, 1665, 1699, 1725, 1759, 1760, 1877, 1880, 1895, 1946, 1954, 1973, 2044, 2046, 2047, 2051, 2059, 2064, 2065, 2073, 2075, 2077, 2078, 2080, 2081, 2084, 2086, 2091, 2092, 2093, 2095, 2102, 2104, 2109, 2111, 2117, 2121, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2141, 2145], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 18, 19, 20, 23, 24, 25, 27, 29, 30, 32, 33, 35, 37, 39, 41, 44, 45, 47, 48, 52, 53, 55, 57, 60, 62, 63, 64, 66, 68, 71, 75, 77, 91, 105, 106, 107, 108, 123, 154, 158, 239, 240, 241, 242, 258, 263, 264, 276, 277, 303, 315, 317, 319, 320, 321, 322, 323, 325, 327, 330, 356, 403, 404, 419, 423, 424, 426, 427, 475, 485, 487, 503, 517, 519, 521, 541, 548, 564, 587, 588, 589, 591, 592, 603, 604, 685, 686, 689, 692, 693, 696, 700, 701, 702, 740, 761, 769, 775, 776, 784, 789, 790, 792, 799, 801, 802, 806, 807, 810, 828, 829, 830, 831, 834, 835, 836, 865, 870, 876, 885, 886, 887, 891, 896, 900, 902, 904, 905, 909, 910, 911, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 939, 948, 950, 952, 953, 954, 959, 961, 967, 971, 975, 976, 978, 989, 1000, 1001, 1004, 1019, 1052, 1061, 1062, 1075, 1089, 1098, 1099, 1102, 1110, 1111, 1120, 1121, 1122, 1124, 1133, 1134, 1136, 1138, 1140, 1141, 1142, 1147, 1149, 1150, 1151, 1152, 1153, 1162, 1167, 1174, 1176, 1177, 1178, 1179, 1183, 1184, 1186, 1187, 1195, 1196, 1197, 1201, 1202, 1203, 1205, 1207, 1211, 1213, 1215, 1216, 1217, 1219, 1221, 1222, 1230, 1232, 1237, 1239, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1260, 1274, 1279, 1280, 1281, 1282, 1285, 1286, 1287, 1289, 1290, 1292, 1296, 1297, 1305, 1308, 1310, 1311, 1314, 1318, 1319, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1332, 1333, 1334, 1335, 1339, 1342, 1344, 1346, 1347, 1349, 1353, 1354, 1359, 1360, 1361, 1362, 1365, 1370, 1376, 1378, 1379, 1382, 1387, 1389, 1390, 1392, 1395, 1410, 1413, 1434, 1438, 1439, 1440, 1441, 1444, 1445, 1448, 1452, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1489, 1490, 1491, 1492, 1494, 1501, 1502, 1503, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1533, 1534, 1535, 1538, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1562, 1563, 1577, 1580, 1582, 1583, 1584, 1585, 1586, 1588, 1591, 1592, 1594, 1596, 1597, 1598, 1600, 1601, 1609, 1610, 1611, 1626, 1627, 1629, 1630, 1631, 1636, 1637, 1646, 1647, 1651, 1654, 1656, 1665, 1666, 1667, 1679, 1680, 1681, 1690, 1691, 1692, 1693, 1695, 1698, 1706, 1719, 1720, 1725, 1727, 1728, 1730, 1732, 1735, 1736, 1737, 1738, 1745, 1753, 1754, 1756, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1773, 1774, 1780, 1783, 1784, 1787, 1789, 1793, 1794, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1819, 1823, 1824, 1825, 1826, 1827, 1832, 1839, 1847, 1851, 1854, 1858, 1860, 1861, 1873, 1875, 1877, 1878, 1879, 1884, 1885, 1886, 1893, 1896, 1905, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1926, 1930, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1954, 1958, 1959, 1970, 1974, 1977, 1980, 1983, 1984, 1985, 1986, 1988, 1991, 1992, 1994, 2010, 2040, 2041, 2042, 2043, 2044, 2045, 2048, 2051, 2054, 2055, 2058, 2060, 2062, 2064, 2067, 2071, 2073, 2074, 2075, 2077, 2078, 2081, 2082, 2083, 2086, 2087, 2089, 2091, 2093, 2094, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2125, 2130, 2132, 2133, 2134, 2136, 2139, 2140, 2144, 2145, 2149], "so": [0, 1, 2, 3, 7, 9, 14, 17, 19, 23, 24, 27, 28, 29, 30, 32, 33, 35, 36, 39, 40, 47, 48, 51, 52, 53, 55, 58, 59, 60, 63, 64, 66, 76, 77, 339, 462, 490, 500, 685, 870, 906, 911, 914, 916, 919, 920, 925, 937, 980, 983, 985, 988, 1017, 1021, 1043, 1107, 1109, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1170, 1173, 1176, 1180, 1181, 1183, 1184, 1199, 1201, 1203, 1214, 1216, 1228, 1276, 1286, 1289, 1292, 1293, 1299, 1301, 1303, 1345, 1347, 1357, 1362, 1367, 1379, 1401, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1491, 1494, 1501, 1548, 1565, 1582, 1584, 1600, 1610, 1611, 1619, 1629, 1630, 1631, 1654, 1712, 1713, 1728, 1738, 1793, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1922, 1937, 1949, 1954, 1958, 1979, 1991, 1996, 2001, 2020, 2044, 2046, 2047, 2053, 2055, 2057, 2059, 2060, 2064, 2065, 2066, 2067, 2073, 2074, 2075, 2078, 2080, 2081, 2082, 2084, 2086, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2099, 2101, 2102, 2104, 2108, 2109, 2114, 2115, 2117, 2119, 2120, 2123, 2127, 2130, 2132, 2133, 2135, 2136, 2137, 2139, 2141, 2143, 2144, 2145, 2147, 2152], "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 14, 15, 18, 19, 20, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 59, 60, 61, 62, 63, 66, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 154, 195, 200, 212, 213, 225, 237, 259, 294, 315, 317, 319, 323, 325, 402, 404, 405, 406, 452, 462, 487, 490, 491, 492, 497, 499, 502, 503, 517, 519, 521, 541, 548, 587, 607, 621, 622, 627, 685, 689, 692, 693, 694, 695, 699, 700, 701, 702, 740, 753, 762, 765, 771, 772, 773, 774, 777, 778, 779, 784, 785, 787, 788, 790, 791, 792, 798, 799, 800, 801, 807, 810, 823, 825, 827, 828, 829, 830, 831, 834, 836, 846, 847, 865, 870, 875, 888, 889, 891, 895, 896, 900, 901, 903, 904, 906, 909, 910, 916, 917, 919, 920, 922, 923, 924, 925, 930, 931, 935, 936, 939, 942, 944, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 968, 969, 982, 985, 986, 989, 994, 997, 1001, 1005, 1018, 1026, 1033, 1035, 1050, 1061, 1062, 1064, 1065, 1066, 1075, 1089, 1090, 1091, 1096, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1119, 1120, 1124, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1167, 1169, 1170, 1172, 1173, 1174, 1177, 1180, 1183, 1186, 1187, 1188, 1197, 1199, 1201, 1207, 1208, 1212, 1228, 1232, 1233, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1256, 1260, 1264, 1265, 1266, 1286, 1289, 1292, 1294, 1297, 1300, 1301, 1303, 1305, 1306, 1309, 1310, 1314, 1315, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1335, 1336, 1337, 1339, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1356, 1359, 1361, 1362, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1390, 1398, 1400, 1403, 1404, 1405, 1406, 1410, 1411, 1415, 1423, 1429, 1434, 1440, 1443, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1490, 1491, 1492, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1538, 1539, 1540, 1541, 1542, 1543, 1548, 1551, 1553, 1555, 1562, 1563, 1564, 1565, 1566, 1567, 1577, 1578, 1580, 1588, 1591, 1592, 1597, 1598, 1600, 1601, 1607, 1609, 1610, 1611, 1619, 1622, 1623, 1637, 1638, 1645, 1646, 1647, 1649, 1650, 1653, 1654, 1656, 1665, 1666, 1672, 1679, 1680, 1681, 1693, 1706, 1709, 1725, 1728, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1741, 1742, 1744, 1745, 1746, 1747, 1748, 1750, 1752, 1753, 1754, 1755, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1773, 1774, 1777, 1783, 1787, 1788, 1791, 1793, 1794, 1795, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1847, 1848, 1851, 1854, 1857, 1862, 1863, 1864, 1866, 1868, 1870, 1875, 1877, 1879, 1881, 1882, 1884, 1886, 1889, 1896, 1897, 1898, 1899, 1901, 1905, 1906, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1926, 1932, 1933, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1952, 1953, 1954, 1958, 1959, 1969, 1975, 1976, 1977, 1979, 1980, 1983, 1984, 1985, 1986, 1993, 1994, 1995, 1998, 2001, 2002, 2003, 2005, 2007, 2010, 2012, 2024, 2030, 2031, 2035, 2036, 2042, 2044, 2045, 2046, 2048, 2049, 2051, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2063, 2064, 2065, 2066, 2067, 2068, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2110, 2111, 2112, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2123, 2124, 2126, 2127, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2142, 2143, 2144, 2145, 2147, 2149, 2150], "same": [0, 1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 44, 45, 47, 48, 50, 51, 52, 53, 55, 58, 60, 63, 64, 66, 74, 75, 143, 157, 199, 225, 259, 315, 317, 319, 323, 325, 343, 449, 450, 451, 452, 453, 475, 487, 490, 501, 502, 504, 517, 519, 521, 524, 548, 584, 621, 622, 691, 694, 698, 700, 701, 702, 704, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 750, 751, 761, 763, 766, 767, 768, 769, 770, 784, 790, 793, 795, 799, 800, 802, 808, 810, 822, 828, 831, 833, 834, 870, 872, 889, 890, 891, 903, 909, 911, 913, 916, 917, 919, 920, 921, 922, 923, 924, 930, 931, 951, 953, 954, 963, 965, 967, 970, 975, 976, 977, 983, 986, 994, 997, 1015, 1016, 1018, 1031, 1033, 1053, 1064, 1102, 1107, 1109, 1110, 1116, 1119, 1121, 1122, 1125, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1167, 1172, 1173, 1175, 1176, 1177, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1211, 1230, 1233, 1243, 1251, 1252, 1260, 1264, 1280, 1286, 1289, 1295, 1300, 1301, 1305, 1306, 1310, 1311, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1357, 1377, 1381, 1383, 1384, 1387, 1389, 1390, 1391, 1392, 1395, 1439, 1442, 1443, 1444, 1450, 1451, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1494, 1497, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1520, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1554, 1556, 1557, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1600, 1601, 1604, 1605, 1606, 1619, 1625, 1626, 1627, 1629, 1630, 1631, 1637, 1646, 1654, 1656, 1665, 1666, 1706, 1725, 1733, 1734, 1737, 1738, 1746, 1747, 1753, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1780, 1784, 1789, 1794, 1795, 1799, 1802, 1841, 1845, 1850, 1851, 1854, 1855, 1867, 1869, 1871, 1875, 1877, 1879, 1880, 1884, 1886, 1893, 1896, 1897, 1901, 1908, 1913, 1931, 1940, 1941, 1942, 1944, 1945, 1951, 1952, 1953, 1957, 1958, 1969, 1980, 1991, 1992, 1993, 1994, 1995, 2002, 2003, 2004, 2007, 2012, 2041, 2042, 2044, 2046, 2047, 2051, 2055, 2060, 2064, 2065, 2066, 2067, 2071, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2091, 2092, 2093, 2094, 2097, 2099, 2101, 2102, 2103, 2104, 2107, 2109, 2110, 2111, 2114, 2116, 2117, 2118, 2119, 2120, 2121, 2124, 2125, 2129, 2130, 2131, 2132, 2133, 2135, 2136, 2141, 2143, 2144, 2145, 2146], "attribut": [0, 1, 11, 12, 23, 24, 28, 29, 36, 53, 64, 66, 68, 73, 82, 87, 154, 294, 499, 500, 732, 743, 744, 745, 746, 747, 748, 750, 751, 761, 769, 797, 809, 810, 823, 824, 825, 847, 849, 850, 869, 870, 900, 904, 909, 911, 914, 916, 917, 1170, 1200, 1201, 1286, 1288, 1289, 1290, 1292, 1293, 1295, 1300, 1301, 1362, 1484, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1548, 1592, 1738, 1739, 1740, 1759, 1760, 1781, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1954, 1995, 1996, 1999, 2043, 2045, 2048, 2051, 2059, 2067, 2071, 2074, 2075, 2078, 2081, 2082, 2089, 2094, 2099, 2102, 2104, 2109, 2116, 2120, 2121, 2136, 2144, 2146, 2150], "thu": [0, 1, 11, 23, 28, 33, 35, 48, 53, 55, 64, 790, 831, 834, 865, 1119, 1140, 1353, 1384, 1487, 1601, 1725, 1738, 1807, 1808, 1824, 1826, 1943, 2044, 2047, 2054, 2057, 2075, 2077, 2081, 2083, 2086, 2088, 2089, 2099, 2104, 2109, 2114, 2118, 2120, 2121], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 19, 22, 23, 24, 28, 32, 33, 34, 35, 37, 39, 44, 46, 47, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 76, 77, 84, 85, 154, 258, 339, 452, 490, 492, 503, 685, 694, 739, 740, 753, 762, 786, 900, 901, 902, 903, 904, 911, 913, 914, 916, 917, 919, 920, 921, 925, 926, 937, 965, 983, 985, 1016, 1042, 1053, 1055, 1064, 1065, 1086, 1119, 1176, 1177, 1180, 1181, 1182, 1183, 1188, 1192, 1193, 1197, 1201, 1202, 1203, 1212, 1216, 1289, 1293, 1294, 1302, 1305, 1306, 1307, 1335, 1353, 1361, 1384, 1391, 1394, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1518, 1544, 1545, 1546, 1548, 1553, 1554, 1555, 1564, 1583, 1592, 1594, 1596, 1601, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1665, 1671, 1706, 1724, 1725, 1728, 1738, 1754, 1781, 1789, 1791, 1792, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1839, 1857, 1880, 1889, 1897, 1940, 1941, 1942, 1944, 1945, 1949, 1996, 1998, 2007, 2019, 2030, 2032, 2042, 2044, 2046, 2047, 2049, 2051, 2054, 2055, 2057, 2059, 2060, 2064, 2065, 2067, 2073, 2074, 2075, 2076, 2078, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2111, 2114, 2117, 2118, 2119, 2120, 2121, 2123, 2126, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2139, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2152], "obtain": [0, 3, 23, 28, 35, 40, 63, 64, 91, 500, 1233, 1410, 1467, 1555, 1638, 1738, 1811, 1823, 1847, 1864, 1959, 2047, 2064, 2065, 2077, 2093, 2099, 2101, 2103, 2104, 2143], "tensor": [0, 2, 5, 7, 8, 12, 14, 17, 18, 23, 24, 27, 28, 29, 30, 32, 33, 35, 36, 53, 55, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 86, 91, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 725, 737, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 755, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 795, 796, 800, 803, 805, 806, 807, 808, 809, 810, 828, 829, 830, 831, 833, 834, 836, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 930, 931, 933, 935, 936, 937, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 988, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1015, 1030, 1031, 1032, 1033, 1034, 1042, 1050, 1051, 1057, 1061, 1064, 1067, 1071, 1083, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1200, 1201, 1203, 1208, 1211, 1212, 1226, 1230, 1231, 1232, 1233, 1234, 1235, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1271, 1274, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1295, 1296, 1297, 1300, 1301, 1303, 1305, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1403, 1413, 1423, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1452, 1456, 1457, 1460, 1461, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1499, 1500, 1501, 1507, 1513, 1514, 1518, 1519, 1535, 1538, 1539, 1540, 1541, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1563, 1564, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1581, 1582, 1583, 1584, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1609, 1610, 1611, 1613, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1747, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1902, 1905, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2019, 2024, 2025, 2040, 2041, 2043, 2044, 2046, 2047, 2051, 2054, 2068, 2071, 2073, 2074, 2076, 2077, 2078, 2080, 2082, 2083, 2084, 2085, 2087, 2089, 2090, 2091, 2092, 2093, 2095, 2097, 2100, 2101, 2102, 2103, 2105, 2108, 2109, 2110, 2113, 2115, 2116, 2119, 2121, 2124, 2125, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2136, 2138, 2140, 2143, 2144, 2145, 2146, 2147], "class": [0, 1, 2, 3, 5, 12, 15, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 39, 41, 44, 45, 47, 49, 50, 52, 53, 55, 60, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 90, 91, 92, 561, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 845, 846, 847, 848, 849, 850, 851, 852, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 905, 906, 911, 912, 913, 914, 915, 916, 917, 926, 927, 928, 938, 939, 946, 947, 948, 949, 950, 1006, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1040, 1042, 1053, 1094, 1123, 1186, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1287, 1288, 1289, 1292, 1294, 1295, 1296, 1300, 1301, 1304, 1305, 1306, 1307, 1402, 1415, 1416, 1417, 1421, 1431, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1627, 1637, 1645, 1690, 1692, 1706, 1728, 1737, 1738, 1739, 1740, 1741, 1742, 1756, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1780, 1787, 1792, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1864, 1933, 1996, 2012, 2013, 2014, 2017, 2019, 2043, 2045, 2048, 2051, 2054, 2059, 2060, 2064, 2066, 2068, 2069, 2071, 2074, 2075, 2078, 2081, 2082, 2083, 2084, 2089, 2091, 2094, 2097, 2103, 2104, 2106, 2107, 2109, 2110, 2113, 2114, 2116, 2117, 2119, 2121, 2123, 2124, 2125, 2127, 2131, 2132, 2133, 2134, 2136, 2141, 2143, 2144, 2145, 2146, 2147, 2150], "dtype": [0, 1, 5, 11, 12, 18, 21, 23, 24, 28, 30, 33, 52, 53, 55, 62, 64, 66, 74, 75, 87, 157, 158, 195, 212, 216, 217, 218, 219, 246, 315, 317, 319, 321, 323, 325, 405, 406, 413, 433, 436, 449, 450, 451, 452, 453, 457, 462, 474, 485, 487, 517, 519, 569, 584, 585, 607, 621, 692, 694, 697, 698, 702, 704, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 766, 769, 770, 777, 778, 779, 800, 801, 807, 828, 829, 830, 831, 832, 833, 834, 835, 836, 852, 869, 870, 872, 873, 876, 890, 891, 911, 912, 914, 916, 917, 919, 921, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 968, 975, 976, 985, 994, 997, 998, 999, 1005, 1015, 1033, 1100, 1101, 1120, 1121, 1122, 1132, 1136, 1137, 1138, 1144, 1145, 1155, 1162, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1201, 1236, 1247, 1248, 1260, 1289, 1293, 1303, 1309, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1371, 1372, 1373, 1374, 1376, 1379, 1380, 1384, 1388, 1389, 1390, 1393, 1394, 1434, 1438, 1439, 1440, 1442, 1452, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1490, 1491, 1494, 1499, 1500, 1502, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1548, 1554, 1555, 1556, 1563, 1564, 1565, 1566, 1570, 1571, 1572, 1573, 1574, 1588, 1592, 1594, 1596, 1600, 1601, 1602, 1603, 1608, 1609, 1610, 1611, 1621, 1637, 1638, 1665, 1671, 1673, 1706, 1712, 1713, 1728, 1737, 1741, 1742, 1746, 1747, 1756, 1759, 1760, 1780, 1794, 1798, 1799, 1800, 1802, 1845, 1851, 1855, 1856, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1883, 1886, 1898, 1899, 1901, 1902, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1929, 1932, 1934, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1957, 1958, 1970, 1973, 1984, 1986, 1991, 1995, 1996, 1998, 2005, 2006, 2010, 2040, 2041, 2043, 2044, 2045, 2046, 2047, 2049, 2051, 2054, 2066, 2067, 2071, 2078, 2081, 2085, 2089, 2092, 2097, 2099, 2100, 2104, 2105, 2106, 2114, 2115, 2116, 2119, 2120, 2121, 2134, 2135, 2136, 2140, 2145, 2150], "none": [0, 1, 2, 3, 5, 12, 14, 18, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 44, 45, 47, 50, 52, 53, 55, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 90, 91, 92, 116, 118, 119, 120, 122, 138, 139, 142, 154, 157, 158, 160, 177, 189, 190, 191, 192, 208, 209, 211, 213, 216, 217, 218, 219, 233, 237, 239, 240, 241, 242, 262, 290, 294, 305, 339, 355, 358, 381, 411, 413, 414, 415, 418, 425, 431, 432, 433, 434, 435, 436, 449, 450, 451, 452, 453, 457, 458, 474, 483, 485, 491, 492, 498, 507, 517, 524, 541, 542, 556, 557, 559, 560, 569, 584, 585, 587, 592, 594, 607, 612, 613, 614, 619, 627, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 651, 653, 655, 657, 660, 662, 664, 665, 667, 669, 671, 673, 675, 677, 679, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 784, 785, 786, 787, 788, 790, 791, 792, 793, 795, 799, 800, 801, 804, 807, 822, 825, 828, 829, 830, 831, 834, 835, 847, 849, 850, 868, 869, 870, 871, 872, 873, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 889, 890, 891, 892, 893, 894, 895, 896, 900, 901, 902, 903, 904, 906, 908, 909, 910, 911, 914, 915, 916, 917, 920, 922, 923, 924, 925, 930, 931, 935, 936, 946, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 967, 970, 972, 973, 974, 975, 976, 978, 979, 981, 983, 985, 989, 994, 995, 996, 999, 1000, 1002, 1003, 1004, 1005, 1009, 1014, 1015, 1016, 1018, 1019, 1020, 1023, 1024, 1025, 1029, 1030, 1032, 1033, 1034, 1035, 1038, 1039, 1040, 1046, 1047, 1053, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1089, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1111, 1112, 1114, 1115, 1116, 1118, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1174, 1175, 1176, 1177, 1178, 1182, 1185, 1186, 1188, 1189, 1191, 1192, 1193, 1196, 1201, 1203, 1205, 1206, 1208, 1212, 1213, 1219, 1230, 1231, 1232, 1233, 1234, 1238, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1283, 1284, 1286, 1287, 1288, 1289, 1292, 1293, 1295, 1296, 1297, 1299, 1300, 1301, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1413, 1415, 1416, 1417, 1419, 1420, 1421, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1490, 1491, 1493, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1562, 1563, 1564, 1565, 1566, 1580, 1581, 1582, 1583, 1584, 1588, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1614, 1615, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1638, 1645, 1646, 1649, 1650, 1651, 1652, 1654, 1655, 1662, 1664, 1665, 1666, 1667, 1668, 1671, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1695, 1698, 1703, 1706, 1710, 1711, 1712, 1713, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1753, 1754, 1755, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1780, 1782, 1783, 1785, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1850, 1851, 1852, 1854, 1855, 1857, 1858, 1861, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1877, 1878, 1879, 1884, 1886, 1887, 1888, 1893, 1905, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1970, 1971, 1972, 1973, 1975, 1977, 1980, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1991, 1992, 1996, 1998, 2001, 2002, 2003, 2004, 2007, 2009, 2010, 2011, 2012, 2013, 2014, 2016, 2017, 2021, 2022, 2023, 2037, 2038, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2057, 2058, 2060, 2064, 2065, 2066, 2067, 2071, 2073, 2075, 2078, 2081, 2082, 2089, 2091, 2094, 2097, 2099, 2102, 2103, 2104, 2106, 2108, 2109, 2115, 2116, 2117, 2119, 2120, 2121, 2124, 2125, 2131, 2133, 2134, 2135, 2136, 2140, 2145, 2146, 2147], "enabl": [0, 1, 2, 3, 5, 8, 12, 18, 20, 21, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 48, 52, 55, 62, 81, 87, 89, 492, 507, 508, 685, 765, 804, 820, 821, 911, 914, 916, 926, 927, 928, 937, 946, 983, 997, 1016, 1064, 1119, 1123, 1192, 1272, 1273, 1291, 1298, 1405, 1406, 1499, 1518, 1564, 1565, 1595, 1612, 1706, 1738, 1756, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1792, 1826, 1902, 1905, 1933, 1995, 2047, 2051, 2053, 2054, 2057, 2061, 2062, 2063, 2067, 2071, 2074, 2075, 2076, 2077, 2078, 2081, 2084, 2085, 2088, 2090, 2092, 2093, 2097, 2099, 2103, 2108, 2109, 2110, 2114, 2123, 2125, 2126, 2127, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2139, 2143, 2145, 2146, 2147, 2149], "true": [0, 1, 2, 3, 5, 12, 14, 19, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 37, 50, 52, 55, 60, 61, 63, 64, 66, 69, 74, 90, 92, 154, 200, 213, 264, 323, 325, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 355, 400, 404, 406, 419, 452, 462, 464, 475, 481, 491, 492, 499, 500, 503, 508, 520, 521, 560, 571, 584, 585, 594, 598, 607, 613, 621, 627, 685, 692, 697, 698, 699, 700, 701, 702, 704, 723, 724, 725, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 751, 754, 759, 761, 765, 766, 769, 770, 773, 774, 784, 790, 791, 804, 822, 835, 851, 870, 884, 886, 887, 891, 900, 903, 904, 906, 911, 912, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 935, 936, 946, 952, 955, 958, 960, 961, 967, 968, 974, 982, 983, 986, 989, 991, 997, 998, 1018, 1059, 1114, 1120, 1121, 1122, 1123, 1124, 1125, 1141, 1142, 1148, 1149, 1171, 1173, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1187, 1188, 1191, 1201, 1203, 1213, 1215, 1216, 1221, 1222, 1225, 1228, 1230, 1232, 1246, 1247, 1248, 1251, 1252, 1263, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1289, 1293, 1294, 1296, 1299, 1305, 1306, 1307, 1309, 1311, 1314, 1319, 1320, 1331, 1332, 1333, 1336, 1337, 1338, 1339, 1342, 1344, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1359, 1361, 1362, 1371, 1372, 1373, 1374, 1377, 1378, 1379, 1381, 1383, 1387, 1389, 1390, 1391, 1392, 1395, 1402, 1415, 1416, 1425, 1434, 1439, 1442, 1445, 1448, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1495, 1496, 1499, 1500, 1501, 1502, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1557, 1562, 1563, 1564, 1565, 1566, 1580, 1581, 1588, 1592, 1594, 1595, 1596, 1597, 1598, 1601, 1602, 1611, 1619, 1621, 1622, 1623, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1654, 1656, 1658, 1664, 1665, 1666, 1679, 1680, 1681, 1690, 1698, 1706, 1725, 1726, 1728, 1731, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1748, 1749, 1751, 1753, 1754, 1755, 1758, 1759, 1760, 1772, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1847, 1855, 1857, 1858, 1862, 1863, 1864, 1881, 1882, 1889, 1892, 1893, 1901, 1902, 1905, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1930, 1932, 1933, 1935, 1943, 1952, 1953, 1954, 1957, 1958, 1973, 1977, 1982, 1991, 1992, 1995, 1996, 1998, 2001, 2002, 2003, 2007, 2010, 2042, 2045, 2046, 2047, 2051, 2054, 2055, 2056, 2058, 2059, 2064, 2065, 2066, 2067, 2071, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2092, 2093, 2094, 2097, 2098, 2099, 2102, 2103, 2104, 2105, 2106, 2108, 2109, 2110, 2113, 2114, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2130, 2132, 2133, 2134, 2136, 2137, 2138, 2140, 2141, 2143, 2144, 2145, 2146], "cache_en": [0, 1064], "instanc": [0, 2, 3, 23, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 44, 47, 48, 50, 52, 55, 60, 64, 143, 621, 685, 739, 753, 762, 799, 802, 833, 835, 852, 869, 1016, 1119, 1170, 1287, 1289, 1301, 1305, 1362, 1490, 1491, 1494, 1510, 1511, 1512, 1520, 1548, 1558, 1593, 1595, 1596, 1600, 1609, 1610, 1611, 1664, 1738, 1754, 1766, 1780, 1788, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1943, 1974, 2044, 2046, 2048, 2053, 2057, 2059, 2064, 2066, 2071, 2074, 2075, 2078, 2080, 2081, 2083, 2084, 2089, 2093, 2097, 2102, 2104, 2109, 2110, 2111, 2114, 2116, 2121, 2130, 2144, 2146], "serv": [0, 7, 8, 15, 28, 89, 2054, 2097, 2101, 2109, 2110, 2131, 2136, 2140], "context": [0, 2, 5, 23, 28, 30, 32, 34, 37, 38, 47, 48, 52, 55, 64, 66, 154, 798, 900, 901, 902, 904, 906, 916, 917, 925, 926, 927, 928, 930, 946, 989, 1007, 1013, 1024, 1040, 1042, 1053, 1059, 1064, 1071, 1079, 1092, 1094, 1123, 1178, 1182, 1187, 1192, 1193, 1203, 1208, 1289, 1405, 1417, 1421, 1430, 1431, 1548, 1607, 1612, 1706, 1728, 1738, 1740, 1757, 1759, 1792, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1933, 2014, 2017, 2019, 2037, 2038, 2043, 2047, 2048, 2055, 2059, 2064, 2074, 2075, 2078, 2081, 2087, 2088, 2091, 2094, 2097, 2099, 2102, 2103, 2108, 2109, 2111, 2114, 2117, 2123, 2132, 2133, 2135, 2136, 2143, 2147], "manag": [0, 1, 2, 5, 7, 20, 28, 30, 32, 33, 34, 35, 37, 38, 45, 47, 48, 50, 52, 55, 64, 66, 91, 490, 906, 926, 927, 928, 946, 989, 1007, 1013, 1016, 1019, 1024, 1025, 1026, 1028, 1040, 1042, 1043, 1044, 1053, 1054, 1064, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1079, 1083, 1084, 1085, 1092, 1094, 1123, 1178, 1182, 1187, 1193, 1203, 1405, 1417, 1421, 1430, 1431, 1565, 1607, 1612, 1706, 1738, 1756, 1757, 1759, 1792, 1933, 2014, 2017, 2019, 2037, 2038, 2043, 2047, 2048, 2055, 2059, 2075, 2081, 2083, 2084, 2088, 2094, 2097, 2099, 2103, 2108, 2109, 2110, 2114, 2117, 2123, 2130, 2132, 2135, 2136, 2148], "decor": [0, 1, 35, 40, 44, 48, 64, 77, 911, 914, 916, 926, 946, 985, 989, 1079, 1123, 1294, 1295, 1301, 1307, 1792, 1932, 1933, 2044, 2046, 2047, 2051, 2074, 2075, 2081, 2109, 2131, 2133, 2134, 2136, 2137, 2146], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 19, 23, 24, 28, 29, 30, 33, 35, 37, 39, 47, 48, 52, 55, 56, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 92, 154, 517, 685, 740, 799, 804, 807, 833, 904, 908, 909, 925, 968, 982, 986, 997, 1061, 1064, 1089, 1119, 1181, 1203, 1208, 1289, 1294, 1307, 1345, 1367, 1410, 1416, 1443, 1457, 1458, 1459, 1483, 1484, 1501, 1541, 1542, 1543, 1548, 1551, 1554, 1577, 1592, 1738, 1745, 1793, 1802, 1805, 1825, 1841, 1935, 1995, 2042, 2046, 2047, 2051, 2054, 2055, 2062, 2065, 2066, 2067, 2071, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2087, 2088, 2089, 2091, 2092, 2094, 2097, 2099, 2101, 2102, 2103, 2104, 2106, 2109, 2114, 2117, 2118, 2119, 2121, 2123, 2130, 2132, 2133, 2134, 2135, 2136, 2141, 2144, 2145, 2148], "region": [0, 3, 5, 35, 44, 773, 774, 983, 1457, 1458, 1459, 1495, 1496, 1506, 1508, 1541, 1542, 1543, 1622, 1623, 1649, 1650, 1680, 1681, 2044, 2064, 2074, 2078, 2122, 2135, 2136], "your": [0, 1, 2, 4, 7, 8, 9, 11, 14, 15, 17, 19, 23, 27, 28, 32, 34, 35, 38, 39, 40, 44, 46, 47, 48, 50, 51, 52, 55, 59, 60, 63, 64, 490, 904, 911, 914, 916, 919, 920, 925, 926, 937, 983, 985, 986, 1197, 1202, 1203, 1289, 1293, 1294, 1299, 1302, 1305, 1306, 1307, 1548, 1555, 1596, 1738, 1756, 1759, 1792, 1827, 1902, 1991, 1996, 1998, 2043, 2044, 2046, 2047, 2051, 2053, 2055, 2064, 2065, 2066, 2068, 2074, 2075, 2076, 2078, 2081, 2082, 2083, 2085, 2087, 2088, 2089, 2090, 2092, 2093, 2095, 2099, 2101, 2105, 2108, 2110, 2114, 2119, 2120, 2123, 2126, 2127, 2129, 2130, 2131, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2142, 2143, 2145, 2146, 2147, 2152], "script": [0, 2, 4, 18, 23, 28, 31, 37, 40, 46, 48, 50, 52, 1035, 1290, 1292, 1293, 1294, 1295, 1296, 1299, 1300, 1302, 1304, 1305, 1307, 2042, 2043, 2046, 2047, 2057, 2077, 2085, 2088, 2090, 2094, 2096, 2097, 2102, 2104, 2109, 2126, 2127, 2129, 2131, 2133, 2138, 2139, 2142], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 14, 15, 18, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 63, 64, 66, 154, 490, 492, 685, 798, 805, 825, 828, 829, 830, 831, 834, 868, 872, 873, 874, 904, 925, 926, 930, 931, 946, 983, 985, 1035, 1063, 1064, 1177, 1182, 1188, 1201, 1212, 1229, 1289, 1290, 1292, 1293, 1295, 1297, 1299, 1301, 1303, 1305, 1306, 1326, 1335, 1361, 1362, 1390, 1462, 1463, 1464, 1484, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1548, 1563, 1577, 1588, 1706, 1728, 1731, 1737, 1738, 1746, 1747, 1748, 1749, 1750, 1751, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1901, 1904, 1937, 1984, 1986, 1995, 2007, 2043, 2044, 2047, 2051, 2056, 2057, 2059, 2060, 2061, 2064, 2071, 2073, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2104, 2107, 2108, 2109, 2110, 2111, 2114, 2119, 2123, 2124, 2125, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2143, 2144, 2145, 2147], "In": [0, 2, 3, 4, 5, 7, 9, 15, 18, 19, 23, 28, 30, 32, 33, 34, 35, 40, 47, 48, 50, 52, 53, 55, 57, 58, 59, 60, 63, 64, 86, 88, 91, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 125, 127, 129, 131, 134, 135, 137, 145, 147, 150, 151, 153, 156, 158, 162, 164, 166, 168, 170, 172, 181, 190, 198, 202, 205, 207, 217, 219, 225, 235, 240, 242, 248, 251, 253, 255, 257, 261, 262, 266, 273, 275, 277, 281, 283, 287, 289, 296, 298, 300, 308, 310, 312, 314, 360, 362, 364, 366, 368, 370, 372, 375, 377, 379, 380, 387, 389, 391, 393, 395, 399, 424, 427, 430, 432, 443, 445, 447, 455, 460, 470, 473, 489, 490, 494, 496, 512, 515, 526, 531, 533, 536, 538, 540, 553, 555, 557, 566, 568, 575, 579, 581, 597, 600, 602, 604, 606, 616, 626, 685, 765, 808, 833, 865, 911, 914, 916, 917, 950, 959, 967, 998, 999, 1015, 1064, 1075, 1088, 1089, 1093, 1094, 1119, 1140, 1142, 1150, 1151, 1152, 1167, 1178, 1182, 1185, 1187, 1197, 1199, 1202, 1213, 1286, 1287, 1289, 1299, 1302, 1303, 1305, 1321, 1330, 1335, 1336, 1337, 1345, 1348, 1353, 1358, 1362, 1367, 1370, 1379, 1384, 1390, 1391, 1431, 1439, 1457, 1458, 1459, 1461, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1486, 1487, 1488, 1492, 1494, 1499, 1508, 1518, 1533, 1541, 1542, 1543, 1548, 1554, 1592, 1594, 1596, 1600, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1644, 1654, 1661, 1663, 1670, 1699, 1702, 1705, 1706, 1720, 1738, 1746, 1747, 1753, 1759, 1760, 1792, 1827, 1839, 1841, 1877, 1893, 1895, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1954, 1958, 1959, 1982, 1995, 1996, 1998, 2004, 2005, 2042, 2043, 2044, 2046, 2047, 2051, 2053, 2054, 2055, 2064, 2065, 2066, 2067, 2073, 2074, 2077, 2078, 2081, 2082, 2083, 2084, 2086, 2088, 2089, 2091, 2092, 2093, 2094, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2109, 2110, 2111, 2114, 2119, 2121, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2142, 2143, 2144, 2145, 2147], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 50, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 81, 82, 83, 85, 87, 88, 90, 91, 92, 154, 158, 194, 246, 258, 317, 319, 325, 327, 332, 339, 419, 490, 503, 517, 519, 521, 541, 549, 564, 611, 618, 621, 685, 692, 693, 740, 746, 747, 748, 761, 765, 770, 784, 790, 792, 795, 798, 802, 823, 825, 832, 835, 865, 872, 873, 875, 889, 890, 891, 900, 902, 903, 904, 909, 911, 912, 914, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 938, 939, 940, 942, 943, 950, 954, 970, 980, 983, 985, 998, 999, 1001, 1016, 1018, 1019, 1023, 1030, 1031, 1032, 1033, 1034, 1053, 1054, 1061, 1062, 1064, 1076, 1078, 1079, 1089, 1093, 1094, 1104, 1117, 1119, 1120, 1121, 1122, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1159, 1162, 1170, 1173, 1176, 1177, 1180, 1181, 1182, 1184, 1186, 1188, 1191, 1196, 1197, 1199, 1201, 1202, 1203, 1207, 1209, 1212, 1213, 1219, 1230, 1233, 1243, 1251, 1252, 1253, 1286, 1287, 1289, 1292, 1293, 1295, 1297, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1319, 1320, 1325, 1326, 1331, 1333, 1335, 1338, 1339, 1343, 1346, 1348, 1351, 1352, 1359, 1361, 1362, 1379, 1381, 1384, 1390, 1402, 1410, 1415, 1416, 1434, 1443, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1495, 1496, 1499, 1507, 1511, 1512, 1515, 1516, 1517, 1518, 1520, 1530, 1531, 1532, 1533, 1535, 1536, 1538, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1563, 1564, 1566, 1568, 1577, 1580, 1582, 1583, 1584, 1588, 1592, 1593, 1594, 1595, 1596, 1597, 1600, 1602, 1603, 1607, 1608, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1629, 1630, 1631, 1632, 1633, 1634, 1639, 1645, 1646, 1648, 1649, 1650, 1654, 1665, 1672, 1673, 1675, 1676, 1677, 1679, 1680, 1681, 1706, 1710, 1725, 1727, 1728, 1731, 1737, 1738, 1743, 1744, 1745, 1746, 1747, 1752, 1753, 1757, 1759, 1766, 1783, 1790, 1792, 1794, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1857, 1862, 1863, 1864, 1883, 1885, 1889, 1897, 1898, 1900, 1908, 1914, 1935, 1938, 1939, 1943, 1946, 1951, 1954, 1958, 1959, 1973, 1974, 1990, 1991, 1992, 1993, 1995, 1998, 2005, 2006, 2007, 2008, 2013, 2041, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2053, 2054, 2055, 2057, 2059, 2060, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2071, 2073, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2103, 2104, 2105, 2106, 2107, 2109, 2110, 2111, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2124, 2125, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150], "chosen": [0, 17, 19, 60, 1107, 1311, 1485, 1706, 1905, 1930, 1977, 2067, 2074, 2078, 2081, 2091, 2104, 2145], "improv": [0, 1, 3, 9, 14, 21, 24, 28, 30, 52, 55, 64, 765, 812, 813, 814, 919, 921, 925, 1001, 1243, 1485, 1499, 1518, 1564, 1595, 1706, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1841, 2043, 2044, 2074, 2080, 2081, 2082, 2092, 2093, 2097, 2104, 2105, 2109, 2139, 2141, 2143, 2145, 2147, 2148], "perform": [0, 1, 2, 3, 4, 5, 11, 14, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 41, 47, 48, 52, 55, 59, 63, 64, 83, 123, 210, 213, 462, 490, 584, 607, 621, 627, 691, 692, 693, 694, 695, 696, 765, 786, 812, 813, 814, 858, 869, 872, 911, 914, 916, 919, 921, 922, 925, 926, 930, 951, 963, 983, 998, 999, 1025, 1075, 1100, 1101, 1114, 1139, 1162, 1164, 1176, 1177, 1180, 1197, 1217, 1254, 1289, 1299, 1300, 1305, 1333, 1335, 1338, 1342, 1345, 1346, 1350, 1351, 1359, 1360, 1362, 1367, 1376, 1389, 1394, 1405, 1406, 1436, 1439, 1442, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1487, 1490, 1491, 1499, 1518, 1548, 1554, 1556, 1564, 1577, 1592, 1595, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1673, 1691, 1706, 1712, 1713, 1728, 1738, 1741, 1742, 1754, 1759, 1780, 1787, 1789, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1847, 1855, 1883, 1897, 1901, 1928, 1934, 1935, 1936, 1937, 1957, 1959, 1995, 2043, 2044, 2047, 2051, 2055, 2060, 2061, 2064, 2065, 2066, 2068, 2071, 2073, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2087, 2090, 2091, 2092, 2093, 2099, 2101, 2102, 2103, 2104, 2105, 2107, 2109, 2110, 2111, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2126, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2137, 2138, 2139, 2141, 2146, 2147, 2148, 2149], "while": [0, 2, 3, 5, 7, 8, 11, 14, 23, 24, 28, 29, 30, 33, 35, 50, 52, 53, 55, 60, 63, 64, 87, 700, 701, 740, 865, 895, 903, 916, 917, 1019, 1094, 1177, 1196, 1252, 1289, 1292, 1305, 1306, 1362, 1431, 1440, 1452, 1468, 1508, 1510, 1511, 1512, 1518, 1548, 1554, 1567, 1580, 1588, 1592, 1596, 1673, 1731, 1738, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1794, 1893, 1901, 2000, 2048, 2051, 2053, 2054, 2066, 2067, 2074, 2075, 2078, 2081, 2082, 2083, 2084, 2086, 2089, 2091, 2093, 2094, 2099, 2101, 2104, 2107, 2109, 2111, 2114, 2115, 2116, 2118, 2119, 2120, 2130, 2133, 2135, 2136, 2137, 2139, 2145, 2148], "maintain": [0, 7, 8, 23, 24, 28, 35, 52, 55, 59, 64, 939, 949, 1020, 1201, 1205, 1456, 1487, 1492, 1647, 1738, 1780, 1794, 2043, 2067, 2074, 2075, 2078, 2081, 2089, 2097, 2132, 2135], "accuraci": [0, 19, 24, 983, 1203, 1353, 1706, 1901, 2043, 2060, 2074, 2089, 2119, 2124, 2136], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 19, 20, 22, 23, 25, 28, 29, 30, 33, 35, 39, 41, 47, 48, 51, 52, 55, 60, 61, 62, 63, 64, 92, 93, 97, 99, 101, 103, 105, 107, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 124, 126, 128, 130, 132, 133, 136, 138, 139, 140, 141, 142, 144, 146, 148, 149, 152, 154, 155, 157, 158, 159, 160, 161, 163, 165, 167, 169, 171, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 193, 196, 197, 201, 203, 204, 206, 208, 209, 211, 214, 215, 216, 218, 221, 222, 224, 228, 229, 230, 231, 232, 233, 234, 238, 239, 241, 243, 244, 245, 247, 249, 250, 252, 254, 256, 259, 260, 265, 267, 268, 269, 270, 271, 272, 274, 276, 278, 279, 280, 282, 284, 285, 286, 288, 291, 292, 295, 297, 299, 301, 302, 303, 304, 305, 306, 307, 309, 311, 313, 317, 325, 326, 327, 328, 329, 331, 332, 338, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 363, 365, 367, 369, 371, 373, 374, 376, 378, 382, 383, 384, 385, 386, 388, 390, 392, 394, 396, 397, 398, 400, 401, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 428, 429, 431, 433, 434, 435, 436, 437, 438, 442, 444, 446, 454, 456, 457, 459, 461, 463, 464, 465, 466, 468, 469, 471, 472, 474, 481, 483, 484, 486, 488, 490, 491, 492, 493, 495, 497, 498, 499, 501, 502, 503, 505, 506, 509, 510, 511, 514, 519, 521, 522, 523, 525, 527, 528, 529, 530, 532, 534, 535, 537, 539, 542, 543, 544, 546, 547, 551, 552, 554, 556, 558, 559, 560, 565, 567, 569, 571, 572, 573, 574, 576, 577, 578, 580, 582, 583, 594, 595, 596, 598, 599, 601, 603, 605, 609, 610, 613, 614, 615, 618, 619, 620, 622, 623, 624, 625, 685, 698, 700, 701, 704, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 750, 751, 753, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 773, 776, 777, 778, 779, 784, 785, 786, 787, 788, 789, 790, 799, 850, 870, 871, 872, 873, 876, 885, 886, 887, 890, 901, 903, 904, 905, 906, 909, 910, 911, 913, 914, 916, 917, 921, 925, 926, 927, 930, 935, 936, 938, 943, 952, 954, 961, 963, 966, 980, 983, 985, 987, 988, 1003, 1016, 1018, 1019, 1023, 1025, 1026, 1028, 1043, 1044, 1053, 1054, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1083, 1084, 1085, 1114, 1117, 1119, 1120, 1122, 1123, 1132, 1137, 1155, 1158, 1171, 1174, 1179, 1180, 1181, 1183, 1192, 1196, 1201, 1203, 1207, 1215, 1217, 1233, 1242, 1243, 1247, 1248, 1252, 1253, 1261, 1262, 1263, 1289, 1293, 1301, 1305, 1306, 1308, 1309, 1311, 1319, 1321, 1326, 1329, 1330, 1332, 1335, 1337, 1344, 1346, 1347, 1350, 1355, 1359, 1360, 1362, 1368, 1370, 1376, 1377, 1379, 1387, 1389, 1390, 1391, 1392, 1394, 1395, 1405, 1406, 1413, 1416, 1439, 1441, 1442, 1452, 1460, 1461, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1490, 1491, 1493, 1499, 1501, 1507, 1508, 1513, 1514, 1518, 1539, 1540, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1560, 1561, 1562, 1564, 1576, 1578, 1580, 1581, 1593, 1594, 1595, 1596, 1597, 1598, 1601, 1607, 1608, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1738, 1740, 1753, 1754, 1755, 1759, 1765, 1774, 1783, 1788, 1791, 1792, 1793, 1794, 1798, 1805, 1845, 1855, 1856, 1866, 1868, 1870, 1872, 1873, 1877, 1880, 1883, 1889, 1898, 1901, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1925, 1933, 1934, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1957, 1968, 1970, 1973, 1979, 1980, 1984, 1986, 1991, 1995, 1998, 2002, 2003, 2008, 2010, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2052, 2053, 2054, 2056, 2058, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2083, 2086, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2097, 2098, 2099, 2103, 2104, 2105, 2108, 2109, 2110, 2114, 2115, 2116, 2117, 2118, 2120, 2121, 2123, 2126, 2128, 2130, 2131, 2132, 2133, 2134, 2137, 2138, 2139, 2143, 2144, 2145, 2146, 2147, 2149, 2150], "detail": [0, 1, 2, 3, 7, 8, 11, 13, 14, 15, 17, 18, 23, 28, 29, 30, 33, 35, 37, 47, 48, 52, 53, 55, 61, 64, 81, 82, 83, 92, 154, 327, 499, 528, 618, 685, 740, 743, 744, 745, 746, 747, 748, 765, 771, 772, 773, 776, 777, 778, 779, 784, 785, 787, 788, 789, 790, 799, 870, 871, 872, 873, 884, 901, 903, 904, 905, 906, 909, 910, 911, 914, 916, 917, 930, 966, 987, 988, 1003, 1023, 1025, 1026, 1028, 1043, 1044, 1053, 1064, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1083, 1084, 1085, 1102, 1119, 1158, 1181, 1192, 1201, 1233, 1237, 1239, 1243, 1270, 1277, 1289, 1293, 1305, 1326, 1329, 1347, 1354, 1362, 1368, 1370, 1390, 1416, 1434, 1452, 1456, 1466, 1478, 1479, 1480, 1484, 1490, 1491, 1492, 1493, 1495, 1496, 1499, 1518, 1548, 1554, 1560, 1561, 1564, 1576, 1597, 1607, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1655, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1722, 1723, 1724, 1728, 1733, 1734, 1738, 1740, 1783, 1793, 1801, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1827, 1832, 1845, 1857, 1889, 1900, 1925, 1934, 1980, 1991, 1995, 1998, 2042, 2044, 2045, 2046, 2047, 2051, 2054, 2058, 2061, 2075, 2076, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2088, 2089, 2092, 2093, 2094, 2099, 2102, 2103, 2104, 2106, 2108, 2109, 2110, 2111, 2114, 2116, 2118, 2119, 2120, 2121, 2123, 2127, 2130, 2133, 2142, 2145, 2146, 2147], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 19, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 55, 58, 60, 61, 62, 63, 64, 65, 84, 86, 87, 90, 101, 154, 195, 212, 264, 317, 325, 419, 452, 490, 491, 492, 501, 502, 517, 519, 521, 548, 564, 584, 621, 685, 691, 694, 740, 773, 774, 784, 790, 797, 799, 833, 850, 869, 876, 888, 891, 904, 911, 919, 920, 921, 922, 923, 924, 925, 926, 930, 931, 935, 936, 937, 939, 946, 951, 954, 963, 971, 974, 975, 976, 982, 983, 985, 991, 998, 999, 1003, 1018, 1022, 1032, 1034, 1057, 1063, 1064, 1076, 1102, 1119, 1158, 1162, 1167, 1173, 1177, 1178, 1183, 1186, 1187, 1188, 1191, 1203, 1204, 1212, 1213, 1216, 1217, 1226, 1229, 1243, 1278, 1279, 1281, 1282, 1285, 1289, 1290, 1292, 1301, 1302, 1303, 1305, 1306, 1310, 1311, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1359, 1360, 1361, 1362, 1370, 1376, 1379, 1384, 1390, 1391, 1394, 1415, 1434, 1439, 1440, 1441, 1452, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1490, 1491, 1494, 1497, 1499, 1500, 1502, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1562, 1563, 1564, 1576, 1577, 1580, 1581, 1582, 1583, 1585, 1588, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1603, 1607, 1609, 1619, 1621, 1622, 1623, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1646, 1652, 1654, 1663, 1665, 1666, 1690, 1693, 1695, 1698, 1699, 1706, 1714, 1725, 1726, 1727, 1728, 1737, 1738, 1739, 1740, 1741, 1742, 1746, 1747, 1753, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1783, 1788, 1792, 1793, 1794, 1795, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1847, 1854, 1857, 1858, 1880, 1886, 1893, 1898, 1901, 1907, 1925, 1931, 1935, 1937, 1938, 1939, 1943, 1949, 1954, 1958, 1968, 1973, 1975, 1980, 1984, 1986, 1995, 1996, 2007, 2010, 2012, 2042, 2043, 2044, 2046, 2051, 2053, 2056, 2057, 2060, 2062, 2064, 2065, 2066, 2073, 2076, 2077, 2078, 2080, 2083, 2084, 2086, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2097, 2101, 2102, 2103, 2108, 2109, 2110, 2111, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2139, 2141, 2143, 2144, 2145, 2147, 2149], "enter": [0, 28, 906, 907, 908, 926, 2081, 2133], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 18, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 40, 41, 45, 46, 47, 48, 51, 52, 53, 55, 60, 63, 64, 91, 154, 258, 490, 503, 549, 621, 702, 763, 786, 798, 799, 800, 808, 818, 819, 820, 821, 823, 824, 825, 826, 832, 833, 835, 865, 876, 900, 901, 902, 904, 911, 914, 916, 917, 919, 925, 930, 931, 939, 959, 965, 969, 970, 998, 1018, 1057, 1064, 1075, 1120, 1121, 1122, 1135, 1136, 1138, 1139, 1140, 1142, 1146, 1150, 1151, 1152, 1167, 1176, 1177, 1184, 1185, 1186, 1188, 1194, 1199, 1200, 1201, 1203, 1207, 1213, 1252, 1288, 1289, 1293, 1296, 1300, 1301, 1303, 1305, 1311, 1319, 1321, 1325, 1326, 1327, 1330, 1335, 1336, 1337, 1342, 1343, 1346, 1350, 1353, 1359, 1361, 1427, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1460, 1461, 1465, 1466, 1475, 1476, 1477, 1484, 1485, 1489, 1493, 1494, 1497, 1498, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1514, 1534, 1535, 1537, 1538, 1539, 1547, 1548, 1556, 1558, 1559, 1562, 1567, 1568, 1569, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1598, 1599, 1600, 1625, 1629, 1630, 1631, 1671, 1691, 1692, 1706, 1728, 1738, 1746, 1747, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1771, 1781, 1782, 1784, 1787, 1789, 1794, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1832, 1873, 1889, 1903, 1905, 1958, 1965, 2007, 2012, 2021, 2042, 2044, 2045, 2046, 2051, 2054, 2055, 2057, 2058, 2060, 2064, 2065, 2066, 2067, 2071, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2087, 2088, 2089, 2090, 2091, 2093, 2094, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2109, 2110, 2111, 2114, 2116, 2119, 2121, 2124, 2125, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2138, 2140, 2141, 2143, 2144, 2145, 2146, 2147], "should": [0, 1, 3, 4, 5, 9, 14, 15, 17, 18, 19, 20, 23, 24, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 50, 52, 53, 55, 59, 60, 63, 64, 66, 71, 72, 75, 86, 90, 92, 123, 154, 158, 317, 325, 402, 406, 419, 449, 450, 451, 452, 453, 491, 492, 500, 517, 519, 521, 587, 588, 589, 591, 592, 691, 694, 695, 740, 765, 777, 778, 779, 799, 802, 808, 825, 833, 847, 849, 865, 866, 867, 870, 876, 900, 901, 902, 903, 904, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 925, 935, 936, 951, 952, 953, 954, 961, 974, 989, 990, 1005, 1018, 1023, 1033, 1034, 1053, 1055, 1064, 1110, 1120, 1121, 1122, 1132, 1137, 1140, 1141, 1142, 1150, 1151, 1152, 1155, 1170, 1173, 1174, 1175, 1177, 1178, 1182, 1186, 1187, 1188, 1193, 1201, 1202, 1207, 1209, 1247, 1248, 1251, 1252, 1286, 1287, 1289, 1290, 1294, 1299, 1301, 1302, 1305, 1306, 1307, 1309, 1334, 1359, 1360, 1361, 1367, 1376, 1379, 1380, 1381, 1402, 1415, 1416, 1452, 1460, 1461, 1465, 1481, 1483, 1484, 1486, 1487, 1488, 1491, 1492, 1513, 1518, 1540, 1548, 1554, 1555, 1556, 1571, 1576, 1597, 1601, 1619, 1625, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1646, 1654, 1706, 1728, 1730, 1731, 1732, 1735, 1736, 1738, 1739, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1780, 1781, 1782, 1785, 1787, 1798, 1799, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1857, 1859, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1880, 1896, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1940, 1941, 1942, 1943, 1944, 1945, 1958, 1973, 1982, 2007, 2012, 2013, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2051, 2053, 2054, 2055, 2058, 2060, 2064, 2066, 2067, 2071, 2073, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2089, 2091, 2092, 2093, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2109, 2111, 2114, 2118, 2119, 2121, 2127, 2129, 2131, 2133, 2134, 2135, 2136, 2138, 2139, 2141, 2143, 2144, 2145, 2146], "call": [0, 1, 2, 3, 8, 11, 14, 15, 18, 19, 20, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 47, 50, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 66, 68, 75, 82, 88, 154, 294, 327, 339, 462, 490, 491, 492, 560, 584, 618, 621, 685, 702, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 786, 796, 804, 833, 868, 872, 873, 904, 911, 912, 913, 914, 915, 916, 917, 919, 921, 922, 925, 926, 935, 936, 937, 939, 946, 950, 966, 983, 988, 989, 993, 1016, 1019, 1023, 1035, 1053, 1055, 1065, 1066, 1075, 1083, 1084, 1086, 1087, 1117, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1171, 1176, 1177, 1188, 1190, 1194, 1201, 1212, 1233, 1253, 1274, 1286, 1289, 1292, 1294, 1300, 1301, 1302, 1309, 1345, 1353, 1357, 1359, 1361, 1362, 1391, 1456, 1462, 1463, 1464, 1484, 1485, 1486, 1487, 1488, 1490, 1492, 1494, 1533, 1544, 1545, 1546, 1548, 1555, 1556, 1577, 1588, 1600, 1632, 1633, 1634, 1640, 1641, 1642, 1647, 1665, 1706, 1725, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1746, 1747, 1756, 1759, 1766, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1782, 1788, 1789, 1791, 1792, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1870, 1897, 1903, 1904, 1933, 1952, 1953, 1954, 1975, 1991, 1995, 1996, 1998, 2002, 2003, 2007, 2008, 2013, 2030, 2031, 2032, 2033, 2042, 2044, 2048, 2051, 2055, 2060, 2064, 2066, 2067, 2068, 2074, 2075, 2077, 2078, 2080, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2124, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2139, 2141, 2143, 2144, 2145, 2146, 2147, 2149, 2150], "model": [0, 1, 2, 3, 4, 5, 8, 9, 12, 24, 28, 29, 30, 32, 34, 35, 46, 48, 51, 53, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 85, 798, 799, 800, 804, 805, 806, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 833, 834, 835, 845, 846, 847, 848, 849, 851, 865, 868, 869, 870, 871, 872, 873, 874, 926, 939, 983, 985, 1065, 1086, 1176, 1177, 1178, 1186, 1188, 1289, 1293, 1294, 1299, 1301, 1305, 1307, 1361, 1452, 1484, 1501, 1512, 1513, 1548, 1554, 1577, 1588, 1592, 1594, 1595, 1596, 1653, 1738, 1739, 1740, 1746, 1747, 1752, 1754, 1757, 1770, 1789, 1790, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1821, 1823, 1824, 1825, 1826, 1827, 1832, 1839, 1841, 1954, 2007, 2030, 2032, 2043, 2044, 2046, 2047, 2048, 2055, 2057, 2058, 2067, 2075, 2077, 2078, 2080, 2081, 2084, 2085, 2087, 2089, 2090, 2091, 2092, 2093, 2094, 2096, 2099, 2103, 2105, 2109, 2110, 2112, 2114, 2115, 2119, 2124, 2125, 2126, 2129, 2130, 2131, 2133, 2135, 2136, 2137, 2141, 2143, 2145], "": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 23, 24, 28, 29, 30, 32, 34, 35, 36, 37, 40, 43, 44, 45, 47, 48, 49, 52, 53, 55, 57, 59, 60, 63, 64, 82, 83, 88, 89, 90, 91, 467, 485, 497, 500, 517, 548, 562, 585, 629, 685, 694, 698, 699, 700, 701, 704, 740, 765, 799, 800, 801, 809, 823, 824, 825, 829, 832, 835, 865, 872, 873, 886, 888, 889, 890, 891, 910, 911, 912, 913, 916, 920, 921, 923, 931, 950, 967, 969, 982, 991, 997, 998, 999, 1000, 1005, 1014, 1016, 1018, 1020, 1024, 1040, 1044, 1053, 1055, 1060, 1061, 1064, 1065, 1066, 1086, 1087, 1088, 1094, 1111, 1114, 1116, 1117, 1119, 1133, 1134, 1136, 1137, 1138, 1141, 1142, 1144, 1145, 1148, 1149, 1151, 1152, 1153, 1154, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1186, 1188, 1196, 1201, 1203, 1233, 1243, 1251, 1252, 1253, 1276, 1278, 1286, 1287, 1289, 1293, 1300, 1301, 1305, 1320, 1321, 1331, 1332, 1333, 1335, 1338, 1342, 1344, 1346, 1347, 1351, 1352, 1353, 1354, 1359, 1361, 1362, 1377, 1384, 1389, 1391, 1394, 1396, 1397, 1402, 1405, 1406, 1410, 1415, 1417, 1421, 1426, 1431, 1438, 1439, 1442, 1444, 1450, 1451, 1452, 1460, 1461, 1462, 1463, 1464, 1467, 1484, 1490, 1501, 1548, 1549, 1554, 1558, 1565, 1577, 1580, 1582, 1588, 1592, 1594, 1596, 1602, 1603, 1626, 1627, 1638, 1651, 1654, 1665, 1666, 1671, 1706, 1712, 1725, 1728, 1738, 1739, 1740, 1746, 1747, 1759, 1770, 1783, 1787, 1794, 1795, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1847, 1851, 1858, 1873, 1876, 1877, 1880, 1881, 1882, 1884, 1886, 1893, 1900, 1901, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1952, 1953, 1954, 1957, 1958, 1959, 1960, 1961, 1970, 1974, 1976, 1982, 1998, 2002, 2003, 2004, 2007, 2008, 2012, 2014, 2017, 2026, 2029, 2030, 2031, 2032, 2033, 2038, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2054, 2058, 2060, 2061, 2064, 2065, 2066, 2067, 2071, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2091, 2092, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2103, 2104, 2106, 2107, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2125, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2139, 2140, 2141, 2143, 2144, 2145, 2146, 2149], "wrap": [0, 1, 15, 19, 23, 24, 28, 32, 33, 38, 40, 50, 55, 59, 60, 62, 64, 66, 264, 796, 797, 1019, 1094, 1177, 1203, 1289, 1305, 1431, 1484, 1548, 1588, 1732, 1738, 1757, 1783, 1828, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2038, 2044, 2045, 2047, 2051, 2054, 2074, 2075, 2078, 2080, 2081, 2082, 2089, 2095, 2099, 2103, 2104, 2109, 2110, 2123, 2125, 2131, 2133, 2134, 2136, 2145, 2146], "forward": [0, 5, 7, 8, 12, 14, 24, 28, 29, 30, 32, 33, 35, 52, 53, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 154, 225, 226, 685, 740, 753, 762, 765, 808, 823, 824, 825, 829, 833, 872, 873, 900, 902, 903, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 921, 922, 925, 926, 927, 928, 930, 990, 991, 997, 1064, 1111, 1123, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1177, 1179, 1180, 1181, 1183, 1186, 1289, 1292, 1293, 1294, 1296, 1300, 1301, 1305, 1306, 1307, 1456, 1460, 1462, 1463, 1464, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1499, 1518, 1533, 1544, 1545, 1546, 1548, 1549, 1550, 1554, 1555, 1558, 1559, 1563, 1564, 1565, 1577, 1592, 1593, 1594, 1595, 1596, 1640, 1641, 1642, 1647, 1693, 1706, 1728, 1731, 1732, 1737, 1738, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777, 1788, 1791, 1792, 1864, 1931, 1995, 2043, 2044, 2046, 2047, 2051, 2053, 2057, 2059, 2064, 2066, 2071, 2073, 2074, 2075, 2077, 2078, 2080, 2082, 2083, 2084, 2086, 2088, 2089, 2092, 2094, 2097, 2099, 2101, 2102, 2103, 2104, 2109, 2123, 2124, 2125, 2126, 2127, 2130, 2131, 2133, 2134, 2136, 2139, 2140, 2141, 2143, 2144, 2145], "pass": [0, 1, 3, 5, 6, 7, 14, 20, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 57, 59, 60, 63, 64, 66, 74, 75, 81, 88, 154, 258, 419, 452, 492, 517, 519, 521, 548, 564, 685, 799, 800, 832, 835, 870, 872, 891, 900, 901, 902, 903, 904, 911, 914, 916, 917, 925, 937, 967, 983, 985, 990, 991, 992, 1016, 1053, 1064, 1079, 1109, 1140, 1141, 1142, 1150, 1151, 1152, 1158, 1171, 1173, 1176, 1177, 1181, 1182, 1183, 1186, 1187, 1201, 1203, 1213, 1221, 1222, 1226, 1252, 1287, 1289, 1290, 1293, 1295, 1299, 1301, 1305, 1306, 1334, 1350, 1352, 1361, 1410, 1452, 1453, 1454, 1455, 1462, 1463, 1464, 1484, 1490, 1491, 1495, 1496, 1548, 1553, 1554, 1563, 1577, 1593, 1594, 1595, 1596, 1601, 1619, 1649, 1650, 1654, 1665, 1666, 1693, 1706, 1728, 1731, 1732, 1737, 1738, 1757, 1759, 1761, 1766, 1780, 1783, 1787, 1789, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1822, 1823, 1824, 1825, 1826, 1827, 1889, 1893, 1897, 1958, 2042, 2044, 2048, 2051, 2055, 2057, 2059, 2060, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2077, 2080, 2081, 2082, 2084, 2086, 2088, 2089, 2092, 2094, 2097, 2099, 2101, 2102, 2103, 2109, 2111, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2125, 2126, 2131, 2132, 2133, 2134, 2135, 2136, 2142, 2143, 2145, 2146], "e": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 51, 52, 53, 55, 58, 60, 62, 63, 64, 65, 66, 74, 75, 154, 262, 339, 381, 490, 584, 621, 740, 753, 762, 765, 799, 800, 823, 825, 851, 865, 869, 870, 872, 873, 891, 900, 904, 911, 913, 916, 917, 926, 930, 931, 950, 962, 964, 967, 985, 997, 1050, 1064, 1090, 1119, 1129, 1170, 1177, 1182, 1186, 1196, 1203, 1209, 1211, 1216, 1219, 1238, 1240, 1268, 1269, 1271, 1274, 1286, 1289, 1296, 1297, 1305, 1325, 1326, 1341, 1353, 1361, 1362, 1363, 1365, 1367, 1384, 1395, 1403, 1411, 1423, 1429, 1460, 1461, 1462, 1463, 1464, 1467, 1475, 1476, 1477, 1483, 1484, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1499, 1502, 1507, 1510, 1511, 1512, 1513, 1514, 1518, 1520, 1521, 1522, 1523, 1539, 1548, 1549, 1554, 1555, 1557, 1558, 1562, 1564, 1580, 1588, 1592, 1596, 1597, 1598, 1600, 1629, 1630, 1631, 1638, 1645, 1646, 1654, 1665, 1698, 1706, 1725, 1727, 1728, 1738, 1739, 1740, 1741, 1742, 1746, 1747, 1754, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1780, 1781, 1787, 1791, 1794, 1807, 1808, 1826, 1850, 1861, 1879, 1886, 1893, 1897, 1901, 1903, 1908, 1943, 1954, 1958, 2024, 2035, 2042, 2044, 2046, 2047, 2048, 2051, 2054, 2055, 2057, 2062, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2076, 2077, 2078, 2081, 2082, 2083, 2084, 2087, 2088, 2089, 2092, 2094, 2097, 2099, 2101, 2102, 2103, 2104, 2109, 2110, 2111, 2114, 2115, 2117, 2118, 2119, 2121, 2130, 2132, 2133, 2135, 2136, 2143, 2145, 2146, 2149, 2150], "network": [0, 1, 7, 8, 15, 32, 35, 47, 852, 1064, 1289, 1305, 1306, 1456, 1462, 1463, 1464, 1467, 1478, 1479, 1480, 1484, 1485, 1486, 1487, 1488, 1489, 1492, 1501, 1513, 1518, 1548, 1555, 1560, 1561, 1567, 1576, 1578, 1588, 1592, 1594, 1596, 1619, 1653, 1654, 1709, 1728, 1754, 1757, 1783, 1788, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 1832, 1839, 2044, 2046, 2047, 2073, 2074, 2081, 2092, 2093, 2096, 2099, 2101, 2104, 2109, 2110, 2111, 2132], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 14, 15, 23, 24, 28, 30, 33, 44, 47, 48, 52, 53, 55, 64, 83, 85, 325, 492, 521, 587, 773, 774, 870, 872, 985, 1075, 1147, 1149, 1189, 1251, 1287, 1289, 1290, 1319, 1398, 1400, 1457, 1458, 1459, 1465, 1467, 1484, 1493, 1501, 1535, 1544, 1545, 1546, 1548, 1554, 1592, 1593, 1594, 1595, 1596, 1599, 1609, 1621, 1622, 1623, 1638, 1651, 1671, 1738, 1746, 1747, 1781, 1782, 1784, 1921, 1983, 1984, 1985, 1986, 2042, 2044, 2046, 2047, 2051, 2054, 2057, 2060, 2064, 2075, 2077, 2078, 2083, 2084, 2085, 2088, 2089, 2094, 2096, 2097, 2099, 2101, 2103, 2104, 2109, 2111, 2119, 2123, 2126, 2127, 2129, 2131, 2134, 2135, 2136, 2137, 2141, 2142, 2143, 2145, 2146, 2147], "loss": [0, 1, 24, 28, 29, 32, 33, 34, 35, 55, 1178, 1286, 1325, 1326, 1335, 1353, 1452, 1460, 1461, 1467, 1481, 1483, 1490, 1501, 1507, 1508, 1513, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1598, 1626, 1627, 1637, 1638, 1651, 1663, 1666, 1690, 1698, 1710, 1722, 1723, 1738, 1781, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1821, 1823, 1824, 1825, 1826, 1827, 1831, 1901, 2042, 2043, 2060, 2066, 2075, 2078, 2080, 2083, 2085, 2086, 2089, 2101, 2104, 2105, 2109, 2110, 2119], "comput": [0, 3, 5, 7, 8, 11, 14, 17, 23, 24, 28, 30, 33, 34, 35, 37, 40, 52, 53, 55, 56, 57, 59, 154, 294, 490, 491, 499, 685, 686, 688, 702, 703, 765, 773, 774, 808, 810, 828, 829, 830, 831, 833, 834, 900, 904, 906, 907, 909, 911, 912, 913, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 935, 936, 955, 956, 957, 958, 959, 960, 971, 973, 974, 975, 976, 982, 999, 1001, 1015, 1061, 1064, 1096, 1102, 1111, 1113, 1116, 1119, 1123, 1124, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1162, 1164, 1165, 1166, 1168, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1193, 1203, 1231, 1232, 1233, 1243, 1246, 1249, 1250, 1251, 1252, 1266, 1289, 1292, 1301, 1309, 1310, 1312, 1314, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1358, 1359, 1360, 1362, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1388, 1389, 1390, 1393, 1439, 1441, 1445, 1452, 1456, 1457, 1458, 1459, 1462, 1463, 1464, 1478, 1479, 1480, 1482, 1483, 1485, 1490, 1491, 1499, 1502, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1538, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1554, 1555, 1557, 1562, 1563, 1564, 1582, 1584, 1588, 1597, 1598, 1601, 1621, 1622, 1623, 1636, 1637, 1645, 1646, 1653, 1654, 1656, 1663, 1665, 1666, 1673, 1679, 1680, 1681, 1682, 1683, 1684, 1690, 1695, 1698, 1706, 1710, 1712, 1713, 1722, 1723, 1728, 1731, 1737, 1738, 1740, 1744, 1746, 1747, 1748, 1750, 1753, 1755, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1773, 1774, 1781, 1787, 1791, 1792, 1794, 1804, 1805, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1851, 1857, 1858, 1862, 1863, 1877, 1878, 1901, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1931, 1934, 1935, 1936, 1937, 1954, 1958, 1959, 1975, 1980, 2004, 2007, 2043, 2044, 2047, 2051, 2054, 2055, 2060, 2065, 2066, 2068, 2071, 2074, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2089, 2090, 2096, 2097, 2099, 2101, 2104, 2107, 2109, 2114, 2115, 2120, 2124, 2127, 2129, 2130, 2132, 2133, 2134, 2135, 2138, 2144, 2147, 2148, 2149], "backward": [0, 1, 5, 9, 28, 29, 30, 32, 33, 34, 35, 48, 52, 55, 59, 60, 64, 66, 294, 339, 491, 492, 500, 507, 508, 517, 519, 521, 585, 685, 691, 694, 765, 823, 824, 825, 901, 909, 910, 911, 912, 913, 914, 915, 916, 917, 920, 922, 925, 928, 930, 935, 936, 946, 949, 951, 963, 988, 1064, 1123, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1176, 1177, 1201, 1289, 1362, 1370, 1384, 1394, 1460, 1461, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1490, 1499, 1500, 1501, 1514, 1518, 1519, 1535, 1539, 1540, 1548, 1554, 1555, 1562, 1564, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1626, 1627, 1637, 1638, 1654, 1665, 1690, 1693, 1729, 1733, 1734, 1738, 1759, 1792, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1845, 1857, 1931, 1935, 1939, 1958, 1995, 2042, 2043, 2045, 2047, 2051, 2053, 2059, 2066, 2067, 2071, 2073, 2074, 2080, 2081, 2082, 2083, 2084, 2085, 2088, 2089, 2091, 2092, 2097, 2101, 2102, 2103, 2104, 2109, 2114, 2115, 2120, 2126, 2127, 2130, 2131, 2136, 2139, 2141, 2143, 2144, 2145], "under": [0, 1, 3, 4, 5, 9, 23, 28, 33, 34, 47, 52, 55, 56, 58, 60, 63, 83, 926, 930, 937, 942, 968, 1202, 1289, 1467, 1548, 1619, 1645, 1646, 1753, 1756, 1759, 1801, 1878, 2051, 2056, 2064, 2074, 2075, 2078, 2080, 2082, 2084, 2086, 2091, 2097, 2102, 2104, 2107, 2108, 2111, 2115, 2119, 2123, 2125, 2132, 2134, 2135, 2140, 2143, 2145], "recommend": [0, 1, 5, 19, 23, 24, 28, 30, 34, 35, 37, 47, 48, 55, 59, 63, 64, 66, 86, 87, 89, 452, 904, 993, 998, 999, 1140, 1141, 1142, 1150, 1151, 1152, 1276, 1292, 1335, 1362, 1408, 1410, 1452, 1484, 1666, 1738, 1864, 1991, 1996, 2042, 2044, 2051, 2058, 2062, 2064, 2066, 2073, 2074, 2075, 2077, 2078, 2081, 2082, 2089, 2091, 2092, 2094, 2097, 2099, 2102, 2104, 2120, 2137], "correspond": [0, 1, 7, 18, 20, 23, 24, 28, 30, 32, 34, 35, 47, 52, 55, 62, 64, 84, 419, 477, 478, 517, 519, 521, 548, 549, 685, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 740, 799, 804, 845, 847, 868, 869, 870, 875, 891, 900, 902, 903, 904, 911, 913, 916, 917, 919, 921, 930, 950, 1000, 1064, 1085, 1114, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1199, 1203, 1243, 1252, 1278, 1289, 1306, 1320, 1325, 1326, 1331, 1334, 1353, 1360, 1362, 1376, 1391, 1434, 1461, 1484, 1490, 1518, 1548, 1554, 1571, 1595, 1645, 1654, 1692, 1738, 1754, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1788, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1832, 1850, 1851, 1861, 1884, 1893, 1898, 1908, 1943, 1952, 1953, 1958, 1990, 1993, 1994, 2002, 2003, 2042, 2044, 2045, 2047, 2051, 2060, 2065, 2066, 2074, 2075, 2078, 2080, 2081, 2082, 2084, 2086, 2088, 2089, 2093, 2097, 2099, 2102, 2103, 2104, 2109, 2110, 2114, 2115, 2116, 2119, 2121, 2124, 2125, 2133, 2137, 2142, 2143, 2145], "creat": [0, 1, 3, 5, 6, 7, 9, 14, 19, 23, 24, 28, 30, 32, 33, 34, 35, 37, 39, 45, 47, 48, 50, 51, 52, 53, 55, 63, 64, 66, 86, 87, 89, 91, 154, 226, 258, 339, 490, 584, 585, 587, 588, 589, 591, 592, 685, 737, 743, 744, 745, 750, 751, 761, 769, 798, 799, 800, 822, 823, 824, 825, 828, 833, 865, 889, 890, 891, 904, 909, 925, 926, 927, 928, 950, 962, 964, 975, 976, 980, 981, 983, 985, 1000, 1028, 1061, 1062, 1071, 1107, 1122, 1171, 1172, 1173, 1174, 1203, 1204, 1205, 1206, 1209, 1286, 1289, 1292, 1302, 1308, 1313, 1319, 1320, 1326, 1328, 1347, 1360, 1376, 1391, 1434, 1460, 1481, 1490, 1491, 1494, 1508, 1514, 1539, 1540, 1548, 1551, 1552, 1553, 1577, 1580, 1581, 1588, 1597, 1598, 1600, 1608, 1610, 1611, 1738, 1759, 1780, 1787, 1792, 1800, 1801, 1827, 1896, 1897, 1926, 1938, 1943, 1973, 1980, 2043, 2047, 2048, 2057, 2064, 2071, 2074, 2075, 2078, 2080, 2081, 2082, 2084, 2086, 2089, 2090, 2091, 2094, 2099, 2101, 2102, 2103, 2104, 2109, 2110, 2111, 2114, 2116, 2118, 2119, 2120, 2121, 2123, 2124, 2125, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2144, 2145, 2147, 2150], "optim": [0, 1, 2, 7, 8, 14, 15, 24, 28, 29, 30, 33, 35, 53, 55, 64, 828, 930, 939, 943, 983, 986, 1119, 1186, 1203, 1289, 1293, 1299, 1301, 1305, 1306, 1345, 1362, 1462, 1463, 1464, 1483, 1490, 1510, 1511, 1512, 1548, 1551, 1552, 1553, 1554, 1581, 1588, 1596, 1706, 1728, 1738, 1746, 1747, 1753, 1759, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1847, 2043, 2044, 2046, 2057, 2066, 2071, 2073, 2077, 2080, 2081, 2083, 2085, 2086, 2089, 2091, 2099, 2103, 2104, 2114, 2126, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2136, 2138, 2145, 2148, 2152], "default": [0, 2, 3, 5, 9, 11, 12, 14, 18, 19, 20, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 44, 45, 46, 47, 48, 51, 52, 53, 55, 58, 59, 60, 61, 62, 64, 66, 70, 71, 74, 75, 76, 77, 79, 83, 86, 87, 89, 90, 92, 154, 159, 174, 176, 179, 182, 183, 184, 199, 210, 213, 244, 271, 294, 301, 329, 335, 397, 419, 449, 450, 451, 452, 453, 462, 500, 503, 504, 524, 529, 584, 585, 587, 627, 685, 699, 702, 717, 718, 719, 720, 721, 722, 725, 735, 736, 737, 738, 740, 760, 763, 765, 773, 774, 775, 777, 778, 779, 784, 790, 799, 805, 811, 816, 817, 822, 825, 828, 829, 830, 831, 834, 837, 838, 839, 840, 841, 842, 843, 844, 852, 853, 854, 855, 856, 857, 859, 860, 865, 866, 867, 869, 876, 890, 891, 904, 906, 907, 908, 911, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 950, 952, 961, 967, 971, 974, 975, 976, 980, 983, 985, 1005, 1015, 1018, 1020, 1023, 1025, 1029, 1032, 1033, 1034, 1038, 1039, 1046, 1047, 1050, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1089, 1090, 1093, 1095, 1096, 1097, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1114, 1119, 1120, 1121, 1122, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1187, 1188, 1196, 1197, 1233, 1235, 1236, 1242, 1243, 1247, 1248, 1251, 1252, 1265, 1278, 1280, 1286, 1289, 1290, 1293, 1301, 1305, 1306, 1309, 1310, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1376, 1379, 1381, 1387, 1389, 1390, 1391, 1395, 1402, 1403, 1411, 1415, 1416, 1419, 1420, 1423, 1427, 1429, 1438, 1439, 1441, 1442, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1576, 1580, 1581, 1585, 1586, 1588, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1651, 1653, 1654, 1656, 1658, 1665, 1666, 1673, 1679, 1680, 1681, 1690, 1691, 1693, 1698, 1706, 1712, 1713, 1721, 1725, 1731, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1748, 1749, 1751, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1781, 1782, 1784, 1786, 1787, 1788, 1789, 1791, 1793, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1847, 1855, 1857, 1858, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1879, 1885, 1886, 1889, 1893, 1897, 1898, 1899, 1900, 1901, 1905, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1951, 1952, 1953, 1954, 1957, 1958, 1959, 1973, 1974, 1980, 1982, 1984, 1986, 1991, 1992, 1995, 1996, 2001, 2002, 2003, 2007, 2012, 2013, 2016, 2021, 2022, 2024, 2035, 2039, 2040, 2041, 2042, 2043, 2044, 2047, 2051, 2053, 2056, 2057, 2058, 2062, 2064, 2067, 2071, 2073, 2074, 2077, 2080, 2081, 2082, 2083, 2084, 2085, 2087, 2089, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2108, 2109, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2123, 2124, 2126, 2130, 2131, 2132, 2135, 2136, 2139, 2141, 2142, 2144, 2145, 2147, 2149, 2150], "net": [0, 6, 15, 33, 37, 58, 64, 1289, 1305, 1306, 1484, 1548, 1738, 1770, 1831, 2046, 2047, 2074, 2075, 2078, 2089, 2119], "sgd": [0, 23, 24, 32, 492, 939, 1490, 1728, 1738, 1832, 1839, 1841, 2074, 2078, 2080, 2085, 2089, 2091, 2101, 2109, 2110], "target": [0, 14, 32, 33, 34, 52, 53, 55, 59, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 503, 740, 771, 772, 798, 804, 870, 872, 873, 968, 1178, 1201, 1289, 1299, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1460, 1461, 1467, 1481, 1483, 1495, 1496, 1501, 1507, 1508, 1513, 1514, 1539, 1540, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1562, 1580, 1581, 1592, 1601, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1626, 1627, 1635, 1637, 1638, 1649, 1650, 1651, 1662, 1663, 1666, 1667, 1678, 1686, 1687, 1688, 1689, 1690, 1698, 1706, 1710, 1711, 1738, 1826, 1995, 2045, 2047, 2071, 2074, 2075, 2078, 2085, 2091, 2097, 2099, 2101, 2102, 2104, 2105, 2109, 2119, 2124, 2127, 2131, 2132, 2134, 2144, 2145], "data": [0, 1, 2, 3, 7, 11, 12, 18, 21, 24, 28, 30, 32, 33, 35, 36, 37, 41, 44, 47, 50, 53, 55, 59, 62, 64, 66, 67, 71, 75, 143, 154, 199, 200, 330, 333, 337, 340, 345, 449, 452, 485, 497, 501, 503, 621, 743, 744, 745, 765, 777, 778, 779, 786, 798, 799, 800, 805, 828, 829, 830, 831, 832, 834, 836, 876, 890, 891, 901, 904, 916, 937, 952, 961, 967, 1019, 1100, 1101, 1120, 1121, 1122, 1132, 1133, 1134, 1137, 1139, 1140, 1142, 1150, 1151, 1152, 1155, 1158, 1159, 1160, 1161, 1170, 1171, 1173, 1174, 1175, 1177, 1186, 1201, 1209, 1213, 1217, 1219, 1247, 1248, 1250, 1268, 1271, 1297, 1301, 1305, 1309, 1360, 1361, 1362, 1376, 1381, 1389, 1391, 1405, 1406, 1439, 1441, 1442, 1465, 1467, 1475, 1476, 1477, 1484, 1499, 1502, 1510, 1511, 1512, 1518, 1520, 1535, 1555, 1564, 1565, 1601, 1619, 1624, 1625, 1629, 1630, 1631, 1664, 1671, 1673, 1712, 1713, 1738, 1739, 1740, 1741, 1742, 1746, 1747, 1780, 1781, 1782, 1783, 1785, 1794, 1798, 1799, 1800, 1801, 1832, 1839, 1847, 1855, 1858, 1859, 1860, 1864, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1880, 1893, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1934, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1957, 1958, 1973, 1982, 1984, 1986, 1994, 1995, 1996, 2040, 2041, 2043, 2044, 2045, 2048, 2051, 2054, 2055, 2057, 2060, 2064, 2067, 2071, 2074, 2075, 2076, 2078, 2081, 2082, 2085, 2088, 2091, 2093, 2094, 2095, 2096, 2097, 2100, 2101, 2102, 2104, 2107, 2109, 2111, 2114, 2115, 2116, 2117, 2118, 2119, 2121, 2123, 2124, 2125, 2129, 2132, 2133, 2135, 2136, 2138, 2143, 2147], "zero_grad": [0, 1, 32, 1289, 1548, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827, 1831, 2074, 2078, 2083, 2085, 2089, 2091, 2101], "output": [0, 1, 4, 5, 7, 12, 18, 23, 24, 28, 30, 32, 33, 34, 35, 37, 44, 45, 52, 59, 60, 61, 64, 66, 75, 82, 143, 317, 325, 449, 450, 451, 453, 517, 521, 570, 621, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 725, 733, 734, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 780, 782, 784, 785, 786, 787, 788, 790, 791, 792, 798, 799, 800, 802, 807, 810, 822, 825, 848, 869, 872, 873, 874, 876, 885, 886, 889, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 911, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 951, 953, 954, 955, 956, 957, 958, 959, 960, 963, 967, 970, 971, 972, 973, 974, 975, 976, 978, 981, 985, 997, 999, 1000, 1002, 1003, 1015, 1030, 1032, 1033, 1034, 1035, 1061, 1062, 1064, 1074, 1075, 1098, 1099, 1100, 1101, 1103, 1106, 1107, 1109, 1111, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1124, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1174, 1175, 1177, 1178, 1179, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1201, 1203, 1212, 1230, 1231, 1232, 1233, 1243, 1246, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1264, 1266, 1283, 1284, 1286, 1289, 1293, 1301, 1305, 1306, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1413, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1645, 1646, 1648, 1649, 1650, 1651, 1654, 1656, 1665, 1666, 1671, 1673, 1679, 1680, 1681, 1690, 1691, 1695, 1696, 1697, 1698, 1706, 1721, 1725, 1726, 1727, 1731, 1737, 1738, 1754, 1755, 1756, 1757, 1760, 1781, 1783, 1784, 1788, 1791, 1793, 1794, 1795, 1798, 1799, 1801, 1802, 1827, 1831, 1845, 1846, 1854, 1855, 1858, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1877, 1878, 1879, 1881, 1882, 1886, 1888, 1893, 1901, 1905, 1908, 1910, 1922, 1923, 1925, 1930, 1935, 1936, 1938, 1939, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1958, 1970, 1971, 1972, 1977, 1980, 1982, 1983, 1985, 1988, 1990, 1991, 1992, 1993, 1995, 2001, 2002, 2003, 2004, 2007, 2009, 2010, 2040, 2041, 2042, 2044, 2045, 2047, 2051, 2053, 2055, 2057, 2065, 2066, 2067, 2071, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2089, 2092, 2093, 2097, 2099, 2101, 2102, 2103, 2104, 2106, 2110, 2114, 2115, 2117, 2118, 2119, 2121, 2124, 2125, 2127, 2130, 2131, 2132, 2134, 2135, 2136, 2138, 2139, 2144, 2145], "loss_fn": [0, 32, 33, 1555, 1826, 2074, 2078, 2080, 2091, 2101], "exit": [0, 1, 2, 4, 18, 28, 37, 47, 55, 63, 64, 906, 908, 1612, 1738, 2047, 2064, 2075, 2081, 2091, 2099, 2111, 2116, 2149], "befor": [0, 1, 3, 6, 7, 14, 18, 20, 23, 24, 28, 29, 30, 32, 33, 34, 35, 39, 44, 46, 47, 48, 50, 52, 53, 55, 64, 101, 154, 419, 490, 752, 765, 793, 795, 796, 904, 911, 912, 914, 916, 939, 981, 993, 1018, 1100, 1101, 1102, 1111, 1119, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1160, 1161, 1164, 1173, 1176, 1201, 1289, 1301, 1303, 1326, 1342, 1346, 1359, 1389, 1402, 1439, 1442, 1484, 1490, 1491, 1494, 1499, 1548, 1549, 1550, 1588, 1592, 1600, 1654, 1673, 1712, 1713, 1728, 1731, 1732, 1733, 1734, 1738, 1746, 1747, 1754, 1788, 1791, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1819, 1823, 1824, 1825, 1826, 1827, 1841, 1855, 1858, 1884, 1893, 1903, 1904, 1934, 1937, 1940, 1941, 1942, 1944, 1945, 1954, 1957, 1980, 1991, 2012, 2044, 2046, 2047, 2051, 2055, 2064, 2074, 2075, 2078, 2080, 2081, 2084, 2085, 2086, 2088, 2089, 2092, 2094, 2095, 2096, 2097, 2101, 2102, 2104, 2109, 2110, 2111, 2114, 2115, 2119, 2121, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2141, 2149], "step": [0, 1, 2, 4, 9, 11, 14, 19, 23, 24, 28, 29, 30, 32, 35, 48, 52, 55, 59, 64, 81, 542, 611, 691, 773, 774, 868, 876, 906, 909, 910, 939, 954, 978, 1249, 1337, 1360, 1361, 1362, 1376, 1379, 1391, 1495, 1496, 1518, 1622, 1623, 1649, 1650, 1738, 1780, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1818, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1864, 1873, 1901, 1926, 1998, 2043, 2044, 2045, 2051, 2066, 2074, 2075, 2078, 2080, 2081, 2083, 2085, 2089, 2091, 2093, 2095, 2097, 2099, 2102, 2103, 2104, 2109, 2110, 2114, 2119, 2127, 2136, 2139, 2140, 2143, 2145], "usag": [0, 1, 4, 7, 9, 12, 15, 23, 28, 30, 32, 33, 34, 35, 36, 37, 41, 44, 45, 47, 50, 55, 64, 66, 67, 753, 762, 798, 799, 800, 818, 819, 820, 821, 823, 824, 825, 865, 869, 901, 916, 983, 985, 1067, 1088, 1092, 1119, 1170, 1176, 1180, 1181, 1182, 1215, 1303, 1362, 1430, 1738, 2037, 2043, 2044, 2047, 2051, 2059, 2060, 2066, 2071, 2074, 2075, 2081, 2083, 2084, 2085, 2097, 2099, 2103, 2111, 2119, 2120, 2123, 2124, 2125, 2132, 2133, 2135, 2136, 2137, 2145], "along": [0, 14, 18, 23, 28, 35, 40, 47, 52, 66, 72, 317, 319, 321, 325, 497, 517, 519, 521, 691, 702, 828, 886, 887, 970, 977, 1004, 1015, 1032, 1034, 1102, 1110, 1111, 1118, 1119, 1135, 1140, 1143, 1147, 1150, 1153, 1159, 1188, 1230, 1255, 1264, 1266, 1311, 1322, 1358, 1413, 1439, 1443, 1444, 1453, 1454, 1455, 1461, 1482, 1495, 1496, 1538, 1541, 1542, 1543, 1582, 1584, 1619, 1627, 1636, 1649, 1650, 1653, 1656, 1673, 1679, 1680, 1681, 1691, 1712, 1713, 1765, 1767, 1774, 1775, 1784, 1793, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 1839, 1858, 1878, 1879, 1884, 1895, 1930, 1934, 1937, 1938, 1946, 1951, 1970, 1974, 1977, 1980, 1989, 2004, 2007, 2009, 2042, 2046, 2051, 2067, 2071, 2076, 2081, 2083, 2088, 2089, 2097, 2102, 2104, 2115], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 19, 20, 22, 23, 24, 25, 28, 29, 30, 33, 34, 35, 36, 37, 39, 43, 46, 47, 48, 50, 53, 55, 58, 59, 60, 61, 62, 64, 83, 85, 87, 88, 154, 258, 259, 317, 325, 490, 491, 492, 497, 499, 502, 517, 519, 521, 528, 549, 622, 685, 740, 776, 785, 789, 799, 865, 870, 871, 872, 884, 897, 898, 899, 901, 903, 904, 905, 911, 914, 916, 917, 919, 921, 925, 926, 927, 930, 931, 935, 936, 937, 938, 939, 954, 962, 965, 967, 973, 974, 975, 976, 983, 988, 997, 1018, 1019, 1023, 1025, 1026, 1043, 1062, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1083, 1084, 1085, 1089, 1097, 1102, 1108, 1117, 1119, 1123, 1135, 1136, 1138, 1140, 1159, 1160, 1161, 1162, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1192, 1197, 1215, 1216, 1217, 1237, 1239, 1243, 1252, 1253, 1270, 1274, 1276, 1277, 1289, 1303, 1306, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1362, 1365, 1368, 1370, 1380, 1381, 1405, 1406, 1410, 1434, 1440, 1452, 1456, 1461, 1466, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1490, 1491, 1492, 1508, 1518, 1544, 1545, 1546, 1548, 1554, 1560, 1561, 1562, 1564, 1576, 1588, 1596, 1607, 1619, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1643, 1645, 1646, 1654, 1657, 1658, 1659, 1660, 1665, 1669, 1673, 1674, 1685, 1692, 1699, 1700, 1701, 1704, 1706, 1707, 1708, 1709, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1724, 1725, 1726, 1727, 1728, 1733, 1734, 1738, 1740, 1746, 1747, 1753, 1756, 1757, 1792, 1793, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1845, 1856, 1857, 1883, 1889, 1893, 1901, 1933, 1934, 1958, 1980, 1982, 1991, 1995, 1998, 2007, 2008, 2042, 2043, 2044, 2046, 2047, 2051, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2071, 2073, 2075, 2077, 2078, 2080, 2081, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2092, 2094, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2110, 2111, 2113, 2114, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2143, 2145, 2146, 2147, 2148, 2149, 2150], "complex": [0, 1, 3, 7, 8, 23, 24, 27, 28, 33, 34, 37, 64, 315, 333, 487, 503, 690, 697, 930, 931, 975, 976, 998, 999, 1114, 1120, 1121, 1122, 1140, 1162, 1167, 1201, 1243, 1260, 1268, 1279, 1281, 1282, 1285, 1286, 1289, 1310, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1339, 1342, 1344, 1346, 1347, 1348, 1349, 1353, 1354, 1358, 1359, 1360, 1362, 1370, 1376, 1388, 1389, 1393, 1433, 1439, 1475, 1476, 1477, 1514, 1548, 1629, 1630, 1631, 1753, 1794, 1806, 1851, 1864, 1870, 1871, 1877, 1898, 1908, 1954, 1955, 1958, 1995, 2004, 2005, 2006, 2042, 2043, 2045, 2047, 2048, 2058, 2091, 2097, 2100, 2116, 2117, 2120, 2121, 2133, 2136, 2137, 2138], "scenario": [0, 23, 28, 33, 47, 1461, 1800, 1996, 2078, 2086, 2091, 2097, 2099, 2103, 2109, 2136, 2137], "g": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 23, 24, 28, 30, 32, 33, 35, 36, 37, 39, 40, 41, 45, 46, 47, 48, 49, 51, 52, 55, 58, 60, 62, 63, 64, 65, 66, 74, 75, 490, 584, 621, 753, 762, 765, 799, 800, 823, 825, 851, 865, 870, 872, 873, 900, 911, 913, 916, 917, 926, 930, 931, 964, 985, 997, 1064, 1119, 1170, 1177, 1181, 1182, 1209, 1211, 1216, 1219, 1238, 1240, 1243, 1286, 1289, 1296, 1297, 1305, 1361, 1467, 1468, 1484, 1486, 1487, 1488, 1492, 1494, 1499, 1507, 1513, 1518, 1519, 1548, 1549, 1558, 1564, 1580, 1638, 1654, 1738, 1739, 1740, 1741, 1742, 1746, 1747, 1755, 1791, 1794, 1804, 1806, 1807, 1808, 1811, 1823, 1824, 1825, 1826, 1879, 1886, 1897, 1901, 1903, 1921, 1943, 1954, 2042, 2044, 2046, 2047, 2048, 2051, 2054, 2055, 2062, 2064, 2071, 2074, 2075, 2078, 2081, 2082, 2083, 2084, 2086, 2088, 2089, 2092, 2093, 2097, 2099, 2101, 2102, 2103, 2104, 2109, 2114, 2117, 2118, 2119, 2130, 2131, 2132, 2135, 2136, 2143, 2145, 2146, 2149], "penalti": [0, 786, 1075, 1803, 1804, 1806, 1807, 1809, 1811, 1823, 1824, 1826, 2105, 2141], "multipl": [0, 1, 2, 3, 5, 17, 19, 23, 24, 28, 29, 30, 33, 35, 36, 40, 47, 48, 50, 52, 55, 60, 63, 64, 81, 195, 212, 319, 517, 691, 693, 694, 700, 701, 765, 852, 885, 886, 889, 925, 937, 938, 939, 971, 973, 983, 1001, 1005, 1032, 1033, 1034, 1061, 1117, 1119, 1122, 1173, 1176, 1181, 1182, 1183, 1184, 1187, 1188, 1233, 1239, 1253, 1254, 1303, 1306, 1311, 1312, 1327, 1328, 1329, 1345, 1350, 1355, 1356, 1384, 1387, 1392, 1394, 1460, 1461, 1478, 1479, 1480, 1481, 1483, 1491, 1494, 1499, 1507, 1513, 1514, 1536, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1600, 1626, 1627, 1637, 1646, 1666, 1690, 1698, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1825, 1829, 1833, 1835, 1836, 1837, 1838, 1843, 1845, 1901, 1928, 1935, 1936, 1940, 1941, 1942, 1944, 1945, 1974, 1975, 1982, 1990, 1995, 2007, 2008, 2042, 2046, 2047, 2051, 2064, 2065, 2066, 2067, 2075, 2077, 2080, 2082, 2084, 2086, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2099, 2101, 2102, 2103, 2104, 2105, 2109, 2110, 2111, 2114, 2116, 2125, 2126, 2129, 2130, 2133, 2135, 2136, 2144], "custom": [0, 3, 5, 14, 15, 23, 28, 29, 30, 31, 32, 33, 34, 37, 40, 43, 44, 46, 52, 53, 55, 65, 66, 68, 82, 84, 85, 86, 87, 89, 503, 799, 804, 822, 823, 824, 825, 847, 850, 870, 871, 872, 873, 901, 911, 914, 916, 937, 983, 985, 1028, 1094, 1196, 1289, 1548, 1592, 1596, 1597, 1598, 1723, 1761, 1770, 1787, 1832, 1996, 1998, 2043, 2048, 2053, 2064, 2065, 2075, 2081, 2088, 2093, 2094, 2095, 2097, 2107, 2108, 2124, 2126, 2133, 2135, 2137, 2143], "autograd": [0, 4, 5, 7, 8, 28, 32, 35, 52, 55, 56, 59, 66, 143, 339, 449, 450, 451, 452, 453, 490, 492, 500, 685, 694, 876, 890, 891, 905, 906, 911, 916, 917, 926, 927, 928, 938, 939, 946, 947, 948, 949, 950, 952, 961, 980, 1035, 1064, 1120, 1121, 1122, 1132, 1137, 1155, 1173, 1174, 1175, 1176, 1177, 1186, 1188, 1247, 1248, 1289, 1309, 1329, 1360, 1376, 1384, 1394, 1501, 1548, 1554, 1596, 1656, 1671, 1738, 1798, 1799, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1904, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1932, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 2007, 2040, 2041, 2043, 2045, 2049, 2051, 2054, 2056, 2067, 2073, 2078, 2080, 2083, 2084, 2086, 2088, 2089, 2103, 2120, 2121, 2126, 2136, 2137, 2141, 2143, 2145, 2146], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 29, 30, 32, 33, 36, 37, 38, 40, 44, 45, 47, 48, 52, 53, 55, 58, 60, 62, 63, 66, 69, 74, 75, 78, 80, 82, 83, 85, 86, 89, 90, 91, 123, 154, 199, 262, 264, 293, 302, 325, 490, 491, 492, 497, 500, 521, 545, 560, 685, 694, 698, 699, 703, 704, 753, 762, 763, 765, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 796, 797, 798, 799, 804, 805, 808, 822, 823, 824, 825, 833, 835, 847, 852, 865, 868, 870, 872, 873, 874, 888, 889, 904, 906, 907, 908, 909, 910, 911, 916, 917, 925, 926, 927, 928, 930, 931, 935, 936, 937, 939, 943, 946, 949, 952, 961, 963, 971, 973, 977, 980, 983, 985, 986, 987, 989, 990, 991, 993, 997, 998, 999, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1019, 1023, 1025, 1028, 1035, 1046, 1047, 1050, 1055, 1056, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1074, 1075, 1083, 1084, 1086, 1087, 1088, 1092, 1102, 1107, 1109, 1110, 1117, 1119, 1123, 1135, 1136, 1138, 1158, 1162, 1165, 1166, 1167, 1170, 1173, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1190, 1191, 1192, 1201, 1203, 1212, 1228, 1233, 1234, 1243, 1247, 1248, 1249, 1251, 1253, 1261, 1262, 1263, 1276, 1286, 1287, 1288, 1289, 1290, 1292, 1294, 1295, 1300, 1301, 1302, 1303, 1305, 1307, 1309, 1310, 1311, 1313, 1318, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1365, 1367, 1376, 1379, 1380, 1384, 1387, 1390, 1392, 1394, 1395, 1396, 1415, 1428, 1430, 1436, 1439, 1440, 1456, 1460, 1461, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1481, 1485, 1489, 1492, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1513, 1515, 1516, 1517, 1518, 1519, 1534, 1537, 1538, 1540, 1547, 1548, 1553, 1554, 1556, 1564, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1592, 1594, 1596, 1597, 1598, 1600, 1602, 1604, 1605, 1606, 1608, 1610, 1611, 1612, 1729, 1733, 1734, 1738, 1739, 1746, 1747, 1753, 1754, 1759, 1770, 1780, 1781, 1782, 1784, 1787, 1788, 1789, 1791, 1792, 1794, 1795, 1799, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1821, 1823, 1824, 1825, 1826, 1828, 1831, 1832, 1835, 1838, 1839, 1840, 1845, 1846, 1847, 1851, 1857, 1864, 1868, 1873, 1886, 1895, 1896, 1897, 1899, 1900, 1906, 1908, 1916, 1920, 1921, 1926, 1929, 1931, 1932, 1933, 1934, 1935, 1937, 1943, 1950, 1954, 1959, 1960, 1961, 1970, 1974, 1976, 1980, 1990, 1991, 1992, 1995, 1996, 2000, 2004, 2005, 2006, 2007, 2008, 2021, 2022, 2024, 2027, 2030, 2031, 2032, 2033, 2034, 2037, 2041, 2042, 2043, 2048, 2051, 2053, 2055, 2058, 2059, 2060, 2064, 2066, 2069, 2071, 2073, 2076, 2078, 2080, 2081, 2083, 2088, 2089, 2091, 2092, 2097, 2101, 2102, 2103, 2104, 2106, 2108, 2109, 2110, 2111, 2113, 2116, 2117, 2119, 2120, 2121, 2123, 2124, 2125, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2140, 2141, 2142, 2143, 2144, 2145, 2148], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 18, 19, 23, 24, 28, 30, 32, 33, 34, 35, 36, 37, 44, 47, 52, 53, 55, 59, 60, 61, 63, 64, 66, 74, 75, 89, 158, 222, 225, 226, 258, 327, 517, 519, 521, 527, 547, 618, 746, 747, 748, 765, 808, 822, 872, 891, 900, 901, 907, 908, 911, 914, 916, 917, 926, 939, 952, 961, 975, 976, 983, 989, 1015, 1061, 1064, 1075, 1100, 1101, 1119, 1123, 1139, 1170, 1177, 1183, 1187, 1188, 1203, 1213, 1221, 1222, 1230, 1233, 1242, 1247, 1248, 1252, 1289, 1292, 1293, 1296, 1299, 1303, 1305, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1358, 1391, 1397, 1413, 1440, 1452, 1460, 1462, 1463, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1491, 1494, 1499, 1513, 1518, 1548, 1555, 1564, 1578, 1580, 1588, 1597, 1598, 1600, 1632, 1633, 1634, 1654, 1692, 1709, 1728, 1738, 1757, 1759, 1769, 1771, 1773, 1774, 1775, 1776, 1792, 1807, 1808, 1828, 1835, 1839, 1842, 1845, 1870, 1877, 1889, 1899, 1913, 1914, 1931, 1935, 1949, 1958, 1968, 1970, 1973, 1979, 1980, 1991, 1992, 2007, 2010, 2042, 2043, 2044, 2046, 2047, 2051, 2053, 2054, 2057, 2059, 2064, 2065, 2066, 2067, 2073, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2108, 2109, 2110, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2125, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 23, 24, 28, 29, 30, 32, 33, 34, 48, 52, 53, 55, 56, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 302, 419, 545, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 798, 799, 822, 851, 865, 870, 871, 872, 873, 875, 983, 1061, 1064, 1119, 1176, 1185, 1186, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1299, 1300, 1301, 1305, 1306, 1307, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1728, 1737, 1738, 1739, 1740, 1741, 1742, 1756, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1780, 1792, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1929, 1954, 1995, 1996, 2042, 2043, 2044, 2045, 2049, 2055, 2059, 2066, 2067, 2074, 2080, 2083, 2084, 2085, 2089, 2091, 2092, 2093, 2096, 2097, 2099, 2101, 2102, 2104, 2106, 2109, 2119, 2121, 2125, 2127, 2130, 2131, 2135, 2136, 2143, 2144, 2145], "modul": [0, 1, 3, 5, 6, 8, 11, 12, 14, 18, 19, 20, 24, 28, 30, 32, 33, 34, 38, 39, 41, 44, 47, 48, 52, 53, 55, 56, 58, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 419, 491, 492, 685, 691, 694, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 743, 744, 745, 750, 751, 752, 761, 766, 767, 768, 769, 770, 793, 795, 796, 797, 798, 799, 804, 807, 808, 810, 818, 819, 820, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 847, 849, 850, 851, 865, 868, 869, 870, 871, 872, 873, 875, 926, 935, 936, 939, 951, 963, 983, 1035, 1064, 1176, 1185, 1186, 1188, 1201, 1238, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1305, 1306, 1307, 1361, 1384, 1394, 1452, 1456, 1462, 1463, 1464, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1500, 1502, 1510, 1511, 1512, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1549, 1550, 1558, 1559, 1563, 1565, 1577, 1582, 1588, 1592, 1593, 1595, 1596, 1645, 1646, 1706, 1721, 1728, 1737, 1738, 1739, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1787, 1788, 1789, 1791, 1827, 1889, 1933, 1996, 1998, 1999, 2007, 2042, 2043, 2048, 2051, 2053, 2055, 2057, 2059, 2060, 2064, 2066, 2067, 2069, 2072, 2073, 2077, 2078, 2080, 2083, 2084, 2088, 2090, 2091, 2093, 2095, 2096, 2097, 2099, 2101, 2103, 2106, 2107, 2109, 2112, 2114, 2115, 2119, 2123, 2124, 2125, 2127, 2131, 2133, 2134, 2135, 2136, 2139, 2143, 2144, 2145, 2146], "def": [0, 1, 5, 12, 23, 24, 28, 29, 30, 33, 35, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 52, 53, 55, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 402, 798, 799, 872, 873, 901, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 926, 983, 985, 988, 990, 991, 997, 1035, 1123, 1176, 1177, 1178, 1180, 1181, 1182, 1184, 1186, 1187, 1188, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1300, 1301, 1304, 1305, 1306, 1307, 1548, 1549, 1550, 1558, 1559, 1564, 1598, 1706, 1728, 1738, 1759, 1792, 1933, 2007, 2042, 2044, 2046, 2047, 2051, 2059, 2066, 2071, 2074, 2075, 2077, 2080, 2081, 2082, 2083, 2089, 2091, 2093, 2094, 2095, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2109, 2110, 2111, 2127, 2130, 2131, 2132, 2133, 2134, 2136, 2138, 2143, 2144, 2145, 2146], "self": [0, 1, 9, 12, 18, 23, 24, 28, 30, 33, 37, 39, 41, 44, 50, 52, 53, 55, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 90, 101, 143, 154, 157, 158, 159, 174, 176, 179, 182, 183, 184, 194, 195, 199, 200, 212, 220, 222, 236, 237, 244, 258, 259, 262, 263, 271, 290, 294, 301, 315, 317, 319, 321, 323, 325, 327, 329, 330, 332, 333, 334, 335, 337, 345, 381, 397, 402, 404, 405, 406, 419, 458, 475, 485, 487, 501, 502, 503, 504, 517, 519, 521, 524, 527, 529, 541, 547, 548, 549, 550, 562, 564, 584, 585, 587, 588, 589, 591, 592, 608, 611, 612, 618, 621, 622, 624, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 872, 873, 944, 946, 990, 991, 1176, 1177, 1186, 1201, 1203, 1260, 1287, 1288, 1289, 1292, 1293, 1294, 1295, 1296, 1300, 1301, 1305, 1306, 1307, 1415, 1452, 1456, 1492, 1547, 1548, 1549, 1550, 1554, 1558, 1559, 1576, 1578, 1588, 1594, 1596, 1685, 1706, 1709, 1728, 1756, 1757, 1759, 1765, 1767, 1780, 1789, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1854, 1875, 2044, 2045, 2046, 2047, 2051, 2060, 2065, 2066, 2073, 2075, 2076, 2077, 2081, 2083, 2089, 2094, 2097, 2099, 2101, 2102, 2104, 2109, 2116, 2120, 2127, 2131, 2133, 2134, 2140, 2143, 2144, 2145], "produc": [0, 7, 14, 19, 23, 28, 30, 36, 39, 41, 44, 50, 52, 53, 60, 61, 63, 64, 81, 91, 490, 737, 743, 744, 745, 750, 751, 761, 769, 798, 799, 954, 974, 1057, 1150, 1151, 1152, 1170, 1181, 1182, 1188, 1203, 1207, 1212, 1213, 1243, 1301, 1305, 1306, 1309, 1325, 1326, 1329, 1336, 1337, 1348, 1353, 1387, 1390, 1391, 1392, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1524, 1525, 1526, 1527, 1528, 1529, 1554, 1638, 1646, 1654, 1665, 1725, 1726, 1727, 1794, 1827, 1857, 1864, 1873, 1958, 1995, 2007, 2044, 2046, 2047, 2055, 2064, 2065, 2074, 2075, 2076, 2078, 2081, 2084, 2087, 2088, 2089, 2092, 2093, 2094, 2095, 2097, 2099, 2114, 2118, 2127, 2131, 2132, 2141, 2145], "after": [0, 1, 7, 9, 12, 14, 23, 24, 28, 29, 30, 32, 33, 34, 47, 50, 55, 63, 64, 66, 71, 72, 264, 490, 492, 685, 765, 796, 868, 870, 872, 873, 904, 906, 911, 912, 916, 983, 993, 1016, 1018, 1035, 1057, 1064, 1118, 1177, 1211, 1212, 1274, 1289, 1293, 1345, 1361, 1384, 1402, 1448, 1484, 1499, 1533, 1548, 1551, 1592, 1594, 1596, 1619, 1654, 1728, 1731, 1738, 1759, 1761, 1765, 1767, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1823, 1824, 1825, 1826, 1827, 1831, 1832, 1839, 1841, 1897, 1954, 1980, 1996, 1998, 2009, 2012, 2042, 2046, 2047, 2059, 2060, 2064, 2071, 2073, 2074, 2075, 2078, 2080, 2081, 2083, 2084, 2085, 2086, 2088, 2089, 2091, 2092, 2099, 2101, 2102, 2103, 2104, 2109, 2110, 2111, 2112, 2115, 2116, 2117, 2119, 2127, 2130, 2133, 2134, 2136, 2137, 2139, 2141, 2143, 2144, 2145, 2149], "disabl": [0, 2, 5, 20, 29, 35, 55, 64, 818, 819, 926, 927, 928, 983, 1064, 1119, 1123, 1176, 1192, 1289, 1291, 1305, 1306, 1548, 1554, 1588, 1596, 1706, 1738, 1740, 1789, 1792, 1902, 1905, 1933, 2043, 2046, 2051, 2053, 2062, 2074, 2077, 2078, 2080, 2081, 2087, 2092, 2093, 2099, 2108, 2114, 2121, 2135, 2139, 2142, 2143, 2145, 2147, 2149], "them": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 23, 28, 30, 33, 37, 39, 44, 47, 50, 52, 55, 59, 60, 63, 64, 154, 225, 258, 490, 739, 904, 911, 914, 916, 921, 965, 1064, 1104, 1107, 1119, 1193, 1201, 1203, 1214, 1311, 1320, 1331, 1345, 1357, 1361, 1389, 1442, 1468, 1490, 1548, 1582, 1584, 1712, 1766, 1781, 1784, 1937, 1939, 1957, 1991, 1996, 1998, 2042, 2046, 2047, 2051, 2054, 2056, 2057, 2060, 2062, 2064, 2065, 2066, 2067, 2074, 2075, 2076, 2078, 2081, 2082, 2083, 2084, 2087, 2088, 2089, 2093, 2095, 2101, 2103, 2104, 2105, 2109, 2110, 2111, 2114, 2115, 2119, 2120, 2124, 2127, 2132, 2133, 2134, 2135, 2136, 2141, 2142, 2143, 2144, 2145], "differ": [0, 1, 2, 3, 5, 8, 14, 18, 23, 28, 30, 32, 33, 34, 35, 37, 39, 40, 44, 45, 47, 48, 51, 52, 53, 55, 56, 59, 60, 61, 62, 64, 200, 490, 497, 621, 685, 691, 694, 700, 701, 740, 765, 799, 802, 804, 831, 833, 834, 872, 873, 876, 890, 891, 930, 931, 951, 963, 964, 1005, 1102, 1107, 1109, 1111, 1119, 1159, 1160, 1161, 1165, 1166, 1173, 1176, 1181, 1182, 1188, 1203, 1205, 1208, 1243, 1264, 1289, 1295, 1300, 1305, 1319, 1325, 1326, 1336, 1337, 1345, 1348, 1353, 1357, 1384, 1394, 1452, 1461, 1462, 1463, 1464, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1499, 1500, 1508, 1510, 1511, 1512, 1513, 1518, 1519, 1535, 1548, 1551, 1554, 1570, 1571, 1573, 1574, 1575, 1577, 1580, 1588, 1594, 1596, 1598, 1601, 1604, 1605, 1606, 1607, 1619, 1627, 1645, 1654, 1663, 1665, 1667, 1679, 1680, 1681, 1706, 1728, 1738, 1741, 1742, 1753, 1789, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1832, 1841, 1847, 1857, 1879, 1913, 1952, 1953, 1958, 1980, 1991, 1992, 1995, 2000, 2002, 2003, 2007, 2042, 2044, 2046, 2047, 2049, 2051, 2053, 2054, 2064, 2065, 2067, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2086, 2089, 2091, 2092, 2093, 2095, 2097, 2101, 2102, 2103, 2104, 2105, 2109, 2111, 2114, 2116, 2117, 2119, 2120, 2121, 2125, 2126, 2127, 2129, 2130, 2133, 2134, 2135, 2137, 2138, 2139, 2141, 2142, 2143, 2145], "caus": [0, 1, 2, 3, 5, 11, 14, 18, 23, 27, 28, 30, 32, 40, 46, 47, 48, 52, 60, 64, 86, 560, 621, 888, 891, 904, 986, 1173, 1206, 1215, 1216, 1301, 1305, 1325, 1326, 1353, 1410, 1665, 1666, 1725, 1728, 1738, 1793, 1802, 1897, 1898, 1907, 1954, 1995, 2044, 2047, 2062, 2064, 2076, 2078, 2081, 2083, 2091, 2093, 2095, 2099, 2102, 2104, 2105, 2111, 2114, 2117, 2130, 2133, 2135, 2137], "mismatch": [0, 28, 64, 87, 89, 891, 1290, 1801, 1802, 2046, 2074, 2080, 2081, 2083, 2099, 2121], "error": [0, 1, 5, 8, 14, 17, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 33, 35, 38, 45, 47, 48, 52, 55, 58, 60, 63, 64, 66, 67, 84, 85, 86, 87, 89, 194, 225, 317, 319, 325, 327, 332, 492, 549, 560, 618, 621, 685, 828, 876, 889, 891, 911, 914, 916, 919, 920, 921, 922, 923, 924, 925, 929, 937, 938, 983, 1016, 1028, 1053, 1064, 1075, 1089, 1093, 1117, 1176, 1180, 1181, 1183, 1188, 1193, 1201, 1203, 1212, 1216, 1219, 1253, 1289, 1294, 1304, 1319, 1320, 1329, 1331, 1333, 1336, 1337, 1338, 1348, 1351, 1361, 1379, 1410, 1434, 1460, 1461, 1497, 1508, 1514, 1539, 1548, 1578, 1580, 1607, 1652, 1663, 1686, 1706, 1709, 1710, 1738, 1741, 1742, 1744, 1789, 1794, 1801, 1802, 1853, 1893, 1900, 1943, 1949, 1954, 1995, 1998, 2007, 2008, 2042, 2043, 2044, 2046, 2047, 2051, 2053, 2054, 2062, 2064, 2065, 2066, 2067, 2074, 2075, 2078, 2081, 2082, 2086, 2087, 2093, 2097, 2099, 2102, 2107, 2109, 2115, 2120, 2121, 2124, 2125, 2130, 2132, 2133, 2135, 2136, 2147, 2148, 2149], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 20, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 44, 45, 46, 47, 48, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 74, 75, 76, 77, 84, 85, 86, 87, 89, 90, 92, 101, 154, 158, 199, 210, 213, 258, 319, 323, 325, 449, 450, 451, 452, 453, 462, 475, 485, 490, 500, 503, 521, 524, 541, 549, 584, 585, 587, 588, 589, 591, 592, 607, 611, 621, 627, 685, 691, 694, 695, 696, 698, 700, 701, 702, 704, 740, 761, 765, 769, 784, 786, 790, 800, 801, 825, 829, 830, 831, 834, 865, 869, 872, 876, 885, 886, 887, 888, 889, 890, 891, 900, 902, 903, 904, 911, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 939, 950, 951, 952, 954, 961, 963, 964, 965, 967, 971, 973, 974, 977, 978, 983, 985, 988, 994, 998, 999, 1000, 1004, 1005, 1015, 1018, 1019, 1020, 1023, 1025, 1028, 1030, 1032, 1034, 1035, 1042, 1053, 1059, 1064, 1065, 1079, 1086, 1089, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1119, 1120, 1121, 1122, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1162, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1187, 1188, 1197, 1201, 1202, 1203, 1211, 1213, 1215, 1216, 1219, 1230, 1238, 1243, 1247, 1248, 1250, 1251, 1252, 1253, 1264, 1266, 1280, 1286, 1289, 1292, 1293, 1294, 1297, 1299, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1315, 1319, 1320, 1325, 1326, 1328, 1329, 1331, 1332, 1333, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1372, 1376, 1377, 1379, 1381, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1410, 1415, 1416, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1452, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1495, 1496, 1499, 1500, 1501, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1524, 1525, 1526, 1527, 1528, 1529, 1533, 1535, 1539, 1540, 1541, 1542, 1543, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1562, 1563, 1564, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1580, 1581, 1588, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1604, 1605, 1606, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1654, 1656, 1658, 1665, 1666, 1671, 1673, 1675, 1676, 1677, 1679, 1680, 1681, 1690, 1691, 1692, 1695, 1698, 1699, 1706, 1712, 1713, 1724, 1725, 1731, 1737, 1738, 1740, 1744, 1745, 1748, 1749, 1751, 1753, 1754, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1780, 1781, 1782, 1784, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1846, 1851, 1855, 1857, 1858, 1862, 1863, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1878, 1879, 1884, 1886, 1889, 1893, 1895, 1897, 1900, 1901, 1905, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1930, 1934, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1952, 1953, 1954, 1957, 1958, 1959, 1970, 1973, 1974, 1976, 1977, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1991, 1992, 1995, 1998, 2001, 2002, 2003, 2007, 2013, 2019, 2030, 2032, 2040, 2041, 2042, 2044, 2047, 2049, 2051, 2055, 2056, 2057, 2058, 2059, 2060, 2062, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2076, 2078, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2111, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2143, 2144, 2145, 2146, 2147, 2148, 2149], "cast": [0, 3, 6, 24, 45, 55, 88, 339, 607, 608, 968, 1100, 1101, 1289, 1342, 1346, 1359, 1389, 1439, 1442, 1548, 1673, 1712, 1713, 1794, 1855, 1934, 1937, 1943, 1957, 1962, 1963, 2044, 2074, 2092, 2099, 2115, 2116, 2117, 2136], "back": [0, 1, 2, 14, 19, 20, 23, 24, 28, 30, 35, 47, 52, 55, 60, 64, 66, 71, 75, 490, 740, 846, 930, 980, 983, 1139, 1171, 1177, 1290, 1303, 1355, 1361, 1595, 1744, 1745, 1746, 1747, 1939, 2042, 2044, 2047, 2062, 2075, 2081, 2082, 2084, 2091, 2092, 2093, 2099, 2101, 2102, 2104, 2109, 2114, 2116, 2130, 2133, 2136, 2138, 2143, 2146], "from": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 18, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 41, 44, 45, 47, 50, 51, 52, 53, 55, 56, 58, 60, 61, 63, 66, 68, 69, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 86, 90, 91, 92, 157, 158, 177, 200, 225, 226, 237, 262, 290, 317, 319, 323, 325, 381, 406, 452, 458, 475, 477, 478, 485, 490, 491, 492, 497, 503, 517, 519, 521, 548, 550, 564, 584, 611, 612, 614, 621, 685, 717, 718, 719, 720, 721, 722, 725, 733, 734, 737, 740, 743, 744, 745, 746, 747, 748, 750, 751, 761, 765, 769, 777, 778, 779, 786, 793, 795, 798, 799, 800, 803, 804, 808, 823, 824, 825, 833, 835, 850, 865, 869, 871, 872, 873, 875, 876, 890, 891, 902, 911, 913, 915, 916, 917, 919, 920, 921, 922, 923, 924, 930, 931, 935, 936, 950, 952, 953, 961, 962, 967, 980, 985, 1017, 1018, 1023, 1032, 1033, 1034, 1035, 1053, 1057, 1075, 1103, 1119, 1120, 1121, 1122, 1139, 1141, 1142, 1147, 1148, 1149, 1153, 1154, 1155, 1156, 1159, 1160, 1161, 1170, 1172, 1173, 1174, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1195, 1201, 1202, 1203, 1208, 1217, 1226, 1247, 1248, 1252, 1266, 1286, 1287, 1289, 1290, 1292, 1294, 1295, 1296, 1297, 1300, 1301, 1313, 1329, 1333, 1342, 1345, 1346, 1359, 1360, 1361, 1362, 1376, 1380, 1381, 1394, 1400, 1402, 1405, 1406, 1407, 1408, 1410, 1415, 1416, 1434, 1443, 1444, 1452, 1456, 1462, 1463, 1464, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1499, 1500, 1501, 1502, 1508, 1510, 1511, 1512, 1513, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1548, 1549, 1550, 1554, 1558, 1559, 1563, 1564, 1566, 1567, 1588, 1593, 1594, 1596, 1598, 1600, 1601, 1608, 1612, 1619, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1651, 1654, 1656, 1663, 1665, 1679, 1680, 1681, 1693, 1724, 1728, 1737, 1738, 1744, 1746, 1747, 1755, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1791, 1795, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1847, 1850, 1858, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1879, 1880, 1883, 1885, 1886, 1893, 1905, 1913, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1954, 1955, 1959, 1970, 1973, 1982, 1984, 1986, 1991, 1992, 1995, 1997, 2001, 2010, 2012, 2013, 2043, 2044, 2045, 2046, 2047, 2049, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2064, 2066, 2067, 2068, 2071, 2073, 2075, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2096, 2097, 2101, 2103, 2104, 2105, 2109, 2110, 2111, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2123, 2124, 2125, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2142, 2143, 2144, 2145, 2146, 2147, 2149], "alreadi": [0, 1, 3, 11, 19, 23, 24, 28, 29, 34, 47, 48, 55, 63, 64, 90, 92, 199, 210, 213, 467, 490, 528, 584, 607, 608, 627, 798, 850, 865, 869, 890, 937, 939, 1028, 1035, 1055, 1199, 1203, 1289, 1299, 1361, 1415, 1416, 1548, 1732, 1738, 1780, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1989, 1991, 1998, 2026, 2042, 2044, 2051, 2054, 2058, 2065, 2066, 2074, 2075, 2078, 2081, 2084, 2086, 2091, 2099, 2101, 2102, 2104, 2110, 2111, 2114, 2116, 2118, 2130, 2133, 2134, 2135], "incur": [0, 5, 24, 28, 30, 55, 973, 2067, 2091, 2109], "addit": [0, 1, 3, 5, 7, 9, 14, 15, 23, 28, 29, 30, 33, 35, 41, 47, 48, 53, 55, 63, 64, 66, 75, 339, 517, 611, 754, 756, 757, 758, 759, 763, 765, 786, 801, 822, 870, 1075, 1286, 1289, 1293, 1299, 1304, 1452, 1463, 1464, 1465, 1478, 1479, 1480, 1491, 1498, 1499, 1501, 1508, 1511, 1512, 1520, 1527, 1528, 1529, 1533, 1534, 1535, 1536, 1538, 1544, 1545, 1546, 1548, 1554, 1556, 1582, 1584, 1588, 1592, 1594, 1596, 1598, 1625, 1632, 1633, 1634, 1671, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1901, 1991, 1992, 1995, 2005, 2044, 2046, 2047, 2051, 2053, 2060, 2065, 2066, 2067, 2075, 2077, 2078, 2081, 2082, 2084, 2088, 2091, 2092, 2095, 2097, 2099, 2103, 2104, 2105, 2107, 2109, 2110, 2111, 2114, 2118, 2121, 2130, 2132, 2136, 2141, 2142, 2145, 2147], "overhead": [0, 1, 3, 4, 8, 24, 28, 55, 786, 983, 988, 1075, 1301, 1738, 1746, 1747, 2075, 2077, 2078, 2080, 2087, 2088, 2091, 2103, 2110, 2114, 2120, 2130, 2135, 2136, 2138, 2139], "here": [0, 1, 7, 8, 9, 12, 15, 18, 23, 24, 28, 29, 30, 33, 34, 35, 46, 48, 52, 53, 57, 58, 59, 60, 63, 64, 87, 89, 584, 799, 800, 916, 917, 1003, 1026, 1119, 1136, 1138, 1139, 1144, 1145, 1146, 1148, 1149, 1154, 1156, 1176, 1186, 1287, 1301, 1462, 1463, 1464, 1478, 1479, 1480, 1510, 1511, 1512, 1556, 1588, 1654, 1656, 1746, 1747, 1756, 1824, 1827, 1839, 1901, 1925, 2042, 2044, 2046, 2047, 2049, 2051, 2063, 2065, 2066, 2067, 2074, 2075, 2078, 2079, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2094, 2095, 2099, 2101, 2102, 2104, 2107, 2114, 2118, 2119, 2121, 2127, 2130, 2132, 2133, 2135, 2136, 2137, 2138, 2139, 2142, 2143, 2145], "assum": [0, 11, 12, 19, 20, 23, 28, 30, 34, 35, 37, 40, 47, 48, 52, 53, 55, 58, 61, 64, 825, 997, 1102, 1137, 1140, 1142, 1150, 1151, 1152, 1155, 1203, 1207, 1213, 1280, 1286, 1287, 1290, 1305, 1325, 1326, 1328, 1335, 1344, 1347, 1350, 1352, 1362, 1467, 1540, 1601, 1638, 1738, 1756, 1759, 1784, 1828, 1829, 1835, 1836, 1837, 1840, 1842, 1843, 1847, 1980, 1982, 1998, 2042, 2044, 2046, 2047, 2051, 2065, 2073, 2075, 2078, 2081, 2082, 2086, 2088, 2091, 2092, 2099, 2101, 2102, 2109, 2110, 2111, 2114, 2123, 2127, 2130, 2132, 2133, 2134, 2141], "a_float32": 0, "rand": [0, 1, 5, 11, 18, 35, 52, 64, 339, 698, 704, 919, 920, 921, 922, 923, 924, 988, 1005, 1061, 1062, 1136, 1138, 1141, 1142, 1144, 1145, 1148, 1149, 1151, 1152, 1154, 1156, 1178, 1295, 1296, 1301, 1305, 1306, 1307, 1363, 1364, 1366, 1460, 1513, 1592, 1593, 1594, 1595, 1596, 1626, 1645, 1646, 1706, 1738, 1759, 1792, 1850, 1861, 1862, 1863, 1867, 2044, 2045, 2046, 2047, 2049, 2059, 2065, 2066, 2081, 2085, 2097, 2099, 2100, 2104, 2109, 2110, 2114, 2115, 2118, 2119, 2123, 2130, 2140, 2143], "8": [0, 1, 14, 20, 22, 23, 24, 28, 34, 35, 37, 52, 66, 71, 317, 319, 321, 325, 405, 406, 475, 517, 521, 564, 611, 621, 690, 691, 702, 703, 750, 751, 766, 768, 770, 778, 779, 829, 830, 831, 834, 922, 954, 962, 973, 976, 977, 981, 983, 1061, 1062, 1098, 1102, 1117, 1122, 1135, 1151, 1152, 1158, 1159, 1162, 1169, 1243, 1252, 1253, 1313, 1342, 1345, 1346, 1347, 1355, 1357, 1360, 1361, 1443, 1444, 1449, 1450, 1451, 1453, 1454, 1455, 1468, 1469, 1470, 1471, 1482, 1518, 1544, 1545, 1551, 1553, 1555, 1562, 1564, 1567, 1570, 1571, 1572, 1573, 1574, 1575, 1588, 1592, 1593, 1594, 1595, 1596, 1600, 1608, 1630, 1633, 1636, 1693, 1698, 1704, 1705, 1706, 1746, 1747, 1794, 1795, 1805, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1832, 1841, 1846, 1850, 1854, 1874, 1884, 1885, 1886, 1893, 1901, 1905, 1912, 1915, 1920, 1926, 1930, 1938, 1940, 1941, 1946, 1954, 1958, 1969, 1974, 1975, 1976, 1978, 1980, 1989, 1993, 1995, 2001, 2008, 2044, 2048, 2054, 2071, 2078, 2081, 2084, 2094, 2097, 2099, 2100, 2102, 2103, 2104, 2107, 2109, 2114, 2115, 2117, 2118, 2120, 2127, 2133, 2134, 2145], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 5, 33, 1293, 1345, 1384, 1558, 1559, 1857, 1958, 1995, 2045, 2046, 2059, 2065, 2074, 2077, 2081, 2092, 2100, 2114, 2139, 2140], "list": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 18, 19, 20, 23, 24, 28, 29, 30, 32, 33, 35, 37, 47, 50, 52, 53, 55, 60, 63, 64, 66, 67, 71, 72, 74, 75, 85, 188, 245, 306, 449, 451, 453, 497, 582, 587, 588, 589, 593, 623, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 798, 799, 803, 805, 806, 822, 823, 824, 825, 847, 865, 872, 890, 897, 898, 899, 937, 965, 966, 969, 973, 977, 982, 983, 985, 992, 997, 1045, 1051, 1104, 1117, 1119, 1120, 1159, 1174, 1186, 1201, 1203, 1212, 1229, 1243, 1253, 1289, 1293, 1295, 1296, 1301, 1303, 1305, 1306, 1389, 1391, 1442, 1484, 1490, 1520, 1548, 1550, 1559, 1563, 1577, 1588, 1599, 1612, 1645, 1721, 1737, 1738, 1739, 1740, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1794, 1798, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1860, 1862, 1863, 1866, 1870, 1885, 1921, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1952, 1953, 1957, 1973, 1974, 1975, 1991, 1992, 1995, 1996, 1998, 2002, 2003, 2008, 2025, 2040, 2042, 2044, 2045, 2048, 2049, 2051, 2053, 2057, 2060, 2065, 2066, 2067, 2081, 2087, 2089, 2092, 2093, 2094, 2096, 2097, 2100, 2101, 2102, 2103, 2104, 2109, 2110, 2114, 2116, 2117, 2118, 2119, 2120, 2123, 2124, 2125, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2139, 2143, 2144, 2145, 2146, 2147], "No": [0, 9, 12, 30, 51, 53, 63, 911, 915, 916, 917, 1738, 1746, 1747, 1792, 2046, 2078, 2099, 2107, 2118, 2121, 2130], "manual": [0, 19, 23, 28, 34, 45, 47, 48, 51, 55, 64, 490, 804, 847, 889, 925, 988, 1203, 1252, 1293, 1460, 1461, 1483, 1552, 1553, 1555, 1577, 1596, 1626, 1627, 1637, 1690, 1759, 1780, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2044, 2047, 2055, 2064, 2074, 2078, 2081, 2082, 2083, 2086, 2089, 2095, 2099, 2104, 2105, 2119, 2132, 2142, 2143, 2149], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 14, 20, 23, 24, 28, 29, 30, 31, 32, 33, 37, 39, 40, 47, 48, 55, 63, 64, 491, 492, 806, 850, 901, 911, 915, 916, 917, 935, 936, 985, 1000, 1018, 1036, 1063, 1076, 1119, 1165, 1166, 1188, 1196, 1289, 1320, 1484, 1548, 1596, 1598, 1654, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1877, 1922, 1959, 2007, 2042, 2051, 2060, 2064, 2066, 2078, 2081, 2082, 2083, 2086, 2091, 2096, 2097, 2099, 2102, 2104, 2109, 2111, 2121, 2123, 2130, 2133, 2135, 2137, 2141, 2149], "f_float16": 0, "g_float32": 0, "epoch": [0, 23, 40, 51, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2060, 2074, 2091, 2101, 2119], "eval": [0, 64, 822, 871, 872, 1186, 1289, 1293, 1299, 1305, 1462, 1463, 1464, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1548, 1554, 1588, 1596, 1748, 1750, 1754, 2047, 2057, 2085, 2089, 2096, 2099, 2104, 2125, 2132, 2133, 2146], "jit": [0, 2, 11, 14, 52, 1061, 1062, 1094, 1240, 1287, 1288, 1289, 1304, 1431, 1800, 1801, 1903, 1904, 2043, 2046, 2049, 2057, 2066, 2077, 2088, 2094, 2096, 2099, 2104, 2109, 2119, 2131, 2132, 2133, 2134, 2136, 2138], "trace": [0, 1, 5, 12, 15, 18, 23, 24, 25, 28, 33, 40, 52, 53, 66, 69, 70, 71, 72, 73, 76, 77, 81, 490, 685, 851, 940, 942, 943, 946, 983, 985, 990, 991, 997, 1119, 1189, 1190, 1193, 1197, 1202, 1207, 1292, 1301, 1302, 1306, 1362, 1405, 1406, 1407, 1802, 1997, 2043, 2045, 2046, 2047, 2049, 2051, 2053, 2075, 2078, 2084, 2094, 2096, 2097, 2100, 2102, 2119, 2126, 2131, 2132, 2133, 2135, 2138, 2139, 2141, 2145, 2147, 2148, 2149], "testmodel": 0, "__init__": [0, 1, 12, 23, 24, 28, 33, 35, 52, 64, 66, 73, 74, 75, 872, 873, 1186, 1287, 1290, 1292, 1295, 1296, 1301, 1305, 1306, 1307, 1548, 1549, 1550, 1558, 1559, 1563, 1706, 1728, 1737, 2044, 2046, 2047, 2060, 2075, 2081, 2083, 2089, 2094, 2097, 2099, 2102, 2104, 2119, 2120, 2127, 2131, 2132, 2143, 2144, 2145], "input_s": [0, 739, 765, 766, 770, 1499, 1500, 1518, 1519, 1564, 1565, 1566, 2045], "num_class": [0, 1692, 2045, 2138], "super": [0, 9, 12, 23, 24, 28, 30, 33, 52, 64, 66, 73, 74, 75, 872, 873, 1186, 1287, 1292, 1295, 1296, 1301, 1305, 1306, 1307, 1548, 1549, 1550, 1558, 1559, 1560, 1561, 1706, 1728, 1839, 2044, 2046, 2047, 2048, 2075, 2081, 2089, 2094, 2097, 2099, 2102, 2104, 2127, 2131, 2143, 2144, 2145], "fc1": [0, 24, 1728, 2097, 2127], "x": [0, 1, 3, 5, 11, 12, 14, 23, 24, 28, 33, 35, 37, 44, 52, 53, 55, 57, 58, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 177, 258, 262, 290, 293, 315, 317, 319, 321, 325, 356, 381, 452, 487, 490, 497, 503, 562, 564, 587, 611, 612, 621, 697, 763, 765, 775, 784, 785, 789, 790, 802, 807, 810, 829, 830, 872, 873, 889, 895, 897, 898, 899, 906, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 926, 927, 946, 965, 966, 967, 970, 971, 976, 983, 985, 990, 991, 997, 998, 1001, 1004, 1005, 1035, 1061, 1062, 1102, 1109, 1113, 1114, 1119, 1123, 1133, 1134, 1135, 1136, 1138, 1139, 1144, 1145, 1147, 1149, 1153, 1154, 1156, 1159, 1160, 1161, 1169, 1176, 1178, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1213, 1228, 1229, 1243, 1260, 1264, 1276, 1294, 1295, 1296, 1300, 1301, 1304, 1305, 1306, 1307, 1311, 1321, 1334, 1335, 1339, 1342, 1346, 1350, 1352, 1355, 1356, 1357, 1358, 1359, 1362, 1367, 1368, 1369, 1377, 1380, 1383, 1384, 1391, 1438, 1439, 1443, 1444, 1450, 1451, 1460, 1461, 1462, 1463, 1464, 1466, 1481, 1483, 1489, 1495, 1496, 1497, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1534, 1537, 1538, 1539, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1563, 1564, 1566, 1567, 1568, 1569, 1576, 1578, 1579, 1580, 1581, 1583, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1597, 1598, 1601, 1628, 1652, 1654, 1658, 1659, 1665, 1669, 1673, 1685, 1690, 1695, 1699, 1701, 1707, 1708, 1709, 1713, 1714, 1716, 1717, 1718, 1725, 1728, 1737, 1754, 1757, 1759, 1780, 1781, 1782, 1783, 1784, 1789, 1792, 1793, 1794, 1801, 1804, 1832, 1847, 1848, 1859, 1861, 1875, 1878, 1879, 1881, 1882, 1884, 1885, 1889, 1893, 1930, 1932, 1935, 1949, 1951, 1952, 1953, 1954, 1960, 1961, 1968, 1974, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1992, 1994, 2001, 2002, 2003, 2005, 2006, 2007, 2010, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2064, 2065, 2066, 2071, 2073, 2075, 2076, 2077, 2078, 2081, 2082, 2083, 2086, 2087, 2089, 2090, 2095, 2097, 2098, 2099, 2102, 2104, 2109, 2113, 2114, 2115, 2117, 2119, 2120, 2123, 2124, 2125, 2126, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2138, 2143, 2145], "2": [0, 1, 3, 5, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 34, 35, 36, 37, 40, 45, 47, 48, 52, 53, 55, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 177, 195, 212, 229, 237, 238, 258, 264, 290, 317, 319, 321, 325, 339, 381, 405, 406, 449, 450, 451, 452, 453, 485, 491, 492, 497, 500, 503, 517, 519, 521, 548, 562, 564, 584, 585, 587, 588, 589, 591, 592, 593, 611, 621, 685, 686, 688, 689, 690, 691, 694, 695, 696, 697, 698, 700, 702, 703, 704, 739, 743, 744, 745, 746, 747, 748, 750, 751, 760, 763, 765, 767, 799, 802, 829, 876, 885, 886, 887, 888, 889, 890, 891, 895, 897, 898, 899, 901, 911, 914, 916, 917, 919, 920, 921, 922, 923, 924, 926, 927, 935, 936, 939, 946, 948, 950, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 969, 970, 971, 973, 974, 975, 976, 977, 981, 982, 990, 994, 998, 999, 1000, 1001, 1004, 1005, 1015, 1093, 1098, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1181, 1182, 1183, 1187, 1188, 1196, 1203, 1213, 1230, 1231, 1232, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1264, 1266, 1276, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1292, 1293, 1299, 1301, 1303, 1305, 1309, 1310, 1311, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1367, 1368, 1369, 1376, 1378, 1379, 1380, 1381, 1383, 1384, 1387, 1388, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1410, 1413, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1451, 1456, 1457, 1458, 1459, 1460, 1461, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1497, 1498, 1499, 1501, 1503, 1504, 1505, 1506, 1508, 1515, 1516, 1517, 1518, 1519, 1520, 1534, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1550, 1551, 1553, 1554, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1619, 1621, 1626, 1627, 1638, 1645, 1646, 1652, 1654, 1656, 1658, 1665, 1671, 1679, 1680, 1681, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1706, 1722, 1728, 1737, 1738, 1743, 1744, 1746, 1747, 1753, 1754, 1759, 1771, 1772, 1773, 1774, 1776, 1777, 1780, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1850, 1851, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1868, 1870, 1872, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1905, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1930, 1931, 1932, 1933, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1957, 1958, 1959, 1960, 1961, 1968, 1969, 1971, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2040, 2041, 2043, 2045, 2046, 2047, 2048, 2051, 2054, 2055, 2057, 2059, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2076, 2077, 2080, 2081, 2084, 2086, 2087, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2106, 2109, 2110, 2111, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2125, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2138, 2139, 2140, 2143, 2144, 2149], "For": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 25, 28, 29, 30, 33, 34, 35, 37, 44, 45, 47, 48, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 81, 82, 83, 200, 258, 293, 317, 319, 325, 339, 356, 419, 475, 485, 490, 497, 503, 517, 519, 521, 587, 593, 607, 621, 691, 692, 693, 694, 695, 698, 704, 739, 743, 744, 745, 746, 747, 748, 765, 798, 799, 800, 806, 822, 869, 870, 903, 916, 917, 930, 937, 951, 955, 957, 958, 960, 963, 972, 983, 988, 1053, 1067, 1069, 1075, 1100, 1101, 1102, 1119, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1163, 1171, 1186, 1188, 1202, 1203, 1207, 1217, 1230, 1243, 1252, 1266, 1289, 1300, 1301, 1303, 1305, 1306, 1319, 1321, 1325, 1326, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1346, 1347, 1349, 1350, 1353, 1362, 1369, 1377, 1384, 1390, 1394, 1452, 1456, 1460, 1461, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1490, 1491, 1493, 1494, 1499, 1501, 1508, 1513, 1518, 1520, 1548, 1551, 1552, 1553, 1554, 1562, 1563, 1564, 1570, 1571, 1572, 1573, 1574, 1575, 1580, 1585, 1599, 1600, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1627, 1629, 1630, 1631, 1640, 1641, 1642, 1647, 1654, 1665, 1691, 1693, 1706, 1714, 1728, 1737, 1738, 1739, 1757, 1780, 1781, 1782, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1841, 1870, 1886, 1895, 1898, 1906, 1932, 1933, 1943, 1949, 1958, 1959, 1974, 1976, 1980, 1988, 1991, 1996, 1998, 2005, 2006, 2007, 2042, 2043, 2044, 2047, 2049, 2051, 2053, 2054, 2056, 2057, 2060, 2062, 2065, 2066, 2067, 2068, 2071, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2089, 2091, 2092, 2093, 2094, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2108, 2109, 2110, 2111, 2114, 2116, 2117, 2118, 2119, 2120, 2121, 2126, 2127, 2128, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2141, 2142, 2144, 2145, 2146, 2149], "now": [0, 1, 19, 28, 33, 36, 44, 48, 50, 52, 55, 60, 64, 500, 911, 915, 916, 917, 925, 939, 1032, 1061, 1083, 1084, 1170, 1171, 1236, 1286, 1287, 1293, 1305, 1339, 1545, 1565, 1601, 1728, 1743, 1759, 1770, 1791, 1810, 1898, 1949, 1954, 1998, 2044, 2054, 2062, 2065, 2066, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2084, 2085, 2089, 2090, 2094, 2099, 2102, 2104, 2110, 2111, 2114, 2130, 2132, 2133, 2135, 2136, 2137, 2139, 2144, 2145, 2146, 2147], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 23, 24, 28, 30, 32, 33, 34, 35, 36, 37, 47, 48, 51, 52, 53, 55, 56, 57, 58, 59, 60, 63, 64, 66, 76, 77, 88, 490, 500, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 750, 751, 761, 766, 767, 768, 769, 770, 784, 790, 793, 795, 797, 799, 800, 847, 868, 870, 872, 873, 876, 904, 906, 911, 912, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 937, 939, 952, 961, 983, 985, 1012, 1075, 1119, 1137, 1139, 1140, 1141, 1142, 1149, 1154, 1155, 1156, 1170, 1180, 1181, 1183, 1188, 1189, 1193, 1196, 1197, 1199, 1201, 1202, 1203, 1205, 1207, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1226, 1243, 1247, 1248, 1264, 1287, 1289, 1292, 1293, 1301, 1303, 1305, 1345, 1348, 1353, 1361, 1362, 1381, 1434, 1452, 1457, 1458, 1459, 1460, 1461, 1495, 1513, 1548, 1601, 1654, 1656, 1665, 1725, 1732, 1738, 1746, 1747, 1753, 1756, 1765, 1767, 1770, 1774, 1775, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1829, 1836, 1841, 1858, 1901, 1991, 1996, 2007, 2042, 2043, 2044, 2046, 2047, 2049, 2051, 2054, 2055, 2056, 2057, 2062, 2064, 2065, 2066, 2067, 2071, 2075, 2078, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2089, 2091, 2092, 2095, 2096, 2097, 2099, 2101, 2102, 2104, 2105, 2107, 2109, 2110, 2111, 2114, 2117, 2119, 2120, 2123, 2124, 2125, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2142, 2143, 2144, 2145, 2149], "suggest": [0, 9, 24, 52, 56, 84, 85, 87, 89, 1481, 1805, 2042, 2049, 2074, 2075, 2083, 2114, 2127, 2130, 2139, 2145], "issu": [0, 2, 3, 5, 9, 10, 11, 14, 22, 23, 28, 30, 35, 36, 52, 55, 56, 58, 60, 64, 66, 86, 87, 919, 925, 939, 983, 985, 986, 1170, 1182, 1184, 1188, 1210, 1335, 1379, 1391, 1513, 1518, 1544, 1545, 1546, 1564, 1601, 1665, 1666, 1791, 1897, 2007, 2042, 2043, 2047, 2049, 2054, 2059, 2064, 2065, 2066, 2067, 2074, 2075, 2078, 2081, 2084, 2091, 2092, 2093, 2094, 2095, 2099, 2102, 2104, 2105, 2109, 2114, 2115, 2116, 2117, 2120, 2130, 2133, 2134, 2136, 2137, 2145, 2147, 2148], "http": [0, 2, 3, 4, 7, 9, 11, 12, 14, 15, 24, 26, 28, 33, 35, 37, 47, 48, 55, 154, 685, 735, 736, 737, 738, 750, 751, 761, 766, 767, 768, 769, 770, 798, 799, 904, 939, 983, 997, 1119, 1177, 1210, 1217, 1362, 1391, 1467, 1518, 1544, 1545, 1546, 1568, 1592, 1595, 1598, 1755, 1791, 1847, 1864, 1897, 1901, 1921, 1995, 1998, 2042, 2048, 2051, 2058, 2061, 2062, 2071, 2075, 2076, 2085, 2086, 2087, 2089, 2093, 2095, 2099, 2102, 2117, 2119, 2120, 2134, 2138, 2139, 2144, 2150], "github": [0, 7, 9, 14, 26, 28, 43, 52, 55, 56, 60, 154, 798, 799, 904, 925, 939, 1177, 1210, 1217, 1391, 1544, 1545, 1546, 1592, 1791, 1832, 1897, 1998, 2042, 2049, 2054, 2085, 2086, 2093, 2099, 2104, 2114, 2115, 2117, 2120, 2133, 2134, 2136, 2139, 2144], "com": [0, 7, 14, 26, 28, 46, 48, 55, 154, 798, 799, 904, 939, 1177, 1210, 1217, 1391, 1544, 1545, 1546, 1592, 1791, 1897, 1995, 1998, 2042, 2051, 2058, 2061, 2062, 2085, 2086, 2087, 2093, 2095, 2099, 2117, 2120, 2134, 2139, 2144], "pytorch": [0, 1, 2, 3, 4, 11, 12, 13, 14, 17, 18, 19, 20, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 40, 47, 48, 53, 55, 56, 59, 61, 64, 65, 66, 84, 85, 86, 87, 88, 89, 154, 517, 587, 685, 703, 735, 736, 737, 738, 750, 751, 761, 765, 766, 767, 768, 769, 770, 798, 799, 818, 819, 820, 821, 891, 904, 937, 939, 968, 973, 974, 983, 984, 985, 997, 1035, 1043, 1044, 1055, 1060, 1119, 1164, 1170, 1177, 1178, 1182, 1187, 1188, 1217, 1234, 1275, 1276, 1300, 1320, 1326, 1331, 1333, 1334, 1335, 1338, 1351, 1360, 1376, 1379, 1380, 1391, 1426, 1460, 1461, 1467, 1499, 1513, 1544, 1545, 1546, 1592, 1609, 1610, 1611, 1627, 1706, 1738, 1746, 1747, 1780, 1788, 1789, 1791, 1794, 1802, 1857, 1889, 1897, 1898, 1899, 1907, 1954, 1958, 1982, 1995, 1998, 2007, 2020, 2026, 2029, 2042, 2046, 2047, 2051, 2053, 2054, 2058, 2060, 2062, 2066, 2067, 2068, 2071, 2076, 2077, 2082, 2083, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2095, 2096, 2097, 2101, 2102, 2103, 2105, 2106, 2109, 2110, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2123, 2127, 2129, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2143, 2144, 2146, 2147, 2148, 2150], "75956": 0, "_c": [0, 23, 24, 28, 63, 919, 925, 1020, 1288, 1301, 1800, 2045, 2047, 2060, 2078, 2088, 2092, 2095, 2099, 2109], "_jit_set_autocast_mod": 0, "fals": [0, 1, 2, 3, 5, 12, 14, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 52, 55, 58, 62, 64, 66, 71, 75, 76, 77, 90, 116, 117, 118, 119, 120, 122, 138, 139, 140, 154, 185, 186, 187, 200, 213, 264, 305, 322, 323, 325, 332, 336, 339, 340, 342, 346, 347, 348, 355, 358, 396, 400, 411, 413, 414, 415, 418, 419, 425, 433, 434, 435, 436, 449, 450, 451, 452, 453, 457, 462, 464, 474, 475, 483, 499, 500, 508, 521, 546, 559, 560, 569, 584, 598, 607, 613, 614, 619, 621, 627, 685, 698, 699, 700, 701, 702, 704, 717, 718, 719, 720, 721, 722, 737, 739, 740, 743, 744, 745, 750, 751, 756, 757, 758, 760, 761, 763, 765, 769, 773, 774, 781, 783, 784, 785, 787, 788, 790, 804, 807, 822, 828, 829, 830, 831, 833, 834, 835, 847, 849, 851, 868, 869, 874, 875, 876, 885, 886, 887, 891, 904, 906, 911, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 943, 952, 955, 958, 960, 961, 967, 968, 974, 975, 976, 982, 983, 997, 998, 1018, 1059, 1064, 1076, 1119, 1120, 1121, 1122, 1124, 1125, 1132, 1136, 1137, 1138, 1139, 1144, 1145, 1150, 1151, 1152, 1154, 1155, 1156, 1171, 1173, 1174, 1175, 1176, 1178, 1179, 1181, 1182, 1183, 1185, 1187, 1191, 1203, 1212, 1215, 1216, 1224, 1228, 1230, 1232, 1246, 1247, 1248, 1251, 1252, 1274, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1289, 1294, 1296, 1297, 1305, 1306, 1307, 1309, 1311, 1314, 1319, 1320, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1344, 1346, 1347, 1350, 1351, 1352, 1353, 1354, 1359, 1360, 1361, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1381, 1383, 1387, 1389, 1390, 1392, 1395, 1402, 1405, 1406, 1415, 1434, 1439, 1440, 1441, 1442, 1445, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1481, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1496, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1533, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1557, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1576, 1578, 1580, 1581, 1588, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1601, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1649, 1650, 1651, 1654, 1656, 1658, 1659, 1660, 1665, 1666, 1669, 1675, 1676, 1677, 1679, 1680, 1681, 1685, 1690, 1694, 1698, 1700, 1701, 1704, 1705, 1706, 1707, 1709, 1719, 1722, 1723, 1725, 1731, 1738, 1741, 1743, 1744, 1748, 1749, 1751, 1753, 1756, 1758, 1759, 1760, 1772, 1781, 1782, 1783, 1784, 1786, 1789, 1792, 1793, 1794, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1855, 1857, 1858, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1881, 1882, 1889, 1893, 1901, 1902, 1905, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1930, 1940, 1941, 1942, 1943, 1944, 1945, 1952, 1953, 1954, 1957, 1958, 1973, 1977, 1982, 1991, 1995, 1996, 1998, 2001, 2002, 2003, 2010, 2012, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2051, 2053, 2054, 2057, 2058, 2064, 2066, 2067, 2071, 2074, 2075, 2078, 2080, 2081, 2083, 2084, 2085, 2089, 2092, 2093, 2094, 2097, 2098, 2099, 2102, 2103, 2105, 2108, 2109, 2114, 2115, 2116, 2118, 2119, 2121, 2123, 2125, 2130, 2132, 2133, 2134, 2136, 2140, 2141, 2144, 2145, 2146, 2149], "randn": [0, 1, 11, 12, 28, 33, 34, 35, 52, 57, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 293, 315, 487, 548, 584, 588, 589, 590, 591, 592, 593, 621, 688, 689, 690, 691, 692, 693, 694, 695, 700, 701, 704, 725, 733, 734, 739, 743, 744, 745, 746, 747, 748, 761, 763, 765, 766, 767, 768, 769, 770, 777, 778, 779, 872, 873, 885, 886, 887, 889, 892, 893, 894, 895, 896, 946, 951, 963, 970, 972, 973, 974, 975, 976, 978, 1000, 1001, 1002, 1003, 1004, 1015, 1035, 1098, 1099, 1100, 1106, 1107, 1108, 1109, 1113, 1119, 1133, 1134, 1163, 1171, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1260, 1264, 1266, 1301, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1343, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1358, 1365, 1369, 1370, 1377, 1379, 1380, 1381, 1383, 1384, 1387, 1389, 1390, 1392, 1394, 1396, 1397, 1413, 1433, 1436, 1446, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1546, 1547, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1575, 1576, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1597, 1599, 1600, 1604, 1605, 1606, 1608, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1649, 1650, 1656, 1690, 1696, 1697, 1737, 1797, 1848, 1853, 1854, 1855, 1857, 1858, 1871, 1875, 1876, 1888, 1923, 1925, 1930, 1936, 1939, 1947, 1948, 1951, 1957, 1958, 1968, 1971, 1972, 1975, 1979, 1982, 1983, 1985, 1988, 1990, 1995, 2005, 2006, 2007, 2010, 2045, 2046, 2047, 2049, 2051, 2055, 2065, 2066, 2067, 2071, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2087, 2089, 2093, 2094, 2097, 2098, 2099, 2100, 2102, 2104, 2109, 2114, 2115, 2117, 2119, 2123, 2125, 2127, 2130, 2131, 2133, 2134, 2136, 2138, 2140, 2143, 2145], "freez": [0, 55, 1203, 1289, 1299, 1490, 1491, 1548, 2075, 2127, 2130], "_": [0, 1, 3, 11, 23, 24, 28, 29, 32, 33, 40, 61, 64, 686, 688, 689, 703, 876, 892, 893, 894, 895, 896, 906, 911, 915, 916, 917, 927, 953, 972, 988, 999, 1000, 1002, 1003, 1005, 1163, 1168, 1183, 1187, 1256, 1310, 1318, 1369, 1377, 1462, 1463, 1464, 1510, 1511, 1512, 1564, 1588, 1738, 1754, 1788, 1805, 1824, 1826, 1847, 1870, 1873, 1876, 1888, 1908, 1910, 1916, 1923, 1925, 1947, 1958, 1971, 1972, 2051, 2075, 2078, 2082, 2083, 2089, 2095, 2101, 2102, 2103, 2115, 2131, 2134, 2139, 2143, 2145], "3": [0, 1, 3, 4, 6, 9, 11, 12, 18, 19, 21, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 40, 45, 47, 52, 55, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 195, 212, 237, 258, 264, 293, 317, 319, 321, 325, 405, 406, 449, 450, 451, 452, 453, 475, 491, 492, 497, 500, 503, 517, 519, 521, 527, 541, 548, 562, 564, 585, 587, 588, 589, 591, 592, 611, 621, 685, 686, 690, 691, 692, 693, 694, 695, 696, 697, 698, 702, 703, 704, 739, 743, 744, 745, 746, 747, 748, 751, 753, 762, 765, 766, 767, 768, 770, 777, 778, 779, 790, 799, 833, 872, 873, 876, 886, 887, 889, 890, 891, 898, 899, 919, 920, 921, 922, 923, 924, 926, 946, 951, 953, 954, 955, 956, 957, 958, 959, 960, 962, 963, 964, 965, 966, 967, 969, 970, 971, 973, 974, 975, 976, 977, 981, 982, 994, 998, 999, 1004, 1005, 1015, 1061, 1062, 1064, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1132, 1135, 1140, 1143, 1147, 1153, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1176, 1178, 1183, 1184, 1186, 1188, 1230, 1231, 1232, 1243, 1246, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1264, 1266, 1274, 1276, 1278, 1280, 1289, 1293, 1296, 1299, 1301, 1305, 1306, 1310, 1311, 1312, 1313, 1314, 1315, 1319, 1321, 1322, 1323, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1367, 1370, 1372, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1413, 1433, 1434, 1436, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1457, 1458, 1459, 1460, 1461, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1483, 1490, 1491, 1494, 1495, 1496, 1497, 1499, 1500, 1502, 1504, 1505, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1551, 1553, 1555, 1560, 1561, 1563, 1564, 1566, 1567, 1570, 1571, 1572, 1573, 1574, 1575, 1582, 1583, 1584, 1588, 1596, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1609, 1610, 1611, 1619, 1621, 1626, 1627, 1630, 1631, 1633, 1634, 1637, 1645, 1646, 1649, 1650, 1652, 1654, 1658, 1659, 1665, 1673, 1690, 1692, 1693, 1696, 1697, 1704, 1705, 1706, 1712, 1713, 1725, 1737, 1738, 1746, 1747, 1754, 1769, 1771, 1773, 1774, 1775, 1776, 1780, 1782, 1783, 1784, 1785, 1788, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1836, 1839, 1840, 1842, 1846, 1848, 1850, 1854, 1855, 1857, 1858, 1861, 1862, 1863, 1864, 1865, 1866, 1868, 1870, 1872, 1873, 1874, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1889, 1893, 1898, 1899, 1905, 1908, 1910, 1912, 1914, 1915, 1916, 1920, 1921, 1922, 1930, 1932, 1933, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1951, 1957, 1958, 1960, 1961, 1968, 1969, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 2001, 2004, 2007, 2008, 2009, 2010, 2040, 2041, 2044, 2045, 2046, 2047, 2048, 2051, 2054, 2062, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2084, 2085, 2086, 2089, 2090, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2106, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2127, 2130, 2133, 2134, 2136, 2138, 2139, 2140, 2142, 2143, 2144, 2145, 2149], "bug": [0, 14, 18, 28, 52, 64, 985, 1180, 1181, 1183, 1379, 2074, 2091, 2114, 2136, 2145], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 74, 75, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 123, 154, 158, 199, 200, 210, 213, 225, 226, 227, 259, 264, 293, 294, 317, 325, 327, 339, 341, 344, 356, 419, 449, 450, 451, 452, 453, 462, 490, 491, 492, 497, 499, 500, 501, 502, 503, 504, 507, 508, 517, 519, 521, 528, 560, 570, 587, 588, 589, 591, 592, 593, 607, 608, 618, 621, 622, 627, 685, 689, 691, 694, 698, 699, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 740, 741, 742, 749, 753, 754, 755, 756, 757, 758, 759, 760, 762, 764, 765, 780, 781, 782, 783, 784, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 807, 808, 810, 818, 819, 820, 821, 823, 824, 825, 829, 830, 831, 832, 833, 834, 835, 865, 870, 872, 873, 885, 886, 887, 888, 889, 896, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 935, 936, 937, 939, 943, 950, 951, 954, 956, 959, 963, 964, 967, 971, 973, 974, 977, 978, 980, 983, 985, 986, 987, 988, 989, 993, 998, 999, 1001, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1028, 1035, 1040, 1042, 1045, 1046, 1047, 1049, 1050, 1053, 1054, 1055, 1056, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1071, 1074, 1075, 1076, 1083, 1084, 1086, 1087, 1088, 1092, 1093, 1094, 1100, 1101, 1102, 1107, 1109, 1110, 1114, 1117, 1118, 1119, 1123, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1170, 1173, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1192, 1193, 1196, 1197, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1212, 1213, 1214, 1216, 1217, 1226, 1228, 1231, 1233, 1234, 1243, 1247, 1253, 1255, 1276, 1286, 1287, 1289, 1290, 1292, 1294, 1295, 1297, 1299, 1300, 1301, 1305, 1306, 1307, 1309, 1310, 1311, 1312, 1313, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1361, 1362, 1365, 1367, 1370, 1379, 1380, 1384, 1387, 1389, 1390, 1391, 1392, 1394, 1395, 1396, 1402, 1405, 1406, 1415, 1416, 1417, 1421, 1428, 1430, 1431, 1436, 1439, 1440, 1441, 1442, 1444, 1452, 1456, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1495, 1496, 1499, 1500, 1502, 1507, 1508, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1533, 1535, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1551, 1554, 1555, 1558, 1560, 1563, 1564, 1565, 1577, 1580, 1582, 1585, 1588, 1594, 1595, 1596, 1597, 1600, 1601, 1602, 1603, 1607, 1608, 1609, 1610, 1611, 1612, 1619, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1654, 1656, 1658, 1663, 1665, 1671, 1673, 1679, 1680, 1681, 1691, 1693, 1695, 1706, 1712, 1713, 1721, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1746, 1747, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1780, 1781, 1782, 1783, 1784, 1787, 1788, 1789, 1791, 1792, 1794, 1795, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1836, 1837, 1839, 1841, 1843, 1845, 1846, 1847, 1851, 1855, 1857, 1864, 1868, 1870, 1873, 1877, 1879, 1886, 1893, 1895, 1896, 1897, 1899, 1900, 1901, 1905, 1906, 1907, 1908, 1913, 1926, 1931, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1950, 1952, 1953, 1954, 1957, 1958, 1959, 1960, 1961, 1965, 1968, 1970, 1974, 1976, 1980, 1982, 1990, 1991, 1992, 1994, 1995, 1996, 1998, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2012, 2013, 2014, 2017, 2019, 2021, 2022, 2024, 2026, 2027, 2030, 2031, 2032, 2033, 2034, 2037, 2038, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2053, 2054, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2069, 2071, 2073, 2074, 2075, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2123, 2124, 2125, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2152], "what": [0, 1, 3, 5, 7, 8, 9, 17, 19, 28, 30, 35, 40, 44, 45, 52, 55, 57, 59, 60, 64, 66, 903, 916, 917, 1181, 1202, 1203, 1212, 1213, 1305, 1306, 1379, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1542, 1543, 1577, 1600, 1679, 1680, 1681, 1706, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 1841, 1858, 2042, 2043, 2044, 2046, 2047, 2051, 2055, 2065, 2078, 2081, 2082, 2084, 2086, 2089, 2091, 2099, 2101, 2103, 2104, 2109, 2110, 2114, 2120, 2130, 2131, 2132, 2133, 2135, 2137, 2138, 2145, 2147], "observ": [0, 24, 30, 37, 47, 490, 761, 795, 796, 798, 799, 800, 801, 802, 804, 807, 808, 809, 810, 816, 817, 819, 821, 823, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 852, 870, 872, 873, 875, 938, 1001, 1005, 1219, 1303, 1391, 1460, 1461, 1462, 1463, 1464, 1481, 1483, 1507, 1510, 1511, 1512, 1513, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1588, 1597, 1626, 1627, 1637, 1666, 1690, 1698, 2074, 2075, 2078, 2088, 2091, 2103, 2105, 2125, 2129, 2130, 2136, 2143, 2145, 2147, 2149], "file": [0, 1, 3, 6, 7, 9, 11, 14, 18, 20, 23, 30, 37, 40, 45, 47, 50, 52, 53, 58, 60, 64, 919, 925, 926, 940, 942, 1017, 1035, 1057, 1171, 1180, 1181, 1183, 1184, 1289, 1297, 1300, 1361, 1801, 1889, 1933, 2042, 2044, 2047, 2048, 2049, 2055, 2058, 2065, 2066, 2067, 2075, 2078, 2081, 2088, 2091, 2093, 2095, 2097, 2099, 2103, 2107, 2110, 2114, 2116, 2119, 2127, 2131, 2132, 2133, 2136, 2138, 2139, 2142, 2143, 2145, 2147, 2148, 2149], "subregion": 0, "nest": [0, 1, 5, 12, 14, 30, 45, 52, 55, 64, 66, 69, 74, 75, 593, 799, 823, 825, 906, 921, 997, 1080, 1081, 1178, 1188, 1289, 1292, 1305, 1548, 1554, 1595, 1596, 1706, 1746, 1747, 1802, 2007, 2043, 2082, 2084, 2097, 2099, 2103, 2109, 2120, 2143], "local": [0, 5, 28, 30, 32, 33, 34, 37, 45, 47, 48, 50, 51, 55, 64, 926, 927, 928, 1061, 1123, 1177, 1289, 1362, 1486, 1487, 1488, 1492, 1494, 1536, 1548, 1600, 1648, 1672, 1724, 1738, 1740, 1792, 1933, 2042, 2043, 2046, 2064, 2074, 2078, 2080, 2083, 2094, 2099, 2102, 2106, 2109, 2110, 2111, 2119, 2133, 2134, 2136, 2145, 2147], "want": [0, 1, 7, 8, 9, 14, 23, 28, 33, 34, 35, 44, 52, 55, 57, 58, 59, 60, 63, 64, 66, 452, 490, 500, 503, 786, 797, 847, 985, 1057, 1176, 1177, 1192, 1202, 1203, 1302, 1305, 1306, 1391, 1495, 1496, 1601, 1649, 1650, 1665, 1725, 1738, 1740, 1789, 1792, 1807, 1808, 1826, 1827, 1889, 1998, 2042, 2051, 2054, 2074, 2075, 2077, 2078, 2081, 2082, 2084, 2086, 2089, 2099, 2101, 2102, 2104, 2114, 2119, 2120, 2124, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2144], "forc": [0, 1, 14, 18, 20, 55, 462, 891, 983, 1035, 1057, 1197, 1292, 1304, 1308, 1907, 1943, 2042, 2044, 2047, 2051, 2062, 2074, 2078, 2119, 2123, 2130, 2133, 2134], "particular": [0, 1, 3, 7, 23, 30, 37, 44, 47, 48, 52, 53, 64, 66, 71, 75, 91, 490, 564, 685, 872, 873, 1093, 1188, 1196, 1289, 1384, 1484, 1548, 2007, 2044, 2046, 2054, 2059, 2067, 2078, 2081, 2083, 2084, 2088, 2089, 2092, 2097, 2099, 2101, 2114, 2116, 2123, 2130, 2133, 2135, 2136, 2137, 2145, 2146, 2147], "give": [0, 3, 4, 7, 9, 12, 18, 23, 24, 30, 32, 46, 52, 55, 64, 930, 931, 1005, 1137, 1139, 1140, 1142, 1146, 1155, 1180, 1181, 1182, 1203, 1290, 1303, 1304, 1319, 1326, 1475, 1476, 1477, 1553, 1600, 1601, 1753, 1793, 1807, 1808, 1826, 1954, 1995, 2042, 2044, 2064, 2066, 2073, 2075, 2078, 2081, 2082, 2084, 2086, 2087, 2089, 2093, 2099, 2101, 2114, 2130, 2132, 2133, 2135, 2142, 2145, 2146], "explicit": [0, 8, 12, 28, 52, 55, 59, 64, 1053, 1202, 1243, 1276, 1666, 1897, 1975, 2042, 2043, 2047, 2048, 2065, 2074, 2078, 2081, 2084, 2102, 2117, 2118, 2140], "control": [0, 1, 2, 5, 14, 19, 23, 24, 28, 29, 30, 31, 35, 37, 43, 46, 47, 53, 66, 72, 75, 90, 92, 760, 807, 869, 872, 887, 891, 906, 952, 961, 997, 1106, 1107, 1108, 1109, 1110, 1197, 1247, 1248, 1301, 1302, 1303, 1305, 1320, 1326, 1328, 1331, 1333, 1336, 1338, 1342, 1348, 1351, 1353, 1359, 1379, 1415, 1416, 1452, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1534, 1542, 1543, 1600, 1706, 1738, 1845, 1901, 1902, 1915, 1930, 1933, 1938, 1954, 1958, 1977, 1983, 1984, 1985, 1986, 2043, 2044, 2051, 2053, 2071, 2075, 2077, 2078, 2080, 2089, 2091, 2092, 2094, 2096, 2097, 2099, 2101, 2103, 2104, 2111, 2114, 2130, 2131, 2132, 2133, 2136, 2148, 2149], "execut": [0, 1, 2, 3, 4, 5, 7, 14, 15, 19, 23, 28, 30, 32, 37, 39, 41, 48, 52, 53, 55, 60, 63, 64, 83, 92, 491, 492, 911, 935, 936, 983, 985, 990, 1023, 1034, 1035, 1097, 1177, 1191, 1201, 1289, 1290, 1292, 1305, 1306, 1361, 1405, 1406, 1416, 1484, 1548, 1554, 1592, 1593, 1594, 1595, 1596, 1731, 1738, 1903, 2013, 2043, 2044, 2046, 2048, 2057, 2059, 2074, 2076, 2077, 2083, 2084, 2085, 2088, 2089, 2091, 2093, 2095, 2097, 2099, 2103, 2104, 2109, 2110, 2114, 2123, 2127, 2130, 2132, 2133, 2134, 2135, 2137, 2138, 2139, 2141, 2144, 2145, 2148], "surround": [0, 64, 796, 2046, 2074, 2078], "ensur": [0, 1, 4, 5, 6, 7, 9, 19, 23, 28, 29, 30, 32, 33, 34, 37, 47, 48, 51, 52, 55, 63, 64, 91, 92, 485, 490, 740, 828, 911, 912, 914, 916, 993, 1035, 1177, 1201, 1212, 1289, 1416, 1456, 1461, 1541, 1548, 1551, 1592, 1654, 1679, 1680, 1681, 1706, 1738, 1746, 1747, 1904, 2042, 2044, 2046, 2054, 2058, 2064, 2074, 2075, 2078, 2081, 2082, 2085, 2086, 2091, 2093, 2094, 2102, 2104, 2105, 2109, 2110, 2116, 2130, 2135, 2136, 2145], "necessari": [0, 1, 3, 9, 14, 23, 28, 30, 33, 34, 37, 47, 48, 52, 55, 62, 63, 91, 195, 212, 490, 564, 593, 911, 915, 916, 917, 1177, 1193, 1264, 1301, 1554, 1781, 1782, 2044, 2047, 2051, 2066, 2073, 2075, 2076, 2078, 2080, 2087, 2089, 2092, 2095, 2102, 2104, 2109, 2110, 2111, 2117, 2120, 2127, 2130, 2133, 2136, 2145, 2149], "becaus": [0, 1, 3, 4, 5, 7, 8, 14, 19, 23, 24, 28, 30, 32, 33, 35, 40, 52, 53, 55, 59, 60, 63, 64, 66, 74, 75, 490, 500, 921, 930, 931, 937, 985, 1140, 1141, 1142, 1150, 1151, 1152, 1178, 1182, 1187, 1188, 1202, 1203, 1209, 1213, 1219, 1286, 1290, 1293, 1297, 1336, 1337, 1361, 1379, 1462, 1463, 1464, 1484, 1588, 1728, 1738, 1740, 1830, 1873, 1898, 1901, 1954, 2007, 2043, 2044, 2047, 2049, 2055, 2064, 2065, 2066, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2097, 2099, 2102, 2104, 2105, 2109, 2111, 2114, 2119, 2121, 2125, 2127, 2130, 2132, 2133, 2135, 2136, 2137, 2138, 2139, 2143, 2145, 2146, 2147], "wa": [0, 1, 2, 3, 7, 18, 24, 28, 33, 45, 46, 47, 48, 52, 53, 55, 63, 64, 90, 339, 490, 500, 685, 790, 798, 851, 865, 937, 973, 984, 1018, 1019, 1045, 1049, 1064, 1077, 1097, 1139, 1188, 1201, 1286, 1296, 1305, 1320, 1331, 1333, 1337, 1361, 1379, 1402, 1415, 1434, 1518, 1544, 1545, 1546, 1578, 1601, 1619, 1654, 1709, 1725, 1738, 1740, 1783, 1832, 1839, 1952, 1953, 1991, 1992, 2002, 2003, 2007, 2012, 2042, 2044, 2046, 2047, 2048, 2051, 2053, 2054, 2060, 2064, 2074, 2075, 2076, 2078, 2081, 2082, 2083, 2084, 2088, 2090, 2094, 2097, 2099, 2101, 2104, 2108, 2109, 2114, 2116, 2121, 2127, 2132, 2133, 2135, 2136, 2143, 2144, 2145, 2147], "f_float32": 0, "re": [0, 1, 4, 5, 7, 14, 23, 28, 32, 34, 36, 44, 47, 52, 55, 56, 57, 58, 59, 60, 62, 63, 64, 492, 963, 985, 1016, 1035, 1053, 1170, 1226, 1289, 1293, 1548, 1712, 1739, 1740, 1783, 1870, 1884, 1937, 2044, 2047, 2051, 2054, 2064, 2074, 2075, 2078, 2081, 2082, 2086, 2091, 2104, 2110, 2111, 2115, 2130, 2132, 2134, 2135, 2136, 2144, 2145, 2146], "again": [0, 18, 23, 28, 32, 37, 52, 58, 1203, 1434, 2051, 2075, 2081, 2082, 2089, 2130, 2133, 2135, 2139], "regardless": [0, 3, 23, 28, 46, 52, 55, 999, 1207, 1289, 1293, 1299, 1548, 1731, 1991, 2074, 2078, 2094, 2109, 2121, 2133, 2136], "g_float16": 0, "state": [0, 1, 2, 5, 9, 23, 28, 30, 32, 33, 35, 37, 40, 41, 47, 51, 52, 53, 55, 62, 64, 91, 419, 685, 753, 765, 845, 993, 1050, 1051, 1055, 1060, 1064, 1074, 1090, 1091, 1177, 1186, 1201, 1242, 1289, 1292, 1305, 1362, 1403, 1411, 1423, 1426, 1429, 1499, 1500, 1518, 1519, 1548, 1564, 1566, 1596, 1612, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1816, 1817, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1864, 1906, 1933, 1998, 2024, 2025, 2026, 2029, 2035, 2036, 2043, 2051, 2057, 2074, 2075, 2078, 2080, 2081, 2087, 2091, 2094, 2097, 2099, 2101, 2108, 2124, 2130, 2132, 2133, 2134, 2135, 2136, 2141], "thread": [0, 1, 3, 23, 28, 30, 37, 50, 55, 63, 90, 92, 926, 927, 928, 1016, 1018, 1053, 1123, 1240, 1241, 1402, 1415, 1416, 1484, 1792, 1903, 1904, 1997, 2012, 2043, 2044, 2056, 2060, 2074, 2078, 2084, 2088, 2091, 2109, 2111, 2116, 2123, 2134, 2136, 2148, 2149], "must": [0, 3, 5, 6, 9, 12, 14, 23, 28, 30, 32, 33, 34, 35, 36, 37, 45, 48, 50, 52, 53, 55, 58, 60, 63, 64, 66, 74, 75, 90, 91, 101, 143, 157, 158, 200, 264, 317, 319, 325, 402, 404, 406, 490, 517, 548, 549, 570, 587, 588, 589, 591, 592, 621, 691, 692, 693, 694, 695, 696, 702, 753, 762, 777, 778, 779, 799, 823, 825, 870, 871, 889, 895, 900, 901, 902, 903, 906, 911, 915, 916, 917, 920, 922, 923, 924, 930, 931, 951, 953, 955, 956, 957, 958, 959, 960, 963, 967, 970, 985, 994, 997, 1005, 1018, 1030, 1031, 1032, 1034, 1061, 1062, 1064, 1107, 1109, 1110, 1111, 1113, 1116, 1117, 1119, 1140, 1141, 1142, 1147, 1149, 1150, 1151, 1152, 1153, 1160, 1161, 1170, 1171, 1173, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1202, 1207, 1212, 1213, 1214, 1230, 1231, 1243, 1252, 1253, 1256, 1266, 1286, 1289, 1300, 1305, 1312, 1315, 1344, 1345, 1346, 1347, 1353, 1355, 1356, 1359, 1360, 1362, 1376, 1380, 1382, 1383, 1384, 1389, 1390, 1397, 1415, 1434, 1439, 1440, 1443, 1444, 1448, 1461, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1490, 1491, 1494, 1495, 1496, 1501, 1502, 1508, 1541, 1548, 1551, 1552, 1554, 1555, 1580, 1586, 1601, 1627, 1636, 1638, 1646, 1665, 1679, 1680, 1681, 1699, 1706, 1738, 1748, 1750, 1770, 1780, 1781, 1787, 1789, 1794, 1810, 1837, 1839, 1846, 1847, 1850, 1851, 1854, 1862, 1863, 1884, 1893, 1896, 1904, 1920, 1931, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1954, 1959, 1970, 1974, 1975, 1979, 1984, 1986, 1990, 1993, 1995, 1998, 2004, 2005, 2007, 2008, 2010, 2012, 2044, 2045, 2046, 2047, 2051, 2054, 2064, 2065, 2066, 2067, 2073, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2084, 2087, 2091, 2094, 2095, 2097, 2099, 2101, 2102, 2104, 2108, 2109, 2110, 2111, 2114, 2115, 2116, 2119, 2121, 2130, 2131, 2132, 2136, 2137, 2144, 2145, 2146, 2149], "invok": [0, 2, 8, 15, 18, 19, 23, 28, 45, 48, 63, 64, 919, 921, 1061, 1062, 1289, 1292, 1299, 1484, 1548, 1730, 1732, 1735, 1736, 1791, 1832, 1839, 2044, 2047, 2048, 2057, 2074, 2077, 2078, 2080, 2081, 2082, 2088, 2089, 2102, 2109, 2110, 2127, 2130, 2135, 2136, 2137], "affect": [0, 1, 2, 7, 9, 18, 19, 22, 33, 36, 52, 55, 225, 226, 790, 926, 927, 928, 1019, 1023, 1123, 1170, 1171, 1204, 1212, 1289, 1405, 1406, 1518, 1548, 1564, 1601, 1725, 1740, 1746, 1747, 1792, 1805, 1897, 1900, 1901, 2074, 2075, 2078, 2084, 2086, 2089, 2092, 2093, 2116, 2141, 2143], "dataparallel": [0, 28, 1721, 1738, 1783, 2043, 2075, 2083, 2091, 2109], "parallel": [0, 13, 14, 23, 24, 28, 29, 30, 32, 47, 48, 55, 1240, 1241, 1292, 1484, 1554, 1588, 1654, 1706, 1738, 1903, 1904, 2043, 2047, 2074, 2075, 2077, 2091, 2095, 2109, 2111, 2122, 2129, 2136, 2148], "distributeddataparallel": [0, 23, 24, 28, 29, 30, 32, 33, 48, 55, 685, 1484, 1588, 2091, 2109, 2136], "than": [0, 3, 4, 5, 6, 8, 9, 11, 14, 17, 19, 23, 24, 28, 29, 30, 35, 36, 37, 40, 44, 47, 48, 50, 52, 55, 60, 64, 66, 67, 75, 154, 258, 490, 503, 549, 621, 685, 784, 790, 904, 920, 921, 938, 943, 954, 965, 972, 973, 977, 978, 991, 1032, 1071, 1075, 1089, 1107, 1108, 1159, 1160, 1161, 1163, 1167, 1173, 1184, 1216, 1232, 1246, 1250, 1264, 1274, 1286, 1287, 1290, 1301, 1310, 1311, 1314, 1319, 1320, 1326, 1330, 1335, 1343, 1344, 1346, 1347, 1350, 1355, 1361, 1365, 1378, 1381, 1387, 1390, 1392, 1395, 1410, 1434, 1444, 1460, 1461, 1475, 1476, 1477, 1484, 1490, 1491, 1508, 1518, 1540, 1554, 1562, 1571, 1580, 1586, 1596, 1597, 1598, 1619, 1629, 1630, 1631, 1645, 1646, 1654, 1665, 1692, 1706, 1722, 1724, 1725, 1728, 1738, 1746, 1747, 1753, 1754, 1756, 1757, 1783, 1788, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1839, 1841, 1855, 1856, 1877, 1878, 1901, 1905, 1939, 1940, 1941, 1942, 1944, 1945, 1976, 1984, 1986, 1995, 2042, 2044, 2046, 2047, 2049, 2055, 2066, 2067, 2068, 2073, 2075, 2076, 2078, 2081, 2082, 2083, 2084, 2086, 2089, 2091, 2092, 2093, 2094, 2099, 2101, 2102, 2104, 2105, 2109, 2114, 2115, 2117, 2119, 2120, 2121, 2130, 2131, 2133, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2145, 2147, 2149], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 17, 18, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 40, 44, 47, 50, 51, 52, 53, 55, 59, 60, 61, 63, 64, 66, 71, 74, 75, 84, 85, 86, 87, 89, 92, 154, 225, 258, 356, 406, 490, 517, 524, 549, 564, 702, 753, 762, 799, 865, 866, 867, 891, 897, 903, 904, 906, 909, 911, 912, 916, 917, 921, 926, 927, 937, 939, 954, 965, 967, 977, 981, 985, 997, 1014, 1019, 1023, 1028, 1030, 1034, 1062, 1086, 1097, 1108, 1119, 1123, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1149, 1150, 1151, 1152, 1153, 1155, 1158, 1162, 1165, 1166, 1167, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1203, 1243, 1252, 1253, 1268, 1271, 1274, 1293, 1299, 1303, 1309, 1310, 1320, 1321, 1331, 1334, 1335, 1337, 1342, 1346, 1348, 1350, 1353, 1359, 1360, 1376, 1384, 1388, 1393, 1416, 1434, 1440, 1452, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1475, 1478, 1479, 1480, 1491, 1495, 1496, 1501, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1527, 1528, 1529, 1539, 1548, 1552, 1554, 1588, 1596, 1601, 1619, 1629, 1632, 1633, 1634, 1649, 1650, 1651, 1656, 1692, 1706, 1724, 1728, 1738, 1740, 1754, 1755, 1756, 1760, 1770, 1781, 1791, 1792, 1793, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1816, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1835, 1837, 1838, 1839, 1859, 1860, 1877, 1893, 1901, 1905, 1908, 1949, 1958, 1974, 1979, 1980, 1982, 1990, 1991, 1993, 1994, 1995, 1998, 2007, 2013, 2032, 2043, 2044, 2047, 2051, 2053, 2057, 2060, 2064, 2065, 2066, 2067, 2071, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2088, 2089, 2091, 2093, 2094, 2095, 2099, 2101, 2102, 2103, 2104, 2105, 2109, 2111, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2123, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2138, 2139, 2142, 2144, 2145, 2147], "gpu": [0, 1, 2, 3, 4, 7, 14, 17, 19, 20, 21, 23, 24, 30, 37, 48, 50, 55, 63, 200, 213, 293, 336, 607, 765, 983, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1041, 1042, 1043, 1050, 1056, 1057, 1063, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1082, 1083, 1084, 1085, 1086, 1087, 1090, 1096, 1097, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1167, 1289, 1299, 1336, 1361, 1390, 1398, 1400, 1401, 1405, 1406, 1408, 1452, 1484, 1499, 1518, 1548, 1564, 1565, 1588, 1721, 1738, 1780, 1958, 2024, 2027, 2030, 2031, 2032, 2033, 2035, 2043, 2044, 2057, 2061, 2078, 2081, 2084, 2087, 2089, 2090, 2092, 2093, 2095, 2104, 2109, 2114, 2116, 2117, 2120, 2123, 2126, 2127, 2130, 2134, 2135, 2138, 2142, 2143, 2145, 2147, 2152], "per": [0, 11, 14, 19, 20, 23, 24, 28, 29, 30, 32, 33, 34, 36, 37, 40, 46, 48, 50, 55, 56, 61, 476, 477, 478, 685, 739, 740, 809, 816, 828, 831, 834, 842, 856, 864, 903, 916, 917, 919, 921, 939, 983, 1024, 1102, 1133, 1178, 1188, 1362, 1417, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1481, 1483, 1484, 1491, 1502, 1507, 1510, 1511, 1512, 1513, 1514, 1520, 1539, 1540, 1548, 1551, 1552, 1553, 1554, 1555, 1562, 1563, 1580, 1581, 1588, 1592, 1593, 1594, 1595, 1596, 1597, 1626, 1627, 1637, 1666, 1690, 1698, 1737, 1738, 1755, 1791, 1795, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1832, 1839, 1847, 1859, 1905, 1907, 1959, 1976, 1980, 1998, 2007, 2014, 2051, 2060, 2066, 2068, 2077, 2078, 2080, 2082, 2084, 2088, 2104, 2105, 2107, 2110, 2114, 2119, 2130, 2132, 2133, 2136, 2145, 2147, 2149], "process": [0, 1, 3, 11, 14, 19, 20, 24, 28, 29, 30, 32, 33, 35, 37, 39, 40, 41, 47, 48, 49, 50, 51, 52, 55, 64, 81, 82, 83, 86, 88, 1018, 1057, 1063, 1089, 1171, 1201, 1215, 1216, 1289, 1300, 1362, 1400, 1410, 1460, 1461, 1481, 1483, 1490, 1491, 1507, 1514, 1539, 1540, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1588, 1592, 1594, 1596, 1597, 1626, 1627, 1637, 1666, 1690, 1698, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1836, 1842, 1871, 1907, 1921, 1998, 2042, 2043, 2044, 2051, 2060, 2064, 2065, 2066, 2075, 2077, 2078, 2080, 2081, 2084, 2088, 2089, 2091, 2093, 2095, 2097, 2099, 2102, 2103, 2104, 2107, 2109, 2111, 2114, 2116, 2124, 2127, 2129, 2132, 2133, 2136, 2143, 2145, 2148, 2149], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 14, 15, 17, 28, 29, 30, 32, 33, 35, 36, 37, 47, 48, 50, 51, 52, 55, 56, 60, 64, 66, 74, 75, 83, 90, 92, 123, 154, 356, 449, 450, 451, 452, 453, 490, 591, 592, 830, 872, 873, 904, 911, 925, 983, 985, 1016, 1018, 1019, 1023, 1053, 1064, 1065, 1086, 1120, 1122, 1139, 1159, 1160, 1161, 1171, 1177, 1207, 1214, 1289, 1293, 1301, 1302, 1325, 1326, 1353, 1354, 1362, 1402, 1408, 1415, 1416, 1484, 1545, 1548, 1565, 1582, 1693, 1706, 1712, 1738, 1801, 1839, 1866, 1870, 1872, 1903, 1906, 1940, 1941, 1942, 1943, 1944, 1945, 1965, 1970, 1973, 1998, 2000, 2012, 2013, 2030, 2032, 2042, 2043, 2044, 2047, 2048, 2051, 2061, 2064, 2065, 2066, 2067, 2070, 2073, 2075, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2087, 2089, 2091, 2094, 2095, 2099, 2102, 2104, 2107, 2108, 2109, 2110, 2120, 2123, 2127, 2131, 2132, 2133, 2134, 2137, 2138, 2141, 2142, 2145, 2146, 2147], "hpu": [0, 2116], "option": [0, 1, 2, 3, 5, 14, 19, 23, 28, 30, 32, 34, 35, 37, 38, 41, 45, 46, 47, 50, 51, 52, 55, 64, 66, 73, 83, 85, 90, 91, 92, 154, 159, 174, 176, 179, 182, 183, 184, 199, 210, 213, 244, 271, 301, 329, 335, 397, 449, 450, 451, 452, 453, 491, 503, 504, 517, 524, 529, 541, 564, 584, 585, 587, 588, 589, 591, 592, 627, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 740, 763, 784, 785, 790, 798, 800, 806, 807, 826, 865, 870, 873, 876, 887, 889, 890, 891, 892, 893, 894, 895, 896, 903, 904, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 934, 935, 936, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 967, 970, 972, 973, 974, 975, 976, 978, 980, 981, 982, 983, 989, 992, 999, 1000, 1002, 1003, 1004, 1005, 1009, 1014, 1015, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1029, 1030, 1032, 1033, 1034, 1035, 1038, 1039, 1046, 1047, 1050, 1053, 1061, 1062, 1063, 1064, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1124, 1129, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1171, 1173, 1174, 1175, 1176, 1177, 1180, 1181, 1182, 1189, 1201, 1203, 1230, 1231, 1232, 1233, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1264, 1266, 1278, 1280, 1283, 1284, 1286, 1287, 1289, 1290, 1293, 1296, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1402, 1403, 1405, 1406, 1411, 1413, 1415, 1416, 1419, 1420, 1423, 1427, 1429, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1448, 1450, 1451, 1452, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1501, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1539, 1540, 1544, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1562, 1563, 1567, 1568, 1569, 1576, 1580, 1581, 1588, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1619, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1645, 1646, 1649, 1650, 1651, 1654, 1656, 1665, 1666, 1673, 1679, 1680, 1681, 1690, 1691, 1693, 1698, 1706, 1712, 1713, 1725, 1737, 1738, 1739, 1740, 1748, 1749, 1751, 1753, 1754, 1755, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1788, 1789, 1791, 1793, 1794, 1795, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1816, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1831, 1845, 1846, 1847, 1850, 1854, 1855, 1857, 1858, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1877, 1878, 1879, 1886, 1888, 1893, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1958, 1959, 1970, 1971, 1972, 1973, 1974, 1977, 1979, 1982, 1983, 1984, 1985, 1986, 1988, 1991, 1992, 1995, 2001, 2002, 2003, 2004, 2009, 2010, 2012, 2013, 2016, 2021, 2022, 2024, 2035, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2049, 2051, 2053, 2057, 2058, 2060, 2062, 2067, 2071, 2073, 2078, 2081, 2082, 2083, 2084, 2085, 2088, 2089, 2093, 2094, 2097, 2099, 2102, 2103, 2104, 2109, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2125, 2126, 2127, 2136, 2142, 2144, 2145, 2147], "whether": [0, 1, 2, 5, 7, 14, 19, 20, 23, 24, 28, 29, 30, 33, 34, 35, 37, 46, 47, 55, 62, 64, 89, 323, 325, 475, 521, 621, 685, 698, 700, 701, 704, 807, 833, 885, 886, 891, 900, 911, 912, 915, 916, 917, 919, 921, 926, 927, 928, 930, 931, 937, 952, 961, 974, 975, 976, 982, 984, 986, 989, 990, 991, 1060, 1076, 1171, 1176, 1188, 1196, 1199, 1247, 1248, 1286, 1289, 1297, 1298, 1306, 1311, 1319, 1320, 1326, 1328, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1344, 1346, 1347, 1350, 1351, 1352, 1353, 1361, 1377, 1379, 1387, 1389, 1390, 1392, 1395, 1426, 1434, 1439, 1440, 1441, 1442, 1467, 1507, 1513, 1548, 1557, 1562, 1598, 1616, 1617, 1618, 1638, 1666, 1698, 1731, 1738, 1739, 1753, 1756, 1759, 1772, 1786, 1789, 1794, 1800, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1832, 1845, 1855, 1858, 1902, 1952, 1953, 1954, 1957, 1958, 1977, 1982, 1991, 1992, 1995, 1996, 2002, 2003, 2007, 2029, 2042, 2047, 2051, 2053, 2054, 2058, 2067, 2071, 2074, 2078, 2081, 2084, 2087, 2097, 2099, 2104, 2109, 2114, 2116, 2118, 2119, 2125, 2130, 2133, 2134, 2136, 2137, 2143, 2145, 2149], "torch_dtyp": 0, "It": [0, 1, 2, 3, 4, 5, 7, 8, 12, 17, 18, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 40, 44, 45, 46, 47, 48, 50, 52, 53, 55, 57, 59, 60, 61, 63, 64, 66, 86, 92, 154, 200, 419, 477, 478, 517, 519, 521, 548, 561, 900, 901, 902, 903, 904, 911, 912, 916, 917, 927, 928, 937, 946, 983, 989, 991, 993, 997, 998, 999, 1034, 1040, 1046, 1047, 1065, 1066, 1086, 1087, 1095, 1142, 1172, 1177, 1180, 1188, 1197, 1203, 1205, 1212, 1216, 1230, 1251, 1286, 1289, 1290, 1295, 1296, 1300, 1322, 1326, 1330, 1333, 1335, 1337, 1338, 1343, 1347, 1348, 1350, 1351, 1353, 1355, 1358, 1359, 1361, 1362, 1370, 1416, 1421, 1452, 1461, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1484, 1494, 1542, 1543, 1544, 1545, 1546, 1548, 1555, 1577, 1580, 1600, 1602, 1656, 1666, 1706, 1712, 1730, 1731, 1732, 1735, 1736, 1738, 1754, 1756, 1759, 1780, 1783, 1792, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1845, 1864, 1877, 1893, 1908, 1915, 1937, 1990, 2007, 2017, 2021, 2022, 2030, 2031, 2032, 2033, 2039, 2042, 2046, 2047, 2051, 2059, 2060, 2064, 2066, 2071, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2099, 2101, 2102, 2104, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2118, 2123, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2144, 2145, 2147, 2149], "given": [0, 1, 2, 3, 7, 9, 14, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 45, 47, 50, 52, 55, 61, 63, 64, 90, 92, 154, 223, 317, 319, 321, 325, 330, 381, 402, 406, 476, 477, 478, 479, 480, 482, 517, 519, 521, 588, 589, 608, 611, 685, 698, 700, 701, 703, 704, 740, 765, 784, 790, 798, 799, 800, 801, 803, 806, 807, 808, 810, 829, 833, 846, 850, 865, 869, 876, 887, 900, 902, 904, 909, 911, 912, 914, 916, 917, 919, 921, 922, 923, 924, 931, 937, 939, 949, 950, 953, 954, 957, 965, 969, 970, 975, 976, 977, 982, 983, 985, 999, 1001, 1004, 1005, 1007, 1009, 1013, 1015, 1018, 1019, 1023, 1024, 1025, 1029, 1038, 1039, 1042, 1046, 1047, 1063, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1079, 1082, 1083, 1084, 1085, 1094, 1095, 1096, 1097, 1104, 1106, 1111, 1119, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1159, 1176, 1186, 1187, 1191, 1199, 1203, 1205, 1206, 1207, 1208, 1214, 1238, 1256, 1286, 1289, 1297, 1305, 1306, 1311, 1315, 1325, 1327, 1328, 1337, 1339, 1345, 1353, 1362, 1369, 1371, 1372, 1373, 1374, 1377, 1387, 1389, 1391, 1392, 1395, 1415, 1416, 1417, 1419, 1420, 1427, 1431, 1442, 1452, 1460, 1461, 1467, 1475, 1476, 1477, 1479, 1480, 1481, 1483, 1484, 1490, 1491, 1495, 1496, 1499, 1507, 1518, 1540, 1544, 1545, 1546, 1548, 1550, 1552, 1553, 1555, 1557, 1559, 1564, 1577, 1583, 1597, 1598, 1601, 1602, 1603, 1619, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1645, 1646, 1649, 1650, 1654, 1665, 1690, 1706, 1721, 1722, 1725, 1726, 1727, 1731, 1732, 1754, 1755, 1780, 1787, 1788, 1791, 1794, 1795, 1801, 1835, 1838, 1840, 1842, 1845, 1850, 1855, 1858, 1859, 1860, 1873, 1879, 1884, 1895, 1896, 1901, 1926, 1930, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1951, 1954, 1957, 1959, 1969, 1970, 1975, 1977, 1979, 1989, 1991, 1993, 1995, 1999, 2012, 2013, 2014, 2016, 2019, 2021, 2022, 2038, 2039, 2042, 2043, 2044, 2047, 2051, 2053, 2054, 2058, 2064, 2067, 2068, 2073, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2088, 2089, 2093, 2094, 2097, 2099, 2101, 2103, 2104, 2109, 2110, 2113, 2114, 2115, 2116, 2119, 2121, 2123, 2125, 2129, 2133, 2135, 2136, 2144, 2145, 2146], "get_autocast_dtyp": [0, 2045, 2100], "weight": [0, 23, 28, 30, 33, 34, 35, 52, 53, 61, 64, 66, 160, 305, 365, 366, 500, 717, 718, 719, 720, 721, 722, 723, 724, 725, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 750, 751, 754, 756, 757, 758, 759, 761, 765, 766, 768, 769, 770, 777, 778, 779, 786, 798, 799, 800, 816, 817, 842, 844, 852, 856, 860, 861, 862, 863, 864, 869, 870, 872, 873, 954, 1005, 1176, 1178, 1186, 1188, 1251, 1252, 1289, 1293, 1299, 1301, 1306, 1315, 1434, 1460, 1461, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1490, 1491, 1499, 1500, 1502, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1548, 1552, 1553, 1554, 1555, 1556, 1563, 1564, 1566, 1578, 1592, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1645, 1646, 1655, 1664, 1668, 1671, 1687, 1689, 1690, 1699, 1703, 1706, 1709, 1728, 1737, 1738, 1746, 1747, 1748, 1749, 1751, 1753, 1754, 1755, 1757, 1759, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1787, 1788, 1789, 1791, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1861, 1995, 2007, 2042, 2043, 2045, 2046, 2047, 2051, 2057, 2058, 2066, 2067, 2073, 2081, 2083, 2084, 2085, 2089, 2094, 2097, 2104, 2105, 2106, 2107, 2114, 2119, 2124, 2125, 2136, 2140], "cach": [0, 2, 3, 5, 20, 35, 64, 490, 983, 993, 1020, 1043, 1044, 1061, 1064, 1069, 1071, 1073, 1075, 1084, 1089, 1204, 1205, 1398, 1400, 1401, 1740, 1759, 1791, 2020, 2064, 2083, 2130, 2133, 2134, 2136, 2139, 2143, 2147], "insid": [0, 1, 7, 23, 47, 53, 55, 60, 63, 64, 916, 917, 985, 1026, 1064, 1178, 1182, 1187, 1192, 1203, 1301, 1738, 2044, 2046, 2047, 2051, 2057, 2059, 2074, 2078, 2081, 2082, 2088, 2099, 2114, 2124, 2133, 2135, 2145, 2149], "custom_fwd": [0, 2074], "fwd": [0, 2139, 2143], "cast_input": [0, 2074], "helper": [0, 3, 5, 28, 33, 38, 59, 64, 2042, 2043, 2046, 2078, 2080, 2099, 2102, 2109, 2144, 2146], "subclass": [0, 1, 14, 23, 30, 33, 35, 40, 60, 64, 143, 541, 900, 901, 902, 916, 917, 1208, 1287, 1290, 1300, 1548, 1739, 1740, 1761, 1766, 1787, 2044, 2047, 2048, 2051, 2054, 2070, 2074, 2089, 2099, 2109, 2113, 2114, 2133, 2134, 2136, 2146], "page": [0, 6, 7, 9, 23, 29, 48, 51, 985, 1362, 1592, 1594, 1596, 2043, 2051, 2078, 2080, 2081, 2089, 2100, 2109, 2142], "incom": [0, 28, 50, 786, 828, 829, 830, 831, 834, 1465, 1535, 1625, 1671, 2064, 2075], "non": [0, 1, 2, 3, 5, 14, 20, 22, 24, 28, 29, 30, 33, 35, 37, 40, 47, 50, 51, 53, 55, 63, 66, 77, 80, 86, 91, 154, 339, 490, 492, 508, 517, 521, 549, 703, 739, 744, 745, 746, 747, 748, 750, 751, 761, 765, 769, 770, 777, 778, 779, 847, 876, 888, 900, 902, 904, 911, 913, 915, 916, 917, 930, 931, 946, 954, 967, 970, 983, 998, 999, 1004, 1075, 1165, 1166, 1173, 1177, 1182, 1188, 1207, 1210, 1217, 1266, 1289, 1292, 1302, 1305, 1306, 1325, 1326, 1333, 1337, 1338, 1351, 1353, 1362, 1372, 1379, 1384, 1389, 1434, 1439, 1440, 1444, 1457, 1458, 1459, 1476, 1477, 1479, 1480, 1483, 1493, 1499, 1516, 1517, 1518, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1553, 1555, 1564, 1566, 1580, 1637, 1656, 1685, 1690, 1706, 1738, 1793, 1827, 1850, 1893, 1894, 1908, 1913, 1920, 1935, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1975, 1991, 1993, 2007, 2042, 2043, 2044, 2046, 2047, 2049, 2051, 2064, 2067, 2071, 2073, 2076, 2081, 2082, 2083, 2084, 2089, 2093, 2099, 2101, 2103, 2108, 2109, 2111, 2114, 2115, 2117, 2118, 2119, 2121, 2127, 2130, 2132, 2133, 2135, 2136, 2137, 2143, 2144, 2146, 2149], "intern": [0, 3, 8, 9, 14, 19, 23, 24, 28, 30, 35, 37, 44, 52, 55, 60, 64, 911, 1016, 1053, 1074, 1177, 1201, 1289, 1326, 1328, 1344, 1347, 1370, 1462, 1463, 1464, 1501, 1588, 1629, 1630, 1631, 1654, 1756, 1800, 1901, 1943, 1995, 2048, 2074, 2075, 2077, 2078, 2084, 2086, 2092, 2093, 2097, 2110, 2111, 2116, 2118, 2126, 2133, 2136, 2145], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 23, 28, 30, 32, 33, 34, 35, 40, 41, 47, 48, 52, 53, 55, 56, 63, 64, 82, 90, 91, 92, 154, 213, 225, 501, 502, 503, 627, 746, 748, 786, 799, 801, 825, 870, 872, 873, 876, 890, 891, 901, 904, 906, 907, 908, 916, 919, 920, 921, 930, 952, 961, 997, 1008, 1009, 1011, 1012, 1016, 1018, 1019, 1020, 1021, 1023, 1028, 1029, 1032, 1033, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1046, 1047, 1050, 1052, 1053, 1056, 1058, 1059, 1063, 1064, 1065, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1088, 1090, 1092, 1095, 1096, 1097, 1120, 1122, 1132, 1137, 1155, 1171, 1172, 1174, 1189, 1190, 1193, 1197, 1201, 1203, 1213, 1236, 1237, 1238, 1239, 1247, 1248, 1272, 1273, 1289, 1293, 1305, 1309, 1360, 1362, 1376, 1391, 1398, 1401, 1402, 1403, 1411, 1415, 1416, 1418, 1419, 1420, 1423, 1427, 1428, 1429, 1430, 1487, 1490, 1494, 1548, 1588, 1596, 1600, 1648, 1654, 1665, 1706, 1724, 1725, 1727, 1738, 1760, 1764, 1765, 1766, 1767, 1768, 1773, 1774, 1775, 1776, 1798, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1857, 1866, 1868, 1870, 1872, 1873, 1897, 1901, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1933, 1940, 1941, 1942, 1943, 1944, 1945, 1954, 1973, 1984, 1986, 1991, 1997, 1998, 2012, 2013, 2015, 2016, 2019, 2020, 2021, 2022, 2024, 2027, 2028, 2030, 2032, 2034, 2035, 2037, 2039, 2040, 2043, 2044, 2046, 2047, 2048, 2049, 2051, 2054, 2059, 2060, 2064, 2067, 2071, 2074, 2075, 2078, 2084, 2087, 2088, 2089, 2090, 2091, 2094, 2095, 2099, 2101, 2102, 2104, 2107, 2109, 2110, 2114, 2116, 2117, 2119, 2120, 2123, 2124, 2130, 2133, 2135, 2136, 2141, 2142, 2143, 2145, 2146, 2147], "outsid": [0, 5, 9, 23, 40, 52, 53, 55, 60, 689, 801, 896, 1176, 1178, 1182, 1187, 1290, 1654, 1738, 1829, 1830, 1836, 1837, 1843, 2046, 2047, 2073, 2075, 2078, 2082, 2083, 2121, 2130, 2136, 2141], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 23, 24, 28, 29, 30, 32, 34, 35, 36, 37, 40, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 90, 92, 154, 200, 213, 259, 264, 339, 449, 450, 451, 452, 453, 477, 478, 490, 492, 500, 502, 548, 584, 585, 607, 608, 622, 627, 685, 694, 698, 700, 701, 702, 704, 740, 765, 784, 786, 790, 792, 797, 804, 847, 848, 850, 858, 869, 875, 885, 886, 888, 900, 903, 904, 909, 911, 912, 916, 917, 921, 930, 931, 939, 950, 953, 971, 974, 975, 976, 983, 988, 997, 998, 999, 1000, 1015, 1018, 1019, 1023, 1028, 1057, 1060, 1061, 1107, 1109, 1123, 1155, 1167, 1176, 1177, 1180, 1181, 1184, 1188, 1226, 1243, 1252, 1253, 1264, 1286, 1289, 1293, 1297, 1300, 1301, 1302, 1305, 1310, 1311, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1343, 1344, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1357, 1361, 1370, 1377, 1379, 1384, 1387, 1389, 1390, 1391, 1392, 1394, 1395, 1402, 1415, 1416, 1426, 1439, 1440, 1441, 1442, 1460, 1461, 1462, 1463, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1484, 1485, 1491, 1494, 1495, 1496, 1499, 1502, 1507, 1510, 1511, 1512, 1518, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1552, 1553, 1554, 1555, 1556, 1563, 1564, 1580, 1582, 1588, 1596, 1600, 1601, 1619, 1629, 1630, 1631, 1637, 1646, 1649, 1650, 1654, 1665, 1690, 1692, 1693, 1695, 1699, 1706, 1712, 1725, 1727, 1728, 1731, 1732, 1737, 1738, 1753, 1756, 1758, 1761, 1765, 1767, 1770, 1780, 1781, 1788, 1789, 1793, 1795, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1823, 1824, 1825, 1826, 1827, 1830, 1831, 1832, 1835, 1839, 1841, 1845, 1855, 1857, 1858, 1859, 1860, 1877, 1879, 1889, 1901, 1922, 1936, 1937, 1938, 1943, 1949, 1951, 1952, 1953, 1954, 1957, 1958, 1970, 1976, 1982, 1993, 2002, 2003, 2007, 2012, 2013, 2029, 2044, 2046, 2047, 2051, 2053, 2054, 2060, 2064, 2065, 2066, 2067, 2071, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2087, 2088, 2089, 2091, 2092, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2108, 2109, 2110, 2111, 2114, 2116, 2117, 2119, 2120, 2121, 2123, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2139, 2141, 2145], "effect": [0, 3, 5, 7, 14, 23, 24, 28, 33, 35, 50, 52, 53, 55, 60, 64, 66, 69, 200, 213, 607, 627, 740, 784, 790, 1053, 1102, 1188, 1289, 1332, 1333, 1334, 1335, 1391, 1452, 1467, 1478, 1479, 1480, 1485, 1486, 1487, 1488, 1492, 1548, 1554, 1601, 1665, 1693, 1725, 1731, 1738, 1739, 1740, 1766, 1824, 1832, 1933, 1938, 1958, 1980, 1996, 2007, 2042, 2044, 2051, 2057, 2073, 2074, 2075, 2078, 2081, 2084, 2104, 2107, 2116, 2117, 2119, 2130, 2133], "custom_bwd": [0, 2074], "bwd": [0, 2143], "small": [0, 3, 7, 9, 23, 24, 28, 35, 47, 876, 930, 931, 983, 1031, 1075, 1352, 1353, 1365, 1367, 1452, 1482, 1557, 1562, 1577, 1597, 1601, 1636, 1691, 1698, 1738, 1805, 1829, 1836, 1845, 1958, 1959, 2044, 2046, 2047, 2055, 2078, 2081, 2083, 2089, 2092, 2094, 2099, 2102, 2104, 2105, 2114, 2115, 2121, 2130, 2132, 2133, 2135, 2136, 2137, 2139, 2143, 2145, 2147], "magnitud": [0, 1000, 1755, 1791, 1908, 2073, 2074, 2078], "represent": [0, 3, 14, 23, 28, 30, 33, 45, 52, 53, 64, 83, 485, 763, 809, 835, 1019, 1135, 1136, 1138, 1162, 1233, 1289, 1329, 1332, 1334, 1337, 1438, 1548, 1554, 1845, 2043, 2044, 2047, 2055, 2067, 2071, 2081, 2092, 2097, 2099, 2102, 2103, 2104, 2114, 2121, 2132, 2136, 2145, 2150], "These": [0, 1, 2, 3, 8, 14, 15, 23, 28, 29, 35, 52, 56, 58, 61, 64, 65, 490, 800, 891, 1005, 1119, 1184, 1286, 1289, 1332, 1397, 1452, 1728, 1754, 2043, 2044, 2045, 2046, 2047, 2055, 2060, 2065, 2066, 2068, 2071, 2074, 2075, 2078, 2080, 2081, 2089, 2092, 2094, 2099, 2102, 2107, 2109, 2110, 2117, 2123, 2127, 2130, 2132, 2133, 2134, 2136, 2141, 2145, 2146, 2148], "flush": [0, 1, 19, 30, 52, 1075, 1300, 1889, 1902, 2092, 2119], "zero": [0, 1, 2, 24, 28, 29, 32, 33, 35, 50, 53, 55, 60, 64, 66, 73, 75, 76, 77, 154, 262, 264, 319, 490, 517, 519, 548, 549, 588, 589, 591, 592, 628, 684, 696, 703, 717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 735, 736, 743, 744, 745, 746, 747, 748, 749, 754, 755, 756, 757, 758, 759, 760, 761, 764, 765, 769, 773, 774, 777, 778, 779, 780, 782, 785, 786, 801, 807, 828, 829, 830, 831, 834, 839, 888, 897, 898, 899, 904, 911, 913, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 953, 954, 974, 975, 976, 981, 1000, 1004, 1064, 1075, 1080, 1081, 1110, 1114, 1132, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1167, 1173, 1176, 1184, 1203, 1249, 1250, 1253, 1274, 1286, 1289, 1301, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1370, 1371, 1372, 1373, 1374, 1379, 1380, 1434, 1438, 1442, 1456, 1457, 1458, 1459, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1499, 1500, 1502, 1515, 1516, 1517, 1518, 1519, 1520, 1524, 1525, 1526, 1527, 1528, 1529, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1554, 1557, 1560, 1561, 1562, 1563, 1564, 1566, 1586, 1600, 1601, 1604, 1605, 1606, 1621, 1622, 1623, 1632, 1633, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1654, 1675, 1676, 1677, 1691, 1692, 1693, 1706, 1737, 1764, 1765, 1766, 1767, 1782, 1789, 1793, 1797, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1845, 1857, 1859, 1860, 1861, 1870, 1877, 1886, 1896, 1913, 1922, 1926, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1958, 1973, 1974, 1976, 1982, 2041, 2044, 2045, 2047, 2049, 2051, 2060, 2064, 2065, 2066, 2067, 2071, 2073, 2075, 2078, 2081, 2089, 2092, 2095, 2099, 2100, 2102, 2103, 2104, 2107, 2109, 2115, 2117, 2119, 2120, 2121, 2123, 2133, 2135, 2138], "underflow": [0, 1513, 2074], "updat": [0, 9, 11, 23, 24, 30, 32, 37, 47, 52, 55, 58, 59, 64, 88, 492, 517, 519, 765, 807, 808, 833, 907, 908, 937, 950, 1176, 1185, 1289, 1326, 1462, 1463, 1464, 1484, 1490, 1491, 1499, 1510, 1511, 1512, 1548, 1549, 1558, 1588, 1645, 1646, 1746, 1747, 1754, 1759, 1789, 1803, 1805, 1810, 1821, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 2042, 2044, 2057, 2074, 2075, 2078, 2080, 2081, 2085, 2089, 2091, 2094, 2095, 2097, 2099, 2100, 2101, 2104, 2109, 2110, 2111, 2119, 2130, 2144], "lost": [0, 37, 48, 51, 1484, 1544, 1545, 1546, 2136], "To": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15, 19, 20, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 39, 45, 46, 48, 50, 52, 53, 55, 60, 64, 81, 84, 85, 88, 339, 503, 561, 739, 906, 925, 939, 949, 980, 983, 1035, 1065, 1086, 1107, 1109, 1119, 1147, 1149, 1153, 1164, 1203, 1289, 1290, 1292, 1293, 1300, 1301, 1335, 1357, 1362, 1390, 1452, 1461, 1487, 1513, 1544, 1545, 1546, 1548, 1602, 1603, 1627, 1706, 1738, 1755, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1791, 1839, 1847, 1858, 1897, 1901, 1904, 1943, 1959, 2030, 2032, 2042, 2044, 2046, 2047, 2051, 2064, 2065, 2066, 2068, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2089, 2090, 2091, 2094, 2099, 2101, 2102, 2103, 2104, 2109, 2110, 2111, 2114, 2117, 2118, 2119, 2120, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2143, 2144, 2145, 2147], "prevent": [0, 7, 8, 23, 24, 28, 29, 30, 37, 55, 64, 90, 490, 503, 740, 911, 914, 916, 985, 1018, 1100, 1101, 1120, 1121, 1122, 1286, 1389, 1402, 1415, 1439, 1442, 1485, 1554, 1580, 1673, 1712, 1713, 1728, 1738, 1804, 1855, 1934, 1937, 1957, 1984, 1986, 1995, 2012, 2051, 2064, 2074, 2075, 2078, 2080, 2083, 2084, 2089, 2093, 2102, 2103, 2111, 2114, 2115, 2130, 2135, 2136, 2149], "multipli": [0, 28, 317, 325, 427, 517, 690, 691, 692, 693, 694, 695, 696, 765, 784, 790, 791, 792, 951, 963, 1089, 1102, 1119, 1243, 1254, 1313, 1325, 1326, 1330, 1343, 1345, 1347, 1353, 1355, 1384, 1394, 1410, 1433, 1436, 1460, 1475, 1476, 1477, 1480, 1499, 1518, 1601, 1602, 1603, 1665, 1725, 1726, 1727, 1759, 1829, 1836, 1838, 1845, 1901, 1928, 1931, 1935, 1936, 1950, 1954, 1955, 1958, 1980, 2045, 2065, 2078, 2086, 2089, 2092, 2100, 2114, 2115, 2136], "factor": [0, 3, 24, 35, 64, 694, 695, 696, 807, 951, 974, 1332, 1333, 1334, 1337, 1339, 1379, 1380, 1381, 1485, 1508, 1536, 1560, 1561, 1663, 1696, 1697, 1706, 1805, 1824, 1825, 1826, 1828, 1829, 1831, 1833, 1835, 1836, 1837, 1838, 1841, 1842, 1843, 1857, 1914, 1936, 1958, 2071, 2073, 2074, 2104, 2114, 2136], "flow": [0, 33, 53, 66, 72, 75, 980, 997, 1302, 1305, 1619, 1654, 1738, 2043, 2044, 2073, 2075, 2078, 2081, 2094, 2096, 2099, 2111, 2130, 2131, 2132, 2133, 2136, 2143], "through": [0, 5, 7, 9, 11, 15, 19, 23, 28, 30, 33, 35, 40, 52, 53, 55, 60, 63, 64, 66, 69, 71, 73, 81, 500, 798, 850, 865, 872, 873, 911, 914, 916, 917, 930, 931, 985, 1025, 1064, 1146, 1180, 1188, 1201, 1287, 1290, 1292, 1305, 1306, 1308, 1325, 1326, 1347, 1353, 1370, 1555, 1593, 1594, 1595, 1596, 1656, 1728, 1738, 1746, 1747, 1759, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1857, 2007, 2042, 2043, 2046, 2047, 2051, 2053, 2060, 2064, 2065, 2066, 2075, 2078, 2081, 2083, 2086, 2088, 2089, 2095, 2096, 2097, 2099, 2102, 2104, 2107, 2109, 2110, 2111, 2114, 2118, 2123, 2125, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2144, 2145, 2150], "word": [0, 1, 8, 28, 47, 48, 53, 58, 63, 64, 967, 1202, 1452, 1475, 1476, 1477, 1490, 1491, 1592, 1645, 1646, 1665, 1725, 1738, 1753, 1893, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2046, 2075, 2083, 2084, 2102, 2110, 2133], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 17, 23, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 64, 66, 74, 75, 86, 92, 157, 158, 225, 226, 317, 319, 325, 339, 402, 406, 452, 462, 475, 490, 491, 492, 507, 517, 519, 521, 524, 548, 621, 685, 694, 698, 700, 701, 702, 704, 823, 825, 852, 891, 900, 904, 916, 917, 919, 921, 926, 935, 936, 937, 939, 952, 953, 961, 970, 971, 983, 986, 997, 1005, 1023, 1032, 1033, 1064, 1075, 1110, 1118, 1125, 1139, 1149, 1154, 1156, 1170, 1176, 1177, 1188, 1192, 1203, 1211, 1212, 1213, 1230, 1231, 1247, 1248, 1251, 1252, 1264, 1286, 1288, 1289, 1292, 1293, 1295, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1321, 1325, 1326, 1342, 1349, 1350, 1353, 1355, 1361, 1370, 1372, 1377, 1384, 1387, 1389, 1390, 1391, 1392, 1394, 1395, 1416, 1434, 1439, 1440, 1442, 1444, 1452, 1456, 1460, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1484, 1490, 1491, 1495, 1496, 1501, 1506, 1510, 1511, 1512, 1540, 1548, 1551, 1552, 1553, 1554, 1555, 1596, 1598, 1636, 1645, 1646, 1649, 1650, 1654, 1671, 1690, 1692, 1695, 1730, 1731, 1732, 1735, 1736, 1738, 1739, 1740, 1744, 1745, 1746, 1747, 1748, 1750, 1753, 1756, 1759, 1783, 1787, 1792, 1794, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1841, 1855, 1881, 1882, 1896, 1901, 1908, 1931, 1935, 1939, 1940, 1941, 1942, 1944, 1945, 1952, 1953, 1954, 1957, 1958, 1970, 1974, 1980, 1982, 1995, 1998, 2000, 2002, 2003, 2005, 2007, 2009, 2013, 2042, 2044, 2045, 2046, 2047, 2049, 2051, 2053, 2054, 2055, 2057, 2060, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2104, 2105, 2108, 2109, 2110, 2111, 2114, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2142, 2143, 2144, 2145, 2146, 2147], "larger": [0, 9, 28, 35, 64, 258, 503, 931, 954, 1075, 1177, 1344, 1347, 1452, 1484, 1490, 1491, 1540, 1598, 1601, 1645, 1646, 1805, 2075, 2078, 2083, 2086, 2088, 2092, 2094, 2114, 2119, 2139, 2142, 2143, 2144, 2149], "thei": [0, 1, 3, 5, 7, 9, 11, 12, 17, 18, 23, 28, 30, 34, 35, 36, 47, 52, 53, 55, 58, 59, 63, 64, 86, 325, 339, 340, 490, 691, 694, 695, 702, 808, 823, 824, 825, 833, 852, 865, 870, 901, 911, 914, 916, 926, 927, 931, 951, 983, 1064, 1079, 1123, 1170, 1176, 1186, 1197, 1209, 1214, 1216, 1278, 1279, 1286, 1289, 1297, 1302, 1311, 1325, 1326, 1332, 1353, 1361, 1383, 1387, 1390, 1392, 1395, 1434, 1457, 1458, 1459, 1478, 1479, 1480, 1494, 1533, 1541, 1542, 1543, 1548, 1554, 1565, 1577, 1600, 1654, 1656, 1728, 1738, 1739, 1740, 1744, 1753, 1757, 1780, 1783, 1792, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1835, 1838, 1897, 1954, 1958, 1995, 1996, 2001, 2042, 2044, 2046, 2047, 2049, 2051, 2053, 2054, 2057, 2060, 2064, 2065, 2066, 2067, 2068, 2073, 2074, 2075, 2078, 2080, 2081, 2082, 2084, 2087, 2089, 2091, 2092, 2094, 2095, 2097, 2099, 2101, 2102, 2104, 2109, 2114, 2117, 2119, 2120, 2121, 2123, 2124, 2130, 2132, 2133, 2135, 2136, 2137, 2138, 2141, 2145, 2146], "don": [0, 1, 4, 7, 9, 11, 28, 30, 46, 55, 56, 58, 60, 64, 66, 76, 77, 790, 801, 904, 906, 925, 985, 1093, 1176, 1202, 1203, 1209, 1211, 1213, 1217, 1305, 1383, 1510, 1511, 1512, 1601, 1725, 1728, 1738, 1795, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1900, 2042, 2044, 2048, 2064, 2065, 2066, 2071, 2075, 2078, 2081, 2083, 2089, 2091, 2095, 2099, 2101, 2102, 2104, 2109, 2110, 2114, 2130, 2132, 2134, 2135, 2136, 2137, 2143, 2146], "t": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 19, 23, 24, 28, 30, 35, 36, 37, 40, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 61, 63, 64, 66, 76, 77, 83, 86, 154, 317, 319, 325, 462, 490, 527, 541, 575, 692, 693, 702, 765, 786, 790, 801, 832, 835, 888, 889, 890, 891, 900, 902, 904, 906, 911, 912, 914, 916, 917, 920, 925, 937, 974, 975, 976, 981, 985, 997, 1005, 1016, 1019, 1043, 1061, 1062, 1093, 1117, 1135, 1140, 1141, 1142, 1143, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1170, 1171, 1172, 1173, 1176, 1177, 1178, 1188, 1202, 1203, 1205, 1209, 1211, 1213, 1216, 1217, 1228, 1230, 1243, 1253, 1286, 1287, 1289, 1290, 1292, 1296, 1297, 1301, 1303, 1305, 1308, 1310, 1319, 1320, 1326, 1328, 1329, 1332, 1339, 1347, 1348, 1353, 1361, 1362, 1370, 1383, 1396, 1397, 1413, 1431, 1441, 1461, 1465, 1467, 1475, 1476, 1477, 1484, 1490, 1491, 1499, 1508, 1510, 1511, 1512, 1513, 1518, 1535, 1548, 1564, 1580, 1582, 1592, 1600, 1601, 1625, 1629, 1630, 1631, 1638, 1645, 1646, 1666, 1671, 1691, 1712, 1725, 1728, 1731, 1732, 1738, 1739, 1740, 1753, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1781, 1783, 1784, 1795, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1830, 1847, 1853, 1857, 1874, 1897, 1899, 1900, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1931, 1935, 1954, 1958, 1964, 1970, 1973, 1979, 1982, 2007, 2008, 2020, 2042, 2044, 2045, 2046, 2048, 2051, 2059, 2060, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2076, 2077, 2078, 2081, 2082, 2084, 2086, 2088, 2089, 2091, 2094, 2095, 2099, 2100, 2101, 2102, 2104, 2109, 2110, 2111, 2114, 2115, 2117, 2118, 2119, 2120, 2121, 2123, 2130, 2132, 2133, 2134, 2135, 2137, 2140, 2143, 2145, 2146], "grad": [0, 1, 5, 28, 35, 56, 59, 60, 64, 154, 339, 462, 491, 492, 499, 500, 507, 508, 585, 685, 891, 900, 904, 906, 907, 908, 911, 915, 916, 917, 919, 921, 926, 927, 930, 931, 935, 936, 1064, 1123, 1176, 1177, 1179, 1183, 1187, 1188, 1272, 1289, 1362, 1548, 1738, 1792, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1935, 1995, 2007, 2043, 2044, 2045, 2051, 2065, 2066, 2067, 2074, 2080, 2081, 2082, 2086, 2089, 2091, 2100, 2109, 2110, 2114, 2120, 2141, 2143], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 14, 17, 19, 27, 28, 32, 35, 37, 40, 44, 46, 47, 50, 52, 53, 55, 58, 59, 60, 63, 64, 66, 258, 262, 339, 439, 462, 587, 621, 685, 700, 701, 753, 762, 765, 796, 800, 872, 891, 927, 928, 937, 950, 963, 985, 1055, 1059, 1110, 1119, 1123, 1173, 1176, 1188, 1199, 1203, 1264, 1288, 1290, 1293, 1300, 1305, 1315, 1319, 1320, 1330, 1332, 1333, 1337, 1338, 1345, 1350, 1351, 1353, 1359, 1362, 1379, 1383, 1384, 1390, 1394, 1398, 1436, 1462, 1463, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1487, 1490, 1491, 1494, 1499, 1500, 1510, 1511, 1512, 1518, 1519, 1521, 1522, 1523, 1530, 1531, 1532, 1542, 1543, 1549, 1555, 1558, 1564, 1566, 1588, 1600, 1637, 1690, 1706, 1738, 1740, 1746, 1747, 1756, 1759, 1763, 1789, 1792, 1794, 1799, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1842, 1846, 1851, 1893, 1896, 1897, 1901, 1926, 1931, 1958, 1979, 1982, 1995, 1996, 2007, 2026, 2041, 2042, 2043, 2044, 2046, 2047, 2049, 2051, 2057, 2062, 2064, 2065, 2066, 2067, 2071, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2089, 2091, 2092, 2093, 2096, 2097, 2099, 2102, 2104, 2109, 2111, 2113, 2114, 2116, 2117, 2120, 2121, 2130, 2132, 2133, 2145, 2147], "interfer": [0, 2060, 2078, 2099, 2136], "learn": [0, 7, 8, 15, 33, 35, 46, 52, 55, 64, 88, 1465, 1481, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1507, 1520, 1533, 1535, 1556, 1578, 1592, 1594, 1596, 1597, 1598, 1709, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2043, 2051, 2068, 2073, 2078, 2087, 2089, 2090, 2096, 2102, 2104, 2109, 2111, 2126, 2129, 2131, 2132, 2133, 2134], "rate": [0, 2, 8, 24, 35, 55, 1486, 1487, 1488, 1492, 1595, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1850, 2043, 2088, 2119, 2136, 2142], "fp16": [0, 2, 734, 1738, 1746, 1747, 2085, 2104, 2105], "everi": [0, 1, 2, 5, 8, 9, 19, 23, 24, 28, 30, 32, 35, 37, 53, 55, 60, 64, 485, 491, 614, 685, 786, 828, 911, 912, 916, 935, 936, 939, 983, 1102, 1119, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1177, 1243, 1252, 1289, 1321, 1335, 1345, 1348, 1379, 1456, 1485, 1486, 1487, 1488, 1492, 1541, 1548, 1582, 1584, 1588, 1640, 1641, 1642, 1647, 1664, 1679, 1680, 1681, 1695, 1713, 1730, 1731, 1732, 1735, 1736, 1738, 1754, 1788, 1791, 1792, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1897, 1958, 1992, 2047, 2053, 2060, 2071, 2074, 2075, 2078, 2080, 2081, 2082, 2084, 2086, 2090, 2099, 2101, 2102, 2103, 2104, 2105, 2109, 2110, 2111, 2114, 2116, 2117, 2119, 2121, 2130, 2132, 2133, 2135, 2142, 2143, 2144, 2145], "most": [0, 1, 3, 4, 7, 8, 15, 23, 28, 30, 32, 35, 36, 37, 39, 46, 47, 50, 51, 52, 55, 60, 61, 63, 64, 66, 490, 503, 799, 911, 912, 913, 914, 916, 917, 922, 926, 930, 943, 983, 1088, 1102, 1119, 1177, 1274, 1287, 1290, 1395, 1452, 1596, 1654, 1706, 1738, 1746, 1747, 1759, 1821, 1901, 1933, 1980, 2042, 2044, 2046, 2047, 2049, 2054, 2055, 2064, 2066, 2067, 2075, 2078, 2081, 2084, 2091, 2092, 2093, 2097, 2101, 2103, 2104, 2110, 2111, 2114, 2117, 2119, 2121, 2126, 2129, 2132, 2134, 2135, 2136, 2137, 2138, 2139, 2144, 2145], "bf16": [0, 2, 2085], "pretrain": [0, 30, 873, 1490, 1491, 2042, 2075, 2099], "cannot": [0, 3, 8, 9, 12, 23, 24, 28, 30, 33, 35, 36, 40, 47, 52, 55, 56, 60, 61, 63, 64, 226, 258, 528, 549, 891, 985, 997, 1035, 1140, 1142, 1150, 1151, 1152, 1158, 1171, 1176, 1212, 1286, 1294, 1434, 1467, 1490, 1601, 1638, 1706, 1738, 1800, 1959, 2042, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2055, 2060, 2066, 2067, 2075, 2080, 2081, 2094, 2095, 2097, 2099, 2104, 2109, 2111, 2114, 2116, 2117, 2119, 2130, 2133, 2134, 2136, 2137, 2146], "numer": [0, 11, 23, 25, 35, 53, 56, 61, 692, 799, 930, 931, 967, 1293, 1305, 1306, 1321, 1325, 1326, 1330, 1335, 1343, 1344, 1347, 1350, 1353, 1355, 1377, 1379, 1461, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1563, 1582, 1585, 1588, 1597, 1645, 1666, 1673, 1706, 1712, 1714, 1737, 1754, 1788, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1861, 1893, 1913, 1958, 2043, 2047, 2048, 2052, 2057, 2078, 2081, 2082, 2099, 2104, 2115, 2119, 2120, 2136, 2145, 2150], "max": [0, 19, 23, 28, 33, 37, 40, 46, 47, 50, 52, 55, 64, 120, 189, 190, 191, 192, 304, 700, 701, 702, 761, 763, 775, 776, 785, 787, 788, 810, 828, 829, 830, 831, 834, 885, 939, 954, 971, 978, 979, 983, 1005, 1098, 1133, 1134, 1213, 1250, 1301, 1321, 1335, 1342, 1344, 1346, 1347, 1359, 1408, 1453, 1454, 1455, 1466, 1467, 1481, 1482, 1491, 1495, 1496, 1501, 1506, 1507, 1515, 1516, 1517, 1534, 1536, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1551, 1552, 1553, 1556, 1568, 1569, 1576, 1597, 1598, 1600, 1616, 1617, 1618, 1628, 1636, 1646, 1649, 1650, 1665, 1669, 1679, 1680, 1681, 1691, 1695, 1699, 1701, 1707, 1725, 1744, 1783, 1805, 1807, 1808, 1809, 1825, 1830, 1831, 1841, 1862, 1863, 1935, 1952, 1953, 1965, 1995, 2002, 2003, 2044, 2045, 2054, 2060, 2067, 2076, 2078, 2083, 2085, 2100, 2104, 2107, 2127, 2132, 2135, 2139, 2140, 2150], "65504": 0, "overflow": [0, 1100, 1101, 1193, 1389, 1439, 1442, 1673, 1712, 1713, 1855, 1886, 1934, 1937, 1957, 1984, 1986, 2078, 2092, 2115], "case": [0, 1, 3, 4, 8, 9, 11, 14, 15, 19, 23, 24, 28, 30, 32, 33, 34, 35, 37, 39, 40, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 66, 68, 73, 75, 80, 86, 154, 158, 200, 356, 490, 500, 503, 685, 765, 789, 797, 800, 829, 830, 832, 835, 869, 876, 904, 916, 917, 919, 921, 925, 946, 950, 952, 954, 959, 985, 1000, 1015, 1043, 1065, 1066, 1086, 1087, 1088, 1119, 1140, 1142, 1150, 1151, 1152, 1167, 1178, 1182, 1187, 1203, 1213, 1216, 1249, 1274, 1287, 1290, 1299, 1302, 1303, 1305, 1319, 1321, 1325, 1326, 1330, 1335, 1336, 1337, 1339, 1345, 1348, 1353, 1355, 1359, 1361, 1362, 1367, 1370, 1379, 1390, 1434, 1452, 1457, 1458, 1459, 1460, 1461, 1475, 1476, 1477, 1479, 1480, 1481, 1483, 1486, 1487, 1488, 1489, 1491, 1492, 1494, 1503, 1504, 1505, 1506, 1507, 1508, 1514, 1515, 1516, 1517, 1534, 1539, 1541, 1542, 1543, 1554, 1555, 1556, 1567, 1580, 1586, 1591, 1596, 1598, 1600, 1619, 1637, 1646, 1654, 1658, 1659, 1690, 1692, 1699, 1738, 1741, 1742, 1746, 1747, 1753, 1756, 1759, 1760, 1793, 1794, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1839, 1841, 1877, 1880, 1893, 1895, 1908, 1911, 1943, 1958, 1959, 1990, 1991, 1995, 2010, 2020, 2030, 2031, 2032, 2033, 2042, 2047, 2052, 2055, 2064, 2065, 2066, 2073, 2074, 2075, 2076, 2077, 2078, 2081, 2082, 2083, 2084, 2086, 2089, 2091, 2092, 2094, 2099, 2101, 2102, 2104, 2105, 2107, 2108, 2109, 2110, 2111, 2114, 2115, 2116, 2118, 2119, 2120, 2121, 2126, 2132, 2133, 2135, 2136, 2137, 2141, 2143, 2144, 2145, 2146, 2150], "decreas": [0, 35, 1075, 1335, 1486, 1487, 1488, 1492, 1561, 1781, 1782, 1825, 1832, 1841, 2053, 2057, 2091, 2093, 2114, 2117], "attempt": [0, 1, 8, 14, 19, 28, 30, 45, 47, 48, 60, 87, 977, 983, 986, 1001, 1293, 1300, 1379, 1706, 1741, 1742, 1805, 1807, 1808, 1826, 1995, 1998, 2044, 2047, 2062, 2064, 2065, 2066, 2074, 2078, 2081, 2095, 2096, 2101, 2102, 2109, 2132, 2135, 2136, 2145], "bring": [0, 56, 64, 1140, 1619, 1654, 2081, 2139, 2142], "number": [0, 1, 2, 3, 4, 5, 7, 14, 19, 23, 24, 28, 30, 32, 33, 35, 37, 45, 46, 47, 51, 52, 56, 58, 61, 64, 66, 71, 87, 91, 92, 158, 177, 222, 236, 258, 317, 356, 381, 402, 406, 439, 450, 475, 477, 478, 485, 497, 501, 503, 517, 519, 521, 547, 549, 550, 562, 587, 588, 589, 591, 592, 593, 612, 621, 690, 691, 692, 693, 694, 695, 696, 703, 763, 765, 773, 774, 777, 778, 779, 786, 828, 876, 888, 901, 905, 916, 930, 946, 948, 951, 953, 954, 959, 963, 965, 969, 977, 978, 982, 1000, 1004, 1005, 1010, 1023, 1025, 1031, 1041, 1050, 1051, 1062, 1064, 1065, 1066, 1075, 1086, 1087, 1090, 1091, 1111, 1114, 1116, 1119, 1120, 1124, 1132, 1162, 1164, 1167, 1171, 1173, 1175, 1197, 1230, 1232, 1240, 1241, 1242, 1246, 1250, 1251, 1252, 1264, 1265, 1286, 1287, 1289, 1303, 1310, 1313, 1314, 1321, 1335, 1344, 1353, 1357, 1362, 1367, 1378, 1382, 1390, 1399, 1403, 1404, 1409, 1411, 1416, 1422, 1423, 1429, 1433, 1434, 1438, 1442, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1489, 1490, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1513, 1514, 1518, 1519, 1524, 1525, 1526, 1527, 1528, 1529, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1562, 1564, 1566, 1567, 1568, 1569, 1576, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1621, 1622, 1623, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1645, 1646, 1649, 1650, 1655, 1665, 1666, 1668, 1671, 1679, 1680, 1681, 1690, 1692, 1698, 1699, 1706, 1728, 1738, 1754, 1759, 1764, 1765, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1780, 1781, 1782, 1784, 1788, 1793, 1794, 1795, 1797, 1798, 1801, 1810, 1829, 1830, 1831, 1832, 1836, 1837, 1839, 1840, 1841, 1847, 1850, 1854, 1864, 1866, 1867, 1868, 1870, 1871, 1872, 1877, 1879, 1880, 1883, 1884, 1885, 1886, 1894, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1931, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1950, 1951, 1952, 1953, 1954, 1955, 1959, 1974, 1975, 1976, 1984, 1986, 1991, 1992, 1997, 1998, 2001, 2002, 2003, 2004, 2005, 2006, 2013, 2018, 2024, 2025, 2030, 2031, 2032, 2033, 2035, 2036, 2040, 2043, 2045, 2046, 2047, 2048, 2049, 2051, 2054, 2060, 2064, 2067, 2071, 2073, 2076, 2078, 2081, 2086, 2089, 2091, 2092, 2094, 2099, 2101, 2102, 2103, 2105, 2108, 2109, 2110, 2113, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2122, 2130, 2132, 2135, 2136, 2142, 2145, 2147, 2148, 2149, 2150], "expect": [0, 1, 3, 5, 7, 9, 12, 23, 24, 28, 30, 32, 33, 37, 45, 47, 50, 52, 53, 55, 60, 61, 64, 82, 419, 490, 685, 702, 765, 865, 919, 920, 921, 922, 923, 924, 1064, 1140, 1142, 1159, 1160, 1161, 1181, 1182, 1203, 1213, 1264, 1286, 1289, 1305, 1306, 1334, 1355, 1356, 1390, 1463, 1464, 1483, 1499, 1500, 1501, 1502, 1511, 1512, 1513, 1518, 1519, 1520, 1530, 1531, 1532, 1548, 1554, 1555, 1563, 1564, 1566, 1582, 1588, 1592, 1594, 1596, 1601, 1645, 1651, 1665, 1690, 1698, 1699, 1712, 1725, 1726, 1727, 1728, 1737, 1738, 1781, 1842, 1968, 2005, 2042, 2043, 2049, 2051, 2055, 2071, 2075, 2080, 2083, 2084, 2086, 2089, 2099, 2101, 2102, 2104, 2105, 2106, 2109, 2114, 2119, 2121, 2131, 2133, 2135, 2136, 2139, 2141, 2143], "alwai": [0, 5, 7, 14, 17, 19, 23, 24, 28, 35, 45, 50, 52, 53, 55, 59, 64, 90, 344, 419, 452, 462, 800, 891, 911, 913, 916, 919, 925, 952, 961, 971, 977, 983, 1008, 1010, 1064, 1075, 1106, 1114, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1150, 1151, 1152, 1153, 1155, 1158, 1162, 1197, 1216, 1247, 1248, 1289, 1300, 1305, 1320, 1325, 1326, 1327, 1328, 1330, 1331, 1343, 1346, 1347, 1348, 1349, 1353, 1355, 1415, 1440, 1460, 1462, 1463, 1464, 1484, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1548, 1585, 1588, 1706, 1728, 1738, 1780, 1841, 1881, 1882, 1907, 1954, 1958, 1965, 1991, 1995, 2047, 2048, 2055, 2059, 2064, 2067, 2071, 2075, 2076, 2077, 2078, 2080, 2081, 2084, 2086, 2088, 2089, 2099, 2102, 2108, 2109, 2111, 2114, 2117, 2120, 2121, 2130, 2132, 2135, 2143, 2152], "abov": [0, 1, 3, 12, 15, 28, 30, 33, 34, 35, 40, 47, 50, 52, 53, 55, 56, 61, 64, 621, 685, 798, 799, 891, 952, 961, 1075, 1102, 1106, 1107, 1108, 1109, 1110, 1119, 1233, 1247, 1248, 1289, 1290, 1310, 1321, 1325, 1326, 1344, 1346, 1347, 1350, 1353, 1356, 1359, 1362, 1457, 1458, 1459, 1460, 1461, 1494, 1548, 1577, 1585, 1600, 1706, 1728, 1795, 1832, 1857, 1868, 1869, 1901, 1905, 1918, 1938, 1980, 1983, 1984, 1985, 1986, 2042, 2044, 2046, 2047, 2051, 2054, 2071, 2075, 2076, 2077, 2078, 2081, 2082, 2086, 2089, 2091, 2093, 2094, 2097, 2099, 2102, 2104, 2109, 2110, 2111, 2114, 2115, 2121, 2126, 2131, 2132, 2133, 2134, 2136, 2137, 2138, 2139, 2145], "our": [0, 3, 7, 8, 11, 33, 43, 46, 47, 48, 51, 59, 60, 61, 64, 65, 911, 912, 916, 1139, 1177, 1196, 1203, 1460, 1746, 1747, 1807, 1808, 1901, 2051, 2071, 2075, 2081, 2084, 2086, 2091, 2096, 2099, 2101, 2104, 2110, 2114, 2126, 2130, 2132, 2133, 2135, 2136, 2138, 2139, 2144, 2145], "NOT": [0, 5, 23, 28, 37, 47, 48, 50, 52, 64, 957, 1016, 1053, 1289, 1372, 1487, 1738, 1740, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777, 1792, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 2075, 2097, 2111, 2114, 2116, 2133, 2143], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 20, 23, 24, 25, 28, 30, 31, 33, 35, 37, 39, 44, 47, 48, 50, 51, 52, 59, 60, 64, 65, 66, 77, 90, 92, 143, 226, 490, 500, 784, 790, 872, 873, 904, 907, 974, 985, 1018, 1019, 1021, 1023, 1107, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1159, 1160, 1161, 1197, 1202, 1203, 1289, 1293, 1299, 1300, 1319, 1320, 1332, 1333, 1334, 1362, 1402, 1415, 1416, 1460, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1508, 1548, 1558, 1596, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1654, 1656, 1665, 1706, 1725, 1738, 1753, 1770, 1787, 1835, 1898, 1930, 1940, 1941, 1942, 1944, 1945, 1977, 1995, 1998, 2000, 2012, 2013, 2042, 2044, 2046, 2047, 2051, 2055, 2060, 2064, 2065, 2067, 2071, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2083, 2085, 2086, 2089, 2091, 2093, 2094, 2095, 2099, 2101, 2102, 2103, 2104, 2105, 2109, 2110, 2111, 2114, 2116, 2117, 2119, 2124, 2126, 2127, 2132, 2134, 2135, 2136, 2138, 2139, 2141, 2144, 2145, 2146], "guarante": [0, 1, 5, 9, 23, 28, 30, 32, 35, 47, 50, 52, 53, 60, 63, 64, 66, 490, 887, 983, 1201, 1203, 1213, 1289, 1299, 1325, 1327, 1484, 1548, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1930, 1932, 1995, 2075, 2077, 2078, 2092, 2093, 2102, 2103, 2105, 2109, 2111, 2132], "encount": [0, 5, 19, 28, 52, 60, 63, 64, 685, 985, 1738, 1746, 1747, 2044, 2047, 2049, 2053, 2077, 2092, 2102, 2104, 2131, 2133, 2136, 2141, 2143, 2145, 2148], "nan": [0, 1, 27, 35, 431, 432, 503, 689, 691, 694, 695, 696, 699, 702, 703, 892, 896, 951, 967, 1120, 1121, 1122, 1165, 1166, 1167, 1250, 1278, 1279, 1281, 1282, 1329, 1336, 1349, 1352, 1365, 1370, 1388, 1389, 1393, 1438, 1439, 1440, 1441, 1442, 1654, 1744, 1851, 1888, 1893, 1947, 1982, 2045, 2054, 2074, 2075, 2082, 2092, 2115, 2121, 2149], "verifi": [0, 28, 52, 64, 89, 930, 1102, 1801, 1802, 1827, 1980, 2042, 2044, 2058, 2081, 2086, 2099, 2138], "compat": [0, 1, 14, 23, 28, 30, 34, 35, 37, 48, 52, 55, 59, 60, 64, 66, 501, 502, 607, 621, 685, 823, 824, 825, 901, 916, 917, 949, 964, 998, 999, 1201, 1289, 1294, 1307, 1320, 1331, 1344, 1347, 1548, 1554, 1592, 1593, 1594, 1595, 1596, 1665, 1746, 1747, 1791, 1800, 1880, 2042, 2043, 2046, 2047, 2053, 2064, 2065, 2074, 2081, 2085, 2094, 2097, 2102, 2103, 2104, 2107, 2109, 2114, 2116, 2120, 2123, 2127], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 14, 18, 19, 20, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 47, 48, 50, 52, 53, 55, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 92, 158, 160, 177, 188, 195, 212, 228, 229, 230, 231, 232, 237, 258, 262, 264, 267, 290, 293, 302, 304, 315, 317, 319, 321, 325, 356, 405, 406, 431, 432, 449, 452, 453, 458, 485, 487, 491, 492, 500, 511, 512, 517, 519, 521, 524, 542, 547, 548, 551, 560, 562, 564, 582, 584, 585, 587, 588, 589, 591, 592, 593, 599, 600, 601, 602, 609, 611, 612, 621, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 717, 718, 719, 720, 721, 722, 723, 724, 728, 729, 730, 731, 732, 735, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 756, 757, 758, 760, 761, 762, 763, 765, 773, 774, 775, 777, 778, 779, 780, 783, 785, 787, 788, 790, 800, 802, 807, 810, 825, 829, 830, 831, 834, 865, 867, 876, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 905, 911, 913, 916, 917, 919, 920, 921, 923, 930, 931, 933, 935, 936, 943, 946, 948, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 967, 970, 971, 972, 973, 974, 975, 977, 978, 981, 995, 996, 997, 1000, 1001, 1002, 1003, 1004, 1005, 1015, 1023, 1032, 1034, 1061, 1062, 1089, 1093, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1116, 1117, 1119, 1121, 1122, 1129, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1176, 1178, 1179, 1180, 1181, 1182, 1186, 1187, 1188, 1203, 1207, 1213, 1230, 1231, 1238, 1243, 1247, 1249, 1250, 1251, 1252, 1253, 1256, 1260, 1264, 1266, 1274, 1285, 1286, 1287, 1289, 1293, 1295, 1296, 1297, 1301, 1309, 1310, 1311, 1312, 1313, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1351, 1356, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1379, 1383, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1410, 1413, 1416, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1448, 1450, 1451, 1452, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1536, 1538, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1580, 1582, 1583, 1584, 1585, 1586, 1588, 1591, 1592, 1594, 1596, 1597, 1598, 1600, 1601, 1604, 1605, 1606, 1609, 1610, 1611, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1652, 1654, 1657, 1658, 1659, 1662, 1663, 1664, 1665, 1669, 1670, 1672, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1690, 1691, 1692, 1693, 1694, 1695, 1698, 1699, 1701, 1706, 1707, 1710, 1712, 1715, 1721, 1722, 1723, 1724, 1725, 1728, 1737, 1738, 1743, 1744, 1746, 1747, 1753, 1754, 1755, 1759, 1764, 1765, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1781, 1783, 1784, 1786, 1787, 1788, 1789, 1791, 1793, 1794, 1795, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1848, 1850, 1851, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1883, 1884, 1885, 1886, 1888, 1889, 1893, 1895, 1896, 1897, 1900, 1902, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1930, 1932, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1957, 1958, 1959, 1960, 1961, 1968, 1969, 1971, 1972, 1973, 1974, 1975, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1988, 1989, 1991, 1992, 1993, 1994, 1997, 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2010, 2013, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2051, 2054, 2062, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2106, 2109, 2110, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2124, 2126, 2127, 2130, 2131, 2132, 2134, 2136, 2138, 2139, 2140, 2143, 2144, 2146, 2149, 2150], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 12, 14, 18, 21, 23, 24, 28, 33, 35, 45, 52, 59, 60, 61, 63, 64, 66, 67, 71, 72, 74, 75, 76, 77, 158, 195, 212, 237, 264, 293, 302, 317, 319, 321, 325, 405, 406, 449, 475, 503, 517, 519, 521, 527, 541, 548, 562, 564, 588, 589, 590, 591, 592, 611, 690, 691, 695, 702, 739, 744, 745, 746, 747, 748, 750, 751, 765, 767, 778, 779, 872, 873, 876, 891, 897, 898, 899, 919, 922, 924, 951, 954, 961, 962, 963, 967, 969, 973, 975, 976, 977, 978, 981, 988, 1000, 1004, 1098, 1100, 1102, 1109, 1111, 1113, 1114, 1117, 1118, 1119, 1122, 1135, 1137, 1139, 1140, 1146, 1147, 1150, 1155, 1158, 1159, 1162, 1165, 1167, 1168, 1169, 1171, 1178, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1231, 1243, 1249, 1251, 1253, 1255, 1256, 1266, 1274, 1278, 1296, 1300, 1301, 1310, 1311, 1312, 1315, 1318, 1319, 1336, 1339, 1342, 1345, 1346, 1347, 1348, 1353, 1354, 1357, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1372, 1376, 1383, 1384, 1390, 1391, 1434, 1441, 1443, 1444, 1446, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1461, 1462, 1463, 1464, 1468, 1469, 1470, 1472, 1473, 1474, 1476, 1477, 1479, 1480, 1481, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1501, 1502, 1503, 1508, 1510, 1511, 1512, 1513, 1514, 1518, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1536, 1539, 1544, 1545, 1548, 1555, 1558, 1562, 1563, 1564, 1570, 1571, 1572, 1573, 1574, 1577, 1580, 1586, 1588, 1592, 1594, 1596, 1598, 1599, 1600, 1601, 1602, 1603, 1620, 1621, 1629, 1630, 1632, 1633, 1637, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1649, 1650, 1652, 1654, 1657, 1665, 1690, 1692, 1698, 1706, 1715, 1725, 1726, 1727, 1737, 1738, 1759, 1769, 1772, 1774, 1775, 1777, 1782, 1783, 1785, 1787, 1793, 1794, 1795, 1797, 1798, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1829, 1836, 1840, 1846, 1848, 1850, 1851, 1853, 1854, 1857, 1858, 1861, 1862, 1863, 1864, 1868, 1873, 1874, 1877, 1878, 1884, 1885, 1886, 1893, 1905, 1912, 1913, 1914, 1915, 1916, 1917, 1920, 1921, 1930, 1936, 1938, 1939, 1940, 1941, 1943, 1946, 1954, 1957, 1958, 1959, 1960, 1961, 1969, 1971, 1973, 1974, 1975, 1977, 1978, 1980, 1989, 1990, 1993, 1995, 2001, 2007, 2008, 2009, 2040, 2044, 2045, 2046, 2047, 2048, 2054, 2055, 2066, 2067, 2073, 2074, 2075, 2076, 2078, 2081, 2083, 2085, 2086, 2089, 2090, 2094, 2095, 2097, 2099, 2101, 2104, 2109, 2114, 2115, 2117, 2119, 2120, 2121, 2133, 2134, 2136, 2143, 2144, 2145], "growth_interv": 0, "2000": [0, 28, 32, 1137, 1139, 1146, 1155, 1168, 1367, 1601, 1832, 1861, 1910, 1911, 1973], "float64": [0, 11, 244, 450, 453, 584, 891, 994, 1162, 1171, 1172, 1236, 1271, 1289, 1319, 1325, 1326, 1328, 1330, 1346, 1548, 1706, 1806, 1807, 1808, 1826, 1851, 1859, 1898, 1899, 1902, 1932, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 2005, 2010, 2089, 2092, 2114, 2116, 2117, 2120, 2121, 2150], "out": [0, 1, 2, 3, 5, 7, 8, 9, 11, 15, 18, 19, 23, 25, 28, 30, 35, 44, 45, 48, 52, 56, 59, 64, 66, 70, 72, 92, 237, 316, 318, 320, 322, 403, 405, 452, 500, 516, 518, 520, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 761, 765, 769, 777, 778, 779, 784, 786, 790, 804, 845, 847, 849, 868, 869, 876, 877, 878, 879, 880, 881, 882, 883, 888, 892, 893, 894, 895, 896, 906, 909, 910, 911, 914, 916, 926, 930, 939, 950, 951, 953, 954, 955, 956, 957, 958, 959, 960, 963, 967, 970, 972, 973, 974, 975, 976, 978, 979, 981, 983, 994, 995, 996, 999, 1000, 1002, 1003, 1015, 1022, 1030, 1032, 1034, 1062, 1063, 1075, 1076, 1089, 1093, 1098, 1099, 1100, 1101, 1103, 1106, 1111, 1112, 1114, 1115, 1116, 1118, 1119, 1120, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1173, 1174, 1177, 1178, 1180, 1181, 1183, 1188, 1212, 1226, 1230, 1231, 1232, 1233, 1234, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1283, 1284, 1289, 1295, 1301, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1358, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1410, 1413, 1416, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1453, 1454, 1455, 1457, 1458, 1459, 1465, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1485, 1486, 1487, 1488, 1490, 1492, 1495, 1496, 1499, 1500, 1515, 1516, 1517, 1518, 1533, 1535, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1560, 1561, 1564, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1592, 1593, 1594, 1595, 1596, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1625, 1629, 1630, 1631, 1632, 1633, 1634, 1640, 1641, 1642, 1647, 1650, 1654, 1665, 1671, 1691, 1693, 1725, 1738, 1746, 1747, 1764, 1765, 1766, 1767, 1793, 1794, 1795, 1796, 1798, 1799, 1827, 1845, 1846, 1850, 1851, 1852, 1854, 1857, 1858, 1864, 1865, 1866, 1868, 1870, 1872, 1873, 1876, 1877, 1878, 1882, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1908, 1909, 1910, 1922, 1923, 1924, 1925, 1930, 1935, 1936, 1947, 1948, 1950, 1951, 1952, 1953, 1955, 1956, 1958, 1970, 1971, 1972, 1975, 1977, 1979, 1982, 1983, 1985, 1987, 1988, 1995, 2002, 2003, 2004, 2007, 2009, 2010, 2011, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2051, 2054, 2055, 2056, 2060, 2063, 2064, 2066, 2067, 2071, 2075, 2076, 2078, 2080, 2081, 2082, 2084, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2105, 2107, 2109, 2110, 2111, 2114, 2115, 2117, 2119, 2120, 2125, 2132, 2133, 2134, 2135, 2136, 2138, 2139, 2140, 2143, 2144, 2145, 2146, 2147, 2149], "place": [0, 3, 7, 11, 12, 19, 23, 24, 28, 30, 36, 37, 52, 55, 58, 59, 62, 64, 91, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 125, 127, 129, 131, 134, 135, 137, 145, 147, 150, 151, 153, 156, 162, 164, 166, 168, 170, 172, 181, 190, 198, 202, 205, 207, 217, 219, 225, 226, 235, 240, 242, 248, 251, 253, 255, 257, 258, 261, 264, 266, 273, 275, 277, 281, 283, 287, 289, 296, 298, 300, 308, 310, 312, 314, 316, 318, 320, 322, 360, 362, 364, 366, 368, 370, 372, 375, 377, 379, 380, 387, 389, 391, 393, 395, 399, 403, 405, 424, 427, 430, 432, 443, 445, 447, 455, 460, 470, 473, 489, 490, 491, 492, 494, 496, 500, 503, 512, 515, 516, 518, 520, 526, 531, 533, 536, 538, 540, 553, 555, 557, 566, 568, 575, 579, 581, 597, 600, 602, 604, 606, 607, 616, 626, 763, 799, 804, 822, 847, 849, 868, 869, 911, 912, 914, 916, 935, 936, 937, 939, 965, 997, 1030, 1031, 1033, 1034, 1055, 1119, 1170, 1176, 1177, 1185, 1289, 1334, 1352, 1434, 1456, 1466, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1504, 1505, 1506, 1534, 1548, 1566, 1567, 1568, 1569, 1576, 1591, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1658, 1661, 1670, 1702, 1705, 1720, 1724, 1728, 1738, 1744, 1745, 1746, 1747, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1789, 1827, 1884, 1886, 1890, 1891, 1892, 1938, 1975, 2043, 2044, 2046, 2047, 2054, 2066, 2071, 2074, 2078, 2081, 2088, 2096, 2097, 2101, 2102, 2109, 2110, 2116, 2118, 2120, 2130, 2132, 2133, 2135, 2136, 2142, 2144], "variant": [0, 5, 24, 28, 52, 869, 1320, 1331, 1344, 1347, 1441, 1444, 1608, 1609, 1610, 1611, 1807, 1808, 1809, 1827, 1932, 1982, 2043, 2088, 2107, 2120, 2140, 2141, 2144], "explicitli": [0, 5, 8, 14, 28, 40, 55, 88, 937, 1055, 1107, 1109, 1119, 1252, 1330, 1343, 1347, 1355, 1397, 1665, 1725, 1739, 1839, 1901, 1954, 2044, 2046, 2047, 2048, 2053, 2055, 2078, 2081, 2084, 2085, 2086, 2088, 2094, 2099, 2102, 2108, 2109, 2114, 2120, 2136], "suppli": [0, 5, 7, 14, 15, 28, 64, 1053, 1554, 1802, 2047, 2078, 2099, 2114, 2136, 2145], "won": [0, 8, 24, 30, 47, 52, 58, 462, 1203, 1289, 1301, 1548, 1691, 1731, 1732, 2042, 2075, 2081, 2109, 2123, 2133, 2135, 2136, 2143, 2145], "go": [0, 1, 7, 15, 23, 28, 30, 33, 44, 50, 52, 59, 64, 503, 504, 564, 911, 913, 916, 935, 939, 1209, 1362, 1457, 1458, 1459, 1541, 1542, 1543, 1746, 1747, 2046, 2047, 2054, 2064, 2065, 2066, 2075, 2077, 2078, 2081, 2082, 2088, 2089, 2091, 2095, 2099, 2102, 2117, 2119, 2131, 2132, 2133, 2134, 2135, 2136], "addmm": [0, 52, 53, 110, 1950, 2045, 2065, 2092, 2100, 2114, 2140, 2144], "b": [0, 1, 3, 11, 12, 23, 28, 30, 35, 45, 52, 64, 66, 69, 87, 89, 264, 339, 402, 621, 690, 691, 753, 762, 786, 833, 891, 911, 912, 914, 915, 916, 917, 933, 935, 936, 951, 962, 963, 965, 969, 971, 973, 976, 981, 997, 1000, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1061, 1062, 1111, 1114, 1118, 1119, 1164, 1165, 1166, 1167, 1173, 1177, 1195, 1196, 1214, 1231, 1255, 1266, 1286, 1292, 1300, 1301, 1309, 1310, 1312, 1321, 1322, 1330, 1334, 1335, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1350, 1351, 1352, 1355, 1356, 1359, 1362, 1371, 1373, 1374, 1380, 1388, 1393, 1395, 1433, 1461, 1465, 1490, 1491, 1498, 1535, 1625, 1627, 1646, 1653, 1671, 1753, 1781, 1782, 1783, 1784, 1785, 1786, 1794, 1824, 1826, 1858, 1864, 1877, 1880, 1896, 1907, 1926, 1935, 1940, 1941, 1942, 1944, 1945, 1949, 1954, 1955, 1957, 1964, 1965, 1966, 1975, 1982, 1983, 1985, 2004, 2009, 2044, 2045, 2046, 2047, 2051, 2065, 2066, 2067, 2071, 2073, 2074, 2076, 2078, 2081, 2083, 2086, 2087, 2092, 2094, 2097, 2103, 2104, 2110, 2111, 2114, 2115, 2118, 2119, 2125, 2131, 2133, 2134, 2136, 2138, 2140, 2144, 2145, 2147], "c": [0, 1, 3, 8, 9, 14, 19, 23, 25, 28, 35, 45, 53, 58, 64, 87, 89, 264, 339, 503, 524, 621, 690, 830, 888, 891, 911, 914, 916, 917, 962, 973, 985, 1001, 1055, 1061, 1096, 1111, 1114, 1119, 1165, 1166, 1167, 1177, 1178, 1182, 1187, 1231, 1243, 1289, 1300, 1312, 1319, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1335, 1336, 1339, 1341, 1345, 1346, 1348, 1350, 1352, 1353, 1433, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1483, 1486, 1487, 1488, 1492, 1494, 1495, 1496, 1502, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1520, 1530, 1531, 1532, 1536, 1541, 1542, 1543, 1544, 1545, 1546, 1551, 1552, 1553, 1555, 1560, 1561, 1570, 1571, 1572, 1573, 1574, 1575, 1583, 1588, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1619, 1627, 1637, 1638, 1650, 1654, 1690, 1696, 1697, 1706, 1753, 1782, 1784, 1785, 1786, 1793, 1794, 1845, 1861, 1877, 1914, 1935, 1949, 1954, 1975, 1992, 1997, 1998, 2043, 2044, 2045, 2046, 2047, 2055, 2065, 2066, 2067, 2077, 2078, 2080, 2081, 2082, 2085, 2086, 2088, 2095, 2102, 2110, 2111, 2114, 2115, 2118, 2119, 2126, 2132, 2133, 2134, 2135, 2136, 2138, 2140, 2144, 2145, 2146, 2147, 2148], "addmm_": [0, 2045, 2065, 2114], "d": [0, 1, 11, 23, 24, 28, 34, 35, 56, 64, 317, 325, 339, 475, 517, 519, 521, 548, 587, 621, 691, 695, 876, 891, 911, 914, 916, 917, 950, 951, 952, 954, 961, 962, 963, 967, 970, 973, 1106, 1108, 1118, 1119, 1132, 1136, 1137, 1138, 1139, 1144, 1145, 1148, 1149, 1154, 1155, 1156, 1159, 1160, 1161, 1188, 1196, 1230, 1247, 1248, 1255, 1264, 1286, 1290, 1294, 1332, 1333, 1383, 1394, 1436, 1451, 1459, 1460, 1464, 1477, 1481, 1482, 1486, 1487, 1488, 1490, 1492, 1494, 1499, 1501, 1512, 1518, 1520, 1532, 1543, 1557, 1563, 1564, 1588, 1597, 1598, 1600, 1619, 1654, 1665, 1671, 1699, 1724, 1725, 1737, 1754, 1788, 1793, 1794, 1805, 1825, 1846, 1864, 1870, 1873, 1885, 1893, 1898, 1949, 1954, 1968, 1969, 1975, 1978, 1983, 1984, 1985, 1986, 2001, 2007, 2009, 2042, 2045, 2054, 2065, 2066, 2067, 2073, 2075, 2078, 2081, 2082, 2084, 2085, 2086, 2087, 2094, 2099, 2109, 2110, 2114, 2115, 2119, 2120, 2135, 2136, 2138, 2143, 2145, 2147], "best": [0, 1, 7, 15, 18, 23, 28, 35, 48, 55, 58, 872, 873, 943, 970, 983, 1203, 1305, 1306, 1335, 1554, 1827, 1841, 2043, 2044, 2046, 2051, 2064, 2073, 2074, 2075, 2081, 2083, 2102, 2109, 2114, 2116, 2126, 2133, 2134, 2136, 2139], "stabil": [0, 1321, 1326, 1377, 1461, 1462, 1463, 1464, 1501, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1563, 1585, 1588, 1597, 1651, 1714, 1737, 1754, 1788, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1861, 2082, 2101, 2136, 2145], "argument": [0, 1, 3, 4, 5, 8, 9, 12, 14, 18, 19, 23, 28, 29, 30, 32, 33, 34, 35, 37, 45, 48, 51, 52, 53, 55, 59, 60, 63, 64, 66, 72, 74, 75, 86, 91, 154, 200, 213, 317, 325, 419, 449, 450, 451, 452, 453, 491, 492, 517, 521, 564, 584, 585, 587, 588, 589, 591, 592, 607, 627, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 739, 743, 744, 745, 746, 747, 748, 799, 800, 807, 828, 829, 830, 833, 834, 835, 852, 868, 869, 872, 874, 876, 891, 892, 893, 894, 895, 896, 900, 901, 902, 903, 904, 911, 912, 913, 914, 916, 917, 920, 922, 923, 924, 925, 927, 928, 935, 936, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 963, 967, 970, 972, 973, 974, 975, 976, 978, 980, 981, 987, 994, 997, 999, 1000, 1002, 1003, 1005, 1015, 1040, 1042, 1046, 1047, 1053, 1061, 1062, 1064, 1079, 1088, 1092, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1116, 1117, 1118, 1120, 1121, 1122, 1124, 1129, 1132, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1190, 1191, 1201, 1203, 1224, 1225, 1230, 1231, 1232, 1233, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1264, 1266, 1283, 1284, 1286, 1289, 1292, 1301, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1381, 1383, 1384, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1413, 1421, 1428, 1430, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1448, 1462, 1463, 1464, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1491, 1494, 1497, 1499, 1506, 1509, 1510, 1511, 1512, 1513, 1518, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1544, 1545, 1546, 1548, 1549, 1554, 1555, 1556, 1564, 1588, 1592, 1596, 1600, 1602, 1603, 1611, 1652, 1654, 1691, 1706, 1728, 1731, 1732, 1738, 1759, 1761, 1765, 1766, 1770, 1774, 1780, 1789, 1793, 1795, 1798, 1799, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1832, 1845, 1846, 1850, 1851, 1854, 1855, 1857, 1858, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1877, 1878, 1879, 1886, 1888, 1893, 1897, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1930, 1933, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1958, 1965, 1970, 1971, 1972, 1973, 1975, 1976, 1977, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1988, 1991, 1995, 2002, 2003, 2007, 2008, 2009, 2010, 2017, 2019, 2021, 2022, 2034, 2037, 2040, 2041, 2042, 2045, 2046, 2047, 2049, 2051, 2064, 2065, 2066, 2067, 2071, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2093, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2130, 2133, 2134, 2135, 2139, 2144, 2146, 2150], "respect": [0, 1, 5, 8, 17, 28, 29, 32, 33, 35, 37, 45, 47, 55, 61, 63, 64, 92, 200, 213, 491, 584, 607, 627, 694, 695, 696, 765, 801, 828, 852, 896, 902, 904, 916, 917, 925, 931, 935, 936, 978, 1005, 1035, 1107, 1109, 1110, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1187, 1243, 1289, 1321, 1325, 1326, 1335, 1345, 1348, 1350, 1353, 1362, 1394, 1416, 1438, 1460, 1461, 1467, 1478, 1479, 1480, 1484, 1499, 1501, 1518, 1548, 1549, 1564, 1594, 1596, 1597, 1598, 1599, 1601, 1645, 1654, 1761, 1765, 1767, 1789, 1791, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1841, 1931, 1935, 1958, 1975, 2066, 2071, 2074, 2075, 2078, 2081, 2086, 2089, 2090, 2107, 2114, 2115, 2116, 2121, 2135, 2139], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 14, 15, 18, 21, 22, 23, 24, 27, 28, 30, 32, 33, 34, 35, 37, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 62, 64, 66, 68, 74, 75, 84, 85, 86, 491, 492, 621, 685, 765, 784, 790, 798, 799, 800, 808, 822, 823, 824, 825, 828, 829, 830, 831, 833, 834, 865, 872, 873, 900, 901, 902, 909, 916, 917, 935, 936, 950, 967, 972, 976, 985, 988, 997, 1020, 1061, 1075, 1119, 1137, 1139, 1163, 1173, 1186, 1203, 1213, 1243, 1289, 1290, 1299, 1303, 1310, 1321, 1332, 1342, 1345, 1346, 1359, 1362, 1381, 1384, 1452, 1461, 1467, 1483, 1491, 1494, 1499, 1518, 1548, 1564, 1580, 1596, 1600, 1607, 1659, 1673, 1706, 1730, 1731, 1732, 1735, 1736, 1738, 1746, 1747, 1753, 1794, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1836, 1839, 1847, 1858, 1886, 1893, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1933, 1934, 1935, 1936, 1943, 1954, 1959, 1980, 1988, 1995, 1998, 2042, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2053, 2054, 2057, 2058, 2064, 2065, 2066, 2067, 2068, 2071, 2073, 2074, 2075, 2076, 2077, 2078, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2107, 2109, 2110, 2111, 2114, 2115, 2117, 2118, 2120, 2121, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2143, 2145, 2146, 2147, 2150], "describ": [0, 5, 7, 8, 9, 23, 24, 28, 30, 32, 34, 37, 39, 41, 45, 47, 52, 53, 64, 237, 517, 798, 799, 800, 823, 824, 825, 852, 870, 968, 1044, 1061, 1078, 1119, 1243, 1310, 1350, 1452, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1485, 1486, 1487, 1488, 1489, 1492, 1494, 1495, 1496, 1502, 1505, 1508, 1510, 1511, 1512, 1514, 1520, 1539, 1541, 1542, 1543, 1554, 1555, 1562, 1563, 1567, 1580, 1588, 1596, 1597, 1598, 1600, 1637, 1649, 1650, 1659, 1693, 1737, 1839, 1980, 2043, 2044, 2046, 2047, 2055, 2071, 2073, 2074, 2075, 2078, 2080, 2081, 2083, 2086, 2088, 2089, 2094, 2099, 2102, 2103, 2104, 2107, 2110, 2111, 2113, 2121, 2133, 2136, 2137, 2141], "part": [0, 1, 3, 4, 5, 6, 7, 9, 14, 15, 18, 23, 24, 28, 30, 33, 35, 47, 48, 52, 53, 55, 59, 60, 64, 84, 85, 852, 925, 990, 994, 1119, 1193, 1279, 1281, 1282, 1285, 1289, 1300, 1302, 1305, 1306, 1320, 1326, 1328, 1337, 1344, 1347, 1548, 1588, 1706, 1738, 1739, 1757, 1830, 1858, 1870, 1939, 1980, 1983, 1984, 1985, 1986, 2042, 2043, 2044, 2046, 2047, 2057, 2058, 2074, 2075, 2078, 2081, 2083, 2084, 2086, 2089, 2094, 2099, 2102, 2104, 2109, 2110, 2111, 2114, 2119, 2121, 2131, 2133, 2135, 2136, 2137, 2143, 2144, 2145], "expos": [0, 1, 8, 19, 28, 32, 38, 55, 63, 64, 801, 1173, 2075, 2078, 2088, 2102, 2104, 2133, 2146], "namespac": [0, 64, 1093, 2044, 2048, 2051, 2081, 2089, 2097, 2099, 2107, 2126, 2134, 2146], "below": [0, 1, 5, 9, 12, 14, 23, 24, 28, 30, 33, 34, 35, 37, 39, 44, 47, 48, 50, 51, 53, 64, 66, 74, 75, 685, 739, 753, 762, 801, 822, 1061, 1106, 1107, 1108, 1109, 1110, 1119, 1147, 1149, 1153, 1196, 1207, 1233, 1243, 1289, 1306, 1346, 1347, 1352, 1359, 1391, 1478, 1479, 1480, 1499, 1501, 1508, 1518, 1520, 1544, 1545, 1546, 1548, 1564, 1580, 1601, 1637, 1663, 1710, 1738, 1759, 1793, 1805, 1827, 1898, 1901, 1938, 1970, 1980, 1983, 1984, 1985, 1986, 2044, 2046, 2047, 2049, 2053, 2054, 2064, 2065, 2074, 2075, 2078, 2080, 2081, 2086, 2087, 2089, 2091, 2093, 2094, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2106, 2109, 2110, 2111, 2115, 2118, 2121, 2127, 2130, 2131, 2132, 2134, 2136, 2137, 2138, 2139, 2141, 2143, 2145], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 23, 24, 28, 30, 32, 33, 36, 37, 40, 47, 48, 50, 52, 55, 56, 57, 60, 61, 63, 64, 86, 499, 517, 519, 521, 763, 832, 835, 874, 903, 906, 911, 914, 916, 917, 926, 930, 937, 939, 969, 982, 983, 985, 1012, 1016, 1053, 1064, 1098, 1099, 1100, 1101, 1170, 1171, 1173, 1182, 1190, 1193, 1201, 1203, 1213, 1230, 1252, 1276, 1286, 1289, 1292, 1301, 1305, 1335, 1353, 1362, 1369, 1379, 1381, 1390, 1434, 1444, 1456, 1466, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1504, 1505, 1506, 1534, 1567, 1568, 1569, 1576, 1591, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1656, 1658, 1673, 1728, 1738, 1746, 1747, 1795, 1800, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1845, 1851, 1901, 1995, 2042, 2043, 2044, 2045, 2047, 2049, 2051, 2055, 2056, 2064, 2065, 2066, 2074, 2075, 2076, 2078, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2103, 2104, 2105, 2109, 2111, 2114, 2115, 2116, 2117, 2118, 2119, 2121, 2130, 2132, 2133, 2135, 2138, 2141, 2142, 2144, 2145, 2147], "defin": [0, 1, 3, 5, 9, 11, 14, 15, 23, 24, 28, 29, 30, 33, 34, 35, 37, 39, 41, 45, 47, 48, 52, 53, 55, 60, 64, 419, 439, 449, 451, 453, 521, 570, 798, 804, 805, 807, 809, 810, 847, 870, 871, 872, 873, 900, 901, 902, 903, 916, 917, 1020, 1075, 1102, 1119, 1120, 1139, 1167, 1174, 1203, 1231, 1233, 1249, 1251, 1252, 1278, 1289, 1295, 1312, 1319, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1335, 1336, 1339, 1341, 1342, 1346, 1347, 1348, 1350, 1352, 1353, 1359, 1361, 1395, 1484, 1489, 1495, 1496, 1503, 1504, 1505, 1506, 1513, 1515, 1516, 1517, 1548, 1554, 1567, 1582, 1584, 1589, 1591, 1608, 1609, 1619, 1654, 1706, 1712, 1728, 1731, 1738, 1765, 1767, 1774, 1775, 1795, 1798, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1832, 1836, 1839, 1857, 1866, 1868, 1870, 1877, 1905, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1935, 1937, 1980, 1983, 1984, 1985, 1986, 2010, 2040, 2042, 2044, 2047, 2049, 2051, 2063, 2064, 2065, 2067, 2070, 2071, 2075, 2078, 2080, 2084, 2086, 2087, 2089, 2091, 2095, 2099, 2101, 2102, 2103, 2104, 2107, 2109, 2114, 2115, 2120, 2121, 2123, 2130, 2131, 2133, 2135, 2137, 2142, 2146], "still": [0, 1, 2, 7, 8, 23, 27, 28, 33, 35, 37, 47, 52, 55, 63, 64, 490, 800, 807, 911, 913, 916, 921, 985, 1202, 1203, 1293, 1299, 1307, 1514, 1539, 1738, 1739, 1740, 1741, 1742, 1889, 2044, 2047, 2064, 2065, 2066, 2067, 2074, 2075, 2078, 2080, 2081, 2083, 2084, 2087, 2094, 2095, 2099, 2101, 2102, 2104, 2109, 2110, 2111, 2114, 2127, 2130, 2133, 2135, 2140, 2141, 2145, 2147], "chang": [0, 1, 2, 3, 7, 11, 12, 18, 19, 24, 28, 30, 32, 33, 34, 35, 37, 46, 52, 53, 55, 56, 59, 60, 62, 63, 64, 65, 143, 237, 258, 325, 462, 500, 503, 521, 524, 560, 621, 685, 828, 888, 930, 931, 983, 985, 997, 998, 999, 1015, 1016, 1028, 1040, 1042, 1053, 1054, 1061, 1062, 1064, 1107, 1155, 1171, 1176, 1197, 1212, 1216, 1236, 1243, 1264, 1286, 1289, 1300, 1301, 1320, 1331, 1333, 1334, 1335, 1338, 1351, 1391, 1421, 1487, 1490, 1508, 1518, 1548, 1580, 1601, 1607, 1608, 1609, 1612, 1619, 1654, 1679, 1680, 1681, 1706, 1728, 1729, 1738, 1741, 1742, 1746, 1747, 1756, 1759, 1760, 1789, 1793, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1832, 1836, 1837, 1839, 1841, 1843, 1857, 1897, 1901, 1938, 1949, 1952, 1953, 1954, 1979, 1998, 2002, 2003, 2017, 2019, 2042, 2043, 2044, 2051, 2053, 2054, 2055, 2057, 2060, 2064, 2065, 2066, 2067, 2071, 2074, 2075, 2076, 2077, 2078, 2081, 2082, 2084, 2086, 2087, 2089, 2091, 2092, 2094, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2109, 2111, 2114, 2116, 2117, 2118, 2119, 2120, 2123, 2124, 2125, 2127, 2130, 2132, 2133, 2135, 2137, 2138, 2141, 2142, 2145], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 29, 30, 32, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 50, 52, 53, 55, 59, 60, 63, 64, 66, 74, 75, 91, 154, 262, 293, 317, 319, 321, 323, 325, 339, 476, 490, 491, 503, 517, 519, 521, 541, 564, 608, 611, 621, 629, 689, 702, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 765, 769, 786, 796, 797, 804, 807, 832, 835, 847, 865, 868, 869, 870, 872, 887, 891, 896, 903, 904, 906, 916, 917, 919, 920, 921, 922, 923, 924, 925, 935, 936, 943, 954, 967, 970, 973, 977, 983, 985, 997, 1003, 1004, 1005, 1015, 1016, 1023, 1030, 1031, 1032, 1033, 1034, 1046, 1047, 1048, 1075, 1077, 1083, 1084, 1095, 1097, 1102, 1106, 1107, 1108, 1109, 1110, 1119, 1135, 1140, 1143, 1147, 1150, 1153, 1158, 1159, 1160, 1161, 1162, 1167, 1170, 1176, 1177, 1180, 1181, 1182, 1183, 1184, 1188, 1191, 1192, 1193, 1201, 1202, 1203, 1207, 1213, 1217, 1226, 1230, 1233, 1252, 1264, 1274, 1280, 1286, 1287, 1289, 1290, 1292, 1295, 1299, 1300, 1301, 1305, 1322, 1325, 1326, 1335, 1339, 1341, 1342, 1345, 1346, 1350, 1352, 1353, 1355, 1358, 1359, 1361, 1367, 1383, 1390, 1395, 1434, 1440, 1443, 1444, 1450, 1451, 1452, 1454, 1455, 1456, 1458, 1459, 1462, 1463, 1464, 1467, 1476, 1477, 1479, 1480, 1483, 1484, 1491, 1498, 1499, 1508, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1520, 1534, 1538, 1542, 1543, 1544, 1545, 1546, 1548, 1551, 1553, 1554, 1563, 1577, 1580, 1582, 1584, 1588, 1592, 1597, 1598, 1612, 1636, 1653, 1654, 1656, 1666, 1673, 1692, 1693, 1706, 1712, 1713, 1721, 1728, 1737, 1738, 1746, 1747, 1753, 1755, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1789, 1791, 1794, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1847, 1859, 1873, 1877, 1879, 1880, 1884, 1886, 1893, 1897, 1901, 1905, 1906, 1907, 1913, 1925, 1930, 1934, 1935, 1937, 1938, 1946, 1949, 1954, 1959, 1965, 1974, 1979, 1980, 1983, 1984, 1985, 1986, 1990, 1991, 1994, 1995, 2007, 2013, 2021, 2022, 2023, 2039, 2042, 2044, 2046, 2047, 2049, 2051, 2053, 2054, 2055, 2057, 2058, 2059, 2060, 2064, 2066, 2067, 2071, 2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2091, 2093, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2111, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2124, 2125, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2139, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150], "unlist": 0, "downstream": [0, 3, 985, 2060, 2136, 2137, 2145], "stabl": [0, 1, 2, 11, 12, 28, 35, 47, 48, 735, 736, 737, 738, 750, 751, 761, 766, 767, 768, 769, 770, 887, 997, 1119, 1325, 1326, 1330, 1335, 1343, 1347, 1350, 1353, 1355, 1362, 1461, 1930, 2043, 2045, 2051, 2071, 2073, 2076, 2093, 2101, 2109, 2130], "believ": [0, 8, 2136], "unstabl": [0, 35, 1325, 1326, 1353, 1370, 1379, 1673, 1958, 2115], "__matmul__": 0, "addbmm": [0, 104, 951, 2045, 2092, 2100], "addmv": [0, 112, 2045, 2065, 2100], "addr": [0, 28, 41, 47, 114, 2045, 2100, 2147], "baddbmm": [0, 156, 2045, 2092, 2100], "bmm": [0, 1995, 2045, 2065, 2067, 2092, 2093, 2100, 2114, 2140], "chain_matmul": [0, 2045, 2100], "multi_dot": [0, 973], "conv1d": [0, 713, 717, 720, 730, 746, 1478, 1486, 1524, 1995, 2045, 2100, 2104, 2106], "conv2d": [0, 52, 714, 718, 721, 723, 731, 747, 798, 822, 1289, 1299, 1301, 1305, 1306, 1479, 1487, 1525, 1548, 1549, 1555, 1577, 1600, 1746, 1774, 1995, 2044, 2045, 2057, 2097, 2099, 2100, 2104, 2106, 2107, 2119, 2125], "conv3d": [0, 715, 719, 722, 724, 732, 748, 1480, 1488, 1526, 1747, 1995, 2045, 2100, 2104, 2106], "conv_transpose1d": [0, 2045, 2100, 2106], "conv_transpose2d": [0, 2045, 2100, 2106], "conv_transpose3d": [0, 2045, 2100, 2106], "grucel": [0, 2092, 2104, 2106, 2107], "lstmcell": [0, 2092, 2104, 2106, 2107], "matmul": [0, 2, 5, 11, 963, 983, 1187, 1394, 1600, 1847, 1857, 1901, 1958, 2045, 2062, 2065, 2067, 2078, 2092, 2100, 2106, 2114, 2130], "mv": [0, 11, 1301, 1995, 2045, 2065, 2100, 2114], "prelu": [0, 1549, 2045, 2100, 2106], "rnncell": [0, 2104, 2106, 2107], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 98, 632, 633, 877, 2045, 2065, 2100, 2121, 2140], "asin": [0, 145, 634, 635, 879, 2045, 2065, 2100, 2114, 2140], "cosh": [0, 207, 642, 643, 689, 2045, 2065, 2100, 2140], "cosine_embedding_loss": [0, 2045, 2100], "cdist": [0, 2078, 2100], "cosine_similar": [0, 1598, 2045, 2100], "cross_entropi": [0, 34, 2045], "cumprod": [0, 217, 2045, 2065, 2100], "cumsum": [0, 219, 1102, 1995, 2045, 2065, 2100, 2140], "dist": [0, 24, 28, 29, 32, 33, 35, 48, 55, 974, 975, 976, 1319, 1325, 1326, 1327, 1329, 1330, 1331, 1335, 1336, 1347, 1348, 1351, 1353, 1354, 1377, 1380, 1557, 1588, 1738, 1753, 1958, 2045, 2080, 2100, 2109, 2111], "erfinv": [0, 255, 2045, 2065, 2100, 2114, 2115], "exp": [0, 1, 35, 257, 648, 649, 775, 921, 922, 924, 1162, 1349, 1369, 1377, 1461, 1466, 1483, 1489, 1513, 1537, 1538, 1552, 1562, 1576, 1579, 1581, 1582, 1584, 1585, 1589, 1628, 1674, 1698, 1707, 1708, 1712, 1714, 1717, 1753, 1854, 1914, 1915, 1937, 1954, 2045, 2065, 2075, 2099, 2100, 2115, 2140], "expm1": [0, 261, 650, 651, 2045, 2065, 2100, 2114, 2115, 2140], "group_norm": [0, 2045, 2100, 2106], "hinge_embedding_loss": [0, 2045, 2100], "kl_div": [0, 2045, 2100], "l1_loss": [0, 2045, 2100], "layer_norm": [0, 1520, 2045, 2100, 2106], "log": [0, 2, 14, 23, 24, 25, 35, 37, 40, 41, 44, 45, 81, 83, 380, 381, 658, 665, 685, 1129, 1365, 1367, 1369, 1370, 1377, 1406, 1452, 1460, 1461, 1483, 1501, 1513, 1537, 1538, 1552, 1555, 1562, 1581, 1582, 1585, 1651, 1656, 1666, 1673, 1674, 1690, 1698, 1712, 1714, 1738, 2043, 2045, 2053, 2060, 2062, 2065, 2075, 2078, 2080, 2081, 2097, 2099, 2100, 2103, 2115, 2119, 2123, 2124, 2125, 2130, 2138, 2139, 2140, 2142, 2143, 2145], "log_softmax": [0, 1467, 1513, 1555, 1638, 1690, 1712, 2045, 2066, 2097, 2100, 2115], "log10": [0, 375, 659, 660, 2045, 2065, 2100, 2140], "log1p": [0, 377, 661, 662, 2045, 2065, 2100, 2114, 2115, 2140], "log2": [0, 379, 663, 664, 2045, 2065, 2100, 2115, 2140], "margin_ranking_loss": [0, 2045, 2100], "mse_loss": [0, 59, 1176, 2045, 2100], "multilabel_margin_loss": [0, 2045, 2100], "multi_margin_loss": [0, 2045, 2100], "nll_loss": [0, 2045, 2100], "norm": [0, 33, 34, 35, 55, 57, 64, 707, 708, 709, 710, 711, 712, 971, 1113, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1321, 1325, 1334, 1335, 1342, 1347, 1359, 1490, 1491, 1539, 1557, 1563, 1593, 1594, 1595, 1596, 1597, 1645, 1646, 1691, 1695, 1737, 1743, 1744, 1754, 1755, 1764, 1765, 1770, 1773, 1774, 1788, 1791, 1809, 1878, 2045, 2049, 2074, 2075, 2086, 2089, 2092, 2100], "normal": [0, 1, 19, 24, 28, 32, 47, 52, 55, 64, 84, 340, 355, 381, 458, 560, 1005, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1203, 1251, 1286, 1289, 1294, 1325, 1367, 1456, 1462, 1463, 1464, 1486, 1487, 1488, 1492, 1502, 1510, 1511, 1512, 1520, 1530, 1531, 1532, 1536, 1563, 1576, 1588, 1592, 1593, 1594, 1595, 1596, 1624, 1654, 1655, 1664, 1668, 1672, 1699, 1703, 1737, 1744, 1745, 1754, 1755, 1770, 1778, 1779, 1788, 1791, 1824, 1841, 1861, 1870, 1871, 1878, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1954, 1995, 2042, 2043, 2044, 2045, 2049, 2051, 2065, 2067, 2073, 2075, 2078, 2081, 2082, 2085, 2099, 2100, 2102, 2106, 2109, 2115, 2119, 2121, 2123, 2129, 2140, 2150], "pdist": [0, 1557, 2045, 2100], "poisson_nll_loss": [0, 2045, 2100], "pow": [0, 1, 473, 500, 919, 920, 923, 946, 1162, 2045, 2047, 2065, 2074, 2075, 2100, 2114, 2120, 2140], "prod": [0, 44, 325, 521, 1136, 1138, 1141, 1142, 1144, 1145, 1148, 1149, 1151, 1152, 1154, 1156, 1355, 1356, 1490, 1494, 1600, 1993, 1995, 2045, 2065, 2100, 2114, 2136, 2140], "reciproc": [0, 489, 668, 669, 1888, 2045, 2065, 2100, 2140], "rsqrt": [0, 515, 2045, 2065, 2100, 2140], "sinh": [0, 540, 676, 677, 893, 2045, 2065, 2100, 2114, 2140], "smooth_l1_loss": [0, 2045, 2100], "soft_margin_loss": [0, 2045, 2100], "softmax": [0, 35, 802, 1452, 1483, 1513, 1538, 1583, 1637, 1656, 1666, 1673, 1706, 1713, 1934, 2045, 2065, 2066, 2067, 2071, 2078, 2100, 2106, 2114, 2115], "softmin": [0, 2045], "softplu": [0, 35, 1547, 1685, 2045, 2100], "sum": [0, 1, 3, 12, 23, 28, 29, 32, 35, 37, 55, 60, 61, 64, 66, 73, 80, 500, 521, 570, 751, 904, 919, 920, 921, 922, 923, 924, 925, 935, 936, 944, 1005, 1032, 1033, 1034, 1101, 1102, 1119, 1180, 1181, 1182, 1187, 1266, 1321, 1342, 1346, 1359, 1367, 1368, 1369, 1377, 1434, 1442, 1460, 1461, 1467, 1480, 1481, 1483, 1484, 1491, 1494, 1501, 1507, 1508, 1513, 1514, 1515, 1516, 1517, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1582, 1584, 1597, 1598, 1600, 1626, 1627, 1637, 1638, 1646, 1651, 1656, 1666, 1675, 1676, 1677, 1690, 1698, 1712, 1713, 1738, 1770, 1775, 1776, 1794, 1806, 1832, 1879, 1901, 1916, 1935, 1937, 1978, 1980, 1995, 2043, 2045, 2047, 2051, 2060, 2065, 2074, 2075, 2078, 2080, 2081, 2082, 2089, 2092, 2099, 2100, 2109, 2110, 2114, 2115, 2120, 2130, 2131, 2133, 2134, 2136, 2140, 2143, 2145, 2147], "renorm": [0, 496, 1490, 1491, 1645, 1646, 2045, 2100], "tan": [0, 579, 680, 681, 894, 2045, 2065, 2100, 2114, 2119, 2140], "triplet_margin_loss": [0, 2045, 2100], "take": [0, 1, 2, 3, 4, 5, 7, 9, 14, 19, 23, 24, 28, 30, 32, 33, 35, 37, 46, 47, 48, 50, 52, 55, 57, 58, 60, 61, 62, 63, 64, 66, 74, 75, 89, 765, 799, 805, 822, 829, 835, 873, 919, 920, 921, 922, 923, 924, 930, 931, 939, 1015, 1055, 1107, 1109, 1110, 1135, 1137, 1140, 1143, 1147, 1148, 1150, 1153, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1213, 1322, 1344, 1347, 1452, 1461, 1491, 1495, 1496, 1499, 1518, 1542, 1543, 1544, 1545, 1546, 1548, 1556, 1564, 1592, 1602, 1603, 1649, 1650, 1667, 1692, 1706, 1738, 1792, 1824, 1828, 1854, 1959, 1982, 1996, 2007, 2042, 2044, 2045, 2047, 2054, 2055, 2057, 2064, 2065, 2066, 2067, 2071, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2087, 2089, 2093, 2094, 2095, 2099, 2100, 2102, 2103, 2104, 2109, 2110, 2111, 2114, 2117, 2118, 2119, 2122, 2124, 2127, 2130, 2131, 2132, 2134, 2135, 2136, 2137, 2139, 2143, 2144], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 28, 29, 30, 32, 33, 35, 37, 40, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 58, 60, 61, 63, 64, 90, 91, 92, 154, 264, 317, 319, 325, 339, 490, 492, 517, 519, 521, 550, 564, 611, 614, 621, 685, 691, 692, 697, 699, 703, 704, 740, 765, 797, 799, 800, 822, 827, 848, 850, 851, 865, 869, 872, 885, 888, 900, 901, 902, 904, 906, 908, 911, 912, 913, 914, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 939, 943, 944, 945, 949, 950, 953, 962, 964, 969, 970, 974, 977, 978, 982, 983, 985, 993, 997, 1004, 1014, 1018, 1019, 1023, 1024, 1032, 1033, 1043, 1051, 1055, 1061, 1065, 1066, 1074, 1075, 1083, 1084, 1086, 1087, 1091, 1093, 1095, 1136, 1137, 1138, 1139, 1142, 1145, 1146, 1149, 1152, 1154, 1156, 1171, 1173, 1176, 1177, 1183, 1184, 1186, 1187, 1193, 1203, 1204, 1210, 1230, 1252, 1255, 1285, 1286, 1289, 1297, 1300, 1301, 1304, 1305, 1325, 1352, 1361, 1377, 1379, 1382, 1387, 1389, 1392, 1401, 1402, 1412, 1415, 1416, 1417, 1432, 1439, 1440, 1441, 1442, 1452, 1459, 1461, 1465, 1467, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1490, 1491, 1494, 1499, 1500, 1501, 1502, 1507, 1513, 1514, 1518, 1519, 1535, 1539, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1564, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1588, 1592, 1594, 1596, 1597, 1600, 1605, 1606, 1612, 1619, 1625, 1627, 1645, 1646, 1651, 1656, 1675, 1676, 1677, 1706, 1712, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1744, 1753, 1759, 1766, 1770, 1780, 1784, 1792, 1793, 1794, 1795, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1832, 1836, 1837, 1840, 1841, 1842, 1843, 1855, 1894, 1901, 1933, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1951, 1952, 1953, 1954, 1957, 1974, 1976, 1983, 1984, 1985, 1986, 1989, 1991, 1992, 1993, 1998, 2002, 2003, 2005, 2009, 2012, 2013, 2014, 2020, 2025, 2030, 2031, 2032, 2033, 2036, 2039, 2042, 2044, 2045, 2046, 2047, 2051, 2053, 2054, 2055, 2057, 2059, 2060, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2077, 2078, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2100, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2113, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2123, 2124, 2125, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149], "addcdiv": [0, 106, 2045, 2100], "addcmul": [0, 108, 2045, 2100], "atan2": [0, 150, 882, 2045, 2065, 2100, 2140], "bilinear": [0, 784, 790, 791, 1119, 1601, 1602, 1654, 1665, 1725, 1726, 1995, 2045, 2100], "cross": [0, 7, 8, 28, 30, 33, 34, 35, 37, 1460, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1626, 1627, 1637, 2045, 2071, 2078, 2095, 2100, 2130], "dot": [0, 2, 14, 60, 61, 621, 920, 922, 923, 924, 1098, 1099, 1100, 1101, 1178, 1188, 1266, 1310, 1357, 1358, 1384, 1460, 1461, 1483, 1494, 1507, 1514, 1539, 1554, 1555, 1598, 1607, 1612, 1706, 1954, 2004, 2005, 2006, 2007, 2045, 2065, 2071, 2086, 2100, 2102], "grid_sampl": [0, 1619, 1995, 2045, 2100], "index_put": [0, 1995, 2045, 2100, 2140], "scatter_add": [0, 2045, 2100, 2140], "tensordot": [0, 1266, 1355, 1356, 2049, 2078, 2100], "binari": [0, 2, 14, 15, 24, 35, 37, 40, 45, 47, 64, 158, 740, 953, 1383, 1460, 1461, 1554, 1626, 1627, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1801, 2043, 2048, 2065, 2066, 2088, 2097, 2099, 2102, 2119, 2127], "add": [0, 1, 3, 7, 12, 15, 17, 23, 28, 30, 32, 33, 38, 44, 47, 52, 53, 55, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 84, 88, 102, 294, 317, 517, 519, 691, 692, 693, 696, 752, 753, 762, 796, 799, 847, 848, 870, 872, 873, 939, 946, 985, 1033, 1064, 1075, 1119, 1177, 1196, 1202, 1203, 1209, 1289, 1301, 1452, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1524, 1525, 1526, 1527, 1528, 1529, 1548, 1550, 1554, 1555, 1559, 1562, 1656, 1698, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 1901, 1950, 2042, 2044, 2045, 2046, 2047, 2051, 2057, 2060, 2065, 2067, 2074, 2076, 2077, 2080, 2081, 2082, 2087, 2088, 2089, 2091, 2094, 2096, 2097, 2099, 2100, 2102, 2103, 2104, 2105, 2106, 2107, 2109, 2110, 2111, 2114, 2117, 2118, 2119, 2124, 2125, 2130, 2131, 2132, 2133, 2134, 2136, 2137, 2139, 2140, 2143, 2144, 2145, 2146, 2147], "nativ": [0, 11, 24, 55, 64, 1044, 1177, 1300, 1744, 1745, 1901, 2044, 2047, 2064, 2078, 2094, 2096, 2101, 2102, 2109, 2136], "without": [0, 1, 3, 5, 7, 8, 9, 14, 18, 23, 24, 28, 29, 30, 32, 33, 34, 35, 40, 47, 52, 55, 56, 61, 63, 64, 65, 66, 67, 258, 490, 492, 621, 980, 983, 1019, 1023, 1059, 1140, 1141, 1142, 1150, 1151, 1152, 1203, 1212, 1213, 1229, 1286, 1287, 1289, 1290, 1336, 1337, 1352, 1359, 1434, 1462, 1463, 1464, 1487, 1491, 1510, 1511, 1512, 1545, 1548, 1556, 1588, 1596, 1646, 1728, 1738, 1771, 1787, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1832, 1864, 1880, 1897, 1989, 2042, 2046, 2047, 2051, 2054, 2055, 2057, 2060, 2064, 2066, 2074, 2075, 2076, 2078, 2080, 2081, 2086, 2087, 2089, 2091, 2093, 2094, 2097, 2099, 2102, 2104, 2108, 2109, 2114, 2116, 2119, 2125, 2130, 2132, 2133, 2134, 2135, 2136, 2145, 2149, 2150], "intervent": [0, 8, 33, 2109], "mixtur": [0, 35, 1483, 1637], "bceloss": [0, 1461, 1626], "aren": [0, 8, 52, 60, 64, 83, 1177, 1203, 2065, 2075, 2084, 2110, 2146], "mean": [0, 2, 3, 5, 7, 8, 12, 15, 18, 19, 23, 24, 28, 30, 32, 34, 35, 47, 48, 50, 52, 53, 55, 56, 58, 61, 63, 64, 258, 262, 325, 339, 381, 458, 492, 499, 521, 763, 765, 786, 800, 802, 872, 873, 939, 951, 964, 997, 1005, 1176, 1178, 1212, 1213, 1300, 1390, 1410, 1434, 1439, 1443, 1444, 1450, 1451, 1452, 1454, 1455, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1481, 1483, 1485, 1489, 1491, 1492, 1493, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1518, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1534, 1535, 1537, 1538, 1539, 1540, 1547, 1551, 1552, 1553, 1555, 1556, 1562, 1563, 1564, 1567, 1568, 1569, 1576, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1597, 1598, 1599, 1625, 1626, 1627, 1635, 1637, 1638, 1646, 1647, 1651, 1662, 1663, 1666, 1667, 1671, 1678, 1686, 1687, 1688, 1689, 1690, 1698, 1703, 1710, 1711, 1722, 1723, 1737, 1738, 1749, 1751, 1795, 1827, 1861, 1870, 1871, 1901, 1914, 1935, 1952, 1953, 1959, 1995, 2002, 2003, 2042, 2044, 2045, 2046, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2071, 2073, 2074, 2075, 2078, 2080, 2081, 2083, 2084, 2086, 2089, 2095, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2109, 2110, 2111, 2114, 2130, 2132, 2133, 2135, 2136, 2139, 2140, 2141, 2142], "doesn": [0, 1, 2, 5, 7, 8, 11, 12, 19, 23, 28, 30, 37, 45, 53, 58, 60, 63, 64, 86, 832, 835, 891, 911, 912, 916, 925, 937, 997, 1019, 1043, 1177, 1188, 1202, 1203, 1213, 1216, 1228, 1297, 1303, 1329, 1353, 1361, 1370, 1431, 1475, 1476, 1477, 1484, 1513, 1582, 1629, 1630, 1631, 1666, 1712, 1738, 1739, 1740, 1770, 1810, 1897, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1931, 1935, 2007, 2020, 2044, 2047, 2048, 2065, 2067, 2075, 2076, 2078, 2081, 2082, 2088, 2091, 2095, 2101, 2110, 2114, 2135, 2140, 2143, 2145], "help": [0, 1, 4, 7, 8, 11, 14, 20, 23, 24, 28, 33, 44, 47, 55, 60, 64, 930, 931, 943, 1043, 1075, 1177, 1178, 1188, 1192, 1202, 1203, 1289, 1290, 1309, 1391, 1405, 1406, 1486, 1487, 1488, 1492, 1548, 1753, 1804, 1907, 2007, 2020, 2042, 2047, 2051, 2054, 2055, 2065, 2066, 2074, 2075, 2076, 2078, 2080, 2082, 2087, 2089, 2092, 2097, 2099, 2102, 2109, 2110, 2114, 2123, 2133, 2135, 2138, 2139, 2143, 2145, 2149], "revers": [0, 35, 61, 64, 517, 739, 799, 919, 921, 1137, 1139, 1159, 1180, 1182, 1187, 1357, 1518, 1561, 1697, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777, 1982, 2001, 2045, 2046, 2047, 2075, 2080, 2082, 2100, 2120], "therefor": [0, 3, 5, 23, 24, 28, 35, 36, 45, 55, 58, 66, 71, 72, 88, 452, 548, 925, 952, 961, 985, 1064, 1153, 1170, 1173, 1176, 1226, 1247, 1248, 1302, 1305, 1335, 1348, 1490, 1491, 1600, 1645, 1646, 1654, 1789, 1832, 2047, 2056, 2074, 2075, 2078, 2081, 2083, 2084, 2088, 2099, 2111, 2114, 2134, 2137], "rais": [0, 1, 5, 7, 14, 28, 30, 32, 33, 35, 37, 40, 47, 52, 55, 60, 63, 64, 66, 91, 317, 319, 325, 702, 905, 911, 914, 916, 919, 920, 921, 922, 923, 924, 925, 929, 930, 931, 938, 948, 950, 964, 973, 983, 1022, 1035, 1089, 1162, 1167, 1219, 1287, 1289, 1294, 1297, 1305, 1307, 1319, 1321, 1329, 1330, 1333, 1337, 1338, 1343, 1350, 1351, 1355, 1356, 1361, 1382, 1410, 1548, 1706, 1731, 1759, 1760, 1765, 1767, 1770, 1780, 1800, 1801, 1895, 1898, 1943, 1995, 2042, 2048, 2051, 2054, 2064, 2071, 2075, 2078, 2081, 2083, 2092, 2097, 2099, 2102, 2108, 2109, 2113, 2121, 2132, 2135, 2136, 2144, 2145, 2146], "mani": [0, 3, 7, 11, 14, 19, 23, 24, 28, 35, 47, 55, 59, 60, 64, 91, 406, 685, 900, 902, 916, 917, 919, 921, 1119, 1213, 1302, 1467, 1827, 1926, 1976, 1983, 1984, 1985, 1986, 2044, 2046, 2055, 2065, 2073, 2075, 2076, 2077, 2078, 2081, 2082, 2088, 2089, 2092, 2096, 2099, 2101, 2104, 2111, 2114, 2117, 2119, 2120, 2123, 2130, 2131, 2132, 2133, 2135, 2136, 2138, 2139, 2141, 2144, 2145, 2147, 2148], "sigmoid": [0, 5, 35, 64, 531, 672, 673, 765, 801, 1460, 1461, 1490, 1499, 1500, 1518, 1519, 1578, 1626, 1653, 1709, 2045, 2065, 2066, 2073, 2097, 2100, 2106, 2115, 2127, 2140], "right": [0, 2, 7, 9, 28, 30, 35, 52, 55, 64, 829, 876, 952, 959, 961, 962, 967, 972, 976, 1113, 1119, 1160, 1163, 1164, 1168, 1243, 1247, 1248, 1252, 1256, 1286, 1309, 1334, 1339, 1350, 1352, 1353, 1361, 1367, 1368, 1434, 1452, 1457, 1458, 1459, 1460, 1461, 1475, 1476, 1477, 1494, 1501, 1514, 1515, 1516, 1517, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1551, 1552, 1553, 1557, 1558, 1565, 1597, 1600, 1601, 1602, 1603, 1608, 1609, 1610, 1654, 1674, 1693, 1745, 1759, 1784, 1810, 1830, 1831, 1873, 1893, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1954, 1975, 1980, 1982, 1998, 2001, 2042, 2045, 2047, 2064, 2065, 2066, 2075, 2081, 2086, 2097, 2099, 2101, 2107, 2111, 2115, 2133, 2134, 2135, 2143], "entropi": [0, 34, 35, 1460, 1483, 1552, 1626, 1627, 1637, 2115], "combin": [0, 3, 23, 24, 28, 30, 38, 47, 61, 63, 621, 694, 717, 718, 719, 720, 721, 722, 723, 724, 799, 865, 901, 916, 1075, 1148, 1149, 1154, 1156, 1216, 1252, 1384, 1394, 1461, 1494, 1508, 1554, 1596, 1600, 1648, 1671, 1766, 2044, 2045, 2046, 2074, 2078, 2082, 2097, 2099, 2100, 2101, 2104, 2107, 2109, 2131], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 18, 19, 23, 24, 28, 29, 30, 32, 33, 35, 44, 45, 47, 48, 52, 53, 55, 59, 60, 64, 86, 87, 587, 588, 589, 591, 592, 611, 621, 685, 697, 699, 765, 799, 803, 898, 901, 916, 917, 921, 930, 971, 973, 1020, 1027, 1067, 1069, 1098, 1099, 1107, 1116, 1119, 1125, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1165, 1166, 1176, 1186, 1199, 1202, 1211, 1214, 1251, 1253, 1278, 1287, 1289, 1300, 1303, 1310, 1313, 1315, 1320, 1322, 1325, 1326, 1331, 1332, 1337, 1342, 1345, 1346, 1348, 1349, 1351, 1353, 1358, 1361, 1384, 1387, 1390, 1392, 1395, 1441, 1458, 1460, 1461, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1494, 1499, 1507, 1508, 1514, 1516, 1518, 1539, 1540, 1542, 1548, 1551, 1552, 1553, 1555, 1556, 1562, 1564, 1580, 1581, 1596, 1597, 1598, 1600, 1608, 1609, 1626, 1627, 1637, 1656, 1666, 1673, 1690, 1698, 1706, 1753, 1755, 1759, 1781, 1791, 1793, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1831, 1832, 1835, 1839, 1858, 1873, 1886, 1901, 1938, 1943, 1958, 1975, 1979, 1980, 1982, 1991, 2000, 2004, 2008, 2042, 2044, 2046, 2047, 2051, 2053, 2054, 2055, 2065, 2066, 2067, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2089, 2094, 2095, 2096, 2099, 2101, 2102, 2104, 2105, 2109, 2110, 2111, 2114, 2115, 2117, 2119, 2120, 2121, 2124, 2125, 2130, 2131, 2132, 2133, 2135, 2140, 2143, 2145], "bcewithlogitsloss": [0, 1627], "bcewithlogit": 0, "safe": [0, 28, 30, 47, 52, 63, 64, 87, 89, 91, 490, 1065, 1066, 1086, 1087, 1216, 1738, 1803, 1804, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 2030, 2031, 2032, 2033, 2044, 2047, 2074, 2075, 2078, 2082, 2084, 2088, 2094, 2109, 2116, 2126, 2130, 2136, 2137, 2145], "_convolut": [0, 2100], "avg_pool3d": [0, 2045, 2100, 2106, 2140], "grid_sampler_2d": [0, 2045, 2100, 2140], "_grid_sampler_2d_cpu_fallback": [0, 2100], "grid_sampler_3d": [0, 2045, 2100], "polar": [0, 35, 1349, 2045, 2100], "quantil": [0, 1390, 1441, 2045, 2100, 2115], "nanquantil": [0, 2045, 2100], "stft": [0, 952, 961, 1247, 1248, 1286, 1309, 2045, 2100], "view_as_complex": [0, 11, 2045, 2100], "choleski": [0, 2, 35, 975, 976, 1320, 1326, 1362, 2045, 2100], "cholesky_invers": [0, 2, 2045, 2100], "cholesky_solv": [0, 2, 2045, 2100], "invers": [0, 35, 688, 689, 893, 896, 970, 975, 976, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1286, 1330, 1331, 1343, 1347, 1350, 1355, 1356, 1478, 1479, 1480, 1490, 1491, 1494, 1544, 1545, 1546, 1600, 1645, 1646, 1682, 1683, 1684, 1756, 1759, 1783, 1832, 1839, 1990, 2043, 2045, 2047, 2092, 2100, 2115], "lu_solv": [0, 2, 1337, 2045, 2100], "orgqr": [0, 2045, 2100], "ormqr": [0, 1233, 1329, 2045, 2100], "pinvers": [0, 1335, 2045, 2100], "max_pool3d": [0, 2045, 2100, 2106], "max_unpool2d": [0, 1649, 1680, 2045, 2100], "max_unpool3d": [0, 1650, 1681, 2045, 2100], "adaptive_avg_pool3d": [0, 2045, 2081, 2100, 2106], "reflection_pad1d": [0, 2045, 2100, 2140], "reflection_pad2d": [0, 2045, 2100, 2140], "replication_pad1d": [0, 2045, 2100], "replication_pad2d": [0, 2045, 2100, 2140], "replication_pad3d": [0, 2045, 2100, 2140], "ctc_loss": [0, 1467, 2045, 2100], "fft_fft": [0, 2045, 2100], "fft_ifft": [0, 2045, 2100], "fft_fft2": [0, 2045, 2100], "fft_ifft2": [0, 2045, 2100], "fft_fftn": [0, 2045, 2100], "fft_ifftn": [0, 2045, 2100], "fft_rfft": [0, 2045, 2100], "fft_irfft": [0, 2045, 2100], "fft_rfft2": [0, 2045, 2100], "fft_irfft2": [0, 2045, 2100], "fft_rfftn": [0, 2045, 2100], "fft_irfftn": [0, 2045, 2100], "fft_hfft": [0, 2045, 2100], "fft_ihfft": [0, 2045, 2100], "linalg_matrix_norm": [0, 2045, 2100], "linalg_cond": [0, 2045, 2100], "linalg_matrix_rank": [0, 2045, 2100], "linalg_solv": [0, 2045, 2100], "linalg_choleski": [0, 2045, 2100], "linalg_svdv": [0, 2045, 2100], "linalg_eigv": [0, 2045, 2100], "linalg_eigvalsh": [0, 2045, 2100], "linalg_inv": [0, 2045, 2100], "linalg_householder_product": [0, 2045, 2100], "linalg_tensorinv": [0, 2045, 2100], "linalg_tensorsolv": [0, 2045, 2100], "fake_quantize_per_tensor_affin": [0, 2045, 2100], "eig": [0, 1326, 1327, 1353, 2092], "geqrf": [0, 1329, 1845, 2045, 2100], "lstsq": [0, 1233, 1321, 1347], "_lu_with_info": [0, 2100], "qr": [0, 2, 1233, 1325, 1326, 1329, 1335, 1353, 1753, 1845, 2045, 2100], "solv": [0, 7, 11, 52, 1196, 1233, 1243, 1321, 1330, 1332, 1333, 1336, 1337, 1339, 1343, 1351, 1352, 1356, 1362, 1380, 1982, 2075, 2086, 2092, 2095, 2126, 2133, 2136], "svd": [0, 2, 11, 1325, 1326, 1335, 1347, 1354, 1370, 1759, 1847, 1959, 2045, 2092, 2100, 2114, 2140], "symeig": 0, "triangular_solv": [0, 2045, 2100], "fractional_max_pool2d": [0, 2045, 2100], "fractional_max_pool3d": [0, 2045, 2100], "adaptive_max_pool3d": [0, 2045, 2100], "multilabel_margin_loss_forward": [0, 2100], "linalg_qr": [0, 2045, 2100], "linalg_cholesky_ex": [0, 2045, 2100], "linalg_svd": [0, 2045, 2100], "linalg_eig": [0, 2045, 2100], "linalg_eigh": [0, 2045, 2100], "linalg_lstsq": [0, 2045, 2100], "linalg_inv_ex": [0, 2045, 2100], "cat": [0, 28, 35, 64, 548, 752, 753, 762, 799, 802, 995, 996, 1391, 1568, 1939, 1951, 2044, 2045, 2065, 2099, 2100, 2102, 2104, 2106, 2114, 2124, 2132, 2140], "stack": [0, 8, 18, 23, 24, 25, 28, 35, 40, 47, 52, 53, 59, 60, 64, 685, 765, 943, 970, 981, 985, 1080, 1081, 1118, 1186, 1188, 1193, 1203, 1255, 1391, 1467, 1499, 1518, 1519, 1564, 1593, 1595, 1784, 1997, 2007, 2009, 2043, 2045, 2051, 2067, 2078, 2080, 2083, 2100, 2102, 2103, 2106, 2114, 2133, 2134, 2135, 2136, 2143, 2145, 2147, 2148, 2149], "index_copi": [0, 1995, 2045, 2100], "implement": [1, 2, 5, 8, 11, 12, 16, 17, 19, 23, 24, 28, 29, 30, 32, 34, 35, 39, 44, 45, 48, 52, 55, 60, 64, 65, 82, 86, 154, 419, 517, 519, 521, 692, 743, 744, 745, 746, 747, 748, 765, 784, 786, 790, 799, 808, 828, 829, 830, 833, 834, 835, 889, 891, 904, 920, 930, 931, 997, 1003, 1119, 1162, 1167, 1173, 1180, 1181, 1183, 1184, 1289, 1295, 1297, 1299, 1300, 1303, 1345, 1348, 1361, 1362, 1390, 1452, 1467, 1484, 1499, 1502, 1515, 1516, 1517, 1520, 1548, 1554, 1560, 1563, 1564, 1565, 1568, 1585, 1594, 1596, 1654, 1659, 1693, 1706, 1714, 1737, 1738, 1744, 1745, 1753, 1754, 1759, 1770, 1783, 1787, 1788, 1791, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827, 1830, 1832, 1839, 1857, 1864, 1877, 1886, 1889, 1913, 1925, 1935, 1958, 1959, 1975, 1991, 1995, 1996, 1998, 2043, 2046, 2047, 2048, 2051, 2054, 2055, 2063, 2064, 2067, 2068, 2071, 2073, 2074, 2075, 2077, 2078, 2081, 2082, 2083, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2097, 2101, 2102, 2104, 2109, 2110, 2114, 2115, 2118, 2120, 2130, 2132, 2134, 2136, 2141, 2143, 2146], "arbitrari": [1, 3, 28, 32, 33, 52, 66, 69, 74, 258, 901, 916, 1102, 1203, 1353, 1361, 1484, 1490, 1514, 1539, 1600, 1626, 1627, 1645, 1666, 1693, 1780, 1958, 1980, 1993, 2047, 2053, 2055, 2071, 2075, 2082, 2088, 2089, 2094, 2101, 2104, 2114, 2123, 2133, 2136, 2141, 2145, 2146], "scalar": [1, 12, 28, 35, 53, 66, 75, 101, 154, 158, 264, 317, 450, 517, 593, 692, 693, 743, 744, 745, 746, 747, 748, 890, 891, 904, 919, 920, 923, 925, 956, 959, 967, 1001, 1005, 1114, 1119, 1134, 1167, 1174, 1243, 1250, 1266, 1280, 1314, 1315, 1384, 1391, 1441, 1452, 1460, 1461, 1467, 1481, 1483, 1484, 1501, 1507, 1508, 1513, 1514, 1520, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1598, 1656, 1699, 1793, 1798, 1799, 1800, 1841, 1854, 1856, 1858, 1876, 1877, 1893, 1941, 1942, 1943, 1944, 1945, 1973, 1991, 1992, 2010, 2040, 2041, 2045, 2046, 2047, 2060, 2067, 2071, 2073, 2075, 2081, 2086, 2099, 2109, 2114, 2117, 2119, 2121, 2133, 2135, 2136, 2140, 2144], "minim": [1, 7, 8, 828, 886, 1392, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1841, 2042, 2060, 2074, 2078, 2089, 2091, 2094, 2099, 2104, 2136, 2143, 2145], "exist": [1, 7, 8, 9, 11, 14, 23, 28, 29, 30, 35, 37, 38, 40, 45, 47, 48, 53, 55, 59, 62, 64, 66, 84, 85, 258, 503, 798, 865, 889, 919, 920, 921, 922, 923, 924, 925, 930, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1035, 1059, 1202, 1215, 1216, 1226, 1289, 1293, 1305, 1325, 1330, 1336, 1337, 1362, 1441, 1548, 1549, 1558, 1608, 1933, 1951, 1998, 2042, 2044, 2051, 2054, 2064, 2065, 2067, 2068, 2075, 2076, 2078, 2081, 2082, 2084, 2087, 2088, 2089, 2090, 2092, 2094, 2099, 2102, 2103, 2104, 2109, 2111, 2114, 2118, 2120, 2130, 2131, 2133, 2135, 2137, 2140, 2143, 2147], "code": [1, 3, 4, 8, 9, 11, 14, 15, 16, 19, 23, 24, 28, 30, 33, 35, 37, 48, 50, 52, 53, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 123, 685, 926, 946, 983, 985, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1061, 1062, 1075, 1177, 1203, 1289, 1293, 1294, 1300, 1301, 1302, 1305, 1306, 1307, 1320, 1331, 1333, 1361, 1565, 1577, 1609, 1610, 1611, 1738, 1904, 2042, 2043, 2046, 2047, 2053, 2055, 2066, 2075, 2076, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2091, 2093, 2094, 2095, 2097, 2099, 2101, 2103, 2108, 2109, 2110, 2111, 2114, 2117, 2118, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2139, 2141, 2143, 2144, 2145, 2146, 2147], "need": [1, 3, 5, 6, 7, 8, 9, 14, 15, 23, 24, 28, 29, 30, 32, 33, 34, 35, 39, 40, 45, 47, 48, 51, 52, 53, 55, 57, 58, 60, 64, 65, 66, 76, 77, 87, 88, 154, 258, 475, 492, 499, 503, 587, 685, 739, 740, 828, 829, 830, 833, 834, 835, 852, 869, 900, 904, 911, 912, 913, 916, 917, 925, 937, 964, 965, 973, 990, 991, 1055, 1064, 1071, 1107, 1109, 1119, 1140, 1142, 1162, 1171, 1176, 1192, 1193, 1203, 1226, 1289, 1383, 1434, 1483, 1490, 1544, 1545, 1546, 1548, 1554, 1592, 1594, 1596, 1629, 1630, 1631, 1724, 1738, 1746, 1747, 1759, 1761, 1765, 1767, 1795, 1827, 1874, 1879, 1893, 1951, 1980, 1996, 1998, 2043, 2044, 2046, 2047, 2051, 2054, 2055, 2057, 2059, 2064, 2066, 2067, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2088, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2104, 2107, 2109, 2110, 2111, 2114, 2116, 2117, 2120, 2121, 2125, 2126, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2141, 2143, 2145, 2146], "declar": [1, 9, 14, 23, 48, 1213, 2046, 2047, 2048, 2081, 2099, 2102], "requires_grad": [1, 5, 30, 34, 35, 61, 339, 449, 450, 451, 452, 453, 491, 492, 500, 876, 891, 911, 912, 914, 915, 916, 917, 926, 927, 930, 931, 933, 935, 936, 946, 952, 961, 1064, 1120, 1121, 1122, 1123, 1132, 1137, 1155, 1173, 1174, 1175, 1178, 1188, 1247, 1248, 1289, 1309, 1360, 1376, 1460, 1461, 1481, 1483, 1490, 1491, 1501, 1513, 1514, 1539, 1540, 1548, 1554, 1555, 1562, 1596, 1597, 1626, 1627, 1637, 1690, 1738, 1740, 1741, 1742, 1787, 1792, 1798, 1799, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1935, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 1995, 2007, 2040, 2041, 2045, 2049, 2051, 2065, 2066, 2067, 2078, 2081, 2082, 2089, 2094, 2099, 2100, 2109, 2110, 2120, 2121, 2123, 2133, 2134, 2135, 2136, 2140, 2143], "keyword": [1, 5, 23, 28, 29, 32, 33, 34, 52, 53, 60, 64, 66, 72, 86, 91, 317, 325, 449, 450, 451, 452, 453, 517, 585, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 872, 876, 891, 892, 893, 894, 895, 896, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 963, 967, 970, 972, 974, 975, 976, 978, 980, 981, 994, 999, 1000, 1002, 1003, 1005, 1015, 1030, 1032, 1034, 1061, 1062, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1111, 1114, 1116, 1118, 1120, 1121, 1122, 1124, 1129, 1132, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1171, 1173, 1174, 1175, 1176, 1201, 1230, 1231, 1232, 1233, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1264, 1266, 1283, 1284, 1289, 1292, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1381, 1383, 1384, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1413, 1433, 1434, 1436, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1448, 1484, 1506, 1509, 1548, 1706, 1731, 1732, 1738, 1759, 1761, 1766, 1770, 1789, 1793, 1795, 1798, 1799, 1845, 1846, 1850, 1851, 1854, 1855, 1857, 1858, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1877, 1878, 1879, 1886, 1888, 1893, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1930, 1933, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1950, 1951, 1952, 1953, 1955, 1957, 1958, 1970, 1971, 1972, 1973, 1977, 1980, 1982, 1983, 1984, 1985, 1986, 1988, 1995, 2002, 2003, 2004, 2009, 2010, 2040, 2041, 2042, 2047, 2048, 2051, 2066, 2067, 2081, 2092, 2097, 2099, 2101, 2109, 2114, 2115, 2119, 2120, 2146], "support": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 47, 48, 52, 53, 55, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 88, 89, 262, 315, 325, 462, 587, 621, 690, 691, 692, 694, 698, 700, 701, 704, 734, 743, 744, 745, 777, 778, 779, 784, 790, 791, 792, 798, 799, 800, 801, 809, 825, 842, 870, 872, 873, 903, 906, 911, 914, 916, 917, 930, 931, 951, 952, 956, 959, 961, 963, 975, 976, 983, 997, 1000, 1015, 1035, 1061, 1062, 1064, 1082, 1114, 1116, 1119, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1164, 1165, 1166, 1167, 1169, 1170, 1172, 1183, 1187, 1247, 1248, 1260, 1286, 1293, 1301, 1305, 1309, 1310, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1362, 1380, 1384, 1388, 1393, 1394, 1431, 1433, 1475, 1476, 1477, 1478, 1479, 1480, 1487, 1490, 1491, 1494, 1514, 1535, 1553, 1554, 1588, 1596, 1598, 1600, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1646, 1648, 1654, 1665, 1671, 1706, 1724, 1725, 1727, 1738, 1746, 1747, 1794, 1799, 1806, 1807, 1808, 1810, 1826, 1845, 1857, 1876, 1877, 1898, 1901, 1902, 1931, 1932, 1935, 1938, 1955, 1958, 1982, 1984, 1986, 1996, 1998, 2004, 2005, 2006, 2041, 2042, 2043, 2044, 2046, 2048, 2049, 2051, 2057, 2060, 2062, 2064, 2068, 2075, 2076, 2077, 2078, 2081, 2085, 2087, 2089, 2091, 2092, 2094, 2095, 2096, 2097, 2098, 2101, 2102, 2103, 2107, 2108, 2109, 2113, 2115, 2117, 2118, 2119, 2120, 2121, 2123, 2124, 2126, 2127, 2129, 2131, 2132, 2134, 2135, 2137, 2138, 2144, 2145, 2146, 2152], "type": [1, 2, 3, 5, 12, 14, 15, 17, 19, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 47, 48, 50, 52, 55, 60, 62, 63, 64, 66, 68, 71, 72, 75, 76, 77, 82, 83, 87, 89, 90, 91, 92, 154, 195, 200, 212, 330, 333, 337, 345, 449, 450, 451, 452, 453, 485, 563, 608, 685, 690, 691, 692, 693, 694, 695, 739, 740, 743, 744, 745, 754, 756, 757, 758, 759, 761, 769, 771, 772, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 789, 798, 799, 800, 803, 804, 806, 823, 824, 825, 828, 829, 830, 831, 832, 834, 836, 848, 850, 851, 865, 866, 867, 868, 869, 870, 871, 872, 873, 876, 884, 890, 900, 901, 902, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 935, 936, 939, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 967, 968, 969, 970, 971, 973, 982, 984, 985, 990, 991, 992, 997, 1008, 1009, 1010, 1011, 1013, 1019, 1021, 1023, 1027, 1029, 1035, 1037, 1038, 1039, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1056, 1058, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1082, 1094, 1096, 1097, 1100, 1101, 1114, 1119, 1120, 1121, 1122, 1132, 1133, 1134, 1137, 1155, 1162, 1164, 1165, 1166, 1167, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1200, 1201, 1203, 1210, 1217, 1218, 1219, 1220, 1221, 1222, 1228, 1231, 1235, 1237, 1239, 1242, 1247, 1248, 1250, 1251, 1252, 1265, 1268, 1270, 1271, 1274, 1275, 1276, 1277, 1285, 1286, 1287, 1289, 1290, 1292, 1295, 1296, 1299, 1301, 1303, 1305, 1306, 1308, 1309, 1312, 1321, 1325, 1342, 1346, 1353, 1359, 1360, 1361, 1362, 1376, 1379, 1382, 1389, 1391, 1398, 1399, 1400, 1403, 1408, 1415, 1416, 1418, 1419, 1420, 1422, 1423, 1425, 1427, 1431, 1433, 1439, 1442, 1452, 1456, 1475, 1476, 1477, 1484, 1491, 1538, 1548, 1549, 1550, 1554, 1558, 1559, 1563, 1577, 1582, 1583, 1584, 1592, 1593, 1594, 1595, 1596, 1609, 1610, 1611, 1614, 1615, 1619, 1620, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1672, 1673, 1675, 1676, 1677, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1698, 1700, 1701, 1703, 1704, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1719, 1721, 1722, 1723, 1724, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1745, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1788, 1789, 1791, 1793, 1794, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1847, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1876, 1877, 1879, 1883, 1886, 1893, 1894, 1897, 1898, 1899, 1901, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1934, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1954, 1955, 1957, 1958, 1959, 1965, 1973, 1982, 1984, 1986, 1991, 1992, 1993, 1995, 1996, 1997, 2001, 2007, 2010, 2012, 2013, 2015, 2016, 2018, 2021, 2022, 2023, 2024, 2025, 2027, 2028, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2048, 2051, 2055, 2057, 2058, 2060, 2065, 2067, 2071, 2073, 2074, 2075, 2077, 2078, 2085, 2086, 2087, 2088, 2089, 2092, 2094, 2095, 2097, 2098, 2100, 2103, 2104, 2106, 2107, 2108, 2109, 2113, 2114, 2115, 2116, 2117, 2119, 2121, 2123, 2124, 2125, 2130, 2131, 2132, 2133, 2134, 2136, 2140, 2143, 2144, 2146], "doubl": [1, 3, 35, 37, 52, 53, 55, 485, 491, 621, 754, 756, 757, 758, 759, 761, 771, 772, 786, 911, 912, 914, 916, 917, 922, 930, 931, 939, 968, 975, 976, 994, 1015, 1064, 1134, 1162, 1243, 1289, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1370, 1371, 1372, 1373, 1374, 1380, 1491, 1548, 1614, 1617, 1646, 1728, 1800, 1845, 1851, 1940, 1941, 1942, 1944, 1945, 1958, 1973, 1982, 2010, 2047, 2065, 2078, 2081, 2082, 2084, 2092, 2099, 2102, 2116, 2117, 2120], "bfloat16": [1, 24, 55, 1271, 1289, 1341, 1358, 1548, 1706, 1800, 1806, 1807, 1808, 1826, 1898, 1901, 2065, 2078, 2085, 2114, 2116, 2117, 2120, 2121, 2150], "cfloat": [1, 11, 28, 315, 487, 621, 975, 976, 1015, 1260, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1380, 1845, 1875, 1958, 1982, 2006, 2117, 2120], "cdoubl": [1, 11, 975, 976, 1015, 1289, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1380, 1548, 1845, 1958, 1982, 2117, 2120], "beta": [1, 2, 11, 56, 63, 103, 104, 109, 110, 111, 112, 113, 114, 155, 156, 325, 521, 558, 691, 694, 695, 696, 951, 1016, 1053, 1054, 1061, 1062, 1064, 1247, 1309, 1384, 1394, 1462, 1463, 1464, 1502, 1508, 1510, 1511, 1512, 1520, 1536, 1580, 1585, 1588, 1607, 1612, 1663, 1671, 1672, 1706, 1710, 1714, 1805, 1807, 1808, 1809, 1811, 1823, 1827, 1861, 1918, 1920, 1931, 1936, 1950, 2043, 2045, 2053, 2057, 2078, 2096, 2097, 2098, 2099, 2101, 2104, 2109, 2114, 2117, 2123, 2140], "even": [1, 2, 8, 19, 23, 24, 28, 30, 37, 52, 55, 63, 64, 89, 490, 548, 584, 685, 823, 824, 825, 904, 1005, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1150, 1151, 1152, 1155, 1187, 1202, 1207, 1213, 1215, 1216, 1228, 1274, 1302, 1319, 1321, 1325, 1326, 1327, 1328, 1342, 1346, 1348, 1349, 1353, 1354, 1359, 1384, 1390, 1484, 1588, 1629, 1630, 1631, 1693, 1738, 1746, 1747, 1753, 1792, 1794, 1839, 1886, 1897, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1958, 2005, 2044, 2047, 2048, 2060, 2067, 2074, 2075, 2078, 2081, 2083, 2084, 2087, 2089, 2091, 2092, 2093, 2094, 2101, 2102, 2111, 2116, 2117, 2120, 2130, 2132, 2133, 2135, 2136, 2138, 2147], "though": [1, 11, 28, 64, 66, 69, 154, 490, 800, 901, 904, 916, 921, 1135, 1136, 1138, 1203, 1207, 1213, 1215, 1216, 1287, 1290, 1384, 1794, 2044, 2048, 2066, 2067, 2075, 2078, 2081, 2082, 2084, 2091, 2092, 2101, 2104, 2116, 2133, 2135, 2147], "signatur": [1, 12, 23, 30, 40, 52, 53, 55, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 86, 402, 491, 492, 560, 916, 917, 935, 936, 997, 1289, 1548, 1730, 1731, 1732, 1735, 1736, 1738, 1759, 1780, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1954, 2051, 2071, 2078, 2081, 2082, 2097, 2099, 2102, 2109, 2114, 2134, 2138, 2146], "veri": [1, 4, 7, 8, 18, 23, 24, 59, 61, 64, 1003, 1178, 1186, 1188, 1202, 1352, 1510, 1511, 1512, 1738, 1739, 1740, 1753, 1810, 1839, 1845, 1921, 1925, 1982, 2007, 2046, 2064, 2075, 2081, 2083, 2086, 2087, 2089, 2091, 2092, 2095, 2101, 2102, 2108, 2109, 2110, 2114, 2120, 2133, 2135, 2136, 2138, 2144, 2145], "unlik": [1, 3, 7, 35, 53, 55, 61, 492, 497, 926, 1116, 1155, 1158, 1162, 1325, 1326, 1345, 1348, 1353, 1357, 1387, 1390, 1392, 1520, 1741, 1742, 1805, 1876, 1965, 2004, 2046, 2047, 2064, 2067, 2078, 2091, 2093, 2117, 2120, 2123, 2132, 2136], "coverag": [1, 7, 52, 56, 64, 1180, 1181, 2043, 2044, 2049, 2066, 2104, 2114, 2146], "plan": [1, 2, 7, 9, 28, 30, 34, 906, 1738, 1857, 2067, 2073, 2075, 2081, 2102, 2114, 2120, 2144, 2145], "consid": [1, 5, 8, 24, 28, 33, 37, 47, 52, 53, 55, 60, 63, 64, 65, 490, 699, 784, 790, 800, 919, 921, 922, 930, 1005, 1106, 1107, 1108, 1109, 1110, 1140, 1176, 1278, 1282, 1285, 1289, 1330, 1332, 1333, 1334, 1335, 1343, 1344, 1347, 1352, 1355, 1483, 1494, 1548, 1551, 1600, 1619, 1654, 1665, 1725, 1739, 1740, 1753, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1789, 1826, 1841, 1895, 1914, 1949, 1954, 1983, 1984, 1985, 1986, 2042, 2044, 2047, 2054, 2071, 2074, 2075, 2076, 2081, 2083, 2084, 2086, 2089, 2092, 2097, 2101, 2102, 2103, 2105, 2110, 2111, 2114, 2117, 2120, 2121, 2132, 2133, 2136, 2144, 2146, 2147], "ad": [1, 3, 9, 14, 19, 23, 24, 28, 32, 33, 35, 37, 44, 55, 58, 60, 61, 63, 64, 225, 226, 317, 323, 475, 519, 685, 691, 692, 693, 694, 695, 696, 740, 906, 909, 910, 911, 919, 920, 921, 922, 926, 927, 928, 930, 939, 951, 1119, 1123, 1180, 1181, 1183, 1196, 1203, 1289, 1303, 1361, 1367, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1554, 1555, 1557, 1562, 1563, 1577, 1588, 1592, 1597, 1600, 1632, 1633, 1634, 1651, 1679, 1680, 1681, 1706, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1759, 1766, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1792, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1861, 1862, 1863, 1931, 1936, 1950, 2042, 2044, 2046, 2059, 2060, 2066, 2074, 2082, 2084, 2086, 2088, 2089, 2094, 2102, 2103, 2104, 2107, 2114, 2119, 2123, 2131, 2132, 2135, 2136, 2140, 2141, 2143, 2144, 2147], "tutori": [1, 3, 9, 15, 28, 29, 32, 55, 64, 906, 909, 910, 911, 914, 916, 1998, 2043, 2044, 2051, 2054, 2068, 2081, 2088, 2089, 2091, 2094, 2099, 2104, 2127, 2135, 2136, 2138], "how": [1, 3, 5, 7, 8, 9, 12, 15, 17, 19, 23, 28, 30, 34, 39, 47, 48, 50, 55, 56, 57, 59, 60, 64, 66, 74, 75, 82, 237, 419, 490, 491, 492, 790, 798, 799, 802, 852, 870, 872, 873, 906, 909, 910, 911, 914, 916, 917, 926, 927, 935, 936, 1020, 1102, 1123, 1177, 1186, 1197, 1209, 1217, 1243, 1289, 1300, 1361, 1494, 1548, 1600, 1601, 1693, 1725, 1738, 1780, 1792, 1805, 1877, 1901, 1915, 1926, 2043, 2044, 2046, 2047, 2051, 2054, 2055, 2058, 2064, 2065, 2066, 2068, 2074, 2077, 2078, 2080, 2082, 2083, 2084, 2086, 2089, 2091, 2093, 2094, 2099, 2103, 2104, 2107, 2109, 2110, 2111, 2114, 2119, 2127, 2132, 2133, 2138, 2139, 2143, 2147, 2149], "major": [1, 6, 7, 8, 9, 1046, 1958, 2043, 2047, 2084, 2101, 2132, 2136, 2138, 2139], "contain": [1, 2, 3, 5, 11, 14, 15, 23, 28, 29, 30, 32, 34, 35, 37, 38, 40, 41, 45, 48, 53, 55, 63, 64, 66, 67, 72, 75, 85, 91, 158, 195, 199, 212, 294, 315, 317, 319, 323, 325, 475, 487, 548, 607, 611, 691, 702, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 765, 803, 822, 846, 852, 888, 903, 904, 905, 916, 917, 919, 920, 921, 922, 923, 924, 925, 943, 951, 952, 953, 961, 963, 967, 985, 1000, 1001, 1005, 1030, 1031, 1032, 1033, 1034, 1064, 1119, 1153, 1154, 1156, 1162, 1171, 1183, 1184, 1187, 1188, 1247, 1248, 1251, 1252, 1260, 1264, 1280, 1287, 1289, 1290, 1296, 1297, 1300, 1305, 1306, 1309, 1320, 1326, 1327, 1328, 1329, 1331, 1333, 1335, 1336, 1352, 1361, 1379, 1383, 1390, 1434, 1440, 1452, 1461, 1483, 1484, 1490, 1491, 1494, 1499, 1500, 1502, 1507, 1518, 1519, 1540, 1548, 1549, 1550, 1555, 1558, 1564, 1566, 1577, 1581, 1588, 1600, 1607, 1637, 1645, 1646, 1648, 1721, 1728, 1731, 1732, 1738, 1746, 1747, 1754, 1755, 1756, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1787, 1788, 1791, 1793, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1819, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1847, 1850, 1875, 1889, 1893, 1953, 1954, 1958, 1975, 1982, 1984, 1986, 1991, 1992, 1993, 1997, 2003, 2007, 2043, 2044, 2046, 2047, 2048, 2051, 2054, 2055, 2059, 2060, 2066, 2067, 2069, 2071, 2072, 2074, 2075, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2088, 2089, 2092, 2093, 2094, 2097, 2099, 2101, 2102, 2103, 2104, 2106, 2107, 2109, 2111, 2113, 2114, 2116, 2117, 2119, 2120, 2123, 2124, 2125, 2129, 2130, 2131, 2133, 2134, 2135, 2136, 2138, 2139, 2142, 2143, 2144, 2145, 2146, 2147], "build": [1, 2, 3, 8, 9, 14, 15, 19, 28, 30, 35, 45, 47, 52, 64, 1289, 1299, 1548, 1595, 1619, 1654, 2043, 2044, 2054, 2068, 2075, 2099, 2104, 2110, 2119, 2120, 2126, 2127, 2130, 2133, 2145], "basic": [1, 3, 7, 9, 12, 30, 47, 64, 66, 67, 1180, 1181, 1182, 1296, 1362, 1738, 1832, 2043, 2048, 2068, 2076, 2078, 2080, 2086, 2102, 2110, 2118, 2119, 2134, 2136, 2138], "jacobian": [1, 35, 56, 57, 59, 60, 904, 909, 919, 922, 924, 925, 930, 931, 1181, 1182, 1183, 1187, 1188, 2007, 2075, 2081, 2086], "hessian": [1, 56, 59, 60, 920, 923, 1181, 1182, 2073, 2082], "etc": [1, 3, 5, 11, 12, 23, 24, 28, 33, 35, 37, 47, 48, 52, 53, 55, 803, 870, 871, 872, 939, 985, 997, 1205, 1286, 1289, 1483, 1548, 1738, 1879, 2042, 2046, 2047, 2051, 2054, 2081, 2082, 2083, 2089, 2091, 2097, 2099, 2101, 2102, 2104, 2109, 2114, 2116, 2119, 2123, 2130, 2134, 2143], "user": [1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 19, 23, 24, 28, 29, 30, 33, 34, 35, 36, 37, 40, 44, 47, 48, 51, 53, 55, 56, 59, 60, 63, 64, 66, 79, 86, 154, 339, 490, 737, 743, 744, 745, 750, 751, 761, 769, 800, 804, 807, 847, 865, 872, 873, 904, 911, 914, 916, 917, 925, 985, 1019, 1055, 1170, 1176, 1177, 1192, 1203, 1289, 1326, 1361, 1548, 1592, 1594, 1595, 1596, 1706, 1731, 1732, 1738, 1746, 1747, 1756, 1770, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 2042, 2043, 2044, 2046, 2047, 2051, 2054, 2059, 2064, 2066, 2067, 2071, 2074, 2075, 2076, 2078, 2081, 2086, 2087, 2088, 2089, 2091, 2094, 2097, 2099, 2101, 2103, 2104, 2106, 2109, 2110, 2114, 2116, 2117, 2118, 2119, 2121, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2141, 2143, 2145, 2146], "input": [1, 2, 3, 5, 9, 11, 12, 15, 21, 23, 24, 27, 28, 29, 32, 33, 34, 35, 36, 40, 53, 55, 56, 57, 58, 59, 60, 61, 64, 66, 73, 74, 75, 79, 82, 84, 86, 87, 88, 91, 154, 264, 284, 305, 405, 487, 503, 521, 613, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 725, 733, 734, 739, 740, 743, 744, 745, 746, 747, 748, 750, 751, 761, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 796, 797, 798, 799, 800, 802, 804, 805, 807, 808, 810, 822, 825, 827, 828, 846, 847, 849, 850, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 911, 912, 914, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 943, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 967, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 982, 983, 985, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1015, 1033, 1061, 1062, 1064, 1098, 1099, 1100, 1101, 1103, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1188, 1199, 1201, 1203, 1230, 1231, 1232, 1233, 1234, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1271, 1274, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1289, 1292, 1293, 1296, 1297, 1301, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1380, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1413, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1746, 1747, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1774, 1775, 1776, 1780, 1781, 1782, 1789, 1792, 1793, 1794, 1796, 1797, 1799, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1831, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1865, 1867, 1869, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1888, 1890, 1891, 1892, 1895, 1896, 1897, 1898, 1901, 1908, 1909, 1910, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1965, 1968, 1969, 1970, 1971, 1972, 1974, 1976, 1977, 1978, 1979, 1982, 1983, 1985, 1988, 1989, 1990, 1991, 1992, 1994, 1995, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2011, 2041, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2054, 2057, 2066, 2067, 2068, 2073, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2088, 2089, 2092, 2093, 2094, 2096, 2097, 2099, 2101, 2103, 2104, 2105, 2107, 2108, 2109, 2110, 2114, 2115, 2117, 2118, 2120, 2121, 2124, 2125, 2127, 2132, 2133, 2134, 2135, 2136, 2140, 2143, 2144, 2145, 2146, 2149], "set": [1, 2, 3, 5, 8, 9, 13, 14, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 37, 40, 45, 47, 48, 50, 51, 52, 53, 55, 58, 59, 62, 63, 64, 66, 81, 83, 91, 154, 158, 258, 334, 449, 450, 451, 452, 453, 462, 500, 503, 524, 584, 585, 685, 740, 746, 748, 765, 784, 790, 798, 799, 800, 804, 823, 824, 825, 829, 830, 831, 834, 835, 852, 865, 869, 870, 872, 873, 876, 889, 901, 903, 904, 911, 915, 916, 917, 919, 920, 921, 922, 923, 924, 925, 927, 928, 950, 962, 967, 978, 982, 983, 991, 999, 1012, 1016, 1028, 1044, 1053, 1065, 1066, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1120, 1121, 1122, 1171, 1176, 1185, 1191, 1196, 1204, 1252, 1269, 1270, 1289, 1293, 1297, 1299, 1301, 1303, 1305, 1306, 1325, 1326, 1329, 1335, 1342, 1344, 1346, 1347, 1359, 1360, 1361, 1362, 1376, 1379, 1382, 1404, 1408, 1409, 1410, 1411, 1428, 1429, 1430, 1452, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1492, 1499, 1502, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1533, 1535, 1539, 1540, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1558, 1562, 1563, 1564, 1580, 1581, 1588, 1592, 1594, 1596, 1597, 1598, 1610, 1611, 1619, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1639, 1640, 1641, 1642, 1647, 1654, 1658, 1665, 1666, 1675, 1676, 1677, 1690, 1692, 1698, 1706, 1725, 1737, 1738, 1741, 1742, 1754, 1760, 1789, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1843, 1857, 1864, 1866, 1870, 1872, 1873, 1881, 1882, 1893, 1894, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1922, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1952, 1953, 1959, 1973, 1983, 1984, 1985, 1986, 1995, 1998, 1999, 2002, 2003, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2042, 2044, 2046, 2047, 2048, 2051, 2053, 2056, 2057, 2058, 2059, 2060, 2062, 2064, 2067, 2071, 2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2097, 2100, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2119, 2121, 2122, 2124, 2125, 2127, 2129, 2130, 2133, 2135, 2136, 2137, 2138, 2140, 2141, 2142, 2144, 2145, 2146, 2148, 2149], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 32, 33, 34, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 72, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 91, 92, 154, 158, 258, 262, 327, 339, 462, 490, 491, 492, 517, 519, 549, 618, 621, 685, 692, 734, 746, 747, 748, 753, 762, 763, 765, 773, 774, 777, 778, 779, 790, 797, 798, 799, 800, 804, 807, 822, 829, 832, 833, 835, 846, 852, 865, 869, 870, 872, 873, 874, 890, 891, 900, 901, 902, 904, 906, 907, 909, 910, 911, 914, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 935, 936, 937, 939, 942, 953, 970, 983, 985, 986, 992, 998, 1005, 1016, 1018, 1020, 1030, 1032, 1034, 1042, 1043, 1053, 1061, 1063, 1067, 1069, 1071, 1075, 1076, 1102, 1119, 1120, 1123, 1124, 1137, 1139, 1140, 1141, 1142, 1155, 1158, 1171, 1176, 1177, 1178, 1179, 1181, 1182, 1183, 1186, 1187, 1188, 1193, 1196, 1197, 1199, 1201, 1202, 1203, 1207, 1213, 1215, 1216, 1226, 1228, 1232, 1233, 1243, 1246, 1251, 1252, 1280, 1286, 1287, 1289, 1290, 1292, 1293, 1295, 1296, 1300, 1301, 1303, 1305, 1306, 1311, 1314, 1321, 1329, 1332, 1336, 1337, 1342, 1345, 1348, 1349, 1353, 1359, 1361, 1378, 1379, 1381, 1391, 1401, 1402, 1416, 1441, 1443, 1444, 1445, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1495, 1496, 1499, 1504, 1505, 1506, 1508, 1514, 1516, 1517, 1518, 1521, 1522, 1523, 1534, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1550, 1553, 1554, 1555, 1557, 1558, 1559, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1576, 1577, 1580, 1585, 1588, 1591, 1592, 1593, 1594, 1595, 1596, 1598, 1599, 1601, 1612, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1649, 1650, 1665, 1679, 1680, 1681, 1699, 1706, 1725, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1741, 1742, 1744, 1759, 1780, 1781, 1784, 1787, 1792, 1794, 1798, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1836, 1837, 1839, 1843, 1845, 1854, 1858, 1866, 1870, 1880, 1886, 1889, 1901, 1903, 1905, 1930, 1933, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1952, 1953, 1954, 1958, 1959, 1973, 1977, 1980, 1982, 1990, 1991, 1994, 1996, 1998, 2002, 2003, 2007, 2012, 2019, 2020, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2053, 2054, 2055, 2056, 2057, 2059, 2060, 2061, 2064, 2065, 2066, 2067, 2068, 2071, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2085, 2086, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2107, 2109, 2110, 2111, 2114, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2124, 2125, 2126, 2127, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2137, 2138, 2139, 2140, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2152], "lambda": [1, 12, 23, 30, 35, 58, 61, 63, 64, 66, 74, 75, 262, 491, 492, 935, 936, 971, 1178, 1183, 1187, 1188, 1203, 1325, 1326, 1327, 1328, 1361, 1503, 1586, 1598, 1695, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1826, 1832, 1835, 1838, 1932, 2007, 2048, 2075, 2081, 2082, 2101, 2102, 2109, 2121, 2136, 2146], "captur": [1, 11, 12, 15, 33, 52, 53, 64, 66, 69, 74, 75, 90, 91, 685, 983, 985, 997, 1016, 1018, 1053, 1059, 1064, 1292, 1402, 1415, 1803, 1804, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 2012, 2044, 2048, 2053, 2081, 2082, 2087, 2096, 2097, 2099, 2102, 2104, 2125, 2126, 2127, 2130, 2132, 2134, 2136, 2143, 2145], "f": [1, 10, 24, 28, 34, 35, 37, 39, 41, 44, 45, 52, 53, 56, 57, 60, 61, 63, 64, 66, 67, 177, 262, 339, 381, 612, 909, 910, 950, 1005, 1035, 1137, 1139, 1146, 1155, 1177, 1178, 1180, 1181, 1182, 1183, 1187, 1188, 1191, 1243, 1289, 1297, 1300, 1301, 1361, 1513, 1515, 1516, 1517, 1519, 1548, 1598, 1608, 1621, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1645, 1646, 1649, 1650, 1656, 1690, 1692, 1693, 1706, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1889, 1964, 2007, 2044, 2046, 2047, 2051, 2059, 2065, 2066, 2075, 2078, 2081, 2083, 2086, 2087, 2089, 2094, 2095, 2097, 2098, 2099, 2102, 2109, 2114, 2119, 2121, 2131, 2132, 2136, 2144, 2146], "three": [1, 2, 6, 9, 28, 32, 55, 57, 60, 64, 89, 899, 1117, 1119, 1243, 1252, 1333, 1336, 1337, 1338, 1353, 1381, 1459, 1477, 1480, 1517, 1520, 1543, 1706, 1753, 1794, 1832, 1901, 2047, 2075, 2078, 2080, 2081, 2099, 2102, 2104, 2109, 2111, 2114, 2119, 2130, 2133, 2142], "anoth": [1, 5, 7, 12, 23, 24, 28, 30, 33, 35, 36, 37, 50, 52, 55, 64, 92, 490, 993, 1016, 1018, 1019, 1023, 1170, 1199, 1203, 1209, 1224, 1225, 1299, 1325, 1326, 1329, 1353, 1416, 1490, 1491, 1549, 1558, 1728, 1746, 1747, 1754, 1897, 2013, 2044, 2046, 2047, 2053, 2055, 2059, 2074, 2075, 2077, 2078, 2081, 2084, 2089, 2091, 2093, 2095, 2102, 2110, 2111, 2114, 2120, 2123, 2130, 2131, 2133, 2136, 2138, 2141, 2144, 2147], "constant": [1, 12, 23, 52, 53, 64, 66, 67, 71, 72, 75, 77, 749, 780, 830, 831, 986, 1102, 1159, 1160, 1161, 1210, 1228, 1286, 1289, 1293, 1305, 1337, 1362, 1472, 1473, 1474, 1491, 1494, 1501, 1557, 1580, 1597, 1600, 1651, 1654, 1693, 1754, 1801, 1805, 1824, 1829, 1832, 1980, 2045, 2047, 2074, 2081, 2089, 2093, 2099, 2101, 2114, 2133, 2135, 2136, 2138, 2145], "boolean": [1, 12, 14, 35, 47, 64, 66, 74, 75, 90, 92, 404, 406, 900, 916, 917, 926, 955, 957, 958, 960, 989, 997, 1018, 1019, 1023, 1124, 1203, 1210, 1217, 1232, 1246, 1278, 1279, 1280, 1281, 1282, 1285, 1314, 1362, 1378, 1383, 1415, 1416, 1445, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1548, 1563, 1588, 1592, 1706, 1737, 1756, 1759, 1857, 1952, 1953, 1977, 2002, 2003, 2012, 2013, 2046, 2048, 2071, 2078, 2081, 2116, 2117, 2119, 2120, 2121, 2123, 2133, 2136], "flag": [1, 2, 5, 14, 28, 29, 36, 48, 51, 52, 55, 58, 60, 64, 740, 804, 884, 919, 921, 926, 927, 928, 952, 961, 974, 975, 976, 983, 990, 991, 1049, 1170, 1176, 1178, 1179, 1181, 1182, 1183, 1187, 1188, 1247, 1248, 1270, 1277, 1361, 1381, 1554, 1612, 1665, 1666, 1738, 1756, 1759, 1789, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1901, 1907, 1933, 1943, 1982, 1995, 2007, 2043, 2044, 2047, 2051, 2059, 2064, 2075, 2078, 2081, 2092, 2093, 2094, 2099, 2102, 2104, 2119, 2120, 2136, 2137, 2144, 2145], "inform": [1, 2, 3, 4, 5, 7, 8, 9, 17, 18, 20, 22, 23, 24, 28, 29, 30, 32, 33, 34, 37, 39, 40, 43, 47, 48, 52, 53, 55, 57, 62, 64, 81, 195, 212, 259, 317, 325, 491, 492, 502, 519, 521, 622, 685, 740, 803, 806, 921, 926, 927, 930, 931, 935, 936, 954, 1035, 1123, 1154, 1156, 1177, 1217, 1226, 1286, 1289, 1306, 1319, 1326, 1335, 1475, 1476, 1477, 1478, 1479, 1480, 1508, 1518, 1544, 1545, 1546, 1548, 1554, 1563, 1564, 1576, 1592, 1594, 1596, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1646, 1665, 1706, 1725, 1726, 1727, 1737, 1738, 1780, 1792, 1801, 1823, 1856, 1883, 1901, 1907, 1933, 1995, 2044, 2047, 2051, 2053, 2054, 2067, 2068, 2071, 2075, 2077, 2078, 2080, 2081, 2088, 2089, 2092, 2097, 2099, 2102, 2103, 2104, 2117, 2119, 2120, 2121, 2125, 2129, 2132, 2133, 2135, 2136, 2139, 2143, 2145, 2147, 2149, 2150], "between": [1, 2, 3, 7, 11, 17, 18, 24, 28, 33, 35, 36, 47, 48, 50, 52, 53, 55, 62, 63, 64, 90, 200, 490, 517, 587, 588, 589, 591, 592, 611, 621, 694, 695, 696, 700, 701, 765, 777, 778, 779, 810, 868, 876, 895, 904, 909, 920, 922, 923, 924, 930, 931, 971, 983, 1005, 1018, 1027, 1029, 1077, 1082, 1096, 1097, 1102, 1119, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1170, 1171, 1199, 1202, 1213, 1243, 1250, 1286, 1289, 1301, 1325, 1326, 1348, 1353, 1415, 1441, 1460, 1461, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1486, 1487, 1488, 1492, 1494, 1499, 1508, 1514, 1524, 1525, 1526, 1527, 1528, 1529, 1539, 1541, 1542, 1543, 1548, 1551, 1552, 1553, 1557, 1577, 1580, 1581, 1582, 1597, 1598, 1600, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1653, 1679, 1680, 1681, 1695, 1712, 1722, 1738, 1746, 1747, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1831, 1832, 1839, 1841, 1850, 1858, 1862, 1863, 1868, 1869, 1873, 1898, 1951, 1952, 1953, 1954, 1958, 1979, 1980, 2002, 2003, 2044, 2046, 2047, 2048, 2051, 2054, 2062, 2064, 2067, 2071, 2074, 2075, 2077, 2078, 2080, 2086, 2087, 2089, 2091, 2093, 2094, 2096, 2097, 2099, 2101, 2104, 2105, 2109, 2111, 2114, 2116, 2117, 2119, 2124, 2130, 2133, 2143, 2145], "well": [1, 3, 5, 7, 9, 14, 19, 24, 28, 38, 47, 52, 55, 60, 61, 64, 65, 621, 797, 831, 834, 872, 1061, 1181, 1182, 1289, 1293, 1300, 1305, 1325, 1326, 1327, 1329, 1335, 1348, 1353, 1400, 1462, 1463, 1464, 1483, 1518, 1548, 1588, 1675, 1676, 1677, 1738, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1857, 1991, 2044, 2047, 2054, 2065, 2067, 2071, 2074, 2075, 2078, 2081, 2082, 2084, 2086, 2089, 2091, 2093, 2097, 2099, 2102, 2104, 2107, 2109, 2111, 2114, 2118, 2119, 2123, 2127, 2131, 2133, 2135, 2136, 2137, 2141, 2145], "relat": [1, 6, 7, 9, 23, 28, 33, 37, 52, 53, 54, 55, 60, 66, 67, 72, 75, 81, 685, 806, 990, 1199, 1243, 1329, 1494, 1580, 1600, 1738, 1847, 1996, 2067, 2075, 2094, 2101, 2102, 2109, 2114, 2115, 2121, 2127, 2136, 2146], "mechan": [1, 8, 28, 30, 41, 45, 47, 53, 64, 890, 926, 927, 985, 1123, 1289, 1548, 1609, 1706, 1792, 1973, 2043, 2064, 2067, 2071, 2081, 2084, 2088, 2089, 2107, 2109, 2110, 2130, 2133], "confus": [1, 8, 66, 1289, 1548, 2075, 2078, 2102, 2114, 2137], "spars": [1, 11, 194, 195, 212, 222, 327, 332, 346, 347, 439, 547, 548, 549, 550, 585, 587, 588, 589, 590, 591, 592, 618, 694, 750, 751, 930, 931, 1093, 1230, 1254, 1274, 1362, 1384, 1394, 1444, 1490, 1491, 1582, 1645, 1646, 1671, 1806, 1827, 1847, 1895, 1928, 1933, 1940, 1941, 1942, 1943, 1944, 1945, 1950, 1959, 1979, 1995, 1996, 2043, 2045, 2049, 2054, 2071, 2073, 2092, 2093, 2100, 2106, 2117, 2118, 2121, 2132, 2140], "param": [1, 2, 11, 30, 32, 35, 39, 47, 55, 57, 59, 62, 64, 492, 769, 801, 1176, 1186, 1221, 1289, 1308, 1548, 1554, 1558, 1559, 1736, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1841, 2045, 2057, 2073, 2074, 2078, 2080, 2101, 2146], "receiv": [1, 7, 9, 23, 28, 30, 32, 33, 35, 53, 60, 63, 1075, 1289, 1548, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2047, 2060, 2064, 2074, 2075, 2091, 2109, 2110, 2111, 2114, 2132, 2145, 2147], "dure": [1, 5, 14, 18, 19, 24, 28, 30, 33, 37, 39, 41, 47, 52, 55, 63, 64, 66, 73, 83, 85, 86, 339, 492, 507, 508, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 799, 836, 900, 901, 911, 914, 916, 917, 1016, 1053, 1063, 1064, 1076, 1077, 1097, 1191, 1300, 1302, 1303, 1305, 1361, 1456, 1462, 1463, 1464, 1484, 1485, 1490, 1491, 1510, 1511, 1512, 1567, 1588, 1594, 1596, 1639, 1645, 1646, 1706, 1728, 1738, 1741, 1742, 1787, 1801, 1834, 1842, 1939, 1984, 1986, 2046, 2051, 2053, 2054, 2057, 2059, 2060, 2065, 2067, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2088, 2089, 2092, 2093, 2094, 2097, 2099, 2102, 2103, 2104, 2107, 2109, 2111, 2121, 2127, 2130, 2131, 2133, 2136, 2142, 2143, 2144, 2145, 2147], "accumul": [1, 2, 55, 154, 294, 317, 322, 323, 325, 475, 492, 691, 904, 925, 1203, 1359, 1738, 1804, 1806, 1995, 2044, 2045, 2060, 2075, 2078, 2080, 2083, 2092, 2101, 2103, 2105, 2109, 2110, 2114, 2132, 2133, 2136, 2140, 2145], "initi": [1, 2, 3, 4, 8, 17, 18, 20, 23, 24, 30, 32, 33, 34, 37, 40, 41, 47, 48, 51, 52, 55, 82, 91, 500, 503, 584, 717, 718, 719, 720, 721, 722, 725, 735, 736, 737, 738, 750, 751, 761, 765, 769, 872, 873, 890, 939, 993, 1018, 1028, 1035, 1050, 1055, 1056, 1059, 1060, 1086, 1120, 1121, 1122, 1236, 1265, 1287, 1289, 1302, 1303, 1361, 1362, 1379, 1426, 1462, 1463, 1464, 1465, 1467, 1478, 1479, 1480, 1484, 1490, 1491, 1499, 1500, 1502, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1548, 1556, 1563, 1564, 1565, 1566, 1588, 1598, 1645, 1728, 1737, 1738, 1741, 1742, 1753, 1756, 1759, 1787, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1843, 1897, 1898, 1899, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 2012, 2024, 2026, 2027, 2029, 2032, 2043, 2045, 2046, 2047, 2055, 2060, 2067, 2073, 2075, 2078, 2080, 2081, 2084, 2088, 2095, 2097, 2099, 2101, 2102, 2104, 2108, 2109, 2110, 2130, 2133, 2143, 2144, 2152], "memori": [1, 2, 3, 5, 11, 20, 24, 27, 30, 32, 35, 36, 53, 55, 59, 64, 154, 159, 174, 176, 179, 182, 183, 184, 199, 210, 213, 237, 244, 258, 271, 301, 329, 335, 341, 343, 344, 397, 449, 450, 451, 452, 453, 462, 467, 490, 503, 504, 528, 529, 584, 607, 621, 627, 739, 768, 889, 891, 904, 911, 914, 916, 930, 931, 937, 965, 980, 983, 1016, 1017, 1020, 1022, 1025, 1026, 1028, 1043, 1044, 1053, 1054, 1057, 1061, 1063, 1064, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1077, 1083, 1084, 1085, 1089, 1119, 1120, 1121, 1122, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1182, 1184, 1188, 1289, 1307, 1335, 1361, 1398, 1400, 1401, 1408, 1410, 1427, 1491, 1518, 1519, 1548, 1592, 1593, 1594, 1596, 1706, 1724, 1738, 1746, 1747, 1753, 1780, 1792, 1799, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1866, 1867, 1869, 1870, 1871, 1872, 1897, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 1995, 2007, 2020, 2041, 2043, 2044, 2055, 2057, 2062, 2064, 2066, 2067, 2068, 2075, 2081, 2084, 2091, 2097, 2099, 2103, 2104, 2109, 2114, 2116, 2117, 2118, 2120, 2121, 2123, 2130, 2135, 2136, 2138, 2142, 2144], "overlap": [1, 23, 24, 28, 30, 32, 55, 64, 490, 685, 889, 930, 931, 1122, 1177, 1286, 1494, 1600, 1738, 1954, 1995, 2078, 2080, 2084, 2117, 2132, 2136, 2144], "dens": [1, 32, 222, 549, 550, 587, 588, 589, 590, 591, 592, 952, 961, 1247, 1248, 1309, 1362, 1827, 1928, 1931, 1935, 1936, 1939, 1940, 1941, 1942, 1944, 1945, 1950, 1959, 1995, 2067, 2071, 2093, 2114, 2117, 2132], "stride": [1, 11, 53, 142, 258, 343, 449, 450, 451, 452, 453, 503, 524, 548, 585, 587, 588, 589, 591, 592, 621, 717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 735, 736, 743, 744, 745, 746, 747, 748, 773, 774, 777, 778, 779, 787, 788, 876, 889, 952, 961, 1120, 1122, 1132, 1137, 1155, 1171, 1174, 1175, 1203, 1216, 1247, 1248, 1254, 1289, 1299, 1303, 1309, 1360, 1376, 1394, 1457, 1458, 1459, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1515, 1516, 1517, 1524, 1525, 1526, 1527, 1528, 1529, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1560, 1600, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1648, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1724, 1738, 1798, 1862, 1863, 1866, 1868, 1869, 1870, 1872, 1873, 1880, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1932, 1935, 1979, 1984, 1986, 2005, 2040, 2045, 2048, 2051, 2065, 2067, 2099, 2100, 2109, 2114, 2116, 2117, 2119, 2120, 2121, 2132, 2133, 2134, 2135, 2136, 2140, 2145], "otherwis": [1, 2, 3, 5, 7, 9, 11, 14, 19, 23, 28, 29, 35, 36, 40, 52, 55, 56, 60, 64, 91, 213, 325, 332, 336, 340, 342, 346, 347, 499, 508, 564, 584, 585, 587, 607, 621, 627, 685, 691, 692, 693, 694, 695, 698, 700, 701, 702, 704, 740, 765, 773, 774, 789, 800, 825, 829, 830, 851, 872, 873, 876, 903, 909, 916, 917, 921, 930, 950, 951, 967, 1059, 1119, 1125, 1158, 1170, 1202, 1203, 1216, 1219, 1280, 1286, 1289, 1292, 1296, 1302, 1311, 1335, 1350, 1359, 1361, 1362, 1377, 1382, 1387, 1389, 1390, 1392, 1394, 1395, 1439, 1442, 1458, 1459, 1481, 1483, 1486, 1487, 1488, 1492, 1499, 1503, 1504, 1505, 1506, 1508, 1518, 1534, 1548, 1552, 1553, 1554, 1555, 1556, 1558, 1564, 1565, 1567, 1580, 1586, 1588, 1591, 1592, 1594, 1596, 1597, 1598, 1622, 1623, 1656, 1658, 1659, 1663, 1699, 1710, 1738, 1753, 1758, 1759, 1780, 1781, 1783, 1784, 1792, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1821, 1823, 1824, 1825, 1826, 1827, 1845, 1847, 1855, 1857, 1864, 1873, 1880, 1893, 1901, 1908, 1952, 1953, 1954, 1957, 1990, 1991, 1992, 2002, 2003, 2010, 2042, 2044, 2046, 2047, 2051, 2054, 2057, 2065, 2067, 2074, 2081, 2082, 2091, 2097, 2098, 2099, 2104, 2105, 2107, 2108, 2109, 2111, 2115, 2116, 2117, 2118, 2119, 2121, 2127, 2146], "rowmajor": [1, 1738], "contigu": [1, 11, 24, 30, 335, 503, 524, 621, 1493, 1551, 1695, 1738, 1746, 1747, 1874, 1880, 1958, 2045, 2066, 2067, 2071, 2100, 2106, 2114, 2116, 2118, 2133], "create_graph": [1, 154, 492, 904, 919, 920, 921, 922, 923, 924, 925, 2045, 2074, 2081], "preserv": [1, 5, 12, 23, 33, 35, 52, 55, 64, 91, 503, 784, 790, 865, 887, 890, 1160, 1161, 1177, 1216, 1289, 1293, 1300, 1548, 1549, 1558, 1601, 1665, 1725, 1802, 1889, 1893, 1930, 1965, 1973, 2000, 2044, 2051, 2057, 2065, 2067, 2073, 2078, 2082, 2093, 2096, 2097, 2099, 2109, 2117, 2130, 2135], "replac": [1, 14, 19, 23, 24, 28, 30, 46, 48, 52, 55, 57, 58, 59, 60, 61, 64, 86, 87, 89, 123, 425, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 752, 822, 849, 869, 974, 1064, 1119, 1176, 1177, 1203, 1294, 1297, 1307, 1379, 1380, 1434, 1438, 1580, 1591, 1728, 1755, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1789, 1791, 1857, 1954, 1958, 1982, 2044, 2045, 2047, 2051, 2057, 2078, 2081, 2082, 2086, 2088, 2091, 2095, 2099, 2100, 2102, 2104, 2121, 2130, 2131, 2132, 2136, 2138, 2144], "preexist": [1, 2103, 2132, 2135], "behavior": [1, 2, 7, 11, 14, 20, 22, 24, 28, 29, 30, 32, 33, 35, 36, 40, 45, 48, 52, 53, 55, 59, 60, 63, 64, 88, 92, 258, 323, 475, 503, 517, 548, 621, 692, 790, 799, 835, 889, 903, 916, 917, 959, 965, 967, 969, 982, 985, 1015, 1114, 1119, 1120, 1121, 1122, 1164, 1172, 1173, 1177, 1217, 1289, 1300, 1303, 1305, 1335, 1342, 1346, 1359, 1360, 1361, 1376, 1384, 1391, 1416, 1484, 1487, 1508, 1518, 1548, 1564, 1588, 1601, 1619, 1654, 1724, 1725, 1728, 1729, 1738, 1740, 1791, 1793, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1851, 1857, 1873, 1880, 1921, 1958, 1980, 1995, 2042, 2044, 2048, 2049, 2051, 2053, 2055, 2065, 2067, 2069, 2076, 2078, 2081, 2082, 2092, 2093, 2094, 2099, 2101, 2102, 2105, 2106, 2109, 2115, 2118, 2132, 2133, 2135, 2137, 2148], "let": [1, 7, 8, 23, 24, 33, 35, 48, 60, 64, 490, 500, 975, 976, 978, 1203, 1212, 1243, 1289, 1309, 1319, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1335, 1336, 1339, 1341, 1348, 1350, 1352, 1353, 1548, 1738, 1753, 1973, 2051, 2065, 2066, 2075, 2078, 2080, 2081, 2082, 2084, 2089, 2091, 2092, 2093, 2094, 2095, 2102, 2110, 2111, 2114, 2119, 2130, 2131, 2133, 2135, 2136, 2137, 2138, 2139, 2144, 2145, 2148], "first": [1, 4, 5, 7, 9, 14, 18, 19, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 40, 44, 47, 48, 52, 53, 55, 61, 64, 66, 75, 78, 92, 220, 258, 290, 294, 593, 614, 691, 694, 696, 699, 765, 799, 800, 822, 865, 868, 870, 885, 886, 895, 900, 901, 902, 903, 905, 916, 917, 925, 930, 939, 948, 950, 951, 955, 956, 958, 959, 960, 963, 965, 967, 981, 1015, 1018, 1031, 1107, 1109, 1110, 1111, 1116, 1119, 1124, 1137, 1139, 1158, 1173, 1178, 1179, 1181, 1182, 1183, 1187, 1188, 1201, 1216, 1232, 1243, 1246, 1254, 1255, 1256, 1266, 1278, 1287, 1297, 1302, 1303, 1309, 1314, 1319, 1322, 1329, 1345, 1348, 1355, 1356, 1358, 1361, 1362, 1378, 1384, 1387, 1390, 1391, 1392, 1394, 1413, 1416, 1434, 1440, 1445, 1448, 1452, 1458, 1459, 1465, 1476, 1477, 1479, 1480, 1490, 1491, 1493, 1498, 1499, 1513, 1516, 1517, 1518, 1533, 1540, 1542, 1543, 1564, 1577, 1636, 1724, 1728, 1738, 1746, 1747, 1756, 1757, 1759, 1770, 1780, 1786, 1807, 1808, 1809, 1810, 1811, 1823, 1826, 1827, 1831, 1836, 1839, 1841, 1847, 1857, 1858, 1884, 1885, 1893, 1901, 1920, 1935, 1938, 1943, 1974, 1975, 1979, 1984, 1986, 1992, 2001, 2004, 2007, 2009, 2012, 2026, 2042, 2044, 2046, 2047, 2051, 2054, 2058, 2064, 2065, 2067, 2074, 2075, 2078, 2081, 2083, 2084, 2085, 2086, 2089, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2101, 2103, 2104, 2109, 2110, 2111, 2113, 2114, 2115, 2119, 2124, 2127, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2143, 2144, 2145, 2146], "accord": [1, 9, 30, 33, 34, 37, 52, 804, 872, 873, 891, 953, 965, 1117, 1253, 1350, 1383, 1434, 1452, 1491, 1560, 1706, 1728, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1832, 1839, 1842, 1858, 1921, 1946, 1959, 1974, 2008, 2047, 2060, 2066, 2067, 2089, 2093, 2095, 2102, 2111, 2121], "retain": [1, 9, 28, 698, 700, 701, 704, 885, 886, 891, 1293, 1311, 1342, 1346, 1359, 1377, 1387, 1389, 1390, 1392, 1395, 1439, 1440, 1441, 1442, 1468, 1794, 1855, 1858, 1889, 1952, 1953, 1957, 1983, 1984, 1985, 1986, 2002, 2003, 2064, 2091, 2114], "over": [1, 5, 9, 11, 12, 19, 23, 24, 28, 29, 33, 35, 37, 45, 48, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 69, 74, 75, 78, 485, 685, 702, 743, 744, 745, 746, 747, 748, 771, 772, 777, 778, 779, 787, 788, 903, 916, 917, 939, 943, 970, 1029, 1075, 1077, 1082, 1097, 1098, 1099, 1100, 1101, 1119, 1176, 1180, 1182, 1186, 1188, 1199, 1201, 1243, 1251, 1289, 1305, 1322, 1342, 1346, 1358, 1359, 1361, 1369, 1389, 1391, 1442, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1491, 1494, 1495, 1496, 1502, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1536, 1539, 1540, 1541, 1542, 1543, 1548, 1551, 1552, 1553, 1555, 1562, 1563, 1577, 1580, 1581, 1583, 1588, 1597, 1600, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1649, 1650, 1666, 1672, 1675, 1676, 1677, 1679, 1680, 1681, 1690, 1691, 1698, 1706, 1732, 1737, 1744, 1755, 1791, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1862, 1863, 1878, 1937, 1939, 1952, 1953, 1954, 1957, 1975, 1990, 2002, 2003, 2007, 2047, 2051, 2060, 2064, 2065, 2066, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2086, 2089, 2091, 2092, 2097, 2101, 2104, 2109, 2110, 2114, 2122, 2123, 2130, 2132, 2133, 2134, 2135, 2136, 2145, 2147, 2148], "time": [1, 3, 4, 7, 8, 9, 14, 19, 23, 24, 28, 29, 30, 32, 33, 35, 36, 37, 44, 47, 48, 50, 52, 53, 55, 60, 63, 64, 66, 76, 77, 90, 91, 294, 317, 490, 491, 497, 621, 685, 690, 691, 692, 693, 694, 695, 696, 699, 750, 751, 761, 765, 769, 773, 774, 807, 809, 833, 852, 888, 925, 935, 936, 937, 938, 944, 946, 951, 963, 971, 973, 983, 998, 1005, 1018, 1019, 1023, 1064, 1077, 1097, 1100, 1111, 1133, 1134, 1140, 1141, 1142, 1148, 1159, 1160, 1161, 1169, 1173, 1182, 1183, 1184, 1187, 1188, 1197, 1207, 1217, 1278, 1286, 1289, 1297, 1302, 1305, 1306, 1310, 1315, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1334, 1335, 1336, 1339, 1341, 1345, 1348, 1350, 1352, 1353, 1361, 1362, 1384, 1394, 1402, 1415, 1433, 1434, 1436, 1446, 1454, 1455, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1491, 1494, 1495, 1496, 1499, 1510, 1511, 1512, 1518, 1520, 1534, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1560, 1561, 1563, 1564, 1585, 1588, 1600, 1601, 1602, 1603, 1619, 1622, 1623, 1649, 1650, 1695, 1696, 1697, 1714, 1730, 1731, 1732, 1735, 1736, 1737, 1738, 1753, 1754, 1757, 1759, 1793, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1835, 1845, 1846, 1857, 1879, 1885, 1935, 1949, 1954, 1955, 1975, 2007, 2012, 2013, 2026, 2043, 2046, 2047, 2048, 2051, 2053, 2055, 2057, 2064, 2073, 2075, 2077, 2080, 2081, 2083, 2084, 2086, 2088, 2089, 2091, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2109, 2110, 2111, 2114, 2119, 2125, 2126, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2141, 2142, 2144, 2147, 2149], "4": [1, 3, 5, 11, 12, 18, 19, 21, 23, 24, 28, 30, 32, 33, 34, 35, 36, 37, 45, 47, 52, 53, 60, 64, 66, 67, 68, 71, 72, 74, 75, 76, 77, 195, 212, 246, 258, 293, 315, 317, 319, 321, 325, 405, 406, 449, 450, 475, 487, 491, 497, 500, 503, 517, 521, 527, 541, 548, 560, 562, 564, 588, 589, 611, 621, 688, 689, 690, 691, 694, 696, 697, 698, 700, 701, 702, 704, 744, 746, 747, 748, 751, 753, 762, 765, 778, 779, 833, 876, 885, 886, 887, 891, 892, 893, 894, 895, 896, 898, 899, 911, 914, 916, 917, 919, 922, 923, 924, 951, 954, 957, 961, 962, 963, 967, 969, 972, 973, 976, 977, 978, 981, 988, 994, 997, 1000, 1001, 1002, 1003, 1015, 1099, 1102, 1109, 1111, 1113, 1114, 1117, 1118, 1119, 1122, 1124, 1134, 1135, 1137, 1139, 1147, 1153, 1155, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1169, 1170, 1173, 1176, 1178, 1186, 1187, 1188, 1203, 1230, 1231, 1232, 1243, 1246, 1250, 1251, 1252, 1253, 1255, 1256, 1260, 1264, 1266, 1278, 1280, 1286, 1295, 1296, 1301, 1303, 1310, 1311, 1312, 1313, 1314, 1315, 1319, 1321, 1322, 1328, 1330, 1332, 1333, 1334, 1337, 1339, 1342, 1344, 1346, 1348, 1350, 1352, 1355, 1356, 1357, 1359, 1360, 1363, 1365, 1366, 1371, 1373, 1374, 1376, 1378, 1383, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1413, 1433, 1434, 1442, 1443, 1444, 1445, 1452, 1457, 1468, 1469, 1470, 1472, 1473, 1476, 1477, 1479, 1480, 1488, 1490, 1491, 1492, 1494, 1498, 1499, 1518, 1519, 1544, 1545, 1551, 1553, 1555, 1560, 1561, 1564, 1570, 1571, 1572, 1573, 1574, 1588, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1619, 1621, 1630, 1633, 1645, 1646, 1654, 1665, 1690, 1693, 1696, 1697, 1724, 1725, 1726, 1727, 1728, 1738, 1746, 1747, 1753, 1759, 1770, 1782, 1783, 1785, 1787, 1793, 1794, 1795, 1797, 1799, 1803, 1823, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1846, 1850, 1851, 1854, 1855, 1857, 1858, 1860, 1864, 1866, 1868, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1880, 1884, 1885, 1886, 1888, 1889, 1893, 1905, 1912, 1914, 1915, 1920, 1921, 1923, 1925, 1930, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1954, 1957, 1960, 1961, 1969, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1980, 1983, 1984, 1985, 1986, 1988, 1989, 1990, 1992, 1993, 1994, 1995, 2001, 2004, 2005, 2006, 2007, 2008, 2009, 2041, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2054, 2062, 2064, 2066, 2067, 2071, 2073, 2075, 2076, 2078, 2080, 2081, 2084, 2089, 2091, 2094, 2095, 2097, 2099, 2102, 2104, 2106, 2109, 2114, 2115, 2117, 2118, 2119, 2120, 2121, 2130, 2132, 2133, 2134, 2136, 2140, 2143, 2145], "fact": [1, 3, 8, 55, 499, 952, 961, 999, 1213, 1243, 1247, 1248, 1325, 1326, 1353, 2044, 2081, 2084, 2086, 2099, 2110, 2114, 2130, 2133, 2135, 2139], "reset": [1, 28, 30, 765, 829, 834, 904, 1016, 1067, 1069, 1083, 1084, 1085, 1289, 1499, 1548, 1563, 1565, 1737, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1847, 1864, 2060, 2099, 2108], "phase": [1, 19, 24, 799, 1325, 1326, 1839, 1958, 2045, 2095, 2136, 2145], "iter": [1, 2, 3, 7, 19, 24, 28, 29, 30, 32, 33, 35, 48, 51, 52, 55, 64, 66, 71, 939, 950, 988, 1030, 1031, 1032, 1033, 1034, 1064, 1067, 1069, 1091, 1201, 1289, 1362, 1548, 1549, 1550, 1558, 1559, 1738, 1739, 1740, 1743, 1744, 1745, 1752, 1754, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1788, 1790, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827, 1830, 1831, 1832, 1836, 1847, 1916, 1959, 2036, 2045, 2047, 2048, 2051, 2064, 2066, 2071, 2074, 2075, 2076, 2078, 2080, 2081, 2084, 2085, 2086, 2089, 2101, 2103, 2108, 2113, 2119, 2130, 2133, 2136, 2144, 2145, 2146], "recreat": [1, 2075, 2144], "valid": [1, 19, 25, 27, 28, 30, 33, 35, 45, 47, 52, 53, 64, 86, 91, 752, 753, 762, 797, 974, 985, 986, 992, 1061, 1119, 1191, 1203, 1213, 1287, 1289, 1290, 1311, 1325, 1326, 1335, 1336, 1337, 1348, 1353, 1384, 1475, 1476, 1477, 1629, 1630, 1631, 1654, 1728, 1765, 1770, 1774, 1800, 1801, 1828, 1829, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1857, 2044, 2045, 2046, 2047, 2051, 2066, 2067, 2075, 2078, 2081, 2087, 2093, 2099, 2101, 2103, 2109, 2110, 2132, 2133, 2134, 2141, 2145], "altern": [1, 9, 23, 28, 33, 64, 685, 822, 1180, 1181, 1252, 1297, 1361, 1577, 1594, 1596, 1673, 1738, 1799, 1827, 1899, 1900, 1995, 2041, 2042, 2048, 2075, 2087, 2089, 2092, 2093, 2095, 2120, 2136, 2143], "assign": [1, 7, 9, 10, 23, 28, 33, 37, 47, 48, 52, 60, 62, 64, 419, 685, 847, 849, 850, 946, 1287, 1289, 1290, 1452, 1483, 1548, 1555, 1558, 1559, 1739, 1740, 1759, 2044, 2048, 2051, 2074, 2081, 2082, 2083, 2084, 2099, 2104, 2110, 2111, 2118, 2119], "never": [1, 5, 7, 24, 28, 47, 48, 52, 53, 225, 226, 802, 890, 971, 983, 1286, 1336, 1337, 1348, 1361, 1738, 1780, 2059, 2075, 2078, 2081, 2102, 2109, 2117, 2121, 2132], "long": [1, 7, 9, 23, 33, 47, 52, 63, 739, 754, 756, 757, 758, 759, 761, 768, 786, 988, 1177, 1193, 1216, 1265, 1390, 1440, 1467, 1483, 1491, 1518, 1519, 1555, 1638, 1800, 1856, 1970, 1974, 1984, 1986, 1991, 2043, 2047, 2054, 2064, 2065, 2066, 2075, 2076, 2078, 2081, 2083, 2091, 2093, 2099, 2102, 2103, 2108, 2116, 2117, 2119, 2120, 2130, 2133, 2136, 2140, 2143, 2145], "hard": [1, 7, 8, 28, 33, 48, 52, 1119, 1362, 1503, 1656, 1657, 2044, 2045, 2046, 2062, 2075, 2084, 2099, 2102, 2136, 2137], "matter": [1, 4, 28, 55, 911, 912, 916, 1107, 1119, 1216, 1297, 1300, 1305, 1738, 2067, 2075, 2081, 2102], "discourag": [1, 1088, 1092, 1430, 2037, 2075, 2109, 2120], "aggress": [1, 55, 1286, 1746, 1747, 2075, 2109, 2136], "buffer": [1, 4, 23, 24, 28, 33, 52, 53, 55, 59, 62, 419, 891, 1031, 1064, 1173, 1176, 1186, 1289, 1297, 1300, 1311, 1361, 1462, 1463, 1464, 1484, 1521, 1522, 1523, 1548, 1588, 1730, 1738, 1741, 1748, 1750, 1756, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1787, 1789, 1824, 1826, 1889, 1930, 1977, 2043, 2046, 2062, 2068, 2075, 2080, 2081, 2089, 2094, 2097, 2099, 2130, 2136, 2149], "free": [1, 7, 28, 30, 35, 37, 47, 48, 55, 64, 66, 74, 75, 988, 1070, 1075, 1089, 1292, 1305, 1362, 2057, 2073, 2075, 2078, 2081, 2083, 2084, 2091, 2095, 2099, 2114, 2117, 2130, 2132, 2136, 2147], "reus": [1, 19, 28, 64, 490, 761, 1205, 2075, 2078, 2109, 2130, 2132, 2133, 2136, 2140, 2145, 2147], "effici": [1, 2, 3, 8, 11, 23, 34, 35, 37, 55, 56, 61, 154, 765, 904, 911, 913, 916, 925, 973, 1184, 1199, 1233, 1307, 1345, 1362, 1381, 1452, 1486, 1487, 1488, 1491, 1492, 1499, 1554, 1560, 1561, 1564, 1596, 1607, 1612, 1706, 2057, 2067, 2071, 2075, 2080, 2081, 2086, 2090, 2091, 2092, 2101, 2104, 2109, 2110, 2114, 2117, 2118, 2123, 2133, 2148], "few": [1, 7, 8, 24, 30, 33, 37, 1119, 1177, 1491, 1738, 2042, 2047, 2075, 2078, 2081, 2083, 2085, 2087, 2092, 2095, 2099, 2101, 2104, 2107, 2114, 2118, 2120, 2123, 2130, 2132, 2133, 2136, 2138, 2139, 2143, 2145], "occas": [1, 7, 2075], "actual": [1, 5, 8, 30, 37, 40, 52, 53, 55, 60, 64, 262, 685, 796, 803, 998, 1137, 1155, 1193, 1213, 1301, 1305, 1478, 1479, 1480, 1654, 1738, 1771, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1832, 2042, 2046, 2047, 2055, 2065, 2075, 2078, 2080, 2081, 2084, 2086, 2091, 2093, 2095, 2097, 2104, 2109, 2116, 2121, 2132, 2133, 2135, 2136, 2138], "signific": [1, 3, 30, 1841, 1901, 2075, 2078, 2114, 2130, 2138, 2141], "amount": [1, 2, 3, 4, 7, 23, 28, 30, 37, 47, 64, 931, 1043, 1069, 1071, 1075, 1286, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1494, 1536, 1551, 1600, 1637, 1764, 1765, 1767, 1768, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 2020, 2066, 2075, 2077, 2078, 2082, 2083, 2087, 2097, 2109, 2114, 2132, 2139, 2143, 2145, 2147], "unless": [1, 2, 4, 7, 19, 24, 28, 50, 52, 55, 56, 64, 492, 503, 850, 869, 890, 911, 912, 916, 954, 1016, 1053, 1176, 1193, 1289, 1333, 1338, 1351, 1361, 1390, 1501, 1548, 1596, 1732, 1770, 1789, 1821, 1827, 1893, 1995, 2047, 2051, 2053, 2067, 2075, 2078, 2084, 2093, 2094, 2099, 2102, 2105, 2132, 2143], "heavi": [1, 28, 2075, 2095, 2135], "pressur": [1, 55, 2075], "might": [1, 2, 3, 4, 9, 14, 15, 18, 19, 28, 30, 32, 34, 35, 47, 52, 60, 63, 64, 87, 89, 154, 490, 548, 904, 1015, 1305, 1306, 1654, 1738, 1740, 1746, 1747, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 2042, 2044, 2060, 2067, 2075, 2077, 2078, 2080, 2081, 2086, 2088, 2093, 2094, 2096, 2099, 2102, 2104, 2109, 2110, 2111, 2114, 2118, 2120, 2121, 2126, 2130, 2132, 2133, 2135, 2136, 2137, 2138, 2144, 2145], "keep": [1, 3, 5, 7, 23, 24, 30, 32, 34, 37, 47, 49, 52, 53, 55, 66, 490, 1019, 1203, 1361, 1462, 1463, 1464, 1490, 1510, 1511, 1512, 1557, 1588, 1654, 1665, 1738, 1766, 1802, 1878, 1901, 2042, 2043, 2044, 2051, 2064, 2066, 2067, 2075, 2078, 2080, 2082, 2083, 2086, 2091, 2097, 2101, 2104, 2109, 2110, 2111, 2132, 2133, 2134, 2135, 2136, 2143, 2147], "track": [1, 34, 37, 49, 52, 53, 66, 81, 82, 83, 88, 339, 926, 937, 1026, 1067, 1069, 1083, 1084, 1085, 1176, 1177, 1193, 1203, 1391, 1462, 1463, 1464, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1588, 1738, 1766, 2059, 2060, 2064, 2066, 2067, 2075, 2078, 2081, 2082, 2083, 2088, 2089, 2097, 2101, 2103, 2110, 2111, 2114, 2120, 2132, 2133, 2135, 2136, 2142], "appli": [1, 3, 5, 8, 12, 24, 30, 32, 33, 34, 35, 37, 40, 47, 55, 59, 60, 61, 64, 66, 77, 83, 84, 85, 92, 123, 325, 402, 476, 490, 517, 521, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 740, 743, 744, 745, 746, 747, 748, 763, 765, 771, 772, 773, 774, 775, 776, 777, 778, 779, 785, 786, 787, 788, 789, 818, 819, 820, 821, 850, 869, 911, 912, 914, 915, 916, 917, 927, 928, 930, 956, 959, 985, 997, 1000, 1107, 1109, 1114, 1123, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1167, 1176, 1177, 1184, 1187, 1188, 1197, 1203, 1213, 1289, 1293, 1339, 1362, 1379, 1416, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1489, 1495, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1562, 1563, 1564, 1567, 1568, 1569, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1602, 1603, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1647, 1649, 1650, 1651, 1652, 1655, 1657, 1658, 1659, 1660, 1664, 1665, 1666, 1668, 1669, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1685, 1690, 1698, 1699, 1700, 1701, 1703, 1706, 1707, 1708, 1709, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1728, 1737, 1738, 1746, 1747, 1753, 1754, 1755, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1780, 1781, 1788, 1789, 1791, 1792, 1794, 1804, 1805, 1823, 1827, 1841, 1854, 1859, 1860, 1861, 1862, 1863, 1934, 1935, 1937, 1954, 1991, 1992, 1994, 2007, 2044, 2047, 2051, 2054, 2064, 2066, 2068, 2071, 2074, 2075, 2078, 2080, 2081, 2082, 2084, 2086, 2089, 2092, 2099, 2101, 2102, 2104, 2107, 2110, 2114, 2115, 2129, 2130, 2133, 2134, 2136, 2137, 2143, 2144], "save": [1, 5, 7, 11, 15, 24, 28, 30, 32, 33, 52, 55, 500, 846, 900, 901, 911, 914, 916, 917, 1035, 1184, 1288, 1289, 1294, 1297, 1305, 1307, 1361, 1548, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1835, 1838, 1842, 2043, 2044, 2045, 2051, 2055, 2058, 2066, 2081, 2082, 2084, 2085, 2089, 2091, 2093, 2097, 2100, 2101, 2102, 2103, 2109, 2114, 2119, 2124, 2127, 2130, 2133, 2136, 2138, 2147], "modifi": [1, 18, 19, 23, 24, 28, 29, 30, 32, 33, 55, 64, 66, 264, 491, 492, 797, 827, 847, 849, 850, 911, 912, 914, 915, 916, 917, 935, 936, 937, 985, 998, 999, 1243, 1286, 1289, 1292, 1293, 1309, 1490, 1548, 1592, 1594, 1596, 1645, 1646, 1730, 1731, 1732, 1735, 1736, 1738, 1744, 1745, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1816, 1819, 1821, 1823, 1824, 1825, 1826, 1827, 1830, 1839, 1920, 2044, 2047, 2051, 2065, 2071, 2074, 2078, 2081, 2082, 2089, 2094, 2102, 2104, 2109, 2115, 2118, 2120, 2125, 2132, 2133, 2134, 2135, 2136, 2141, 2145, 2148], "afterward": [1, 30, 52, 1548, 1728, 1738, 2084, 2114], "onc": [1, 7, 9, 15, 23, 24, 28, 29, 30, 32, 33, 35, 36, 39, 40, 47, 55, 58, 60, 63, 64, 911, 912, 913, 914, 916, 917, 919, 921, 938, 1119, 1289, 1293, 1361, 1484, 1548, 1738, 1757, 1759, 1791, 1837, 1841, 1857, 1903, 1907, 1998, 2044, 2047, 2051, 2057, 2060, 2064, 2074, 2075, 2077, 2078, 2081, 2084, 2086, 2088, 2089, 2101, 2102, 2114, 2119, 2123, 2130, 2133, 2134, 2136, 2142], "start": [1, 3, 4, 8, 9, 23, 24, 28, 30, 35, 37, 44, 46, 47, 48, 50, 55, 59, 63, 64, 90, 237, 406, 437, 438, 500, 542, 703, 876, 905, 947, 948, 988, 1035, 1067, 1069, 1081, 1083, 1084, 1141, 1142, 1158, 1173, 1201, 1287, 1302, 1315, 1360, 1376, 1415, 1443, 1444, 1452, 1457, 1458, 1459, 1491, 1493, 1541, 1542, 1543, 1549, 1551, 1646, 1693, 1738, 1761, 1765, 1767, 1780, 1803, 1832, 1839, 1873, 1903, 1913, 1926, 1940, 1941, 1942, 1944, 1945, 2042, 2043, 2045, 2046, 2051, 2054, 2064, 2066, 2075, 2076, 2078, 2080, 2081, 2083, 2084, 2089, 2090, 2091, 2095, 2099, 2101, 2103, 2104, 2109, 2110, 2111, 2113, 2114, 2129, 2130, 2132, 2133, 2136, 2140, 2142, 2149], "sure": [1, 7, 9, 23, 28, 30, 33, 36, 39, 48, 51, 58, 64, 872, 873, 904, 1170, 1293, 1305, 1306, 1362, 1706, 1738, 1792, 1835, 1977, 2047, 2065, 2075, 2080, 2083, 2085, 2086, 2094, 2095, 2099, 2103, 2104, 2109, 2110, 2111, 2114, 2116, 2119, 2130, 2136, 2138, 2145], "been": [1, 5, 7, 9, 11, 17, 19, 23, 24, 28, 29, 32, 33, 34, 35, 37, 40, 47, 51, 52, 58, 59, 64, 86, 90, 92, 490, 492, 685, 765, 911, 912, 916, 988, 1019, 1023, 1028, 1057, 1060, 1118, 1123, 1177, 1292, 1293, 1299, 1304, 1361, 1415, 1416, 1426, 1499, 1506, 1518, 1564, 1619, 1654, 1738, 1746, 1747, 1756, 1761, 1765, 1767, 1787, 1788, 1803, 1830, 1831, 1832, 1839, 1841, 1857, 1954, 1970, 1998, 2009, 2013, 2029, 2051, 2053, 2055, 2060, 2064, 2065, 2066, 2071, 2074, 2075, 2077, 2078, 2084, 2086, 2087, 2089, 2091, 2093, 2095, 2097, 2099, 2101, 2102, 2109, 2111, 2114, 2119, 2127, 2130, 2131, 2133, 2136, 2141, 2145], "longer": [1, 28, 50, 59, 60, 490, 692, 901, 916, 930, 931, 1286, 1293, 1738, 1791, 1794, 2060, 2075, 2078, 2097, 2109, 2111, 2130, 2145], "find": [1, 7, 14, 28, 47, 60, 64, 84, 1119, 1196, 1199, 1243, 1311, 1362, 1478, 1479, 1480, 1518, 1801, 1847, 1858, 1893, 1959, 2042, 2055, 2057, 2064, 2066, 2075, 2077, 2078, 2080, 2081, 2083, 2086, 2091, 2093, 2097, 2099, 2100, 2104, 2109, 2114, 2117, 2119, 2121, 2124, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2144, 2145, 2146, 2148], "quick": [1, 7, 58, 2054, 2089, 2098, 2128, 2143], "guid": [1, 8, 23, 28, 82, 84, 85, 1301, 1791, 2043, 2051, 2078, 2082, 2085, 2102, 2104, 2143], "var": [1, 40, 45, 47, 51, 1462, 1463, 1464, 1501, 1502, 1510, 1511, 1512, 1520, 1588, 1651, 1861, 2003, 2045, 2047, 2065, 2100, 2132, 2140, 2145], "thing": [1, 3, 7, 8, 28, 33, 52, 60, 64, 1177, 1299, 1391, 1460, 1656, 1931, 2046, 2051, 2075, 2078, 2081, 2082, 2083, 2086, 2091, 2099, 2102, 2104, 2105, 2111, 2130, 2133, 2135, 2136, 2143, 2145], "detach": [1, 5, 66, 74, 75, 226, 419, 452, 462, 980, 1176, 1289, 1467, 1548, 1638, 1656, 1935, 1973, 2044, 2045, 2065, 2067, 2081, 2083, 2099, 2100, 2106, 2114, 2118, 2120, 2144], "register_hook": [1, 2065, 2075], "name": [1, 2, 3, 14, 19, 24, 28, 30, 33, 34, 35, 37, 40, 41, 44, 45, 47, 50, 52, 53, 55, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 89, 685, 702, 752, 753, 762, 798, 822, 823, 824, 825, 833, 850, 865, 869, 943, 946, 948, 992, 1035, 1047, 1171, 1176, 1186, 1194, 1196, 1201, 1203, 1287, 1289, 1290, 1297, 1300, 1305, 1306, 1320, 1325, 1326, 1332, 1333, 1335, 1336, 1337, 1338, 1348, 1349, 1351, 1353, 1354, 1361, 1548, 1599, 1607, 1730, 1735, 1736, 1738, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1788, 1789, 1791, 1800, 1801, 1889, 1899, 1996, 1998, 2001, 2022, 2042, 2043, 2044, 2045, 2047, 2048, 2051, 2053, 2058, 2059, 2060, 2064, 2073, 2075, 2078, 2080, 2081, 2086, 2088, 2089, 2094, 2097, 2099, 2100, 2101, 2102, 2103, 2109, 2110, 2116, 2119, 2120, 2121, 2123, 2124, 2125, 2127, 2131, 2133, 2134, 2136, 2139, 2142, 2143, 2144, 2145, 2146, 2147, 2150], "factori": [1, 2, 11, 35, 37, 41, 45, 47, 60, 833, 950, 1119, 1608, 1792, 1801, 1897, 2043, 2045, 2051, 2055, 2066, 2078, 2081, 2100, 2117, 2120, 2132, 2135], "ones": [1, 3, 5, 19, 23, 28, 32, 34, 35, 52, 55, 60, 61, 63, 64, 66, 71, 258, 317, 406, 449, 450, 452, 519, 800, 870, 904, 920, 922, 923, 924, 925, 926, 930, 953, 965, 983, 1102, 1110, 1132, 1176, 1183, 1184, 1187, 1286, 1289, 1301, 1310, 1336, 1352, 1361, 1461, 1481, 1490, 1494, 1501, 1502, 1520, 1548, 1552, 1553, 1555, 1557, 1563, 1600, 1609, 1610, 1611, 1645, 1706, 1724, 1728, 1737, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1784, 1786, 1789, 1799, 1800, 1861, 1878, 1896, 1901, 1926, 1976, 1980, 1998, 2010, 2045, 2047, 2049, 2051, 2055, 2065, 2066, 2075, 2076, 2078, 2081, 2090, 2092, 2093, 2099, 2100, 2101, 2102, 2104, 2109, 2111, 2113, 2115, 2117, 2120, 2139, 2144, 2145], "autograd_tensor": 1, "kwarg": [1, 5, 14, 23, 28, 29, 30, 32, 33, 34, 47, 52, 53, 55, 64, 66, 584, 607, 752, 765, 767, 768, 828, 829, 830, 831, 833, 834, 901, 916, 917, 987, 1019, 1020, 1021, 1023, 1061, 1062, 1079, 1176, 1187, 1188, 1190, 1197, 1201, 1203, 1289, 1292, 1294, 1353, 1379, 1509, 1537, 1548, 1579, 1583, 1587, 1589, 1590, 1728, 1738, 1761, 1766, 1770, 1780, 1787, 1789, 1792, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1889, 1992, 2007, 2013, 2042, 2047, 2048, 2051, 2081, 2082, 2089, 2097, 2099, 2101, 2109, 2116, 2120, 2125, 2131, 2134, 2144, 2145, 2146], "base": [1, 3, 7, 9, 12, 14, 15, 20, 23, 28, 29, 30, 32, 33, 34, 35, 37, 40, 45, 47, 48, 50, 52, 53, 55, 60, 64, 87, 88, 89, 685, 797, 802, 808, 810, 829, 830, 831, 833, 834, 872, 873, 911, 914, 916, 927, 928, 937, 983, 1005, 1080, 1081, 1096, 1117, 1119, 1162, 1209, 1219, 1243, 1253, 1291, 1303, 1315, 1353, 1364, 1366, 1368, 1376, 1461, 1484, 1521, 1548, 1551, 1552, 1553, 1557, 1563, 1565, 1592, 1594, 1596, 1671, 1706, 1737, 1738, 1744, 1745, 1753, 1761, 1765, 1767, 1809, 1826, 1827, 1854, 1864, 1889, 1901, 1958, 1959, 1974, 1984, 1986, 2008, 2043, 2045, 2047, 2077, 2078, 2080, 2081, 2084, 2089, 2103, 2104, 2109, 2110, 2114, 2115, 2118, 2119, 2121, 2124, 2125, 2132, 2133, 2134, 2136, 2138], "static": [1, 3, 8, 14, 29, 33, 35, 37, 47, 52, 53, 55, 66, 71, 72, 75, 685, 800, 807, 823, 825, 833, 835, 841, 868, 870, 900, 901, 902, 903, 916, 917, 1021, 1196, 1197, 1203, 1209, 1228, 1303, 1592, 1738, 1933, 2044, 2045, 2046, 2047, 2078, 2084, 2085, 2088, 2096, 2097, 2105, 2109, 2116, 2130, 2132, 2134], "Then": [1, 29, 33, 48, 64, 939, 1494, 1600, 1756, 1801, 1996, 2075, 2076, 2078, 2080, 2081, 2082, 2085, 2092, 2093, 2099, 2101, 2102, 2109, 2110, 2124, 2130, 2133, 2134, 2137], "op": [1, 4, 5, 24, 28, 30, 33, 52, 53, 55, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 88, 89, 154, 507, 528, 608, 762, 798, 799, 800, 832, 835, 865, 872, 873, 904, 911, 914, 916, 917, 925, 973, 983, 985, 1024, 1040, 1042, 1046, 1047, 1061, 1062, 1088, 1092, 1094, 1177, 1240, 1290, 1303, 1305, 1306, 1361, 1367, 1417, 1421, 1428, 1430, 1431, 1565, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1845, 1903, 1982, 2014, 2017, 2019, 2021, 2022, 2034, 2037, 2038, 2043, 2047, 2053, 2054, 2057, 2060, 2062, 2065, 2066, 2077, 2078, 2080, 2081, 2091, 2097, 2102, 2103, 2104, 2105, 2106, 2107, 2114, 2116, 2118, 2120, 2125, 2130, 2131, 2135, 2136, 2137, 2138, 2140, 2143, 2144, 2145], "directli": [1, 3, 7, 9, 14, 15, 23, 24, 28, 30, 33, 34, 35, 36, 37, 46, 52, 53, 55, 59, 64, 66, 79, 561, 737, 752, 901, 911, 914, 916, 985, 1102, 1170, 1177, 1184, 1186, 1199, 1233, 1320, 1554, 1582, 1601, 1665, 1712, 1781, 1980, 2044, 2046, 2047, 2051, 2055, 2060, 2067, 2075, 2078, 2080, 2081, 2082, 2084, 2086, 2088, 2089, 2090, 2091, 2094, 2102, 2103, 2104, 2109, 2114, 2119, 2121, 2127, 2132, 2134, 2135, 2136, 2138, 2139, 2144, 2145], "ctx": [1, 5, 45, 66, 70, 900, 901, 902, 911, 912, 913, 914, 915, 916, 917, 2051, 2074, 2081, 2082, 2099], "gradcheck": [1, 1932, 2043, 2051, 2081, 2114], "extend": [1, 23, 28, 30, 33, 35, 39, 50, 64, 872, 901, 903, 911, 914, 916, 917, 1550, 1559, 1932, 1996, 2043, 2067, 2075, 2088, 2090, 2091, 2099, 2100, 2102, 2107, 2114, 2132, 2133, 2146], "staticmethod": [1, 66, 901, 903, 911, 912, 913, 914, 915, 916, 917, 2047, 2074, 2081, 2099, 2109], "result": [1, 3, 4, 5, 7, 8, 9, 12, 14, 18, 19, 23, 24, 28, 30, 33, 35, 37, 40, 45, 48, 52, 53, 55, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 89, 157, 225, 226, 258, 259, 319, 339, 402, 500, 502, 503, 560, 587, 588, 589, 591, 592, 622, 691, 692, 693, 694, 695, 698, 700, 701, 702, 704, 765, 799, 803, 888, 890, 909, 910, 919, 920, 921, 922, 923, 924, 930, 931, 939, 951, 954, 965, 969, 974, 980, 982, 983, 985, 986, 997, 1001, 1003, 1030, 1032, 1034, 1035, 1061, 1062, 1075, 1098, 1099, 1100, 1101, 1102, 1114, 1119, 1137, 1140, 1146, 1155, 1162, 1164, 1167, 1172, 1173, 1176, 1177, 1178, 1181, 1182, 1187, 1188, 1197, 1201, 1212, 1217, 1226, 1229, 1233, 1251, 1252, 1254, 1266, 1280, 1289, 1292, 1293, 1301, 1305, 1306, 1308, 1310, 1311, 1315, 1329, 1331, 1333, 1334, 1342, 1346, 1348, 1350, 1351, 1352, 1359, 1369, 1370, 1377, 1387, 1389, 1390, 1391, 1392, 1394, 1395, 1439, 1442, 1457, 1458, 1459, 1484, 1486, 1487, 1488, 1492, 1494, 1499, 1513, 1518, 1548, 1554, 1564, 1592, 1593, 1594, 1595, 1596, 1600, 1636, 1654, 1665, 1721, 1724, 1725, 1738, 1753, 1756, 1789, 1792, 1793, 1794, 1795, 1801, 1804, 1839, 1845, 1847, 1854, 1855, 1858, 1864, 1877, 1883, 1898, 1913, 1925, 1936, 1938, 1939, 1943, 1950, 1952, 1953, 1954, 1957, 1958, 1959, 1969, 1973, 1974, 1979, 1980, 1982, 1983, 1985, 1995, 1998, 2002, 2003, 2007, 2044, 2045, 2046, 2047, 2051, 2054, 2055, 2057, 2065, 2066, 2067, 2073, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2086, 2087, 2089, 2091, 2092, 2093, 2094, 2096, 2097, 2099, 2101, 2103, 2104, 2105, 2106, 2109, 2110, 2113, 2114, 2117, 2119, 2120, 2121, 2125, 2126, 2127, 2131, 2132, 2133, 2135, 2139, 2142, 2143, 2144, 2145, 2146], "save_for_backward": [1, 901, 911, 913, 915, 916, 917, 2051, 2074, 2075, 2081, 2082, 2099], "grad_output": [1, 66, 900, 911, 912, 916, 917, 925, 931, 935, 936, 1289, 1548, 2045, 2075, 2078, 2081, 2082, 2089, 2140], "saved_tensor": [1, 911, 913, 914, 915, 916, 917, 2051, 2074, 2075, 2081, 2082], "inspect": [1, 28, 52, 55, 64, 942, 1289, 1301, 2074, 2081, 2088, 2102, 2105, 2117, 2136, 2138, 2139, 2146], "cost": [1, 3, 4, 8, 9, 24, 30, 33, 55, 490, 973, 983, 1345, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1706, 1805, 1897, 2078, 2084, 2093, 2105, 2110, 2117, 2130, 2141, 2145], "both": [1, 2, 3, 14, 19, 23, 24, 25, 28, 29, 30, 35, 40, 45, 46, 47, 48, 52, 53, 55, 63, 64, 66, 74, 75, 101, 343, 503, 734, 773, 774, 777, 778, 779, 799, 862, 903, 910, 916, 917, 920, 921, 922, 923, 924, 951, 989, 1005, 1042, 1075, 1114, 1120, 1121, 1122, 1135, 1165, 1166, 1167, 1176, 1231, 1233, 1243, 1250, 1266, 1279, 1280, 1286, 1289, 1303, 1311, 1312, 1360, 1376, 1384, 1390, 1405, 1406, 1457, 1458, 1462, 1463, 1464, 1472, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1502, 1508, 1510, 1511, 1512, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1541, 1542, 1543, 1548, 1554, 1588, 1596, 1600, 1601, 1604, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1679, 1680, 1681, 1706, 1738, 1748, 1750, 1759, 1789, 1805, 1807, 1808, 1826, 1839, 1862, 1863, 1901, 1906, 1931, 1933, 1935, 1954, 1958, 1979, 1980, 2019, 2044, 2046, 2047, 2051, 2054, 2065, 2066, 2068, 2074, 2075, 2076, 2081, 2082, 2084, 2085, 2086, 2089, 2092, 2093, 2094, 2099, 2102, 2104, 2107, 2108, 2109, 2111, 2114, 2115, 2116, 2121, 2124, 2125, 2126, 2130, 2132, 2134, 2135, 2136, 2137, 2138, 2142, 2145], "cpu": [1, 4, 5, 14, 17, 23, 28, 30, 53, 55, 66, 71, 75, 76, 77, 90, 91, 123, 200, 293, 330, 339, 449, 450, 451, 452, 453, 462, 490, 584, 593, 876, 891, 944, 946, 952, 961, 1003, 1006, 1007, 1018, 1030, 1031, 1032, 1034, 1120, 1122, 1132, 1137, 1155, 1167, 1171, 1173, 1174, 1238, 1240, 1241, 1242, 1247, 1248, 1265, 1289, 1297, 1299, 1300, 1309, 1319, 1321, 1325, 1326, 1327, 1328, 1330, 1332, 1335, 1337, 1338, 1344, 1347, 1350, 1353, 1354, 1360, 1361, 1376, 1379, 1390, 1402, 1415, 1484, 1490, 1548, 1721, 1738, 1744, 1745, 1780, 1781, 1795, 1798, 1806, 1857, 1866, 1868, 1870, 1872, 1873, 1897, 1902, 1903, 1904, 1906, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1925, 1935, 1940, 1941, 1942, 1943, 1944, 1945, 1958, 1973, 1974, 1975, 1984, 1986, 1991, 1995, 2012, 2040, 2043, 2044, 2045, 2047, 2051, 2055, 2057, 2062, 2064, 2065, 2067, 2071, 2078, 2081, 2082, 2084, 2087, 2089, 2092, 2093, 2095, 2099, 2100, 2101, 2103, 2105, 2108, 2109, 2114, 2116, 2117, 2120, 2121, 2123, 2126, 2127, 2130, 2134, 2135, 2136, 2138, 2139, 2142, 2143, 2145], "There": [1, 5, 6, 7, 9, 12, 14, 19, 22, 28, 30, 47, 52, 53, 55, 56, 60, 61, 64, 86, 87, 89, 685, 739, 799, 901, 916, 917, 983, 1177, 1484, 1518, 1564, 1706, 1738, 1746, 1747, 1787, 1792, 2042, 2044, 2046, 2047, 2053, 2054, 2066, 2075, 2078, 2081, 2082, 2083, 2088, 2091, 2095, 2096, 2099, 2102, 2103, 2104, 2105, 2109, 2111, 2120, 2123, 2130, 2132, 2133, 2135, 2136, 2143, 2144, 2145], "moment": [1, 66, 72, 777, 778, 779, 1001, 1805, 1807, 1808, 1809, 1811, 1823, 1827, 2057, 2064, 2067, 2103, 2109, 2142], "nvprof": [1, 4, 940, 1035, 2078], "regist": [1, 15, 19, 24, 28, 32, 35, 47, 50, 52, 53, 55, 64, 82, 84, 85, 86, 87, 89, 491, 492, 685, 798, 799, 865, 935, 936, 983, 1064, 1203, 1289, 1361, 1548, 1549, 1550, 1558, 1559, 1577, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1740, 1753, 1754, 1756, 1757, 1759, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1996, 1998, 2051, 2060, 2064, 2078, 2080, 2081, 2088, 2089, 2094, 2097, 2099, 2102, 2109, 2126, 2133, 2135, 2138, 2141], "activ": [1, 5, 7, 9, 33, 34, 50, 52, 55, 61, 81, 83, 798, 800, 802, 811, 815, 852, 853, 862, 872, 873, 946, 1021, 1028, 1044, 1057, 1075, 1176, 1178, 1188, 1189, 1190, 1362, 1456, 1486, 1487, 1488, 1492, 1502, 1520, 1547, 1549, 1567, 1578, 1592, 1594, 1596, 1647, 1685, 1709, 1738, 1757, 1759, 1789, 1794, 2007, 2043, 2057, 2064, 2078, 2081, 2082, 2084, 2089, 2099, 2101, 2103, 2104, 2105, 2106, 2109, 2114, 2124, 2125, 2130, 2135, 2140, 2145], "emit_nvtx": [1, 4, 1035], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 2103], "use_devic": 1, "record_shap": [1, 2103], "with_flop": [1, 2103], "profile_memori": [1, 2103], "with_stack": [1, 2103], "with_modul": [1, 2103], "use_kineto": 1, "use_cpu": 1, "experimental_config": [1, 2103], "acc_ev": [1, 2103], "hold": [1, 28, 30, 45, 47, 50, 51, 52, 55, 59, 63, 64, 541, 1021, 1362, 1494, 1549, 1550, 1558, 1559, 1600, 1728, 1738, 1741, 1742, 1756, 1766, 1780, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1940, 1941, 1942, 1943, 1944, 1945, 2076, 2078, 2081, 2083, 2088, 2091, 2101, 2103, 2109, 2110, 2111, 2113, 2114, 2116, 2117, 2119, 2120, 2132, 2133, 2136], "summari": [1, 3, 48, 1035, 1076, 1905, 2043, 2060, 2084, 2119, 2125, 2133, 2139, 2145, 2147], "hood": [1, 52, 63, 2064, 2075, 2078, 2080, 2091, 2102, 2111, 2134, 2135], "just": [1, 2, 7, 14, 24, 35, 37, 45, 52, 64, 593, 692, 702, 796, 832, 835, 900, 902, 916, 917, 939, 943, 998, 999, 1020, 1201, 1203, 1211, 1305, 1306, 1344, 1347, 1352, 1353, 1379, 1486, 1487, 1488, 1492, 1738, 1759, 1760, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1897, 1983, 1984, 1985, 1986, 1996, 2042, 2044, 2064, 2074, 2075, 2081, 2082, 2086, 2088, 2089, 2090, 2094, 2102, 2109, 2110, 2114, 2117, 2118, 2120, 2125, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2144], "record": [1, 5, 19, 20, 32, 38, 39, 40, 41, 45, 48, 52, 63, 64, 90, 92, 449, 450, 451, 452, 453, 490, 500, 806, 828, 829, 830, 831, 834, 836, 876, 949, 952, 961, 1018, 1019, 1023, 1120, 1121, 1122, 1132, 1137, 1155, 1173, 1174, 1175, 1212, 1247, 1248, 1289, 1305, 1309, 1360, 1376, 1402, 1405, 1406, 1415, 1416, 1484, 1548, 1798, 1799, 1801, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 2012, 2013, 2040, 2041, 2044, 2046, 2055, 2067, 2074, 2075, 2078, 2081, 2084, 2096, 2097, 2099, 2103, 2109, 2119, 2120, 2121, 2123, 2124, 2125, 2130, 2132, 2133, 2136, 2145, 2147, 2149], "event": [1, 31, 35, 37, 46, 50, 63, 92, 490, 943, 944, 945, 1019, 1023, 1075, 1078, 1305, 1306, 1367, 1405, 1406, 1416, 1706, 2013, 2043, 2060, 2064, 2078, 2103, 2119, 2123, 2143, 2147, 2149], "being": [1, 3, 5, 9, 11, 12, 19, 20, 23, 28, 30, 32, 33, 35, 37, 40, 41, 47, 48, 50, 52, 53, 55, 59, 60, 63, 64, 66, 75, 83, 101, 154, 406, 419, 765, 799, 807, 903, 916, 917, 919, 925, 981, 985, 997, 1019, 1029, 1077, 1082, 1096, 1097, 1132, 1165, 1166, 1177, 1186, 1187, 1202, 1203, 1278, 1289, 1293, 1379, 1388, 1393, 1457, 1458, 1459, 1460, 1461, 1481, 1483, 1490, 1491, 1495, 1496, 1501, 1507, 1514, 1539, 1540, 1548, 1551, 1552, 1553, 1554, 1555, 1562, 1580, 1581, 1597, 1619, 1626, 1627, 1637, 1649, 1650, 1654, 1666, 1690, 1698, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1773, 1774, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1857, 1858, 1952, 1953, 1954, 2002, 2003, 2044, 2047, 2051, 2054, 2059, 2060, 2065, 2066, 2067, 2074, 2075, 2078, 2081, 2082, 2083, 2084, 2086, 2089, 2091, 2092, 2093, 2097, 2099, 2102, 2104, 2107, 2109, 2110, 2114, 2121, 2123, 2124, 2127, 2130, 2132, 2133, 2135, 2136, 2143, 2145, 2146, 2149], "those": [1, 2, 4, 5, 14, 23, 24, 28, 30, 32, 33, 34, 35, 52, 55, 60, 63, 64, 83, 685, 833, 930, 1032, 1043, 1107, 1109, 1188, 1203, 1216, 1305, 1347, 1353, 1361, 1401, 1452, 1460, 1461, 1481, 1483, 1491, 1507, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1601, 1626, 1627, 1637, 1646, 1666, 1690, 1698, 1733, 1734, 1801, 1827, 1958, 1980, 2007, 2020, 2046, 2065, 2066, 2067, 2074, 2075, 2078, 2081, 2082, 2084, 2087, 2089, 2093, 2094, 2097, 2099, 2101, 2107, 2109, 2111, 2130, 2133, 2134, 2135, 2136, 2138, 2139, 2142, 2145], "python": [1, 3, 4, 9, 12, 14, 15, 18, 19, 23, 32, 34, 35, 36, 37, 40, 41, 44, 45, 47, 48, 49, 53, 55, 64, 66, 74, 75, 356, 593, 629, 685, 786, 891, 919, 920, 921, 922, 923, 924, 926, 930, 931, 969, 970, 982, 983, 985, 997, 1035, 1055, 1061, 1062, 1064, 1114, 1119, 1137, 1139, 1167, 1173, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1265, 1287, 1289, 1290, 1292, 1293, 1294, 1300, 1301, 1305, 1361, 1549, 1550, 1558, 1559, 1706, 1738, 1851, 1873, 1877, 1897, 1898, 1933, 1998, 1999, 2007, 2026, 2042, 2053, 2055, 2061, 2063, 2064, 2066, 2075, 2076, 2077, 2078, 2080, 2082, 2083, 2085, 2088, 2091, 2094, 2095, 2096, 2097, 2102, 2104, 2108, 2109, 2110, 2111, 2117, 2120, 2121, 2126, 2127, 2129, 2131, 2132, 2134, 2135, 2136, 2137, 2138, 2139, 2141, 2142, 2145, 2146, 2147], "report": [1, 3, 4, 18, 28, 40, 48, 63, 64, 86, 87, 89, 1018, 1075, 1180, 1181, 1183, 1201, 2012, 2074, 2078, 2114, 2136, 2139, 2142, 2145, 2147], "runtim": [1, 3, 5, 14, 17, 19, 20, 28, 30, 33, 34, 37, 52, 53, 64, 66, 76, 77, 836, 889, 943, 1035, 1117, 1119, 1203, 1213, 1219, 1228, 1253, 1289, 1295, 1305, 1548, 1741, 1742, 1802, 1853, 1995, 2008, 2047, 2065, 2066, 2075, 2078, 2081, 2091, 2096, 2097, 2098, 2099, 2104, 2126, 2130, 2132, 2133, 2136, 2141, 2148], "note": [1, 2, 3, 5, 8, 11, 12, 14, 15, 18, 22, 23, 24, 28, 30, 32, 33, 34, 35, 36, 37, 45, 47, 50, 52, 53, 55, 59, 61, 63, 64, 66, 74, 75, 86, 87, 88, 89, 154, 262, 381, 490, 492, 503, 504, 517, 519, 521, 740, 746, 747, 748, 797, 799, 800, 801, 807, 852, 872, 876, 895, 904, 911, 914, 916, 919, 920, 921, 922, 923, 924, 925, 926, 931, 937, 939, 946, 967, 973, 983, 990, 997, 1015, 1094, 1102, 1107, 1119, 1140, 1170, 1173, 1188, 1199, 1201, 1230, 1243, 1276, 1286, 1287, 1289, 1290, 1296, 1362, 1384, 1405, 1406, 1431, 1457, 1458, 1459, 1460, 1461, 1467, 1478, 1479, 1480, 1481, 1483, 1490, 1491, 1495, 1499, 1501, 1507, 1513, 1514, 1518, 1539, 1540, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1558, 1559, 1562, 1564, 1571, 1580, 1581, 1588, 1592, 1597, 1601, 1609, 1626, 1627, 1637, 1645, 1646, 1654, 1665, 1666, 1690, 1693, 1698, 1699, 1713, 1728, 1738, 1740, 1746, 1747, 1794, 1800, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1830, 1832, 1839, 1841, 1857, 1864, 1939, 1940, 1941, 1942, 1944, 1945, 1950, 1954, 1958, 1980, 1995, 1996, 1998, 2007, 2042, 2044, 2045, 2048, 2051, 2054, 2059, 2064, 2067, 2068, 2075, 2076, 2077, 2080, 2081, 2082, 2086, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2097, 2099, 2101, 2102, 2103, 2105, 2107, 2108, 2110, 2111, 2114, 2116, 2118, 2119, 2122, 2127, 2132, 2133, 2134, 2137, 2143, 2144, 2145, 2148, 2150], "propag": [1, 5, 30, 31, 33, 35, 37, 47, 64, 66, 75, 517, 691, 694, 695, 696, 700, 701, 702, 703, 771, 772, 773, 774, 784, 787, 788, 790, 791, 792, 847, 850, 951, 1165, 1166, 1201, 1212, 1226, 1439, 1746, 1747, 1939, 2043, 2064, 2065, 2074, 2078, 2081, 2086, 2088, 2109, 2120, 2124, 2125, 2132, 2135, 2136, 2144], "async": [1, 28, 29, 30, 63, 607, 1738, 2048, 2078, 2088, 2116, 2133, 2149], "task": [1, 3, 7, 24, 56, 61, 92, 1292, 1308, 1416, 1510, 1511, 1512, 2047, 2077, 2088, 2089, 2091, 2095, 2133, 2136, 2148], "cuda": [1, 3, 4, 5, 14, 16, 19, 22, 23, 24, 28, 30, 32, 34, 55, 62, 90, 91, 92, 154, 293, 317, 325, 339, 344, 490, 519, 521, 528, 584, 876, 888, 890, 904, 925, 946, 952, 954, 961, 983, 988, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1040, 1042, 1053, 1120, 1121, 1122, 1132, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1171, 1174, 1238, 1247, 1248, 1289, 1309, 1311, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1344, 1347, 1350, 1351, 1353, 1354, 1360, 1361, 1376, 1379, 1395, 1415, 1416, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1490, 1518, 1548, 1564, 1588, 1608, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1646, 1654, 1665, 1693, 1706, 1725, 1726, 1727, 1728, 1738, 1741, 1742, 1744, 1745, 1746, 1747, 1793, 1795, 1798, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1857, 1866, 1868, 1870, 1872, 1873, 1897, 1901, 1906, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1958, 1973, 1975, 1984, 1986, 1991, 1995, 2040, 2043, 2045, 2051, 2055, 2065, 2067, 2071, 2074, 2081, 2082, 2084, 2085, 2089, 2092, 2099, 2100, 2101, 2103, 2108, 2109, 2114, 2116, 2117, 2120, 2121, 2123, 2126, 2127, 2134, 2135, 2138, 2142, 2145, 2148, 2149], "cudaev": 1, "approxim": [1, 3, 24, 32, 47, 64, 1184, 1243, 1353, 1362, 1452, 1497, 1562, 1578, 1585, 1652, 1698, 1709, 1754, 1803, 1827, 1847, 1901, 1959, 1980, 2045, 2047, 2078, 2080, 2081, 2086, 2099, 2140, 2150], "4u": 1, "xpu": [1, 1238, 1289, 1548, 2012, 2013, 2014, 2017, 2019, 2043, 2051, 2074, 2085, 2103, 2117, 2123, 2138], "mtia": [1, 1238, 1289, 1415, 1416, 1417, 1421, 1548, 2043, 2103, 2123], "privateuseon": 1, "shape": [1, 5, 8, 11, 12, 19, 24, 28, 33, 34, 35, 53, 55, 57, 59, 61, 64, 65, 66, 67, 68, 71, 72, 74, 78, 101, 154, 175, 195, 212, 222, 404, 406, 449, 451, 453, 475, 501, 502, 517, 519, 521, 548, 570, 621, 685, 690, 692, 693, 702, 740, 750, 751, 761, 763, 765, 769, 771, 772, 773, 774, 777, 778, 779, 786, 802, 889, 895, 911, 913, 916, 920, 922, 923, 924, 943, 953, 954, 956, 959, 964, 966, 970, 971, 975, 976, 983, 997, 1000, 1033, 1109, 1110, 1111, 1113, 1114, 1119, 1120, 1122, 1124, 1139, 1140, 1141, 1142, 1150, 1151, 1152, 1158, 1164, 1165, 1166, 1167, 1174, 1181, 1182, 1186, 1187, 1188, 1203, 1204, 1219, 1226, 1230, 1232, 1246, 1251, 1252, 1256, 1264, 1266, 1280, 1286, 1303, 1305, 1306, 1309, 1314, 1315, 1319, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1378, 1379, 1383, 1391, 1396, 1397, 1433, 1434, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1645, 1646, 1650, 1654, 1656, 1665, 1666, 1671, 1679, 1680, 1681, 1691, 1692, 1695, 1696, 1697, 1699, 1706, 1725, 1728, 1737, 1738, 1741, 1742, 1753, 1756, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1795, 1798, 1800, 1802, 1845, 1854, 1858, 1862, 1863, 1866, 1868, 1869, 1870, 1877, 1879, 1880, 1884, 1893, 1896, 1920, 1935, 1936, 1938, 1941, 1943, 1949, 1954, 1955, 1958, 1969, 1976, 1980, 1990, 1991, 1992, 1993, 2007, 2010, 2040, 2044, 2045, 2047, 2051, 2065, 2066, 2067, 2071, 2073, 2075, 2076, 2078, 2081, 2082, 2083, 2097, 2100, 2103, 2106, 2109, 2114, 2115, 2119, 2120, 2121, 2123, 2126, 2134, 2136, 2140, 2143, 2144, 2145], "about": [1, 8, 9, 12, 17, 23, 28, 29, 30, 32, 33, 37, 40, 44, 46, 47, 48, 52, 56, 60, 64, 88, 259, 490, 502, 622, 930, 931, 937, 988, 997, 1025, 1026, 1043, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1076, 1083, 1084, 1085, 1177, 1202, 1203, 1213, 1226, 1319, 1326, 1491, 1563, 1737, 1780, 1823, 1827, 1839, 1900, 2026, 2042, 2044, 2046, 2047, 2051, 2054, 2071, 2077, 2078, 2080, 2081, 2083, 2084, 2088, 2091, 2092, 2094, 2096, 2102, 2103, 2104, 2107, 2110, 2111, 2114, 2118, 2120, 2131, 2132, 2133, 2134, 2136, 2141, 2145], "dimens": [1, 11, 23, 28, 34, 35, 52, 55, 60, 61, 64, 66, 71, 75, 78, 86, 222, 236, 237, 258, 264, 317, 319, 321, 325, 437, 438, 476, 477, 478, 497, 517, 519, 521, 541, 547, 549, 550, 564, 587, 588, 589, 591, 592, 611, 621, 691, 697, 698, 700, 701, 702, 704, 740, 763, 784, 786, 790, 885, 886, 887, 888, 897, 898, 899, 903, 916, 917, 925, 962, 970, 973, 974, 975, 976, 977, 1015, 1032, 1034, 1098, 1099, 1100, 1101, 1102, 1107, 1108, 1109, 1110, 1111, 1117, 1119, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1188, 1196, 1197, 1199, 1202, 1207, 1213, 1230, 1243, 1252, 1253, 1264, 1266, 1286, 1310, 1311, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1369, 1370, 1377, 1380, 1384, 1387, 1389, 1390, 1391, 1392, 1395, 1397, 1413, 1439, 1440, 1441, 1442, 1443, 1444, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1487, 1489, 1490, 1491, 1493, 1494, 1497, 1498, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1520, 1528, 1529, 1534, 1535, 1536, 1537, 1538, 1539, 1542, 1543, 1547, 1554, 1555, 1556, 1557, 1560, 1561, 1562, 1563, 1567, 1568, 1569, 1571, 1576, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1594, 1596, 1597, 1598, 1599, 1600, 1619, 1625, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1653, 1654, 1655, 1656, 1665, 1668, 1671, 1672, 1673, 1691, 1692, 1693, 1706, 1712, 1713, 1725, 1737, 1746, 1747, 1753, 1754, 1755, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1774, 1775, 1781, 1782, 1784, 1786, 1788, 1791, 1793, 1794, 1845, 1848, 1855, 1857, 1858, 1859, 1864, 1878, 1879, 1880, 1884, 1893, 1895, 1896, 1905, 1926, 1930, 1934, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1951, 1952, 1953, 1954, 1957, 1958, 1968, 1970, 1974, 1975, 1976, 1977, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1989, 1990, 1991, 1992, 1993, 1994, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2043, 2045, 2046, 2047, 2051, 2067, 2071, 2073, 2076, 2078, 2082, 2083, 2086, 2092, 2097, 2104, 2113, 2114, 2115, 2117, 2119, 2120, 2127, 2132, 2133, 2140], "collect": [1, 3, 7, 23, 29, 30, 32, 37, 47, 55, 63, 64, 807, 808, 833, 872, 873, 971, 1057, 1120, 1252, 1391, 1738, 1770, 1798, 1866, 1870, 2040, 2043, 2045, 2046, 2047, 2051, 2060, 2062, 2078, 2080, 2082, 2099, 2101, 2103, 2104, 2107, 2111, 2114, 2119, 2121, 2136, 2142, 2144, 2145, 2147, 2149], "further": [1, 4, 9, 12, 14, 19, 24, 28, 30, 55, 63, 66, 76, 77, 92, 490, 1203, 1233, 1293, 1329, 1416, 1452, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1738, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1845, 2047, 2054, 2084, 2089, 2091, 2102, 2103, 2111, 2119, 2125, 2129, 2132, 2140, 2143, 2145], "group": [1, 3, 9, 23, 24, 29, 30, 32, 33, 37, 44, 47, 48, 50, 51, 55, 58, 64, 614, 685, 717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 735, 736, 743, 744, 745, 746, 747, 748, 777, 778, 779, 891, 943, 1468, 1475, 1476, 1477, 1478, 1479, 1480, 1502, 1524, 1525, 1526, 1527, 1528, 1529, 1588, 1629, 1630, 1631, 1632, 1633, 1634, 1655, 1706, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1992, 2042, 2043, 2045, 2047, 2064, 2071, 2073, 2078, 2080, 2084, 2099, 2101, 2102, 2103, 2109, 2119, 2131, 2133, 2136, 2140, 2145], "prof": [1, 44, 946, 1035, 2103, 2136, 2143, 2145], "key_averag": [1, 946, 2103], "group_by_input_shap": [1, 943, 2103], "skew": [1, 3, 4, 1341, 1753], "neglig": [1, 1302, 1901], "bottom": [1, 55, 1458, 1654, 2054, 2143], "But": [1, 7, 55, 63, 490, 1305, 1335, 1738, 2071, 2075, 2081, 2083, 2086, 2093, 2102, 2114, 2118, 2135, 2136, 2139, 2146], "total": [1, 3, 4, 7, 20, 23, 24, 28, 33, 44, 46, 47, 48, 55, 888, 944, 946, 1034, 1070, 1075, 1089, 1173, 1251, 1252, 1400, 1467, 1494, 1507, 1514, 1539, 1554, 1600, 1692, 1738, 1744, 1793, 1795, 1797, 1832, 1839, 1879, 1905, 1954, 2042, 2046, 2060, 2062, 2078, 2084, 2087, 2091, 2101, 2114], "artifici": [1, 2114], "increas": [1, 3, 7, 24, 28, 35, 44, 55, 685, 865, 911, 913, 916, 967, 1043, 1075, 1119, 1251, 1252, 1452, 1461, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1560, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1696, 1697, 1706, 1825, 1831, 1832, 1837, 1839, 1841, 1893, 1901, 1980, 2001, 2020, 2045, 2053, 2061, 2071, 2077, 2078, 2087, 2091, 2105, 2114, 2130, 2136, 2139], "estim": [1, 3, 23, 35, 1001, 1005, 1243, 1286, 1462, 1463, 1464, 1497, 1501, 1502, 1510, 1511, 1512, 1520, 1588, 1652, 1754, 1805, 1824, 1921, 1959, 2103], "flop": [1, 2103], "hardwar": [1, 8, 870, 872, 873, 1325, 1326, 1353, 1995, 2071, 2078, 2091, 2093, 2105, 2114, 2136, 2138, 2145], "matrix": [1, 2, 24, 28, 35, 195, 212, 691, 694, 695, 696, 765, 951, 953, 962, 963, 971, 973, 974, 975, 976, 983, 1001, 1005, 1102, 1106, 1107, 1109, 1119, 1188, 1233, 1239, 1254, 1310, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1357, 1359, 1362, 1370, 1379, 1381, 1384, 1394, 1434, 1436, 1490, 1491, 1499, 1518, 1600, 1609, 1610, 1611, 1645, 1646, 1706, 1753, 1759, 1788, 1794, 1845, 1846, 1847, 1857, 1901, 1928, 1931, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1950, 1958, 1959, 1975, 1978, 1980, 1982, 1983, 1984, 1985, 1986, 2001, 2007, 2043, 2047, 2065, 2066, 2067, 2073, 2077, 2078, 2081, 2086, 2089, 2092, 2103, 2114, 2119, 2120, 2136], "2d": [1, 30, 35, 55, 591, 592, 705, 708, 711, 740, 744, 747, 771, 773, 778, 784, 788, 790, 791, 792, 1001, 1005, 1107, 1119, 1345, 1346, 1450, 1454, 1458, 1461, 1462, 1463, 1476, 1479, 1483, 1487, 1491, 1495, 1510, 1511, 1516, 1542, 1551, 1553, 1554, 1555, 1601, 1602, 1603, 1614, 1617, 1619, 1622, 1627, 1630, 1633, 1641, 1646, 1649, 1676, 1680, 1690, 1693, 1754, 1788, 1863, 1938, 1943, 1982, 2057, 2073, 2081, 2103, 2104, 2114], "alloc": [1, 4, 11, 18, 20, 24, 30, 33, 35, 37, 47, 55, 92, 258, 335, 449, 450, 451, 452, 453, 490, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1028, 1042, 1043, 1044, 1067, 1069, 1071, 1073, 1074, 1075, 1076, 1084, 1085, 1089, 1120, 1122, 1171, 1197, 1203, 1206, 1209, 1212, 1213, 1235, 1398, 1400, 1401, 1410, 1416, 1427, 1866, 1870, 1872, 1897, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 2013, 2019, 2020, 2043, 2062, 2064, 2067, 2075, 2080, 2084, 2087, 2091, 2097, 2103, 2117, 2129, 2130, 2132, 2135, 2143, 2145], "dealloc": [1, 64, 490, 1173, 1201, 2064, 2078, 2083, 2087, 2103], "line": [1, 4, 18, 19, 28, 37, 52, 53, 64, 685, 926, 943, 1119, 1177, 1289, 1300, 1548, 1619, 1654, 1905, 1933, 2044, 2047, 2048, 2055, 2067, 2076, 2081, 2086, 2087, 2093, 2095, 2099, 2103, 2114, 2129, 2133, 2134, 2136, 2138, 2139, 2142, 2145, 2147], "hierarchi": [1, 30, 33, 52, 64, 850, 1201, 1293, 1807, 1808, 1826, 2048, 2059, 2081, 2103, 2104, 2132], "callstack": [1, 28, 2103], "A": [1, 2, 3, 5, 7, 8, 9, 12, 14, 18, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 37, 44, 47, 48, 50, 52, 53, 55, 56, 61, 63, 66, 67, 68, 71, 87, 90, 91, 92, 564, 584, 587, 588, 589, 598, 629, 685, 697, 702, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 750, 751, 761, 766, 767, 768, 769, 770, 796, 798, 806, 822, 869, 870, 872, 873, 945, 952, 961, 962, 964, 969, 974, 975, 976, 982, 983, 985, 988, 989, 992, 997, 1001, 1005, 1018, 1019, 1023, 1031, 1033, 1034, 1104, 1119, 1124, 1132, 1133, 1134, 1146, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1199, 1203, 1205, 1232, 1243, 1246, 1247, 1248, 1252, 1279, 1280, 1281, 1282, 1285, 1287, 1289, 1292, 1297, 1300, 1302, 1305, 1306, 1310, 1314, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1359, 1362, 1370, 1378, 1379, 1380, 1381, 1385, 1415, 1416, 1445, 1461, 1465, 1467, 1483, 1486, 1487, 1488, 1490, 1491, 1492, 1500, 1501, 1509, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1538, 1547, 1548, 1554, 1577, 1582, 1584, 1592, 1597, 1598, 1608, 1612, 1619, 1625, 1637, 1656, 1666, 1673, 1685, 1706, 1712, 1713, 1728, 1739, 1740, 1741, 1742, 1748, 1750, 1753, 1756, 1759, 1781, 1782, 1785, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1831, 1832, 1835, 1838, 1839, 1841, 1847, 1857, 1859, 1860, 1861, 1862, 1863, 1874, 1880, 1886, 1889, 1921, 1930, 1933, 1934, 1937, 1949, 1953, 1954, 1958, 1959, 1977, 1982, 1983, 1984, 1985, 1986, 1990, 1991, 1992, 1994, 1995, 2003, 2007, 2010, 2012, 2013, 2042, 2044, 2045, 2046, 2047, 2051, 2054, 2057, 2065, 2066, 2067, 2071, 2073, 2074, 2077, 2078, 2081, 2082, 2083, 2084, 2091, 2092, 2094, 2099, 2101, 2102, 2103, 2104, 2109, 2110, 2111, 2114, 2115, 2116, 2117, 2119, 2120, 2125, 2130, 2131, 2134, 2135, 2136, 2138, 2140, 2143, 2144, 2145, 2146, 2147, 2150], "aten": [1, 3, 5, 12, 14, 18, 52, 53, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 87, 1061, 1177, 1800, 1801, 1933, 2044, 2045, 2051, 2062, 2077, 2081, 2095, 2097, 2100, 2103, 2104, 2114, 2126, 2130, 2131, 2137, 2139, 2143, 2145], "torchscript": [1, 3, 8, 32, 52, 53, 64, 621, 1287, 1290, 1292, 1293, 1294, 1296, 1301, 1305, 1307, 1801, 2043, 2048, 2094, 2103, 2109, 2147], "eager": [1, 8, 52, 983, 1094, 1197, 1202, 1287, 1290, 1301, 1431, 1904, 2047, 2051, 2078, 2084, 2085, 2103, 2105, 2107, 2120, 2130, 2136, 2137, 2138, 2142, 2145], "experiment": [1, 2, 24, 28, 30, 32, 33, 34, 52, 53, 55, 64, 66, 69, 74, 75, 78, 237, 919, 921, 925, 983, 992, 1093, 1177, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1320, 1331, 1333, 1334, 1338, 1351, 1706, 1738, 1827, 2043, 2044, 2046, 2051, 2055, 2065, 2066, 2078, 2080, 2093, 2095, 2097, 2099, 2102, 2103, 2132, 2145], "kineto": [1, 939, 2103], "_experimentalconfig": [1, 2103], "librari": [1, 2, 3, 4, 8, 9, 11, 14, 15, 17, 19, 20, 23, 28, 36, 45, 50, 52, 56, 59, 60, 61, 64, 685, 939, 1003, 1019, 1045, 1049, 1061, 1170, 1302, 1333, 1379, 1925, 2060, 2077, 2078, 2080, 2081, 2082, 2083, 2088, 2089, 2091, 2092, 2095, 2099, 2102, 2103, 2104, 2109, 2122, 2127, 2130, 2133, 2136, 2146, 2148], "functionev": [1, 2103], "across": [1, 8, 14, 19, 20, 23, 24, 28, 30, 32, 33, 34, 37, 48, 55, 60, 64, 90, 621, 740, 885, 944, 1034, 1074, 1075, 1119, 1133, 1188, 1300, 1305, 1391, 1415, 1461, 1484, 1494, 1536, 1554, 1556, 1588, 1600, 1624, 1627, 1656, 1672, 1721, 1738, 1766, 1770, 1794, 1889, 2007, 2043, 2044, 2060, 2065, 2067, 2075, 2080, 2083, 2088, 2089, 2091, 2092, 2093, 2101, 2103, 2105, 2109, 2110, 2116, 2119, 2125, 2130, 2132, 2136, 2145], "cycl": [1, 490, 904, 1019, 1203, 1832, 1839, 2075, 2103], "100": [1, 19, 23, 28, 32, 35, 64, 66, 74, 75, 80, 304, 743, 744, 747, 748, 939, 1035, 1250, 1289, 1301, 1307, 1345, 1360, 1367, 1376, 1391, 1433, 1452, 1460, 1461, 1462, 1463, 1464, 1476, 1477, 1479, 1480, 1482, 1483, 1510, 1511, 1512, 1548, 1555, 1557, 1588, 1597, 1636, 1637, 1690, 1810, 1828, 1829, 1835, 1836, 1837, 1838, 1840, 1842, 1843, 1859, 1914, 1993, 2045, 2047, 2064, 2077, 2078, 2099, 2101, 2105, 2111, 2113, 2114, 2119, 2131, 2134, 2139], "realli": [1, 7, 64, 1201, 1203, 2047, 2075, 2102, 2135], "y": [1, 5, 11, 14, 23, 35, 44, 52, 53, 55, 60, 61, 64, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 490, 621, 624, 786, 895, 897, 898, 899, 909, 910, 911, 914, 916, 917, 919, 920, 921, 922, 923, 924, 926, 927, 946, 965, 971, 998, 1005, 1035, 1061, 1062, 1102, 1113, 1119, 1123, 1176, 1178, 1181, 1182, 1183, 1187, 1188, 1229, 1296, 1301, 1305, 1358, 1367, 1368, 1391, 1460, 1461, 1462, 1463, 1464, 1465, 1481, 1483, 1502, 1507, 1508, 1510, 1511, 1512, 1514, 1520, 1535, 1539, 1540, 1551, 1552, 1553, 1555, 1557, 1563, 1580, 1581, 1588, 1591, 1597, 1598, 1625, 1654, 1671, 1695, 1728, 1737, 1759, 1792, 1861, 1879, 1881, 1882, 1935, 1949, 1976, 1980, 1981, 2007, 2010, 2044, 2045, 2046, 2047, 2051, 2056, 2065, 2066, 2073, 2075, 2076, 2077, 2078, 2082, 2086, 2087, 2090, 2097, 2099, 2102, 2104, 2109, 2111, 2115, 2119, 2123, 2124, 2125, 2130, 2131, 2132, 2133, 2136, 2144, 2145], "column": [1, 3, 24, 28, 34, 195, 264, 588, 591, 946, 981, 1001, 1005, 1102, 1132, 1160, 1161, 1255, 1325, 1326, 1329, 1345, 1348, 1353, 1357, 1362, 1434, 1557, 1600, 1645, 1646, 1753, 1805, 1847, 1857, 1938, 1940, 1941, 1942, 1944, 1945, 1958, 1959, 1980, 1984, 1986, 2001, 2073, 2086, 2114, 2119], "were": [1, 2, 3, 18, 19, 28, 37, 47, 51, 55, 60, 63, 64, 154, 325, 339, 475, 490, 865, 900, 902, 904, 916, 917, 925, 946, 1064, 1177, 1188, 1191, 1297, 1361, 1619, 1738, 1744, 1766, 1783, 1893, 1897, 1969, 1976, 2007, 2046, 2054, 2074, 2078, 2081, 2094, 2099, 2102, 2130, 2133, 2135, 2136, 2141, 2144, 2145], "remov": [1, 3, 23, 24, 28, 30, 35, 48, 51, 55, 64, 491, 492, 517, 550, 561, 702, 804, 823, 824, 825, 870, 935, 936, 939, 946, 950, 973, 974, 1064, 1177, 1196, 1234, 1286, 1289, 1293, 1379, 1380, 1384, 1469, 1470, 1471, 1548, 1549, 1558, 1656, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1754, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1773, 1774, 1775, 1776, 1778, 1779, 1789, 1791, 1794, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1857, 1873, 1895, 1949, 1958, 1982, 1989, 1991, 2042, 2043, 2057, 2068, 2075, 2081, 2089, 2094, 2099, 2100, 2102, 2111, 2116, 2121, 2133, 2136, 2138, 2141, 2144], "breviti": [1, 64, 946, 1005, 2099], "print": [1, 3, 5, 12, 18, 23, 25, 28, 33, 37, 39, 44, 45, 48, 52, 53, 55, 60, 63, 725, 733, 734, 739, 750, 751, 761, 769, 933, 935, 936, 946, 1035, 1176, 1177, 1186, 1203, 1289, 1293, 1296, 1297, 1301, 1379, 1465, 1509, 1535, 1548, 1560, 1561, 1636, 1693, 1696, 1697, 1759, 1769, 1770, 1771, 1772, 1775, 1785, 1789, 1801, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1905, 1999, 2042, 2044, 2045, 2051, 2055, 2059, 2071, 2075, 2077, 2078, 2081, 2085, 2089, 2090, 2097, 2098, 2099, 2100, 2102, 2103, 2109, 2119, 2120, 2124, 2125, 2130, 2131, 2133, 2134, 2136, 2138, 2145], "tabl": [1, 3, 28, 64, 946, 985, 1490, 1645, 2045, 2047, 2081, 2101, 2102, 2103, 2104, 2109, 2114, 2121, 2135, 2137, 2139, 2142, 2145], "sort_bi": [1, 946, 2103], "self_cpu_time_tot": [1, 946, 2103], "avg": [1, 28, 946, 1804], "mul": [1, 18, 52, 64, 66, 69, 72, 74, 79, 424, 752, 753, 762, 946, 1035, 1266, 1435, 2044, 2045, 2047, 2065, 2067, 2081, 2099, 2100, 2106, 2110, 2114, 2117, 2124, 2131, 2132, 2133, 2140, 2144], "32": [1, 2, 24, 28, 52, 91, 751, 1173, 1286, 1299, 1379, 1458, 1486, 1487, 1488, 1492, 1493, 1495, 1496, 1516, 1536, 1542, 1553, 1592, 1593, 1594, 1595, 1596, 1608, 1619, 1649, 1650, 1656, 1706, 2066, 2067, 2089, 2093, 2097, 2099, 2107, 2114, 2117, 2119, 2120, 2133, 2134, 2139], "048m": 1, "200": [1, 32, 1289, 1367, 1548, 1859, 2047, 2114, 2133, 2145], "27": [1, 621, 1357, 1831, 1854, 2001, 2099], "041m": 1, "powbackward0": [1, 946], "9": [1, 7, 23, 24, 28, 36, 64, 66, 71, 317, 319, 321, 325, 405, 406, 475, 517, 564, 585, 587, 702, 750, 751, 865, 967, 973, 977, 981, 1005, 1101, 1102, 1117, 1120, 1141, 1142, 1151, 1152, 1162, 1165, 1166, 1169, 1170, 1243, 1253, 1319, 1321, 1342, 1344, 1346, 1357, 1359, 1443, 1444, 1450, 1451, 1454, 1455, 1468, 1470, 1490, 1491, 1544, 1545, 1560, 1561, 1571, 1574, 1645, 1646, 1693, 1696, 1697, 1794, 1795, 1804, 1807, 1808, 1809, 1810, 1811, 1823, 1826, 1827, 1828, 1832, 1839, 1841, 1842, 1846, 1850, 1886, 1893, 1902, 1905, 1915, 1920, 1930, 1938, 1946, 1973, 1974, 1978, 1980, 1989, 2001, 2008, 2044, 2048, 2054, 2062, 2083, 2085, 2089, 2094, 2095, 2099, 2100, 2101, 2102, 2109, 2114, 2115, 2117, 2121, 2133], "727m": 1, "55": [1, 1501, 2099], "483m": 1, "accumulategrad": [1, 946, 2075], "148m": 1, "graphroot": [1, 946], "691": 1, "816u": 1, "emit": [1, 14, 39, 44, 64, 685, 1203, 1305, 1907, 2047, 2053, 2097, 2108, 2114, 2130], "nvtx": [1, 4, 2043], "program": [1, 3, 4, 8, 12, 18, 23, 27, 28, 39, 48, 51, 52, 53, 55, 64, 621, 939, 998, 999, 1067, 1069, 1177, 1216, 1901, 2044, 2046, 2048, 2061, 2075, 2078, 2083, 2088, 2090, 2091, 2093, 2094, 2095, 2097, 2104, 2119, 2126, 2130, 2132, 2133, 2134, 2135, 2136, 2138, 2141, 2143, 2145, 2147], "off": [1, 5, 7, 8, 14, 19, 27, 28, 37, 55, 64, 83, 927, 928, 952, 961, 1035, 1080, 1177, 1247, 1248, 1286, 1305, 1353, 1457, 1458, 1459, 1461, 1541, 1542, 1543, 1654, 1693, 2077, 2078, 2080, 2083, 2088, 2092, 2093, 2103, 2104, 2105, 2109, 2110, 2132, 2135, 2142], "o": [1, 24, 28, 29, 30, 35, 37, 48, 50, 51, 52, 64, 1035, 1194, 1198, 1200, 1289, 1361, 1405, 1406, 1407, 1519, 1548, 1554, 1738, 1889, 2042, 2048, 2064, 2075, 2078, 2080, 2083, 2085, 2095, 2102, 2109, 2127], "trace_nam": [1, 1035], "regular": [1, 3, 4, 28, 37, 48, 55, 58, 64, 985, 1061, 1062, 1176, 1203, 1217, 1337, 1338, 1467, 1485, 1486, 1487, 1488, 1492, 1533, 1547, 1548, 1549, 1550, 1558, 1559, 1647, 1685, 1728, 1741, 1742, 1789, 1805, 1808, 1823, 2047, 2051, 2066, 2067, 2078, 2081, 2082, 2088, 2089, 2097, 2099, 2102, 2104, 2107, 2109, 2114, 2115, 2123, 2125], "command": [1, 4, 28, 37, 45, 48, 64, 1035, 2062, 2078, 2085, 2087, 2091, 2095, 2103, 2110, 2127, 2139, 2142], "unfortun": [1, 9, 23, 52, 1738, 2075, 2081, 2134, 2135], "wai": [1, 3, 5, 7, 8, 9, 14, 23, 24, 28, 30, 32, 35, 40, 44, 52, 55, 57, 58, 63, 64, 154, 584, 685, 802, 828, 831, 834, 872, 873, 901, 904, 916, 917, 920, 922, 923, 924, 925, 930, 937, 1140, 1142, 1177, 1203, 1216, 1217, 1243, 1289, 1319, 1320, 1335, 1350, 1460, 1491, 1510, 1511, 1512, 1518, 1530, 1531, 1532, 1548, 1577, 1594, 1596, 1646, 1699, 1733, 1734, 1738, 1757, 1787, 1827, 1831, 1839, 2044, 2046, 2047, 2051, 2053, 2054, 2055, 2060, 2064, 2065, 2066, 2075, 2077, 2078, 2081, 2082, 2083, 2084, 2086, 2089, 2091, 2092, 2095, 2097, 2099, 2101, 2102, 2104, 2109, 2110, 2114, 2118, 2120, 2123, 2125, 2130, 2131, 2132, 2133, 2135, 2136, 2143, 2144, 2145, 2147], "disk": [1, 19, 23, 30, 1361, 1889, 2075, 2089, 2102, 2119], "annot": [1, 33, 34, 40, 45, 64, 940, 1287, 1295, 1301, 2044, 2046, 2048, 2051, 2099, 2109, 2136, 2137, 2143], "wait": [1, 18, 28, 37, 45, 47, 63, 90, 92, 490, 833, 1014, 1018, 1019, 1023, 1095, 1212, 1292, 1402, 1405, 1406, 1412, 1415, 1416, 1432, 1841, 2012, 2013, 2039, 2045, 2047, 2056, 2064, 2077, 2078, 2080, 2100, 2103, 2109, 2136, 2143, 2147, 2149], "either": [1, 8, 9, 14, 17, 18, 19, 23, 24, 28, 30, 32, 34, 35, 37, 40, 45, 47, 48, 50, 52, 53, 55, 60, 63, 64, 158, 225, 317, 325, 517, 519, 621, 685, 737, 743, 744, 745, 750, 751, 761, 769, 784, 790, 797, 869, 901, 903, 911, 912, 913, 914, 915, 916, 917, 926, 930, 931, 937, 950, 970, 983, 1031, 1119, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1173, 1177, 1211, 1243, 1266, 1282, 1289, 1305, 1345, 1360, 1361, 1376, 1389, 1391, 1439, 1450, 1451, 1454, 1455, 1458, 1459, 1460, 1461, 1475, 1476, 1477, 1479, 1480, 1481, 1483, 1491, 1501, 1507, 1514, 1516, 1517, 1539, 1540, 1542, 1543, 1548, 1551, 1552, 1553, 1554, 1555, 1562, 1564, 1566, 1580, 1581, 1596, 1597, 1599, 1601, 1602, 1603, 1626, 1627, 1637, 1665, 1666, 1690, 1698, 1725, 1732, 1738, 1772, 1794, 1807, 1808, 1810, 1823, 1826, 1839, 1854, 1856, 1901, 1954, 1958, 2010, 2042, 2044, 2046, 2047, 2049, 2051, 2053, 2066, 2073, 2075, 2076, 2078, 2081, 2082, 2083, 2086, 2088, 2089, 2091, 2093, 2094, 2097, 2099, 2101, 2102, 2104, 2110, 2111, 2114, 2115, 2118, 2121, 2132, 2137, 2150], "nvidia": [1, 14, 28, 1029, 1043, 1071, 1077, 1082, 1096, 1097, 1995, 2043, 2078, 2083, 2087, 2093, 2095, 2104, 2114, 2123, 2126, 2130, 2142, 2143, 2145], "visual": [1, 64, 1391, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1541, 1542, 1543, 1600, 2043, 2078, 2089, 2095, 2097, 2103, 2119, 2136, 2143, 2145], "nvvp": 1, "timelin": [1, 4, 1405, 1406, 2043, 2103], "load_nvprof": 1, "load": [1, 11, 14, 15, 24, 30, 32, 33, 52, 55, 62, 419, 846, 873, 942, 983, 1017, 1289, 1293, 1300, 1305, 1491, 1548, 1728, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1815, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1889, 2043, 2044, 2055, 2056, 2057, 2058, 2066, 2071, 2075, 2078, 2088, 2089, 2093, 2095, 2097, 2099, 2109, 2119, 2127, 2138, 2139, 2143, 2145], "repl": [1, 2138], "append": [1, 3, 30, 63, 64, 66, 71, 233, 258, 611, 766, 768, 770, 1064, 1109, 1111, 1384, 1500, 1519, 1550, 1559, 1564, 1566, 1577, 1738, 2045, 2046, 2047, 2075, 2077, 2078, 2091, 2095, 2099, 2100, 2114, 2119, 2144], "size": [1, 2, 3, 7, 11, 18, 20, 23, 24, 28, 30, 34, 35, 37, 47, 52, 53, 55, 58, 64, 66, 67, 72, 74, 75, 80, 142, 212, 246, 258, 259, 317, 319, 325, 343, 449, 450, 451, 453, 491, 497, 502, 503, 504, 517, 519, 521, 524, 527, 548, 549, 550, 570, 585, 587, 588, 589, 591, 592, 610, 611, 621, 622, 685, 695, 696, 698, 700, 701, 702, 704, 725, 733, 734, 740, 746, 747, 748, 750, 751, 761, 769, 771, 772, 773, 774, 784, 790, 791, 792, 802, 869, 876, 888, 889, 891, 903, 916, 917, 919, 920, 921, 922, 923, 924, 943, 951, 952, 954, 961, 963, 964, 965, 966, 967, 970, 974, 977, 983, 1005, 1015, 1025, 1031, 1032, 1034, 1075, 1100, 1101, 1107, 1110, 1117, 1119, 1120, 1121, 1122, 1125, 1136, 1137, 1138, 1140, 1141, 1142, 1144, 1145, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1171, 1173, 1174, 1175, 1182, 1183, 1188, 1202, 1203, 1207, 1213, 1217, 1230, 1247, 1248, 1252, 1253, 1264, 1266, 1286, 1289, 1311, 1320, 1329, 1334, 1342, 1346, 1350, 1353, 1355, 1356, 1357, 1359, 1360, 1362, 1370, 1376, 1377, 1379, 1380, 1384, 1387, 1389, 1390, 1391, 1392, 1395, 1396, 1397, 1398, 1400, 1408, 1434, 1436, 1439, 1442, 1444, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1490, 1491, 1493, 1494, 1495, 1496, 1499, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1560, 1561, 1563, 1564, 1570, 1571, 1572, 1573, 1574, 1575, 1580, 1588, 1592, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1627, 1632, 1633, 1634, 1637, 1638, 1645, 1646, 1649, 1650, 1654, 1665, 1672, 1679, 1680, 1681, 1690, 1691, 1693, 1696, 1697, 1699, 1706, 1725, 1726, 1727, 1728, 1737, 1738, 1755, 1770, 1780, 1781, 1782, 1783, 1784, 1786, 1788, 1791, 1793, 1795, 1798, 1799, 1805, 1810, 1825, 1845, 1846, 1847, 1848, 1850, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1879, 1884, 1893, 1896, 1914, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1951, 1952, 1953, 1954, 1957, 1958, 1959, 1973, 1974, 1975, 1980, 1982, 1990, 1991, 1992, 1993, 1994, 2002, 2003, 2005, 2006, 2007, 2008, 2040, 2041, 2043, 2044, 2045, 2047, 2051, 2055, 2057, 2060, 2062, 2065, 2066, 2071, 2074, 2075, 2076, 2078, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2093, 2094, 2099, 2100, 2103, 2104, 2106, 2109, 2114, 2116, 2117, 2119, 2120, 2127, 2130, 2132, 2133, 2134, 2135, 2136, 2139, 2140, 2143, 2145, 2147], "format": [1, 3, 20, 21, 24, 28, 30, 40, 50, 53, 64, 83, 159, 174, 176, 179, 182, 183, 184, 199, 210, 213, 244, 271, 301, 329, 335, 397, 503, 504, 529, 584, 587, 588, 589, 590, 591, 592, 627, 685, 740, 765, 798, 799, 980, 1035, 1064, 1079, 1119, 1120, 1121, 1175, 1196, 1203, 1207, 1286, 1289, 1303, 1332, 1467, 1491, 1499, 1518, 1548, 1564, 1596, 1738, 1746, 1747, 1781, 1783, 1784, 1799, 1801, 1867, 1869, 1871, 1889, 1931, 1935, 1940, 1941, 1942, 1943, 1944, 1945, 1954, 2041, 2042, 2044, 2047, 2048, 2053, 2068, 2071, 2078, 2081, 2089, 2096, 2097, 2099, 2100, 2103, 2104, 2109, 2110, 2114, 2117, 2119, 2121, 2143, 2145], "arg0": [1, 28, 2097], "arg1": [1, 28, 45, 46, 48, 53, 2097], "repres": [1, 8, 11, 23, 24, 28, 30, 33, 34, 35, 36, 37, 40, 41, 47, 50, 52, 53, 55, 64, 82, 84, 154, 237, 765, 798, 799, 802, 900, 916, 917, 985, 992, 1001, 1005, 1016, 1020, 1051, 1054, 1119, 1140, 1142, 1147, 1149, 1150, 1151, 1152, 1177, 1191, 1199, 1214, 1243, 1250, 1278, 1279, 1282, 1285, 1288, 1305, 1306, 1337, 1379, 1452, 1467, 1548, 1554, 1596, 1598, 1600, 1608, 1609, 1610, 1611, 1738, 1752, 1756, 1761, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1780, 1790, 1801, 1832, 1839, 1845, 1847, 1858, 1901, 1940, 1941, 1942, 1944, 1945, 1954, 1958, 1991, 1992, 1998, 2005, 2006, 2025, 2044, 2046, 2047, 2051, 2054, 2055, 2060, 2067, 2071, 2075, 2081, 2082, 2086, 2088, 2089, 2092, 2096, 2097, 2099, 2104, 2105, 2107, 2109, 2114, 2117, 2123, 2132, 2133, 2135, 2147, 2150], "order": [1, 3, 5, 28, 29, 30, 32, 33, 35, 48, 52, 55, 56, 61, 63, 64, 92, 154, 195, 212, 237, 317, 319, 321, 325, 335, 406, 491, 492, 685, 798, 799, 810, 865, 887, 904, 906, 925, 935, 936, 950, 962, 973, 1019, 1064, 1075, 1107, 1110, 1111, 1119, 1137, 1139, 1140, 1146, 1158, 1159, 1160, 1161, 1178, 1188, 1201, 1243, 1289, 1309, 1320, 1325, 1326, 1327, 1328, 1335, 1342, 1345, 1346, 1353, 1354, 1357, 1359, 1362, 1391, 1397, 1413, 1416, 1434, 1452, 1461, 1467, 1484, 1548, 1549, 1558, 1576, 1577, 1619, 1627, 1654, 1679, 1680, 1681, 1706, 1728, 1738, 1756, 1766, 1780, 1781, 1782, 1783, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1839, 1845, 1848, 1858, 1893, 1896, 1920, 1930, 1958, 1977, 1984, 1986, 1991, 1995, 2001, 2007, 2042, 2043, 2044, 2045, 2047, 2048, 2051, 2064, 2065, 2066, 2067, 2073, 2076, 2078, 2080, 2081, 2082, 2084, 2086, 2089, 2092, 2094, 2097, 2099, 2101, 2102, 2104, 2106, 2109, 2110, 2111, 2114, 2115, 2117, 2121, 2123, 2125, 2127, 2130, 2131, 2132, 2133, 2136, 2139, 2143, 2145], "backend": [1, 14, 46, 51, 53, 55, 746, 747, 748, 798, 799, 842, 866, 867, 870, 872, 873, 919, 925, 983, 985, 992, 1044, 1075, 1119, 1177, 1202, 1207, 1303, 1326, 1333, 1335, 1353, 1405, 1406, 1407, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1607, 1612, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1654, 1693, 1706, 1738, 1801, 1802, 1901, 1996, 1998, 2043, 2045, 2046, 2056, 2057, 2061, 2063, 2077, 2078, 2081, 2092, 2093, 2099, 2105, 2107, 2114, 2134, 2136, 2137, 2138, 2139, 2140, 2142, 2152], "side": [1, 14, 28, 47, 50, 52, 53, 60, 64, 66, 69, 490, 773, 774, 777, 778, 779, 976, 1053, 1113, 1135, 1136, 1138, 1141, 1142, 1147, 1149, 1150, 1151, 1152, 1155, 1286, 1287, 1334, 1339, 1350, 1352, 1457, 1458, 1459, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1524, 1525, 1526, 1527, 1528, 1529, 1541, 1542, 1543, 1570, 1571, 1573, 1574, 1575, 1600, 1604, 1605, 1606, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1679, 1680, 1681, 1693, 1784, 1832, 1862, 1863, 1893, 1954, 1982, 2042, 2044, 2045, 2047, 2074, 2075, 2078, 2081, 2086, 2109, 2127, 2130, 2143], "creation": [1, 2, 23, 28, 30, 64, 490, 750, 751, 761, 769, 833, 1018, 1177, 1738, 1740, 1761, 2012, 2044, 2048, 2060, 2064, 2071, 2075, 2078, 2109, 2111, 2114, 2120, 2132], "warmup": [1, 3, 1064, 2078, 2103, 2130, 2136, 2143], "correl": [1, 35, 48, 1001, 1475, 1476, 1477, 1478, 1479, 1480, 1486, 1487, 1488, 1492], "view": [1, 7, 8, 11, 18, 23, 24, 30, 32, 37, 53, 55, 64, 66, 75, 81, 226, 258, 439, 501, 502, 503, 611, 622, 697, 702, 765, 889, 897, 898, 899, 910, 926, 950, 965, 977, 998, 999, 1109, 1110, 1117, 1158, 1159, 1160, 1161, 1177, 1253, 1289, 1345, 1356, 1406, 1468, 1491, 1499, 1518, 1548, 1564, 1600, 1601, 1602, 1603, 1646, 1692, 1738, 1744, 1848, 1880, 1884, 1885, 1889, 1895, 1896, 1926, 1946, 1957, 1969, 1974, 1978, 1990, 2005, 2006, 2008, 2043, 2044, 2045, 2064, 2066, 2067, 2076, 2081, 2084, 2097, 2100, 2106, 2109, 2111, 2114, 2116, 2117, 2120, 2135, 2140, 2142, 2144, 2145], "difficult": [1, 7, 9, 33, 52, 60, 985, 1188, 2007, 2135, 2136, 2141, 2143, 2145], "eas": [1, 64, 2077, 2081, 2087, 2132, 2144], "sequenc": [1, 23, 30, 32, 33, 34, 35, 52, 55, 92, 154, 570, 740, 765, 822, 891, 904, 925, 967, 969, 970, 973, 981, 1023, 1030, 1031, 1034, 1104, 1118, 1120, 1188, 1251, 1252, 1255, 1305, 1345, 1391, 1416, 1452, 1462, 1467, 1475, 1484, 1491, 1499, 1518, 1554, 1564, 1577, 1592, 1593, 1594, 1595, 1596, 1609, 1646, 1706, 1756, 1759, 1766, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1795, 1798, 1802, 1824, 1828, 1864, 1866, 1870, 1893, 1951, 1954, 1993, 2007, 2009, 2013, 2040, 2044, 2045, 2046, 2051, 2067, 2071, 2078, 2083, 2084, 2097, 2099, 2102, 2109, 2113, 2120, 2121, 2130, 2132, 2133, 2134, 2136, 2144, 2145], "gener": [1, 2, 3, 7, 8, 14, 23, 24, 28, 33, 35, 38, 40, 41, 45, 48, 52, 55, 56, 57, 65, 66, 71, 75, 86, 157, 158, 177, 262, 290, 381, 425, 458, 485, 612, 685, 750, 751, 931, 953, 983, 1050, 1053, 1061, 1062, 1065, 1066, 1086, 1087, 1089, 1090, 1091, 1119, 1141, 1142, 1177, 1188, 1192, 1193, 1197, 1203, 1213, 1242, 1247, 1265, 1293, 1299, 1310, 1321, 1326, 1335, 1352, 1353, 1357, 1362, 1382, 1390, 1403, 1404, 1405, 1406, 1407, 1409, 1411, 1423, 1429, 1434, 1483, 1494, 1508, 1592, 1600, 1601, 1610, 1611, 1619, 1645, 1663, 1728, 1754, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1788, 1791, 1795, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1816, 1822, 1823, 1824, 1825, 1826, 1827, 1845, 1847, 1850, 1864, 1866, 1868, 1869, 1870, 1872, 1894, 1906, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1959, 1975, 1979, 1996, 1998, 2001, 2007, 2024, 2030, 2031, 2032, 2033, 2035, 2036, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2057, 2065, 2071, 2073, 2075, 2078, 2081, 2083, 2084, 2086, 2088, 2089, 2091, 2095, 2097, 2099, 2100, 2101, 2102, 2103, 2108, 2109, 2110, 2114, 2117, 2119, 2121, 2124, 2126, 2127, 2130, 2131, 2132, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2144, 2145, 2146], "seq": [1, 609, 765, 970, 982, 1391, 1499, 1518, 1554, 1564, 1592, 1594, 1596, 1783, 1989], "n": [1, 3, 19, 28, 30, 34, 35, 37, 40, 45, 48, 53, 64, 233, 264, 410, 469, 470, 490, 691, 694, 695, 696, 740, 763, 765, 786, 888, 943, 949, 951, 952, 954, 961, 963, 967, 973, 974, 975, 976, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1100, 1101, 1111, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1180, 1183, 1188, 1201, 1207, 1213, 1226, 1243, 1247, 1248, 1252, 1286, 1289, 1301, 1305, 1306, 1309, 1310, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1370, 1379, 1384, 1386, 1391, 1394, 1436, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1507, 1508, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1520, 1530, 1531, 1532, 1536, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1551, 1552, 1553, 1554, 1555, 1557, 1563, 1564, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1580, 1582, 1583, 1584, 1588, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1619, 1625, 1637, 1638, 1646, 1650, 1654, 1690, 1693, 1695, 1706, 1737, 1738, 1753, 1765, 1774, 1793, 1845, 1846, 1847, 1852, 1857, 1858, 1864, 1870, 1872, 1885, 1893, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1935, 1936, 1952, 1953, 1954, 1958, 1959, 1974, 1975, 1980, 1984, 1986, 2001, 2002, 2003, 2004, 2007, 2045, 2047, 2051, 2065, 2066, 2071, 2073, 2075, 2078, 2081, 2083, 2086, 2091, 2102, 2103, 2104, 2105, 2114, 2115, 2119, 2120, 2121, 2133, 2136, 2140], "counter": [1, 28, 926, 937, 1057, 1075, 1484, 2060, 2064, 2075], "increment": [1, 28, 47, 52, 937, 939, 1173, 1252, 1293, 1484, 2044, 2046, 2075, 2097, 2109, 2133], "object": [1, 3, 5, 6, 8, 14, 23, 24, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 47, 49, 50, 52, 53, 55, 63, 64, 66, 68, 90, 91, 92, 210, 213, 419, 607, 627, 799, 800, 803, 806, 809, 865, 872, 891, 901, 902, 903, 911, 916, 917, 943, 945, 950, 983, 1020, 1021, 1042, 1053, 1094, 1119, 1158, 1170, 1173, 1178, 1179, 1181, 1182, 1183, 1187, 1194, 1198, 1203, 1221, 1222, 1275, 1276, 1289, 1296, 1297, 1300, 1301, 1305, 1306, 1321, 1342, 1346, 1359, 1361, 1362, 1382, 1415, 1416, 1484, 1486, 1487, 1488, 1492, 1510, 1511, 1512, 1548, 1558, 1588, 1738, 1757, 1772, 1781, 1782, 1785, 1786, 1787, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1889, 1962, 1963, 1967, 1996, 1999, 2000, 2019, 2042, 2046, 2047, 2048, 2051, 2055, 2057, 2058, 2064, 2068, 2071, 2075, 2077, 2078, 2081, 2082, 2083, 2086, 2088, 2091, 2093, 2094, 2095, 2097, 2099, 2101, 2103, 2104, 2106, 2107, 2108, 2109, 2111, 2116, 2117, 2119, 2121, 2131, 2133, 2134, 2135, 2141, 2144, 2146, 2147, 2150], "stash": [1, 5, 1021, 2078, 2081], "associ": [1, 8, 9, 28, 30, 41, 49, 52, 53, 55, 908, 909, 983, 1026, 1078, 1079, 1081, 1238, 1251, 1252, 1289, 1339, 1350, 1352, 1361, 1467, 1548, 1558, 1638, 1738, 1754, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1914, 1916, 2044, 2047, 2053, 2059, 2065, 2066, 2075, 2086, 2089, 2092, 2094, 2097, 2102, 2103, 2109, 2110, 2116, 2117, 2120, 2133, 2135, 2136, 2145, 2147, 2148], "tell": [1, 7, 64, 500, 985, 1215, 1216, 1226, 1290, 1297, 1361, 1802, 2044, 2051, 2054, 2075, 2081, 2082, 2102, 2133, 2134, 2147], "top": [1, 3, 7, 8, 12, 23, 30, 34, 35, 40, 53, 55, 59, 64, 752, 943, 1460, 1461, 1483, 1507, 1514, 1539, 1555, 1598, 1601, 1654, 1761, 1765, 1767, 1921, 1977, 1997, 2048, 2051, 2054, 2064, 2081, 2097, 2101, 2133, 2134, 2142, 2143], "m": [1, 4, 8, 19, 24, 28, 34, 35, 44, 48, 52, 64, 90, 691, 694, 695, 696, 725, 733, 734, 743, 744, 745, 746, 747, 748, 750, 751, 761, 763, 769, 822, 851, 871, 872, 873, 951, 963, 967, 971, 1132, 1186, 1252, 1287, 1289, 1294, 1296, 1300, 1301, 1307, 1310, 1321, 1329, 1335, 1336, 1337, 1338, 1342, 1343, 1344, 1346, 1347, 1348, 1353, 1354, 1355, 1356, 1362, 1379, 1380, 1384, 1394, 1415, 1434, 1436, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1495, 1496, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1534, 1535, 1537, 1538, 1541, 1542, 1543, 1547, 1548, 1556, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1693, 1695, 1738, 1753, 1755, 1759, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1787, 1788, 1791, 1845, 1846, 1847, 1857, 1864, 1893, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1935, 1936, 1954, 1958, 1959, 1975, 1982, 2044, 2045, 2046, 2047, 2055, 2071, 2078, 2081, 2083, 2086, 2089, 2091, 2094, 2104, 2114, 2125, 2126, 2129, 2136, 2149], "By": [1, 2, 3, 5, 14, 19, 23, 28, 34, 39, 44, 52, 55, 64, 92, 449, 450, 451, 452, 453, 891, 983, 1005, 1023, 1067, 1069, 1102, 1114, 1137, 1139, 1140, 1141, 1142, 1150, 1151, 1152, 1178, 1179, 1181, 1182, 1188, 1243, 1251, 1252, 1293, 1342, 1353, 1361, 1390, 1395, 1416, 1438, 1460, 1461, 1462, 1463, 1464, 1481, 1483, 1501, 1507, 1510, 1511, 1512, 1513, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1588, 1597, 1626, 1627, 1637, 1666, 1690, 1698, 1755, 1791, 1847, 1858, 1879, 1933, 1980, 2007, 2013, 2042, 2046, 2051, 2054, 2062, 2071, 2075, 2078, 2081, 2083, 2084, 2089, 2091, 2092, 2094, 2097, 2099, 2101, 2108, 2109, 2114, 2121, 2133, 2134, 2136, 2139, 2141, 2145, 2149], "compar": [1, 3, 5, 14, 23, 52, 55, 64, 87, 699, 876, 887, 925, 926, 927, 985, 1075, 1123, 1124, 1147, 1148, 1149, 1153, 1154, 1155, 1156, 1165, 1166, 1203, 1232, 1246, 1278, 1314, 1378, 1388, 1393, 1445, 1554, 1738, 1792, 1959, 1991, 2043, 2047, 2060, 2078, 2081, 2086, 2092, 2095, 2104, 2105, 2109, 2114, 2119, 2121, 2124, 2125, 2130, 2137, 2142], "down": [1, 7, 14, 23, 35, 37, 45, 46, 48, 64, 784, 1075, 1114, 1161, 1167, 1299, 1335, 1665, 1858, 1886, 2081, 2088, 2091, 2099, 2109, 2111, 2114, 2119, 2139, 2145, 2149], "irrelev": [1, 3, 2048], "simpli": [1, 3, 14, 23, 28, 30, 34, 35, 40, 48, 52, 63, 64, 874, 1177, 1276, 1287, 1456, 1485, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1901, 2044, 2046, 2075, 2082, 2086, 2089, 2090, 2103, 2114, 2132, 2133, 2134, 2136, 2141], "earlier": [1, 6, 33, 55, 1746, 1747, 1958, 2075, 2078, 2083, 2084, 2088, 2094, 2099, 2103], "hand": [1, 4, 33, 55, 60, 64, 976, 1113, 1119, 1287, 1334, 1339, 1350, 1352, 1456, 1558, 1577, 1982, 1995, 2044, 2046, 2047, 2075, 2086, 2089, 2091, 2094, 2102, 2114, 2133, 2135, 2136], "underwai": [1, 1059, 2078], "up": [1, 6, 7, 8, 9, 14, 19, 23, 24, 28, 32, 33, 35, 37, 40, 44, 46, 47, 50, 51, 52, 55, 58, 64, 784, 790, 901, 916, 917, 939, 983, 1061, 1062, 1064, 1102, 1119, 1148, 1149, 1154, 1156, 1161, 1177, 1201, 1228, 1280, 1293, 1299, 1302, 1303, 1348, 1452, 1467, 1494, 1554, 1594, 1596, 1600, 1601, 1619, 1645, 1654, 1665, 1725, 1738, 1746, 1747, 1827, 1864, 1886, 1991, 1992, 2042, 2044, 2046, 2054, 2060, 2062, 2064, 2065, 2066, 2071, 2075, 2076, 2077, 2078, 2083, 2084, 2086, 2087, 2089, 2092, 2099, 2102, 2103, 2104, 2109, 2110, 2121, 2123, 2130, 2133, 2134, 2135, 2141, 2143, 2145, 2147, 2149], "nonzero": [1, 55, 1213, 1286, 1371, 1373, 1374, 1379, 2010, 2045, 2051, 2055, 2100, 2132, 2135, 2140], "themselv": [1, 9, 35, 47, 55, 799, 852, 1977, 2078, 2102, 2146], "later": [1, 2, 3, 7, 22, 24, 28, 30, 33, 55, 63, 64, 91, 490, 750, 751, 761, 769, 942, 1053, 1212, 1361, 1518, 1541, 1542, 1543, 1564, 1578, 1679, 1680, 1681, 1709, 1738, 1958, 2044, 2075, 2077, 2080, 2085, 2089, 2094, 2103, 2110, 2111, 2127, 2133, 2141], "origin": [1, 5, 11, 12, 18, 19, 23, 24, 28, 30, 33, 40, 52, 53, 55, 58, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 210, 213, 225, 490, 549, 607, 611, 621, 627, 685, 765, 804, 847, 848, 849, 865, 868, 869, 968, 973, 1019, 1139, 1140, 1142, 1146, 1150, 1151, 1152, 1158, 1176, 1186, 1192, 1264, 1286, 1297, 1301, 1302, 1305, 1306, 1383, 1397, 1452, 1456, 1468, 1483, 1484, 1499, 1578, 1588, 1637, 1709, 1746, 1747, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1780, 1783, 1786, 1788, 1789, 1791, 1801, 1823, 1839, 1848, 1884, 1895, 1930, 1946, 1980, 1991, 1992, 2044, 2047, 2053, 2064, 2066, 2071, 2075, 2078, 2081, 2083, 2084, 2088, 2091, 2092, 2094, 2099, 2102, 2104, 2105, 2113, 2114, 2116, 2120, 2124, 2125, 2131, 2133, 2134, 2135, 2136, 2137, 2139, 2143, 2144, 2145, 2146], "did": [1, 7, 8, 28, 47, 1216, 1441, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2046, 2047, 2086, 2094, 2102, 2133, 2138, 2147], "relationship": [1, 9, 33, 44, 52, 64, 980, 1243, 1598, 2075, 2078, 2094, 2102, 2135], "conceptu": [1, 3, 2075, 2082, 2111, 2134], "tag": [1, 3, 7, 28, 52, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 992, 1361, 2042, 2043, 2051, 2088, 2094, 2102, 2104, 2119], "eventu": [1, 7, 47, 55, 990, 2042, 2135], "itt": [1, 2103], "intel": [1, 4, 2043, 2095, 2122, 2126, 2138, 2142, 2152], "r": [1, 35, 61, 154, 900, 902, 904, 916, 917, 925, 930, 971, 982, 985, 1001, 1119, 1178, 1180, 1183, 1188, 1190, 1205, 1230, 1233, 1243, 1301, 1319, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1335, 1336, 1339, 1341, 1348, 1350, 1352, 1353, 1362, 1490, 1491, 1500, 1560, 1561, 1580, 1645, 1646, 1696, 1697, 1753, 1825, 1857, 2007, 2044, 2045, 2046, 2075, 2077, 2081, 2085, 2086, 2095, 2114, 2117, 2119, 2145], "instrument": [1, 3, 24, 1406, 2043, 2088, 2125], "technologi": [1, 52, 2043, 2097, 2098, 2126], "applic": [1, 2, 9, 19, 33, 35, 38, 47, 492, 807, 818, 819, 820, 821, 911, 914, 916, 983, 1043, 1182, 1203, 1213, 1401, 1483, 1484, 1594, 1596, 1637, 1738, 1995, 2020, 2043, 2051, 2054, 2067, 2075, 2077, 2078, 2080, 2081, 2087, 2088, 2089, 2093, 2099, 2101, 2104, 2109, 2110, 2111, 2114, 2120, 2136, 2147], "tool": [1, 4, 8, 9, 18, 28, 33, 48, 53, 64, 872, 942, 1406, 1933, 2042, 2043, 2044, 2046, 2059, 2077, 2078, 2095, 2099, 2102, 2103, 2125, 2133, 2134, 2136, 2139, 2143, 2145, 2147], "With": [1, 18, 23, 28, 35, 55, 63, 744, 745, 746, 747, 748, 790, 1075, 1140, 1141, 1142, 1150, 1151, 1152, 1306, 1462, 1463, 1464, 1476, 1477, 1479, 1480, 1493, 1510, 1511, 1512, 1588, 1599, 1601, 1630, 1633, 1665, 1691, 1725, 1824, 1868, 2048, 2075, 2078, 2081, 2104, 2109, 2114, 2119, 2129, 2133, 2137, 2142, 2145], "abl": [1, 2, 7, 8, 18, 28, 30, 33, 47, 52, 60, 490, 985, 1177, 1202, 1287, 1300, 1592, 2044, 2055, 2059, 2065, 2075, 2081, 2082, 2084, 2094, 2099, 2102, 2104, 2109, 2114, 2121, 2131, 2132, 2133, 2135, 2136, 2137, 2141, 2145, 2147], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 15, 20, 52, 339, 746, 747, 748, 911, 912, 916, 925, 937, 1188, 1864, 2007, 2075, 2078, 2080, 2081, 2096, 2097, 2109, 2110, 2126, 2136], "traceback": [1, 18, 40, 48, 52, 63, 64, 926, 1203, 1274, 1933, 2046, 2047, 2048, 2055, 2064, 2067, 2081, 2093, 2114, 2121, 2145, 2147], "fail": [1, 7, 19, 20, 28, 30, 37, 39, 40, 41, 45, 46, 47, 48, 51, 52, 63, 64, 66, 71, 75, 76, 77, 86, 490, 930, 931, 1019, 1075, 1193, 1213, 1290, 1297, 1300, 1319, 1348, 1353, 1361, 1362, 1379, 1800, 2047, 2049, 2062, 2064, 2075, 2078, 2081, 2091, 2092, 2094, 2095, 2099, 2102, 2109, 2117, 2131, 2132, 2133, 2134, 2136, 2137, 2145, 2147], "test": [1, 3, 14, 18, 19, 28, 45, 47, 48, 64, 66, 74, 75, 698, 704, 983, 1136, 1138, 1139, 1144, 1145, 1150, 1151, 1152, 1154, 1156, 1203, 1211, 1217, 1221, 1222, 1229, 1275, 1276, 1280, 1281, 1283, 1284, 1801, 1922, 2043, 2044, 2048, 2060, 2064, 2075, 2084, 2086, 2093, 2099, 2101, 2103, 2119, 2125, 2135, 2145, 2146], "slow": [1, 930, 1299, 1303, 1319, 1320, 1744, 1745, 1787, 1991, 2086, 2091, 2119, 2132, 2135, 2145], "import": [1, 2, 3, 5, 7, 9, 12, 14, 17, 18, 20, 23, 24, 28, 29, 30, 32, 33, 34, 35, 36, 39, 41, 44, 45, 50, 52, 53, 55, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 685, 739, 746, 747, 748, 777, 778, 779, 798, 871, 872, 873, 926, 933, 935, 962, 969, 1005, 1035, 1170, 1173, 1176, 1177, 1178, 1180, 1181, 1182, 1183, 1184, 1186, 1286, 1287, 1290, 1292, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1305, 1306, 1307, 1341, 1342, 1345, 1346, 1359, 1391, 1548, 1608, 1612, 1738, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1782, 1783, 1784, 1785, 1786, 1787, 1794, 1826, 1827, 1851, 1993, 2044, 2046, 2047, 2048, 2051, 2055, 2056, 2060, 2064, 2067, 2073, 2074, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2085, 2088, 2089, 2091, 2092, 2093, 2094, 2097, 2098, 2099, 2104, 2107, 2109, 2110, 2111, 2114, 2117, 2119, 2120, 2121, 2125, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2136, 2138, 2143, 2144, 2145, 2146, 2152], "myfunc": [1, 2082], "inp": [1, 12, 23, 28, 64, 906, 909, 910, 1600, 1738, 2051, 2130, 2140, 2143, 2146], "clone": [1, 15, 23, 55, 66, 91, 258, 452, 911, 912, 915, 916, 917, 926, 927, 928, 933, 935, 936, 965, 1293, 1490, 1724, 1973, 1982, 2045, 2051, 2064, 2067, 2085, 2094, 2100, 2114, 2116, 2117, 2121, 2130, 2140], "runtimeerror": [1, 14, 28, 32, 60, 64, 86, 91, 587, 702, 911, 912, 916, 926, 964, 1035, 1167, 1274, 1289, 1319, 1320, 1321, 1329, 1330, 1331, 1333, 1337, 1343, 1350, 1355, 1356, 1382, 1434, 1548, 1800, 1895, 1933, 1995, 2044, 2046, 2047, 2065, 2067, 2071, 2074, 2076, 2083, 2093, 2095, 2099, 2104, 2108, 2114, 2117, 2130], "run_fn": [1, 5, 868, 874], "recent": [1, 7, 8, 51, 63, 926, 1274, 1933, 2046, 2047, 2055, 2067, 2081, 2092, 2093, 2114, 2121, 2142, 2145], "last": [1, 5, 6, 11, 23, 24, 29, 32, 34, 35, 37, 47, 53, 63, 64, 319, 621, 697, 765, 888, 926, 950, 952, 961, 967, 977, 1061, 1102, 1107, 1111, 1136, 1138, 1141, 1142, 1144, 1145, 1148, 1149, 1151, 1152, 1154, 1156, 1158, 1203, 1247, 1248, 1252, 1266, 1274, 1286, 1311, 1345, 1348, 1353, 1390, 1395, 1452, 1457, 1458, 1459, 1465, 1483, 1491, 1493, 1499, 1518, 1520, 1535, 1555, 1558, 1562, 1563, 1564, 1577, 1593, 1594, 1600, 1625, 1646, 1655, 1668, 1692, 1693, 1737, 1738, 1740, 1746, 1747, 1793, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1884, 1893, 1901, 1930, 1933, 1940, 1941, 1942, 1944, 1945, 1946, 1954, 1958, 1975, 1977, 1980, 2005, 2006, 2046, 2047, 2055, 2060, 2065, 2067, 2075, 2078, 2081, 2086, 2093, 2097, 2099, 2102, 2103, 2114, 2120, 2121, 2131, 2133, 2139, 2145], "stdin": [1, 28, 926, 1933, 2055, 2067, 2081, 2093, 2114], "instal": [1, 3, 14, 15, 28, 64, 1203, 2042, 2085, 2089, 2090, 2097, 2098, 2099, 2102, 2109, 2119, 2127, 2131, 2132, 2133, 2134, 2141], "_tensor": [1, 158], "py": [1, 4, 14, 18, 28, 32, 33, 35, 39, 41, 46, 48, 53, 55, 64, 88, 871, 1035, 1738, 2042, 2044, 2047, 2053, 2080, 2085, 2086, 2088, 2091, 2099, 2102, 2103, 2104, 2110, 2127, 2129, 2131, 2132, 2133, 2134, 2135, 2136, 2138, 2139, 2142, 2144, 2145, 2147], "93": [1, 621, 1101], "retain_graph": [1, 154, 904, 925, 935, 936, 1188, 2007, 2045, 2074, 2075, 2081, 2109], "90": [1, 1103, 1843, 1885, 2051, 2062], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 14, 28, 45, 47, 2042, 2078, 2103, 2130, 2139], "53": [1, 485], "44": [1, 325, 449, 1122, 1459, 1517, 1543, 1787, 2134], "set_detect_anomali": 1, "behaviour": [1, 698, 699, 704, 1654, 1693, 1839, 1907, 2042, 2092], "interpos": [1, 2081], "grad_fn": [1, 154, 339, 492, 891, 904, 919, 920, 921, 922, 923, 924, 933, 935, 936, 1176, 1754, 1935, 2075, 2081, 2089, 2094], "node": [1, 28, 32, 37, 40, 41, 46, 47, 52, 55, 64, 66, 76, 77, 81, 84, 685, 827, 828, 829, 830, 833, 834, 835, 848, 911, 946, 1064, 1186, 1201, 1203, 1220, 1226, 1304, 1467, 1484, 1738, 1801, 2057, 2078, 2097, 2099, 2102, 2109, 2110, 2111, 2123, 2125, 2132, 2133, 2135, 2136, 2142, 2144, 2145], "grad_mod": [1, 926, 927, 928, 2045], "least": [1, 5, 6, 8, 24, 30, 35, 46, 47, 55, 264, 406, 702, 954, 1107, 1109, 1110, 1119, 1160, 1161, 1171, 1202, 1243, 1251, 1252, 1286, 1312, 1335, 1362, 1384, 1438, 1452, 1738, 1781, 2042, 2047, 2066, 2073, 2075, 2076, 2078, 2083, 2084, 2105, 2111, 2114, 2115, 2116, 2121, 2136, 2138, 2145], "intermediari": [1, 14, 35, 911, 914, 916, 2075, 2086, 2133, 2136], "access": [1, 9, 18, 23, 28, 30, 33, 52, 53, 63, 66, 68, 82, 492, 561, 739, 911, 914, 916, 917, 949, 1027, 1035, 1289, 1292, 1305, 1352, 1452, 1548, 1728, 1741, 1742, 1754, 1759, 1781, 1791, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2026, 2043, 2044, 2045, 2047, 2048, 2051, 2057, 2059, 2061, 2063, 2064, 2066, 2067, 2075, 2078, 2083, 2086, 2088, 2089, 2097, 2109, 2114, 2117, 2118, 2120, 2127, 2130, 2132, 2133, 2134, 2135, 2136, 2138, 2141, 2150], "isinst": [1, 23, 35, 64, 933, 935, 936, 1276, 1287, 2045, 2047, 2075, 2081, 2089, 2102, 2114, 2136, 2144, 2145], "dir": [1, 1061, 1801, 2042, 2047, 2102], "__call__": [1, 1289, 1548, 2133], "__class__": [1, 41, 66], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 2048], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 2048], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 2047], "__ne__": 1, "__new__": [1, 2046, 2048], "__reduce__": [1, 2102], "__reduce_ex__": 1, "__repr__": [1, 3, 2081], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 64, 2045, 2047], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 2075], "metadata": [1, 3, 5, 12, 30, 40, 41, 52, 66, 74, 75, 937, 997, 1361, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1889, 2051, 2055, 2067, 2075, 2081, 2082, 2094, 2097, 2102, 2103, 2109, 2110, 2114, 2119, 2135, 2144], "next_funct": 1, "register_prehook": [1, 2075], "allclos": [1, 60, 61, 64, 930, 931, 1061, 1141, 1142, 1148, 1149, 1177, 1178, 1180, 1181, 1182, 1183, 1187, 1188, 1337, 1339, 1350, 1352, 1355, 1356, 1381, 1759, 1786, 1857, 2007, 2045, 2051, 2082, 2100, 2114], "pack": [1, 32, 743, 744, 745, 746, 747, 748, 750, 751, 765, 786, 1305, 1306, 1381, 1484, 1499, 1518, 1564, 1780, 1781, 1782, 1783, 2045, 2057, 2067, 2075, 2083, 2095, 2104, 2133], "unpack": [1, 66, 71, 72, 765, 907, 910, 1305, 1337, 1381, 1484, 1783, 1785, 1792, 1802, 2047, 2048, 2075, 2081, 2083], "hook": [1, 29, 32, 55, 491, 492, 753, 762, 911, 914, 916, 935, 936, 939, 1064, 1289, 1484, 1548, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1755, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1772, 1777, 1788, 1791, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 2043, 2068, 2080, 2081, 2088, 2096, 2097, 2102, 2104, 2134, 2135, 2136, 2137], "common": [1, 3, 8, 23, 33, 37, 47, 60, 66, 83, 88, 690, 799, 876, 956, 959, 964, 985, 1000, 1114, 1119, 1164, 1165, 1166, 1167, 1213, 1231, 1312, 1361, 1433, 1462, 1463, 1464, 1467, 1588, 1636, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1877, 1889, 1955, 1998, 2043, 2047, 2052, 2066, 2075, 2078, 2081, 2082, 2083, 2089, 2091, 2094, 2099, 2102, 2113, 2114, 2115, 2118, 2121, 2130, 2131, 2132, 2136, 2141, 2143, 2144, 2145, 2147], "trade": [1, 5, 8, 55, 1353, 1461, 1901, 2077, 2083, 2105], "leav": [1, 8, 37, 48, 154, 904, 1196, 1294, 1307, 1757, 1760, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1949, 2044, 2046, 2047, 2055, 2075, 2078, 2097, 2102, 2105, 2133], "especi": [1, 9, 11, 23, 28, 53, 64, 258, 965, 983, 993, 1724, 2046, 2055, 2075, 2081, 2082, 2092, 2094, 2104, 2109, 2114, 2130, 2135, 2136, 2138], "notic": [1, 12, 28, 53, 65, 694, 1139, 1153, 1197, 1384, 1394, 1460, 1601, 1671, 1829, 1830, 1836, 1837, 1843, 1991, 2043, 2044, 2075, 2114, 2133, 2136, 2139, 2141, 2143], "fit": [1, 9, 39, 59, 60, 503, 943, 1286, 1810, 1879, 2078, 2097, 2121, 2145], "evalu": [1, 4, 8, 9, 32, 35, 52, 58, 64, 698, 704, 805, 874, 930, 1075, 1183, 1184, 1193, 1201, 1203, 1224, 1225, 1228, 1289, 1452, 1456, 1462, 1463, 1464, 1485, 1502, 1510, 1511, 1512, 1520, 1548, 1562, 1567, 1588, 1698, 1706, 1721, 1757, 1810, 1832, 1864, 2047, 2048, 2081, 2089, 2096, 2097, 2114, 2123, 2126, 2132, 2134, 2135], "saved_tensors_hook": [1, 911, 914, 916, 2075], "pack_hook": [1, 2075], "unpack_hook": [1, 2075], "pair": [1, 28, 30, 34, 35, 47, 50, 52, 621, 740, 876, 950, 971, 1005, 1153, 1199, 1203, 1303, 1353, 1391, 1540, 1549, 1554, 1558, 1695, 1825, 1873, 2046, 2047, 2053, 2065, 2071, 2075, 2078, 2109, 2110, 2111, 2119, 2121, 2125, 2136, 2143], "retriev": [1, 23, 24, 28, 32, 33, 47, 64, 91, 541, 900, 901, 916, 917, 1035, 1201, 1219, 1490, 1494, 1600, 1645, 1738, 1781, 1801, 1830, 1933, 2067, 2075, 2088, 2099, 2102, 2109, 2110, 2111, 2127, 2134, 2147], "everytim": 1, "store": [1, 3, 5, 14, 18, 24, 30, 33, 37, 41, 48, 52, 53, 55, 64, 330, 336, 402, 691, 831, 834, 901, 916, 963, 1030, 1032, 1034, 1205, 1233, 1289, 1295, 1297, 1300, 1320, 1331, 1332, 1333, 1362, 1367, 1379, 1462, 1463, 1464, 1490, 1548, 1577, 1738, 1753, 1756, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1780, 1901, 1938, 2042, 2043, 2044, 2055, 2066, 2067, 2068, 2080, 2081, 2082, 2083, 2088, 2097, 2102, 2104, 2109, 2110, 2111, 2114, 2116, 2119, 2120, 2125, 2127, 2133, 2134, 2135, 2138, 2149], "content": [1, 3, 7, 19, 30, 40, 52, 53, 64, 911, 914, 916, 1297, 1300, 1320, 1331, 1333, 1338, 1351, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1949, 1979, 2000, 2042, 2047, 2058, 2064, 2075, 2078, 2091, 2109, 2118, 2119, 2120, 2130, 2141, 2145], "equal": [1, 12, 24, 28, 35, 47, 48, 50, 52, 64, 264, 503, 549, 621, 685, 699, 700, 701, 744, 745, 746, 747, 748, 765, 773, 774, 829, 830, 831, 834, 872, 887, 952, 959, 961, 972, 973, 994, 1005, 1032, 1034, 1089, 1108, 1124, 1163, 1178, 1179, 1196, 1199, 1203, 1213, 1214, 1229, 1232, 1247, 1248, 1250, 1251, 1252, 1274, 1278, 1314, 1335, 1348, 1352, 1355, 1356, 1379, 1380, 1391, 1410, 1445, 1449, 1450, 1451, 1453, 1454, 1455, 1460, 1461, 1467, 1476, 1477, 1479, 1480, 1484, 1491, 1494, 1495, 1496, 1499, 1501, 1518, 1553, 1554, 1562, 1564, 1600, 1609, 1622, 1623, 1627, 1630, 1633, 1645, 1646, 1649, 1650, 1656, 1663, 1738, 1784, 1845, 1858, 1914, 1915, 1920, 1946, 1954, 1974, 1990, 1996, 2010, 2045, 2048, 2054, 2065, 2066, 2067, 2075, 2076, 2081, 2086, 2092, 2100, 2101, 2115, 2119, 2121, 2133, 2144], "term": [1, 8, 9, 35, 47, 53, 64, 562, 739, 768, 798, 973, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1150, 1151, 1152, 1155, 1167, 1203, 1210, 1321, 1452, 1460, 1501, 1508, 1518, 1519, 1553, 1562, 1580, 1651, 1663, 1698, 1710, 1738, 1753, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1877, 1913, 1921, 2043, 2047, 2074, 2075, 2081, 2082, 2083, 2086, 2091, 2099, 2101, 2102, 2104, 2110, 2114, 2126, 2132, 2133, 2136], "mulbackward0": [1, 920, 923, 924, 2081], "inplac": [1, 30, 52, 58, 60, 64, 66, 74, 75, 760, 763, 781, 783, 785, 797, 804, 822, 827, 847, 849, 850, 868, 869, 874, 911, 912, 916, 937, 983, 1177, 1289, 1456, 1466, 1485, 1486, 1487, 1488, 1489, 1492, 1504, 1505, 1506, 1534, 1547, 1548, 1567, 1568, 1569, 1576, 1578, 1591, 1620, 1628, 1639, 1640, 1641, 1642, 1643, 1647, 1658, 1659, 1660, 1669, 1685, 1700, 1701, 1704, 1707, 1709, 1719, 1731, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1816, 1823, 1824, 1825, 1826, 1827, 1995, 2045, 2054, 2075, 2081, 2099, 2125, 2140, 2144], "lead": [1, 5, 7, 22, 28, 36, 52, 53, 55, 61, 64, 911, 912, 916, 919, 921, 925, 931, 985, 1170, 1188, 1193, 1203, 1320, 1518, 1564, 1580, 1943, 1949, 2007, 2047, 2066, 2067, 2075, 2077, 2080, 2081, 2082, 2084, 2091, 2092, 2095, 2101, 2102, 2104, 2109, 2114, 2119, 2120, 2130, 2137], "undefin": [1, 28, 36, 40, 323, 475, 621, 889, 911, 915, 916, 917, 930, 931, 959, 967, 985, 1122, 1172, 1173, 1460, 1800, 1851, 2051, 2071, 2075, 2078, 2081, 2082, 2093, 2109], "recurs": [1, 35, 52, 55, 64, 985, 989, 1111, 1201, 1210, 1229, 1289, 1301, 1303, 1548, 1746, 1747, 1830, 2046, 2081, 2085, 2089, 2102, 2109, 2133, 2134, 2136, 2137], "inner": [1, 3, 55, 56, 61, 823, 825, 919, 1102, 1178, 1182, 1187, 1200, 1208, 1980, 2045, 2081, 2100, 2109, 2125], "save_on_cpu": 1, "pin_memori": [1, 23, 66, 71, 75, 76, 77, 449, 450, 451, 452, 453, 1120, 1122, 1171, 1866, 1870, 1872, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 2044, 2045, 2067, 2078, 2081, 2100, 2116, 2140], "within": [1, 5, 9, 12, 19, 23, 24, 28, 32, 33, 34, 35, 47, 48, 50, 52, 53, 55, 63, 64, 81, 82, 91, 492, 889, 906, 930, 931, 937, 983, 997, 1024, 1102, 1192, 1193, 1201, 1207, 1289, 1293, 1382, 1417, 1457, 1458, 1459, 1467, 1486, 1487, 1488, 1492, 1494, 1541, 1542, 1543, 1548, 1554, 1588, 1600, 1654, 1664, 1679, 1680, 1681, 1738, 1757, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1774, 1775, 1776, 1777, 1862, 1863, 1893, 1914, 1994, 1998, 2014, 2044, 2046, 2047, 2059, 2060, 2064, 2071, 2073, 2077, 2078, 2081, 2087, 2088, 2089, 2092, 2099, 2101, 2102, 2104, 2107, 2108, 2109, 2110, 2119, 2123, 2127, 2132, 2133, 2136, 2138, 2144, 2145], "move": [1, 5, 7, 8, 9, 14, 28, 30, 55, 62, 64, 90, 528, 593, 830, 1139, 1210, 1289, 1297, 1356, 1361, 1397, 1415, 1462, 1463, 1464, 1521, 1522, 1523, 1548, 1588, 1693, 1741, 1742, 1824, 2046, 2057, 2058, 2064, 2066, 2071, 2078, 2079, 2082, 2083, 2089, 2090, 2091, 2094, 2101, 2102, 2104, 2109, 2116, 2117, 2121, 2136, 2145], "copi": [1, 7, 11, 23, 24, 28, 30, 37, 45, 52, 55, 59, 60, 64, 194, 200, 210, 213, 319, 406, 452, 462, 467, 475, 497, 503, 584, 585, 586, 587, 607, 621, 627, 798, 822, 847, 849, 890, 891, 909, 926, 927, 928, 950, 972, 980, 983, 1030, 1031, 1158, 1159, 1160, 1161, 1163, 1177, 1203, 1289, 1301, 1361, 1362, 1444, 1484, 1494, 1548, 1558, 1600, 1738, 1780, 1790, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1823, 1824, 1825, 1826, 1827, 1874, 1880, 1886, 1973, 1982, 1988, 2044, 2045, 2055, 2064, 2067, 2075, 2076, 2078, 2081, 2084, 2091, 2100, 2102, 2103, 2104, 2109, 2114, 2116, 2117, 2118, 2120, 2125, 2130, 2135, 2136, 2138, 2140, 2144], "pin": [1, 30, 213, 341, 449, 450, 451, 452, 453, 467, 584, 607, 627, 1120, 1122, 1171, 1289, 1548, 1780, 1866, 1870, 1872, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 2043, 2067, 2116, 2123], "asynchron": [1, 3, 4, 30, 63, 92, 200, 213, 584, 607, 627, 1044, 1289, 1292, 1308, 1416, 1548, 2043, 2048, 2077, 2080, 2109, 2116, 2119, 2123, 2143, 2149], "prod_1": 1, "prod_2": 1, "del": [1, 33, 490, 2048, 2064, 2081, 2083], "illustr": [1, 2047, 2074, 2081, 2114, 2127, 2130, 2139], "aliv": [1, 5, 23, 37, 47, 1019, 2075, 2078, 2083, 2091, 2109, 2110, 2111], "live": [1, 32, 490, 1061, 1064, 1289, 1548, 2044, 2078, 2083, 2084, 2109, 2111, 2130, 2133, 2135, 2147], "releas": [1, 7, 22, 28, 47, 50, 59, 64, 517, 692, 973, 974, 1015, 1016, 1025, 1043, 1053, 1054, 1057, 1061, 1062, 1064, 1075, 1234, 1286, 1289, 1320, 1331, 1333, 1334, 1335, 1338, 1351, 1379, 1380, 1401, 1487, 1518, 1548, 1564, 1679, 1680, 1681, 1794, 1857, 1873, 1889, 1954, 1958, 1982, 2020, 2042, 2043, 2046, 2060, 2064, 2075, 2077, 2078, 2085, 2087, 2092, 2093, 2094, 2095, 2099, 2104, 2109, 2120, 2121, 2127, 2133, 2136, 2145], "delet": [1, 28, 33, 64, 906, 908, 1016, 1021, 1026, 2042, 2057, 2064, 2075, 2100, 2108, 2109, 2111, 2116, 2144], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 12, 15, 18, 19, 28, 30, 32, 33, 48, 52, 55, 56, 63, 66, 83, 685, 694, 765, 773, 774, 919, 921, 925, 997, 1093, 1197, 1301, 1384, 1394, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1462, 1480, 1485, 1486, 1487, 1488, 1492, 1495, 1496, 1499, 1500, 1510, 1518, 1519, 1554, 1564, 1566, 1583, 1592, 1594, 1596, 1597, 1598, 1599, 1622, 1623, 1640, 1641, 1642, 1647, 1649, 1650, 1671, 1706, 1738, 1847, 1995, 2043, 2044, 2046, 2047, 2048, 2053, 2066, 2067, 2071, 2075, 2081, 2083, 2086, 2093, 2094, 2096, 2099, 2103, 2104, 2109, 2114, 2119, 2123, 2126, 2127, 2133, 2137, 2138], "messag": [1, 2, 5, 18, 19, 28, 33, 40, 41, 50, 52, 60, 64, 66, 67, 85, 86, 629, 685, 1078, 1079, 1081, 1196, 1203, 1319, 1320, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 2042, 2044, 2045, 2047, 2048, 2053, 2083, 2097, 2099, 2103, 2109, 2111, 2121, 2138, 2145], "get": [1, 8, 12, 14, 19, 23, 28, 29, 30, 37, 47, 48, 50, 51, 52, 55, 60, 63, 64, 91, 154, 339, 691, 739, 793, 795, 872, 873, 904, 910, 926, 939, 950, 967, 1020, 1046, 1047, 1048, 1065, 1106, 1177, 1180, 1181, 1182, 1194, 1195, 1198, 1200, 1203, 1235, 1236, 1305, 1357, 1469, 1470, 1471, 1490, 1491, 1515, 1516, 1517, 1544, 1545, 1546, 1558, 1576, 1738, 1740, 1754, 1781, 1788, 1832, 1878, 1893, 1998, 2021, 2022, 2023, 2030, 2042, 2043, 2044, 2047, 2055, 2059, 2060, 2064, 2065, 2075, 2078, 2081, 2082, 2083, 2084, 2086, 2088, 2089, 2090, 2094, 2097, 2100, 2102, 2104, 2109, 2111, 2114, 2118, 2119, 2120, 2130, 2132, 2133, 2134, 2135, 2139, 2145, 2146, 2149], "register_multi_grad_hook": [1, 2075], "fn": [1, 5, 37, 39, 40, 44, 50, 52, 55, 64, 918, 935, 936, 985, 986, 989, 1178, 1184, 1188, 1289, 1290, 1302, 1307, 1548, 2007, 2044, 2046, 2047, 2051, 2064, 2075, 2088, 2109, 2131, 2133, 2137, 2138, 2143, 2144, 2145], "multi": [1, 4, 33, 37, 47, 765, 1019, 1065, 1086, 1119, 1139, 1212, 1252, 1289, 1461, 1484, 1499, 1518, 1548, 1551, 1552, 1553, 1554, 1564, 1592, 1594, 1601, 1627, 1738, 2030, 2032, 2043, 2044, 2047, 2075, 2077, 2078, 2089, 2093, 2101, 2109, 2114, 2117, 2119, 2120, 2123, 2130], "specifi": [1, 2, 3, 5, 8, 12, 14, 19, 20, 23, 24, 28, 30, 32, 33, 34, 35, 37, 38, 40, 45, 46, 47, 48, 52, 53, 55, 64, 91, 101, 154, 199, 263, 323, 335, 475, 485, 497, 501, 503, 504, 517, 519, 521, 541, 549, 550, 564, 584, 587, 588, 589, 591, 592, 607, 685, 740, 746, 747, 748, 773, 774, 799, 800, 801, 807, 822, 832, 835, 850, 865, 869, 870, 872, 889, 891, 903, 904, 916, 917, 920, 923, 925, 950, 954, 977, 983, 1004, 1005, 1016, 1018, 1019, 1030, 1031, 1032, 1034, 1035, 1050, 1053, 1064, 1070, 1090, 1100, 1101, 1102, 1106, 1107, 1109, 1119, 1122, 1133, 1136, 1138, 1139, 1141, 1142, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1154, 1156, 1178, 1179, 1182, 1188, 1199, 1207, 1209, 1230, 1243, 1251, 1252, 1286, 1289, 1293, 1305, 1306, 1332, 1342, 1344, 1346, 1347, 1356, 1359, 1361, 1362, 1372, 1389, 1391, 1397, 1438, 1439, 1442, 1458, 1459, 1460, 1461, 1467, 1479, 1481, 1483, 1484, 1490, 1491, 1494, 1501, 1507, 1508, 1513, 1514, 1518, 1539, 1540, 1545, 1548, 1551, 1552, 1553, 1554, 1555, 1562, 1580, 1581, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1602, 1603, 1622, 1623, 1626, 1627, 1637, 1638, 1645, 1646, 1651, 1654, 1666, 1673, 1690, 1691, 1698, 1706, 1712, 1713, 1738, 1745, 1746, 1747, 1753, 1754, 1755, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1791, 1794, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1821, 1823, 1824, 1825, 1826, 1827, 1832, 1838, 1839, 1847, 1855, 1864, 1880, 1885, 1886, 1889, 1905, 1932, 1934, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1952, 1953, 1954, 1957, 1974, 1976, 1980, 1990, 1991, 1992, 1993, 1994, 1998, 2001, 2002, 2003, 2007, 2012, 2024, 2035, 2042, 2044, 2046, 2047, 2051, 2053, 2054, 2055, 2058, 2060, 2065, 2066, 2071, 2075, 2078, 2081, 2087, 2089, 2091, 2095, 2097, 2099, 2101, 2102, 2103, 2104, 2108, 2109, 2114, 2115, 2116, 2117, 2119, 2120, 2121, 2127, 2131, 2132, 2144, 2148], "ignor": [1, 5, 7, 28, 32, 39, 45, 55, 64, 154, 503, 548, 691, 694, 695, 696, 740, 800, 801, 869, 872, 873, 904, 925, 930, 931, 951, 973, 975, 976, 1005, 1009, 1014, 1065, 1066, 1086, 1087, 1140, 1142, 1150, 1151, 1152, 1203, 1233, 1250, 1289, 1301, 1307, 1310, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1358, 1359, 1361, 1381, 1439, 1440, 1441, 1457, 1458, 1459, 1460, 1461, 1481, 1483, 1491, 1499, 1501, 1507, 1513, 1514, 1518, 1539, 1540, 1541, 1542, 1543, 1548, 1551, 1552, 1553, 1554, 1555, 1562, 1564, 1580, 1581, 1592, 1597, 1626, 1627, 1637, 1646, 1666, 1690, 1698, 1738, 1794, 1802, 1832, 1841, 1845, 1905, 1936, 1937, 1954, 1958, 1982, 2030, 2031, 2032, 2033, 2044, 2047, 2048, 2054, 2066, 2075, 2078, 2081, 2099, 2114, 2121, 2134, 2141, 2144], "rel": [1, 8, 9, 14, 24, 28, 35, 55, 64, 491, 492, 699, 887, 930, 931, 935, 936, 1005, 1210, 1278, 1344, 1347, 1597, 1598, 1619, 1654, 1802, 1805, 1807, 1808, 1826, 1841, 1959, 2054, 2060, 2077, 2078, 2084, 2088, 2099, 2102, 2121], "removablehandl": [1, 935, 936, 1289, 1548, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 2102], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 5, 12, 52, 53, 64, 66, 73, 74, 75, 804, 847, 849, 868, 869, 983, 997, 1177, 1293, 2051, 2097, 2102, 2120, 2135, 2136], "_allowmutationonsavedcontext": 1, "purpos": [1, 19, 24, 28, 30, 64, 89, 475, 503, 765, 930, 1299, 1384, 1467, 1499, 1554, 1731, 1732, 1733, 1734, 1905, 2060, 2067, 2075, 2081, 2102, 2110, 2131, 2133, 2136, 2139, 2145], "clear": [1, 2, 8, 9, 50, 64, 950, 993, 1201, 1205, 1289, 1548, 1549, 1558, 1801, 2042, 2075, 2078, 2089, 2094, 2100, 2101, 2133], "upon": [1, 2, 23, 29, 37, 40, 64, 983, 1612, 1738, 1756, 1759, 1991, 2064, 2075, 2078, 2099, 2104, 2111, 2148, 2149], "sin_": [1, 2045, 2065], "8415": [1, 2081, 2114], "sinbackward0": 1, "gradientedg": [1, 904, 925], "output_nr": [1, 2045, 2100], "edg": [1, 53, 784, 790, 1243, 1251, 1252, 1665, 1725, 2052, 2082, 2110, 2141], "get_gradient_edg": 1, "equival": [1, 3, 5, 11, 12, 23, 24, 25, 32, 35, 40, 47, 48, 52, 59, 60, 64, 84, 90, 159, 174, 176, 179, 182, 183, 184, 244, 259, 271, 301, 323, 329, 397, 452, 462, 490, 502, 504, 517, 529, 608, 614, 621, 622, 624, 697, 749, 753, 760, 762, 764, 790, 791, 792, 887, 900, 901, 916, 917, 964, 966, 969, 971, 974, 981, 982, 997, 1107, 1111, 1114, 1117, 1118, 1119, 1121, 1136, 1138, 1141, 1144, 1145, 1148, 1149, 1151, 1154, 1156, 1175, 1177, 1180, 1182, 1188, 1203, 1216, 1226, 1253, 1255, 1266, 1288, 1289, 1300, 1305, 1306, 1309, 1321, 1342, 1346, 1354, 1359, 1391, 1396, 1413, 1415, 1439, 1452, 1462, 1463, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1490, 1491, 1502, 1508, 1510, 1511, 1512, 1513, 1518, 1520, 1548, 1564, 1580, 1588, 1600, 1602, 1609, 1610, 1611, 1663, 1673, 1695, 1706, 1725, 1726, 1727, 1738, 1799, 1827, 1864, 1867, 1870, 1871, 1895, 1901, 1908, 1930, 1937, 1950, 1960, 1961, 1968, 1973, 1992, 2007, 2008, 2009, 2041, 2044, 2046, 2047, 2055, 2071, 2075, 2097, 2099, 2102, 2105, 2114, 2115, 2117, 2120, 2121, 2131, 2134, 2146, 2150], "variou": [2, 5, 14, 23, 28, 30, 52, 64, 685, 1035, 1199, 1362, 1996, 1998, 2051, 2054, 2064, 2067, 2081, 2089, 2091, 2101, 2104, 2106, 2114, 2126, 2135, 2146, 2148], "get_cpu_cap": 2, "capabl": [2, 8, 14, 15, 28, 1046, 1746, 1747, 1864, 2021, 2078, 2087, 2088, 2090, 2123], "string": [2, 3, 5, 13, 14, 23, 28, 37, 44, 45, 47, 52, 53, 64, 607, 809, 822, 865, 992, 1044, 1061, 1062, 1119, 1177, 1203, 1289, 1297, 1300, 1361, 1475, 1476, 1477, 1548, 1549, 1558, 1592, 1594, 1596, 1629, 1630, 1631, 1770, 1857, 1889, 1897, 1899, 1997, 1998, 2042, 2045, 2046, 2047, 2048, 2051, 2066, 2071, 2075, 2081, 2088, 2089, 2094, 2097, 2102, 2103, 2109, 2116, 2117, 2119, 2125, 2131, 2133, 2136, 2145, 2146, 2147], "vsx": 2, "z": [2, 3, 10, 35, 55, 60, 66, 69, 74, 75, 621, 829, 888, 911, 914, 916, 917, 946, 974, 994, 1035, 1119, 1123, 1391, 1500, 1654, 1759, 1792, 1793, 1851, 1881, 1882, 2044, 2045, 2046, 2066, 2075, 2077, 2078, 2086, 2087, 2097, 2099, 2102, 2107, 2109, 2111, 2130, 2132, 2133, 2136, 2144, 2145], "vector": [2, 11, 24, 35, 55, 56, 60, 258, 317, 319, 325, 694, 695, 696, 895, 904, 909, 919, 920, 921, 922, 923, 924, 925, 964, 965, 971, 982, 1001, 1005, 1015, 1100, 1101, 1106, 1108, 1183, 1187, 1188, 1233, 1322, 1329, 1337, 1345, 1346, 1350, 1353, 1357, 1358, 1359, 1379, 1384, 1391, 1434, 1436, 1462, 1463, 1464, 1467, 1484, 1490, 1491, 1494, 1502, 1510, 1511, 1512, 1557, 1588, 1597, 1600, 1645, 1646, 1654, 1656, 1691, 1695, 1724, 1744, 1752, 1754, 1759, 1790, 1794, 1805, 1846, 1847, 1938, 1958, 2001, 2004, 2007, 2068, 2075, 2086, 2104, 2114, 2117, 2119, 2127, 2138], "NO": [2, 87, 89, 1202], "avx": [2, 2129], "avx2": [2, 2104, 2129], "avx512": [2, 2129], "is_built": [2, 2090], "built": [2, 3, 7, 8, 14, 24, 28, 34, 40, 58, 64, 984, 1044, 1299, 1598, 1832, 2043, 2051, 2067, 2075, 2077, 2078, 2081, 2087, 2089, 2090, 2091, 2104, 2106, 2131, 2133, 2134, 2145, 2146], "necessarili": [2, 24, 28, 35, 37, 47, 52, 86, 475, 930, 1326, 1348, 1359, 1390, 1483, 1555, 1746, 1747, 2078, 2081], "machin": [2, 28, 37, 47, 55, 56, 61, 1293, 1299, 1335, 1585, 2087, 2088, 2089, 2090, 2091, 2093, 2096, 2097, 2102, 2108, 2109, 2110, 2126, 2127, 2129, 2133, 2138], "driver": [2, 20, 1233, 1335, 1353, 1354, 1400, 2045, 2078, 2085, 2092, 2109, 2130, 2143, 2145], "would": [2, 3, 5, 8, 9, 11, 14, 23, 28, 33, 34, 35, 40, 47, 48, 52, 53, 55, 57, 60, 64, 449, 450, 451, 452, 453, 490, 703, 765, 800, 865, 904, 911, 912, 916, 925, 973, 991, 1120, 1122, 1140, 1171, 1181, 1182, 1202, 1203, 1215, 1216, 1217, 1287, 1289, 1290, 1294, 1297, 1305, 1306, 1405, 1406, 1434, 1457, 1458, 1459, 1460, 1461, 1499, 1513, 1518, 1541, 1542, 1543, 1548, 1558, 1564, 1654, 1665, 1728, 1738, 1740, 1746, 1747, 1780, 1792, 1827, 1866, 1870, 1872, 1883, 1893, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 1974, 1979, 2044, 2046, 2047, 2055, 2062, 2065, 2066, 2067, 2068, 2074, 2075, 2076, 2077, 2078, 2080, 2081, 2082, 2084, 2085, 2086, 2091, 2094, 2099, 2101, 2102, 2104, 2109, 2110, 2111, 2113, 2114, 2130, 2131, 2132, 2133, 2135, 2136, 2137, 2138, 2139, 2141, 2144, 2145, 2149], "allow_tf32": [2, 1901, 2045, 2078, 2092], "tensorfloat": 2, "core": [2, 3, 7, 8, 52, 59, 82, 983, 1010, 1075, 1800, 2047, 2051, 2077, 2078, 2080, 2091, 2092, 2102, 2123, 2131, 2132, 2136, 2142], "amper": [2, 2114], "newer": [2, 14, 52, 1082, 1788, 2077, 2078, 2094, 2096, 2101, 2102, 2105, 2138], "tf32": [2, 20], "allow_fp16_reduced_precision_reduct": [2, 2078, 2092], "reduc": [2, 3, 14, 24, 28, 29, 30, 32, 34, 55, 325, 517, 520, 521, 691, 698, 700, 701, 702, 704, 828, 829, 830, 831, 834, 836, 885, 886, 983, 988, 1031, 1043, 1075, 1197, 1199, 1263, 1342, 1346, 1348, 1353, 1359, 1377, 1387, 1389, 1390, 1392, 1395, 1439, 1440, 1441, 1442, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1481, 1483, 1491, 1507, 1513, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1588, 1597, 1626, 1627, 1635, 1637, 1646, 1662, 1665, 1666, 1667, 1678, 1686, 1687, 1688, 1689, 1690, 1691, 1698, 1710, 1711, 1722, 1725, 1738, 1754, 1792, 1810, 1841, 1855, 1857, 1858, 1892, 1935, 1939, 1952, 1953, 1957, 1958, 1980, 1995, 2002, 2003, 2020, 2045, 2064, 2065, 2071, 2075, 2077, 2080, 2081, 2084, 2089, 2091, 2093, 2094, 2095, 2100, 2101, 2102, 2104, 2114, 2130, 2132, 2136, 2140, 2141, 2145, 2146], "precis": [2, 3, 8, 11, 14, 24, 33, 35, 55, 691, 694, 930, 931, 951, 963, 1064, 1162, 1239, 1335, 1353, 1359, 1384, 1394, 1457, 1458, 1459, 1461, 1475, 1476, 1477, 1478, 1479, 1480, 1500, 1519, 1535, 1541, 1542, 1543, 1601, 1665, 1706, 1738, 1886, 1901, 1905, 2043, 2047, 2060, 2062, 2068, 2075, 2085, 2089, 2102, 2104, 2105, 2107, 2115, 2117, 2119, 2120, 2142, 2150], "gemm": [2, 17, 19, 2077, 2099, 2136], "allow_bf16_reduced_precision_reduct": [2, 2078, 2092], "cufft_plan_cach": [2, 2078], "cufft": 2, "queri": [2, 19, 28, 47, 64, 90, 92, 740, 1018, 1019, 1023, 1029, 1077, 1082, 1096, 1097, 1213, 1289, 1402, 1415, 1416, 1548, 1554, 1609, 1706, 1758, 2012, 2013, 2045, 2059, 2071, 2078, 2102, 2132, 2135], "specif": [2, 3, 7, 8, 9, 11, 14, 19, 20, 28, 30, 32, 33, 34, 35, 37, 45, 47, 50, 52, 55, 60, 64, 66, 81, 83, 88, 91, 517, 865, 872, 890, 943, 1023, 1110, 1139, 1252, 1286, 1293, 1299, 1303, 1305, 1306, 1325, 1327, 1390, 1494, 1520, 1563, 1706, 1731, 1732, 1737, 1761, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1820, 1823, 1824, 1825, 1826, 1827, 1842, 1896, 1901, 1935, 1996, 2013, 2042, 2044, 2046, 2047, 2049, 2051, 2053, 2060, 2062, 2066, 2068, 2071, 2075, 2078, 2081, 2085, 2087, 2091, 2093, 2097, 2101, 2102, 2103, 2104, 2105, 2107, 2109, 2111, 2119, 2120, 2127, 2129, 2132, 2133, 2135, 2136, 2138, 2142, 2144, 2145, 2152], "via": [2, 7, 14, 15, 23, 28, 30, 34, 35, 38, 45, 52, 53, 55, 59, 62, 64, 90, 419, 490, 521, 621, 930, 931, 939, 970, 991, 1016, 1055, 1075, 1123, 1180, 1201, 1205, 1206, 1208, 1210, 1361, 1362, 1415, 1462, 1463, 1464, 1484, 1502, 1510, 1511, 1512, 1520, 1588, 1753, 1788, 1791, 1839, 2044, 2046, 2047, 2051, 2059, 2060, 2064, 2067, 2071, 2073, 2075, 2078, 2081, 2082, 2083, 2087, 2089, 2091, 2092, 2099, 2102, 2104, 2109, 2110, 2114, 2116, 2117, 2118, 2131, 2132, 2133, 2135, 2137, 2141, 2146], "readonli": 2, "int": [2, 3, 12, 18, 19, 23, 24, 28, 30, 32, 33, 34, 35, 37, 41, 44, 45, 47, 48, 51, 52, 53, 55, 64, 66, 74, 75, 77, 80, 91, 92, 220, 222, 236, 237, 246, 258, 317, 319, 321, 325, 441, 448, 449, 451, 453, 461, 476, 480, 497, 501, 503, 517, 519, 521, 524, 541, 547, 549, 550, 562, 564, 570, 587, 588, 589, 591, 592, 611, 621, 685, 698, 700, 701, 702, 704, 760, 761, 780, 782, 784, 785, 790, 791, 792, 803, 806, 828, 885, 886, 887, 889, 903, 911, 914, 916, 917, 934, 939, 946, 952, 954, 961, 968, 970, 977, 982, 983, 985, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1023, 1025, 1026, 1029, 1030, 1031, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1041, 1046, 1047, 1048, 1050, 1052, 1056, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1106, 1107, 1108, 1109, 1110, 1111, 1117, 1120, 1122, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1171, 1173, 1174, 1178, 1179, 1180, 1181, 1182, 1188, 1195, 1198, 1201, 1219, 1222, 1230, 1237, 1240, 1241, 1243, 1247, 1248, 1250, 1251, 1252, 1253, 1264, 1265, 1286, 1287, 1289, 1290, 1292, 1295, 1296, 1301, 1309, 1311, 1321, 1322, 1342, 1343, 1346, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1369, 1376, 1377, 1382, 1387, 1389, 1390, 1392, 1395, 1397, 1398, 1399, 1400, 1403, 1404, 1408, 1411, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1427, 1428, 1429, 1434, 1439, 1440, 1441, 1442, 1443, 1444, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1490, 1491, 1493, 1494, 1495, 1496, 1498, 1500, 1502, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1520, 1524, 1525, 1526, 1527, 1528, 1529, 1533, 1535, 1536, 1538, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1550, 1553, 1555, 1556, 1559, 1560, 1561, 1563, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1582, 1584, 1588, 1592, 1593, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1636, 1637, 1638, 1645, 1646, 1653, 1656, 1665, 1673, 1690, 1691, 1692, 1696, 1697, 1712, 1713, 1721, 1725, 1726, 1727, 1737, 1738, 1754, 1755, 1764, 1765, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1780, 1781, 1783, 1788, 1791, 1794, 1795, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1847, 1848, 1855, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1868, 1869, 1870, 1872, 1878, 1879, 1880, 1883, 1884, 1885, 1886, 1889, 1894, 1895, 1896, 1900, 1903, 1904, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1926, 1930, 1934, 1937, 1938, 1939, 1946, 1949, 1951, 1952, 1953, 1954, 1957, 1959, 1963, 1965, 1970, 1974, 1975, 1977, 1979, 1980, 1983, 1984, 1985, 1986, 1989, 1990, 1991, 1992, 1993, 1994, 1997, 1998, 2001, 2002, 2003, 2007, 2008, 2013, 2015, 2016, 2017, 2018, 2021, 2022, 2023, 2024, 2027, 2030, 2031, 2034, 2035, 2039, 2040, 2044, 2045, 2046, 2047, 2048, 2051, 2060, 2064, 2065, 2067, 2071, 2073, 2078, 2082, 2091, 2094, 2097, 2099, 2100, 2103, 2104, 2108, 2109, 2113, 2115, 2116, 2117, 2119, 2120, 2121, 2123, 2127, 2132, 2136, 2140, 2144, 2147, 2150], "show": [2, 4, 7, 13, 18, 23, 24, 28, 30, 33, 36, 52, 55, 64, 82, 919, 925, 983, 1170, 1289, 1391, 1548, 1728, 1801, 2042, 2043, 2047, 2065, 2077, 2078, 2080, 2081, 2086, 2087, 2089, 2097, 2099, 2101, 2102, 2103, 2109, 2111, 2130, 2133, 2138, 2139, 2142, 2143, 2145, 2147], "max_siz": [2, 46, 48, 2078], "capac": [2, 1089, 2078, 2091], "preferred_blas_librari": 2, "overrid": [2, 5, 14, 19, 20, 24, 28, 29, 30, 35, 40, 48, 55, 60, 64, 798, 799, 865, 901, 903, 916, 917, 1061, 1460, 1461, 1481, 1483, 1507, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1565, 1580, 1581, 1597, 1626, 1627, 1637, 1666, 1690, 1698, 1761, 1827, 1889, 1905, 2043, 2047, 2051, 2055, 2094, 2101, 2102, 2104, 2109, 2114, 2119, 2125, 2144, 2145], "bla": [2, 19, 2077], "choos": [2, 9, 15, 19, 64, 903, 916, 917, 943, 1044, 1335, 1348, 1353, 1460, 1959, 2073, 2074, 2077, 2102, 2105, 2119], "cubla": [2, 11, 17, 19, 20, 1036, 1995, 2093, 2130], "cublaslt": [2, 17, 20], "subject": [2, 3, 11, 18, 19, 28, 30, 32, 34, 55, 63, 64, 65, 237, 876, 1607, 1608, 1609, 1612, 1706, 1738, 2047, 2065, 2066, 2075, 2081, 2099, 2103, 2104, 2105, 2109, 2114, 2117, 2123, 2124, 2125, 2127, 2132, 2142], "rocm": [2, 17, 691, 694, 951, 963, 1384, 1394, 1475, 1476, 1477, 1478, 1479, 1480, 1500, 1519, 1535, 2043], "hipbla": [2, 17, 19], "hipblaslt": [2, 17, 19], "offer": [2, 28, 30, 55, 58, 1738, 1995, 2078, 2081, 2087, 2102, 2103, 2109, 2114, 2131, 2136, 2140, 2148], "wherev": [2, 9, 2065], "prefer": [2, 5, 9, 23, 28, 30, 37, 48, 55, 873, 889, 921, 1193, 1216, 1287, 1330, 1343, 1347, 1355, 1362, 1555, 1706, 1893, 1954, 1973, 2044, 2055, 2075, 2078, 2101, 2102, 2114, 2136], "environ": [2, 3, 7, 14, 15, 18, 19, 22, 24, 30, 33, 35, 37, 40, 45, 51, 52, 64, 81, 83, 685, 1035, 1201, 1203, 1226, 1299, 1305, 1518, 1564, 1995, 2042, 2043, 2044, 2053, 2075, 2077, 2078, 2080, 2087, 2092, 2093, 2095, 2109, 2127, 2129, 2131, 2136, 2145], "variabl": [2, 3, 5, 12, 14, 18, 19, 22, 24, 33, 35, 37, 40, 45, 47, 51, 53, 55, 60, 64, 66, 69, 74, 75, 81, 83, 452, 685, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 733, 734, 735, 736, 737, 739, 743, 744, 745, 746, 747, 748, 750, 751, 761, 765, 769, 807, 911, 912, 916, 985, 997, 1001, 1005, 1088, 1120, 1188, 1203, 1303, 1305, 1362, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1490, 1491, 1499, 1500, 1518, 1519, 1520, 1533, 1535, 1548, 1551, 1556, 1564, 1566, 1738, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1798, 1802, 1804, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1866, 1868, 1870, 1995, 2007, 2040, 2042, 2043, 2053, 2054, 2066, 2067, 2075, 2077, 2078, 2080, 2083, 2086, 2092, 2093, 2095, 2097, 2099, 2101, 2104, 2109, 2116, 2119, 2127, 2132, 2133, 2134, 2136, 2138, 2145], "torch_blas_prefer_cublaslt": 2, "global": [2, 3, 5, 8, 11, 12, 20, 23, 28, 30, 32, 35, 37, 48, 55, 60, 63, 64, 66, 69, 74, 75, 865, 872, 876, 884, 939, 952, 961, 997, 1016, 1053, 1070, 1077, 1120, 1122, 1132, 1137, 1155, 1171, 1174, 1177, 1247, 1248, 1270, 1277, 1289, 1292, 1305, 1309, 1360, 1376, 1548, 1706, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1766, 1770, 1798, 1866, 1868, 1870, 1873, 1897, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2040, 2044, 2047, 2048, 2051, 2059, 2068, 2074, 2081, 2088, 2089, 2091, 2093, 2094, 2104, 2109, 2110, 2111, 2114, 2117, 2119, 2133, 2134, 2135, 2136, 2137, 2144, 2145], "overridden": [2, 5, 14, 64, 900, 901, 902, 916, 917, 1061, 1548, 1933, 2047, 2075, 2081, 2092, 2145, 2146], "achiev": [2, 19, 23, 24, 28, 30, 34, 35, 48, 55, 1119, 1184, 1289, 1461, 1467, 1548, 1554, 1555, 1627, 1656, 1738, 2061, 2078, 2088, 2091, 2102, 2109, 2111, 2145], "better": [2, 3, 7, 8, 9, 14, 23, 27, 28, 37, 52, 59, 926, 983, 1088, 1176, 1180, 1181, 1197, 1276, 1305, 1483, 1582, 1706, 1712, 1738, 1746, 1747, 1839, 1864, 2047, 2074, 2075, 2077, 2078, 2084, 2086, 2093, 2095, 2099, 2101, 2103, 2104, 2105, 2114, 2119, 2125, 2127, 2131, 2133, 2134, 2142], "select": [2, 5, 15, 17, 19, 21, 23, 28, 30, 35, 37, 45, 53, 317, 319, 321, 325, 765, 973, 1007, 1009, 1013, 1024, 1025, 1029, 1037, 1038, 1039, 1040, 1042, 1063, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1088, 1089, 1092, 1094, 1096, 1097, 1139, 1362, 1391, 1417, 1418, 1419, 1420, 1421, 1428, 1430, 1431, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1499, 1518, 1564, 1612, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1706, 1775, 1776, 1896, 1970, 1998, 2010, 2014, 2015, 2016, 2017, 2019, 2034, 2037, 2038, 2044, 2045, 2047, 2064, 2065, 2066, 2067, 2075, 2077, 2078, 2086, 2093, 2100, 2104, 2114, 2118, 2121, 2134, 2140, 2142, 2147], "incorrect": [2, 4, 5, 55, 64, 86, 87, 89, 258, 517, 560, 911, 914, 916, 930, 939, 965, 985, 1305, 1348, 1361, 1554, 1592, 1593, 1594, 1595, 1596, 1724, 1794, 1943, 1954, 2044, 2047, 2051, 2078, 2092, 2099, 2133, 2148], "_blasbackend": 2, "preferred_linalg_librari": [2, 1326], "heurist": [2, 14, 23, 47, 48, 64, 988, 1119, 2084, 2130, 2139], "cusolv": [2, 1353, 1354, 1958], "magma": [2, 1335, 1379, 1857, 1958, 2095, 2114], "algebra": [2, 9, 1119, 1326, 1347, 2043, 2052], "decid": [2, 4, 7, 28, 37, 47, 59, 490, 1199, 1770, 2054, 2099, 2114, 2135, 2136, 2139], "pick": [2, 28, 46, 48, 517, 983, 2075, 2109, 2132, 2134, 2139], "torch_linalg_prefer_cusolv": 2, "linalg": [2, 11, 410, 973, 974, 975, 976, 1015, 1105, 1233, 1267, 1370, 1379, 1380, 1381, 1385, 1386, 1753, 1754, 1759, 1794, 1844, 1849, 1851, 1857, 1927, 1958, 1959, 1982, 2004, 2043], "inv": [2, 35, 1267, 1321, 1325, 1331, 1347, 1351, 1355], "inv_ex": [2, 1330], "cholesky_ex": [2, 1319], "lu_factor": [2, 1338, 1339, 1379, 1380, 1381], "lu": [2, 10, 1331, 1337, 1338, 1339, 1380, 1381, 2045], "eigh": [2, 1319, 1325, 1328, 1347, 1353, 2092], "eighval": 2, "svdval": [2, 1321, 1335, 1344, 1353, 1958, 2092], "_linalgbackend": 2, "sdpaparam": 2, "flash_sdp_en": 2, "flash": [2, 1607, 1612], "scale": [2, 7, 23, 33, 35, 37, 46, 48, 101, 177, 477, 479, 621, 690, 694, 695, 696, 743, 744, 745, 746, 747, 748, 749, 754, 755, 756, 757, 758, 759, 760, 761, 764, 775, 777, 778, 779, 780, 782, 785, 786, 801, 807, 810, 828, 829, 830, 831, 834, 951, 1133, 1134, 1137, 1155, 1187, 1188, 1376, 1456, 1485, 1490, 1491, 1492, 1508, 1520, 1576, 1601, 1602, 1603, 1607, 1612, 1645, 1646, 1647, 1663, 1665, 1706, 1707, 1712, 1804, 1805, 1832, 1859, 1860, 1861, 1862, 1863, 1936, 1937, 1955, 2007, 2043, 2045, 2066, 2071, 2073, 2078, 2083, 2085, 2089, 2097, 2104, 2105, 2107, 2115, 2136], "product": [2, 15, 28, 30, 35, 47, 154, 691, 694, 695, 696, 765, 904, 909, 920, 922, 923, 924, 925, 951, 963, 969, 973, 1001, 1015, 1029, 1077, 1082, 1096, 1097, 1100, 1116, 1119, 1183, 1187, 1188, 1266, 1310, 1322, 1329, 1355, 1356, 1358, 1384, 1391, 1394, 1436, 1499, 1500, 1518, 1519, 1607, 1612, 1653, 1706, 1753, 1845, 1846, 1855, 1901, 1975, 1990, 2004, 2007, 2043, 2044, 2065, 2071, 2075, 2086, 2088, 2092, 2102, 2104, 2114, 2133, 2147], "attent": [2, 7, 34, 740, 1461, 1554, 1592, 1594, 1596, 1607, 1609, 1627, 1706, 2043, 2095, 2118, 2133], "enable_mem_efficient_sdp": [2, 1706], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1706], "math_sdp_en": 2, "math": [2, 23, 64, 1129, 1341, 1607, 1612, 1666, 1706, 1847, 1864, 1959, 2043, 2044, 2046, 2047, 2062, 2084, 2092, 2114, 2115, 2121, 2145], "enable_math_sdp": [2, 1706], "cudnn_sdp_en": 2, "enable_cudnn_sdp": 2, "is_flash_attention_avail": 2, "check": [2, 3, 4, 5, 11, 14, 19, 20, 23, 28, 29, 30, 35, 47, 55, 66, 67, 72, 75, 90, 92, 225, 344, 503, 699, 872, 911, 912, 914, 915, 916, 917, 930, 931, 937, 985, 1018, 1019, 1023, 1027, 1057, 1075, 1199, 1203, 1211, 1212, 1221, 1222, 1276, 1286, 1289, 1305, 1306, 1319, 1320, 1325, 1326, 1328, 1331, 1333, 1338, 1344, 1347, 1351, 1353, 1354, 1379, 1415, 1416, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1548, 1728, 1738, 1756, 1759, 1772, 1782, 1801, 1802, 1933, 1940, 1941, 1942, 1943, 1944, 1945, 1996, 2012, 2013, 2042, 2043, 2046, 2047, 2048, 2051, 2065, 2066, 2074, 2078, 2081, 2082, 2083, 2084, 2088, 2089, 2090, 2093, 2094, 2097, 2099, 2101, 2102, 2103, 2104, 2109, 2114, 2119, 2121, 2129, 2130, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2144, 2145, 2146, 2149], "flashattent": [2, 1596, 1706], "scaled_dot_product_attent": [2, 1554, 1592, 1608, 1611, 1612, 2045, 2069, 2070, 2072, 2100], "depend": [2, 4, 5, 12, 14, 23, 28, 30, 32, 33, 35, 37, 47, 48, 50, 53, 55, 64, 90, 319, 790, 889, 1029, 1077, 1082, 1096, 1097, 1140, 1142, 1150, 1151, 1152, 1178, 1182, 1187, 1203, 1213, 1215, 1216, 1217, 1219, 1301, 1305, 1325, 1326, 1353, 1379, 1384, 1415, 1460, 1461, 1481, 1483, 1491, 1494, 1507, 1513, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1600, 1601, 1619, 1626, 1627, 1637, 1646, 1654, 1666, 1690, 1698, 1706, 1725, 1728, 1738, 1759, 1760, 1766, 1832, 1845, 1847, 1864, 1880, 1940, 1941, 1942, 1944, 1945, 1958, 1982, 2010, 2042, 2044, 2046, 2047, 2051, 2054, 2055, 2064, 2071, 2075, 2077, 2078, 2081, 2082, 2084, 2085, 2086, 2089, 2091, 2096, 2098, 2099, 2103, 2104, 2109, 2114, 2120, 2121, 2126, 2127, 2130, 2131, 2132, 2133, 2135, 2136, 2138, 2141, 2143, 2144, 2147], "can_use_flash_attent": 2, "debug": [2, 4, 5, 8, 19, 20, 23, 33, 38, 44, 52, 81, 83, 685, 806, 836, 837, 841, 854, 930, 931, 983, 985, 992, 1016, 1052, 1093, 1237, 1319, 1731, 1732, 1733, 1734, 1900, 1907, 2043, 2046, 2053, 2075, 2077, 2078, 2080, 2087, 2088, 2089, 2093, 2095, 2097, 2099, 2102, 2124, 2132, 2133, 2134, 2137, 2138, 2141, 2147, 2148, 2149], "util": [2, 7, 17, 30, 48, 52, 53, 55, 56, 63, 64, 66, 503, 737, 740, 743, 744, 745, 750, 751, 761, 765, 769, 796, 805, 917, 1034, 1120, 1121, 1122, 1170, 1221, 1222, 1289, 1499, 1518, 1548, 1564, 1565, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1756, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1780, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1824, 1825, 1826, 1827, 1832, 1839, 1962, 1963, 1965, 1966, 1967, 1995, 2043, 2047, 2051, 2055, 2060, 2074, 2076, 2077, 2078, 2081, 2083, 2085, 2086, 2088, 2089, 2091, 2093, 2099, 2101, 2102, 2132, 2133, 2136, 2143, 2145, 2148], "_sdpaparam": 2, "kei": [2, 3, 23, 30, 33, 37, 45, 47, 48, 52, 53, 55, 62, 64, 419, 607, 685, 740, 806, 865, 870, 938, 943, 950, 1085, 1176, 1186, 1204, 1289, 1305, 1306, 1361, 1548, 1549, 1554, 1558, 1592, 1593, 1594, 1595, 1596, 1609, 1706, 1773, 1789, 1996, 1998, 2043, 2045, 2046, 2047, 2051, 2059, 2071, 2078, 2081, 2088, 2089, 2094, 2099, 2100, 2101, 2103, 2104, 2107, 2109, 2110, 2116, 2119, 2121, 2124, 2126, 2137, 2142, 2143, 2144, 2148], "mask": [2, 45, 403, 404, 405, 406, 407, 548, 740, 930, 931, 1383, 1456, 1467, 1492, 1554, 1592, 1593, 1594, 1595, 1596, 1647, 1706, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1827, 2043, 2045, 2065, 2066, 2071, 2114, 2136], "dropout": [2, 5, 34, 64, 739, 740, 765, 1289, 1456, 1486, 1487, 1488, 1492, 1499, 1518, 1548, 1554, 1564, 1565, 1592, 1594, 1596, 1620, 1640, 1641, 1642, 1647, 1706, 2043, 2045, 2057, 2066, 2067, 2075, 2078, 2100, 2106], "causal": [2, 740, 1554, 1592, 1593, 1594, 1595, 1596, 1608, 1609, 1610, 1611, 1706, 2071], "warn": [2, 3, 14, 18, 19, 24, 25, 28, 32, 33, 52, 86, 87, 89, 685, 919, 925, 973, 1029, 1077, 1082, 1093, 1096, 1097, 1188, 1203, 1270, 1286, 1305, 1347, 1361, 1391, 1554, 1592, 1593, 1594, 1595, 1596, 1706, 1756, 1759, 1900, 1907, 1954, 1995, 2007, 2042, 2053, 2060, 2071, 2076, 2081, 2097, 2100, 2102, 2108, 2133, 2145], "why": [2, 3, 7, 23, 60, 64, 1119, 1293, 1706, 2043, 2051, 2054, 2082, 2084, 2132, 2133, 2135, 2143, 2147], "could": [2, 4, 5, 7, 8, 17, 19, 23, 28, 34, 35, 37, 47, 60, 63, 64, 587, 588, 589, 591, 592, 939, 1057, 1140, 1142, 1150, 1151, 1152, 1204, 1286, 1295, 1320, 1361, 1379, 1405, 1406, 1746, 1747, 1831, 1935, 1959, 1991, 2046, 2047, 2054, 2064, 2075, 2078, 2080, 2094, 2095, 2099, 2102, 2104, 2105, 2109, 2110, 2111, 2114, 2118, 2119, 2131, 2133, 2136, 2137, 2141, 2145, 2148, 2149], "can_use_efficient_attent": 2, "efficient_attent": [2, 1607, 1612], "can_use_cudnn_attent": 2, "cudnn_attent": [2, 1607], "sdp_kernel": [2, 1706], "enable_flash": 2, "enable_math": [2, 1706], "enable_mem_effici": 2, "enable_cudnn": 2, "temporarili": [2, 37, 1897, 2051, 2075, 2099, 2103, 2139], "previou": [2, 18, 28, 30, 47, 52, 55, 64, 517, 560, 765, 983, 985, 1021, 1053, 1164, 1243, 1300, 1360, 1376, 1499, 1518, 1564, 1612, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1801, 1841, 1864, 1954, 2057, 2075, 2078, 2081, 2089, 2095, 2097, 2104, 2111, 2127, 2136], "restor": [2, 5, 30, 32, 64, 91, 993, 1164, 1360, 1376, 1612, 1791, 1884, 1905, 2089, 2094, 2134], "is_avail": [2, 17, 28, 1998, 2043, 2078, 2085, 2087, 2090, 2094, 2103, 2127, 2152], "determinist": [2, 3, 5, 22, 28, 35, 64, 86, 91, 490, 503, 517, 884, 1120, 1121, 1122, 1237, 1270, 1292, 1305, 1306, 1387, 1390, 1392, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1518, 1564, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1706, 1894, 1900, 1995, 2043, 2045, 2075, 2084, 2093, 2101, 2108], "algorithm": [2, 3, 7, 11, 19, 21, 24, 29, 32, 35, 37, 55, 91, 765, 784, 790, 973, 1286, 1330, 1337, 1343, 1347, 1353, 1362, 1379, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1497, 1499, 1518, 1564, 1600, 1601, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1654, 1665, 1706, 1725, 1738, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1827, 1847, 1886, 1901, 1958, 1959, 1995, 2043, 2075, 2078, 2092, 2109, 2114], "are_deterministic_algorithms_en": [2, 2130], "use_deterministic_algorithm": [2, 27, 503, 884, 1120, 1121, 1122, 1270, 1900, 2093], "benchmark": [2, 19, 685, 2043, 2045, 2078, 2087, 2103, 2130, 2136, 2142], "fastest": [2, 17, 19, 888, 1738, 1793, 1807, 1808, 1826, 2086, 2093, 2101], "benchmark_limit": 2, "maximum": [2, 27, 35, 47, 48, 52, 503, 700, 702, 776, 801, 829, 830, 831, 834, 835, 885, 1031, 1067, 1069, 1075, 1083, 1084, 1098, 1099, 1120, 1121, 1122, 1165, 1182, 1250, 1251, 1252, 1362, 1387, 1410, 1506, 1645, 1646, 1745, 1805, 1830, 1839, 1864, 1878, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1997, 2045, 2053, 2062, 2073, 2074, 2078, 2091, 2100, 2107, 2121, 2122, 2132, 2140, 2147, 2149], "try": [2, 3, 4, 7, 8, 28, 30, 39, 40, 44, 47, 52, 59, 60, 84, 85, 983, 985, 1089, 1173, 1182, 1188, 1203, 1228, 1294, 1296, 1305, 1326, 1410, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1592, 1593, 1595, 1601, 1607, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1706, 1738, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 2007, 2042, 2044, 2047, 2048, 2051, 2075, 2078, 2081, 2083, 2086, 2091, 2099, 2101, 2102, 2104, 2105, 2109, 2114, 2131, 2132, 2135, 2136, 2138, 2145, 2147], "dispatch": [2, 28, 55, 64, 86, 87, 89, 1189, 1190, 1204, 1294, 1405, 1406, 1996, 1998, 2047, 2051, 2078, 2081, 2097, 2099, 2136, 2137, 2146], "v8": [2, 20], "api": [2, 3, 5, 8, 9, 14, 20, 24, 28, 29, 30, 34, 37, 39, 40, 44, 45, 46, 47, 48, 55, 56, 59, 63, 65, 66, 71, 75, 76, 77, 237, 808, 833, 872, 906, 907, 908, 909, 910, 922, 927, 928, 972, 985, 988, 1016, 1035, 1053, 1054, 1055, 1061, 1062, 1064, 1092, 1123, 1163, 1177, 1180, 1181, 1183, 1188, 1201, 1213, 1300, 1301, 1303, 1410, 1430, 1738, 1789, 1791, 1792, 1800, 1886, 1897, 1988, 1998, 2007, 2026, 2037, 2042, 2053, 2054, 2055, 2057, 2061, 2062, 2064, 2065, 2067, 2075, 2080, 2085, 2094, 2096, 2105, 2109, 2110, 2114, 2117, 2119, 2123, 2126, 2127, 2134, 2138, 2146, 2149], "get_fastpath_en": 2, "fast": [2, 7, 8, 23, 28, 64, 930, 1489, 1510, 1511, 1512, 1580, 1596, 1746, 1747, 1839, 1845, 1864, 1886, 1901, 2043, 2062, 2077, 2078, 2081, 2087, 2101, 2109, 2114, 2117, 2118, 2126, 2133, 2135, 2138, 2139, 2147], "path": [2, 3, 4, 8, 14, 20, 28, 30, 45, 47, 50, 51, 52, 55, 64, 739, 940, 941, 942, 1016, 1119, 1212, 1289, 1548, 1565, 1596, 1801, 2042, 2043, 2045, 2046, 2075, 2078, 2081, 2084, 2087, 2094, 2097, 2099, 2102, 2103, 2114, 2124, 2127, 2130, 2138, 2139], "transformerencod": 2, "multiheadattent": [2, 1592, 1594, 1596, 2104], "fastpath": [2, 1554, 2135], "condit": [2, 5, 12, 21, 23, 52, 53, 60, 64, 66, 74, 75, 621, 624, 629, 699, 765, 920, 930, 931, 997, 1286, 1305, 1319, 1321, 1326, 1329, 1335, 1336, 1337, 1348, 1353, 1499, 1518, 1564, 1596, 1782, 1787, 1982, 2010, 2044, 2045, 2046, 2048, 2056, 2067, 2075, 2081, 2092, 2119, 2132, 2133, 2134, 2135, 2140], "met": [2, 12, 621, 997, 1329, 1336, 1337, 1348, 1362, 1596, 1943], "set_fastpath_en": 2, "verbos": [2, 14, 19, 28, 64, 685, 1203, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2042, 2053, 2062, 2066, 2099, 2119, 2145], "On": [2, 14, 22, 23, 28, 29, 35, 48, 55, 60, 64, 691, 694, 951, 963, 1021, 1337, 1384, 1394, 1475, 1476, 1477, 1478, 1479, 1480, 1500, 1515, 1516, 1517, 1518, 1519, 1535, 1558, 1564, 1577, 1738, 1807, 1808, 1823, 1826, 2043, 2044, 2054, 2075, 2077, 2078, 2081, 2092, 2102, 2109, 2110, 2111, 2114, 2130, 2132, 2133, 2135, 2136], "demand": [2, 23, 1055, 2046, 2088, 2091, 2109], "onemkl": 2, "easier": [2, 7, 23, 52, 64, 2044, 2046, 2067, 2071, 2075, 2076, 2081, 2082, 2084, 2114, 2136, 2145], "dump": [2, 64, 1016, 2080, 2095, 2136, 2145, 2149], "durat": [2, 19, 28, 44, 47, 948, 1405, 1406, 2060, 2097, 2103, 2136, 2145], "kernel": [2, 3, 4, 11, 14, 18, 20, 28, 55, 63, 92, 490, 685, 744, 745, 746, 747, 748, 777, 778, 779, 937, 983, 1014, 1019, 1023, 1024, 1061, 1062, 1095, 1097, 1412, 1416, 1417, 1457, 1458, 1459, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1495, 1496, 1515, 1516, 1517, 1524, 1525, 1526, 1527, 1528, 1529, 1541, 1542, 1543, 1544, 1545, 1546, 1600, 1629, 1630, 1631, 1632, 1633, 1634, 1649, 1650, 1706, 1746, 1747, 1757, 1996, 1998, 2013, 2014, 2039, 2044, 2051, 2057, 2062, 2067, 2071, 2078, 2081, 2082, 2084, 2090, 2092, 2099, 2101, 2103, 2105, 2114, 2130, 2133, 2134, 2135, 2136, 2137, 2138, 2145, 2148], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 23, 28, 33, 34, 64, 685, 869, 1003, 1005, 1075, 1326, 1335, 1353, 1452, 1494, 1600, 1648, 1738, 1839, 1925, 1938, 1959, 2043, 2064, 2066, 2067, 2077, 2078, 2081, 2083, 2089, 2092, 2094, 2097, 2099, 2102, 2105, 2109, 2114, 2117, 2120, 2130, 2136, 2143, 2145, 2147], "moreov": [2, 30, 83, 517, 1738, 1826, 2148], "investig": [2, 7, 28, 60, 2143], "singl": [2, 3, 5, 12, 14, 19, 24, 28, 30, 32, 33, 35, 37, 40, 45, 46, 47, 55, 56, 58, 59, 60, 61, 63, 64, 66, 74, 75, 258, 685, 700, 701, 771, 772, 773, 774, 777, 778, 779, 822, 906, 919, 920, 921, 922, 923, 924, 925, 937, 952, 961, 965, 983, 985, 997, 1001, 1005, 1061, 1064, 1176, 1178, 1179, 1182, 1184, 1188, 1247, 1248, 1252, 1274, 1288, 1289, 1305, 1306, 1309, 1367, 1391, 1405, 1406, 1450, 1451, 1454, 1455, 1458, 1459, 1461, 1475, 1476, 1477, 1479, 1480, 1483, 1484, 1495, 1496, 1502, 1515, 1516, 1517, 1520, 1542, 1543, 1548, 1556, 1560, 1561, 1563, 1577, 1588, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1649, 1650, 1651, 1679, 1680, 1681, 1724, 1730, 1732, 1735, 1736, 1737, 1738, 1744, 1745, 1748, 1750, 1752, 1789, 1790, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1821, 1823, 1824, 1825, 1826, 1827, 1832, 1854, 1880, 1901, 1946, 1952, 1953, 1991, 1992, 1995, 2002, 2003, 2007, 2043, 2044, 2046, 2047, 2054, 2057, 2064, 2066, 2067, 2068, 2075, 2077, 2078, 2081, 2082, 2084, 2086, 2089, 2091, 2092, 2093, 2094, 2099, 2101, 2102, 2103, 2104, 2110, 2111, 2114, 2117, 2120, 2121, 2125, 2129, 2130, 2132, 2134, 2135, 2136, 2138, 2144, 2145], "enough": [2, 8, 24, 64, 1203, 1210, 1301, 1598, 1940, 1941, 1942, 1943, 1944, 1945, 1995, 2046, 2064, 2067, 2078, 2081, 2086, 2101, 2102, 2117, 2133, 2136, 2146], "scope": [2, 7, 12, 50, 64, 83, 997, 1079, 1173, 1588, 1770, 2044, 2046, 2047, 2078, 2083, 2099, 2102, 2111, 2135, 2144], "second": [2, 5, 14, 18, 28, 32, 33, 37, 40, 47, 50, 52, 61, 64, 691, 694, 696, 699, 765, 800, 885, 886, 887, 895, 903, 916, 917, 930, 931, 951, 955, 956, 958, 959, 960, 963, 1015, 1029, 1077, 1082, 1096, 1097, 1107, 1109, 1110, 1116, 1124, 1165, 1166, 1178, 1181, 1182, 1183, 1187, 1188, 1216, 1231, 1232, 1243, 1246, 1254, 1255, 1256, 1266, 1278, 1312, 1314, 1322, 1358, 1361, 1367, 1368, 1378, 1384, 1388, 1390, 1391, 1393, 1394, 1440, 1445, 1448, 1452, 1458, 1459, 1465, 1476, 1477, 1479, 1480, 1490, 1491, 1498, 1499, 1513, 1516, 1517, 1518, 1536, 1540, 1542, 1543, 1564, 1577, 1636, 1638, 1672, 1728, 1770, 1805, 1807, 1808, 1811, 1823, 1827, 1839, 1841, 1885, 1935, 1943, 1979, 1984, 1986, 2001, 2004, 2007, 2046, 2047, 2051, 2056, 2075, 2078, 2081, 2082, 2083, 2084, 2086, 2089, 2093, 2097, 2099, 2101, 2103, 2109, 2115, 2119, 2127, 2130, 2133], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 12, 15, 18, 23, 25, 28, 30, 33, 37, 39, 40, 44, 52, 53, 55, 59, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 503, 685, 752, 906, 907, 908, 909, 910, 922, 1177, 1197, 1213, 1216, 1233, 1461, 1484, 1738, 1841, 2000, 2043, 2044, 2047, 2048, 2053, 2060, 2062, 2064, 2067, 2073, 2075, 2077, 2081, 2084, 2086, 2097, 2102, 2103, 2104, 2105, 2109, 2114, 2119, 2124, 2125, 2126, 2132, 2133, 2134, 2136, 2137, 2140, 2143, 2144, 2145, 2146], "verbose_off": 2, "dnn": [2, 2077], "onednn": [2, 866, 867, 870, 1291, 1298, 2100, 2104], "former": [2, 55, 1518, 1548, 2075], "dnnl_verbos": 2, "verbose_on_cr": 2, "set_flag": 2, "_enabl": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 16, 17, 24, 33, 35, 52, 59, 63, 1654, 2042, 2043, 2061, 2063, 2081, 2085, 2089, 2097, 2101, 2107, 2109, 2119, 2123, 2127, 2131, 2152], "els": [2, 5, 7, 12, 23, 28, 30, 33, 35, 37, 39, 47, 52, 64, 66, 607, 765, 950, 954, 997, 1301, 1307, 1513, 1588, 1692, 1706, 1738, 1805, 1807, 1808, 1811, 1823, 1824, 1825, 1826, 1881, 1882, 1914, 1920, 1998, 2044, 2046, 2048, 2049, 2051, 2054, 2064, 2067, 2078, 2081, 2082, 2084, 2089, 2090, 2097, 2098, 2101, 2102, 2116, 2127, 2130, 2131, 2132, 2133, 2144], "einsum": [2, 2045, 2100], "readthedoc": [2, 1119], "io": [2, 7, 14, 23, 30, 52, 1119, 1297, 1300, 1361, 1518, 1519, 1596, 1889, 2095, 2097, 2104], "en": [2, 14, 24, 92, 1119, 1416, 2087, 2119, 2150], "path_find": [2, 1119], "html": [2, 3, 4, 7, 11, 14, 15, 28, 33, 48, 55, 685, 735, 736, 737, 738, 750, 751, 761, 766, 767, 768, 769, 770, 983, 1119, 1598, 1995, 1998, 2051, 2076, 2087, 2089, 2093, 2102, 2103, 2119], "calcul": [2, 19, 23, 28, 30, 37, 44, 765, 773, 774, 807, 810, 828, 829, 833, 927, 971, 1005, 1107, 1111, 1119, 1123, 1280, 1286, 1345, 1367, 1368, 1370, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1467, 1478, 1479, 1480, 1494, 1499, 1501, 1502, 1510, 1511, 1512, 1520, 1588, 1597, 1600, 1601, 1621, 1622, 1623, 1627, 1646, 1651, 1654, 1665, 1695, 1754, 1766, 1788, 1792, 1794, 1805, 1832, 1879, 1952, 1953, 1984, 1986, 2002, 2003, 2071, 2073, 2075, 2076, 2080, 2084, 2086, 2092, 2095, 2104, 2114, 2125], "contract": [2, 53, 1119, 1975, 2043, 2066, 2102, 2131], "fall": [2, 7, 14, 19, 20, 23, 52, 801, 930, 983, 1216, 1252, 1303, 1361, 1508, 1580, 1663, 1710, 1744, 1745, 2042, 2099, 2104, 2136, 2143], "left": [2, 23, 64, 464, 503, 822, 829, 876, 952, 956, 959, 961, 962, 967, 972, 1119, 1139, 1146, 1160, 1163, 1164, 1168, 1243, 1247, 1248, 1252, 1286, 1287, 1294, 1309, 1330, 1339, 1343, 1347, 1350, 1351, 1352, 1353, 1355, 1367, 1368, 1434, 1452, 1457, 1458, 1459, 1460, 1461, 1475, 1476, 1477, 1494, 1501, 1514, 1515, 1516, 1517, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1551, 1552, 1553, 1557, 1558, 1597, 1600, 1601, 1602, 1603, 1609, 1611, 1654, 1674, 1693, 1706, 1745, 1805, 1830, 1831, 1845, 1873, 1886, 1893, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1954, 1975, 1980, 2001, 2044, 2045, 2047, 2075, 2081, 2084, 2089, 2107, 2115, 2133, 2143, 2147], "strategi": [2, 3, 7, 17, 23, 24, 28, 32, 40, 55, 919, 921, 1119, 1180, 1303, 1452, 1738, 1746, 1747, 1839, 2046, 2082, 2086, 2105, 2133, 2136], "auto": [2, 28, 52, 56, 84, 85, 1119, 1460, 1461, 2047, 2099, 2117, 2119, 2135], "greedi": [2, 32, 1119], "doc": [2, 3, 4, 9, 11, 15, 28, 33, 47, 48, 53, 88, 685, 735, 736, 737, 738, 750, 751, 761, 766, 767, 768, 769, 770, 850, 983, 1188, 1308, 1593, 1594, 1595, 1596, 1995, 2007, 2048, 2051, 2064, 2076, 2080, 2081, 2089, 2093, 2102, 2104, 2109, 2114, 2119, 2127, 2133, 2137, 2141], "timer": [3, 31, 2043], "stmt": [3, 2077], "setup": [3, 14, 24, 30, 33, 47, 48, 55, 65, 829, 830, 831, 834, 1188, 1738, 2007, 2077, 2078, 2085, 2090, 2103, 2109, 2110, 2131], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 23, 28, 32, 946, 1119, 1452, 1461, 1467, 1481, 1483, 1507, 1540, 1551, 1552, 1638, 1781, 1831, 2080, 2084, 2091, 2093, 2119], "sub_label": 3, "descript": [3, 7, 13, 14, 20, 23, 25, 40, 47, 64, 92, 739, 1261, 1262, 1263, 1335, 1362, 1416, 1619, 1857, 1901, 2046, 2047, 2056, 2062, 2078, 2081, 2086, 2088, 2089, 2099, 2122, 2126, 2137, 2143, 2149, 2150], "env": [3, 28, 35, 40, 45, 47, 48, 49, 51, 64, 1075, 1203, 1204, 2080, 2092, 2097, 2098, 2109, 2136, 2145], "num_thread": [3, 2091], "languag": [3, 14, 40, 52, 1301, 1452, 1592, 1653, 2062, 2083, 2096, 2133], "measur": [3, 35, 44, 90, 1018, 1067, 1069, 1321, 1402, 1415, 1460, 1461, 1481, 1507, 1514, 1539, 1540, 1597, 1598, 1626, 1686, 1841, 2012, 2043, 2059, 2078, 2088, 2089, 2101, 2114, 2145], "statement": [3, 12, 35, 53, 60, 64, 66, 71, 74, 75, 997, 1290, 1305, 2048, 2075, 2081, 2091, 2094, 2096, 2099, 2102, 2107, 2109, 2131, 2133], "full": [3, 7, 8, 14, 15, 23, 24, 28, 30, 32, 33, 35, 47, 51, 52, 55, 56, 60, 64, 490, 517, 911, 915, 916, 917, 952, 961, 983, 1147, 1148, 1149, 1153, 1154, 1156, 1175, 1187, 1188, 1247, 1248, 1293, 1327, 1328, 1335, 1336, 1337, 1348, 1353, 1354, 1362, 1379, 1461, 1467, 1501, 1562, 1592, 1629, 1630, 1631, 1638, 1651, 1698, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1905, 1958, 1959, 2007, 2042, 2044, 2045, 2046, 2047, 2049, 2062, 2066, 2071, 2074, 2078, 2080, 2081, 2084, 2086, 2089, 2092, 2093, 2097, 2100, 2102, 2104, 2107, 2110, 2118, 2121, 2134, 2136, 2139, 2140, 2145], "org": [3, 4, 7, 9, 10, 11, 12, 15, 24, 33, 35, 48, 55, 685, 735, 736, 737, 738, 750, 751, 761, 766, 767, 768, 769, 770, 983, 997, 1362, 1518, 1568, 1595, 1598, 1755, 1791, 1847, 1901, 1921, 1998, 2042, 2048, 2051, 2071, 2075, 2076, 2089, 2093, 2095, 2099, 2102, 2119, 2120, 2147, 2150], "timeit": [3, 2077], "sever": [3, 12, 15, 23, 28, 35, 55, 64, 743, 744, 745, 746, 747, 748, 771, 772, 777, 778, 779, 787, 788, 926, 927, 1064, 1123, 1224, 1225, 1289, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1475, 1476, 1477, 1478, 1479, 1480, 1495, 1496, 1515, 1516, 1517, 1536, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1602, 1603, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1629, 1630, 1631, 1632, 1633, 1634, 1649, 1650, 1672, 1675, 1676, 1677, 1679, 1680, 1681, 1738, 1756, 1757, 1759, 1760, 1792, 1800, 1862, 1863, 1990, 1995, 2044, 2074, 2075, 2077, 2078, 2088, 2089, 2091, 2099, 2101, 2104, 2109, 2133, 2134, 2136, 2148], "awar": [3, 7, 55, 86, 490, 717, 718, 719, 720, 721, 722, 723, 724, 725, 735, 736, 737, 738, 847, 849, 866, 873, 874, 1596, 1738, 1962, 1963, 1965, 1966, 1967, 2066, 2073, 2075, 2078, 2102, 2107, 2110, 2114, 2142], "element": [3, 12, 23, 28, 35, 53, 60, 61, 64, 66, 72, 74, 75, 101, 123, 154, 158, 200, 220, 246, 258, 262, 290, 317, 319, 321, 323, 325, 356, 402, 404, 406, 439, 458, 475, 477, 478, 501, 503, 517, 519, 521, 524, 549, 550, 562, 564, 613, 614, 621, 686, 688, 689, 692, 693, 698, 699, 703, 704, 740, 763, 765, 775, 776, 777, 778, 779, 785, 789, 799, 885, 887, 888, 889, 892, 893, 894, 895, 896, 904, 919, 920, 922, 923, 924, 930, 931, 953, 962, 965, 972, 978, 982, 997, 999, 1001, 1002, 1003, 1061, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1108, 1109, 1110, 1114, 1116, 1119, 1122, 1124, 1125, 1129, 1149, 1153, 1154, 1156, 1158, 1163, 1165, 1166, 1168, 1171, 1173, 1178, 1179, 1181, 1182, 1183, 1187, 1188, 1230, 1231, 1232, 1233, 1243, 1246, 1249, 1250, 1251, 1252, 1266, 1274, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1309, 1311, 1312, 1314, 1331, 1333, 1337, 1348, 1352, 1363, 1364, 1366, 1369, 1371, 1372, 1373, 1374, 1378, 1379, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1413, 1434, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1494, 1499, 1500, 1503, 1504, 1505, 1506, 1507, 1508, 1513, 1514, 1518, 1520, 1524, 1525, 1526, 1527, 1528, 1529, 1534, 1537, 1539, 1540, 1541, 1542, 1543, 1547, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1576, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1597, 1598, 1600, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1639, 1643, 1646, 1647, 1652, 1653, 1657, 1658, 1659, 1660, 1663, 1666, 1667, 1669, 1674, 1679, 1680, 1681, 1685, 1686, 1690, 1691, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1716, 1717, 1718, 1719, 1724, 1737, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1773, 1774, 1780, 1781, 1783, 1784, 1793, 1794, 1795, 1797, 1802, 1850, 1851, 1854, 1855, 1862, 1863, 1865, 1876, 1879, 1880, 1884, 1886, 1888, 1905, 1908, 1910, 1922, 1923, 1925, 1926, 1930, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1952, 1953, 1957, 1969, 1971, 1972, 1976, 1977, 1978, 1980, 1982, 1983, 1984, 1985, 1986, 1988, 1990, 1991, 1992, 1993, 2002, 2003, 2004, 2007, 2010, 2045, 2047, 2051, 2054, 2067, 2071, 2073, 2076, 2077, 2081, 2086, 2092, 2094, 2099, 2101, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2133, 2135, 2138, 2146], "lazili": [3, 17, 30, 1018, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1728, 2012, 2044, 2081, 2143, 2152], "threadpool": 3, "comparison": [3, 24, 28, 52, 64, 803, 1289, 1305, 1306, 1548, 1802, 2048, 2081, 2121, 2125, 2134], "appl": [3, 2061, 2062], "synchron": [3, 4, 17, 18, 20, 24, 30, 32, 37, 47, 55, 63, 90, 92, 490, 888, 1018, 1019, 1023, 1031, 1035, 1052, 1093, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1337, 1338, 1344, 1347, 1350, 1351, 1353, 1354, 1362, 1402, 1415, 1416, 1588, 1738, 1793, 1795, 1879, 2012, 2013, 2043, 2077, 2078, 2080, 2087, 2091, 2109, 2116, 2123, 2136, 2148], "focu": [3, 53, 1841], "replic": [3, 23, 30, 34, 55, 88, 1243, 1300, 1475, 1476, 1477, 1484, 1494, 1524, 1525, 1526, 1573, 1574, 1575, 1600, 1693, 1721, 1805], "particularli": [3, 23, 24, 50, 1483, 1484, 1555, 2044, 2078, 2132, 2133, 2143], "variat": [3, 35, 2047, 2081, 2101, 2105, 2145], "confound": 3, "quantifi": [3, 1598], "nois": [3, 2045, 2093, 2145], "median": [3, 35, 177, 1440, 1995, 2045, 2065, 2100], "robust": [3, 1362, 2064, 2089], "deviat": [3, 35, 55, 381, 1456, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1588, 1795, 1805, 1915, 1920, 1952, 1953, 2073, 2136], "merg": [3, 6, 7, 9, 23, 28, 30, 33, 48, 1549, 1554, 1558], "repeat": [3, 35, 52, 60, 498, 1005, 1119, 1213, 1353, 1379, 1544, 1545, 1546, 1626, 1627, 1847, 1879, 1938, 1958, 1959, 1976, 2045, 2047, 2078, 2100, 2103, 2106, 2114, 2140], "autorang": 3, "exact": [3, 14, 23, 37, 50, 53, 87, 92, 343, 746, 747, 748, 801, 885, 886, 887, 930, 931, 983, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1390, 1416, 1479, 1518, 1596, 1665, 1738, 1842, 1931, 2073, 2078, 2080, 2091, 2114, 2123, 2135, 2136, 2142, 2145, 2146], "discuss": [3, 5, 8, 9, 10, 35, 52, 64, 1508, 1665, 2054, 2075, 2081, 2084, 2089, 2093, 2109, 2111, 2114, 2133, 2134], "docstr": [3, 14, 64, 872, 873, 1289, 1548, 2042, 2078], "adapt": [3, 52, 771, 772, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1485, 1613, 1614, 1615, 1616, 1617, 1618, 1804, 1805, 1806, 1823, 1825, 1832, 2062, 2078, 2097, 2132], "field": [3, 7, 19, 28, 30, 32, 37, 40, 44, 45, 53, 55, 64, 492, 835, 904, 905, 948, 1287, 1289, 1452, 1460, 1461, 1481, 1483, 1507, 1513, 1514, 1539, 1540, 1548, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1619, 1626, 1627, 1637, 1654, 1666, 1690, 1698, 1780, 1821, 1827, 2060, 2075, 2080, 2091, 2099, 2109, 2110, 2119, 2133, 2144, 2145], "displai": [3, 18, 33, 1063, 1076, 1203, 1665, 1725, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2042, 2048, 2053, 2058, 2099, 2119, 2121, 2127, 2136, 2145, 2148], "instruct": [3, 4, 11, 14, 50, 63, 685, 1901, 2044, 2047, 2078, 2092, 2099, 2104, 2121, 2129, 2133, 2135, 2145], "count": [3, 20, 23, 35, 44, 52, 64, 905, 939, 948, 954, 1004, 1057, 1173, 1251, 1252, 1287, 1327, 1328, 1780, 1841, 1991, 1992, 2045, 2060, 2078, 2084, 2100, 2103, 2109, 2111, 2113, 2114, 2136, 2145], "wall": [3, 2139], "callgrind": 3, "analog": [3, 52, 64, 490, 699, 926, 1102, 1140, 1142, 1339, 1518, 1826, 1958, 1976, 2067, 2089, 2132], "constructor": [3, 14, 23, 24, 32, 47, 55, 64, 66, 75, 833, 872, 873, 1452, 1553, 1558, 1559, 1577, 1602, 1603, 1738, 1787, 1933, 2043, 2044, 2047, 2048, 2078, 2080, 2089, 2109, 2114, 2116, 2117, 2120, 2150], "snippet": [3, 48, 2042, 2089, 2094, 2127, 2138], "loop": [3, 19, 24, 30, 33, 50, 52, 53, 56, 60, 61, 64, 66, 71, 873, 874, 925, 1064, 1067, 1069, 1182, 1188, 1305, 1738, 1757, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 2007, 2044, 2045, 2047, 2060, 2077, 2078, 2083, 2086, 2089, 2092, 2096, 2099, 2101, 2103, 2104, 2119, 2130, 2133, 2135, 2144], "callabl": [3, 5, 12, 23, 24, 28, 32, 33, 35, 37, 40, 45, 50, 52, 53, 55, 63, 64, 123, 402, 852, 983, 985, 997, 1061, 1062, 1064, 1177, 1178, 1179, 1184, 1187, 1188, 1191, 1289, 1292, 1295, 1301, 1305, 1361, 1362, 1548, 1592, 1594, 1596, 1598, 1731, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1823, 1824, 1825, 1826, 1827, 1835, 1838, 2007, 2042, 2044, 2046, 2047, 2048, 2051, 2060, 2071, 2078, 2081, 2089, 2094, 2097, 2099, 2102, 2103, 2109, 2121, 2124, 2125, 2131, 2134, 2137, 2144, 2146], "present": [3, 9, 23, 28, 30, 47, 53, 55, 905, 948, 950, 1238, 1287, 1289, 1379, 1452, 1518, 1548, 1558, 1780, 1800, 1954, 2042, 2058, 2064, 2065, 2066, 2071, 2074, 2075, 2078, 2081, 2086, 2089, 2094, 2099, 2102, 2110, 2113, 2114, 2117, 2133, 2137, 2141, 2147], "default_tim": 3, "dict": [3, 5, 12, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 41, 45, 50, 52, 53, 55, 57, 59, 62, 64, 419, 685, 798, 799, 800, 803, 806, 823, 824, 825, 845, 865, 932, 939, 950, 983, 997, 1061, 1062, 1075, 1085, 1176, 1186, 1188, 1201, 1287, 1288, 1289, 1290, 1296, 1301, 1305, 1306, 1361, 1362, 1427, 1484, 1494, 1548, 1549, 1558, 1600, 1728, 1738, 1770, 1789, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1816, 1817, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 2007, 2021, 2042, 2044, 2045, 2047, 2048, 2051, 2058, 2060, 2071, 2081, 2089, 2094, 2097, 2099, 2100, 2101, 2109, 2110, 2119, 2124, 2125, 2134, 2141, 2144, 2146], "summar": [3, 4, 48, 1905, 2047, 2067, 2084, 2101, 2114, 2133, 2134, 2145], "relu": [3, 24, 33, 52, 60, 61, 64, 705, 706, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 770, 798, 799, 822, 865, 871, 1061, 1178, 1188, 1295, 1301, 1548, 1564, 1566, 1577, 1585, 1592, 1594, 1596, 1702, 1704, 1728, 1801, 2007, 2044, 2045, 2057, 2066, 2067, 2073, 2075, 2089, 2094, 2099, 2100, 2104, 2106, 2107, 2127, 2131, 2138, 2140, 2143, 2144, 2145], "readabl": [3, 13, 23, 45, 52, 64, 1063, 1076, 1973, 2099, 2101, 2134, 2145, 2146], "supplement": 3, "disambigu": [3, 45, 64, 1367, 2145], "ident": [3, 14, 23, 28, 30, 35, 64, 793, 822, 930, 931, 1107, 1216, 1327, 1328, 1329, 1330, 1343, 1355, 1358, 1362, 1379, 1439, 1440, 1456, 1485, 1695, 1746, 1747, 1753, 1756, 2000, 2004, 2010, 2048, 2073, 2092, 2093, 2102, 2106, 2114, 2135, 2145], "easi": [3, 23, 28, 30, 33, 47, 52, 1199, 2044, 2075, 2083, 2088, 2089, 2091, 2102, 2104, 2109, 2110, 2114, 2131, 2134, 2136, 2138], "differenti": [3, 35, 56, 61, 154, 356, 593, 810, 900, 902, 904, 909, 910, 911, 913, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 980, 1064, 1181, 1182, 1183, 1187, 1304, 1336, 1337, 1348, 1379, 1466, 1467, 1490, 1656, 1691, 1738, 1759, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1995, 2043, 2054, 2081, 2083, 2086, 2099, 2101, 2109, 2120, 2136], "distinguish": [3, 1202, 2104, 2114], "princip": [3, 1336, 1847], "signal": [3, 11, 30, 37, 47, 50, 743, 744, 745, 771, 772, 787, 788, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1286, 1352, 1449, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1475, 1476, 1477, 1495, 1496, 1515, 1516, 1517, 1536, 1541, 1542, 1543, 1602, 1603, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1629, 1632, 1649, 1650, 1672, 1675, 1676, 1677, 1679, 1680, 1681, 1954, 2043, 2064, 2091, 2103, 2109, 2149], "form": [3, 7, 9, 11, 23, 28, 33, 35, 46, 47, 48, 52, 53, 55, 60, 64, 765, 784, 790, 974, 1107, 1147, 1149, 1196, 1199, 1289, 1329, 1332, 1337, 1348, 1353, 1450, 1451, 1454, 1455, 1467, 1495, 1496, 1499, 1518, 1548, 1564, 1600, 1601, 1638, 1649, 1650, 1653, 1665, 1693, 1706, 1725, 1759, 1826, 1828, 1834, 1841, 1842, 1845, 1975, 2042, 2044, 2048, 2067, 2075, 2081, 2089, 2097, 2099, 2102, 2104, 2114, 2119, 2133, 2134, 2138, 2144], "treat": [3, 35, 46, 52, 58, 64, 66, 71, 72, 325, 475, 799, 930, 931, 985, 1061, 1176, 1217, 1289, 1342, 1345, 1347, 1359, 1361, 1371, 1372, 1373, 1374, 1391, 1442, 1491, 1501, 1520, 1552, 1553, 1554, 1555, 1558, 1563, 1577, 1582, 1646, 1737, 1738, 1789, 1793, 1832, 1886, 1901, 1954, 1969, 1970, 1976, 1991, 2046, 2047, 2065, 2067, 2075, 2097, 2099, 2109, 2114, 2117, 2125, 2133, 2136, 2137, 2141, 2144], "distinct": [3, 11, 82, 1176, 1325, 1326, 1370, 1461, 2047, 2081, 2094, 2099, 2101, 2109, 2110, 2132], "workload": [3, 8, 19, 23, 28, 55, 1064, 2078, 2084, 2088, 2092, 2103, 2109, 2129, 2143], "good": [3, 7, 8, 14, 64, 983, 1180, 1210, 1556, 1841, 1921, 2042, 2051, 2064, 2078, 2081, 2084, 2088, 2089, 2091, 2099, 2102, 2104, 2132, 2133, 2134, 2135, 2142], "intrins": [3, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 798, 799, 2105, 2106], "contrast": [3, 35, 37, 52, 765, 1199, 1499, 1805, 1826, 2073, 2075, 2082, 2084, 2114, 2140], "adaptive_autorang": 3, "threshold": [3, 24, 64, 1344, 1347, 1508, 1580, 1585, 1714, 1720, 1805, 1841, 1905, 2045, 2074, 2078, 2100, 2119], "min_run_tim": 3, "01": [3, 29, 32, 50, 492, 760, 785, 830, 831, 1120, 1162, 1534, 1669, 1670, 1728, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1832, 1839, 1859, 1912, 1914, 1915, 1920, 1921, 2045, 2073, 2088, 2099, 2101, 2140], "max_run_tim": 3, "callback": [3, 24, 37, 50, 63, 64, 1738, 2060, 2081, 2088, 2103, 2109], "similar": [3, 7, 9, 11, 20, 23, 28, 33, 35, 44, 53, 55, 60, 63, 64, 497, 519, 717, 718, 719, 720, 721, 722, 725, 735, 736, 737, 738, 750, 751, 761, 769, 810, 888, 903, 916, 917, 964, 969, 982, 983, 1165, 1166, 1289, 1481, 1482, 1494, 1507, 1510, 1511, 1512, 1548, 1597, 1636, 1780, 1794, 1795, 1805, 1827, 1851, 1879, 1886, 1935, 1970, 1976, 1992, 2046, 2047, 2051, 2064, 2065, 2067, 2075, 2077, 2078, 2081, 2082, 2086, 2092, 2099, 2102, 2104, 2109, 2110, 2114, 2115, 2120, 2132, 2135, 2136, 2138, 2141, 2145, 2150], "blocked_autorang": 3, "variablil": 3, "until": [3, 5, 7, 23, 24, 28, 30, 32, 37, 47, 55, 63, 64, 90, 92, 490, 1018, 1019, 1023, 1055, 1173, 1310, 1362, 1402, 1405, 1406, 1415, 1416, 1654, 1728, 1738, 1829, 1831, 1836, 1976, 2012, 2013, 2026, 2051, 2059, 2064, 2073, 2078, 2083, 2084, 2085, 2094, 2097, 2099, 2103, 2109, 2111, 2116, 2130, 2133, 2136], "iqr": 3, "smaller": [3, 19, 23, 64, 503, 549, 1005, 1518, 1738, 1841, 1856, 1901, 1946, 2078, 2094, 2102, 2131, 2147, 2150], "reach": [3, 7, 8, 9, 23, 24, 28, 29, 37, 47, 52, 56, 1362, 1738, 1829, 1832, 1836, 1837, 2075, 2081, 2091, 2105, 2109, 2134], "At": [3, 5, 6, 7, 15, 17, 19, 23, 33, 1153, 1462, 1463, 1464, 1475, 1476, 1477, 1478, 1479, 1480, 1515, 1516, 1517, 1996, 2000, 2057, 2067, 2077, 2086, 2104, 2109, 2115, 2133, 2134, 2136, 2145], "high": [3, 4, 7, 8, 9, 10, 15, 24, 28, 35, 37, 44, 46, 48, 64, 123, 1467, 1595, 1868, 1869, 1901, 2000, 2045, 2055, 2060, 2062, 2064, 2081, 2086, 2087, 2089, 2090, 2091, 2101, 2104, 2105, 2109, 2114, 2119, 2120, 2121, 2125, 2129, 2130, 2133, 2140, 2145, 2148, 2149], "pseudo": [3, 91], "block_siz": [3, 2071], "enough_data": 3, "len": [3, 23, 30, 64, 66, 71, 222, 549, 698, 700, 701, 704, 1138, 1142, 1145, 1149, 1152, 1156, 1187, 1293, 1356, 1377, 1389, 1439, 1442, 1484, 1693, 1765, 1767, 1783, 1831, 1839, 1943, 1946, 1952, 1953, 1957, 2001, 2002, 2003, 2044, 2045, 2047, 2081, 2100, 2113, 2114, 2119, 2133, 2144], "small_iqr": 3, "break": [3, 7, 28, 35, 58, 64, 685, 904, 983, 985, 1203, 1289, 1335, 1548, 1886, 1905, 2043, 2048, 2053, 2055, 2080, 2101, 2114, 2123, 2127, 2130, 2132, 2134, 2137, 2139, 2141], "stop": [3, 5, 28, 35, 37, 47, 48, 50, 53, 876, 905, 948, 1057, 1203, 1287, 1362, 1467, 1780, 1841, 2044, 2047, 2103, 2109, 2113, 2133, 2137], "repetit": [3, 1879, 1976], "statist": [3, 24, 28, 35, 807, 808, 829, 830, 831, 833, 834, 1029, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1096, 1097, 1367, 1427, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1588, 2060, 2075, 2083, 2101, 2104, 2107, 2136, 2145], "minimum": [3, 14, 19, 24, 47, 48, 52, 701, 702, 776, 801, 829, 830, 831, 834, 835, 886, 954, 1099, 1166, 1250, 1251, 1252, 1392, 1467, 1506, 1598, 1830, 1831, 1839, 1921, 1940, 1941, 1942, 1943, 1944, 1945, 2045, 2073, 2075, 2086, 2100, 2107, 2117, 2140], "total_tim": 3, "choic": [3, 8, 9, 28, 1305, 1353, 1549, 1558, 1864, 2077, 2099, 2107, 2114, 2132, 2133, 2145], "block": [3, 7, 8, 20, 23, 28, 30, 32, 34, 47, 50, 55, 63, 64, 92, 490, 587, 588, 589, 946, 962, 1018, 1075, 1310, 1362, 1416, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1524, 1525, 1526, 1527, 1528, 1529, 1551, 1600, 1648, 1724, 1738, 1940, 1941, 1942, 2044, 2046, 2047, 2060, 2064, 2068, 2071, 2075, 2078, 2080, 2084, 2086, 2099, 2104, 2109, 2114, 2126, 2143, 2147, 2149], "qualiti": [3, 7, 24], "balanc": [3, 983], "compet": [3, 2091], "amort": 3, "invoc": [3, 5, 64, 852, 983, 988, 1201, 1292, 1305, 2044, 2047, 2078, 2081, 2088, 2099, 2109, 2111, 2130, 2143], "less": [3, 6, 7, 14, 23, 24, 28, 35, 50, 52, 55, 368, 685, 919, 921, 930, 931, 1005, 1071, 1089, 1119, 1163, 1167, 1176, 1314, 1326, 1362, 1378, 1379, 1452, 1508, 1562, 1571, 1580, 1586, 1783, 1877, 1984, 1986, 2042, 2045, 2047, 2067, 2078, 2081, 2084, 2091, 2092, 2100, 2104, 2133, 2136, 2143], "bias": [3, 24, 739, 765, 800, 1462, 1463, 1464, 1499, 1500, 1502, 1510, 1511, 1512, 1518, 1519, 1520, 1563, 1564, 1566, 1588, 1608, 1609, 1737, 2101], "trivial": [3, 37, 40, 740, 973, 1196, 1203, 1753, 1943, 2099, 2111, 2133, 2135], "low": [3, 7, 18, 24, 35, 55, 503, 922, 1213, 1233, 1467, 1847, 1864, 1868, 1869, 1886, 1959, 2043, 2045, 2060, 2062, 2064, 2078, 2091, 2103, 2121, 2133, 2139, 2140, 2146], "digit": [3, 967, 1905, 2042, 2058, 2088, 2092], "microsecond": [3, 2078], "bia": [3, 9, 28, 33, 52, 66, 717, 718, 719, 720, 721, 722, 723, 724, 725, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 754, 756, 757, 758, 759, 761, 765, 766, 769, 770, 777, 778, 779, 786, 798, 1186, 1289, 1299, 1452, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1499, 1500, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1548, 1554, 1564, 1565, 1566, 1592, 1594, 1596, 1609, 1624, 1625, 1629, 1630, 1631, 1632, 1633, 1634, 1655, 1664, 1668, 1671, 1706, 1728, 1738, 1749, 1751, 1753, 1754, 1755, 1769, 1771, 1773, 1788, 1791, 1861, 2045, 2051, 2055, 2057, 2059, 2072, 2081, 2089, 2094, 2097, 2101, 2104, 2106, 2114, 2119, 2140], "period": [3, 9, 32, 47, 952, 961, 1029, 1063, 1076, 1077, 1082, 1096, 1097, 1139, 1247, 1248, 1309, 1843, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2045, 2060, 2091, 2149], "overal": [3, 9, 23, 33, 37, 47, 930, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1595, 2075, 2077, 2078, 2091, 2104, 2105, 2139], "main": [3, 7, 23, 24, 28, 29, 30, 33, 35, 37, 38, 39, 40, 45, 47, 48, 50, 51, 52, 64, 264, 500, 983, 1106, 1107, 1108, 1109, 1110, 1352, 1656, 1938, 1983, 1984, 1985, 1986, 2042, 2044, 2060, 2064, 2066, 2067, 2074, 2075, 2078, 2080, 2081, 2082, 2084, 2085, 2089, 2091, 2095, 2096, 2097, 2104, 2109, 2110, 2119, 2120, 2123, 2126, 2127, 2131, 2133, 2136, 2144], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 2043], "tupl": [3, 5, 12, 14, 19, 23, 28, 30, 33, 34, 37, 44, 45, 47, 52, 53, 55, 64, 237, 323, 449, 451, 453, 497, 501, 524, 541, 564, 587, 588, 589, 698, 700, 701, 702, 704, 740, 771, 772, 773, 774, 777, 778, 779, 784, 790, 791, 792, 799, 803, 806, 825, 826, 865, 872, 873, 889, 890, 897, 898, 899, 900, 901, 903, 916, 917, 919, 920, 921, 922, 923, 924, 925, 930, 931, 934, 935, 936, 950, 966, 985, 992, 997, 1004, 1020, 1030, 1031, 1034, 1046, 1064, 1070, 1098, 1099, 1117, 1120, 1122, 1136, 1138, 1139, 1141, 1142, 1144, 1145, 1146, 1148, 1149, 1151, 1152, 1154, 1156, 1159, 1169, 1174, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1188, 1201, 1203, 1212, 1229, 1233, 1251, 1253, 1289, 1296, 1301, 1305, 1306, 1311, 1320, 1325, 1326, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1342, 1346, 1348, 1349, 1351, 1353, 1356, 1359, 1377, 1379, 1381, 1387, 1389, 1391, 1392, 1395, 1397, 1439, 1442, 1449, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1494, 1495, 1496, 1515, 1516, 1517, 1524, 1525, 1526, 1527, 1528, 1529, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1554, 1558, 1570, 1571, 1572, 1573, 1574, 1575, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1614, 1615, 1617, 1618, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1649, 1650, 1665, 1679, 1680, 1681, 1691, 1693, 1725, 1726, 1727, 1732, 1738, 1749, 1751, 1759, 1770, 1783, 1789, 1793, 1794, 1798, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1819, 1823, 1824, 1825, 1826, 1827, 1847, 1848, 1857, 1866, 1868, 1870, 1880, 1884, 1885, 1930, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1949, 1952, 1953, 1957, 1958, 1959, 1973, 1974, 1975, 1976, 1977, 1982, 1989, 1990, 1991, 1992, 1993, 2002, 2003, 2007, 2008, 2010, 2040, 2044, 2045, 2048, 2051, 2064, 2067, 2071, 2075, 2078, 2081, 2082, 2089, 2094, 2097, 2099, 2101, 2102, 2104, 2109, 2113, 2114, 2119, 2121, 2123, 2125, 2133, 2136, 2144, 2146], "modulo": [3, 35, 1167, 1216, 1877], "determin": [3, 5, 8, 11, 14, 17, 18, 22, 23, 24, 28, 33, 35, 37, 45, 47, 55, 60, 64, 87, 88, 89, 832, 835, 919, 921, 930, 931, 952, 961, 968, 973, 1065, 1121, 1140, 1150, 1175, 1176, 1205, 1206, 1247, 1248, 1251, 1252, 1303, 1323, 1335, 1346, 1349, 1370, 1384, 1491, 1495, 1496, 1518, 1554, 1557, 1564, 1607, 1646, 1649, 1650, 1665, 1699, 1725, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1789, 1799, 1839, 1867, 1869, 1871, 1898, 1940, 1941, 1942, 1943, 1944, 1945, 1954, 2030, 2041, 2047, 2048, 2066, 2078, 2080, 2081, 2084, 2089, 2097, 2099, 2102, 2104, 2109, 2111, 2114, 2116, 2117, 2119, 2121, 2132, 2135, 2136, 2144, 2145, 2152], "itself": [3, 5, 7, 8, 19, 28, 29, 52, 55, 61, 64, 492, 698, 704, 890, 1005, 1181, 1182, 1289, 1301, 1305, 1548, 1582, 1712, 1738, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1932, 2044, 2064, 2081, 2089, 2091, 2093, 2096, 2099, 2102, 2109, 2114, 2118, 2123, 2131, 2133, 2135, 2145], "jitter": 3, "interpret": [3, 23, 28, 32, 35, 37, 47, 50, 52, 53, 784, 790, 891, 925, 1074, 1140, 1141, 1142, 1147, 1149, 1150, 1151, 1152, 1173, 1201, 1240, 1252, 1289, 1294, 1301, 1305, 1342, 1362, 1487, 1654, 1665, 1666, 1725, 1898, 1903, 2042, 2046, 2047, 2051, 2064, 2077, 2078, 2099, 2114, 2116, 2118, 2133, 2134], "ideal": [3, 46, 48, 1305, 1827, 2066, 2136], "analysi": [3, 24, 35, 52, 64, 1309, 1847, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2048, 2055, 2089, 2096, 2097, 2125, 2131, 2133, 2134, 2135, 2139], "valgrind": 3, "degrad": [3, 14, 55, 2077, 2080, 2081, 2114], "due": [3, 4, 5, 7, 24, 28, 30, 35, 46, 55, 60, 64, 66, 68, 86, 490, 891, 919, 920, 925, 1001, 1193, 1302, 1325, 1326, 1353, 1379, 1487, 1501, 1592, 1601, 1665, 1706, 1787, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1959, 2044, 2078, 2086, 2087, 2093, 2097, 2099, 2104, 2105, 2109, 2111, 2130, 2136, 2141, 2145, 2147, 2149], "amelior": 3, "suffici": [3, 14, 24, 28, 35, 39, 47, 48, 53, 55, 490, 1807, 1808, 1826, 1959, 2042, 2051, 2114, 2117, 2136], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 33, 64, 784, 790, 967, 1243, 1469, 1470, 1471, 1472, 1473, 1474, 1570, 1571, 1572, 1573, 1574, 1575, 1601, 1604, 1605, 1606, 1665, 1725, 1832, 1839, 2045, 2080, 2102, 2109, 2136], "caller": [3, 37, 47, 64, 865, 1289, 1548, 1596, 1943, 2051, 2075, 2078, 2109, 2111], "structur": [3, 5, 9, 12, 23, 24, 28, 33, 36, 37, 40, 48, 52, 53, 55, 64, 66, 67, 71, 75, 903, 916, 917, 949, 983, 997, 1170, 1183, 1188, 1201, 1208, 1209, 1305, 1548, 1608, 1766, 1770, 1802, 1847, 1959, 2007, 2043, 2046, 2048, 2051, 2054, 2060, 2067, 2078, 2080, 2081, 2082, 2084, 2091, 2094, 2095, 2097, 2099, 2101, 2102, 2109, 2119, 2120, 2121, 2123, 2125, 2127, 2132, 2133, 2134, 2136, 2137, 2141, 2147], "restrict": [3, 8, 12, 23, 35, 53, 55, 60, 61, 985, 997, 1361, 1384, 1483, 2046, 2047, 2048, 2066, 2067, 2075, 2078, 2086, 2104, 2132], "builtin": [3, 28, 64, 66, 75, 1302, 1361, 1873, 1965, 2044, 2046, 2048, 2109, 2111, 2133, 2136, 2145], "surpris": [3, 8, 55, 2042, 2086, 2092, 2135], "serial": [3, 15, 23, 28, 30, 32, 47, 1289, 1299, 1300, 1361, 1548, 1728, 1889, 2042, 2043, 2045, 2058, 2066, 2075, 2078, 2084, 2088, 2089, 2091, 2097, 2102, 2104, 2109, 2110], "subsequ": [3, 7, 14, 15, 17, 28, 52, 55, 64, 983, 1019, 1289, 1301, 1305, 1475, 1476, 1477, 1478, 1479, 1480, 1548, 1577, 2078, 2093, 2099, 2109, 2114, 2127, 2130, 2136], "deseri": [3, 30, 1361, 1728, 2042, 2058, 2094, 2109], "globalsbridg": 3, "care": [3, 7, 14, 28, 35, 55, 63, 64, 1140, 1142, 1202, 1203, 1548, 2064, 2077, 2078, 2080, 2081, 2083, 2089, 2091, 2094, 2099, 2109, 2114, 2130, 2135, 2136, 2137], "reli": [3, 9, 14, 23, 24, 28, 33, 37, 40, 55, 64, 154, 904, 930, 1119, 1484, 1827, 2056, 2075, 2077, 2080, 2081, 2084, 2093, 2094, 2114, 2118, 2135, 2136, 2137, 2139], "pickl": [3, 23, 24, 28, 1289, 1361, 1548, 1889, 2042, 2058, 2064, 2094, 2102, 2109, 2147], "transfer": [3, 23, 28, 55, 2057, 2064, 2078, 2087, 2089, 2102, 2109, 2117], "properli": [3, 7, 23, 24, 30, 32, 37, 47, 63, 985, 1140, 1141, 1142, 1150, 1151, 1152, 1391, 1549, 1550, 1558, 1559, 1738, 1996, 2042, 2054, 2081, 2085, 2086, 2089, 2091, 2094, 2097, 2109, 2110, 2117], "profil": [3, 4, 17, 19, 44, 64, 490, 938, 939, 946, 983, 1035, 1303, 1731, 1732, 1733, 1734, 1905, 2043, 2062, 2084, 2100, 2109, 2126, 2136], "empti": [3, 27, 28, 30, 37, 45, 53, 55, 60, 64, 237, 325, 517, 519, 527, 541, 549, 825, 950, 953, 954, 964, 970, 1119, 1121, 1287, 1289, 1290, 1315, 1335, 1336, 1341, 1348, 1371, 1372, 1373, 1374, 1381, 1461, 1483, 1491, 1548, 1555, 1627, 1646, 1693, 1787, 1799, 1800, 1943, 1958, 1973, 2041, 2044, 2045, 2046, 2047, 2049, 2057, 2059, 2065, 2066, 2067, 2073, 2076, 2078, 2081, 2093, 2099, 2100, 2102, 2114, 2115, 2120, 2123, 2132, 2133, 2135, 2140, 2143], "drive": [3, 9, 28, 2075], "facil": [3, 25, 1361, 2064], "analyz": [3, 4, 18, 52, 64, 2080, 2081, 2084, 2092, 2145], "manipul": [3, 19, 55, 63, 1293, 2043, 2074, 2083, 2089, 2107, 2144], "1000000": [3, 1803], "mirror": [3, 143, 1738], "semant": [3, 9, 11, 17, 28, 47, 48, 52, 53, 55, 62, 64, 92, 154, 800, 885, 886, 887, 904, 925, 965, 1023, 1075, 1177, 1188, 1201, 1216, 1217, 1293, 1300, 1359, 1416, 1461, 1627, 1699, 1746, 1747, 1827, 1992, 2007, 2043, 2046, 2047, 2051, 2054, 2067, 2082, 2089, 2099, 2109, 2114, 2136], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 24, 2044], "consum": [3, 23, 30, 33, 36, 50, 53, 63, 439, 1119, 2064, 2078, 2084, 2091, 2096, 2097, 2099, 2119], "extrapol": 3, "sinc": [3, 7, 23, 24, 28, 30, 34, 35, 40, 50, 52, 55, 64, 319, 492, 538, 752, 790, 799, 816, 817, 973, 1067, 1069, 1071, 1119, 1159, 1160, 1161, 1176, 1286, 1289, 1294, 1300, 1303, 1379, 1460, 1490, 1544, 1545, 1546, 1548, 1601, 1609, 1619, 1654, 1656, 1725, 1728, 1731, 1770, 1789, 1794, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1954, 2044, 2045, 2046, 2047, 2051, 2053, 2057, 2060, 2067, 2074, 2075, 2078, 2081, 2082, 2083, 2084, 2086, 2088, 2089, 2094, 2095, 2096, 2099, 2100, 2102, 2103, 2104, 2108, 2109, 2110, 2111, 2114, 2115, 2117, 2118, 2120, 2121, 2130, 2133, 2136, 2141, 2144, 2145], "properti": [3, 23, 28, 29, 30, 32, 35, 39, 44, 47, 52, 53, 55, 64, 798, 891, 917, 934, 944, 1020, 1048, 1135, 1136, 1138, 1140, 1141, 1142, 1150, 1151, 1152, 1289, 1456, 1548, 1582, 1607, 1712, 1728, 1739, 1740, 1741, 1742, 1780, 2023, 2043, 2047, 2051, 2060, 2071, 2075, 2078, 2081, 2086, 2097, 2101, 2103, 2109, 2114, 2116, 2117, 2120, 2123, 2127, 2132, 2133, 2134, 2135, 2146, 2150], "significant_figur": 3, "figur": [3, 7, 8, 30, 64, 939, 2077, 2080, 2081, 2099, 2111, 2119, 2125, 2133, 2136, 2149], "intend": [3, 30, 47, 52, 64, 901, 911, 914, 916, 1025, 1203, 1309, 1619, 1731, 1732, 1733, 1734, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 2047, 2067, 2073, 2075, 2089, 2102], "interquartil": 3, "mitig": [3, 66, 2084, 2116], "tail": [3, 23, 45], "645": 3, "conjunct": [3, 23, 28, 32, 55, 833, 1619, 1654, 1738, 2107, 2109], "trim_sigfig": 3, "human": [3, 13, 33, 45, 52, 1063, 1076, 2073, 2099, 2134, 2146], "raw": [3, 64, 1173, 1348, 2078, 2102, 2103], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 15, 23, 28, 30, 32, 33, 35, 37, 45, 53, 55, 63, 64, 490, 500, 685, 765, 930, 937, 1136, 1138, 1141, 1142, 1144, 1145, 1148, 1149, 1151, 1152, 1154, 1156, 1305, 1379, 1462, 1463, 1464, 1484, 1487, 1499, 1510, 1511, 1512, 1522, 1523, 1530, 1531, 1532, 1533, 1558, 1588, 1594, 1596, 1646, 1738, 1829, 1836, 1949, 2047, 2057, 2059, 2064, 2075, 2077, 2078, 2080, 2081, 2082, 2083, 2085, 2089, 2092, 2097, 2099, 2101, 2104, 2105, 2109, 2111, 2117, 2131, 2132, 2133, 2135, 2142, 2144], "functioncount": [3, 2043], "stat": [3, 58, 806, 835, 845, 846, 1075, 1083, 1084, 1085, 1588, 1738, 2060, 2078, 2124, 2136, 2145], "as_standard": 3, "strip": [3, 1656, 1738, 2044, 2100, 2114], "prefix": [3, 28, 30, 37, 47, 55, 64, 753, 762, 1289, 1548, 1738, 2042, 2053, 2075, 2099, 2102, 2104, 2124, 2143], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 15, 18, 19, 28, 35, 64, 685, 905, 930, 985, 1139, 1140, 1142, 1150, 1151, 1152, 1329, 1592, 1593, 1594, 1595, 1596, 1728, 1847, 1954, 2005, 2006, 2048, 2053, 2071, 2075, 2080, 2081, 2085, 2088, 2089, 2097, 2114, 2131, 2137, 2145], "locat": [3, 9, 14, 28, 30, 33, 35, 44, 89, 158, 258, 490, 517, 685, 890, 965, 967, 1032, 1098, 1099, 1311, 1361, 1387, 1392, 1395, 1434, 1484, 1494, 1583, 1600, 1619, 1654, 1721, 1724, 1738, 1759, 1858, 1893, 1914, 1936, 1939, 1995, 2042, 2044, 2058, 2071, 2078, 2085, 2094, 2099, 2102, 2103, 2109, 2111, 2114, 2119, 2124, 2127, 2130, 2135], "someth": [3, 7, 52, 53, 57, 64, 919, 921, 1119, 1203, 1213, 1289, 1305, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 2049, 2060, 2064, 2065, 2075, 2087, 2095, 2099, 2109, 2131, 2132, 2133, 2136, 2138, 2144, 2145, 2146], "resembl": [3, 15, 2127], "23234231": 3, "first_build_dir": 3, "foo": [3, 14, 28, 44, 45, 52, 63, 64, 66, 74, 75, 833, 865, 870, 983, 1176, 1177, 1186, 1287, 1292, 1297, 1300, 1301, 1304, 1305, 1789, 1996, 1998, 2042, 2044, 2046, 2047, 2051, 2055, 2081, 2089, 2099, 2102, 2121, 2130, 2133, 2136, 2145], "9823794": 3, "bar": [3, 7, 44, 52, 64, 66, 74, 75, 865, 870, 1005, 1176, 1292, 1300, 1952, 1953, 2002, 2003, 2042, 2044, 2046, 2051, 2058, 2089, 2099, 2102, 2121], "53453": 3, "src": [3, 28, 64, 200, 232, 317, 325, 475, 516, 517, 518, 519, 520, 521, 523, 542, 1110, 1177, 1592, 1595, 1596, 1800, 1890, 1891, 1892, 1896, 1926, 1969, 1995, 2045, 2062, 2102, 2140], "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1286], "site": [3, 7, 2127], "denois": 3, "explan": [3, 9, 20, 25, 40, 873, 1289, 1548, 2043, 2080, 2081, 2089, 2136, 2142, 2145], "delta": [3, 35, 765, 1005, 1499, 1508, 1518, 1580, 1663, 1804, 1952, 1953, 1980, 2002, 2003, 2045, 2073], "inclus": [3, 35, 52, 91, 517, 1207, 1213, 1250, 1252, 1360, 1376, 1382, 1610, 1611, 1868, 1869, 1951, 2108, 2121], "diff": [3, 7, 2044, 2045, 2100], "One": [3, 8, 14, 28, 30, 52, 53, 58, 60, 64, 587, 962, 985, 1177, 1188, 1280, 1601, 1692, 1739, 1746, 1747, 1753, 1757, 1827, 1832, 1841, 1868, 1869, 1990, 2007, 2044, 2046, 2047, 2066, 2067, 2076, 2077, 2078, 2081, 2088, 2103, 2111, 2119, 2131, 2132, 2134, 2135, 2143, 2149], "reason": [3, 8, 9, 23, 28, 30, 37, 52, 55, 60, 65, 83, 685, 852, 916, 917, 1140, 1142, 1289, 1305, 1306, 1325, 1326, 1353, 1390, 1460, 1487, 1548, 1656, 1706, 1759, 1889, 2044, 2046, 2047, 2051, 2053, 2075, 2080, 2082, 2084, 2092, 2094, 2099, 2109, 2117, 2131, 2132, 2133, 2135, 2136, 2139, 2145, 2146], "unit": [3, 11, 14, 35, 37, 48, 55, 64, 765, 766, 1137, 1155, 1456, 1466, 1489, 1492, 1497, 1498, 1499, 1500, 1567, 1568, 1578, 1619, 1643, 1647, 1652, 1653, 1700, 1709, 1763, 1764, 1768, 1771, 1773, 1776, 1870, 1982, 2061, 2075, 2077, 2084, 2086, 2102, 2129, 2130], "next": [3, 23, 28, 35, 47, 53, 55, 64, 564, 765, 1201, 1293, 1448, 1500, 1519, 1566, 1738, 1782, 2064, 2074, 2075, 2077, 2078, 2081, 2082, 2084, 2089, 2091, 2097, 2103, 2109, 2110, 2114, 2117, 2119, 2127, 2130, 2133, 2134, 2136], "logic": [3, 5, 12, 14, 23, 38, 51, 55, 64, 955, 957, 958, 960, 990, 991, 1136, 1138, 1141, 1142, 1144, 1145, 1148, 1149, 1151, 1152, 1154, 1156, 1177, 1224, 1225, 1293, 1371, 1372, 1373, 1374, 1384, 1554, 1738, 1856, 1883, 1967, 2047, 2048, 2078, 2080, 2081, 2082, 2086, 2104, 2133], "question": [3, 10, 23, 64, 1211, 1791, 2043, 2075, 2084, 2126, 2132, 2135], "involv": [3, 5, 7, 9, 11, 23, 28, 52, 55, 58, 60, 64, 82, 1199, 1738, 1901, 2047, 2065, 2067, 2075, 2078, 2080, 2083, 2089, 2099, 2104, 2109, 2110, 2111, 2114, 2132, 2135, 2143], "look": [3, 4, 7, 8, 9, 12, 15, 28, 35, 46, 47, 52, 53, 57, 60, 64, 66, 76, 77, 490, 873, 919, 921, 997, 1201, 1212, 1289, 1384, 1452, 1548, 1645, 1772, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1940, 1941, 1942, 1944, 1945, 2044, 2046, 2051, 2065, 2071, 2074, 2075, 2078, 2082, 2088, 2089, 2091, 2095, 2099, 2102, 2104, 2109, 2110, 2125, 2130, 2131, 2132, 2133, 2136, 2137, 2138, 2139, 2142, 2143, 2144, 2145, 2147], "autom": [3, 8, 64, 2044, 2104, 2127, 2136, 2145], "easili": [3, 7, 8, 11, 24, 28, 30, 33, 52, 1177, 1555, 1654, 1693, 1827, 1886, 1996, 2059, 2081, 2082, 2086, 2089, 2094, 2101, 2108, 2109, 2111, 2119, 2136, 2144, 2145], "exclus": [3, 23, 28, 35, 37, 47, 52, 55, 64, 740, 1252, 1738, 1868, 1869, 1872, 2075, 2121], "basi": [3, 9, 10, 35, 685, 1362, 1832, 2078, 2088, 2104, 2109, 2130], "thought": [3, 44, 64, 1137, 1139, 1155, 1207, 2133], "path_and_function_nam": 3, "children": [3, 33, 40, 55, 64, 797, 1289, 1548, 2064, 2084, 2089, 2102, 2111], "identifi": [3, 7, 9, 28, 30, 37, 41, 44, 47, 48, 50, 64, 90, 490, 825, 1252, 1361, 1415, 1588, 2048, 2051, 2064, 2076, 2088, 2089, 2102, 2109, 2110, 2111, 2119, 2132, 2143], "hot": [3, 35, 1656, 1692, 2086, 2130], "spot": [3, 1746, 1747], "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 317, 568, 876, 1173, 1656, 1940, 1941, 1942, 1944, 1945, 1955, 2045, 2067, 2100, 2114], "index": [3, 15, 19, 23, 24, 28, 30, 33, 35, 45, 52, 64, 195, 212, 285, 316, 317, 318, 319, 320, 321, 323, 325, 326, 475, 476, 516, 517, 518, 519, 520, 521, 522, 523, 700, 701, 825, 865, 888, 903, 905, 916, 917, 948, 967, 1037, 1040, 1070, 1098, 1099, 1139, 1180, 1181, 1182, 1186, 1188, 1230, 1261, 1262, 1263, 1264, 1287, 1306, 1311, 1319, 1337, 1355, 1369, 1377, 1379, 1383, 1387, 1390, 1391, 1392, 1395, 1418, 1421, 1434, 1440, 1443, 1444, 1452, 1467, 1483, 1490, 1491, 1549, 1550, 1555, 1558, 1559, 1598, 1600, 1645, 1646, 1692, 1765, 1767, 1774, 1775, 1780, 1793, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1858, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1926, 1937, 1938, 1940, 1941, 1942, 1944, 1945, 1954, 1969, 1990, 1991, 1993, 1994, 1995, 1998, 2007, 2015, 2017, 2043, 2044, 2045, 2047, 2051, 2054, 2064, 2065, 2066, 2067, 2071, 2075, 2078, 2080, 2082, 2087, 2093, 2100, 2111, 2113, 2114, 2117, 2118, 2119, 2120, 2121, 2135, 2136, 2140, 2145], "cpython": [3, 52, 64, 2126, 2134], "known": [3, 7, 9, 22, 27, 28, 32, 41, 47, 53, 56, 59, 61, 66, 76, 77, 1183, 1184, 1203, 1305, 1306, 1361, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1518, 1564, 1578, 1580, 1600, 1665, 1709, 1728, 1913, 1914, 1959, 1973, 2043, 2045, 2049, 2051, 2060, 2064, 2067, 2073, 2075, 2077, 2093, 2099, 2101, 2109, 2111, 2115, 2126, 2132, 2137, 2145], "quit": [3, 7, 64, 1746, 1747, 2047, 2071, 2081, 2083, 2102, 2109, 2143], "noisi": 3, "higher": [3, 7, 8, 24, 28, 55, 56, 61, 66, 71, 75, 92, 154, 904, 906, 925, 1023, 1064, 1075, 1111, 1178, 1184, 1188, 1197, 1213, 1216, 1250, 1266, 1416, 1441, 1483, 1540, 1555, 1706, 1804, 1858, 1959, 2007, 2013, 2043, 2051, 2078, 2081, 2082, 2086, 2088, 2094, 2104, 2105, 2109, 2117, 2132], "filter": [3, 20, 548, 777, 778, 779, 1286, 1309, 1475, 1476, 1477, 1478, 1479, 1480, 1629, 1630, 1631, 1632, 1633, 1634, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1954, 2047, 2102, 2145], "transform": [3, 12, 23, 30, 33, 34, 52, 55, 60, 62, 81, 82, 83, 419, 786, 804, 847, 849, 868, 869, 974, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1176, 1177, 1178, 1182, 1187, 1210, 1286, 1299, 1465, 1502, 1510, 1511, 1512, 1520, 1535, 1577, 1593, 1594, 1595, 1596, 1619, 1625, 1654, 1671, 1691, 1728, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1819, 1823, 1824, 1825, 1826, 1827, 1921, 1954, 2043, 2055, 2082, 2084, 2085, 2097, 2104, 2114, 2119, 2125, 2126, 2127, 2134, 2138], "rather": [3, 8, 9, 14, 28, 37, 40, 50, 52, 55, 64, 66, 75, 784, 790, 943, 973, 1287, 1290, 1361, 1444, 1619, 1654, 1665, 1725, 1754, 1901, 1905, 2044, 2047, 2066, 2067, 2076, 2078, 2081, 2082, 2099, 2102, 2104, 2109, 2114, 2119, 2130, 2131, 2133, 2135, 2136, 2137, 2138], "unicod": [3, 2048], "dictionari": [3, 14, 23, 24, 30, 33, 35, 59, 64, 419, 685, 798, 799, 800, 804, 823, 824, 825, 847, 849, 850, 865, 869, 875, 950, 983, 1075, 1176, 1186, 1196, 1203, 1289, 1290, 1297, 1301, 1305, 1306, 1361, 1362, 1427, 1490, 1491, 1548, 1549, 1558, 1645, 1770, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 2021, 2046, 2048, 2081, 2089, 2097, 2099, 2101, 2109, 2119, 2124, 2141, 2146, 2147], "lookup": [3, 30, 35, 47, 1490, 1645, 2044, 2048, 2077, 2110, 2139], "map": [3, 14, 28, 30, 35, 37, 44, 45, 47, 48, 52, 53, 55, 60, 61, 64, 66, 75, 82, 689, 740, 798, 799, 803, 804, 807, 822, 823, 825, 849, 850, 865, 866, 867, 868, 869, 875, 896, 964, 1171, 1177, 1188, 1199, 1201, 1203, 1208, 1243, 1252, 1297, 1300, 1361, 1362, 1478, 1479, 1480, 1486, 1487, 1488, 1492, 1494, 1544, 1545, 1546, 1549, 1558, 1640, 1641, 1642, 1647, 1753, 1770, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1858, 1860, 1991, 1992, 2007, 2048, 2051, 2059, 2066, 2068, 2075, 2078, 2080, 2081, 2082, 2090, 2095, 2097, 2099, 2102, 2104, 2107, 2109, 2110, 2111, 2114, 2116, 2121, 2134, 2135, 2144, 2146], "agnost": [3, 16, 47, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1654, 1746, 1747, 2051, 2066], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 14, 28, 29, 30, 35, 37, 39, 40, 44, 48, 52, 53, 55, 63, 64, 587, 591, 592, 621, 689, 698, 700, 701, 704, 765, 827, 896, 929, 930, 931, 970, 977, 981, 1022, 1032, 1034, 1063, 1076, 1111, 1117, 1119, 1165, 1166, 1186, 1188, 1205, 1253, 1289, 1297, 1305, 1307, 1311, 1345, 1361, 1377, 1387, 1389, 1390, 1392, 1395, 1414, 1439, 1442, 1444, 1499, 1518, 1548, 1564, 1601, 1692, 1731, 1738, 1754, 1780, 1787, 1788, 1792, 1794, 1855, 1879, 1895, 1898, 1931, 1943, 1950, 1952, 1953, 1957, 1980, 2002, 2003, 2007, 2008, 2043, 2044, 2046, 2047, 2048, 2049, 2051, 2054, 2064, 2067, 2078, 2081, 2084, 2089, 2092, 2095, 2097, 2102, 2109, 2111, 2114, 2116, 2117, 2121, 2131, 2133, 2135, 2143, 2144, 2147, 2149], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 327, 332, 548, 618, 1031, 1939, 1943, 1990, 2045, 2080, 2100, 2114, 2136], "entri": [3, 19, 28, 29, 32, 35, 37, 38, 45, 47, 48, 319, 740, 869, 870, 943, 1061, 1062, 1109, 1160, 1161, 1264, 1289, 1310, 1490, 1491, 1548, 1554, 1645, 1646, 1765, 1766, 1774, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1937, 2044, 2047, 2048, 2054, 2067, 2075, 2080, 2081, 2086, 2089, 2094, 2107, 2114, 2119, 2124, 2131, 2132, 2133, 2134], "color": [3, 64, 1512, 2046, 2047, 2119, 2137], "rowwis": [3, 34], "columnwis": 3, "extend_result": 3, "highlight_warn": 3, "highlight": [3, 53, 735, 736, 2047], "trim_significant_figur": 3, "trim": [3, 952, 961, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1247, 1248, 1286], "h": [4, 10, 14, 33, 35, 491, 492, 746, 747, 748, 765, 975, 976, 1319, 1326, 1329, 1339, 1353, 1450, 1451, 1458, 1459, 1461, 1463, 1464, 1476, 1477, 1479, 1487, 1488, 1490, 1492, 1499, 1500, 1511, 1512, 1518, 1519, 1520, 1531, 1532, 1542, 1543, 1560, 1561, 1564, 1566, 1583, 1599, 1602, 1603, 1619, 1627, 1654, 1690, 1696, 1697, 1706, 1753, 1754, 1788, 1800, 1847, 1958, 1959, 2045, 2062, 2065, 2066, 2071, 2075, 2078, 2080, 2081, 2083, 2086, 2099, 2118, 2119, 2120, 2127, 2132, 2142], "finit": [4, 35, 930, 931, 1278, 1279, 1325, 1326, 1336, 1337, 1353, 1379, 1434, 1438, 1460, 1958, 2081, 2086, 2121], "natur": [4, 7, 8, 11, 30, 35, 55, 66, 68, 86, 930, 931, 1318, 1323, 1349, 1363, 1365, 1370, 1452, 1596, 1706, 2084, 2086, 2096, 2097, 2114, 2115], "against": [4, 5, 14, 28, 37, 47, 800, 876, 930, 931, 1147, 1148, 1149, 1153, 1154, 1156, 1230, 1280, 1289, 1305, 1306, 1548, 1554, 1801, 2042, 2047, 2102, 2125, 2133, 2142], "cprofil": 4, "mode": [4, 8, 23, 24, 28, 30, 35, 47, 50, 52, 60, 61, 64, 81, 225, 226, 492, 751, 752, 777, 778, 779, 784, 790, 791, 792, 823, 825, 832, 835, 870, 871, 900, 902, 906, 909, 910, 911, 916, 917, 919, 920, 921, 922, 926, 927, 928, 930, 983, 988, 1016, 1052, 1093, 1094, 1123, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1177, 1180, 1181, 1182, 1183, 1186, 1187, 1189, 1190, 1197, 1202, 1237, 1272, 1273, 1287, 1289, 1290, 1293, 1305, 1307, 1348, 1361, 1391, 1405, 1406, 1431, 1462, 1463, 1464, 1475, 1476, 1477, 1491, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1548, 1565, 1588, 1601, 1602, 1629, 1630, 1631, 1646, 1654, 1665, 1693, 1706, 1725, 1726, 1727, 1740, 1748, 1750, 1754, 1759, 1792, 1832, 1841, 1857, 1900, 1902, 1995, 2043, 2045, 2051, 2057, 2065, 2073, 2078, 2080, 2082, 2083, 2084, 2085, 2089, 2096, 2097, 2100, 2103, 2105, 2106, 2107, 2109, 2120, 2123, 2127, 2130, 2134, 2135, 2136, 2137, 2138, 2140, 2145, 2146], "correct": [4, 5, 6, 7, 24, 28, 29, 30, 33, 35, 47, 52, 92, 209, 210, 213, 225, 559, 584, 607, 608, 619, 627, 911, 912, 916, 931, 1005, 1140, 1142, 1150, 1151, 1152, 1208, 1264, 1287, 1290, 1305, 1306, 1325, 1416, 1484, 1501, 1513, 1728, 1738, 1780, 1904, 1952, 1953, 2002, 2003, 2044, 2045, 2046, 2051, 2055, 2065, 2066, 2073, 2078, 2081, 2086, 2116, 2133, 2140, 2144], "launch": [4, 14, 23, 31, 33, 37, 39, 40, 45, 46, 47, 51, 63, 1019, 1738, 2043, 2075, 2077, 2078, 2080, 2081, 2109, 2130, 2138], "spent": [4, 28, 944, 1839, 2077, 2089, 2136, 2143, 2145], "appear": [4, 24, 28, 35, 52, 53, 64, 865, 946, 1064, 1119, 1160, 1161, 1188, 1361, 1395, 1397, 1739, 1740, 1879, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2007, 2044, 2047, 2065, 2066, 2081, 2082, 2089, 2099, 2102, 2133, 2136, 2143], "extrem": [4, 28, 1738, 2075, 2099, 2135], "expens": [4, 23, 35, 55, 1753, 2071, 2078, 2086, 2088, 2103, 2109, 2120, 2132, 2136, 2139, 2142, 2145], "bound": [4, 15, 24, 28, 52, 55, 485, 801, 967, 978, 1133, 1134, 1196, 1203, 1207, 1212, 1289, 1457, 1458, 1459, 1541, 1542, 1543, 1548, 1567, 1654, 1841, 1872, 1893, 2047, 2048, 2073, 2075, 2084, 2102, 2104, 2115, 2132, 2133, 2135, 2145], "greater": [4, 28, 47, 66, 67, 296, 621, 685, 959, 972, 973, 978, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1232, 1246, 1344, 1410, 1460, 1597, 1654, 1665, 1692, 1706, 1722, 1725, 1754, 1788, 1841, 1995, 2045, 2075, 2078, 2093, 2100, 2114, 2115], "spend": [4, 7, 19, 33, 1362, 2055, 2139], "sens": [4, 35, 47, 64, 1770, 1991, 1992, 2047, 2075, 2084], "respons": [4, 7, 9, 28, 30, 32, 33, 35, 37, 44, 50, 55, 63, 985, 1019, 1205, 1536, 1672, 1738, 1943, 2051, 2075, 2078, 2081, 2082, 2089, 2097, 2109, 2135], "Of": [4, 1793, 2042, 2080, 2081, 2126, 2133, 2136], "cours": [4, 19, 64, 1191, 2042, 2080, 2081, 2109, 2133, 2136], "realiti": [4, 2084], "complic": [4, 24, 34, 52, 64, 799, 1901, 2051, 2066, 2076, 2102, 2109, 2111, 2133, 2135], "account": [4, 33, 45, 64, 1461, 1738, 2071, 2073, 2077, 2084, 2114, 2130], "heavili": [4, 65, 1810, 2077, 2081, 2102], "similarli": [4, 7, 30, 33, 52, 63, 64, 765, 796, 800, 869, 974, 1139, 1289, 1345, 1548, 1596, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777, 1983, 1984, 1985, 1986, 2046, 2051, 2075, 2081, 2083, 2086, 2092, 2114, 2135, 2138, 2143], "platform": [4, 8, 9, 14, 28, 39, 40, 44, 1336, 1337, 1348, 1857, 1958, 2057, 2085, 2087, 2092, 2093, 2104], "startup": [4, 19], "slower": [4, 14, 28, 33, 887, 920, 1159, 1160, 1161, 1319, 1326, 1673, 1753, 1804, 2081, 2093, 2101, 2115, 2135], "rerun": [5, 28, 2078], "segment": [5, 1075, 1173, 1192, 1580, 2078, 2102, 2136, 2141, 2147], "persist": [5, 21, 30, 52, 55, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 765, 823, 824, 825, 1289, 1499, 1518, 1548, 1564, 1739, 1741, 2089, 2094, 2095, 2097, 2116, 2130, 2135, 2139], "rng": [5, 23, 1050, 1090, 1403, 1411, 1423, 1429, 1894, 2024, 2035, 2078, 2093, 2108], "advanc": [5, 15, 23, 24, 37, 1592, 1594, 1596, 1793, 1959, 1998, 2051, 2054, 2066, 2078, 2081, 2087, 2091, 2097, 2118, 2119, 2136], "juggl": 5, "moder": 5, "hit": [5, 8, 14, 1205, 1738, 2042, 2078, 2130, 2133, 2136, 2139, 2145], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 2043], "omit": [5, 14, 28, 48, 154, 1153, 1154, 1156, 1203, 1501, 1562, 2095, 2099, 2109, 2121, 2133, 2137], "exclud": [5, 9, 24, 47, 64, 992, 1252, 1491, 1646, 1695, 1801, 1901, 1983, 1984, 1985, 1986, 2075, 2087, 2094, 2102, 2110, 2134, 2136], "_infer_device_typ": 5, "remain": [5, 8, 19, 35, 47, 64, 1397, 1490, 1491, 1645, 1646, 1728, 1738, 1746, 1747, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777, 1841, 1858, 1880, 2059, 2060, 2064, 2074, 2083, 2089, 2116, 2127, 2134], "consequ": [5, 60, 1353, 1518, 1958, 2047, 2075, 2078, 2091, 2093, 2096], "random": [5, 35, 37, 47, 48, 56, 64, 86, 91, 158, 765, 903, 916, 917, 953, 1050, 1051, 1056, 1065, 1066, 1086, 1087, 1090, 1091, 1181, 1188, 1242, 1265, 1362, 1382, 1403, 1404, 1409, 1411, 1423, 1429, 1456, 1467, 1492, 1499, 1518, 1567, 1647, 1698, 1704, 1728, 1754, 1761, 1767, 1768, 1775, 1776, 1795, 1847, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1894, 1906, 1959, 1998, 2007, 2024, 2025, 2027, 2030, 2031, 2032, 2033, 2035, 2036, 2042, 2043, 2045, 2051, 2053, 2073, 2082, 2086, 2092, 2099, 2100, 2119, 2136, 2145], "gradient": [5, 11, 23, 24, 28, 32, 33, 35, 55, 56, 59, 154, 225, 226, 294, 339, 491, 492, 499, 517, 700, 701, 891, 900, 902, 904, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 930, 931, 935, 936, 954, 980, 1123, 1176, 1177, 1178, 1179, 1183, 1188, 1230, 1289, 1325, 1326, 1329, 1336, 1337, 1353, 1362, 1379, 1381, 1387, 1390, 1392, 1460, 1467, 1478, 1479, 1480, 1483, 1484, 1490, 1491, 1501, 1515, 1516, 1517, 1548, 1555, 1580, 1637, 1638, 1645, 1646, 1656, 1665, 1673, 1675, 1676, 1677, 1690, 1725, 1726, 1727, 1738, 1740, 1743, 1744, 1745, 1753, 1759, 1792, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1830, 1831, 1845, 1939, 1958, 2007, 2043, 2044, 2045, 2051, 2054, 2066, 2067, 2068, 2073, 2078, 2080, 2081, 2083, 2084, 2086, 2089, 2092, 2100, 2101, 2109, 2110, 2114, 2120, 2143], "among": [5, 19, 23, 24, 28, 32, 35, 47, 1030, 1031, 1034, 1252, 1484, 1795, 2047, 2091, 2133, 2135], "detect": [5, 14, 17, 18, 19, 23, 25, 28, 29, 37, 40, 55, 64, 685, 919, 920, 921, 922, 923, 924, 983, 1177, 1293, 1592, 1593, 1595, 1738, 1995, 2043, 2064, 2067, 2078, 2086, 2092, 2099, 2102, 2109, 2132, 2133, 2136, 2145, 2149], "priorit": [5, 33, 1180, 1181, 1183, 1807, 1808, 1826, 2114], "defaultdevicetyp": 5, "anticip": [5, 2147], "belong": [5, 28, 30, 32, 35, 44, 64, 967, 1023, 1201, 2013, 2042, 2078, 2101, 2144, 2146], "use_reentr": [5, 1738], "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 17, 19, 33, 64, 1485, 1761, 1980, 2068, 2089, 2096, 2097, 2101, 2104, 2129, 2145], "recomput": [5, 34, 911, 914, 916, 1601, 1665, 1791, 2101, 2132], "refer": [5, 7, 14, 23, 24, 28, 29, 30, 32, 35, 39, 42, 43, 47, 48, 55, 56, 63, 81, 82, 83, 86, 88, 258, 739, 740, 761, 769, 798, 799, 800, 803, 828, 829, 830, 833, 834, 835, 870, 884, 889, 904, 965, 1057, 1062, 1122, 1173, 1203, 1237, 1239, 1270, 1277, 1289, 1292, 1301, 1308, 1321, 1326, 1342, 1346, 1359, 1362, 1434, 1467, 1501, 1548, 1598, 1619, 1627, 1636, 1654, 1665, 1666, 1724, 1733, 1734, 1738, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1847, 1864, 1871, 1900, 1901, 1921, 1959, 1995, 2042, 2043, 2045, 2064, 2065, 2067, 2068, 2074, 2075, 2078, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2089, 2091, 2093, 2099, 2101, 2105, 2106, 2109, 2110, 2114, 2116, 2117, 2118, 2119, 2123, 2126, 2127, 2130, 2131, 2133, 2134, 2138, 2141, 2145], "potenti": [5, 8, 30, 47, 50, 86, 195, 212, 490, 1204, 1299, 1335, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1706, 1738, 1995, 2046, 2054, 2064, 2075, 2078, 2081, 2084, 2102, 2114, 2117, 2118, 2132, 2136], "silent": [5, 19, 28, 985, 1065, 1066, 1086, 1087, 1264, 1305, 1548, 1744, 1745, 1943, 2030, 2031, 2032, 2033, 2078, 2092, 2099], "consider": [5, 7, 83, 895, 1286, 1491, 1738, 1746, 1747, 2047, 2077], "limit": [5, 8, 9, 12, 20, 23, 33, 53, 55, 56, 61, 83, 997, 1089, 1177, 1303, 1410, 1467, 1490, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1706, 1738, 1770, 1905, 2043, 2047, 2051, 2062, 2064, 2066, 2067, 2071, 2075, 2078, 2080, 2085, 2089, 2092, 2093, 2094, 2096, 2102, 2104, 2107, 2109, 2110, 2114, 2120, 2121, 2132, 2135, 2136, 2142, 2145], "reentrant": [5, 1738], "soon": [5, 47, 52, 55, 799, 2075, 2104, 2109, 2111, 2136], "intermedi": [5, 12, 14, 33, 36, 52, 53, 60, 64, 83, 964, 997, 1170, 1177, 1184, 1379, 1491, 1592, 1594, 1596, 1646, 1706, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 2044, 2047, 2051, 2078, 2081, 2082, 2083, 2092, 2125, 2132, 2133, 2135], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 12, 28, 30, 33, 35, 55, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 91, 143, 154, 225, 226, 685, 752, 798, 799, 823, 824, 825, 827, 832, 835, 904, 911, 914, 916, 925, 983, 985, 988, 990, 991, 1016, 1054, 1059, 1064, 1177, 1193, 1197, 1201, 1203, 1207, 1213, 1226, 1289, 1292, 1293, 1299, 1301, 1305, 1738, 1801, 1803, 1804, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 2043, 2047, 2051, 2053, 2057, 2062, 2068, 2074, 2080, 2081, 2084, 2086, 2089, 2090, 2096, 2097, 2099, 2102, 2103, 2105, 2106, 2107, 2109, 2110, 2111, 2114, 2119, 2125, 2126, 2127, 2131, 2132, 2134, 2135, 2137, 2138, 2139, 2141, 2142], "no_grad": [5, 492, 872, 926, 1123, 1178, 1182, 1187, 1289, 1490, 1548, 1554, 1596, 1740, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 2073, 2075, 2085, 2089, 2104, 2123, 2127], "unmet": 5, "particip": [5, 9, 23, 28, 29, 32, 47, 48, 1592, 1738, 2110, 2132], "wherea": [5, 11, 33, 35, 52, 290, 1345, 1405, 1406, 1439, 1827, 1958, 2047, 2075, 2101, 2121, 2135], "avoid": [5, 8, 9, 19, 20, 23, 28, 30, 33, 35, 45, 48, 55, 64, 66, 74, 75, 195, 212, 452, 786, 876, 904, 964, 983, 1075, 1193, 1224, 1225, 1289, 1335, 1361, 1482, 1513, 1514, 1539, 1548, 1557, 1562, 1600, 1636, 1666, 1691, 1698, 1738, 1754, 1805, 1827, 1879, 1907, 1954, 1965, 1973, 1991, 2026, 2051, 2060, 2066, 2075, 2077, 2078, 2083, 2086, 2089, 2101, 2109, 2110, 2118, 2119, 2120, 2130, 2132, 2133, 2135, 2136, 2137], "know": [5, 7, 8, 14, 17, 19, 28, 29, 33, 36, 52, 64, 490, 911, 912, 916, 920, 937, 985, 1170, 1177, 1192, 1203, 1213, 1217, 1300, 1738, 2044, 2047, 2054, 2055, 2059, 2071, 2074, 2075, 2078, 2081, 2084, 2086, 2099, 2102, 2109, 2110, 2111, 2114, 2130, 2132, 2133, 2134, 2135, 2136, 2148], "lstm": [5, 768, 1519, 1565, 2045, 2078, 2099, 2100, 2104, 2106, 2107, 2119], "hidden": [5, 765, 1186, 1499, 1500, 1518, 1519, 1564, 1566, 1740, 2078, 2119], "correctli": [5, 19, 23, 28, 33, 47, 55, 490, 1177, 1289, 1305, 1548, 1673, 2044, 2046, 2047, 2051, 2060, 2066, 2074, 2075, 2080, 2081, 2082, 2085, 2091, 2093, 2104, 2109, 2143], "compil": [5, 12, 14, 15, 52, 53, 55, 56, 64, 65, 685, 997, 1035, 1045, 1049, 1061, 1062, 1177, 1197, 1202, 1217, 1287, 1289, 1290, 1293, 1294, 1301, 1302, 1303, 1305, 1306, 1307, 1548, 2043, 2044, 2046, 2047, 2048, 2049, 2051, 2053, 2071, 2074, 2077, 2080, 2088, 2095, 2098, 2099, 2109, 2120, 2123, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2138, 2139, 2140, 2141, 2142], "turn": [5, 14, 23, 27, 33, 60, 64, 83, 685, 884, 983, 1277, 1305, 1593, 1595, 1940, 1941, 1942, 1943, 1944, 1945, 1995, 2051, 2054, 2071, 2075, 2078, 2092, 2093, 2099, 2103, 2104, 2110, 2114, 2132, 2135, 2138, 2143], "open": [5, 8, 9, 11, 14, 23, 35, 47, 52, 56, 694, 940, 967, 1169, 1297, 1361, 1384, 1394, 1671, 2044, 2051, 2054, 2064, 2067, 2087, 2094, 2095, 2096, 2099, 2102, 2104, 2109, 2114, 2115, 2116, 2133, 2136, 2143, 2147, 2148], "ran": [5, 18, 55, 2136, 2141, 2145], "sequenti": [5, 23, 32, 52, 53, 55, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 799, 1188, 1289, 1299, 1493, 1548, 1588, 1599, 1746, 1747, 1756, 1770, 1842, 2007, 2044, 2064, 2067, 2078, 2089, 2099, 2101, 2104, 2125, 2133, 2136, 2143, 2145], "divid": [5, 24, 28, 32, 33, 242, 587, 588, 589, 1034, 1114, 1117, 1137, 1155, 1164, 1198, 1252, 1253, 1300, 1460, 1461, 1467, 1468, 1481, 1507, 1508, 1514, 1539, 1540, 1551, 1552, 1553, 1562, 1580, 1581, 1597, 1598, 1626, 1627, 1637, 1638, 1666, 1690, 1698, 1738, 1958, 2008, 2045, 2100], "func": [5, 28, 58, 60, 64, 66, 68, 873, 903, 906, 911, 913, 914, 915, 916, 917, 919, 920, 921, 922, 923, 924, 926, 930, 931, 1190, 1292, 1305, 1306, 1789, 1998, 2007, 2043, 2047, 2051, 2074, 2109, 2111, 2130, 2146], "compris": [5, 48, 52, 2084], "chunk": [5, 23, 28, 30, 33, 55, 970, 1034, 1182, 1484, 1738, 1946, 2044, 2045, 2065, 2084, 2100, 2101, 2109, 2114, 2118], "input_var": [5, 1484], "set_checkpoint_debug_en": [5, 2043], "defer": [5, 24, 55, 1203, 2078], "checkpointpolici": [5, 2043], "enum": [5, 28, 45, 66, 802, 1607, 1608, 1609, 2062, 2081, 2099, 2103, 2104, 2109], "polici": [5, 33, 35, 37, 40, 55, 1197, 1832, 1839, 2133], "backpropag": [5, 35, 931, 1825, 1857, 2083, 2126], "_save": [5, 2075], "_recomput": 5, "must_": 5, "prefer_": 5, "subsystem": [5, 7, 11, 56, 61, 2043, 2051, 2081], "prefer_recomput": 5, "vanilla": [5, 24, 53, 2054], "prefer_sav": 5, "selectivecheckpointcontext": [5, 2043], "is_recomput": 5, "relev": [5, 9, 29, 33, 37, 47, 63, 685, 1353, 1520, 2048, 2074, 2075, 2097, 2102, 2104, 2123, 2127, 2136, 2137, 2138, 2148], "policy_fn": 5, "functool": [5, 55, 58, 66, 852, 1932, 2081, 2121], "partial": [5, 35, 37, 47, 52, 55, 58, 64, 852, 1064, 1109, 1187, 1201, 1243, 1336, 1337, 1338, 1380, 1544, 1545, 1546, 1682, 1683, 1684, 1738, 1766, 1932, 1938, 2047, 2048, 2066, 2075, 2081, 2084, 2086, 2097, 2099, 2111, 2121, 2141], "create_selective_checkpoint_context": [5, 2043], "policy_fn_or_list": 5, "allow_cache_entry_mut": 5, "certain": [5, 17, 23, 24, 28, 33, 44, 45, 52, 60, 63, 64, 86, 691, 694, 740, 926, 951, 963, 1043, 1107, 1201, 1286, 1289, 1297, 1361, 1384, 1394, 1475, 1476, 1477, 1478, 1479, 1480, 1500, 1519, 1535, 1548, 1554, 1600, 1655, 1666, 1668, 1793, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2020, 2047, 2051, 2054, 2066, 2075, 2076, 2078, 2081, 2088, 2089, 2092, 2094, 2099, 2103, 2109, 2110, 2114, 2135, 2136, 2139, 2145], "accept": [5, 7, 9, 23, 28, 30, 34, 52, 55, 56, 57, 59, 61, 517, 810, 900, 901, 902, 903, 904, 911, 913, 916, 917, 925, 937, 973, 1061, 1064, 1172, 1188, 1202, 1252, 1289, 1293, 1483, 1548, 1555, 1577, 1596, 1766, 1780, 1781, 1787, 1802, 1935, 1949, 2007, 2047, 2051, 2066, 2078, 2081, 2082, 2099, 2101, 2109, 2117, 2119, 2136, 2145], "opoverload": [5, 64, 1201, 2051], "must_sav": 5, "ops_to_sav": 5, "person": [6, 7, 9], "land": [6, 9, 10, 985, 2043, 2051, 2081, 2133, 2142], "six": [6, 82, 1477], "commit": [6, 7, 9, 14, 56, 2042, 2043, 2062, 2092, 2093, 2142], "repositori": [6, 9, 59, 64, 2042, 2091, 2104], "submit": [6, 9, 90, 92, 1018, 1019, 1023, 1402, 1415, 1416, 2012, 2013, 2059, 2078, 2093, 2134, 2136, 2142], "month": [6, 9], "qualifi": [6, 28, 30, 33, 34, 44, 64, 685, 1201, 1289, 1548, 2051, 2053, 2059, 2097, 2102], "pr": [6, 7, 1847, 1959, 2125, 2136], "interest": [6, 7, 9, 83, 2075, 2082, 2086, 2089, 2096, 2133, 2134, 2135, 2139, 2143], "merge_rul": 6, "vote": [6, 9], "decis": [6, 30, 37, 47, 50, 64, 685, 1203, 1305, 2054, 2074, 2132, 2133], "criteria": [6, 9, 1362, 1959], "approv": [6, 9], "Not": [6, 48, 82, 1210, 1442, 1596, 1954, 2044, 2046, 2047, 2048, 2078, 2081, 2100, 2104, 2109], "busi": [6, 9, 2139], "dai": [6, 7, 2133, 2135, 2142], "contributor": [6, 7, 8, 9], "seen": [6, 12, 18, 35, 64, 225, 938, 970, 983, 1005, 1391, 1478, 1479, 1480, 1580, 1679, 1680, 1681, 1841, 2044, 2054, 2075, 2078, 2099, 2114], "thumb": [6, 28], "wiki": [7, 9, 24, 2096, 2150], "acceler": [7, 24, 90, 92, 949, 1238, 1415, 1416, 1462, 1463, 1464, 1588, 1803, 2043, 2087, 2117, 2126, 2130, 2136], "deep": [7, 9, 64, 1462, 1463, 1464, 1489, 1588, 1826, 2043, 2073, 2078, 2089, 2104, 2129, 2132, 2134, 2145], "neural": [7, 8, 15, 64, 1456, 1467, 1485, 1492, 1501, 1513, 1547, 1548, 1555, 1560, 1561, 1576, 1578, 1592, 1594, 1596, 1685, 1709, 1757, 1824, 1832, 1839, 2044, 2046, 2047, 2073, 2078, 2081, 2092, 2096, 2104, 2132], "tape": [7, 2130], "system": [7, 8, 14, 15, 17, 23, 48, 52, 60, 64, 65, 976, 993, 1196, 1243, 1297, 1321, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1350, 1351, 1352, 1356, 1361, 1380, 1410, 1592, 1594, 1596, 1738, 1757, 1759, 1902, 1982, 2048, 2053, 2059, 2060, 2062, 2075, 2077, 2078, 2085, 2088, 2089, 2091, 2095, 2097, 2102, 2109, 2127, 2132, 2133, 2143, 2152], "organ": [7, 2080, 2088, 2102, 2136], "govern": [7, 8, 2043], "technic": [7, 9, 47, 52, 55, 64, 1289, 1548, 2043, 2075, 2083, 2084, 2091, 2102, 2132], "found": [7, 14, 15, 16, 18, 19, 28, 30, 47, 52, 64, 85, 87, 88, 89, 950, 967, 1015, 1098, 1099, 1212, 1289, 1293, 1311, 1387, 1390, 1392, 1395, 1440, 1456, 1466, 1492, 1548, 1576, 1823, 1893, 2042, 2044, 2047, 2051, 2067, 2074, 2081, 2084, 2086, 2089, 2091, 2099, 2102, 2103, 2104, 2109, 2119, 2131, 2135, 2139, 2142, 2144, 2146], "md": [7, 64, 798, 2102], "healthi": [7, 37, 47], "team": [7, 28, 56, 86, 87, 89, 2094], "commun": [7, 8, 9, 29, 30, 32, 33, 37, 47, 50, 55, 490, 685, 1738, 2075, 2080, 2096, 2109, 2110, 2130, 2133, 2136, 2149], "project": [7, 30, 33, 1391, 1518, 1554, 1759, 1847, 2042, 2051, 2084, 2087, 2096, 2127, 2144], "ve": [7, 58, 59, 60, 64, 1197, 1293, 1998, 2054, 2064, 2075, 2082, 2110, 2119, 2135, 2136], "come": [7, 8, 9, 23, 33, 35, 36, 44, 47, 52, 56, 60, 490, 983, 1119, 1170, 1177, 1289, 1361, 1486, 1487, 1488, 1492, 1513, 1800, 2057, 2080, 2082, 2088, 2102, 2109, 2111, 2114, 2134, 2141], "peopl": [7, 28, 2075, 2104, 2138], "scratch": [7, 2075, 2145], "own": [7, 9, 28, 29, 32, 35, 39, 47, 50, 52, 55, 64, 685, 1053, 1153, 1173, 1252, 1289, 1361, 1475, 1476, 1477, 1478, 1479, 1480, 1548, 1756, 1759, 2043, 2047, 2051, 2068, 2074, 2078, 2084, 2102, 2104, 2105, 2109, 2111, 2114, 2133, 2135, 2138], "itch": 7, "acquaint": 7, "tip": [7, 2078, 2133, 2136], "tracker": [7, 1362, 2059], "confirm": [7, 2042, 2044, 2081, 2099, 2109, 2111, 2141], "tend": [7, 921, 1995], "bootcamp": 7, "1hr": 7, "although": [7, 8, 35, 60, 64, 65, 1478, 1479, 1480, 1548, 1556, 1738, 2043, 2047, 2055, 2074, 2081, 2092, 2104, 2130, 2143, 2144], "join": [7, 24, 28, 32, 47, 48, 63, 64, 1229, 1738, 2042, 2043, 2048, 2064, 2075, 2080, 2091, 2100, 2120, 2127], "u": [7, 8, 12, 30, 33, 56, 61, 64, 66, 765, 919, 949, 974, 1202, 1226, 1326, 1328, 1332, 1336, 1337, 1353, 1379, 1381, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1499, 1500, 1518, 1519, 1533, 1535, 1564, 1566, 1567, 1588, 1599, 1759, 1805, 1847, 1958, 1959, 2044, 2045, 2051, 2054, 2066, 2073, 2075, 2078, 2080, 2081, 2082, 2089, 2102, 2114, 2118, 2119, 2123, 2127, 2130, 2132, 2133, 2136, 2139, 2140, 2145, 2148], "dev": [7, 10, 39, 44, 2085, 2134, 2145], "happi": 7, "research": [7, 8, 9, 1738, 2042, 2075, 2086, 2094], "partner": [7, 2126], "speed": [7, 8, 14, 32, 55, 1029, 1119, 1176, 1280, 1293, 1299, 1353, 1452, 1554, 1746, 1747, 1901, 1958, 2055, 2075, 2077, 2078, 2080, 2081, 2083, 2087, 2092, 2104, 2109, 2123, 2133, 2134], "design": [7, 9, 23, 30, 35, 44, 47, 53, 56, 59, 60, 61, 930, 931, 1289, 1309, 1461, 1548, 1607, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1970, 2042, 2043, 2060, 2072, 2074, 2078, 2081, 2084, 2087, 2089, 2097, 2102, 2127, 2132, 2133, 2134, 2136, 2138, 2140, 2145], "comment": [7, 33, 64, 1791, 1897, 2047, 2048, 2081, 2117, 2119, 2139], "crack": 7, "usual": [7, 14, 23, 24, 28, 30, 34, 47, 48, 52, 53, 55, 64, 87, 485, 840, 841, 842, 843, 852, 904, 919, 921, 925, 1188, 1486, 1487, 1488, 1492, 1507, 1510, 1511, 1512, 1513, 1728, 1738, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 2007, 2044, 2047, 2067, 2074, 2075, 2077, 2078, 2081, 2083, 2088, 2101, 2105, 2107, 2109, 2119, 2129, 2130, 2133, 2135, 2139, 2146], "idea": [7, 56, 939, 1119, 1207, 1452, 1738, 2078, 2088, 2099, 2110, 2136], "rfc": [7, 28, 2075, 2104, 2110], "big": [7, 19, 1807, 1808, 1811, 1823, 1824, 1940, 1941, 1942, 1943, 1944, 1945, 2071, 2078, 2094, 2101, 2104, 2132, 2135, 2139], "post": [7, 8, 29, 30, 32, 55, 490, 492, 685, 867, 868, 872, 1289, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1816, 1818, 1823, 1824, 1825, 1826, 1827, 2043, 2051, 2075, 2080, 2081, 2083, 2095, 2114, 2133, 2134, 2135, 2145], "standard": [7, 14, 18, 19, 24, 35, 40, 41, 45, 53, 60, 64, 356, 381, 593, 1139, 1203, 1456, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1513, 1520, 1588, 1594, 1596, 1609, 1795, 1847, 1870, 1915, 1920, 1952, 1953, 2046, 2048, 2067, 2073, 2077, 2078, 2091, 2092, 2096, 2099, 2102, 2115, 2133], "lot": [7, 14, 19, 23, 52, 1213, 2064, 2075, 2078, 2086, 2091, 2102, 2108, 2110, 2119, 2132, 2135, 2139, 2147], "boil": 7, "mostli": [7, 33, 35, 1287, 1738, 2078, 2104, 2114, 2132, 2133, 2146], "evid": 7, "peer": [7, 28, 32, 33, 47, 55, 1027, 1738, 2078, 2109], "paper": [7, 9, 24, 34, 35, 53, 765, 1452, 1456, 1462, 1463, 1464, 1466, 1478, 1479, 1480, 1485, 1486, 1487, 1488, 1489, 1492, 1495, 1496, 1499, 1502, 1505, 1510, 1511, 1512, 1520, 1554, 1560, 1561, 1563, 1567, 1576, 1580, 1588, 1592, 1594, 1596, 1597, 1598, 1649, 1650, 1659, 1737, 1805, 1807, 1808, 1823, 1825, 1832, 1839, 2086], "framework": [7, 8, 9, 35, 44, 56, 63, 65, 765, 1025, 1400, 1499, 1738, 1753, 1805, 1826, 1905, 2043, 2055, 2090, 2104, 2110, 2111], "bit": [7, 64, 91, 334, 462, 766, 768, 770, 828, 829, 830, 831, 834, 836, 869, 956, 959, 998, 999, 1173, 1269, 1881, 1882, 1894, 1901, 1922, 2078, 2084, 2089, 2092, 2095, 2104, 2107, 2108, 2114, 2117, 2120, 2133, 2139, 2150], "overwhelm": [7, 2109, 2145], "newli": [7, 55, 64, 91, 1133, 1134, 1203, 1490, 1491, 1859, 1860], "publish": [7, 9, 39, 44, 47, 1362, 2043], "ground": [7, 9, 34, 1483, 1637, 2119, 2133], "becom": [7, 8, 9, 12, 23, 28, 34, 35, 64, 294, 765, 887, 1243, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1499, 1518, 1533, 1553, 1564, 1577, 1637, 1654, 1728, 1805, 1830, 1930, 1980, 2054, 2057, 2075, 2080, 2081, 2099, 2102, 2103, 2109, 2145, 2147], "refactor": [7, 64, 2095, 2104], "coordin": [7, 28, 30, 35, 37, 587, 590, 895, 1243, 1252, 1391, 1851, 1943, 1984, 1986, 1993, 2075, 2114, 2119, 2136, 2145, 2149], "pace": 7, "branch": [7, 12, 52, 64, 66, 69, 71, 74, 75, 997, 1965, 2042, 2046, 2047, 2078, 2132, 2133, 2142], "definit": [7, 8, 23, 28, 29, 35, 43, 52, 53, 64, 87, 974, 975, 976, 1005, 1061, 1167, 1213, 1216, 1224, 1225, 1310, 1319, 1320, 1362, 1434, 1513, 1592, 1666, 1713, 1794, 1877, 1980, 2042, 2044, 2046, 2048, 2074, 2075, 2081, 2086, 2102, 2104, 2119, 2121], "fundament": [7, 60, 2046, 2089, 2109, 2114, 2135], "cut": [7, 33, 2136], "guidanc": [7, 9, 15, 57, 490, 1215, 2132], "stage": [7, 18, 19, 24, 30, 32, 44, 55, 63, 2043, 2054, 2067, 2111, 2145], "piec": [7, 11, 2053, 2067, 2110, 2133, 2136, 2147], "advic": [7, 2136], "readi": [7, 14, 33, 63, 872, 873, 952, 961, 1247, 1248, 1738, 2044, 2080, 2109, 2110, 2130], "draft": 7, "convert": [7, 11, 23, 28, 30, 34, 35, 36, 53, 55, 59, 62, 64, 82, 83, 84, 584, 588, 589, 590, 591, 592, 740, 793, 795, 796, 798, 799, 800, 823, 824, 825, 847, 849, 865, 868, 869, 870, 890, 891, 949, 969, 982, 1103, 1139, 1170, 1289, 1359, 1548, 1558, 1559, 1588, 1595, 1728, 1741, 1742, 1746, 1747, 1800, 1801, 1827, 1859, 1860, 1865, 1940, 1941, 1942, 1943, 1944, 1945, 1993, 2044, 2045, 2046, 2047, 2055, 2067, 2068, 2081, 2087, 2096, 2097, 2099, 2104, 2107, 2114, 2119, 2121, 2125, 2126, 2136, 2144, 2145], "press": [7, 64], "button": [7, 2142], "prepend": [7, 14, 23, 28, 32, 64, 233, 1111, 1289, 1384, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1976, 2045, 2076], "titl": [7, 2100, 2104], "wip": 7, "progress": [7, 32, 37, 48, 51, 81, 490, 1018, 1402, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 2001, 2012, 2042, 2058], "ci": [7, 2043, 2142], "folk": 7, "who": [7, 8, 9, 11, 47, 66, 83, 1805, 2102], "regularli": 7, "queue": [7, 37, 50, 92, 1416, 2064, 2119], "everyth": [7, 23, 35, 53, 59, 66, 2044, 2064, 2102, 2132, 2136, 2139, 2145], "happen": [7, 9, 28, 30, 32, 34, 35, 37, 40, 47, 52, 55, 60, 64, 611, 797, 822, 916, 917, 1177, 1226, 1588, 1738, 1753, 1829, 1836, 1837, 1843, 1958, 2043, 2060, 2064, 2075, 2078, 2080, 2081, 2082, 2083, 2084, 2090, 2091, 2095, 2099, 2104, 2109, 2116, 2118, 2130, 2133, 2136, 2149], "patch": [7, 57, 1494, 1600, 1996, 2137], "feel": [7, 2067, 2099, 2114, 2136], "ll": [7, 19, 60, 64, 765, 829, 830, 872, 873, 974, 975, 976, 1064, 1203, 1211, 1319, 1499, 1500, 1518, 1519, 2051, 2054, 2075, 2078, 2081, 2082, 2091, 2099, 2104, 2110, 2131, 2135, 2139, 2143], "round": [7, 23, 28, 66, 68, 75, 512, 670, 671, 807, 810, 829, 876, 1001, 1003, 1075, 1114, 1140, 1141, 1142, 1146, 1150, 1151, 1152, 1167, 1335, 1348, 1601, 1665, 1857, 1858, 1877, 1925, 2045, 2047, 2065, 2078, 2100, 2104, 2107, 2114, 2115, 2140, 2147], "trip": [7, 64, 1140, 1141, 1142, 1146, 1150, 1151, 1152], "noth": [7, 14, 37, 64, 685, 1012, 1055, 1759, 1807, 1808, 1826, 1842, 2026, 2044, 2046, 2093, 2111], "accompani": [7, 85, 2097], "solut": [7, 8, 19, 60, 976, 1196, 1334, 1335, 1339, 1347, 1350, 1352, 1356, 1460, 1738, 1982, 2044, 2045, 2073, 2074, 2083, 2091, 2104], "think": [7, 9, 11, 64, 66, 490, 1827, 2044, 2046, 2075, 2101, 2102, 2111, 2133, 2135, 2137], "confid": [7, 1746, 1747, 2084, 2119, 2137], "ahead": [7, 52, 2043, 2104, 2126, 2132, 2136], "search": [7, 11, 24, 828, 967, 1505, 1659, 1738, 1801, 1864, 1893, 2044, 2065, 2066, 2099, 2102, 2114, 2131, 2135, 2142, 2147], "repo": [7, 33, 66, 1832, 2042, 2081, 2095, 2123], "unabl": [7, 52, 60, 84, 2099, 2101], "reproduc": [7, 23, 60, 317, 325, 519, 521, 954, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1544, 1545, 1546, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1646, 1654, 1665, 1693, 1706, 1725, 1726, 1727, 1728, 1995, 2042, 2043, 2101, 2102, 2136, 2145], "problemat": [7, 23, 64, 937, 2044, 2092, 2105, 2133, 2136], "insight": [7, 18, 81, 2127, 2147], "individu": [7, 9, 14, 23, 24, 28, 30, 32, 55, 64, 85, 246, 685, 798, 847, 849, 974, 1085, 1137, 1155, 1197, 1289, 1467, 1548, 1588, 1738, 2047, 2065, 2071, 2074, 2075, 2078, 2081, 2084, 2088, 2092, 2093, 2097, 2099, 2101, 2107, 2109, 2121, 2130, 2138, 2142, 2147], "intent": [7, 30, 45, 47, 55, 60, 1805, 1898, 2054, 2102, 2104, 2141], "lock": [7, 23, 28, 32, 35, 2075, 2078, 2091, 2102, 2110, 2147], "strike": 7, "convers": [7, 30, 462, 584, 587, 799, 968, 1274, 1746, 1747, 1780, 2043, 2048, 2081, 2087, 2099, 2104, 2105, 2114, 2132, 2135, 2144], "medium": [7, 55, 1901], "prioriti": [7, 9, 10, 28, 92, 685, 865, 1006, 1023, 1416, 2013, 2046, 2094, 2149], "entranc": [7, 2078], "great": [7, 12, 52, 2075, 2086, 2130, 2132, 2133], "deal": [7, 8, 23, 37, 50, 52, 82, 1975, 2064, 2083, 2109, 2132, 2135, 2139, 2143], "welcom": [7, 2067, 2096, 2101, 2114], "aim": [7, 52, 83, 2051, 2082, 2114, 2126], "rare": [7, 2074, 2099, 2132, 2137, 2146], "typo": 7, "send": [7, 23, 28, 33, 37, 50, 1057, 1728, 1738, 2064, 2080, 2091, 2095, 2100, 2103, 2109, 2110, 2111, 2123, 2125, 2135, 2138], "forum": [7, 9, 2083, 2091], "share": [7, 10, 14, 23, 29, 30, 32, 33, 35, 36, 47, 48, 53, 55, 60, 225, 315, 344, 462, 487, 524, 528, 621, 870, 890, 891, 911, 912, 916, 917, 930, 931, 983, 1016, 1018, 1053, 1057, 1064, 1170, 1171, 1172, 1173, 1260, 1337, 1443, 1444, 1484, 1565, 1738, 1757, 1795, 1875, 1889, 1897, 1949, 1973, 1979, 1994, 2045, 2074, 2075, 2077, 2091, 2094, 2095, 2099, 2109, 2114, 2116, 2118, 2124, 2127, 2130], "resolv": [7, 8, 9, 30, 35, 64, 84, 85, 1203, 1289, 1478, 1479, 1480, 1494, 1545, 1548, 2046, 2047, 2048, 2095, 2102, 2116, 2132, 2146], "challeng": [7, 28, 30, 2110, 2130, 2136], "feedback": [7, 18, 19, 24, 55, 56, 1738, 2043, 2114], "direct": [7, 9, 11, 28, 33, 53, 765, 798, 1160, 1161, 1213, 1289, 1499, 1518, 1548, 1564, 1755, 1791, 1825, 1847, 1864, 1885, 2051, 2075, 2078, 2081, 2084, 2089, 2109, 2133, 2144], "yourself": [7, 58, 1016, 1996, 2081, 2089, 2091, 2136, 2146], "problem": [7, 23, 28, 47, 52, 60, 66, 1119, 1199, 1203, 1305, 1335, 1347, 1362, 1483, 1555, 1619, 1897, 2064, 2075, 2078, 2083, 2086, 2091, 2095, 2104, 2105, 2111, 2117, 2126, 2132, 2133, 2136, 2145], "area": [7, 9, 53, 1665, 2089, 2104, 2115], "appreci": 7, "strive": 7, "respond": [7, 28], "quickli": [7, 8, 24, 47, 2084, 2138], "ey": [7, 35, 195, 212, 975, 976, 1188, 1310, 1319, 1330, 1341, 1344, 1347, 1348, 1355, 1356, 1753, 1857, 1936, 2007, 2045, 2049, 2081, 2100, 2133], "everyon": [7, 37, 47], "touch": [7, 45, 64], "versu": [7, 1202, 1552], "write": [7, 8, 9, 12, 16, 18, 19, 23, 28, 30, 33, 37, 40, 44, 45, 46, 47, 52, 55, 60, 61, 65, 82, 84, 85, 258, 490, 517, 702, 965, 985, 1172, 1177, 1188, 1205, 1266, 1300, 1320, 1331, 1332, 1333, 1337, 1338, 1351, 1724, 1889, 1982, 1995, 2007, 2043, 2046, 2051, 2060, 2066, 2078, 2081, 2082, 2083, 2086, 2097, 2101, 2102, 2104, 2114, 2119, 2126, 2130, 2132, 2133, 2136, 2138, 2139, 2145, 2149], "blog": [7, 8, 12, 997, 2051, 2071, 2080, 2081, 2104, 2114], "around": [7, 9, 11, 28, 35, 49, 59, 60, 63, 64, 154, 629, 904, 925, 1013, 1016, 1018, 1019, 1023, 1094, 1165, 1166, 1177, 1289, 1402, 1431, 1738, 1886, 2012, 2013, 2038, 2044, 2051, 2064, 2075, 2078, 2099, 2104, 2109, 2130, 2133, 2136], "internet": 7, "grow": [7, 8, 64, 2078, 2114], "market": [7, 9], "benefit": [7, 8, 28, 64, 858, 1746, 1747, 1841, 2064, 2078, 2084, 2104, 2114, 2130, 2145], "opinion": [7, 8, 1805, 2114], "isn": [7, 19, 23, 64, 462, 1286, 2075, 2078, 2081, 2109, 2121, 2135], "categor": [7, 40, 1656, 2043, 2048, 2105, 2109, 2119, 2144], "aspect": [7, 28, 33, 64, 1565, 2081, 2089], "seem": [7, 1203, 2099], "unusu": [7, 2135], "claim": [7, 1746, 1747, 1839, 2086], "wast": [7, 2078], "someon": [7, 9, 1287, 2066], "end": [7, 8, 9, 19, 23, 24, 28, 33, 35, 40, 44, 58, 64, 90, 365, 366, 542, 765, 789, 804, 829, 830, 876, 939, 947, 952, 1000, 1016, 1035, 1079, 1080, 1109, 1119, 1158, 1173, 1228, 1243, 1249, 1250, 1286, 1289, 1310, 1315, 1345, 1355, 1357, 1360, 1362, 1376, 1415, 1443, 1444, 1459, 1460, 1461, 1469, 1470, 1471, 1481, 1483, 1489, 1493, 1499, 1500, 1503, 1504, 1505, 1506, 1507, 1508, 1514, 1518, 1519, 1534, 1539, 1542, 1543, 1548, 1550, 1555, 1556, 1559, 1564, 1567, 1577, 1580, 1586, 1591, 1598, 1637, 1646, 1658, 1659, 1738, 1753, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1830, 1836, 1841, 1873, 1905, 1908, 1911, 1913, 1926, 1980, 1991, 1992, 2010, 2044, 2045, 2046, 2047, 2064, 2074, 2075, 2078, 2080, 2081, 2083, 2084, 2086, 2092, 2095, 2097, 2099, 2101, 2103, 2104, 2107, 2109, 2115, 2130, 2133, 2135, 2138, 2140, 2145, 2149], "too": [7, 9, 14, 24, 30, 47, 60, 64, 490, 1075, 1176, 1203, 1207, 1335, 1353, 1440, 1467, 1483, 1548, 1638, 1740, 1789, 1805, 2047, 2077, 2083, 2086, 2091, 2092, 2093, 2095, 2097, 2102, 2111, 2114, 2132, 2133, 2135, 2145, 2147], "advisori": 7, "fashion": [7, 23, 28, 33, 34, 50, 52, 519, 1367, 1770, 2044], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 2145], "wrote": [7, 8], "implicitli": [7, 28, 40, 64, 1102, 1202, 1233, 1243, 1305, 1306, 1361, 1457, 1458, 1459, 1541, 1542, 1543, 1898, 1980, 2044, 2046, 2047, 2075, 2081, 2087], "lifetim": [7, 490, 2051, 2109, 2135], "immedi": [7, 8, 9, 19, 28, 30, 47, 48, 55, 63, 490, 1213, 1289, 1292, 1548, 1746, 1747, 2047, 2078, 2084, 2089, 2094, 2101, 2109, 2111, 2132, 2135], "sai": [7, 52, 53, 64, 500, 939, 1180, 1181, 1182, 1192, 1202, 1209, 1289, 1548, 2044, 2074, 2075, 2083, 2102, 2110, 2111, 2114, 2130, 2132, 2133, 2139, 2144], "bugfix": 7, "Or": [7, 19, 37, 64, 891, 978, 2087, 2090, 2099, 2114], "motiv": [7, 8, 64, 740, 2084, 2089, 2110, 2145], "ye": [7, 2056, 2099, 2101, 2114, 2136], "knuth": 7, "bewar": 7, "mere": [7, 33, 53], "proven": [7, 1485, 1738], "ok": [7, 40, 45, 59, 1207, 1216, 1294, 2111, 2117, 2133], "sometim": [7, 64, 922, 1075, 1193, 1295, 1305, 1494, 1600, 1632, 1633, 1634, 1759, 2043, 2047, 2051, 2064, 2075, 2078, 2082, 2083, 2084, 2089, 2091, 2102, 2117, 2120, 2132, 2133, 2135, 2139, 2143, 2146], "obvious": [7, 2135], "broken": [7, 23, 1075, 2099, 2102], "contrari": [7, 33, 2077], "accident": 7, "put": [7, 9, 23, 28, 37, 59, 63, 64, 323, 1139, 1361, 1502, 1832, 2042, 2045, 2064, 2078, 2084, 2091, 2100, 2102, 2110, 2111, 2133, 2135, 2137], "difficulti": [7, 28, 2073], "nonlinearli": 7, "sign": [7, 35, 345, 533, 895, 1000, 1107, 1155, 1167, 1173, 1323, 1348, 1349, 1370, 1540, 1825, 1877, 1908, 1922, 2045, 2065, 2100, 2107, 2114, 2117, 2120, 2121, 2133, 2140], "split": [7, 11, 23, 28, 64, 621, 777, 778, 779, 870, 872, 873, 970, 977, 1075, 1117, 1253, 1484, 1498, 1499, 1518, 1554, 1564, 1629, 1630, 1631, 1632, 1633, 1634, 1653, 1974, 2008, 2043, 2044, 2045, 2065, 2071, 2078, 2084, 2100, 2102, 2104, 2109, 2114, 2118, 2130, 2133, 2143, 2147], "shippabl": 7, "complet": [7, 14, 19, 23, 28, 30, 37, 39, 45, 47, 50, 60, 63, 90, 92, 490, 685, 872, 1014, 1018, 1019, 1023, 1035, 1095, 1176, 1177, 1292, 1301, 1303, 1308, 1320, 1348, 1402, 1405, 1406, 1412, 1415, 1416, 1432, 1619, 1738, 1756, 1789, 1857, 1901, 2012, 2013, 2039, 2043, 2046, 2047, 2048, 2053, 2064, 2074, 2075, 2078, 2082, 2087, 2093, 2102, 2109, 2110, 2129, 2137, 2142, 2143], "subtl": [7, 1510, 1511, 1512, 2081, 2135, 2136, 2145], "nuanc": [7, 2096], "extra": [7, 14, 23, 24, 28, 32, 35, 38, 52, 55, 64, 1079, 1119, 1177, 1188, 1202, 1289, 1297, 1300, 1335, 1361, 1548, 1555, 1563, 1737, 1753, 1954, 2007, 2046, 2066, 2075, 2077, 2080, 2081, 2083, 2088, 2097, 2102, 2103, 2114, 2120, 2121, 2123, 2135, 2139, 2149], "understand": [7, 8, 9, 28, 30, 37, 39, 52, 55, 66, 82, 83, 1177, 1211, 1347, 2043, 2073, 2075, 2078, 2087, 2094, 2097, 2103, 2119, 2126, 2131, 2132, 2133, 2134, 2135, 2136, 2138, 2145], "hack": 7, "answer": [7, 10, 64, 833, 1213, 1461, 1772, 2135, 2136], "regress": [7, 1460, 2093, 2130, 2141], "scrutini": 7, "undertak": 7, "rest": [7, 23, 24, 48, 55, 64, 799, 822, 990, 991, 1173, 1355, 1356, 1974, 2066, 2089, 2093, 2102, 2104, 2109, 2114, 2133, 2136, 2137, 2139, 2143], "stai": [7, 32, 143, 1484, 1746, 1747, 2078, 2091, 2104, 2109, 2114], "chanc": [7, 30, 35, 2081, 2135, 2136, 2139], "unrel": [7, 993, 1186, 2074, 2081, 2102], "aid": [7, 64, 2075, 2145], "troubleshoot": [7, 28, 2126, 2136], "mayb": [7, 1184, 1998, 2135], "rebas": 7, "latest": [7, 14, 28, 32, 35, 52, 908, 939, 1766, 2042, 2081, 2087, 2097, 2099], "statu": [7, 9, 37, 90, 1379, 1415, 2043, 2048, 2064, 2101, 2104, 2127], "hud": 7, "risk": [7, 8, 30, 52, 55, 1756, 1759], "anyth": [7, 36, 40, 55, 63, 832, 835, 1213, 1301, 1827, 2044, 2059, 2067, 2084, 2089, 2102, 2132, 2133, 2148, 2149], "configur": [7, 13, 20, 23, 24, 28, 33, 34, 37, 39, 44, 47, 48, 50, 55, 793, 795, 798, 799, 804, 822, 823, 824, 825, 832, 835, 847, 849, 850, 854, 856, 859, 869, 870, 871, 872, 873, 983, 1020, 1075, 1738, 1780, 1902, 1995, 2043, 2053, 2060, 2078, 2080, 2081, 2093, 2095, 2102, 2107, 2109, 2119, 2121, 2132, 2136, 2142, 2143, 2145], "riski": 7, "had": [7, 64, 939, 1203, 1226, 1305, 1728, 1976, 2075, 2082, 2132, 2133, 2141], "beforehand": [7, 63, 2136], "hei": 7, "my": [7, 23, 1484, 2088, 2099, 2104], "member": [7, 9, 23, 28, 37, 47, 48, 64, 1289, 1501, 1548, 1651, 2044, 2046, 2047, 2060, 2083, 2103, 2109, 2121, 2123], "sphinx": 7, "folder": [7, 9, 14, 23, 30, 45, 64, 1801, 2042, 2085, 2097, 2119, 2133, 2138, 2145], "tree": [7, 40, 59, 983, 1548, 1592, 1801, 2056, 2063, 2099, 2102, 2103, 2111, 2126], "master": [7, 28, 41, 51, 798, 1177, 1592, 2042, 2109], "doxygen": 7, "special": [7, 11, 33, 40, 50, 53, 60, 64, 66, 71, 74, 75, 746, 747, 748, 832, 835, 930, 983, 1112, 1126, 1127, 1128, 1130, 1131, 1140, 1142, 1196, 1202, 1257, 1258, 1259, 1303, 1361, 1375, 1437, 1484, 1596, 1739, 1740, 1741, 1742, 1793, 1827, 1852, 1909, 1920, 1924, 2011, 2043, 2048, 2053, 2066, 2078, 2081, 2084, 2086, 2088, 2102, 2104, 2116, 2118, 2119, 2127, 2132, 2134, 2135, 2141], "server": [7, 23, 28, 48, 1293, 2078, 2102, 2104, 2109, 2127, 2129], "cppdoc": [7, 15], "cpp": [7, 14, 28, 2080, 2127, 2132, 2149], "accomplish": [7, 30, 2089, 2136], "holist": 7, "concept": [7, 52, 53, 60, 64, 2051, 2081, 2082, 2089, 2117, 2123, 2137], "galleri": 7, "restructur": [7, 2102], "text": [7, 23, 35, 53, 157, 158, 177, 612, 621, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 699, 703, 750, 751, 761, 763, 765, 769, 773, 774, 775, 777, 778, 779, 785, 789, 829, 830, 876, 892, 893, 894, 895, 896, 951, 952, 953, 956, 959, 961, 963, 972, 975, 976, 978, 999, 1000, 1002, 1003, 1005, 1114, 1133, 1134, 1163, 1164, 1168, 1169, 1232, 1246, 1247, 1248, 1249, 1256, 1278, 1286, 1310, 1313, 1314, 1315, 1318, 1319, 1326, 1329, 1335, 1339, 1344, 1347, 1353, 1360, 1369, 1376, 1377, 1378, 1379, 1433, 1434, 1445, 1446, 1449, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1551, 1552, 1553, 1554, 1555, 1556, 1560, 1561, 1562, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1621, 1622, 1623, 1625, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1640, 1641, 1642, 1647, 1650, 1652, 1653, 1654, 1658, 1659, 1669, 1674, 1679, 1680, 1681, 1685, 1690, 1693, 1698, 1699, 1701, 1706, 1707, 1708, 1709, 1712, 1713, 1714, 1716, 1717, 1718, 1737, 1745, 1753, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1832, 1847, 1850, 1851, 1854, 1857, 1870, 1873, 1876, 1888, 1908, 1910, 1911, 1923, 1925, 1936, 1937, 1947, 1954, 1955, 1958, 1959, 1971, 1972, 2010, 2067, 2071, 2073, 2086, 2099, 2102, 2107, 2115, 2119, 2121, 2133, 2138], "rst": 7, "trigger": [7, 9, 28, 47, 48, 63, 86, 87, 89, 225, 939, 1093, 1905, 2074, 2075, 2078, 2080, 2081, 2088, 2094, 2109, 2130, 2133, 2134, 2136, 2141, 2142, 2145, 2149], "rebuild": [7, 24], "entir": [7, 14, 23, 28, 30, 33, 34, 37, 48, 64, 517, 702, 930, 931, 983, 1177, 1243, 1486, 1487, 1488, 1492, 1510, 1511, 1512, 1520, 1640, 1641, 1642, 1647, 1738, 1755, 1765, 1767, 1791, 2047, 2051, 2067, 2075, 2078, 2081, 2082, 2083, 2088, 2089, 2099, 2102, 2104, 2109, 2111, 2114, 2131, 2132, 2134, 2135, 2136, 2143, 2145, 2147], "circleci": 7, "shard": [7, 23, 30, 32, 33, 34, 55, 1738, 2084, 2136], "worker": [7, 14, 23, 24, 28, 29, 32, 33, 37, 39, 40, 41, 47, 50, 51, 55, 1738, 2047, 2093, 2103, 2109, 2110, 2111], "40": [7, 1243, 1362, 1465, 1510, 1753, 1754, 1755, 1778, 1779, 1788, 1791, 1970, 2134], "minut": [7, 10, 28, 2119], "netlifi": 7, "noplot": 7, "render": [7, 28, 1207, 2119, 2147], "notebook": 7, "rebuilt": [7, 24, 32], "deploi": [7, 12, 37, 47, 2043, 2088, 2094, 2102, 2129, 2133], "action": [7, 28, 35, 37, 41, 64, 1016, 1053, 2078, 2097, 2102, 2103, 2111, 2147], "document": [8, 9, 10, 17, 23, 28, 53, 55, 56, 64, 685, 735, 736, 737, 738, 750, 751, 761, 766, 767, 768, 769, 770, 884, 885, 886, 887, 968, 1018, 1019, 1023, 1075, 1119, 1233, 1237, 1239, 1270, 1277, 1289, 1405, 1406, 1441, 1452, 1490, 1491, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1548, 1733, 1734, 1756, 1765, 1774, 1794, 1856, 1883, 1900, 1995, 2042, 2044, 2046, 2047, 2056, 2061, 2064, 2065, 2066, 2068, 2074, 2078, 2081, 2083, 2089, 2093, 2094, 2099, 2101, 2102, 2104, 2105, 2106, 2109, 2114, 2118, 2123, 2126, 2131, 2137, 2141, 2144, 2148], "develop": [8, 9, 10, 14, 24, 28, 33, 64, 2046, 2047, 2054, 2061, 2062, 2075, 2081, 2085, 2088, 2089, 2093, 2099, 2102, 2104, 2105, 2109, 2114, 2133, 2138, 2140, 2145, 2148], "meant": [8, 29, 30, 47, 50, 55, 1780, 2074, 2109], "rule": [8, 9, 14, 28, 35, 64, 66, 74, 75, 87, 88, 89, 154, 871, 904, 967, 968, 1102, 1339, 1350, 1462, 1463, 1464, 1510, 1511, 1512, 1588, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1893, 1980, 2044, 2046, 2051, 2065, 2067, 2075, 2076, 2081, 2084, 2086, 2117, 2121, 2135, 2136], "concern": [8, 23, 55, 2064, 2071, 2078, 2099, 2143], "disagr": 8, "contribut": [8, 9, 30, 943, 1251, 1252, 1483, 1490, 1491, 1555, 1637, 1645, 1646, 1690, 1738, 2043, 2067, 2081, 2082, 2099], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": [8, 2103], "obsess": 8, "soumith": [8, 10], "goe": [8, 64, 1173, 1456, 1807, 1808, 1826, 2051, 2083, 2097, 2133, 2136, 2137], "depth": [8, 9, 20, 25, 33, 52, 83, 92, 784, 790, 1080, 1081, 1303, 1416, 1459, 1477, 1480, 1517, 1543, 1601, 1665, 1725, 2054, 2080, 2089, 2103, 2134, 2147], "primari": [8, 9, 28, 64, 83, 1299, 2048, 2054, 2055, 2114, 2135], "goal": [8, 44, 59, 64, 1391, 2054, 2075, 2080, 2086, 2111, 2138], "secondari": 8, "abil": [8, 12, 52, 1889, 2054, 2088, 2097, 2102, 2133], "flexibl": [8, 12, 24, 33, 52, 55, 59, 1208, 1346, 2054, 2078, 2081, 2089, 2104, 2133], "abstract": [8, 16, 23, 24, 28, 29, 30, 35, 37, 45, 47, 50, 932, 933, 934, 935, 936, 939, 1209, 1761, 2047, 2051, 2055, 2080, 2104, 2109, 2130], "critic": [8, 28, 47, 685, 1754, 1788, 2060, 2077, 2078, 2136, 2137], "futur": [8, 9, 12, 24, 28, 30, 37, 47, 48, 52, 60, 64, 90, 92, 294, 325, 490, 517, 521, 561, 685, 692, 799, 823, 824, 825, 835, 872, 911, 914, 916, 917, 973, 974, 983, 997, 998, 999, 1015, 1016, 1018, 1019, 1023, 1053, 1054, 1061, 1062, 1064, 1234, 1286, 1289, 1292, 1299, 1300, 1303, 1308, 1320, 1331, 1333, 1334, 1335, 1338, 1351, 1379, 1380, 1391, 1402, 1415, 1416, 1487, 1548, 1656, 1679, 1680, 1681, 1729, 1738, 1744, 1788, 1789, 1794, 1810, 1857, 1873, 1954, 1958, 1982, 2012, 2013, 2043, 2044, 2045, 2046, 2047, 2048, 2053, 2054, 2057, 2060, 2066, 2067, 2071, 2077, 2078, 2081, 2094, 2097, 2099, 2101, 2102, 2103, 2104, 2106, 2109, 2114, 2116, 2120, 2121, 2123, 2125, 2132, 2136, 2140, 2147], "concret": [8, 11, 30, 35, 51, 53, 59, 64, 490, 790, 808, 833, 852, 983, 1201, 1203, 1221, 1222, 1601, 1693, 1725, 2044, 2047, 2051, 2078, 2081, 2091, 2132, 2133, 2135], "manner": [8, 28, 33, 37, 91, 517, 919, 921, 2066, 2068, 2073, 2076, 2101], "jump": [8, 564, 2117], "regim": 8, "ei": 8, "tradeoff": [8, 24, 52, 490, 2104, 2110, 2136, 2141], "temptat": 8, "impos": [8, 50, 61, 1897, 2064, 2074, 2117], "strict": [8, 30, 53, 919, 920, 921, 922, 923, 924, 1176, 1183, 1207, 1289, 1305, 1306, 1548, 1789, 2102, 2119, 2121], "upfront": [8, 2132], "simplifi": [8, 24, 63, 1196, 1203, 1228, 1297, 1538, 1754, 1827, 2054, 2075, 2081, 2086, 2089, 2101, 2104, 2110, 2132], "worth": [8, 9, 23, 24, 33, 51, 53, 1177, 2042, 2116, 2118, 2139], "friction": 8, "compel": 8, "narrow": [8, 1213, 1359, 1444, 1827, 1915, 2045, 2047, 2065, 2100, 2106, 2118, 2145], "subproblem": 8, "fragment": [8, 1043, 1075, 2020, 2051, 2078, 2145], "ecosystem": [8, 2088, 2090, 2133], "incomprehens": 8, "seamlessli": [8, 2067], "softwar": [8, 19, 1325, 1326, 1353, 1995, 2078, 2087, 2126, 2133], "experi": [8, 9, 11, 24, 52, 61, 1188, 1578, 1709, 1738, 2007, 2054, 2081, 2119, 2134], "rich": [8, 33, 2047], "denomin": [8, 692, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1563, 1588, 1737, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1861], "subset": [8, 23, 28, 32, 48, 53, 1301, 1827, 2044, 2046, 2047, 2081, 2096, 2099, 2107, 2140], "borrow": 8, "zen": 8, "implicit": [8, 52, 53, 88, 773, 774, 777, 778, 779, 1233, 1243, 1457, 1458, 1459, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1541, 1542, 1543, 1600, 1621, 1622, 1623, 1629, 1630, 1631, 1679, 1680, 1681, 1845, 2045, 2047, 2048, 2084, 2099, 2102, 2118, 2140], "concis": [8, 40, 2109], "interchang": [8, 35, 1824, 1979, 2046, 2087, 2097, 2126, 2137], "everydai": 8, "english": 8, "movement": [8, 2118, 2136], "worri": [8, 28, 2109], "placement": [8, 34, 37, 870, 1728, 2071, 2104, 2109, 2136], "favor": [8, 28, 790, 791, 792, 974, 1088, 1092, 1289, 1344, 1347, 1379, 1380, 1430, 1506, 1548, 1602, 1603, 1725, 1726, 1727, 1729, 1743, 1857, 1958, 1982, 2037], "practition": 8, "debugg": [8, 28, 1294, 2086, 2136, 2145], "plug": 8, "ir": [8, 52, 64, 81, 83, 765, 1292, 1293, 1499, 1500, 1801, 2044, 2047, 2097, 2099, 2126, 2132, 2133, 2135, 2136, 2145], "classic": [8, 2075], "sort": [8, 32, 64, 594, 613, 887, 888, 911, 913, 916, 1119, 1213, 1250, 1413, 1452, 1781, 1782, 1793, 1858, 1893, 1977, 1991, 2045, 2047, 2081, 2083, 2100, 2114, 2132, 2136, 2140], "distribut": [8, 11, 23, 24, 29, 37, 38, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 55, 63, 177, 262, 290, 381, 458, 485, 612, 685, 700, 701, 828, 946, 953, 1093, 1434, 1452, 1456, 1461, 1483, 1484, 1485, 1486, 1487, 1488, 1492, 1497, 1501, 1513, 1562, 1567, 1588, 1637, 1639, 1640, 1641, 1642, 1647, 1651, 1652, 1656, 1666, 1698, 1738, 1795, 1850, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 2043, 2047, 2066, 2067, 2073, 2074, 2078, 2103, 2105, 2111, 2115, 2119, 2123, 2130], "tldr": 8, "resourc": [8, 14, 23, 28, 37, 43, 47, 52, 64, 2047, 2064, 2091, 2114, 2136, 2142, 2148, 2149], "characterist": [8, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1959, 2082, 2089], "uniformli": [8, 35, 1868, 1869, 2121], "leak": [8, 904, 911, 914, 916, 2047, 2064, 2075], "smart": [8, 2081, 2102, 2109], "anywai": [8, 2075, 2084], "obviou": [8, 1196, 2083, 2111, 2135], "extens": [8, 14, 18, 28, 30, 35, 52, 65, 1361, 1362, 1889, 1908, 2043, 2054, 2056, 2067, 2074, 2081, 2094, 2097, 2102, 2114, 2135, 2136, 2145], "unavoid": 8, "latenc": [8, 30, 44, 2055, 2077, 2078, 2136, 2142], "caveat": [8, 1728, 1787, 2054, 2064, 2078, 2089, 2094, 2131, 2141, 2145], "valuabl": 8, "certainli": [8, 2054], "heterogen": [8, 2046], "cluster": [8, 28, 30, 33, 46, 47, 48, 55, 1452, 2119, 2149], "focus": [8, 2046, 2047, 2081, 2145], "beaten": 8, "space": [8, 9, 23, 35, 777, 778, 779, 1102, 1137, 1139, 1141, 1142, 1148, 1155, 1243, 1252, 1305, 1306, 1360, 1376, 1452, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1513, 1524, 1525, 1526, 1527, 1528, 1529, 1542, 1543, 1600, 1629, 1630, 1631, 1632, 1633, 1634, 1666, 1980, 2045, 2055, 2068, 2075, 2086, 2089, 2094, 2116, 2147], "innov": 8, "growth": 8, "ultim": [8, 9, 14, 40, 50, 52, 2126], "evidenc": 8, "began": 8, "bind": [8, 14, 28, 53, 64, 1055, 1201, 1203, 1212, 1226, 1227, 2047, 2048, 2051, 2081, 2102, 2133], "monolith": 8, "deepli": 8, "integr": [8, 23, 41, 53, 59, 158, 953, 955, 956, 957, 958, 959, 960, 1005, 1102, 1251, 1289, 1313, 1357, 1358, 1443, 1548, 1864, 1876, 1980, 2067, 2081, 2088, 2089, 2098, 2101, 2104, 2115, 2117, 2121, 2131], "numpi": [8, 23, 60, 452, 497, 698, 699, 704, 888, 890, 891, 911, 912, 916, 967, 1114, 1116, 1117, 1119, 1137, 1158, 1159, 1160, 1161, 1165, 1166, 1171, 1172, 1188, 1253, 1320, 1321, 1331, 1342, 1344, 1345, 1346, 1347, 1348, 1353, 1354, 1357, 1359, 1391, 1396, 1851, 1876, 1879, 1886, 1898, 1905, 1940, 1941, 1942, 1943, 1944, 1945, 1958, 1960, 1961, 1970, 1973, 1974, 1976, 2004, 2007, 2008, 2051, 2054, 2076, 2081, 2082, 2092, 2093, 2094, 2095, 2102, 2117, 2118, 2119, 2120, 2121, 2133, 2150], "scipi": [8, 971, 1336, 1337, 1695, 1851, 1913, 2102, 2112, 2115, 2119], "scikit": [8, 1665], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 2095], "year": [8, 2114], "rewrot": 8, "frontend": [8, 15, 33, 53, 59, 64, 985, 2136], "familiar": [8, 15, 53, 64, 1016, 1053, 1074, 2044, 2075, 2082, 2102, 2104, 2110, 2111, 2133, 2134, 2136, 2144], "perhap": [8, 1203, 2082, 2133], "importantli": 8, "huge": [8, 1959, 2060, 2133], "scientif": [8, 1905], "pareto": [8, 2043], "close": [8, 15, 28, 47, 64, 66, 69, 74, 1057, 1199, 1278, 1325, 1326, 1352, 1353, 1379, 1461, 1580, 1598, 1627, 1823, 1958, 1982, 2060, 2075, 2081, 2092, 2099, 2102, 2104, 2109, 2119, 2121], "curv": [8, 2119], "torchdynamo": [8, 52, 66, 77, 685, 983, 991, 2043, 2053, 2099, 2126, 2131, 2132, 2133, 2134, 2136, 2138], "frame": [8, 52, 64, 983, 1286, 1954, 1997, 2083, 2096, 2097, 2119, 2126, 2132, 2134, 2136, 2137, 2145, 2147], "torch_funct": [8, 2081], "torch_dispatch": [8, 2051], "torch": [8, 9, 11, 15, 18, 19, 21, 24, 25, 29, 32, 37, 38, 39, 40, 41, 44, 45, 47, 49, 50, 51, 55, 58, 66, 67, 68, 69, 70, 71, 72, 73, 83, 84, 86, 88, 90, 91, 92, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 905, 906, 911, 916, 917, 926, 927, 928, 938, 939, 946, 947, 948, 949, 950, 1006, 1007, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1040, 1042, 1053, 1123, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1287, 1288, 1289, 1304, 1402, 1415, 1416, 1417, 1421, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1728, 1737, 1738, 1739, 1740, 1741, 1742, 1756, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1780, 1792, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1864, 1933, 2012, 2013, 2014, 2017, 2019, 2043, 2044, 2045, 2046, 2055, 2056, 2065, 2066, 2074, 2075, 2076, 2077, 2080, 2083, 2084, 2086, 2088, 2089, 2090, 2091, 2093, 2095, 2097, 2098, 2104, 2105, 2106, 2109, 2110, 2111, 2118, 2130, 2131, 2132, 2133, 2134, 2135, 2138, 2141, 2144, 2145, 2147], "fx": [8, 12, 52, 53, 84, 685, 752, 823, 824, 825, 826, 851, 871, 985, 1177, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 2043, 2051, 2096, 2097, 2105, 2106, 2131, 2132, 2133, 2134, 2135, 2136, 2144, 2145], "tracer": [8, 33, 52, 1305, 2099, 2119, 2125, 2133], "functorch": [8, 53, 56, 61, 66, 69, 74, 75, 78, 2131], "anchor": [8, 64, 1597, 1598, 1722, 1723, 2045, 2144], "hackabl": 8, "todai": [8, 28, 53, 56, 61, 983, 2059, 2104, 2123, 2132], "evolv": [8, 2080, 2097, 2098], "ai": [8, 2099, 2103, 2115], "adopt": [9, 28, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 750, 751, 761, 766, 767, 768, 769, 770, 1746, 1747, 2097], "hierarch": [9, 2119], "pull": [9, 10, 15, 64, 154, 904, 1217, 2099, 2102, 2135, 2148], "request": [9, 10, 11, 28, 30, 50, 64, 694, 872, 890, 891, 939, 1075, 1362, 1384, 1394, 1671, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2042, 2059, 2067, 2074, 2075, 2077, 2078, 2099, 2102, 2109, 2110, 2111, 2114, 2115, 2132, 2147, 2148], "overseen": 9, "catch": [9, 40, 2044, 2075, 2082, 2086, 2133, 2137], "maker": 9, "strong": 9, "toward": [9, 66, 1114, 1251, 1252, 1362, 1448, 1738, 1836, 1877, 1885, 1886, 2084], "philosophi": [9, 59, 2043], "beyond": [9, 24, 1410, 1483, 1807, 1808, 1823, 1884, 2062, 2083, 2089, 2097, 2132], "encourag": [9, 37, 2067, 2104, 2114, 2121], "propos": [9, 1803, 1830, 1831, 2054, 2086, 2101, 2110], "review": [9, 10, 24, 2102, 2138], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 64], "codebas": [9, 2081], "strictli": [9, 23, 154, 195, 212, 490, 904, 967, 1252, 1289, 1293, 1548, 2075, 2115], "compani": 9, "bui": 9, "addition": [9, 23, 24, 28, 30, 35, 37, 52, 55, 154, 517, 621, 904, 939, 1177, 1181, 1182, 1293, 1353, 1452, 1510, 1511, 1512, 1935, 2083, 2123, 2147], "membership": [9, 37, 46, 47, 2048], "That": [9, 12, 17, 19, 37, 45, 48, 57, 64, 997, 1286, 1360, 1376, 1995, 2051, 2057, 2081, 2082, 2083, 2084, 2094, 2102, 2109, 2133, 2136], "seat": 9, "reserv": [9, 44, 1075, 2048, 2078, 2089, 2147], "emploi": [9, 30, 1826, 2089, 2102, 2127], "directori": [9, 14, 28, 30, 33, 37, 45, 83, 1801, 2042, 2058, 2085, 2088, 2097, 2102, 2103, 2119, 2127, 2136, 2145], "procedur": [9, 35, 870, 1305, 1306, 1362, 1933, 2109, 2145], "disput": 9, "made": [9, 20, 28, 30, 32, 48, 52, 64, 83, 911, 914, 916, 931, 1021, 1289, 1548, 1594, 1596, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1817, 1823, 1824, 1825, 1826, 1827, 1874, 2046, 2054, 2075, 2095, 2102, 2119, 2121, 2130, 2132, 2133, 2145, 2146], "public": [9, 10, 65, 1177, 2081, 2146], "resolut": [9, 1560, 1561, 1619, 1654, 1696, 1697, 1980, 2048, 2102, 2150], "conclus": 9, "publicli": [9, 2146], "vision": [9, 1299, 1483, 1637, 2042, 2043, 2085, 2138], "roadmap": [9, 10], "parti": [9, 47, 2042, 2043, 2044, 2051, 2078, 2082, 2085, 2089, 2102, 2133], "triag": [9, 10], "meet": [9, 10, 12, 30, 46, 997, 1319, 2078, 2136], "Their": [9, 1111, 2081, 2135], "articul": 9, "cohes": 9, "negoti": [9, 2109], "contenti": 9, "broad": [9, 2089, 2148], "stakehold": 9, "power": [9, 12, 46, 1082, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1162, 1313, 1343, 1357, 1515, 1516, 1517, 1675, 1676, 1677, 1754, 1788, 1803, 1840, 1854, 1878, 2001, 2048, 2078, 2114], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 35, 55, 1391, 2047, 2049, 2074, 2075, 2084, 2101, 2104, 2117, 2126, 2129, 2132], "merit": 9, "demonstr": [9, 33, 48, 52, 64, 66, 74, 75, 1467, 2044, 2089, 2094, 2097, 2109, 2127, 2134, 2136, 2138, 2143], "expertis": 9, "align": [9, 24, 52, 83, 765, 784, 790, 829, 835, 983, 1119, 1243, 1345, 1459, 1467, 1483, 1499, 1513, 1518, 1542, 1543, 1564, 1601, 1609, 1610, 1611, 1637, 1638, 1665, 1666, 1706, 1725, 1753, 1794, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1830, 1980, 2043, 2065, 2071, 2075, 2086, 2094, 2099, 2107, 2115], "continu": [9, 23, 28, 30, 35, 51, 55, 64, 406, 612, 828, 920, 1243, 1325, 1326, 1353, 1466, 1467, 1738, 1841, 2048, 2054, 2075, 2084, 2094, 2097, 2103, 2123, 2131, 2133, 2134, 2136], "light": [9, 2119], "mainten": [9, 47, 48], "emeritu": [9, 10], "inact": [9, 1075, 2078, 2147], "contact": [9, 28], "item": [9, 23, 30, 66, 76, 77, 587, 588, 589, 593, 798, 799, 800, 822, 823, 824, 825, 950, 1483, 1549, 1558, 1759, 1905, 2042, 2044, 2045, 2046, 2047, 2055, 2065, 2078, 2099, 2100, 2102, 2109, 2119, 2120, 2130, 2132, 2133, 2135, 2140], "nomine": 9, "breadth": [9, 33], "testimoni": 9, "posit": [9, 23, 30, 33, 35, 52, 64, 91, 406, 475, 549, 740, 868, 872, 874, 952, 954, 961, 974, 975, 976, 1135, 1136, 1137, 1138, 1139, 1147, 1149, 1153, 1155, 1173, 1183, 1184, 1187, 1201, 1203, 1247, 1248, 1281, 1284, 1289, 1292, 1319, 1320, 1331, 1333, 1344, 1347, 1348, 1362, 1382, 1397, 1438, 1443, 1444, 1461, 1475, 1476, 1477, 1482, 1483, 1484, 1491, 1501, 1508, 1548, 1554, 1585, 1592, 1597, 1598, 1619, 1627, 1646, 1651, 1654, 1722, 1723, 1731, 1732, 1884, 1886, 1913, 1936, 1938, 1983, 1984, 1985, 1986, 1994, 2042, 2045, 2059, 2065, 2066, 2071, 2081, 2082, 2086, 2097, 2099, 2100, 2108, 2114, 2115, 2121, 2136, 2146, 2150], "neg": [9, 11, 14, 20, 23, 28, 35, 50, 64, 91, 92, 445, 447, 462, 666, 667, 703, 760, 785, 954, 959, 1000, 1003, 1023, 1040, 1046, 1047, 1075, 1088, 1135, 1136, 1137, 1138, 1139, 1140, 1154, 1155, 1156, 1162, 1173, 1207, 1213, 1279, 1281, 1283, 1343, 1370, 1382, 1405, 1406, 1416, 1421, 1428, 1434, 1438, 1443, 1444, 1452, 1461, 1469, 1470, 1471, 1492, 1501, 1534, 1541, 1542, 1543, 1551, 1555, 1557, 1562, 1580, 1597, 1598, 1647, 1651, 1654, 1656, 1665, 1669, 1679, 1680, 1681, 1690, 1698, 1722, 1723, 1725, 1850, 1851, 1882, 1886, 1920, 1922, 1925, 1937, 1975, 1983, 1984, 1985, 1986, 1993, 1994, 2013, 2017, 2021, 2022, 2034, 2044, 2045, 2065, 2067, 2073, 2075, 2081, 2082, 2099, 2100, 2108, 2114, 2115, 2132, 2136, 2140], "interact": [9, 15, 23, 28, 64, 65, 873, 926, 1019, 1055, 2048, 2051, 2081, 2102, 2104, 2119, 2130, 2133, 2136, 2139, 2147], "final": [9, 19, 28, 30, 32, 35, 37, 47, 53, 55, 59, 60, 691, 694, 695, 765, 951, 969, 982, 1119, 1158, 1177, 1216, 1243, 1361, 1379, 1384, 1468, 1499, 1501, 1518, 1564, 1577, 1728, 1805, 1936, 1980, 2044, 2046, 2047, 2048, 2065, 2081, 2084, 2086, 2089, 2092, 2094, 2096, 2097, 2099, 2101, 2102, 2110, 2111, 2130, 2132, 2134, 2145], "declin": 9, "conflict": [9, 24, 30, 48, 52, 2102], "lack": [9, 11, 33, 950, 1325, 1326, 1353], "unfit": 9, "conduct": [9, 1738, 1847, 1959, 2109, 2127, 2130], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 943, 2102], "letter": [9, 1119], "befit": 9, "candidaci": 9, "behind": [9, 28, 2043, 2094, 2110, 2135], "75": [9, 1251, 1536, 1654, 1672, 1803, 1858, 2045, 2115], "unforeseen": 9, "circumst": [9, 47, 983, 1213, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1706, 2078], "perman": [9, 64, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777, 2075, 2111], "unavail": [9, 1035, 2046], "rank": [9, 23, 24, 28, 29, 30, 32, 33, 35, 37, 41, 45, 47, 48, 51, 53, 55, 66, 75, 1335, 1336, 1337, 1344, 1379, 1540, 1588, 1738, 1759, 1847, 1959, 2045, 2080, 2084, 2091, 2099, 2109, 2110, 2132, 2145, 2149], "elect": 9, "invit": [9, 2042], "convinc": 9, "approach": [9, 24, 28, 64, 89, 971, 1188, 1461, 1901, 1933, 2007, 2044, 2064, 2067, 2078, 2081, 2086, 2096, 2097, 2104, 2109, 2136], "interview": 9, "talk": [9, 50, 2051, 2088], "gather": [9, 28, 30, 33, 47, 55, 517, 1970, 1995, 2045, 2081, 2083, 2084, 2088, 2100, 2102, 2140], "read": [9, 12, 18, 19, 23, 28, 30, 36, 37, 40, 47, 48, 53, 55, 59, 64, 452, 937, 997, 1077, 1102, 1170, 1172, 1173, 1205, 1297, 1361, 1841, 2043, 2051, 2065, 2066, 2071, 2075, 2076, 2078, 2080, 2082, 2088, 2092, 2096, 2102, 2104, 2109, 2130, 2133, 2134, 2136, 2138], "attend": [9, 740, 1554, 1592], "confer": [9, 1501], "pipelin": [9, 30, 64, 2043, 2109, 2136], "world": [9, 28, 32, 37, 45, 47, 48, 55, 1588, 1738, 2075, 2102, 2104, 2132, 2133, 2134], "cover": [9, 53, 56, 64, 66, 1093, 1119, 1541, 1679, 1680, 1681, 2047, 2049, 2066, 2075, 2081, 2084, 2086, 2088, 2089, 2109, 2134, 2139, 2143, 2148], "push": [9, 39, 1079, 1081, 1188, 1355, 2007, 2103, 2133], "codeown": 9, "notifi": [9, 29, 48, 2111], "expert": 9, "strongli": [9, 28, 37, 48, 1486, 1487, 1488, 1492, 1954, 2042], "failur": [9, 28, 35, 37, 39, 40, 44, 45, 46, 47, 51, 52, 685, 930, 931, 983, 985, 1177, 1203, 1305, 1306, 1410, 2047, 2053, 2062, 2064, 2084, 2097, 2109, 2111, 2121, 2133, 2136, 2145], "revert": [9, 35, 55, 1585, 1714, 2111], "substanti": [9, 24, 2078, 2130], "syntact": [9, 40, 64], "incompat": [9, 14, 60, 964, 1286, 1746, 1747, 2076, 2102, 2130], "establish": [9, 19, 28, 47, 1841, 2075], "seri": [9, 33, 64, 1467, 1510, 2085, 2093, 2099, 2130, 2141, 2146], "lf": 9, "llc": 9, "guidelin": [9, 1770, 2091, 2096, 2102, 2104, 2105], "trademark": 9, "www": [9, 1467, 1598, 2119], "lfproject": 9, "acknowledg": [9, 28, 2043, 2111, 2114], "copyright": [9, 2145], "holder": 9, "independ": [9, 23, 28, 47, 52, 55, 63, 157, 158, 784, 790, 919, 920, 921, 922, 923, 924, 1023, 1243, 1252, 1348, 1485, 1486, 1487, 1488, 1492, 1640, 1641, 1642, 1647, 1664, 1665, 1725, 1755, 1791, 1857, 2013, 2043, 2044, 2074, 2075, 2078, 2094, 2102, 2143], "authorship": 9, "claus": [9, 2083], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 24, 35, 435, 483, 763, 807, 1233, 1310, 1326, 1329, 1348, 1390, 1441, 1513, 1554, 1608, 1753, 1845, 1847, 1857, 1858, 1959, 2044, 2045, 2071, 2086, 2093, 2099, 2114, 2115, 2135], "partli": [9, 2047], "domain": [9, 35, 40, 689, 835, 896, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1147, 1149, 1150, 1151, 1152, 1243, 2067, 2099, 2104], "absolut": [9, 11, 14, 64, 96, 686, 699, 930, 931, 1167, 1278, 1318, 1323, 1344, 1347, 1349, 1370, 1508, 1514, 1580, 1663, 1667, 1710, 1764, 1765, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1794, 1802, 1851, 1877, 1908, 2045, 2055, 2089, 2099, 2100, 2115, 2120, 2121, 2127], "health": 9, "success": [9, 30, 35, 37, 44, 64, 290, 1320, 1331, 1333, 1379, 1766, 1940, 1941, 1942, 1944, 1945, 2078, 2089, 2099, 2114, 2145], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 2099], "clearli": [9, 1203, 2054, 2102], "sponsorship": 9, "foundat": [9, 2097], "ptf": 9, "minor": [9, 1046, 1320, 1336, 2114, 2133], "committ": 9, "prior": [9, 19, 24, 28, 30, 37, 81, 83, 911, 915, 916, 917, 988, 1362, 1594, 1596, 1706, 1770, 2071, 2076, 2078, 2081, 2101, 2104, 2130, 2136], "walkthrough": [9, 2074], "facebook": 9, "infrastructur": [9, 33, 39, 2102, 2132], "employe": 9, "expand": [9, 35, 259, 497, 889, 911, 915, 916, 917, 930, 931, 966, 1342, 1343, 1391, 1554, 1599, 1699, 1990, 2042, 2045, 2053, 2065, 2066, 2076, 2078, 2081, 2082, 2097, 2099, 2100, 2102, 2118, 2140], "deliv": [9, 2103], "offici": [9, 28, 89, 1452, 2085, 2104], "showcas": [9, 12, 34, 1544, 2078, 2091], "whenev": [9, 52, 891, 1753, 1754, 2060, 2064, 2081, 2107, 2110, 2111, 2135, 2145, 2146], "fix": [10, 18, 23, 28, 35, 37, 47, 52, 57, 60, 64, 84, 85, 266, 801, 809, 939, 1177, 1303, 1335, 1490, 1491, 1567, 1645, 1646, 1665, 1738, 2044, 2045, 2060, 2073, 2074, 2078, 2083, 2084, 2091, 2095, 2097, 2099, 2100, 2101, 2130, 2133, 2136, 2143, 2145], "plu": [10, 14, 30, 919, 1173, 1336, 2084, 2114], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1362], "ezyang": [10, 2051, 2118], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "alban": 10, "desmaison": 10, "alband": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "joel": [10, 1847, 1959], "schlosser": 10, "jbschlosser": 10, "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 29, 30, 32, 35, 55, 939, 1808, 1809, 1811, 1823, 1827, 2101], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 2145], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 2134], "ansel": [10, 2134], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 12, 1441, 1858, 2078, 2133, 2136], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 35], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1362], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1243], "robi": 10, "robieta": 10, "xu": [10, 55], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 28, 33, 55, 64, 985, 1201, 1943, 2046, 2066, 2099, 2130, 2141], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1998], "sebastian": 10, "messmer": 10, "smessmer": 10, "shubham": 10, "bhokar": 10, "shubhambhokare1": 10, "justin": 10, "chu": [10, 35], "justinchubi": 10, "xavier": [10, 2073], "dupr\u00e9": 10, "xadupr": 10, "titai": 10, "titaiwangm": 10, "bowen": 10, "bao": [10, 2142], "bowenbao": 10, "thiago": 10, "crepaldi": 10, "thiagocrepaldi": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1452], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 799], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 2085, 2136, 2145], "johnson": 10, "peterjc123": [10, 2095], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "sunita": 10, "nadamp": 10, "snadamp": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 35], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": [10, 2043], "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 12, 30, 53, 56, 60, 61, 64, 66, 74, 75, 76, 77, 323, 997, 1196, 1199, 1203, 1210, 1214, 1215, 1216, 1217, 1228, 1287, 1290, 1791, 1954, 2048, 2057, 2067, 2075, 2081, 2104, 2132, 2133, 2136, 2145, 2146], "bj": 11, "j": [11, 28, 35, 317, 319, 325, 517, 519, 521, 697, 909, 919, 921, 994, 1119, 1135, 1136, 1143, 1149, 1153, 1154, 1230, 1286, 1289, 1325, 1326, 1337, 1353, 1362, 1369, 1377, 1379, 1384, 1486, 1487, 1488, 1492, 1548, 1551, 1640, 1641, 1642, 1647, 1851, 1858, 1937, 1954, 1958, 2004, 2046, 2073, 2075, 2081, 2086, 2094, 2119], "imaginari": [11, 315, 930, 994, 1001, 1140, 1142, 1150, 1151, 1152, 1260, 1279, 1281, 1282, 1285, 1870, 1954, 2005, 2006, 2048, 2075, 2086, 2121], "satisfi": [11, 21, 24, 35, 53, 64, 621, 699, 765, 800, 920, 930, 931, 967, 1135, 1136, 1138, 1140, 1142, 1150, 1151, 1152, 1167, 1202, 1303, 1329, 1355, 1356, 1452, 1467, 1494, 1499, 1518, 1564, 1770, 1787, 1877, 1893, 1933, 1954, 2047, 2051, 2075, 2078, 2084, 2086, 2101, 2103, 2114, 2117, 2130, 2134], "equat": [11, 976, 1119, 1196, 1207, 1233, 1247, 1333, 1334, 1335, 1336, 1337, 1339, 1350, 1352, 1460, 1918, 1982, 2045, 2075, 2086, 2101, 2115], "frequent": [11, 30, 1452, 2043, 2062, 2078, 2091, 2092, 2094, 2114, 2126, 2127, 2130, 2138], "occur": [11, 23, 28, 40, 41, 47, 55, 60, 84, 86, 200, 319, 906, 939, 983, 1078, 1119, 1203, 1286, 1292, 1303, 1333, 1467, 1588, 1607, 1638, 1794, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1827, 2046, 2060, 2062, 2066, 2074, 2075, 2078, 2083, 2092, 2097, 2099, 2103, 2109, 2111, 2118, 2121, 2132, 2133, 2136, 2138, 2141, 2143, 2145, 2146, 2147], "mathemat": [11, 64, 919, 920, 921, 922, 923, 924, 1167, 1243, 1460, 1462, 1463, 1464, 1510, 1511, 1512, 1513, 1588, 1673, 1713, 1738, 1794, 1877, 1935, 1936, 2047, 2051, 2075, 2092, 2115, 2123], "topic": [11, 52, 2088, 2089, 2134], "tradition": 11, "torchaudio": [11, 2043, 2085], "mimick": 11, "assembli": 11, "lapack": [11, 1233, 1320, 1331, 1332, 1333, 1335, 1338, 1351, 1857, 1958], "spectral": [11, 1309, 1325, 1353, 1754, 1778, 1788, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2092], "fft": [11, 2043, 2078], "4621": 11, "0303j": 11, "2438": [11, 1335, 1645], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 179, 994, 1162, 1172, 1268, 1289, 1319, 1320, 1325, 1326, 1327, 1328, 1329, 1330, 1475, 1476, 1477, 1548, 1629, 1630, 1631, 1800, 1851, 1898, 2116, 2117, 2120, 2121, 2136], "complex64": [11, 182, 975, 976, 994, 1136, 1138, 1139, 1144, 1145, 1172, 1268, 1321, 1344, 1347, 1475, 1476, 1477, 1629, 1630, 1631, 1800, 1851, 1898, 2116, 2117, 2120, 2121, 2136], "apart": [11, 2047, 2075], "linspac": [11, 954, 978, 1140, 1150, 1391, 2045, 2049, 2100], "logspac": [11, 2045, 2049, 2100], "arang": [11, 23, 28, 36, 517, 611, 696, 697, 698, 702, 704, 897, 898, 899, 965, 977, 981, 1102, 1117, 1135, 1139, 1147, 1153, 1155, 1159, 1160, 1161, 1162, 1169, 1170, 1253, 1310, 1311, 1315, 1318, 1342, 1345, 1346, 1359, 1444, 1468, 1469, 1470, 1570, 1571, 1572, 1573, 1574, 1601, 1602, 1603, 1692, 1794, 1795, 1846, 1854, 1858, 1873, 1880, 1885, 1905, 1938, 1946, 1957, 1974, 1975, 1977, 1978, 1980, 2008, 2045, 2054, 2067, 2094, 2100, 2115, 2119, 2120, 2130, 2133, 2138, 2140], "switch": [11, 19, 23, 30, 58, 63, 64, 81, 1332, 1333, 1334, 1487, 1654, 1693, 1744, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1889, 1995, 2064, 2075, 2078, 2089, 2091, 2101, 2137], "view_as_r": [11, 1954, 2045, 2100, 2118], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 66, 79, 2045, 2065, 2067, 2114], "2250": [11, 1346, 1794], "7546": 11, "1722": 11, "x1": [11, 52, 971, 1337, 1482, 1540, 1597, 1598, 1636, 1694, 2045, 2140], "3j": [11, 28, 703, 998, 999, 1881, 1882, 1898], "4j": [11, 28, 1908], "0000": [11, 35, 517, 876, 919, 921, 954, 974, 978, 1001, 1100, 1106, 1107, 1108, 1133, 1134, 1137, 1139, 1140, 1146, 1147, 1150, 1155, 1167, 1168, 1169, 1243, 1249, 1252, 1256, 1315, 1318, 1319, 1320, 1332, 1333, 1336, 1341, 1342, 1346, 1348, 1360, 1376, 1439, 1490, 1491, 1601, 1602, 1604, 1605, 1645, 1646, 1794, 1851, 1857, 1862, 1863, 1864, 1873, 1877, 1878, 1902, 1908, 1910, 1911, 1913, 1916, 1917, 1918, 1919, 1936, 1982, 1983, 1985, 2010, 2054, 2067, 2078, 2114, 2115, 2120], "6569": [11, 1256], "5708": [11, 1103], "7854": 11, "complex_tensor": 11, "pt": [11, 24, 30, 55, 1171, 1294, 1297, 1300, 1307, 1361, 1889, 2044, 2055, 2089, 2094, 2102, 2138], "conjug": [11, 334, 462, 697, 930, 975, 976, 998, 999, 1269, 1319, 1320, 1326, 1329, 1332, 1339, 1353, 1358, 1362, 1753, 1845, 1881, 1954, 1958, 2004, 2086, 2101, 2120], "wirting": [11, 930, 2086], "deriv": [11, 28, 33, 52, 55, 154, 743, 744, 745, 746, 747, 748, 786, 808, 833, 904, 925, 930, 931, 1183, 1187, 1199, 1243, 1286, 1347, 1379, 1596, 1728, 2043, 2046, 2081, 2082, 2086, 2109, 2114, 2115], "steepest": [11, 2075], "descent": [11, 35, 1803, 1826, 1830, 1831, 2075, 2089], "box": [11, 28, 48, 64, 985, 1188, 1201, 2007, 2066, 2075, 2080, 2097, 2131, 2132, 2137, 2138], "real_param": 11, "p": [11, 24, 30, 35, 55, 64, 158, 238, 290, 429, 430, 457, 492, 495, 496, 691, 694, 951, 953, 963, 971, 1113, 1310, 1321, 1327, 1328, 1336, 1337, 1379, 1381, 1384, 1394, 1437, 1456, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1513, 1515, 1516, 1517, 1553, 1557, 1559, 1597, 1598, 1620, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1675, 1676, 1677, 1687, 1691, 1694, 1695, 1706, 1722, 1744, 1757, 1759, 1765, 1774, 1794, 1826, 1878, 1935, 2045, 2046, 2074, 2075, 2078, 2083, 2086, 2091, 2101, 2103, 2114, 2115, 2139, 2140], "complex_optim": 11, "adamw": [11, 1807, 1811, 1823, 2101], "real_optim": 11, "slight": [11, 1897, 2114, 2117], "discrep": [11, 1738, 1864, 2086], "foreach": [11, 1743, 1744, 1745, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 2101], "v": [11, 30, 44, 52, 59, 64, 491, 492, 548, 909, 920, 922, 923, 924, 950, 967, 1176, 1186, 1188, 1203, 1286, 1303, 1325, 1329, 1353, 1357, 1362, 1554, 1597, 1598, 1608, 1645, 1691, 1755, 1786, 1791, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1847, 1880, 1939, 1943, 1958, 1959, 2007, 2044, 2045, 2046, 2047, 2060, 2075, 2081, 2086, 2095, 2102, 2114, 2119, 2129], "forloop": 11, "numerical_accuraci": 11, "impact": [11, 24, 28, 83, 1075, 1901, 2057, 2060, 2075, 2104, 2118, 2136, 2141, 2145], "pointwis": [11, 35, 983, 1181, 1182, 1367, 1368, 1513, 2065, 2076, 2135, 2138, 2139], "lbfg": [11, 2101], "yet": [11, 29, 33, 37, 52, 53, 55, 60, 63, 64, 73, 82, 84, 85, 490, 1018, 1093, 1214, 1292, 1294, 1307, 1395, 1738, 1761, 1765, 1767, 1807, 1808, 2043, 2046, 2047, 2053, 2059, 2066, 2067, 2078, 2099, 2100, 2104, 2109, 2111, 2114, 2115, 2117, 2130, 2133, 2135, 2136, 2141, 2143, 2145], "fulli": [11, 14, 23, 28, 30, 32, 33, 34, 52, 59, 64, 685, 1082, 1201, 1289, 1544, 1545, 1546, 1548, 2047, 2053, 2059, 2081, 2102, 2104, 2132, 2133, 2140], "quantiz": [11, 27, 64, 223, 330, 342, 476, 477, 478, 479, 480, 482, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 943, 1104, 1133, 1134, 1859, 1860, 1861, 1862, 1863, 1995, 2043, 2100, 2117, 2120, 2121, 2124, 2125], "pred": [12, 66, 69, 74, 75, 997, 1513, 1738, 2090, 2101, 2109, 2140], "union": [12, 14, 23, 30, 33, 34, 37, 41, 45, 48, 52, 53, 55, 64, 983, 997, 1199, 1201, 1275, 1301, 1361, 1449, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1495, 1496, 1515, 1516, 1517, 1541, 1542, 1543, 1548, 1592, 1594, 1596, 1599, 1612, 1759, 1780, 1889, 1998, 2045, 2046, 2047, 2051, 2071, 2094, 2099, 2102, 2116, 2119, 2121, 2125], "true_fn": [12, 53, 66, 69, 74, 75, 997], "false_fn": [12, 53, 66, 69, 74, 75, 997], "operand": [12, 66, 74, 75, 959, 997, 1119, 2047, 2048, 2081, 2114, 2117], "Its": [12, 28, 53, 64, 1005, 1032, 1289, 1337, 1355, 1356, 1381, 1548, 1794, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 2004, 2047, 2080], "uniqu": [12, 28, 37, 44, 47, 48, 50, 517, 521, 1280, 1325, 1326, 1330, 1336, 1337, 1339, 1348, 1350, 1352, 1353, 1390, 1397, 1935, 1958, 1992, 2042, 2044, 2053, 2058, 2081, 2102, 2103, 2109, 2110, 2111, 2114, 2119, 2130, 2147], "predic": [12, 66, 71, 74, 75, 1203], "unlock": [12, 2054], "architectur": [12, 34, 64, 1045, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1483, 1592, 1637, 1902, 2078, 2092, 2104, 2114, 2129], "prototyp": [12, 18, 19, 28, 52, 685, 919, 921, 925, 930, 931, 997, 1299, 1596, 1608, 1609, 1807, 1808, 2043, 2054, 2060, 2066, 2067, 2071, 2089, 2094, 2107, 2109, 2114, 2117, 2123, 2124, 2125, 2127], "classif": [12, 997, 1461, 1467, 1483, 1551, 1553, 1555, 1581, 1638, 2043, 2071, 2073, 2105], "co": [12, 52, 53, 61, 66, 70, 71, 74, 75, 76, 77, 79, 205, 640, 641, 688, 961, 983, 997, 1061, 1178, 1181, 1182, 1187, 1247, 1248, 1341, 1481, 1482, 1485, 1830, 1831, 1839, 1851, 1912, 1916, 1917, 1918, 1919, 1921, 1940, 1941, 1942, 1944, 1945, 2045, 2051, 2065, 2100, 2101, 2114, 2119, 2121, 2131, 2138, 2140], "sin": [12, 14, 52, 53, 60, 61, 66, 70, 71, 74, 75, 76, 77, 536, 674, 675, 892, 983, 997, 1061, 1178, 1180, 1181, 1182, 1184, 1187, 1248, 1341, 1391, 1851, 1913, 1919, 2045, 2051, 2065, 2075, 2100, 2114, 2115, 2119, 2131, 2136, 2138, 2140, 2143], "dynamicshapecondpred": 12, "dyn_shape_mod": 12, "eagerli": [12, 33, 1050, 1056, 2024, 2027, 2078, 2132, 2136], "vari": [12, 52, 1295, 1461, 1580, 1780, 1914, 2060, 2078, 2091, 2092, 2101, 2104, 2105, 2114, 2127, 2130, 2132, 2133, 2135, 2136, 2145, 2147], "inp2": 12, "assert": [12, 23, 24, 30, 33, 35, 57, 59, 60, 61, 64, 66, 72, 75, 76, 77, 629, 933, 935, 936, 1178, 1180, 1181, 1182, 1183, 1186, 1187, 1188, 1202, 1203, 1287, 1292, 1293, 1299, 1706, 1800, 2007, 2046, 2048, 2051, 2081, 2082, 2089, 2094, 2102, 2104, 2121, 2132, 2136, 2144, 2145], "export": [12, 15, 18, 28, 33, 36, 51, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 685, 851, 942, 985, 990, 997, 1018, 1197, 1207, 1292, 1294, 1295, 1301, 1307, 1781, 1782, 1801, 1802, 2043, 2044, 2046, 2047, 2051, 2081, 2085, 2100, 2103, 2109, 2126, 2132, 2137, 2143, 2144], "deploy": [12, 37, 47, 52, 2043, 2057, 2127, 2137], "dim_batch": 12, "dim": [12, 28, 34, 35, 52, 60, 61, 64, 66, 68, 74, 75, 116, 118, 119, 120, 122, 138, 139, 140, 188, 208, 211, 214, 215, 216, 217, 218, 219, 233, 237, 264, 268, 285, 316, 317, 318, 319, 320, 321, 325, 326, 358, 384, 396, 411, 413, 414, 415, 418, 433, 434, 435, 436, 440, 441, 457, 466, 474, 483, 495, 496, 498, 509, 510, 516, 517, 518, 519, 520, 521, 522, 523, 541, 542, 545, 546, 548, 551, 556, 557, 559, 564, 569, 577, 582, 583, 587, 588, 589, 591, 592, 594, 609, 610, 613, 614, 615, 616, 619, 621, 698, 700, 701, 702, 704, 885, 886, 887, 921, 922, 924, 970, 977, 995, 997, 1004, 1015, 1032, 1034, 1098, 1099, 1100, 1101, 1102, 1111, 1117, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1159, 1178, 1188, 1197, 1230, 1243, 1253, 1261, 1262, 1263, 1264, 1266, 1311, 1321, 1322, 1342, 1346, 1356, 1358, 1359, 1369, 1377, 1387, 1389, 1390, 1392, 1395, 1397, 1413, 1439, 1440, 1441, 1442, 1443, 1444, 1452, 1482, 1483, 1484, 1487, 1491, 1493, 1498, 1513, 1519, 1538, 1554, 1555, 1556, 1582, 1584, 1596, 1598, 1599, 1636, 1637, 1653, 1656, 1665, 1673, 1679, 1680, 1681, 1690, 1691, 1693, 1695, 1699, 1706, 1712, 1713, 1721, 1738, 1754, 1755, 1761, 1765, 1767, 1774, 1775, 1788, 1791, 1794, 1805, 1848, 1855, 1858, 1878, 1879, 1884, 1885, 1890, 1891, 1892, 1895, 1896, 1926, 1929, 1930, 1934, 1937, 1939, 1946, 1949, 1951, 1952, 1953, 1954, 1957, 1970, 1974, 1975, 1976, 1977, 1980, 1981, 1989, 1990, 1991, 1992, 1994, 2002, 2003, 2007, 2008, 2043, 2044, 2045, 2051, 2066, 2067, 2082, 2083, 2094, 2097, 2099, 2100, 2114, 2115, 2117, 2124, 2127, 2132, 2140], "batch": [12, 24, 28, 33, 35, 48, 51, 52, 55, 56, 57, 60, 61, 64, 66, 74, 75, 587, 588, 589, 591, 592, 691, 707, 708, 709, 710, 711, 712, 740, 765, 784, 790, 925, 930, 931, 951, 963, 964, 971, 974, 975, 976, 983, 1015, 1107, 1109, 1119, 1181, 1182, 1188, 1286, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1358, 1359, 1362, 1370, 1379, 1380, 1384, 1460, 1461, 1462, 1463, 1464, 1467, 1475, 1476, 1481, 1483, 1484, 1486, 1487, 1488, 1490, 1491, 1492, 1494, 1499, 1500, 1501, 1502, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1518, 1519, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1539, 1540, 1551, 1552, 1553, 1554, 1555, 1557, 1560, 1561, 1562, 1563, 1564, 1566, 1580, 1581, 1588, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1619, 1624, 1626, 1627, 1637, 1638, 1640, 1641, 1642, 1645, 1646, 1647, 1648, 1651, 1664, 1665, 1666, 1690, 1698, 1706, 1724, 1725, 1728, 1737, 1738, 1753, 1780, 1781, 1783, 1784, 1786, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1831, 1832, 1839, 1845, 1847, 1857, 1861, 1940, 1941, 1942, 1944, 1945, 1949, 1954, 1958, 1959, 1979, 1982, 1983, 1985, 2004, 2007, 2043, 2051, 2065, 2066, 2067, 2071, 2074, 2078, 2082, 2083, 2089, 2091, 2104, 2109, 2114, 2119, 2120, 2127, 2130, 2132, 2133, 2135, 2136, 2139, 2143, 2145], "min": [12, 23, 28, 40, 47, 52, 64, 120, 189, 190, 191, 192, 304, 700, 701, 702, 761, 763, 775, 776, 785, 810, 828, 829, 830, 831, 834, 886, 978, 979, 1061, 1099, 1133, 1134, 1213, 1250, 1321, 1335, 1336, 1342, 1346, 1348, 1353, 1359, 1379, 1434, 1466, 1506, 1534, 1536, 1556, 1569, 1576, 1628, 1665, 1669, 1699, 1701, 1707, 1725, 1805, 1825, 1830, 1831, 1841, 1845, 1847, 1857, 1958, 1959, 1966, 1983, 1984, 1985, 1986, 2045, 2060, 2065, 2099, 2100, 2104, 2107, 2109, 2127, 2132, 2136, 2140, 2150], "ep": [12, 52, 717, 718, 719, 720, 721, 722, 728, 729, 741, 742, 754, 756, 757, 758, 759, 801, 828, 829, 830, 831, 834, 835, 930, 931, 1299, 1375, 1448, 1462, 1463, 1464, 1482, 1501, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1557, 1562, 1563, 1588, 1592, 1594, 1596, 1597, 1624, 1636, 1651, 1655, 1656, 1664, 1668, 1691, 1694, 1698, 1703, 1722, 1737, 1754, 1788, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1841, 1861, 2045, 2081, 2086, 2115, 2140, 2150], "dynamic_shap": [12, 52, 66, 68, 74, 75, 1196, 2097, 2099, 2127, 2142], "graphmodul": [12, 33, 52, 53, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 83, 848, 870, 871, 872, 873, 1191, 2104, 2125, 2131, 2134, 2135, 2144, 2145], "arg0_1": [12, 52], "f32": [12, 52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79], "s0": [12, 52, 53, 66, 74, 75, 490, 1193, 1203, 2132, 2133, 2145], "sym_siz": [12, 53, 66, 74, 75, 2100, 2140], "sym": [12, 66, 74, 75, 76, 77, 1203, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "gt": [12, 66, 74, 75, 300, 1244, 2045, 2065, 2086, 2100, 2140], "true_graph_0": [12, 53, 66, 69, 74, 75], "false_graph_0": [12, 53, 66, 69, 74, 75], "symbol": [12, 14, 22, 52, 53, 65, 66, 75, 81, 82, 85, 86, 89, 629, 825, 851, 985, 1196, 1197, 1199, 1201, 1203, 1205, 1206, 1208, 1209, 1212, 1213, 1217, 1304, 1358, 1518, 1564, 1982, 2004, 2043, 2047, 2051, 2097, 2130, 2132, 2135, 2136, 2145], "sub": [12, 28, 34, 40, 55, 63, 66, 69, 74, 75, 566, 822, 872, 873, 1301, 1305, 1306, 1387, 1390, 1392, 1560, 1561, 1592, 1593, 1595, 1878, 1956, 1974, 1991, 2042, 2044, 2045, 2065, 2067, 2075, 2091, 2099, 2100, 2114, 2117, 2133, 2140, 2144], "datadependentcondpred": 12, "sum_1": [12, 64, 2131, 2133, 2134], "b8": [12, 66, 69, 74], "flatten": [12, 24, 52, 53, 55, 64, 66, 72, 885, 886, 1108, 1252, 1346, 1359, 1600, 1752, 1794, 1802, 1858, 1874, 1879, 1884, 1970, 1990, 1991, 1992, 1993, 2045, 2065, 2066, 2068, 2071, 2073, 2097, 2099, 2100, 2106, 2118, 2132], "closur": [12, 32, 66, 74, 75, 985, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1821, 1823, 1824, 1825, 1826, 1827, 2134, 2137], "flat": [12, 52, 1879, 1921, 1993, 2045, 2067, 2084, 2099, 2114], "_higher_order_op": 12, "condition": [12, 47, 927, 997], "constraint": [12, 28, 52, 55, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 800, 801, 920, 997, 1053, 1064, 1182, 1196, 1197, 1199, 1202, 1203, 1213, 1706, 1738, 1754, 1780, 1827, 2043, 2047, 2067, 2082, 2084, 2086, 2089, 2114, 2130, 2132, 2133], "true_branch": [12, 997], "false_branch": [12, 997], "consist": [12, 19, 23, 28, 30, 33, 35, 47, 48, 53, 64, 930, 974, 975, 976, 997, 1211, 1289, 1319, 1325, 1326, 1328, 1330, 1331, 1332, 1333, 1357, 1359, 1548, 1596, 1756, 1759, 1802, 1857, 1958, 2044, 2047, 2051, 2054, 2066, 2067, 2081, 2082, 2084, 2089, 2091, 2093, 2099, 2101, 2103, 2114, 2131, 2134, 2139, 2145], "possibli": [12, 23, 47, 52, 55, 997, 1215, 1216, 1289, 1305, 1332, 1337, 1548, 1738, 2044, 2051, 2093, 2102, 2135, 2147], "aka": [12, 28, 52, 53, 66, 74, 75, 943, 997, 1508, 1663, 2075, 2097, 2117, 2132], "add_": [12, 28, 52, 58, 60, 492, 997, 1177, 2045, 2065, 2076, 2097, 2114, 2130], "tempor": [12, 997, 1462, 1464, 1467, 1588, 1601, 1638, 1665, 1725], "pytre": [12, 52, 64, 66, 997, 2082], "parallel_info": [13, 2043, 2077], "cppextens": [14, 2043], "setuptool": 14, "bare": 14, "pypa": 14, "userguid": 14, "ext_modul": 14, "buildextens": [14, 2043], "extra_compile_arg": [14, 2095], "extra_link_flag": 14, "wl": 14, "lm": [14, 33], "cmdclass": 14, "build_ext": 14, "cudaextens": [14, 2043], "cuda_extens": 14, "extension_kernel": 14, "cu": 14, "cxx": 14, "nvcc": [14, 1049, 2145], "o2": 14, "lcuda": 14, "arch": 14, "card": [14, 2095], "visibl": [14, 28, 30, 44, 53, 1043, 1089, 1549, 1550, 1558, 1559, 2132, 2133, 2137], "ptx": 14, "road": 14, "recompil": [14, 64, 685, 983, 1303, 2053, 2087, 2132, 2133, 2134, 2141], "cc": [14, 28, 2078], "newest": [14, 59, 2096], "torch_cuda_arch_list": 14, "6": [14, 18, 19, 23, 24, 28, 35, 45, 52, 64, 66, 67, 71, 72, 74, 75, 76, 77, 79, 317, 319, 321, 325, 405, 406, 475, 491, 503, 517, 521, 564, 611, 690, 691, 696, 702, 746, 747, 748, 750, 751, 763, 766, 768, 770, 919, 920, 922, 923, 924, 946, 954, 962, 967, 973, 977, 981, 1005, 1029, 1077, 1082, 1096, 1097, 1098, 1102, 1103, 1114, 1117, 1118, 1135, 1143, 1148, 1149, 1153, 1154, 1156, 1158, 1159, 1162, 1169, 1243, 1253, 1255, 1256, 1278, 1300, 1311, 1315, 1326, 1342, 1346, 1347, 1348, 1355, 1356, 1360, 1362, 1391, 1442, 1443, 1444, 1457, 1468, 1469, 1470, 1471, 1474, 1479, 1482, 1490, 1491, 1500, 1501, 1502, 1504, 1505, 1544, 1545, 1549, 1557, 1566, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1592, 1593, 1595, 1597, 1600, 1606, 1621, 1651, 1658, 1659, 1692, 1694, 1701, 1728, 1782, 1783, 1785, 1787, 1793, 1794, 1795, 1804, 1825, 1846, 1847, 1850, 1857, 1858, 1864, 1865, 1868, 1874, 1884, 1885, 1889, 1893, 1905, 1926, 1930, 1935, 1938, 1940, 1941, 1946, 1957, 1959, 1960, 1961, 1969, 1974, 1975, 1976, 1977, 1978, 1980, 1983, 1985, 1989, 1993, 1995, 2008, 2009, 2044, 2047, 2048, 2054, 2062, 2067, 2073, 2075, 2081, 2082, 2084, 2089, 2094, 2099, 2109, 2110, 2114, 2115, 2117, 2120, 2121, 2133, 2134, 2136, 2140, 2142, 2145, 2146], "build_my_extens": 14, "7": [14, 23, 24, 28, 35, 52, 64, 66, 71, 237, 264, 317, 319, 321, 325, 405, 406, 475, 517, 564, 611, 621, 690, 702, 750, 751, 922, 924, 959, 962, 967, 973, 975, 977, 981, 1101, 1102, 1114, 1116, 1117, 1120, 1135, 1158, 1159, 1162, 1165, 1169, 1243, 1253, 1266, 1311, 1315, 1325, 1330, 1332, 1333, 1336, 1337, 1341, 1342, 1346, 1353, 1442, 1443, 1444, 1450, 1451, 1454, 1455, 1457, 1468, 1469, 1470, 1490, 1536, 1544, 1545, 1570, 1571, 1572, 1573, 1574, 1597, 1600, 1621, 1693, 1746, 1747, 1772, 1777, 1787, 1794, 1810, 1864, 1868, 1874, 1884, 1885, 1886, 1893, 1901, 1905, 1908, 1910, 1921, 1922, 1930, 1938, 1940, 1941, 1946, 1958, 1960, 1961, 1969, 1974, 1975, 1978, 1980, 1989, 1993, 2004, 2008, 2044, 2048, 2054, 2062, 2066, 2067, 2076, 2078, 2081, 2092, 2094, 2099, 2100, 2104, 2114, 2117, 2118, 2119, 2120, 2121, 2133, 2138, 2142], "older": [14, 2078, 2094, 2102], "modestli": [14, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827], "imag": [14, 23, 746, 747, 748, 872, 873, 994, 1450, 1454, 1455, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1494, 1495, 1496, 1511, 1520, 1555, 1560, 1561, 1583, 1600, 1602, 1603, 1619, 1630, 1631, 1633, 1634, 1648, 1649, 1654, 1665, 1724, 1725, 1882, 2043, 2045, 2067, 2086, 2100, 2104, 2118, 2119, 2132, 2136, 2137, 2140], "11": [14, 28, 325, 517, 685, 973, 977, 1064, 1117, 1253, 1310, 1346, 1360, 1376, 1452, 1468, 1496, 1545, 1650, 1794, 1795, 1801, 1930, 1974, 2008, 2044, 2048, 2054, 2066, 2078, 2081, 2094, 2095, 2099, 2100, 2114, 2115, 2145], "pars": [14, 28, 48, 51, 940, 2047, 2051, 2102, 2109, 2133], "window": [14, 23, 28, 64, 355, 560, 952, 961, 1247, 1248, 1286, 1309, 1457, 1458, 1459, 1495, 1496, 1515, 1516, 1517, 1541, 1542, 1543, 1544, 1545, 1546, 1621, 1649, 1650, 1679, 1680, 1681, 1862, 1863, 1954, 2043, 2045, 2060, 2078, 2094, 2103, 2132], "workaround": [14, 23, 33, 52, 64, 1293, 2042, 2093, 2099, 2104, 2136], "pure": [14, 15, 52, 60, 1292, 2044, 2071, 2081], "sigmoidalphablendforwardcuda": 14, "69460": 14, "facebookresearch": 14, "pytorch3d": 14, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 14, "relocat": 14, "link": [14, 15, 35, 64, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1541, 1542, 1543, 1600, 1656, 2066, 2088, 2089, 2114, 2133, 2143], "rdc": 14, "dc": 14, "anymor": [14, 28, 55], "dlto": 14, "dlink": 14, "protent": 14, "perf": [14, 685, 2104, 2139], "lib": [14, 2051, 2095], "nvshmem": 14, "ninja": [14, 2085, 2095], "dlink_librari": 14, "dlink_lib": 14, "std": [14, 37, 45, 91, 381, 458, 1133, 1134, 1165, 1166, 1167, 1795, 1851, 1877, 1915, 1920, 1953, 1992, 2045, 2065, 2073, 2078, 2088, 2095, 2100, 2127, 2140], "17": [14, 28, 690, 1286, 1342, 1468, 1545, 1930, 2044, 2099, 2100, 2114, 2127, 2134], "mix": [14, 24, 33, 35, 52, 55, 1064, 1738, 2043, 2075, 2077, 2085, 2104, 2114, 2132, 2134, 2136], "use_ninja": 14, "greatli": [14, 64, 2078, 2132], "fallback": [14, 20, 28, 47, 52, 58, 89, 1219, 1303, 1353, 2051, 2074, 2078, 2094, 2130, 2136, 2145], "distutil": 14, "max_job": 14, "extra_cflag": 14, "extra_cuda_cflag": 14, "extra_ldflag": 14, "extra_include_path": 14, "build_directori": 14, "with_cuda": [14, 2095], "is_python_modul": 14, "is_standalon": 14, "keep_intermedi": 14, "torch_extens": 14, "temporari": [14, 64, 832, 835, 1740, 2075, 2083, 2127, 2138], "torch_extensions_dir": 14, "subfold": [14, 2145], "o3": 14, "cuh": 14, "Such": [14, 23, 24, 33, 52, 63, 2001, 2114, 2133], "lib64": 14, "cudart": [14, 2043, 2095], "fine": [14, 28, 30, 32, 36, 52, 490, 869, 872, 1170, 1305, 1706, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 2042, 2064, 2075, 2078, 2081, 2099, 2102, 2104, 2114, 2126, 2133, 2138, 2145], "cuda_hom": 14, "safest": 14, "pybind11": [14, 15, 2046], "linker": 14, "workspac": [14, 20, 983], "header": [14, 45, 2094, 2095, 2119, 2121], "automat": [14, 19, 24, 28, 30, 47, 48, 52, 64, 88, 593, 900, 902, 916, 917, 937, 983, 1055, 1064, 1252, 1299, 1305, 1391, 1595, 1706, 1739, 1740, 1876, 1905, 1996, 2042, 2043, 2046, 2047, 2056, 2057, 2058, 2065, 2066, 2075, 2076, 2078, 2081, 2085, 2089, 2091, 2099, 2102, 2104, 2105, 2109, 2117, 2119, 2120, 2132, 2135, 2136, 2138, 2143, 2145], "construct": [14, 15, 23, 28, 30, 32, 33, 35, 47, 52, 53, 55, 57, 59, 60, 64, 66, 71, 72, 76, 77, 154, 452, 798, 799, 833, 889, 890, 904, 925, 937, 994, 1106, 1122, 1188, 1252, 1289, 1301, 1305, 1306, 1313, 1320, 1360, 1361, 1376, 1391, 1490, 1491, 1548, 1609, 1610, 1611, 1645, 1728, 1738, 1741, 1742, 1780, 1787, 1847, 1851, 1898, 1933, 1940, 1941, 1942, 1943, 1944, 1945, 1959, 1973, 1976, 2007, 2043, 2044, 2051, 2055, 2060, 2078, 2080, 2084, 2089, 2091, 2094, 2097, 2102, 2104, 2109, 2111, 2117, 2119, 2120, 2121, 2127, 2133, 2136], "plain": [14, 1461, 1549, 1558, 1753, 1942, 2081, 2114, 2133, 2135], "standalon": [14, 46, 47, 48, 825, 1301, 1305, 2044, 2139], "torch_lib_path": 14, "load_inlin": [14, 2043], "cpp_sourc": 14, "cuda_sourc": 14, "with_pytorch_error_handl": 14, "use_pch": 14, "behav": [14, 15, 28, 52, 63, 64, 317, 325, 497, 519, 521, 852, 1187, 1205, 1216, 1305, 1544, 1545, 1546, 1733, 1734, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2046, 2047, 2054, 2075, 2081, 2082, 2089, 2093, 2102, 2109, 2114], "exactli": [14, 24, 28, 35, 50, 52, 53, 930, 931, 977, 1030, 1034, 1119, 1165, 1166, 1209, 1286, 1289, 1331, 1491, 1494, 1495, 1496, 1548, 1577, 1580, 1646, 1656, 1738, 1794, 1802, 1901, 2054, 2055, 2065, 2075, 2078, 2080, 2081, 2084, 2086, 2087, 2099, 2102, 2130, 2133], "filenam": [14, 19, 23, 30, 52, 64, 1171, 1288, 1297, 1300, 2042, 2045, 2058, 2075, 2102, 2116, 2119, 2138, 2147], "typic": [14, 23, 24, 28, 33, 35, 36, 37, 40, 47, 48, 50, 53, 55, 64, 85, 91, 490, 985, 1005, 1016, 1162, 1170, 1211, 1217, 1289, 1310, 1313, 1361, 1481, 1507, 1548, 1728, 1738, 1807, 1808, 1826, 1901, 1913, 1940, 1941, 1942, 1944, 1945, 2042, 2043, 2044, 2047, 2053, 2055, 2075, 2077, 2078, 2085, 2092, 2093, 2094, 2099, 2101, 2104, 2109, 2118, 2120, 2129, 2131, 2132, 2135, 2143, 2145, 2147, 2150], "inlin": [14, 52, 63, 66, 72, 1061, 1289, 1293, 1305, 2077, 2136], "concaten": [14, 23, 28, 921, 970, 981, 1032, 1118, 1203, 1255, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1491, 1518, 1638, 1646, 1744, 1759, 1951, 2009, 2045, 2048, 2099, 2100, 2114], "furthermor": [14, 45, 59, 1325, 1326, 1353, 1379, 1485, 2065, 2066, 2075, 2093, 2107, 2109], "cuda_runtim": 14, "se": 14, "macro": [14, 37, 2087], "pybind": 14, "_safe_foo": 14, "redirect": [14, 37, 45, 49, 2123], "obscur": 14, "sin_add": 14, "inline_extens": 14, "include_path": [14, 2043], "get_compiler_abi_compatibility_and_vers": [14, 2043], "abi": [14, 15, 2085], "alongsid": [14, 1289, 1548, 2081, 2085, 2123], "shell": 14, "torchvers": 14, "verify_ninja_avail": [14, 2043], "is_ninja_avail": [14, 2043], "embed": [15, 33, 34, 53, 64, 740, 751, 909, 1110, 1452, 1481, 1491, 1507, 1520, 1554, 1598, 1646, 1706, 1827, 1896, 2045, 2071, 2077, 2084, 2100, 2103, 2104, 2106, 2109, 2114, 2119, 2140], "simpl": [15, 18, 24, 33, 40, 47, 52, 59, 61, 64, 492, 1005, 1075, 1178, 1186, 1187, 1188, 1289, 1293, 1301, 1462, 1463, 1464, 1490, 1521, 1522, 1523, 1548, 1588, 1645, 1913, 2007, 2042, 2044, 2048, 2067, 2077, 2078, 2080, 2081, 2083, 2086, 2088, 2099, 2102, 2109, 2114, 2133, 2134, 2135, 2138], "modif": [15, 33, 55, 64, 83, 225, 785, 911, 912, 916, 1172, 1173, 1289, 1548, 1738, 2071, 2075, 2081, 2089, 2102, 2104, 2133, 2136], "submodul": [15, 30, 33, 34, 52, 53, 55, 64, 82, 797, 804, 822, 847, 849, 850, 869, 872, 873, 1186, 1289, 1293, 1295, 1300, 1301, 1484, 1548, 1549, 1550, 1577, 1735, 2043, 2044, 2046, 2047, 2057, 2085, 2089, 2094, 2102, 2104, 2109, 2125, 2131, 2144], "preprocess": [15, 52, 81, 500, 1289], "augment": [15, 2048, 2121], "walk": [15, 64, 2051, 2081, 2102, 2110, 2111, 2118, 2145], "interfac": [15, 19, 24, 30, 36, 37, 39, 44, 47, 65, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 750, 751, 761, 766, 767, 768, 769, 770, 800, 1173, 1728, 1900, 1954, 1995, 2047, 2051, 2060, 2061, 2063, 2081, 2088, 2101, 2103, 2107, 2114, 2119, 2140], "opencv": [15, 1654, 1665], "struct": [15, 1187, 1188, 2007, 2057, 2088], "explain": [15, 28, 52, 1827, 1901, 2042, 2047, 2074, 2078, 2082, 2084, 2091, 2114, 2133, 2136, 2145], "reshap": [15, 28, 35, 502, 503, 517, 548, 621, 697, 981, 1102, 1117, 1118, 1158, 1253, 1310, 1342, 1346, 1355, 1356, 1359, 1444, 1469, 1470, 1494, 1570, 1571, 1572, 1573, 1574, 1600, 1754, 1788, 1794, 1938, 1939, 1946, 1974, 1975, 1980, 2008, 2009, 2045, 2054, 2066, 2067, 2099, 2100, 2106, 2118, 2119, 2140], "classat_1_1_tensor": 15, "tensor_index": 15, "crucial": [15, 91, 2127, 2138, 2139], "cpp_autograd": 15, "workflow": [15, 2042, 2081, 2085, 2104, 2105, 2123, 2126, 2132, 2135, 2139, 2141, 2142], "undesir": [15, 33, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1706, 1954, 2081], "overview": [15, 28, 44, 1608, 1738, 2043, 2054, 2064, 2075, 2086, 2089, 2098, 2104, 2109, 2126, 2128], "cpp_frontend": 15, "library_root": 15, "libtorch": [15, 2127], "linux": [15, 28, 2042, 2085], "gcc": 15, "pre": [15, 28, 32, 52, 55, 64, 925, 936, 1189, 1201, 1226, 1289, 1548, 1732, 1734, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1772, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1815, 1817, 1819, 1823, 1824, 1825, 1826, 1827, 1829, 1836, 2042, 2044, 2047, 2057, 2075, 2077, 2078, 2089, 2097, 2099, 2120, 2135, 2136, 2141, 2145], "cxx11": 15, "facilit": [16, 29, 35, 60, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1019, 1107, 1746, 1747, 1898, 2042, 2044, 2047, 2093], "tunabl": 17, "earli": [18, 19, 24, 28, 37, 63, 490, 1486, 1487, 1488, 1492, 2043, 2104, 2105, 2124, 2125, 2135], "introduc": [18, 35, 52, 60, 765, 1203, 1213, 1215, 1216, 1228, 1362, 1499, 1518, 1564, 1665, 1884, 2042, 2047, 2076, 2080, 2081, 2090, 2099, 2102, 2103, 2109, 2114, 2120, 2126, 2133, 2136, 2141, 2143, 2145, 2152], "race": [18, 28, 490, 2075], "enable_cuda_sanit": 18, "torch_cuda_sanit": 18, "concurr": [18, 28, 32, 33, 2077, 2078, 2084, 2091, 2109, 2110], "uniniti": [18, 27, 449, 503, 1120, 1121, 1728, 1741, 1742, 1787, 1995, 2055, 2067, 2100], "overwrit": [18, 19, 23, 28, 30, 64, 1035, 1549, 1558, 2047, 2075, 2130], "commandlin": 18, "example_error": 18, "csan": 18, "pointer": [18, 143, 937, 1036, 1565, 2051, 2078, 2080, 2088, 2109, 2111, 2135], "139719969079296": 18, "94646435460352": 18, "_sanit": 18, "364": 18, "_handle_kernel_launch": 18, "stack_trac": [18, 53, 64], "stacksummari": 18, "extract": [18, 64, 806, 845, 975, 976, 1226, 1490, 1494, 1600, 1645, 1724, 2097, 2109, 2125, 2129, 2131, 2133, 2134, 2136, 2137], "10000": [18, 20, 24, 699, 1839, 1886, 2083, 2089, 2114, 2119, 2138], "420": 18, "_handle_memory_alloc": 18, "incorrectli": [18, 55, 1019, 1164, 2137], "id": [18, 20, 23, 28, 30, 32, 33, 37, 41, 45, 46, 47, 48, 55, 64, 779, 806, 833, 946, 1016, 1020, 1054, 1588, 1681, 1721, 1738, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 2047, 2088, 2099, 2100, 2102, 2108, 2109, 2110, 2116, 2142, 2145], "faulti": [18, 28], "schema": [18, 28, 30, 53, 87, 2044, 2045, 2047, 2051, 2081, 2097, 2099, 2140, 2144], "current_stream": [18, 1018, 2012, 2043, 2078], "wait_stream": [18, 28, 92, 490, 1019, 1023, 1416, 2013, 2078], "default_stream": [18, 28, 2043, 2078], "begin": [18, 23, 24, 28, 29, 30, 33, 39, 47, 55, 64, 500, 685, 765, 789, 829, 830, 876, 952, 988, 1000, 1016, 1067, 1069, 1079, 1139, 1243, 1249, 1310, 1345, 1357, 1459, 1460, 1461, 1469, 1470, 1471, 1481, 1483, 1489, 1499, 1500, 1503, 1504, 1505, 1506, 1507, 1508, 1514, 1518, 1519, 1534, 1539, 1542, 1543, 1555, 1556, 1564, 1567, 1580, 1586, 1591, 1598, 1637, 1658, 1659, 1738, 1753, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1830, 1832, 1839, 1905, 1908, 1911, 1954, 1980, 1991, 2010, 2047, 2074, 2075, 2078, 2081, 2084, 2085, 2086, 2088, 2093, 2099, 2101, 2107, 2115, 2130, 2136, 2145], "suspect": [18, 1827, 2078, 2145], "blaslt": 19, "rocbla": [19, 2092], "databas": [19, 23], "prepar": [19, 30, 33, 34, 55, 64, 804, 849, 852, 868, 870, 872, 873, 874, 1186, 1299, 2048, 2099, 2124, 2125], "tunableop_result": 19, "csv": [19, 1035], "ordin": [19, 293, 1940, 1941, 1942, 1944, 1945, 2117], "insert": [19, 23, 28, 35, 55, 63, 64, 752, 798, 799, 872, 873, 950, 1549, 1550, 1558, 1738, 1893, 1896, 1905, 1926, 1951, 1994, 2044, 2057, 2078, 2097, 2100, 2104, 2143, 2144], "discov": [19, 28, 983, 2109], "termin": [19, 28, 37, 47, 50, 53, 64, 1810, 2064, 2109, 2138], "pt_version": 19, "rocm_vers": [19, 2087], "12969": 19, "1544e39": 19, "hipblaslt_vers": 19, "a9c5cc7": 19, "rocblas_vers": 19, "72e57364": 19, "dirti": [19, 2075, 2133], "gemmtunableop_float_nt": 19, "nt_25088_4096_64": 19, "1219": [19, 1349, 1876], "262": 19, "nt_4096_4096_64": 19, "1216": [19, 1433], "033": 19, "verison": 19, "reject": 19, "comma": [19, 20, 28, 1119, 2047, 2053], "averag": [19, 28, 32, 740, 771, 772, 773, 774, 830, 831, 943, 945, 1005, 1082, 1096, 1289, 1449, 1450, 1451, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1481, 1483, 1491, 1501, 1507, 1513, 1514, 1515, 1516, 1517, 1521, 1522, 1523, 1539, 1540, 1548, 1551, 1552, 1553, 1554, 1555, 1562, 1580, 1581, 1588, 1597, 1613, 1614, 1615, 1621, 1622, 1623, 1626, 1627, 1637, 1651, 1666, 1675, 1676, 1677, 1690, 1698, 1738, 1803, 1804, 1805, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1980, 2043, 2080, 2103], "edit": [19, 64, 2102, 2118], "caution": [19, 45, 2137], "untun": 19, "gemmtunableop": 19, "transpos": [19, 464, 597, 598, 621, 697, 746, 747, 748, 975, 976, 1119, 1187, 1319, 1320, 1326, 1329, 1332, 1339, 1350, 1353, 1478, 1479, 1480, 1564, 1600, 1632, 1633, 1634, 1706, 1748, 1749, 1751, 1753, 1845, 1958, 1960, 1961, 1968, 1982, 2045, 2065, 2067, 2073, 2075, 2092, 2099, 2100, 2106, 2114, 2118, 2120, 2140], "k": [19, 23, 28, 30, 35, 48, 64, 290, 358, 510, 517, 519, 521, 594, 621, 765, 950, 976, 1106, 1119, 1176, 1196, 1203, 1230, 1252, 1311, 1319, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1334, 1335, 1336, 1339, 1341, 1348, 1350, 1352, 1353, 1362, 1380, 1384, 1457, 1459, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1495, 1496, 1499, 1500, 1518, 1519, 1533, 1535, 1536, 1541, 1543, 1554, 1555, 1564, 1566, 1608, 1637, 1649, 1650, 1672, 1690, 1753, 1845, 1847, 1857, 1885, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1944, 1945, 1954, 1959, 1977, 1982, 2045, 2046, 2062, 2073, 2078, 2081, 2095, 2114, 2115, 2117, 2136, 2139, 2140, 2145], "diagnost": [19, 40, 81, 82, 83, 84, 85, 88, 685, 2044], "besid": [19, 24, 28, 939, 2078, 2080, 2097, 2119, 2131], "pytorch_tunableop_verobs": 19, "30m": 19, "whichev": [19, 1005, 1188, 1654, 1858, 2007, 2078], "successfulli": [19, 28, 37, 44, 52, 1296, 1902, 2064, 2089, 2094, 2109, 2145], "bgemm": 19, "rout": [19, 1020, 1021, 2133], "transa": 19, "transb": [19, 2099], "gettuningcontext": 19, "tuningcontext": 19, "preced": [19, 32, 37, 55, 62, 685, 1732, 1839, 1979, 2048, 2077, 2101, 2104, 2122], "val": [19, 53, 66, 69, 74, 1061, 1203, 1218, 1295, 1296, 2045, 2047, 2051, 2073, 2135], "is_en": [19, 1933, 1940, 1941, 1942, 1943, 1944, 1945], "tuning_en": 19, "tuning_is_en": 19, "set_max_tuning_dur": 19, "millisecond": [19, 41, 44, 90, 1018, 1402, 1415, 2012, 2060], "honor": [19, 2047], "get_max_tuning_dur": 19, "set_max_tuning_iter": 19, "get_max_tuning_iter": 19, "set_filenam": 19, "insert_device_ordin": 19, "cenario": 19, "get_filenam": 19, "get_result": 19, "get_valid": 19, "write_file_on_exit": 19, "destruct": [19, 28, 2060, 2109, 2111], "write_fil": 19, "read_fil": 19, "pytorch_no_cuda_memory_cach": [20, 2078, 2087], "pytorch_cuda_alloc_conf": [20, 1044], "pytorch_nvml_based_cuda_check": [20, 2078], "nvml": [20, 2078], "fork": [20, 23, 45, 1035, 1308, 1738, 2047, 2077, 2078, 2083, 2088, 2091, 2095, 2108, 2109, 2111], "torch_cudnn_v8_api_lru_cache_limit": 20, "cudnn": [20, 21, 22, 765, 1299, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1499, 1518, 1564, 1565, 1607, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1706, 1746, 1747, 1901, 2043, 2045, 2078, 2092, 2093, 2139, 2148], "roughli": [20, 23, 1513, 2080, 2143, 2144], "2gib": 20, "200kib": 20, "executionplan": 20, "torch_cudnn_v8_api_dis": 20, "And": [20, 52, 59, 804, 833, 1098, 1099, 1176, 1210, 1289, 1311, 1387, 1392, 1467, 1548, 1996, 1998, 2075, 2081, 2082, 2084, 2095, 2099, 2104, 2125, 2131, 2133, 2137, 2138], "v7": 20, "torch_allow_tf32_cublas_overrid": 20, "set_float32_matmul_precis": [20, 1239], "torch_nccl_use_comm_nonblock": 20, "nccl": [20, 24, 29, 30, 48, 55, 1738, 2084, 2087, 2149], "torch_nccl_avoid_record_stream": 20, "stream": [20, 23, 28, 37, 45, 55, 63, 90, 154, 490, 904, 925, 1007, 1009, 1014, 1016, 1018, 1019, 1024, 1025, 1026, 1034, 1035, 1038, 1039, 1053, 1059, 1092, 1095, 1402, 1405, 1406, 1412, 1415, 1417, 1419, 1420, 1430, 1432, 1879, 2012, 2014, 2016, 2037, 2039, 2043, 2045, 2047, 2084, 2097, 2109, 2123, 2136, 2147, 2149], "torch_cudnn_v8_api_debug": 20, "saniti": [20, 30, 2082], "cuda_visible_devic": [20, 28, 1088, 1738, 2078], "cuda_launch_block": [20, 22, 1518, 1564, 2078], "cublas_workspace_config": [20, 22, 1518, 1564, 1995, 2078, 2093], "4096": [20, 22, 52, 1518, 1564, 1995, 2078, 2099], "16": [20, 22, 28, 34, 52, 325, 621, 743, 744, 745, 746, 747, 748, 777, 1117, 1135, 1162, 1243, 1253, 1289, 1301, 1313, 1319, 1325, 1326, 1330, 1346, 1444, 1456, 1458, 1459, 1467, 1468, 1471, 1474, 1475, 1476, 1477, 1479, 1480, 1485, 1486, 1487, 1488, 1492, 1495, 1496, 1515, 1516, 1517, 1518, 1536, 1541, 1542, 1543, 1545, 1546, 1548, 1555, 1564, 1575, 1592, 1606, 1629, 1631, 1632, 1634, 1638, 1649, 1650, 1797, 1854, 1901, 1930, 1995, 2004, 2008, 2044, 2048, 2073, 2078, 2089, 2092, 2094, 2099, 2100, 2109, 2114, 2115, 2117, 2119, 2120, 2127, 2133, 2134], "kib": [20, 2078], "cudnn_conv_wscap_dbg": 20, "cublaslt_workspace_s": 20, "cudnn_errata_json_fil": 20, "errata": 20, "config": [20, 24, 28, 55, 64, 798, 799, 800, 801, 870, 872, 983, 2080, 2095, 2107, 2127, 2130, 2136, 2138, 2139, 2141, 2143, 2145], "primarili": [20, 35, 53, 63, 823, 824, 825, 832, 1203, 1212, 1444, 2060, 2071, 2104, 2120], "hardcod": [20, 2135], "autotun": [20, 983, 2139], "nvidia_tf32_overrid": 20, "float16": [21, 24, 30, 55, 301, 691, 694, 765, 832, 835, 843, 861, 862, 869, 951, 963, 1172, 1271, 1289, 1384, 1394, 1475, 1476, 1477, 1478, 1479, 1480, 1499, 1500, 1518, 1519, 1535, 1548, 1564, 1608, 1665, 1706, 1746, 1747, 1806, 1807, 1808, 1826, 1886, 1898, 2071, 2074, 2085, 2089, 2104, 2106, 2114, 2116, 2117, 2120, 2121, 2150], "v100": [21, 765, 1499, 1518, 1564, 2078], "packedsequ": [21, 765, 1499, 1518, 1564, 1781, 1782, 1783, 1785], "rnn": [22, 739, 765, 766, 767, 768, 770, 869, 1499, 1500, 1518, 1519, 1565, 1566, 1740, 1757, 1780, 2049, 2083, 2089, 2106, 2119], "enforc": [22, 24, 63, 801, 901, 916, 1289, 1518, 1548, 1564, 1805, 2047, 2089, 2118], "colon": [22, 1518, 1564, 2109], "heart": 23, "dataload": [23, 500, 1738, 1831, 1832, 1839, 2078, 2083, 2085, 2091, 2095, 2101, 2119], "batch_siz": [23, 33, 35, 59, 61, 903, 916, 917, 1178, 1186, 1188, 1554, 1564, 1780, 1782, 1783, 1785, 2007, 2045, 2051, 2082, 2083, 2085, 2093, 2099, 2119], "shuffl": [23, 1468, 2043, 2119], "batch_sampl": 23, "num_work": [23, 37, 2093, 2095], "drop_last": 23, "timeout": [23, 28, 37, 47, 2056, 2064, 2109, 2149], "worker_init_fn": [23, 2083, 2093], "prefetch_factor": 23, "persistent_work": 23, "__getitem__": [23, 1995], "__len__": [23, 64, 2045], "protocol": [23, 30, 36, 47, 50, 891, 1170, 1173, 1889, 2081, 2095, 2097, 2099, 2109, 2146], "sampl": [23, 30, 35, 52, 56, 61, 64, 91, 157, 158, 262, 290, 381, 458, 485, 612, 784, 953, 1005, 1029, 1064, 1077, 1082, 1096, 1097, 1137, 1155, 1178, 1188, 1243, 1286, 1306, 1379, 1434, 1456, 1460, 1461, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1501, 1507, 1510, 1511, 1512, 1513, 1514, 1533, 1535, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1567, 1580, 1581, 1588, 1597, 1619, 1626, 1627, 1637, 1639, 1640, 1641, 1642, 1645, 1646, 1647, 1651, 1654, 1656, 1664, 1665, 1666, 1690, 1698, 1706, 1738, 1754, 1795, 1831, 1847, 1850, 1864, 1866, 1868, 1870, 1871, 1872, 1913, 1936, 1952, 1953, 1954, 2002, 2003, 2007, 2043, 2051, 2060, 2073, 2074, 2078, 2088, 2089, 2102, 2103, 2104, 2105, 2119, 2145], "idx": [23, 64, 911, 913, 916, 1289, 1295, 1452, 1490, 1548, 1754, 1991, 2045, 2066], "th": [23, 35, 158, 290, 317, 319, 325, 765, 919, 921, 953, 973, 1106, 1111, 1264, 1286, 1311, 1329, 1337, 1343, 1379, 1486, 1487, 1488, 1492, 1499, 1507, 1518, 1564, 1640, 1641, 1642, 1647, 1858, 1954, 1993, 2081, 2095, 2115, 2117, 2147], "iterabledataset": [23, 2088], "__iter__": [23, 2048], "suitabl": [23, 35, 490, 967, 1309, 1827, 1893, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2092, 2105, 2119, 2137], "improb": 23, "fetch": [23, 63, 64, 1201, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1800, 2109], "remot": [23, 28, 32, 37, 1738, 2109, 2110], "real": [23, 35, 64, 86, 691, 692, 693, 694, 695, 697, 703, 930, 951, 975, 976, 994, 1001, 1064, 1135, 1136, 1138, 1140, 1141, 1142, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1191, 1203, 1219, 1279, 1281, 1282, 1285, 1286, 1310, 1319, 1320, 1321, 1325, 1326, 1327, 1328, 1329, 1332, 1333, 1334, 1339, 1342, 1344, 1346, 1347, 1348, 1349, 1353, 1354, 1358, 1359, 1360, 1370, 1376, 1514, 1557, 1560, 1561, 1598, 1753, 1810, 1870, 1954, 1958, 2004, 2005, 2006, 2042, 2043, 2045, 2047, 2055, 2075, 2078, 2097, 2100, 2102, 2104, 2109, 2111, 2118, 2120, 2121, 2131, 2132, 2133, 2135, 2138, 2140, 2146], "replica": [23, 24, 28, 32, 45, 1484, 1738, 2080], "duplic": [23, 45, 319, 323, 475, 548, 952, 961, 982, 1203, 1247, 1248, 1289, 1548, 1991, 1992, 2099, 2114], "yield": [23, 24, 52, 55, 64, 1107, 1109, 1289, 1336, 1337, 1548, 2010, 2047, 2048, 2054, 2104, 2115, 2136], "stochast": [23, 35, 1495, 1496, 1649, 1650, 1803, 1806, 1807, 1809, 1826, 1830, 1831, 2089, 2101], "decent": 23, "randomli": [23, 750, 751, 761, 769, 931, 1456, 1485, 1486, 1487, 1488, 1492, 1567, 1639, 1640, 1641, 1642, 1647, 1767, 2067, 2088, 2089], "permut": [23, 52, 66, 75, 1119, 1336, 1337, 1356, 1379, 1381, 1746, 1747, 1872, 2043, 2045, 2066, 2100, 2106, 2118, 2120, 2140], "mini": [23, 784, 790, 1462, 1463, 1464, 1490, 1491, 1502, 1507, 1510, 1511, 1512, 1520, 1540, 1551, 1553, 1563, 1588, 1597, 1645, 1646, 1665, 1725, 1737], "neither": [23, 28, 801, 910, 911, 914, 916, 1102, 1162, 1554, 1596, 1794, 1980, 2081, 2092, 2109], "nor": [23, 28, 37, 55, 801, 911, 914, 916, 1203, 1325, 1326, 1353, 1554, 1596, 1738, 1794, 1856, 1958, 2081, 2099, 2130, 2135], "notion": [23, 930, 1462, 1463, 1464, 1510, 1511, 1512, 1588, 2133, 2136], "collat": 23, "minibatch": [23, 773, 774, 777, 778, 779, 1379, 1452, 1460, 1461, 1481, 1483, 1507, 1513, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1601, 1621, 1622, 1623, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1666, 1679, 1680, 1681, 1690, 1698], "loader": [23, 2101], "essenti": [23, 28, 37, 64, 1379, 2066, 2071, 2078, 2095, 2114, 2127, 2130], "dummi": [23, 32, 2051, 2075, 2081, 2097, 2145, 2146], "infinit": [23, 1281, 1362, 1460, 1467, 1638, 1851, 2081, 2092, 2109, 2135], "drop": [23, 59, 61, 64, 1064, 1294, 1348, 1353, 1456, 1789, 1901, 1954, 2044, 2066, 2091, 2147], "dataset_it": 23, "pad": [23, 24, 52, 717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 735, 736, 740, 743, 744, 745, 746, 747, 748, 773, 774, 777, 778, 779, 784, 787, 788, 790, 983, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1286, 1457, 1458, 1459, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1490, 1491, 1494, 1524, 1525, 1526, 1527, 1528, 1529, 1541, 1542, 1543, 1544, 1545, 1546, 1551, 1554, 1570, 1571, 1572, 1573, 1574, 1575, 1595, 1596, 1600, 1604, 1605, 1606, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1645, 1646, 1648, 1654, 1665, 1679, 1680, 1681, 1682, 1683, 1684, 1724, 1725, 1781, 1783, 1784, 1786, 1862, 1863, 1954, 2043, 2045, 2067, 2083, 2094, 2099, 2100, 2104, 2119, 2130, 2132, 2140], "length": [23, 24, 28, 30, 34, 35, 264, 317, 319, 325, 355, 437, 438, 587, 588, 589, 740, 765, 822, 904, 925, 947, 982, 1034, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1173, 1188, 1264, 1286, 1305, 1309, 1443, 1444, 1462, 1467, 1475, 1484, 1491, 1494, 1499, 1515, 1518, 1554, 1564, 1592, 1600, 1609, 1629, 1630, 1631, 1638, 1646, 1665, 1706, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1864, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1938, 1940, 1941, 1942, 1944, 1945, 1954, 1980, 2007, 2045, 2047, 2054, 2066, 2067, 2071, 2076, 2083, 2113, 2114, 2121, 2132, 2133, 2136, 2140, 2145], "cheaper": [23, 63], "bulk": [23, 2135], "arrai": [23, 28, 452, 765, 829, 830, 890, 891, 954, 972, 1001, 1005, 1119, 1163, 1172, 1173, 1181, 1182, 1361, 1391, 1494, 1499, 1500, 1518, 1519, 1648, 1879, 1886, 1905, 1940, 1941, 1942, 1944, 1945, 1970, 1973, 1980, 1988, 2001, 2044, 2048, 2078, 2089, 2094, 2114, 2116, 2120, 2121, 2136], "untouch": 23, "slightli": [23, 28, 35, 52, 55, 1794, 1847, 1959, 2042, 2078, 2081, 2084, 2086, 2092, 2102, 2136], "default_col": 23, "channel": [23, 58, 476, 477, 478, 784, 790, 816, 831, 834, 842, 856, 864, 1133, 1462, 1463, 1464, 1468, 1475, 1476, 1477, 1478, 1479, 1480, 1485, 1486, 1487, 1488, 1492, 1494, 1502, 1510, 1511, 1512, 1520, 1524, 1525, 1526, 1527, 1528, 1529, 1536, 1556, 1583, 1588, 1600, 1601, 1602, 1603, 1624, 1640, 1641, 1642, 1647, 1664, 1665, 1672, 1699, 1725, 1746, 1747, 1755, 1765, 1766, 1767, 1774, 1775, 1791, 1859, 2066, 2068, 2073, 2075, 2104, 2105, 2107, 2119], "class_index": 23, "namedtupl": [23, 30, 52, 53, 64, 905, 910, 1098, 1099, 1233, 1289, 1301, 1311, 1331, 1381, 1387, 1390, 1392, 1395, 1440, 1452, 1548, 1847, 1857, 1930, 1958, 1977, 1982, 2044, 2046, 2047, 2104], "situat": [23, 35, 50, 64, 87, 89, 490, 983, 1001, 1759, 2055, 2064, 2081, 2082, 2091, 2092, 2102, 2104, 2111, 2132, 2135, 2136, 2146], "gil": [23, 28, 32, 2075, 2078, 2109], "integ": [23, 27, 28, 35, 47, 52, 53, 91, 293, 449, 451, 453, 503, 549, 564, 570, 690, 691, 692, 693, 694, 695, 771, 772, 790, 792, 876, 903, 916, 917, 951, 952, 961, 972, 1000, 1019, 1023, 1040, 1046, 1047, 1075, 1114, 1117, 1119, 1120, 1121, 1122, 1162, 1163, 1164, 1165, 1166, 1167, 1173, 1174, 1178, 1179, 1180, 1181, 1182, 1203, 1213, 1221, 1222, 1231, 1247, 1248, 1251, 1252, 1253, 1300, 1303, 1312, 1313, 1320, 1331, 1333, 1343, 1362, 1421, 1433, 1452, 1467, 1475, 1476, 1477, 1520, 1563, 1613, 1614, 1615, 1616, 1617, 1618, 1727, 1737, 1780, 1795, 1798, 1835, 1838, 1842, 1847, 1859, 1860, 1866, 1868, 1869, 1870, 1872, 1877, 1886, 1898, 1946, 1955, 1959, 1974, 1975, 1988, 1993, 2008, 2013, 2017, 2021, 2022, 2040, 2046, 2047, 2048, 2051, 2065, 2082, 2086, 2104, 2105, 2107, 2114, 2115, 2117, 2120, 2121, 2123, 2132, 2133, 2150], "descriptor": [23, 28, 1597, 1598, 2048], "parent": [23, 40, 45, 50, 55, 685, 793, 795, 825, 1548, 2059, 2064, 2095, 2102, 2111, 2119, 2133], "simplest": [23, 28, 30, 37, 64, 869, 1457, 1458, 1459, 1475, 1476, 1477, 1541, 1542, 1543, 1757, 2080, 2081, 2089, 2097, 2104, 2111, 2114, 2136], "refcount": [23, 2064, 2091], "panda": 23, "pyarrow": 23, "13246": 23, "enumer": [23, 33, 35, 52, 64, 1289, 1548, 1550, 1559, 1831, 2045, 2046, 2074, 2078, 2085, 2095, 2119, 2144], "get_worker_info": [23, 2109], "seed": [23, 91, 1056, 1065, 1066, 1087, 1265, 1382, 1404, 1847, 1864, 1959, 1998, 2027, 2030, 2031, 2033, 2043, 2045, 2083, 2091, 2093, 2100, 2108], "naiv": [23, 2132, 2136], "shut": [23, 2109], "garbag": [23, 2062, 2111], "subtleti": [23, 66, 1484, 2081, 2083], "multiprocess": [23, 24, 28, 29, 31, 37, 40, 48, 49, 50, 1484, 1738, 2043, 2066, 2080, 2110, 2116], "unix": [23, 38, 45, 2064], "child": [23, 28, 33, 37, 40, 55, 797, 1289, 1548, 1766, 2064, 2089, 2095, 2111], "address": [23, 28, 47, 51, 60, 220, 930, 931, 1026, 2054, 2064, 2078, 2081, 2101, 2109, 2110, 2116, 2130, 2133, 2147], "maco": [23, 28, 2064, 2090], "spawn": [23, 24, 29, 37, 39, 45, 50, 1292, 1738, 2043, 2074, 2080, 2091, 2095, 2110], "__name__": [23, 24, 28, 38, 39, 40, 41, 48, 2080, 2081, 2091, 2095, 2102, 2110], "__main__": [23, 24, 28, 38, 39, 40, 48, 2076, 2080, 2091, 2094, 2095, 2110], "bytecod": [23, 52, 685, 2053, 2096, 2097, 2102, 2131, 2133, 2134, 2136, 2145], "base_se": 23, "worker_id": [23, 50, 2093], "therebi": [23, 35, 2101, 2104], "mandatorili": 23, "faq": [23, 1484, 1783, 2043], "initial_se": [23, 91, 2043, 2045, 2093, 2100, 2108], "host": [23, 28, 33, 37, 40, 46, 47, 48, 50, 92, 200, 213, 584, 607, 627, 888, 1289, 1416, 1548, 1738, 1759, 1793, 2078, 2109, 2110, 2116, 2123, 2130, 2135, 2147], "recogn": [23, 83, 2047, 2109, 2114, 2135], "simplecustombatch": 23, "transposed_data": 23, "zip": [23, 30, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 2042, 2045, 2046, 2058, 2078, 2088, 2114], "tgt": [23, 1592, 1593, 1594], "collate_wrapp": 23, "float32": [23, 24, 28, 52, 55, 271, 584, 621, 828, 829, 830, 831, 834, 835, 891, 994, 1133, 1134, 1172, 1236, 1239, 1271, 1448, 1461, 1468, 1601, 1602, 1603, 1621, 1806, 1807, 1808, 1826, 1851, 1856, 1868, 1883, 1898, 1899, 1901, 1943, 2005, 2067, 2074, 2078, 2092, 2097, 2099, 2106, 2114, 2115, 2116, 2117, 2120, 2121, 2133, 2134, 2136, 2145, 2150], "tensordataset": 23, "batch_ndx": 23, "is_pin": [23, 1780, 2045, 2065, 2100, 2116], "multiprocessing_context": 23, "pin_memory_devic": 23, "reshuffl": 23, "draw": [23, 35, 158, 290, 953, 1082, 1434, 1864, 2119, 2143], "mutual": [23, 28, 37, 55, 740, 2121], "subprocess": [23, 28, 31, 45, 47, 50, 1035, 2083, 2091], "incomplet": [23, 919, 2049, 2115], "divis": [23, 52, 587, 621, 692, 777, 778, 779, 977, 1114, 1164, 1167, 1300, 1333, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1502, 1514, 1539, 1557, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1691, 1877, 1946, 1974, 2047, 2074, 2078], "basecontext": 23, "randomsampl": 23, "prefetch": [23, 55], "unpickl": [23, 28, 1361, 2094, 2102], "practic": [23, 28, 33, 34, 35, 53, 55, 490, 2043, 2044, 2054, 2064, 2066, 2075, 2081, 2084, 2086, 2089, 2094, 2102, 2109, 2116, 2126, 2133, 2135, 2136], "proper": [23, 37, 63, 64, 1110, 1896, 2046, 2075, 2078, 2081, 2091, 2095, 2116], "guess": [23, 1203], "trust": [23, 28, 1361, 2042, 2102], "inaccur": [23, 24, 1665], "kwd": 23, "__getitems__": 23, "speedup": [23, 24, 1554, 1596, 2071, 2126, 2130, 2142], "myiterabledataset": 23, "worker_info": 23, "iter_start": 23, "iter_end": 23, "per_work": 23, "ceil": [23, 181, 638, 639, 773, 774, 1457, 1458, 1459, 1515, 1516, 1517, 1541, 1542, 1543, 1621, 1622, 1623, 1679, 1680, 1681, 1862, 1863, 1886, 2045, 2065, 2078, 2100, 2114, 2140], "mult": 23, "12": [23, 24, 28, 55, 325, 521, 621, 691, 746, 747, 748, 750, 751, 946, 973, 977, 1117, 1135, 1253, 1293, 1309, 1326, 1348, 1452, 1468, 1479, 1494, 1495, 1496, 1545, 1560, 1561, 1583, 1592, 1600, 1608, 1649, 1650, 1691, 1696, 1697, 1754, 1788, 1846, 1857, 1905, 1920, 1930, 1974, 1990, 1993, 2008, 2042, 2044, 2045, 2048, 2054, 2078, 2081, 2084, 2090, 2094, 2099, 2100, 2114, 2121, 2130, 2133, 2134, 2142, 2143], "overall_start": 23, "overall_end": 23, "stackdataset": 23, "assembl": [23, 2134], "imagedataset": 23, "textdataset": 23, "tuple_stack": 23, "dict_stack": 23, "concatdataset": 23, "chaindataset": 23, "chain": [23, 24, 35, 63, 64, 154, 904, 973, 1193, 1345, 1491, 1577, 1828, 1842, 2047, 2075, 2078, 2081, 2086, 2089, 2101, 2133, 2144], "fly": [23, 1061, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 2075], "whole": [23, 28, 30, 33, 1188, 1289, 1548, 1577, 1588, 1738, 2007, 2075, 2080, 2091, 2092, 2102, 2133, 2135, 2137, 2141, 2142], "_util": [23, 990, 2143], "collate_fn_map": 23, "registri": [23, 2043, 2094, 2097, 2099], "default_collate_fn_map": 23, "collate_tensor_fn": 23, "custom_col": 23, "collate_map": 23, "outer": [23, 28, 696, 919, 1119, 1178, 1182, 1187, 1208, 1234, 2045, 2047, 2100], "unchang": [23, 503, 517, 519, 740, 822, 1158, 1289, 1548, 1592, 1878, 1949, 2074, 2092, 2104], "byte": [23, 28, 30, 35, 47, 246, 439, 562, 891, 1025, 1067, 1069, 1071, 1073, 1171, 1173, 1288, 1361, 1398, 1400, 1408, 1800, 1810, 1889, 2046, 2047, 2048, 2065, 2084, 2094, 2102, 2114, 2116, 2147], "v_i": [23, 1329], "v_1": 23, "v_2": 23, "v1_i": 23, "v2_i": 23, "v1_1": 23, "v1_2": 23, "v2_1": 23, "v2_2": 23, "elem": [23, 2045], "customtyp": 23, "collate_customtype_fn": 23, "default_convert": 23, "np": [23, 971, 1114, 1119, 1159, 1160, 1161, 1695, 1851, 2051, 2082, 2093, 2099, 2119, 2120, 2121, 2136], "fraction": [23, 35, 1089, 1162, 1168, 1410, 1478, 1479, 1480, 1495, 1496, 1554, 1596, 1649, 1650, 1764, 1765, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1858, 2073, 2136], "workerinfo": [23, 2109], "random_split": 23, "floor": [23, 275, 652, 653, 773, 774, 1114, 1164, 1300, 1457, 1458, 1459, 1515, 1516, 1517, 1541, 1542, 1543, 1621, 1622, 1623, 1679, 1680, 1681, 1862, 1863, 1877, 1886, 1954, 2045, 2047, 2065, 2091, 2094, 2100, 2114, 2140], "frac": [23, 35, 283, 381, 654, 655, 692, 765, 777, 778, 779, 876, 952, 961, 1001, 1005, 1114, 1164, 1243, 1247, 1248, 1309, 1321, 1325, 1326, 1329, 1341, 1353, 1360, 1376, 1452, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1468, 1475, 1476, 1477, 1478, 1479, 1480, 1483, 1485, 1494, 1499, 1500, 1501, 1502, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1533, 1535, 1536, 1537, 1538, 1541, 1542, 1543, 1551, 1552, 1553, 1555, 1563, 1564, 1566, 1567, 1579, 1581, 1582, 1584, 1585, 1587, 1588, 1589, 1600, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1674, 1691, 1693, 1695, 1706, 1708, 1712, 1714, 1716, 1717, 1737, 1804, 1805, 1806, 1809, 1811, 1823, 1830, 1831, 1861, 1870, 1873, 1876, 1888, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1937, 1952, 1953, 1954, 1958, 1980, 2002, 2003, 2045, 2065, 2071, 2073, 2075, 2086, 2100, 2114, 2115], "remaind": [23, 494, 1167, 1243, 2045, 2100, 2134, 2140], "robin": [23, 28], "generator1": 23, "manual_se": [23, 60, 91, 1906, 2043, 2045, 2065, 2089, 2091, 2093, 2099, 2100, 2108], "42": [23, 833, 961, 1433, 1912, 2078, 2089, 2134], "generator2": 23, "30": [23, 28, 35, 47, 449, 621, 725, 733, 734, 761, 769, 1243, 1312, 1465, 1467, 1474, 1535, 1600, 1606, 1629, 1638, 1728, 1835, 1837, 1843, 1860, 1970, 2055, 2081, 2084, 2099, 2101, 2109, 2113, 2133, 2134], "_t": [23, 765, 1499, 1518, 1805, 1824, 1826, 2081, 2101], "data_sourc": 23, "accedingsequencelengthsampl": 23, "argsort": [23, 1970, 2045, 2082, 2100], "tolist": [23, 356, 2047, 2100, 2116], "accedingsequencelengthbatchsampl": 23, "sequentialsampl": 23, "num_sampl": [23, 425, 1434, 2045], "drawn": [23, 177, 262, 290, 1434, 1795, 1864, 1868, 1869, 2073, 2121, 2123], "subsetrandomsampl": 23, "weightedrandomsampl": 23, "probabl": [23, 34, 55, 158, 262, 765, 953, 985, 1209, 1251, 1367, 1434, 1452, 1456, 1460, 1467, 1483, 1485, 1486, 1487, 1488, 1492, 1499, 1501, 1518, 1554, 1555, 1564, 1626, 1637, 1638, 1639, 1640, 1641, 1642, 1647, 1656, 1666, 1690, 1706, 1857, 2064, 2081, 2095, 2099, 2115, 2119, 2132, 2135, 2136, 2137, 2141], "row": [23, 24, 28, 34, 35, 212, 317, 319, 325, 589, 592, 698, 704, 888, 919, 921, 971, 1001, 1005, 1102, 1132, 1160, 1161, 1182, 1188, 1252, 1311, 1337, 1345, 1348, 1353, 1377, 1379, 1387, 1389, 1390, 1392, 1395, 1434, 1440, 1441, 1442, 1645, 1646, 1695, 1753, 1793, 1805, 1855, 1858, 1878, 1938, 1939, 1940, 1941, 1942, 1944, 1945, 1957, 1977, 1980, 1984, 1986, 2001, 2007, 2009, 2045, 2071, 2086, 2114, 2119], "05": [23, 32, 64, 117, 348, 699, 717, 718, 719, 720, 721, 722, 728, 729, 741, 742, 754, 756, 757, 758, 759, 930, 931, 1133, 1278, 1305, 1306, 1376, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1588, 1592, 1594, 1596, 1624, 1655, 1664, 1668, 1738, 1829, 1836, 1837, 1843, 1914, 1915, 1920, 2044, 2045, 2101, 2110, 2121], "batchsampl": 23, "distributedsampl": [23, 1738], "num_replica": 23, "world_siz": [23, 24, 28, 29, 32, 37, 47, 48, 51, 55, 1738, 2080, 2109, 2110], "evenli": [23, 34, 587, 588, 589, 700, 701, 1117, 1253, 1360, 1376, 2008], "set_epoch": 23, "is_distribut": [23, 2045, 2100], "start_epoch": 23, "n_epoch": 23, "allreduc": [24, 28, 1738, 2078, 2080, 2100], "register_comm_hook": [24, 32, 55, 1738], "mainli": [24, 35, 836, 1467, 1638, 2124], "bucket": [24, 32, 1216, 1452, 1738, 2045, 2080, 2100, 2136, 2145], "gradbucket": [24, 1738], "decompos": [24, 52, 64, 1169, 1177, 1334, 2075, 2081, 2099, 2140], "get_per_parameter_tensor": 24, "wise": [24, 28, 34, 35, 692, 693, 703, 763, 775, 776, 785, 789, 895, 999, 1119, 1124, 1165, 1166, 1231, 1232, 1246, 1255, 1312, 1314, 1371, 1372, 1373, 1374, 1378, 1388, 1391, 1393, 1445, 1466, 1480, 1487, 1489, 1503, 1504, 1505, 1506, 1508, 1534, 1537, 1547, 1556, 1567, 1568, 1569, 1576, 1578, 1579, 1580, 1585, 1586, 1587, 1589, 1590, 1628, 1643, 1652, 1653, 1657, 1658, 1659, 1660, 1663, 1667, 1669, 1674, 1685, 1686, 1699, 1700, 1701, 1707, 1708, 1709, 1710, 1714, 1716, 1717, 1718, 1938, 2009, 2077, 2081, 2114, 2115, 2118, 2142], "_distributed_c10d": [24, 28], "1d": [24, 35, 55, 707, 710, 743, 746, 777, 787, 982, 1001, 1005, 1102, 1116, 1251, 1252, 1266, 1286, 1345, 1346, 1391, 1441, 1449, 1453, 1457, 1467, 1475, 1478, 1483, 1486, 1487, 1491, 1515, 1540, 1541, 1553, 1555, 1601, 1613, 1616, 1619, 1621, 1629, 1632, 1640, 1646, 1675, 1679, 1858, 1859, 1862, 1954, 1970, 1980, 2004, 2084], "is_last": 24, "set_buff": 24, "stateless": [24, 60, 2068, 2089], "ddp_comm_hook": [24, 32], "default_hook": 24, "allreduce_hook": 24, "process_group": [24, 29, 30, 32, 55, 1588, 1738], "aggreg": [24, 28, 30, 40, 55, 1491, 1646, 1738, 1770, 2060, 2136, 2145], "henc": [24, 30, 32, 35, 37, 46, 47, 51, 55, 63, 290, 953, 1173, 1544, 1545, 1546, 1601, 1746, 1747, 1943, 2067, 2075, 2078, 2080, 2084, 2109, 2111, 2130], "unaffect": [24, 503, 504, 1501], "ddp_model": [24, 28, 30, 1738, 2080], "fp16_compress_hook": 24, "compress": [24, 55, 212, 591, 592, 1141, 1142, 1151, 1152, 1738, 1940, 1941, 1942, 1944, 1945, 1979, 2043, 2142], "decompress": [24, 2042, 2058], "bf16_compress_hook": 24, "brain": [24, 2117, 2120], "wrapper": [24, 28, 35, 49, 55, 63, 64, 66, 629, 762, 796, 833, 1013, 1016, 1018, 1019, 1023, 1092, 1165, 1166, 1186, 1192, 1289, 1402, 1430, 1484, 2012, 2013, 2037, 2044, 2046, 2047, 2051, 2060, 2064, 2078, 2080, 2099, 2130], "fp16_compress_wrapp": 24, "powersgdst": 24, "matrix_approximation_rank": 24, "start_powersgd_it": 24, "powersgd_hook": 24, "bf16_compress_wrapp": 24, "wikipedia": [24, 1692, 2075, 2086, 2150], "bfloat16_float": 24, "point_format": 24, "vogel": 24, "et": [24, 35, 55, 1467, 1560, 1561, 1597, 1598, 1826, 1921, 1959, 2073], "al": [24, 35, 55, 1467, 1560, 1561, 1597, 1598, 1826, 1921, 1959, 2073], "neurip": [24, 35], "2019": [24, 35, 1075], "bandwidth": [24, 28, 33, 46, 48, 2078, 2104, 2109, 2138, 2139], "hyperparamet": [24, 55, 64, 1805, 2119], "1000": [24, 1134, 1139, 1165, 1166, 1452, 1490, 1598, 1859, 1886, 1905, 1973, 2075, 2094, 2099, 2119, 2149], "min_compression_r": 24, "use_error_feedback": 24, "warm_start": 24, "orthogonalization_epsilon": 24, "random_se": 24, "compression_stats_logging_frequ": 24, "batch_tensors_with_same_shap": 24, "tune": [24, 28, 32, 1075, 1326, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 2075, 2078, 2090, 2104, 2145], "stronger": [24, 52, 53, 66], "exponenti": [24, 262, 1129, 1341, 1367, 1368, 1369, 1377, 1466, 1489, 1643, 2043, 2047, 2100, 2101, 2115, 2123], "grid": [24, 1139, 1391, 1619, 1654, 2045, 2078, 2119, 2140], "satisfactori": 24, "nlp": [24, 1510, 1511, 1512, 1520, 2136], "appendix": [24, 2043], "hybrid": [24, 55, 222, 547, 587, 588, 589, 591, 592, 1254], "scheme": [24, 45, 47, 482, 810, 828, 829, 830, 831, 834, 836, 2089, 2123], "sensit": [24, 1508, 1580, 2099, 2102, 2110, 2135], "suboptim": [24, 2138], "trajectori": 24, "irrecover": 24, "warm": [24, 32, 1064, 1830, 1831, 2078, 2103, 2130, 2136, 2143], "num_row": 24, "num_col": 24, "1e": [24, 30, 35, 64, 117, 348, 699, 717, 718, 719, 720, 721, 722, 728, 729, 741, 742, 754, 756, 757, 758, 759, 760, 930, 931, 974, 975, 976, 1278, 1305, 1306, 1356, 1462, 1463, 1464, 1482, 1501, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1534, 1557, 1562, 1588, 1592, 1594, 1596, 1597, 1624, 1636, 1651, 1655, 1656, 1664, 1668, 1691, 1694, 1698, 1722, 1754, 1788, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827, 1839, 1841, 1849, 1902, 2044, 2045, 2081, 2089, 2099, 2101, 2115, 2121], "orthogon": [24, 1326, 1329, 1348, 1353, 1362, 1845, 1857, 2073, 2075, 2089, 2114], "div": [24, 240, 1115, 1164, 1167, 1452, 1560, 1561, 1877, 1987, 2045, 2051, 2065, 2100, 2114, 2117, 2140, 2144], "epsilon": [24, 64, 828, 829, 830, 831, 834, 876, 1344, 1347, 1462, 1463, 1464, 1482, 1502, 1510, 1511, 1512, 1520, 1557, 1563, 1588, 1636, 1691, 1737, 1749, 1751, 1754, 1788, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1861, 2045, 2115], "bucket_cap_mb": [24, 1738, 2080], "footprint": [24, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2097, 2114, 2142], "bottleneck": [24, 2043, 2089, 2138], "memor": 24, "compens": 24, "apex": 24, "uncompress": [24, 2071, 2094, 2114], "pq": 24, "mq": [24, 2104, 2125], "tp": [24, 28, 33, 34, 55], "awai": [24, 64, 986, 1654, 2043, 2066, 2075, 2082, 2132], "comm": [24, 28, 47, 685, 2080], "handler": [24, 28, 38, 40, 41, 49, 1766, 2060, 2081, 2088, 2102, 2146], "batched_powersgd_hook": 24, "destroi": [24, 28, 47, 1203, 1484, 2075, 2103, 2109], "squar": [24, 35, 555, 744, 745, 746, 747, 784, 790, 800, 1005, 1106, 1108, 1286, 1321, 1323, 1325, 1326, 1327, 1330, 1331, 1335, 1337, 1339, 1341, 1343, 1347, 1349, 1350, 1352, 1353, 1357, 1370, 1379, 1450, 1454, 1458, 1459, 1476, 1477, 1479, 1480, 1495, 1496, 1508, 1516, 1517, 1539, 1542, 1543, 1546, 1563, 1580, 1592, 1609, 1621, 1630, 1633, 1649, 1650, 1654, 1663, 1665, 1686, 1703, 1706, 1710, 1725, 1737, 1753, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1888, 1947, 1982, 2001, 2045, 2100, 2114], "truncat": [24, 1164, 1901, 1988, 2067, 2073, 2083, 2092], "impli": [24, 47, 55, 262, 1207, 2064, 2075, 2084, 2099, 2107, 2109, 2135], "debugging_hook": 24, "noop_hook": 24, "headroom": 24, "desynchron": [24, 28], "trainer": [24, 28, 30, 37, 40, 45, 47, 48, 50, 1738, 2109], "restart": [24, 37, 46, 48, 51, 1830, 1831, 2064, 2119, 2134], "__setstate__": 24, "__getstate__": 24, "reload": [24, 32, 55, 2042], "sy": [24, 39, 48, 51, 2042, 2078, 2094, 2102], "tempfil": [24, 2094], "mp": [24, 28, 29, 50, 1402, 1738, 1807, 1808, 2043, 2051, 2080, 2081, 2091, 2101, 2104, 2110, 2116, 2117, 2125, 2148], "simplemodel": 24, "24": [24, 28, 35, 956, 1348, 1536, 1619, 1787, 1857, 1901, 1975, 2044, 2073, 2077, 2115, 2133, 2134], "fc2": [24, 1728, 2097, 2127], "master_addr": [24, 28, 37, 47, 48, 51, 2080, 2109, 2110], "localhost": [24, 28, 47, 48, 2080, 2109, 2110], "master_port": [24, 28, 37, 47, 48, 51, 2080, 2109, 2110], "12355": 24, "init_process_group": [24, 28, 29, 32, 37, 48, 51, 1738, 2078, 2080, 2109], "cleanup": [24, 1203, 2116], "destroy_process_group": [24, 28], "run_demo": 24, "demo_fn": 24, "nproc": [24, 28, 45, 46, 48, 2064, 2080, 2110], "demo_seri": 24, "gettempdir": 24, "device_id": [24, 28, 29, 32, 48, 55, 1361, 1484, 1588, 1721, 1738, 2080], "powersgd_st": 24, "lr": [24, 29, 30, 32, 55, 492, 1728, 1738, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2078, 2080, 2085, 2089, 2091, 2101, 2110, 2119], "001": [24, 930, 931, 1299, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1840, 2080, 2085, 2099], "state_dict": [24, 30, 32, 52, 53, 55, 62, 845, 846, 1289, 1548, 1728, 1739, 1773, 1791, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2042, 2058, 2059, 2080, 2085, 2089, 2091, 2094, 2097, 2099, 2104, 2124], "comm_hook": 24, "comm_hook_st": 24, "barrier": [24, 37, 47, 2100], "map_loc": [24, 1293, 1297, 1361, 1738, 2042, 2055, 2058, 2102], "new_ddp_model": 24, "load_state_dict": [24, 30, 32, 55, 62, 419, 1289, 1361, 1548, 1728, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2042, 2043, 2089, 2094, 2104], "n_gpu": 24, "device_count": [24, 1998, 2043], "got": [24, 28, 902, 916, 917, 939, 2081, 2121], "thank": [24, 35, 2081], "author": [24, 47, 48, 55, 1188, 1823, 1864, 2007, 2074, 2127, 2134, 2136, 2138, 2141, 2142, 2143, 2145], "thij": 24, "par": 24, "torch_show_cpp_stacktrac": [25, 28], "torch_cpp_log_level": [25, 28], "c10": [25, 47, 2088, 2127, 2132], "glog": 25, "logger": [25, 28, 37, 806, 848, 2124, 2125], "info": [25, 28, 33, 41, 45, 47, 55, 685, 903, 916, 917, 1018, 1019, 1023, 1203, 1320, 1331, 1333, 1334, 1338, 1351, 1379, 1405, 1406, 1800, 2043, 2045, 2051, 2053, 2080, 2081, 2082, 2099, 2102, 2132, 2134, 2135, 2145, 2149], "fatal": [25, 52, 2064, 2091], "torch_log": [25, 33, 81, 83, 685, 983, 2053, 2080, 2132, 2133, 2134, 2136, 2145], "_log": [25, 33, 2043, 2047, 2145, 2148], "home": [26, 2078], "fill_uninitialized_memori": [27, 503, 1120, 1121, 1122, 1995, 2043, 2093], "fill": [27, 28, 33, 158, 177, 262, 263, 264, 290, 321, 325, 381, 404, 449, 450, 451, 453, 458, 485, 517, 612, 628, 954, 1107, 1120, 1121, 1122, 1174, 1175, 1320, 1331, 1333, 1491, 1592, 1646, 1693, 1798, 1799, 1866, 1867, 1868, 1869, 1870, 1871, 1958, 1995, 2040, 2041, 2045, 2055, 2066, 2067, 2073, 2078, 2081, 2094, 2100, 2114, 2121, 2135, 2140], "detriment": [27, 2093], "resize_": [27, 504, 1177, 1311, 1995, 2044, 2045, 2046, 2065, 2093, 2106, 2116, 2140], "empty_strid": [27, 2045, 2049, 2100, 2132, 2140], "empty_permut": [27, 2045, 2100, 2140], "empty_lik": [27, 30, 2045, 2049, 2051, 2055, 2065, 2067, 2100, 2114], "brief": [28, 33, 1738, 2064, 2109], "introduct": [28, 35, 1053, 1738, 2043, 2044, 2048, 2065, 2076, 2089, 2099, 2109, 2114, 2119], "mpi": [28, 1738], "gloo": [28, 48, 1738, 2080, 2087, 2109], "recv": [28, 33, 1738, 2100, 2110], "broadcast": [28, 30, 32, 34, 35, 55, 60, 101, 200, 402, 404, 405, 406, 517, 519, 521, 570, 690, 691, 692, 693, 694, 695, 696, 702, 740, 895, 951, 956, 959, 963, 964, 965, 966, 1000, 1031, 1061, 1113, 1114, 1119, 1124, 1164, 1165, 1166, 1167, 1230, 1232, 1246, 1256, 1314, 1315, 1322, 1335, 1339, 1344, 1345, 1347, 1350, 1358, 1378, 1383, 1384, 1394, 1433, 1436, 1445, 1448, 1461, 1482, 1501, 1554, 1627, 1636, 1699, 1706, 1738, 1802, 1846, 1854, 1877, 1879, 1955, 1959, 1975, 1980, 2010, 2043, 2047, 2065, 2066, 2067, 2071, 2080, 2099, 2100, 2115, 2136, 2140], "all_reduc": [28, 50, 1738, 2100, 2130], "all_gath": 28, "scatter": [28, 32, 55, 517, 519, 521, 1484, 1995, 2045, 2083, 2084, 2100, 2109, 2140], "reduce_scatt": [28, 2100], "all_to_al": 28, "v1": [28, 55, 1358, 1846, 2042, 2080, 2109], "init_method": [28, 1738, 2109], "adher": [28, 985, 2047, 2114], "some_fil": 28, "machine_nam": 28, "share_folder_nam": 28, "tcpstore": [28, 47], "past": [28, 52, 64, 90, 1029, 1077, 1082, 1096, 1097, 1415, 1738, 2083, 2138, 2139, 2142], "ask": [28, 59, 60, 2042, 2043, 2082, 2086, 2126, 2133, 2147], "infiniband": [28, 1738, 2109], "interconnect": [28, 33], "gpudirect": 28, "ethernet": 28, "ip": [28, 47], "ib": 28, "upcom": [28, 2074], "nccl_socket_ifnam": 28, "eth0": 28, "gloo_socket_ifnam": 28, "eth1": 28, "eth2": 28, "eth3": 28, "imper": 28, "nccl_debug": 28, "nccl_debug_subsi": 28, "coll": 28, "hang": [28, 29, 32, 35, 1738, 2056, 2080, 2149], "topologi": [28, 30, 34, 37], "effort": [28, 52, 2109, 2133, 2139], "socket": [28, 38, 2064, 2109], "nccl_socket_nthread": 28, "nccl_nsocks_perthread": 28, "cloud": [28, 2114, 2119], "aw": [28, 39, 1005], "gcp": [28, 2142], "primit": [28, 32, 33, 47, 1361, 2044, 2046, 2048, 2077, 2090, 2099, 2109, 2140], "kind": [28, 41, 52, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 685, 1199, 1309, 1739, 1740, 1801, 1856, 1920, 2042, 2051, 2081, 2091, 2093, 2097, 2099, 2102, 2104, 2115, 2117], "connect": [28, 37, 47, 1475, 1476, 1477, 1478, 1479, 1480, 1524, 1525, 1526, 1527, 1528, 1529, 1577, 2064, 2071, 2109, 2143], "advantag": [28, 47, 48, 1461, 1508, 2080, 2083, 2096, 2097, 2109, 2114, 2130], "redund": [28, 55, 1135, 1136, 1138, 1140, 1154, 1156, 1954], "elimin": [28, 52, 64, 614, 1196, 1991, 1992, 2093, 2138, 2144], "thrash": 28, "recurr": [28, 765, 766, 1305, 1467, 1484, 1499, 1500, 1518, 1564, 1757, 1783, 1824, 2043, 2078], "device_mesh": [28, 34, 55, 1738], "init_device_mesh": [28, 34], "use_distribut": 28, "group_nam": [28, 44], "pg_option": 28, "url": [28, 47, 942, 2042, 2058, 2109], "encod": [28, 37, 44, 47, 64, 1337, 1361, 1405, 1406, 1460, 1461, 1592, 1593, 1594, 1595, 1596, 1738, 1901, 1940, 1941, 1942, 1944, 1945, 2044, 2047, 2048, 2081, 2094, 2102, 2110, 2114], "ucc": 28, "lowercas": 28, "deadlock": [28, 1738], "job": [28, 37, 40, 41, 43, 44, 46, 47, 48, 50, 1432, 1738, 1832, 1839, 2078, 2088, 2103, 2119, 2133, 2147, 2149], "exchang": [28, 47, 1019, 1107, 2078, 2096], "timedelta": [28, 47, 2060], "abort": [28, 2078, 2149], "crash": [28, 40, 47, 1326, 2064, 2075, 2109, 2111, 2119, 2132], "corrupt": [28, 47, 1484, 2078, 2091], "torch_nccl_blocking_wait": [28, 2149], "processgroupopt": 28, "processgroupnccl": [28, 2043, 2080, 2148], "is_high_priority_stream": 28, "availbl": 28, "deeplearn": 28, "ncclconfig": 28, "ncclcomminit": 28, "lazi": [28, 998, 1193, 1302, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1728, 2026, 2043, 2132], "ncclcommsplit": 28, "unnecessari": [28, 32, 1746, 1747, 1787, 2047, 2075, 2078, 2081, 2094, 2102, 2118], "backend_nam": [28, 1998], "custom_backend": 28, "mesh_shap": 28, "mesh_dim_nam": 28, "dimension": [28, 35, 53, 517, 519, 891, 897, 898, 899, 962, 969, 981, 1107, 1109, 1110, 1119, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1153, 1154, 1156, 1158, 1160, 1161, 1173, 1243, 1252, 1253, 1254, 1322, 1327, 1328, 1329, 1330, 1355, 1360, 1376, 1384, 1391, 1452, 1469, 1470, 1471, 1472, 1473, 1474, 1483, 1484, 1490, 1491, 1520, 1538, 1555, 1563, 1570, 1571, 1572, 1573, 1574, 1575, 1582, 1584, 1588, 1604, 1605, 1606, 1637, 1690, 1693, 1726, 1727, 1737, 1753, 1793, 1864, 1940, 1941, 1942, 1943, 1944, 1945, 1954, 1970, 1973, 1974, 1980, 2047, 2067, 2073, 2076, 2086, 2092, 2114, 2116, 2117, 2120, 2123, 2132], "layout": [28, 34, 53, 64, 154, 195, 212, 237, 346, 347, 439, 449, 450, 451, 452, 453, 462, 548, 585, 586, 587, 588, 589, 591, 592, 621, 694, 876, 904, 909, 952, 961, 1033, 1120, 1121, 1122, 1132, 1137, 1155, 1171, 1174, 1175, 1201, 1247, 1248, 1309, 1360, 1376, 1384, 1394, 1444, 1671, 1798, 1799, 1827, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1979, 1984, 1986, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2049, 2067, 2078, 2100, 2102, 2114, 2119, 2120, 2121, 2140], "spmd": [28, 30], "nd": [28, 1345, 2084, 2092], "inconsist": [28, 55, 876, 1873, 2081], "scene": [28, 2094, 2119], "mesh": [28, 34, 2119], "mesh_1d": 28, "mesh_2d": 28, "dp": 28, "is_initi": [28, 2043], "is_mpi_avail": 28, "is_nccl_avail": 28, "is_gloo_avail": 28, "is_torchelastic_launch": 28, "elast": [28, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 2043], "torchelast": [28, 31, 37, 39, 40, 41, 44, 46, 47, 48, 50, 51], "torchelastic_run_id": [28, 48], "proxi": [28, 30, 985, 1189, 1190, 1193, 2104, 2109, 2133], "rendezv": [28, 31, 37, 41, 44, 46, 51, 2080, 2109], "null": [28, 39, 41, 44, 66, 70], "discoveri": [28, 47, 2078, 2102], "reachabl": 28, "multicast": 28, "20": [28, 32, 35, 325, 690, 725, 733, 734, 739, 743, 744, 745, 746, 747, 748, 751, 761, 765, 766, 767, 768, 769, 770, 777, 1101, 1243, 1287, 1290, 1301, 1312, 1346, 1433, 1456, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1467, 1474, 1475, 1476, 1477, 1479, 1480, 1485, 1486, 1487, 1488, 1492, 1495, 1496, 1499, 1500, 1502, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1518, 1519, 1520, 1535, 1541, 1542, 1543, 1545, 1546, 1548, 1564, 1566, 1577, 1585, 1588, 1591, 1592, 1593, 1594, 1606, 1629, 1631, 1632, 1634, 1638, 1649, 1650, 1656, 1714, 1753, 1754, 1755, 1779, 1788, 1791, 1810, 1831, 1860, 1970, 2044, 2045, 2055, 2067, 2071, 2080, 2081, 2092, 2097, 2100, 2101, 2109, 2113, 2114, 2133, 2134, 2135], "23456": 28, "clean": [28, 33, 37, 52, 64, 993, 1057, 2042, 2064, 2102], "fcntl": 28, "nf": 28, "init": [28, 34, 37, 40, 41, 55, 1289, 1548, 1556, 1576, 1787, 2043, 2049, 2075, 2081, 2085, 2088, 2089, 2132], "brand": [28, 30, 2081], "succe": [28, 47, 52, 60, 2078, 2081, 2095, 2145, 2147], "unexpect": [28, 30, 36, 64, 1015, 1170, 1173, 1176, 1289, 1548, 1789, 1802, 1949, 2044, 2075, 2081, 2092, 2133, 2135, 2136], "unsuccess": 28, "mnt": 28, "sharedfil": 28, "port": [28, 37, 46, 47, 48, 2055, 2087], "backend_str": 28, "uppercas": 28, "classmethod": [28, 30, 47, 66, 68, 737, 743, 744, 745, 750, 751, 761, 769, 798, 799, 800, 823, 824, 825, 833, 865, 939, 1018, 1490, 1491, 1588, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1800, 2047, 2048, 2071, 2081, 2104, 2109, 2116, 2146], "register_backend": [28, 2109, 2131], "extended_api": 28, "instanti": [28, 32, 46, 47, 48, 55, 64, 852, 1491, 1646, 1756, 1780, 1787, 2042, 2044, 2046, 2047, 2051, 2078, 2081, 2089, 2094, 2097, 2116], "3rd": [28, 35, 47, 621, 2076], "processgroup": [28, 30, 32, 33, 55, 1738], "four": [28, 1335, 1476, 2071, 2081, 2086, 2109, 2111], "c10d": [28, 37, 46, 48, 51, 685, 1738, 2080, 2100], "distributedbackendopt": 28, "get_backend": [28, 47], "get_rank": [28, 55, 1588], "consecut": [28, 55, 614, 1782, 1828, 1980, 1991, 1992, 2066, 2099], "get_world_s": 28, "pattern": [28, 30, 33, 798, 799, 800, 802, 865, 872, 1061, 1216, 1484, 1608, 1783, 1936, 2044, 2047, 2071, 2075, 2078, 2081, 2083, 2087, 2094, 2105, 2106, 2114, 2130, 2132, 2133, 2135, 2144, 2147], "launcher": [28, 33, 48], "pg": [28, 1738], "destructor": [28, 2064, 2111], "ncclcommabort": 28, "gc": [28, 490, 2111], "fault": [28, 31, 37, 46, 47, 1173], "toler": [28, 31, 37, 46, 47, 64, 699, 930, 931, 1278, 1305, 1306, 1344, 1347, 1362, 1802, 1810, 2044, 2121], "_after_": [28, 2080], "unsupport": [28, 37, 52, 60, 66, 73, 80, 83, 84, 86, 89, 2044, 2048, 2066, 2094, 2097, 2101, 2109, 2114, 2136, 2141], "untest": [28, 2066], "filestor": [28, 47], "hashstor": 28, "client": [28, 32, 47, 1075, 1202, 1207, 2102, 2136], "host_nam": 28, "hostnam": [28, 37, 41, 47, 2103], "listen": 28, "is_mast": 28, "300": [28, 37, 1367, 1461, 1784, 1786, 2101], "wait_for_work": 28, "multi_ten": 28, "underli": [28, 30, 32, 35, 37, 52, 55, 60, 64, 101, 315, 330, 381, 404, 406, 477, 478, 479, 480, 487, 503, 524, 528, 561, 562, 563, 617, 753, 762, 889, 1018, 1171, 1203, 1219, 1221, 1222, 1260, 1264, 1289, 1361, 1443, 1698, 1875, 1979, 1994, 2012, 2044, 2047, 2067, 2078, 2083, 2087, 2109, 2116, 2118, 2126, 2135], "tcpserver": 28, "master_listen_fd": 28, "use_libuv": 28, "libuv": 28, "datetim": [28, 2060, 2136], "server_stor": 28, "127": [28, 800, 2066, 2104, 2119], "1234": [28, 47, 1266, 1993], "client_stor": 28, "first_kei": 28, "first_valu": 28, "hashmap": 28, "file_nam": [28, 2042, 2058, 2102], "store1": 28, "store2": 28, "prefixstor": 28, "old": [28, 36, 52, 64, 490, 865, 1170, 1211, 1226, 1487, 1791, 1799, 1841, 1889, 2041, 2043, 2044, 2075, 2078, 2081, 2095, 2104, 2119, 2135], "throw": [28, 29, 63, 64, 194, 327, 332, 549, 618, 1274, 1289, 1330, 1379, 1548, 1738, 1741, 1742, 1783, 1794, 1853, 1995, 2067, 2075, 2093, 2109, 2120, 2133, 2136, 2145, 2149], "whose": [28, 35, 55, 64, 548, 870, 909, 973, 1000, 1107, 1119, 1124, 1173, 1232, 1243, 1246, 1252, 1289, 1295, 1306, 1314, 1360, 1376, 1378, 1445, 1548, 1738, 1795, 1851, 1908, 1976, 2047, 2075, 2081, 2084, 2086, 2102, 2114, 2119, 2120, 2121, 2132, 2145], "quantiti": [28, 56, 61, 1211, 1213, 1216, 1325, 1326, 1353, 1513, 1764, 1765, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1841, 2051, 2059, 2082, 2086], "compare_set": 28, "arg2": [28, 53], "expected_valu": 28, "desired_valu": 28, "second_valu": 28, "overload": [28, 52, 64, 621, 2046, 2047, 2051, 2097], "bad_kei": 28, "num_kei": 28, "written": [28, 30, 37, 40, 45, 60, 942, 1077, 1171, 1484, 1805, 1826, 2044, 2046, 2054, 2057, 2075, 2080, 2081, 2082, 2089, 2094, 2097, 2099, 2102, 2103, 2116, 2119, 2126, 2132, 2133, 2134, 2138, 2139, 2144, 2145], "delete_kei": 28, "set_timeout": 28, "grain": [28, 52, 869, 872, 1706, 2075, 2099, 2114, 2126, 2138, 2145], "plai": [28, 2134, 2136], "new_group": [28, 55, 1588], "opaqu": [28, 36, 985, 1016, 1053, 1054, 1170, 2141], "use_local_synchron": 28, "group_desc": 28, "enqueu": [28, 63, 1019, 1023, 1024, 1417, 2014, 2078, 2110], "groupmemb": 28, "non_group_memb": 28, "significantli": [28, 52, 55, 920, 1738, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1901, 2114, 2131], "taken": [28, 33, 35, 52, 63, 64, 66, 71, 876, 1140, 1142, 1165, 1166, 1467, 1483, 1491, 1555, 1563, 1638, 1646, 1737, 1905, 1938, 2073, 2075, 2077, 2078, 2081, 2083, 2084, 2088, 2094, 2099, 2102, 2103, 2145, 2147], "get_group_rank": 28, "global_rank": [28, 37], "translat": [28, 1243, 2075, 2096, 2097, 2111], "get_global_rank": 28, "group_rank": [28, 37, 48], "get_process_group_rank": 28, "inter": [28, 37, 40, 55, 1240, 1903, 2077, 2080, 2109], "intra": [28, 32, 55, 2077, 2080], "_init_backend": 28, "ndarrai": [28, 36, 462, 890, 1170, 1172, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 2099, 2119, 2121, 2136], "dst": [28, 2042, 2102], "destin": [28, 30, 41, 44, 45, 55, 213, 420, 421, 607, 627, 1032, 1033, 1230, 1289, 1396, 1397, 1548, 2045, 2097, 2109, 2110, 2116], "unspecifi": [28, 485, 829, 830, 831, 834, 930, 931, 1203, 1582, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1937, 1943, 2054, 2114, 2119, 2127], "sender": [28, 2111], "isend": 28, "irecv": 28, "is_complet": 28, "finish": [28, 30, 37, 44, 45, 47, 50, 63, 490, 1177, 2078, 2080, 2085, 2095, 2103, 2109, 2111, 2147], "send_object_list": 28, "object_list": 28, "picklabl": [28, 1289, 1548, 2102], "sent": [28, 30, 1057, 2047, 2064, 2091, 2109, 2110, 2111], "current_devic": [28, 30, 55, 1029, 1038, 1039, 1046, 1047, 1063, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1095, 1096, 1097, 1419, 1420, 1427, 1998, 2016, 2021, 2022, 2039, 2043, 2117, 2134], "set_devic": [28, 30, 55, 1738, 1897, 2043, 2109, 2117], "insecur": [28, 1361], "malici": [28, 1361, 2102], "ineffici": [28, 55, 2078, 2104], "recv_object_list": 28, "batch_isend_irecv": 28, "p2p_op_list": 28, "p2pop": 28, "op_list": 28, "send_tensor": 28, "recv_tensor": 28, "send_op": 28, "recv_op": 28, "req": 28, "p2p": [28, 47], "async_op": 28, "onto": [28, 55, 64, 66, 68, 1081, 1297, 1300, 1361, 1759, 1996, 2042, 2051, 2055, 2064, 2078, 2082, 2083, 2089, 2103, 2144, 2147], "get_futur": [28, 1738], "regard": [28, 1478, 1479, 1480, 1490, 1491, 1645, 1646, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 2044, 2111, 2114, 2139], "101": [28, 939, 1452], "overwrot": 28, "broadcast_object_list": 28, "redoptyp": 28, "bitwis": [28, 955, 957, 958, 960, 2048, 2092, 2105, 2123], "reduceop": [28, 2130], "int64": [28, 86, 195, 212, 317, 325, 397, 876, 954, 967, 1120, 1133, 1134, 1172, 1637, 1780, 1868, 1872, 1873, 1893, 1940, 1941, 1942, 1944, 1945, 2051, 2078, 2114, 2116, 2117, 2120, 2150], "1j": [28, 703, 998, 999, 1285, 1881, 1882, 2004, 2075, 2086, 2094], "2j": [28, 703, 998, 999, 1881, 1882, 1908, 2004, 2075], "tensor_list": [28, 2067], "uneven": [28, 29, 32, 34, 1738], "all_gather_into_tensor": [28, 2100], "output_tensor": 28, "input_tensor": [28, 2138], "accommod": [28, 1544, 1545, 1546], "ii": [28, 1001, 1119, 1518, 1519], "tensor_in": 28, "tensor_out": 28, "tensor_out2": 28, "all_gather_object": 28, "obj": [28, 64, 891, 1042, 1275, 1276, 1295, 1296, 1301, 1889, 1999, 2019, 2094, 2095, 2102], "pickabl": 28, "popul": [28, 35, 45, 55, 63, 64, 339, 499, 507, 508, 1201, 1212, 1390, 1440, 2078, 2081, 2135, 2144], "unmodifi": [28, 33, 2134], "responsibl": 28, "gather_object": 28, "gather_list": 28, "object_gather_list": 28, "scatter_list": 28, "tensor_s": 28, "t_one": 28, "t_five": 28, "scatter_object_list": 28, "scatter_object_output_list": 28, "scatter_object_input_list": 28, "output_list": 28, "input_list": 28, "reduce_scatter_tensor": [28, 2100], "all_to_all_singl": [28, 2100], "output_split_s": 28, "input_split_s": 28, "13": [28, 886, 946, 977, 1101, 1117, 1120, 1164, 1243, 1253, 1293, 1379, 1468, 1495, 1496, 1545, 1583, 1649, 1650, 1930, 1974, 2008, 2044, 2048, 2100, 2114, 2139, 2145], "14": [28, 66, 74, 75, 325, 521, 976, 1061, 1062, 1102, 1117, 1253, 1342, 1348, 1438, 1468, 1545, 1857, 1864, 1901, 1930, 1974, 1975, 1980, 2008, 2044, 2048, 2051, 2084, 2100, 2114, 2118, 2119, 2133, 2134], "15": [28, 64, 621, 1101, 1117, 1231, 1243, 1253, 1312, 1326, 1468, 1545, 1546, 1784, 1786, 1849, 1921, 1930, 1978, 2008, 2044, 2045, 2048, 2071, 2099, 2114, 2134], "18": [28, 325, 449, 690, 1120, 1243, 1286, 1362, 1545, 2044, 2051, 2097, 2099, 2100, 2114, 2127, 2133, 2134], "21": [28, 35, 690, 946, 973, 1102, 1348, 1857, 1980, 2044, 2114], "22": [28, 35, 325, 621, 1362, 1728, 1784, 1786, 2044, 2093, 2114, 2133, 2134], "23": [28, 517, 1101, 1362, 1901, 1916, 2044, 2114, 2145], "31": [28, 959, 1459, 1517, 1543, 1728, 1916, 2099], "33": [28, 743, 744, 745, 746, 747, 748, 777, 1101, 1289, 1475, 1476, 1477, 1479, 1480, 1546, 1548, 1629, 1631, 1632, 1634, 2044, 2099], "34": [28, 1993, 2134, 2145], "35": [28, 1348, 1463, 1464, 1511, 1512, 1588, 1857], "36": [28, 325, 1162, 1243, 2134], "input_split": 28, "output_split": 28, "5j": 28, "6j": 28, "7j": 28, "8j": 28, "9j": 28, "10j": 28, "11j": 28, "12j": 28, "13j": 28, "14j": 28, "15j": 28, "16j": 28, "output_tensor_list": 28, "input_tensor_list": 28, "monitored_barri": [28, 2100], "wait_all_rank": 28, "pend": [28, 988, 2078, 2109, 2119, 2130], "band": 28, "bor": 28, "bxor": 28, "premul_sum": 28, "suppos": [28, 64, 1226, 1286, 2054, 2084, 2114, 2135, 2136, 2137], "_make_nccl_premul_sum": 28, "__members__": 28, "reduce_op": 28, "mention": [28, 1197, 2042, 2046, 2047, 2066, 2075, 2078, 2089, 2099, 2114, 2118, 2126, 2139, 2145], "stand": [28, 33, 1183, 1187, 2046, 2102, 2111], "exemplifi": 28, "cpp_extens": [28, 2043], "cpp_c10d_extens": 28, "torchrun": [28, 31, 33, 39, 46, 51], "benefici": [28, 91, 1746, 1747, 2089], "nproc_per_nod": [28, 33, 39], "num_gpus_you_hav": 28, "your_training_script": [28, 46, 48], "arg3": [28, 53], "192": [28, 621, 2099], "168": 28, "nnode": [28, 46, 48], "local_process_rank": 28, "local_rank": [28, 37, 40, 45, 48, 51, 1588], "argpars": [28, 48, 2078], "parser": [28, 48, 2078], "argumentpars": [28, 48, 2078], "add_argu": [28, 48, 2078], "parse_arg": [28, 39, 48, 51, 2078, 2099], "onward": [28, 48, 1841, 2115], "dash": [28, 48, 2109, 2111], "previous": [28, 47, 48, 52, 56, 59, 60, 61, 64, 703, 798, 799, 939, 1188, 1216, 1226, 1297, 1952, 1953, 2002, 2003, 2007, 2044, 2076, 2078, 2089, 2102, 2108, 2109, 2115, 2127, 2133, 2141, 2147], "underscor": [28, 48, 2042, 2066, 2109, 2120], "unrecogn": [28, 48, 2047], "output_devic": [28, 32, 48, 1484, 1588, 1721, 1738], "adjust": [28, 30, 32, 34, 35, 55, 1461, 1834, 1841, 1913, 2043, 2077, 2105, 2127, 2147, 2148], "filesystem": [28, 30, 2042, 2102], "12042": 28, "wrong": [28, 64, 86, 911, 912, 916, 988, 1287, 1290, 2080, 2091, 2095, 2099, 2101, 2130, 2133, 2134], "imagenet": [28, 2073], "suit": [28, 2044, 2046, 2047, 2099, 2105, 2109, 2142], "pdb": [28, 1294, 1301, 1307, 2044, 2046], "streamlin": [28, 53, 83], "attach": [28, 33, 53, 58, 63, 64, 143, 717, 718, 719, 720, 721, 722, 723, 724, 725, 735, 736, 737, 738, 799, 827, 847, 850, 875, 1728, 2042, 2044, 2046, 2065, 2075, 2081, 2104, 2110, 2124, 2132], "rerout": 28, "sync": [28, 32, 55, 63, 64, 490, 1738, 2078, 2080, 2085, 2130, 2135], "group_gloo": 28, "29501": 28, "monitoredbarri": 28, "transport": [28, 2109], "598": 28, "2401": 28, "db00": 28, "eef0": 28, "1100": 28, "3560": 28, "1c05": 28, "25d": 28, "8594": 28, "twolinlayernet": 28, "ddp": [28, 29, 30, 32, 33, 55, 685, 1588, 1738, 2043, 2078, 2080, 2109, 2136], "i0607": 28, "739390": 28, "515217": 28, "173": 28, "broadcast_buff": [28, 1738], "bucket_cap_byt": 28, "26214400": 28, "find_unused_paramet": [28, 1738, 2080], "gradient_as_bucket_view": [28, 1738], "is_multi_device_modul": 28, "num_parameter_tensor": 28, "total_parameter_size_byt": 28, "440": 28, "bucket_s": 28, "module_nam": [28, 64, 825, 865, 2102], "nccl_async_error_handl": [28, 2078], "nccl_blocking_wait": 28, "nccl_ib_timeout": 28, "nccl_nthread": 28, "58": [28, 2139], "085681": 28, "544067": 28, "344": 28, "unused_parameter_s": 28, "40838608": 28, "5983335": 28, "4326421": 28, "comp": [28, 35], "4207652": 28, "085693": 28, "544066": 28, "42850427": 28, "3885553": 28, "2357981": 28, "2234674": 28, "enhanc": [28, 55, 2132], "unus": [28, 32, 47, 64, 925, 1057, 1071, 1294, 1301, 1509, 1738, 1802, 2044, 2046, 2047, 2078, 2080, 2087, 2102], "went": [28, 64, 2133], "wasn": [28, 47, 1361, 2044], "va": 28, "lue": 28, "indirectli": 28, "outstand": [28, 2109], "stuck": [28, 37, 50, 2149], "uninform": 28, "root": [28, 30, 33, 40, 47, 48, 52, 55, 64, 799, 1185, 1199, 1327, 1328, 1563, 1703, 1737, 1824, 1888, 1947, 2057, 2075, 2084, 2085, 2102, 2109, 2110, 2114, 2136], "nontrivi": [28, 1203, 1214, 2078, 2132], "reveal": [28, 2080, 2130], "default_pg": 28, "opt": [28, 32, 1301, 2044, 2085, 2086], "longtensor": [28, 33, 138, 139, 140, 319, 321, 323, 456, 475, 517, 519, 521, 885, 886, 1230, 1264, 1311, 1434, 1490, 1491, 1551, 1645, 1646, 1692, 1793, 1893, 1930, 1943, 1969, 1977, 2010, 2117, 2120], "set_debug_level": 28, "set_debug_level_from_env": 28, "get_debug_level": 28, "disterror": 28, "distbackenderror": 28, "thrown": [28, 63, 621, 889, 891, 1075, 1117, 1253, 1289, 1320, 1329, 1331, 1333, 1336, 1337, 1348, 1548, 1706, 1744, 2008, 2097, 2102, 2149], "distnetworkerror": 28, "ex": [28, 39, 1203, 1738, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 2060, 2144], "diststoreerror": 28, "skip": [28, 47, 53, 870, 985, 1119, 1173, 1211, 1319, 1320, 1457, 1458, 1459, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 1926, 1997, 2044, 2071, 2074, 2075, 2078, 2080, 2081, 2089, 2101, 2103, 2109, 2132, 2136, 2137, 2143], "outlin": [29, 2085, 2110, 2136], "joinabl": [29, 32, 1738, 2043], "joinhook": [29, 2043], "throw_on_early_termin": [29, 1738], "shadow": [29, 32, 1738, 2124, 2125], "notify_join_context": 29, "zeroredundancyoptim": [29, 32, 1738, 2043], "vacuou": 29, "inherit": [29, 1772, 2044, 2046, 2067, 2081, 2089, 2091], "join_hook": [29, 32, 1738], "join_devic": [29, 32], "join_process_group": [29, 32], "repeatedli": [29, 2078, 2114], "main_hook": 29, "post_hook": 29, "is_last_join": 29, "dcp": 30, "reshard": [30, 55], "storag": [30, 55, 225, 315, 343, 346, 347, 439, 462, 487, 503, 524, 528, 562, 563, 588, 589, 591, 592, 889, 909, 911, 912, 916, 1042, 1110, 1171, 1260, 1264, 1275, 1289, 1297, 1361, 1383, 1443, 1444, 1484, 1548, 1565, 1875, 1889, 1896, 1926, 1931, 1935, 1949, 1973, 1979, 1996, 2019, 2042, 2043, 2045, 2051, 2058, 2064, 2067, 2075, 2078, 2091, 2094, 2102, 2109, 2114, 2117, 2118, 2120, 2135], "entrypoint": [30, 34, 37, 40, 45, 48, 49, 52, 2051, 2064], "state_dict_sav": 30, "checkpoint_id": 30, "storage_writ": 30, "planner": 30, "style": [30, 34, 36, 64, 888, 1114, 1170, 1793, 1823, 2044, 2046, 2047, 2099, 2102, 2119, 2137], "shardedtensor": [30, 55], "dtensor": [30, 34, 55, 685], "save_state_dict": [30, 2043], "fsdp": [30, 33, 55, 490, 685, 2043, 2123, 2136], "shardingstrategi": [30, 55, 2043], "hybrid_shard": [30, 55], "shard_group": 30, "pathlik": [30, 52, 64, 1361, 1889, 2102], "storagewrit": [30, 2043], "writer": [30, 2060, 2089, 2119], "saveplann": [30, 2043], "my_model": [30, 1738, 2044, 2130, 2136, 2145], "mymodul": [30, 52, 53, 55, 64, 1293, 1294, 1296, 1300, 1301, 1307, 1549, 1550, 1558, 1559, 2044, 2046, 2047, 2083, 2094, 2109], "fs_storage_writ": 30, "filesystemwrit": [30, 2043], "async_sav": [30, 2043], "de": [30, 2046, 2102, 2104], "checkpoint_futur": 30, "coordinator_rank": 30, "no_dist": 30, "state_dict_load": 30, "storage_read": 30, "fullfil": 30, "po": [30, 2099], "storageread": [30, 2043], "reader": [30, 2133], "loadplann": [30, 2043], "adagrad": [30, 1490, 2054, 2101, 2109], "model_state_dict": [30, 2085, 2097], "fs_storage_read": 30, "filesystemread": [30, 2043], "asyncstag": [30, 2043], "stage_data": 30, "opportun": [30, 1320, 2044, 2110, 2135, 2136], "reflect": [30, 59, 462, 524, 560, 1172, 1173, 1176, 1286, 1475, 1476, 1477, 1524, 1525, 1526, 1570, 1571, 1572, 1654, 1693, 1789, 1842, 1954, 2044, 2045, 2083, 2118, 2130], "ram": [30, 1361, 2078], "should_synchronize_after_execut": 30, "assumpt": [30, 34, 44, 48, 52, 930, 986, 1467, 1501, 2051, 2075, 2080, 2086, 2109, 2110, 2114, 2132, 2133, 2136, 2141, 2145], "responds": 30, "synchronize_stag": 30, "innocul": 30, "statefult": 30, "blockingasyncstag": [30, 2043], "cache_staged_state_dict": 30, "type_check": 30, "automodul": 30, "act": [30, 35, 37, 45, 60, 869, 1461, 1549, 1550, 1559, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1773, 1774, 1775, 1776, 1777, 1995, 2078, 2089, 2093, 2101, 2133], "told": [30, 2046], "role": [30, 37, 39, 47, 48], "read_metadata": 30, "set_up_storage_read": 30, "prepare_local_plan": 30, "prepare_global_plan": 30, "read_data": 30, "central": [30, 66, 1243, 2086, 2088], "loadplan": [30, 2043], "storage_data": 30, "load_byt": 30, "bytesio": [30, 52, 1297, 1300, 1361, 1889, 2104], "resolve_tensor": 30, "storagelay": 30, "schedul": [30, 37, 40, 46, 63, 685, 1824, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2043, 2053, 2080, 2084, 2088, 2103, 2136], "checkpiont_id": 30, "is_coordin": 30, "validate_checkpoint_id": 30, "stroag": 30, "set_up_storage_writ": 30, "write_data": 30, "mark": [30, 33, 47, 63, 64, 66, 71, 75, 490, 835, 911, 912, 913, 916, 939, 986, 988, 1197, 1405, 1406, 1738, 1801, 2044, 2046, 2075, 2080, 2081, 2089, 2094, 2102, 2103, 2110, 2120, 2126, 2130, 2133, 2136, 2137], "recover": 30, "writeresult": 30, "saveplan": [30, 2043], "storage_meta": 30, "storagemeta": 30, "todo": [30, 33, 84, 85, 835, 870, 872, 873, 1213, 2125, 2135, 2141], "resolve_data": 30, "writeitem": [30, 2043], "tensor_data": 30, "set_up_plann": 30, "create_local_plan": 30, "create_global_plan": 30, "commit_tensor": 30, "defaultloadplann": [30, 2043], "rewrit": [30, 52, 60, 66, 74, 75, 84, 85, 2057, 2075, 2086, 2096, 2097, 2099, 2133, 2134], "requit": 30, "intrincaci": 30, "renameplann": 30, "state_dict_typ": [30, 55], "original_state_dict": 30, "foo_": [30, 1177], "flatten_sharded_tensor": 30, "_flatten_sharded_tensor": 30, "flatten_state_dict": 30, "read_item": 30, "dest_index": 30, "fqn": [30, 33, 34, 52, 2059, 2125], "weights_onli": [30, 1361, 2042, 2058, 2094], "metamodelmateri": 30, "defaultsaveplann": [30, 2043], "global_plan": 30, "finish_plan": 30, "central_plan": 30, "resolve_byt": 30, "alia": [30, 35, 41, 52, 95, 96, 115, 191, 192, 357, 410, 440, 441, 448, 527, 545, 687, 794, 877, 878, 879, 880, 881, 882, 883, 905, 948, 979, 995, 996, 1105, 1112, 1115, 1126, 1127, 1128, 1130, 1131, 1157, 1234, 1244, 1245, 1257, 1258, 1259, 1267, 1287, 1289, 1316, 1317, 1324, 1340, 1344, 1347, 1375, 1385, 1386, 1396, 1435, 1437, 1447, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1548, 1665, 1742, 1780, 1796, 1844, 1849, 1852, 1887, 1909, 1924, 1927, 1929, 1956, 1960, 1961, 1981, 1987, 2011, 2047, 2051, 2081, 2100, 2115, 2116, 2120, 2135, 2140], "readitem": [30, 2043], "planner_data": 30, "loaditemtyp": 30, "metadataindex": 30, "dest_offset": 30, "storage_index": 30, "storage_offset": [30, 142, 524, 621, 889, 2045, 2051, 2100, 2140], "tandem": 30, "fp16planner": 30, "write_item": 30, "writeitemtyp": 30, "byte_io": 30, "itertool": [30, 35, 969, 982], "islic": 30, "dataclass": [30, 52, 53, 2144], "ddploadbalancingplann": 30, "all_plan": 30, "saveextradataplann": 30, "merged_data": 30, "new_plan": 30, "idempot": [30, 2109, 2111], "safeti": [30, 37, 52, 64, 490, 985, 986, 1213, 2044, 2047, 2066, 2093, 2137], "hi": [30, 1518, 1519, 2044, 2046, 2086, 2133], "peak": [30, 32, 55, 1067, 1069, 1075, 1083, 1084, 1085, 1738, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1832, 1839, 2084, 2142], "late": [30, 47, 490], "tensor_storage_s": 30, "single_file_per_rank": 30, "sync_fil": 30, "thread_count": 30, "per_thread_copy_ahead": 30, "10000000": 30, "simplif": [30, 2132], "atom": [30, 47, 64, 2048], "distributedtensor": [30, 34], "dedup_replicated_tensor": 30, "dedup_save_to_lowest_rank": 30, "lookup_object": 30, "transform_object": 30, "allow_partial_load": 30, "lookup_tensor": 30, "transform_tensor": 30, "legaci": [30, 36, 48, 1656, 2103, 2117, 2120], "layer1": 30, "unparallel": 30, "tackl": [30, 2136], "get_model_state_dict": [30, 2043], "get_optimizer_state_dict": [30, 2043], "uniform": [30, 485, 612, 953, 1483, 1567, 1637, 1866, 1867, 1914, 2043, 2073, 2100, 2123, 2140], "get_state_dict": [30, 2043], "fully_shard": 30, "tensor_parallel": 30, "parallelize_modul": [30, 34, 2043], "hide": [30, 33, 61, 1188, 2007, 2082], "canon": [30, 37, 40, 1199, 1210, 2044, 2135], "named_paramet": [30, 52, 55, 57, 59, 1176, 1289, 1293, 1548, 2089, 2094, 2101], "named_buff": [30, 52, 55, 1289, 1548, 2089, 2094], "fullyshardeddataparallel": [30, 685, 2043, 2084], "fsdp_model": [30, 55], "deepcopi": [30, 59, 2104, 2125], "fsdp_optim": 30, "ddp_optim": 30, "ddp_state_dict": 30, "ddp_optim_state_dict": 30, "fsdp_state_dict": 30, "fsdp_optim_state_dict": 30, "ddp_optim_st": 30, "statedictopt": [30, 2043], "valuetyp": 30, "optimizerstatetyp": 30, "set_state_dict": [30, 2043], "optim_state_dict": [30, 55], "counterpart": [30, 868, 875, 1359, 1738, 2047, 2057, 2068, 2123, 2124, 2132, 2136], "missing_kei": [30, 1289, 1548], "miss": [30, 45, 694, 1176, 1205, 1289, 1384, 1394, 1481, 1510, 1511, 1512, 1548, 1671, 1789, 2055, 2081, 2095, 2099, 2114, 2132, 2137, 2148], "unexpected_kei": [30, 1289, 1548], "set_model_state_dict": [30, 2043], "set_optimizer_state_dict": [30, 2043], "full_state_dict": [30, 55], "cpu_offload": [30, 55], "ignore_frozen_param": 30, "keep_submodule_prefix": 30, "broadcast_from_rank0": 30, "flatten_optimizer_state_dict": 30, "offload": [30, 55], "oom": [30, 33, 55, 2062, 2083, 2147], "rank0": [30, 37, 47, 55], "frozen": [30, 32, 55, 1203, 1293, 1299, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 2048, 2095], "offlin": [30, 1300], "betwe": 30, "format_util": 30, "dcp_to_torch_sav": [30, 2043], "dcp_checkpoint_dir": 30, "torch_save_path": 30, "torch_save_to_dcp": [30, 2043], "onlin": [30, 64, 1806], "broadcastingtorchsaveread": [30, 2043], "dynamicmetaloadplann": [30, 2043], "sd": [30, 774, 779], "path_to_model": 30, "incurr": 30, "hopefulli": [30, 2084, 2135], "extnd": 30, "quickstart": 31, "agent": [31, 39, 40, 41, 44, 46, 48, 50, 2109], "expir": 31, "metric": [31, 1067, 1069, 1075, 1841, 2060, 2089, 2103, 2119, 2136, 2142], "plane": [31, 37, 47, 743, 744, 745, 746, 747, 748, 771, 772, 773, 774, 777, 778, 779, 787, 788, 1107, 1449, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1475, 1476, 1477, 1478, 1479, 1480, 1495, 1496, 1515, 1516, 1517, 1520, 1536, 1541, 1542, 1543, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1649, 1650, 1672, 1675, 1676, 1677, 1679, 1680, 1681, 1755, 1791, 1862, 1863, 1885], "kubernet": 31, "distributedoptim": [32, 1738, 2043, 2109, 2110], "rref": [32, 1738, 2043, 2047, 2110], "optimizer_class": 32, "params_rref": 32, "get_gradi": [32, 2100, 2109, 2110], "multithread": [32, 928, 2078], "dist_autograd": [32, 1738, 2109, 2110], "rpc": [32, 63, 1738, 2043, 2047, 2110, 2111], "context_id": [32, 1738, 2109, 2110], "rref1": [32, 2109, 2110], "worker1": [32, 63, 1738, 2109, 2110], "rref2": [32, 2109, 2110], "to_her": [32, 1738, 2100, 2109, 2110, 2111], "dist_optim": [32, 1738, 2110], "postlocalsgdoptim": [32, 2043], "afer": 32, "modelaverag": 32, "localsgd": 32, "model_averag": 32, "post_localsgd_hook": 32, "postlocalsgdst": 32, "subgroup": 32, "start_localsgd_it": 32, "warmup_step": 32, "local_optim": 32, "periodicmodelaverag": 32, "checkpoint": [32, 33, 48, 51, 55, 942, 1361, 1738, 2042, 2043, 2058, 2083, 2084, 2085, 2094, 2097, 2111, 2130], "parameters_as_bucket_view": 32, "overlap_with_ddp": 32, "consumpt": [32, 59, 1792, 2114, 2119, 2126], "partit": [32, 33, 34, 1452, 1706, 1980, 2099, 2100, 2110, 2111, 2136, 2144], "registr": [32, 63, 1061, 1730, 1735, 1736, 1738, 1756, 1759, 2051, 2097, 2102, 2131], "offset": [32, 229, 230, 231, 232, 343, 524, 562, 751, 889, 1107, 1108, 1109, 1110, 1173, 1324, 1491, 1610, 1611, 1646, 1738, 1859, 1860, 1938, 1984, 1986, 2045, 2047, 2094, 2134, 2140], "intact": [32, 2109], "ddp_zero_hook": 32, "disjointli": 32, "trail": [32, 1782, 1784, 2067, 2073, 2076, 2081], "wari": 32, "static_graph": [32, 1738], "third": [32, 35, 1118, 1119, 1379, 1452, 1459, 1477, 1480, 1517, 1543, 1839, 1841, 2043, 2044, 2051, 2078, 2082, 2085, 2089, 2102, 2103, 2133], "add_param_group": [32, 1759, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827], "param_group": [32, 55, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1820, 1823, 1824, 1825, 1826, 1827, 1835, 1838], "trainabl": [32, 1064, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1823, 1824, 1825, 1826, 1827, 2081], "consolidate_state_dict": 32, "consolid": [32, 55], "pertain": 32, "alpha": [33, 35, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 155, 156, 316, 317, 492, 558, 565, 566, 567, 568, 690, 691, 694, 695, 696, 749, 775, 780, 951, 1061, 1062, 1247, 1261, 1456, 1466, 1489, 1536, 1576, 1620, 1628, 1643, 1644, 1654, 1672, 1707, 1803, 1824, 1917, 1918, 1931, 1936, 1950, 1955, 1956, 2045, 2075, 2081, 2099, 2101, 2136, 2140], "migrat": [33, 48, 56, 1391, 1791, 2085, 2107], "pippi": 33, "micro": 33, "convent": [33, 47, 52, 55, 64, 339, 972, 1119, 1137, 1139, 1163, 1186, 1201, 1203, 1462, 1463, 1464, 1510, 1511, 1512, 1588, 1886, 1889, 1988, 2042, 2051, 2058, 2067, 2075, 2086, 2089, 2094], "promis": 33, "intrus": [33, 2081], "toolkit": [33, 64], "said": [33, 919, 920, 921, 922, 923, 924, 985, 2054, 2092, 2133], "gpipe": 33, "1f1b": 33, "interleav": [33, 1831], "bf": [33, 1597, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "pp": [33, 1286, 1501, 1921], "compos": [33, 34, 35, 59, 64, 743, 744, 745, 746, 747, 748, 771, 772, 777, 778, 779, 787, 788, 974, 1178, 1180, 1181, 1182, 1188, 1289, 1449, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1475, 1476, 1477, 1478, 1479, 1480, 1495, 1496, 1515, 1516, 1517, 1536, 1541, 1542, 1543, 1548, 1597, 1602, 1603, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1629, 1630, 1631, 1632, 1633, 1634, 1649, 1650, 1672, 1675, 1676, 1677, 1679, 1680, 1681, 1862, 1863, 2007, 2043, 2044, 2047, 2065, 2081, 2082, 2085, 2089, 2097, 2099, 2102, 2119, 2140, 2141], "torchtitan": 33, "3d": [33, 706, 709, 712, 740, 745, 748, 772, 774, 779, 784, 1391, 1451, 1455, 1459, 1462, 1464, 1477, 1480, 1487, 1488, 1494, 1496, 1510, 1512, 1517, 1543, 1554, 1601, 1615, 1618, 1619, 1623, 1631, 1634, 1642, 1648, 1650, 1665, 1677, 1681, 1693, 1725, 2067, 2092, 2104, 2114, 2119], "llama": [33, 2084], "pipeliningshapeerror": 33, "paral": 33, "portion": [33, 55, 1168, 1484, 1580, 1695, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 2105, 2137, 2145], "traceabl": [33, 52, 64, 629, 825, 1208, 2044, 2051, 2104, 2132], "appeal": 33, "schedulegpip": 33, "n_microbatch": 33, "in_dim": [33, 60, 61, 903, 916, 917, 1178, 1188, 2007, 2051, 2082], "servic": [33, 39, 2080, 2132], "condens": 33, "partition": 33, "model_arg": [33, 2097], "modelarg": 33, "tok_embed": 33, "moduledict": [33, 1753, 1754, 1755, 2046, 2089], "layer_id": 33, "n_layer": 33, "transformerblock": [33, 34, 2084], "token": [33, 47, 1016, 1053, 1054, 1064, 2042, 2048, 2138, 2140], "freqs_ci": 33, "meta": [33, 49, 53, 55, 59, 64, 340, 1211, 2043, 2051, 2097, 2109, 2117, 2119, 2121, 2132, 2135, 2137, 2144], "num_stag": 33, "stage_index": 33, "elif": [33, 64, 1296, 1513, 2046, 2047, 2087, 2097, 2133, 2144], "input_arg": [33, 52, 1801, 2099], "example_input_microbatch": 33, "output_arg": 33, "emb": [33, 1110, 1896, 1926], "modulelist": [33, 1577, 2089], "lmhead": 33, "lin": 33, "in_featur": [33, 59, 725, 733, 734, 737, 738, 761, 769, 1186, 1289, 1452, 1533, 1535, 1548, 1728, 1753, 1754, 1755, 1787, 1788, 1791, 2055, 2089], "out_featur": [33, 59, 725, 733, 734, 737, 738, 761, 769, 1186, 1289, 1465, 1533, 1535, 1548, 1728, 1753, 1754, 1755, 1787, 1788, 1791, 2055, 2089], "proj": [33, 1518], "splitpoint": 33, "pipe": [33, 37, 50, 2109, 2149], "mod": [33, 52, 53, 64, 726, 727, 737, 743, 744, 745, 750, 751, 761, 769, 818, 819, 820, 821, 845, 846, 875, 1176, 1292, 1293, 1299, 1306, 1789, 1999, 2046, 2047, 2059, 2102, 2124, 2131, 2145], "mb_arg": 33, "split_spec": 33, "submod_0": 33, "interpretermodul": [33, 52], "submod_1": 33, "reconstruct": [33, 1018, 1379, 1460, 1461, 2071, 2086, 2094, 2102, 2133], "replai": [33, 1016, 1053, 2078, 2097, 2103, 2130, 2133, 2145], "stage_mod": 33, "get_stage_modul": 33, "stage_idx": 33, "build_stag": 33, "dp_mod": 33, "kept": [33, 55, 59, 64, 702, 784, 790, 1462, 1463, 1464, 1510, 1511, 1512, 1588, 1665, 1706, 1725, 2047, 2064, 2084, 2107, 2114], "huggingfac": [33, 2138, 2142], "gpt2": 33, "acycl": [33, 53, 798, 2075, 2133], "dag": [33, 53, 2078, 2133], "pipelininig": 33, "truli": [33, 64, 2051, 2096, 2099], "almost": [33, 1336, 1337, 2095, 2133, 2135, 2143], "pipelineschedulesingl": 33, "pipelineschedulemulti": 33, "schedule1f1b": 33, "scheduleflexibleinterleaved1f1b": 33, "scheduleinterleaved1f1b": 33, "scheduleloopedbf": 33, "mb_kwarg": 33, "split_polici": 33, "marker": [33, 1018, 1402, 2012], "split_gm": 33, "has_loss_and_backward": 33, "loss_spec": 33, "pipe_split": 33, "mm_param": 33, "tensorchunkspec": 33, "split_dim": [33, 2100, 2140], "split_args_kwargs_into_chunk": 33, "args_chunk_spec": 33, "kwargs_chunk_spec": 33, "spec": [33, 37, 39, 50, 52, 53, 66, 799, 800, 828, 829, 830, 833, 834, 835, 2097, 2106, 2120], "kwargs_split": 33, "args_split": 33, "merge_chunk": 33, "chunk_spec": 33, "dw_builder": 33, "oppos": [33, 911, 914, 916, 917, 985, 2082], "_pipelinestagebas": 33, "pipelinescheul": 33, "stage_modul": 33, "pipe_info": 33, "pipeinfo": 33, "_pipelinestag": 33, "output_merge_spec": 33, "drain": 33, "steadi": 33, "enable_zero_bubbl": 33, "relax": [33, 35, 1016, 1053, 1305, 1306, 1759, 2104, 2136], "num_microbatch": 33, "pp_size": 33, "flex_pp": 33, "num_round": 33, "pp_group_siz": 33, "zb1p": 33, "openreview": 33, "pdf": [33, 262, 1467, 1921, 2062, 2075], "tuztn0eio5": 33, "arxiv": [33, 35, 1518, 1568, 1595, 1755, 1791, 1847, 1901, 1959, 2075, 2120], "2104": [33, 1119], "04473": 33, "ab": [33, 35, 94, 95, 630, 631, 687, 971, 1119, 1321, 1342, 1343, 1345, 1346, 1359, 1362, 1518, 1568, 1595, 1598, 1600, 1695, 1755, 1791, 1794, 1841, 1847, 1851, 1901, 2043, 2045, 2047, 2065, 2066, 2067, 2078, 2089, 2100, 2114, 2120, 2130, 2131, 2133, 2134, 2136, 2140, 2145], "2211": 33, "05953": 33, "simliar": 33, "_step_microbatch": 33, "stage_index_to_group_rank": 33, "use_full_backward": 33, "colwis": 34, "parallelize_plan": 34, "sub_modul": 34, "parallelstyl": 34, "devicemesh": [34, 55, 2043], "slice": [34, 52, 64, 66, 75, 77, 611, 700, 701, 1201, 1462, 1463, 1464, 1582, 1584, 1588, 1712, 1713, 1790, 1878, 1895, 1896, 1926, 1937, 1989, 2044, 2048, 2067, 2078, 2099, 2100, 2114, 2115, 2118, 2120, 2136, 2140], "colwiseparallel": [34, 2043], "tp_mesh": 34, "w1": [34, 64], "w2": [34, 64], "rowwiseparallel": [34, 2043], "mlp": [34, 1728, 2097, 2104], "input_layout": 34, "output_layout": 34, "use_local_output": 34, "sharded_mod": 34, "mind": [34, 1335, 1353, 1490, 2051, 2075, 2082, 2086, 2104, 2127, 2136, 2143], "sequenceparallel": [34, 2043], "sequence_dim": 34, "layernorm": [34, 1502, 1510, 1511, 1512, 1592, 1594, 1596, 1668, 2067, 2106, 2145], "rmsnorm": [34, 1703], "redistribut": [34, 2095], "preparemoduleinput": [34, 2043], "desired_input_layout": 34, "input_kwarg_layout": 34, "desired_input_kwarg_layout": 34, "placehold": [34, 52, 64, 82, 807, 827, 833, 843, 1201, 1203, 1509, 2078, 2131, 2134, 2144], "attn": [34, 1594, 1596], "preparemoduleoutput": [34, 2043], "desired_output_layout": 34, "loss_parallel": [34, 2043], "crossentropyloss": [34, 1555, 1637, 2085], "logit": [34, 35, 395, 1461, 1483, 1627, 1637, 1656, 2045, 2100, 2115], "truth": [34, 1483, 1637, 2054, 2119], "label_smooth": [34, 1483, 1637, 2045], "dist_input": 34, "distribute_tensor": 34, "randint": [34, 548, 954, 1005, 1101, 1162, 1467, 1598, 1637, 1638, 1746, 1747, 1939, 2045, 2049, 2066, 2100, 2119, 2123], "parameteriz": 35, "tensorflow": [35, 1824, 2075, 2119], "surrog": 35, "likelihood": [35, 1452, 1501, 1555, 1562, 1651, 1690, 1698], "ratio": [35, 37, 621, 1495, 1496, 1649, 1650, 2045, 2062, 2078, 2114, 2123, 2142], "reinforc": [35, 1578, 1709], "reparameter": [35, 1176, 1755, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777, 1778, 1779, 1791], "trick": [35, 922, 1461, 1656, 2075, 2086, 2088, 2136], "autoencod": 35, "whilst": [35, 2078], "densiti": [35, 262, 305, 1251, 1252, 1921, 2045, 2115], "log_prob": [35, 1452, 1467, 1638, 2045], "theta": [35, 1619, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 2045], "pi": [35, 177, 381, 703, 961, 1247, 1248, 1341, 1497, 1562, 1652, 1698, 1830, 1831, 1851, 1912, 1913, 1916, 1917, 1918, 1919, 1954, 2046, 2047, 2102, 2115], "reward": 35, "ascent": 35, "prob": [35, 2045], "policy_network": 35, "next_stat": 35, "rsampl": 35, "parameter": [35, 381, 458, 1296, 2068, 2114], "has_rsampl": 35, "batch_shap": 35, "event_shap": 35, "validate_arg": 35, "arg_constraint": 35, "cdf": 35, "cumul": [35, 37, 1098, 1099, 1100, 1101, 1102, 1369, 1462, 1463, 1464, 1497, 1521, 1522, 1523, 1588, 1652], "mass": 35, "enumerate_support": 35, "discret": [35, 54, 485, 490, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1154, 1156, 1656, 1921, 2062, 2119, 2123], "cardin": [35, 1391], "univari": 35, "singleton": [35, 258, 1520, 1563, 1737, 1994, 2076], "cartesian": [35, 969, 1391, 1851], "_instanc": 35, "icdf": 35, "perplex": 35, "sample_shap": 35, "sample_n": 35, "set_default_validate_arg": 35, "mimic": [35, 1839], "stddev": 35, "varianc": [35, 1005, 1462, 1463, 1464, 1492, 1501, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1588, 1647, 1651, 1749, 1751, 1805, 1823, 1824, 1861, 1870, 1871, 2002, 2003, 2073, 2089], "exp_famili": 35, "famili": 35, "p_": [35, 973, 1381, 1826], "langl": 35, "rangl": 35, "denot": [35, 52, 64, 177, 1005, 1213, 1310, 1329, 1335, 1348, 1358, 1475, 1476, 1513, 1756, 1759, 1826, 1940, 1941, 1942, 1944, 1945, 2004, 2055, 2086, 2107, 2110, 2114], "carrier": 35, "analyt": [35, 930, 931, 1645, 2114], "bregman": 35, "courtesi": 35, "frank": 35, "nielsen": 35, "richard": 35, "nock": 35, "70": [35, 946, 1348, 1857, 2067], "odd": [35, 1140, 1141, 1142, 1150, 1151, 1152, 1629, 1630, 1631], "interv": [35, 50, 262, 876, 949, 1001, 1169, 1405, 1406, 1842, 1866, 1867, 1914, 2060, 2078, 2084, 2103, 2149], "lower_bound": 35, "upper_bound": 35, "has_enumerate_support": 35, "param_shap": 35, "concentration1": 35, "concentration0": 35, "concentr": 35, "1046": 35, "1st": [35, 2076, 2084], "2nd": [35, 621, 1556, 1583, 1693, 2076], "greaterthan": 35, "total_count": 35, "71": 35, "trial": [35, 290], "integergreaterthan": 35, "ldot": [35, 290, 1321, 1329, 1360, 1376, 1391, 1520, 1541, 1542, 1543, 1563, 1737, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "unnorm": [35, 1483, 1627, 1637, 1656], "likewis": [35, 1979], "25": [35, 500, 590, 591, 592, 946, 971, 1251, 1357, 1362, 1493, 1551, 1553, 1556, 1728, 1738, 1784, 1786, 1810, 1839, 1858, 2001, 2044, 2114, 2115], "independentconstraint": 35, "simplex": 35, "loc": [35, 1361], "lorentz": 35, "3214": 35, "width": [35, 784, 790, 869, 1250, 1251, 1252, 1458, 1459, 1476, 1477, 1479, 1480, 1516, 1517, 1542, 1543, 1555, 1583, 1601, 1665, 1725, 2066, 2114], "df": 35, "chi": 35, "continuous_bernoulli": 35, "lim": [35, 1286], "499": 35, "501": 35, "2538": [35, 1321], "pervas": 35, "loaiza": 35, "ganem": 35, "cunningham": 35, "jp": 35, "1907": 35, "06845": 35, "8954": 35, "greaterthaneq": 35, "df1": 35, "df2": 35, "fisher": 35, "snedecor": 35, "2453": 35, "degre": [35, 1005, 1096, 1103, 1289, 1327, 1328, 1548, 1557, 1597, 1738, 1865, 1885, 1952, 1953, 2002, 2003, 2045, 2086, 2100, 2114], "freedom": [35, 1005, 1952, 1953, 2002, 2003, 2086], "geometric_": [35, 2045, 2123], "0124": 35, "half_cauchi": 35, "half_norm": 35, "base_distribut": 35, "reinterpreted_batch_ndim": 35, "reinterpret": [35, 503, 2135], "diagon": [35, 60, 228, 264, 599, 600, 601, 602, 962, 1001, 1005, 1106, 1107, 1108, 1110, 1119, 1132, 1181, 1182, 1233, 1319, 1331, 1333, 1336, 1348, 1352, 1609, 1610, 1611, 1695, 1706, 1938, 1978, 1982, 1983, 1984, 1985, 1986, 2045, 2081, 2100, 2118, 2140], "multivari": [35, 1434, 2115], "multivariate_norm": 35, "mvn": 35, "scale_tril": 35, "diag": [35, 61, 1180, 1181, 1182, 1325, 1326, 1353, 1847, 1938, 1958, 1959, 2045, 2100], "diagn": 35, "inverse_gamma": 35, "2953": 35, "1729": [35, 2089], "lkj_choleski": 35, "lkj": 35, "matric": [35, 264, 691, 694, 951, 963, 964, 973, 974, 975, 976, 1107, 1233, 1310, 1319, 1320, 1321, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1362, 1370, 1379, 1381, 1394, 1498, 1557, 1619, 1653, 1753, 1759, 1845, 1847, 1857, 1905, 1931, 1935, 1936, 1958, 1959, 1982, 1983, 1985, 2045, 2065, 2086, 2092, 2114, 2120], "eta": [35, 1803, 1806, 1825], "proport": [35, 1515, 1516, 1517, 1554, 1596], "det": [35, 1327, 1328, 1349, 1370, 2045, 2100], "l": [35, 740, 765, 952, 961, 967, 974, 975, 976, 1119, 1247, 1248, 1289, 1309, 1319, 1320, 1325, 1326, 1327, 1328, 1332, 1336, 1337, 1379, 1381, 1457, 1460, 1461, 1462, 1475, 1483, 1486, 1487, 1494, 1499, 1507, 1508, 1510, 1513, 1514, 1518, 1530, 1539, 1541, 1548, 1550, 1554, 1555, 1564, 1580, 1597, 1598, 1600, 1706, 1765, 1774, 1782, 1784, 1810, 1893, 1954, 2045, 2047, 2071, 2075, 2119, 2133, 2134, 2145], "lkjcorr": 35, "onion": 35, "3x3": [35, 1102, 1980], "3516": 35, "9361": 35, "1899": [35, 1392], "4748": 35, "8593": 35, "vine": 35, "2009": [35, 1847, 1959], "lewandowski": 35, "dorota": 35, "kurowicka": 35, "harri": [35, 1921], "joe": 35, "journal": [35, 1864], "1016": 35, "jmva": 35, "04": [35, 1162, 1367, 1914, 1921], "008": 35, "corrcholeski": 35, "log_norm": [35, 2100], "lowrank_multivariate_norm": 35, "cov_factor": 35, "cov_diag": 35, "covari": [35, 964, 1001, 1005, 1462, 1463, 1464, 1588, 1847], "covariance_matrix": 35, "2102": 35, "5429": [35, 1982], "woodburi": 35, "lemma": 35, "formula": [35, 91, 773, 774, 900, 902, 916, 917, 952, 961, 1247, 1248, 1315, 1381, 1382, 1562, 1622, 1623, 1713, 1826, 1860, 1913, 2051, 2081, 2086, 2103, 2108, 2114, 2132], "capacit": 35, "precision_matrix": 35, "mixture_same_famili": 35, "mixture_distribut": 35, "component_distribut": 35, "rightmost": [35, 964, 1251, 1252, 2047], "gaussian": [35, 1497, 1501, 1578, 1651, 1652, 1709, 1920, 2115], "gmm": 35, "bivari": 35, "categori": [35, 40, 86, 2047, 2049, 2099, 2101, 2103, 2105, 2117, 2139, 2141], "innermost": [35, 64, 237, 1243, 1252, 1893], "1338": 35, "mathbf": [35, 1310, 1754, 1755, 1788, 1791, 1825], "sigma": [35, 177, 381, 765, 1461, 1498, 1499, 1500, 1518, 1519, 1578, 1579, 1653, 1709, 1754, 1788, 1915, 1952, 1953, 2002, 2003, 2045], "triangular": [35, 974, 975, 976, 1319, 1320, 1326, 1328, 1336, 1337, 1344, 1347, 1348, 1350, 1352, 1608, 1609, 1610, 1611, 1695, 1706, 1832, 1857, 1982, 1983, 1984, 1985, 1986], "decomposit": [35, 52, 53, 64, 83, 974, 975, 976, 1233, 1319, 1320, 1325, 1326, 1327, 1328, 1329, 1331, 1336, 1337, 1338, 1339, 1344, 1348, 1349, 1353, 1354, 1379, 1381, 1753, 1845, 1847, 1851, 1857, 1958, 1959, 2043, 2092, 2132, 2135, 2144], "positivedefinit": 35, "lowercholeski": 35, "negative_binomi": 35, "halfopeninterv": 35, "mu": [35, 381, 1824, 1826], "one_hot_categor": 35, "onehot": 35, "5623": 35, "nonneg": [35, 1598, 1847, 1959, 2115], "pmf": 35, "mathrm": [35, 953, 1327, 1328, 1329, 1330, 1341, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1557, 1562, 1563, 1588, 1737, 1753, 1807, 1808, 1809, 1825, 1861, 2075, 2115], "relaxed_bernoulli": 35, "temperatur": [35, 1656, 2043], "parametr": [35, 1176, 1756, 1763, 1788, 1789, 1791, 2068, 2081], "reparametriz": 35, "99": [35, 1301, 1824, 2044], "2951": [35, 1389], "3442": 35, "8918": 35, "9021": 35, "maddison": 35, "2017": [35, 1592, 1594, 1596, 1939, 2095], "reparametr": [35, 1656, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1771, 1791], "jang": 35, "relaxed_categor": 35, "1294": [35, 974], "2324": [35, 1289, 1548], "3859": 35, "2523": 35, "student": 35, "transformed_distribut": 35, "composit": [35, 60, 1180, 1337, 1753, 2044, 2047, 2051, 2082, 2089, 2099], "basedistribut": 35, "dx": [35, 52, 1102, 1460, 1980, 2045, 2051, 2081, 2082, 2115], "dy": [35, 52], "logist": [35, 1578, 1581, 1709, 2115], "sigmoidtransform": 35, "affinetransform": 35, "invert": [35, 64, 1280, 1321, 1330, 1331, 1337, 1343, 1350, 1352, 1355, 1356, 1370, 1544, 1545, 1546, 1982, 2045, 2092, 2109], "3418": 35, "upper": [35, 52, 53, 185, 186, 187, 598, 801, 962, 967, 974, 975, 976, 978, 1133, 1134, 1207, 1250, 1251, 1319, 1320, 1326, 1328, 1336, 1337, 1348, 1352, 1567, 1609, 1611, 1695, 1704, 1705, 1706, 1832, 1839, 1857, 1872, 1893, 1982, 1985, 1986, 2045, 2073, 2100, 2115, 2121], "von_mis": 35, "circular": [35, 1469, 1470, 1471, 1475, 1476, 1477, 1524, 1525, 1526, 1693], "von": 35, "mise": 35, "unconstrain": [35, 1759], "angl": [35, 760, 895, 1103, 1370, 1534, 1851, 1865, 1908, 2043, 2045, 2100, 2114], "9777": 35, "radian": [35, 703, 895, 1103, 1865, 2045, 2100], "simul": [35, 492, 807, 809, 2103, 2104, 2107, 2132], "1979": 35, "152": [35, 621], "157": 35, "_rejection_sampl": 35, "88443": 35, "4784": [35, 1394], "symmetr": [35, 810, 829, 952, 961, 974, 975, 976, 1140, 1141, 1142, 1147, 1149, 1153, 1154, 1156, 1247, 1248, 1309, 1319, 1320, 1325, 1326, 1328, 1332, 1333, 1334, 1341, 1344, 1347, 1353, 1362, 1753, 1759, 1839, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2104, 2107], "x_ij": 35, "wu": [35, 1362], "2018": [35, 1362, 1855], "sawyer": 35, "2007": 35, "anderson": 35, "w": [35, 61, 154, 765, 900, 902, 904, 911, 914, 916, 917, 925, 952, 961, 985, 1005, 1178, 1205, 1230, 1247, 1248, 1286, 1329, 1450, 1451, 1458, 1459, 1461, 1463, 1464, 1476, 1477, 1483, 1487, 1488, 1490, 1491, 1492, 1499, 1511, 1512, 1520, 1531, 1532, 1542, 1543, 1553, 1554, 1555, 1560, 1561, 1583, 1599, 1600, 1602, 1603, 1619, 1627, 1645, 1646, 1654, 1690, 1696, 1697, 1754, 1755, 1788, 1791, 2045, 2051, 2065, 2066, 2073, 2075, 2081, 2086, 2101, 2102, 2119, 2143], "2003": 35, "ed": [35, 60, 1486, 1487, 2075, 2102, 2126, 2143, 2146], "odel": 35, "feiveson": 35, "1966": 35, "samplecovari": 35, "jasa": 35, "61": 35, "313": 35, "199": 35, "203": [35, 621], "ku": 35, "bloomfield": 35, "2010": [35, 2073], "ox": 35, "max_try_correct": 35, "bartlett": [35, 952], "singular": [35, 1321, 1335, 1336, 1342, 1344, 1346, 1347, 1353, 1354, 1362, 1370, 1379, 1754, 1759, 1847, 1958, 1959, 2092], "inf": [35, 52, 55, 262, 689, 691, 694, 695, 696, 896, 951, 967, 1278, 1279, 1281, 1283, 1284, 1321, 1336, 1342, 1346, 1349, 1359, 1370, 1438, 1538, 1582, 1592, 1706, 1744, 1765, 1774, 1794, 1886, 1893, 2074, 2075, 2082, 2092, 2115, 2121, 2145], "accordingli": [35, 64, 1299, 1518, 1759, 2067, 2109, 2141], "kl_diverg": 35, "kullback": [35, 1513, 1666], "leibler": [35, 1513, 1666], "notimplementederror": [35, 2051, 2055, 2102], "register_kl": 35, "type_p": 35, "type_q": 35, "pairwis": [35, 1507, 1557, 1597], "kl_normal_norm": 35, "ambigu": [35, 64, 1274, 1478, 1479, 1480, 1494, 1544, 1545, 1546, 1601, 2047], "runtimewarn": 35, "basep": 35, "derivedq": 35, "kl_version1": 35, "derivedp": 35, "baseq": 35, "kl_version2": 35, "tie": 35, "abstransform": 35, "cache_s": 35, "event_dim": 35, "affin": [35, 55, 476, 477, 478, 479, 480, 754, 756, 757, 758, 810, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1521, 1522, 1523, 1530, 1531, 1532, 1535, 1563, 1588, 1619, 1737, 2078, 2089], "cattransform": 35, "tseq": 35, "functor": [35, 1061, 1062], "submatrix": 35, "x0": [35, 2138], "t0": [35, 52, 1243, 1803, 2046], "exptransform": 35, "identity_transform": 35, "composetransform": 35, "corrcholeskytransform": 35, "uncontrain": 35, "euclidean": [35, 971, 1691], "x_i": [35, 60, 978, 1098, 1099, 1100, 1101, 1358, 1365, 1538, 1557, 1582, 1584, 1597, 1674, 1712, 1854, 1937, 1952, 1953, 1980, 2002, 2003, 2004, 2115], "stickbreakingtransform": 35, "r_i": 35, "tanh": [35, 581, 765, 770, 801, 896, 1497, 1499, 1500, 1518, 1519, 1547, 1564, 1566, 1590, 1652, 1685, 1718, 2045, 2065, 2066, 2073, 2100, 2106, 2114, 2140], "unsign": [35, 2107, 2117, 2120, 2121, 2136], "z_i": 35, "s_i": 35, "y_i": [35, 978, 1098, 1099, 1100, 1101, 1358, 1365, 1597, 1980, 2004, 2086], "sqrt": [35, 64, 381, 553, 678, 679, 765, 1001, 1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1256, 1309, 1391, 1462, 1463, 1464, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1497, 1499, 1500, 1502, 1510, 1511, 1512, 1515, 1516, 1517, 1518, 1519, 1520, 1533, 1535, 1563, 1564, 1566, 1588, 1652, 1706, 1737, 1759, 1804, 1805, 1806, 1807, 1808, 1811, 1823, 1824, 1861, 1888, 1920, 1952, 1953, 2045, 2065, 2071, 2073, 2074, 2075, 2100, 2114, 2115, 2121, 2140], "cumulativedistributiontransform": 35, "copula": 35, "base_dist": 35, "independenttransform": 35, "base_transform": 35, "log_abs_det_jacobian": 35, "lowercholeskytransform": 35, "positivedefinitetransform": 35, "powertransform": 35, "expon": [35, 272, 273, 284, 472, 473, 1162, 1169, 1313, 1343, 1452, 1536, 1691, 1854, 1864, 1901, 2045, 2117, 2120, 2140], "reshapetransform": 35, "in_shap": 35, "out_shap": 35, "softplustransform": 35, "tanhtransform": 35, "softmaxtransform": 35, "biject": 35, "hmc": 35, "stacktransform": 35, "stick": [35, 2101], "aris": [35, 64, 2075, 2132], "memoiz": [35, 2135], "_call": 35, "_invers": 35, "codomain": [35, 2075], "iff": [35, 1554], "weaker": [35, 2078], "pseudoinvers": [35, 1330, 1347, 1355], "monoton": [35, 1547, 1685, 1893], "forward_shap": 35, "inverse_shap": 35, "corr_choleski": 35, "greater_than": 35, "greater_than_eq": 35, "integer_interv": 35, "less_than": 35, "lower_choleski": 35, "lower_triangular": 35, "nonnegative_integ": 35, "one_hot": [35, 2045, 2100], "positive_integ": 35, "positive_semidefinit": 35, "positive_definit": 35, "real_vector": 35, "unit_interv": 35, "is_discret": 35, "constrain": [35, 1207, 1214, 1585, 2047, 2089], "_cat": 35, "dependent_properti": 35, "_dependentproperti": 35, "_greaterthan": 35, "_greaterthaneq": 35, "_independentconstraint": 35, "_integerinterv": 35, "_interv": 35, "half_open_interv": 35, "_halfopeninterv": 35, "is_depend": 35, "_depend": 35, "refin": [35, 52, 1296, 2066], "constraint1": 35, "constraint2": 35, "_lessthan": 35, "_multinomi": 35, "_stack": [35, 2100], "constraintregistri": 35, "biject_to": 35, "transform_to": 35, "overparameter": 35, "rotat": [35, 1885, 1958], "hamiltonian": 35, "mont": 35, "carlo": 35, "invari": [35, 52, 1780, 1933, 1940, 1941, 1942, 1943, 1944, 1945, 2111, 2114, 2130, 2144], "potential_energi": 35, "cheap": [35, 1203, 1452, 2136], "svi": 35, "fewer": [35, 52, 60, 698, 700, 701, 704, 977, 1310, 1311, 1377, 1387, 1389, 1390, 1392, 1395, 1439, 1442, 1501, 1636, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 1855, 1939, 1952, 1953, 1957, 1976, 2002, 2003, 2053, 2076, 2094, 2121, 2147], "my_constraint": 35, "my_transform": 35, "myconstraintclass": 35, "my_factori": 35, "mytransform": 35, "param1": [35, 2089], "param2": [35, 2089], "constraint_registri": 35, "my_registri": 35, "construct_transform": 35, "myconstraint": 35, "from_dlpack": [36, 891, 2043], "ext_tensor": [36, 1170], "extern": [36, 1019, 1170, 1305, 1998, 2060, 2077, 2078, 2092, 2097, 2099, 2126], "immut": [36, 1170, 2047], "__dlpack__": [36, 1170], "capsul": [36, 891, 1170], "pycapsul": [36, 1170], "to_dlpack": [36, 1170, 2043], "t2": [36, 692, 693, 891, 1116, 1170, 1243, 1738, 2000, 2109, 2110], "dltensor": [36, 1170], "t3": [36, 1170, 2110], "idiomat": 36, "inde": [36, 2044, 2054, 2102, 2111, 2141], "monitor": [37, 48, 50, 88, 1018, 1402, 1841, 2012, 2043, 2078, 2087, 2149], "unhealthi": 37, "tear": [37, 2149], "react": [37, 2141], "decentr": 37, "diagram": [37, 47, 1289, 1548, 2104, 2111, 2134, 2136, 2145], "elasticag": 37, "quad": [37, 1460, 1461, 1483, 1514, 1539, 1555, 1598, 1870], "group_result": 37, "is_fail": [37, 39], "exit_cod": 37, "return_valu": [37, 39, 45, 2133, 2134], "get_worker_group": 37, "workergroup": [37, 48], "mutabl": [37, 1305, 2044, 2051, 2102, 2119], "implementor": 37, "defens": 37, "retri": [37, 40, 50, 1075, 2109, 2111], "max_restart": [37, 39, 48], "runresult": 37, "workerspec": [37, 39, 48, 50], "local_world_s": [37, 39, 48], "rdzv_handler": [37, 39, 47], "monitor_interv": [37, 39], "local_addr": [37, 47], "blueprint": 37, "homogen": [37, 48], "rendezvoushandl": [37, 39, 47, 48], "rdzv": [37, 46, 48], "chose": [37, 2074, 2132], "tee": [37, 45], "consol": [37, 41, 44, 45, 48, 2119], "get_entrypoint_nam": 37, "__qualname__": 37, "workerst": 37, "unknown": [37, 53, 1741, 1742, 2051, 2111], "unrecover": 37, "interrupt": [37, 2064, 2143], "succeed": [37, 41, 47, 1379, 2133, 2136], "uncaught": [37, 40], "unhandl": 37, "recov": [37, 909, 1140, 1349, 1381, 1738, 1780, 1954, 2074, 2078, 2083, 2086, 2105], "is_run": 37, "role_rank": [37, 48], "role_world_s": [37, 48], "pid": [37, 40, 41, 48, 50, 1588, 2083, 2103], "local_elastic_ag": 37, "localelasticag": [37, 39, 50], "logs_spec": [37, 45], "start_method": [37, 39, 45, 50, 2064], "exit_barrier_timeout": 37, "log_line_prefix_templ": 37, "advis": [37, 548, 621, 876, 2091], "torchelastic_enable_file_tim": 37, "torchelastic_timer_fil": 37, "role_nam": 37, "trainer0": [37, 2109], "foobar": [37, 40, 44, 45], "templat": [37, 983, 1061, 1062, 2101], "substitut": [37, 47, 64, 83, 1302, 2075, 2117], "shared_queu": 37, "get_context": [37, 50, 2091], "nproc_per_process": 37, "other_param": [37, 50], "usr": [37, 45, 47, 2078], "bin": [37, 45, 47, 304, 305, 828, 954, 1250, 1251, 1252, 2045, 2047, 2100, 2119, 2142], "simpleelasticag": 37, "scaffold": [37, 2133], "_assign_worker_rank": 37, "group_world_s": 37, "role_info": 37, "front": [37, 258, 983, 1362, 1551, 2066, 2082], "base_global_rank": 37, "_exit_barri": 37, "guard": [37, 66, 71, 75, 685, 983, 1202, 1203, 1207, 1213, 1215, 1216, 1217, 1224, 1225, 1228, 1229, 2053, 2091, 2100, 2102, 2123, 2136, 2141, 2145, 2146], "_initialize_work": 37, "worker_group": 37, "fresh": [37, 64, 1110, 1206, 1209, 1896, 1926, 2042], "start_work": 37, "_stop_work": 37, "optimist": 37, "deleg": [37, 2133], "_monitor_work": 37, "_rendezv": 37, "_restart_work": 37, "_shutdown": 37, "death_sig": 37, "sigterm": 37, "is_restart": 37, "_start_work": [37, 45], "gracefulli": [37, 47, 48, 60, 1320, 2082, 2136], "meaning": [37, 40, 41, 1075, 2078, 2139], "meaningless": 37, "intention": [37, 1116, 2004, 2087, 2109], "torchelastic_health_check_port": 37, "tcp": [37, 47, 48, 2109], "health_check_serv": 37, "healthcheckserv": 37, "alive_callback": 37, "dead": [37, 64, 2144], "create_healthcheck_serv": 37, "control_plan": 38, "worker_main": 38, "_workerserv": 38, "torch_worker_server_socket": 38, "ship": [39, 1177, 2077, 2109], "programmat": [39, 64, 2089], "my_launch": 39, "argv": [39, 51], "trainer_entrypoint_fn": 39, "fn_arg": 39, "run_result": 39, "tricki": [39, 56, 61, 2075, 2089, 2111, 2130, 2133], "myrendezvoushandl": 39, "elastic_ag": 39, "metrichandl": [39, 44], "mymetrichandl": 39, "metric_data": [39, 44], "metricdata": 39, "sink": [39, 44, 2060], "eventhandl": 39, "cloudwatch": 39, "nulleventhandl": 39, "myeventhandl": 39, "invalid": [40, 45, 986, 1289, 1548, 2074, 2075, 2093, 2097, 2099, 2102, 2135], "infra": [40, 2144], "start_process": [40, 45, 2064], "torchelastic_error_fil": 40, "smallest": [40, 53, 972, 1311, 1321, 1342, 1346, 1362, 1856, 1977, 2121, 2145, 2150], "timestamp": [40, 41, 44, 48, 2060, 2103, 2119, 2145], "error_handl": 40, "sugar": [40, 2046], "get_error_handl": 40, "childfailederror": 40, "get_first_failur": 40, "dump_error_fil": 40, "error_fil": [40, 45], "exitcod": [40, 48], "nanni": 40, "accur": [40, 937, 1018, 1243, 1365, 1402, 1461, 1489, 1864, 1980, 2051, 2059, 2078, 2110, 2126, 2135, 2149], "torchelastic_ag": 40, "trainer_0": 40, "trainer_1": 40, "json": [40, 45, 50, 2088, 2103, 2139, 2143], "trainer_n": 40, "errorhandl": 40, "record_except": 40, "processfailur": 40, "test_ev": 41, "eventsourc": 41, "get_logging_handl": 41, "construct_and_record_rdzv_ev": 41, "run_id": [41, 47, 48, 50], "node_st": 41, "master_endpoint": 41, "local_id": 41, "nodest": 41, "endpoint": [41, 46, 47, 48], "dynamic_rendezv": [41, 47], "dynamicrendezvoushandl": [41, 47], "_record": 41, "get_method_nam": 41, "_set": 41, "_this_nod": 41, "eventmetadatavalu": 41, "readm": [42, 43, 64, 798, 2067], "telemetri": 44, "timeseri": 44, "metric_group": 44, "metric_nam": 44, "sensibl": 44, "my_modul": [44, 53, 55, 64, 2044, 2102], "nullmetricshandl": 44, "consolemetricshandl": 44, "my_method": 44, "put_metr": 44, "calculate_lat": 44, "succinctli": 44, "baz": [44, 64, 865, 2102, 2121], "leaf_modul": 44, "classnam": [44, 2047], "threw": [44, 2147], "my_app": 44, "consolemetrichandl": 44, "toi": [44, 2145], "stdout": [44, 45, 49, 1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 2099], "stdoutmetrichandl": 44, "1574213883": 44, "4182858": 44, "my_metr": 44, "1574213940": 44, "5237644": 44, "nullmetrichandl": 44, "class_nam": [44, 64], "def_nam": 44, "leaf": [44, 53, 154, 226, 339, 452, 492, 507, 508, 797, 847, 850, 890, 904, 1186, 1801, 1973, 2067, 2074, 2075, 2084, 2099, 2125, 2135], "metric_valu": 44, "metric_group_nam": 44, "popen": [45, 49], "log_dir": [45, 2060, 2119], "stderr": [45, 49, 2042, 2058], "err": 45, "echo": 45, "hello": [45, 60, 2046, 2102, 2133], "pcontext": 45, "multiprocesscontext": 45, "subprocesscontext": 45, "log_line_prefix": 45, "keyset": [45, 2051], "bitmask": [45, 2062], "bar0": 45, "bar1": 45, "file1": 45, "file2": 45, "short": [45, 64, 739, 768, 1119, 1216, 1286, 1467, 1518, 1519, 1638, 1800, 1905, 1954, 2046, 2051, 2065, 2075, 2076, 2089, 2109, 2116, 2117, 2120, 2133, 2134], "ing": 45, "cmd": [45, 48], "forkserv": [45, 1738, 2064, 2091], "local_ranks_filt": 45, "processcontext": [45, 2064], "superset": [45, 48, 2051], "tee_stdout": 45, "tee_stderr": 45, "runprocsresult": 45, "defaultlogsspec": 45, "logsspec": 45, "reifi": 45, "rdzv_run_id": 45, "attempt_": 45, "logsdest": 45, "num_nod": [46, 48], "trainers_per_nod": 46, "num_allowed_failur": 46, "job_id": [46, 47, 48], "host_node_addr": [46, 48], "min_siz": [46, 48], "num_allowed_failures_or_membership_chang": 46, "node1": [46, 48], "29400": [46, 48], "sidecar": [46, 47], "agre": [47, 1348, 2111], "resum": [47, 1832, 1839, 1841, 2109, 2111, 2119, 2134, 2136], "retryabl": 47, "announc": 47, "lose": [47, 51, 55, 195, 212, 2066], "train_loop": [47, 873], "arriv": [47, 48, 2109, 2111], "rendezvousbackend": 47, "c10drendezvousbackend": 47, "etcdrendezvousbackend": 47, "supersed": [47, 1205], "etcdrendezvoushandl": 47, "my_run_id": 47, "from_backend": 47, "min_nod": 47, "max_nod": 47, "rendezvousparamet": 47, "admit": [47, 48, 2078], "get_as_bool": 47, "get_as_int": 47, "rendezvoushandlerregistri": 47, "get_run_id": 47, "is_clos": 47, "set_clos": 47, "next_rendezv": 47, "rendezvousinfo": 47, "rendezvousclosederror": 47, "rendezvousconnectionerror": 47, "rendezvousstateerror": 47, "rendezvoustimeouterror": 47, "num_nodes_wait": 47, "shutdown": [47, 2043, 2056, 2109, 2110], "use_agent_stor": 47, "lifecyl": 47, "rendez": 47, "impl": [47, 52, 1061, 1295, 2051], "rendezvousstoreinfo": 47, "bootstrap_store_info": 47, "bootstrap": [47, 2095], "rendezvouserror": 47, "rendezvousgracefulexiterror": 47, "create_handl": 47, "join_timeout": 47, "600": 47, "last_call_timeout": 47, "close_timeout": 47, "rendezvoustimeout": 47, "get_stat": [47, 91, 2078], "fenc": 47, "set_stat": [47, 91, 2078], "last_cal": 47, "heartbeat": [47, 2149], "keep_al": 47, "c10d_rendezvous_backend": 47, "create_backend": 47, "store_typ": 47, "read_timeout": 47, "60": [47, 50, 946, 1501, 1843, 1970, 1975, 2060, 2109, 2134], "is_host": 47, "cname": 47, "fqdn": [47, 48], "etcd_rendezvous_backend": 47, "ssl_cert": 47, "ssl": 47, "certif": 47, "ssl_cert_kei": 47, "privat": [47, 55, 1203, 2078, 2081, 2102, 2130, 2136], "ca_cert": 47, "rool": 47, "key_prefix": 47, "ttl": 47, "hour": 47, "etcd_rendezv": 47, "rdzv_impl": 47, "etcdrendezv": 47, "etcd_address": 47, "min_work": 47, "max_work": 47, "noqa": [47, 1289, 1548], "w605": 47, "2379": [47, 1387], "etcd_prefix": 47, "etcdstor": 47, "etcd_stor": 47, "etcd_client": 47, "etcd_store_prefix": 47, "piggyback": 47, "num": [47, 750, 751, 765, 1434, 1499, 1502, 1518, 1554, 1564, 1592, 2091], "lookuperror": 47, "override_timeout": 47, "etcdserv": 47, "cumbersom": [47, 2047], "highli": [47, 1452, 1738, 2042, 2090, 2097, 2099, 2114, 2121, 2148], "etcd_serv": 47, "data_dir": 47, "v3": [47, 48], "torchelastic_etcd_binary_path": 47, "get_client": 47, "etcd_binary_path": 47, "entry_point": [48, 2131], "train_script": 48, "aforment": 48, "suffic": [48, 64], "compliant": [48, 51], "num_train": 48, "wors": [48, 1841, 1995, 2136], "port_k": 48, "etcd": 48, "v2": [48, 1358, 1846, 2042, 2085], "revis": 48, "physic": [48, 237, 1137, 1155, 2048, 2077, 2091, 2114, 2136], "localworkergroup": 48, "rdzv_id": 48, "rdzv_backend": [48, 51], "rdzv_endpoint": [48, 51], "max_nnod": 48, "torchelastic_restart_count": 48, "far": [48, 1299, 1654, 2132], "torchelastic_max_restart": 48, "python_exec": 48, "gang": 48, "departur": 48, "surviv": 48, "kill": [48, 50, 2064, 2083], "frequenc": [48, 954, 1005, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1286, 1452, 1490, 1491, 1645, 1646, 1832, 1954, 2144], "ness": [48, 2135], "load_checkpoint": [48, 51], "checkpoint_path": [48, 51], "dataset": [48, 51, 66, 805, 1452, 1461, 1513, 2043, 2083, 2085, 2088, 2091, 2095, 2101, 2104, 2105, 2119], "train_step": 48, "should_checkpoint": 48, "save_checkpoint": [48, 51], "subprocess_handl": 49, "get_subprocess_handl": 49, "local_rank_id": 49, "fd": [49, 2119], "acquir": [50, 64, 2089, 2111, 2114], "deadlin": 50, "message_queu": 50, "localtimerserv": 50, "max_interv": 50, "trainer_func": 50, "localtimercli": 50, "expiri": 50, "timer_cli": 50, "countdown": 50, "timefram": [50, 2109], "elig": [50, 2111], "reap": 50, "timerserv": 50, "mp_queue": 50, "daemon": [50, 2064], "filetimerserv": 50, "file_path": 50, "log_ev": [50, 2060], "filetimercli": 50, "fifo": [50, 92, 1416], "watchdog": [50, 2149], "filetimerrequest": 50, "sigkil": 50, "named_pip": 50, "mkfifo": 50, "timercli": 50, "timerrequest": 50, "scope_id": 50, "expiration_tim": 50, "acquisit": 50, "whatev": [50, 64, 452, 1202, 1738, 1897, 1982, 2047, 2082, 2135, 2136], "request_queu": 50, "entiti": [50, 64], "clear_tim": 50, "get_expired_tim": 50, "register_tim": 50, "timer_request": 50, "debug_info_log": 50, "log_debug_info_for_expired_tim": 50, "expired_tim": 50, "use_env": 51, "expositori": 51, "worst": [51, 2081], "total_num_epoch": 51, "visit": [51, 55, 2099, 2139], "WILL": 52, "BE": 52, "aot": [52, 685, 2053, 2126, 2127, 2136, 2137, 2145], "example_arg": [52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "exported_program": [52, 2097], "exportedprogram": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097, 2099], "arg1_1": 52, "exportgraphsignatur": [52, 53, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "user_input": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "user_output": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "inputs_to_paramet": 52, "inputs_to_buff": 52, "buffers_to_mut": 52, "backward_signatur": 52, "assertion_dep_token": 52, "sound": [52, 64, 986, 1197, 1577, 2119, 2137, 2145], "alias": [52, 55, 909, 1177, 1188, 1665, 2007, 2046, 2047, 2051, 2081, 2135], "stacktrac": [52, 53], "leverag": [52, 983, 2096, 2097, 2109, 2126, 2129, 2133, 2138, 2148], "_dynamo": [52, 66, 77, 983, 990, 2080, 2126, 2130, 2131, 2132, 2133, 2134, 2141, 2143, 2145], "massiv": [52, 2133], "pt2": [52, 1193, 2132, 2135], "artifact": [52, 685, 1954, 2053, 2088, 2102, 2127, 2133, 2143, 2145], "untrac": [52, 64], "disjoint": [52, 2044], "usabl": [52, 63, 2047, 2098, 2099, 2133, 2134], "symbolic_trac": [52, 53, 64, 2104], "comprehens": [52, 83, 1921, 2047, 2048, 2066, 2078, 2087, 2104, 2127], "simpler": [52, 61, 1188, 2007, 2044, 2075, 2081, 2086, 2089, 2133], "straight": [52, 1460, 1656], "conv": [52, 64, 707, 708, 709, 710, 711, 712, 713, 714, 715, 798, 799, 802, 822, 865, 871, 1289, 1299, 1305, 1306, 1475, 1476, 1477, 1478, 1479, 1480, 1548, 1549, 1555, 1748, 1749, 1751, 2057, 2073, 2078, 2092, 2099, 2104, 2105, 2106, 2107, 2139, 2141], "in_channel": [52, 717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 735, 736, 743, 744, 745, 746, 747, 748, 1299, 1475, 1476, 1477, 1478, 1479, 1480, 1524, 1525, 1526, 1527, 1528, 1529], "out_channel": [52, 717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 735, 736, 743, 744, 745, 746, 747, 748, 1299, 1475, 1476, 1477, 1478, 1479, 1480, 1524, 1525, 1526, 1527, 1528, 1529], "kernel_s": [52, 717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 735, 736, 743, 744, 745, 746, 747, 748, 773, 774, 787, 788, 1289, 1299, 1457, 1458, 1459, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1495, 1496, 1515, 1516, 1517, 1524, 1525, 1526, 1527, 1528, 1529, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1600, 1621, 1622, 1623, 1632, 1633, 1634, 1648, 1649, 1650, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1724, 1862, 1863, 2045, 2119, 2140], "maxpool": [52, 802, 1495, 1496, 1649, 1650, 2099], "maxpool2d": [52, 788, 1545, 1549, 1680, 1683, 2099, 2106], "256": [52, 1467, 1854, 2078, 2099], "example_kwarg": [52, 66, 72], "arg2_1": 52, "arg3_1": 52, "max_pool2d_with_indic": [52, 2045, 2100, 2140], "getitem": [52, 66, 69, 74, 75, 78, 2133, 2144], "85": [52, 64, 1551, 1839, 2139, 2143], "l__self___conv": 52, "lift": [52, 53, 61, 1188, 2007, 2066, 2100, 2135], "get_attr": [52, 64, 82, 1201], "harden": 52, "oncal": 52, "proxytensor": 52, "contextlib": [52, 66, 70], "contextmanag": 52, "__enter__": [52, 2047], "__exit__": [52, 64, 2047, 2048, 2102], "exc_typ": [52, 2048], "exc_valu": [52, 2048], "exc": 52, "branch1": 52, "64": [52, 58, 59, 61, 946, 1101, 1181, 1182, 1186, 1449, 1450, 1451, 1453, 1454, 1455, 1461, 1577, 1706, 1894, 1997, 2051, 2067, 2071, 2094, 2095, 2097, 2099, 2104, 2108, 2114, 2117, 2119, 2120, 2130, 2136, 2138], "branch2": 52, "128": [52, 621, 725, 733, 734, 761, 769, 800, 829, 1465, 1482, 1509, 1535, 1557, 1597, 1598, 1636, 1706, 2066, 2067, 2071, 2085, 2097, 2104, 2106, 2107, 2109, 2114, 2117, 2120, 2143], "x2": [52, 66, 72, 971, 1337, 1540, 1597, 1598, 1636, 1694, 2045, 2140], "out1": [52, 1177, 2045, 2136], "out2": [52, 1177, 2045, 2136], "arg4_1": 52, "arg5_1": 52, "arg6_1": 52, "permute_1": 52, "addmm_1": 52, "relu_1": [52, 64], "l__self___buff": 52, "rangeconstraint": [52, 53], "min_val": [52, 783, 1506, 1660, 1661, 2045, 2140], "max_val": [52, 783, 1506, 1660, 1661, 2045, 2140], "9223372036854775806": 52, "range_constraint": [52, 53], "dimx": 52, "dimi": 52, "slice_1": [52, 66, 75, 77], "9223372036854775807": [52, 66, 75, 905, 948, 1287, 1780, 2060, 2113, 2147], "input_spec": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "inputspec": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "inputkind": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "tensorargu": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "output_spec": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "outputspec": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "outputkind": [52, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 2097], "valuerang": [52, 1202, 1203], "is_bool": 52, "saved_exported_program": 52, "fold": [52, 1600, 2045, 2057, 2099, 2107, 2114], "example_input": [52, 825, 826, 872, 873, 1301, 1305, 2104, 2125, 2127, 2131, 2134, 2135], "dynamic_dim": [52, 1196, 1197, 1203], "rewritten": [52, 2086, 2133], "primtivi": 52, "symint": [52, 64, 1190, 1201, 1203, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1222, 1224, 1225, 1226, 1962, 1963, 1965, 1966, 1967, 2051, 2123, 2133, 2135, 2140], "symfloat": [52, 64, 1190, 1201, 1203, 1962, 1963, 2123, 2132, 2133], "symbool": [52, 64, 1190, 1201, 1203, 1221, 1228, 1967, 2123, 2132, 2133], "const": [52, 1501, 2088], "add_1": [52, 64, 66, 69, 71, 74, 75, 1177], "add_2": [52, 64, 66, 69, 71, 74, 75], "shot": 52, "nearli": [52, 154, 904, 925, 1847, 2091, 2109, 2145], "imposs": [52, 1188, 1213, 2007, 2074], "exportdb": [52, 2123], "combinatori": 52, "explod": [52, 1580], "cond": [52, 53, 60, 66, 69, 75, 2092], "faketensor": [52, 1204, 2051, 2097, 2135], "register_fak": [52, 2051], "dynamo": [52, 64, 81, 685, 985, 1203, 2053, 2080, 2099, 2126, 2131, 2132, 2135, 2136, 2137, 2139, 2141, 2142, 2143, 2145], "preserve_module_call_signatur": 52, "dim0_x": [52, 66, 68, 74, 75], "verbatim": 52, "bake": [52, 64, 66, 75, 1293, 1299, 1807, 1808, 1826, 2101], "diverg": [52, 1217, 1305, 1306, 1513, 1666, 2043, 2047], "register_dataclass": [52, 53], "ordereddict": [52, 1289, 1548, 1549, 1558, 1577, 1728, 1770, 2045, 2089, 2094, 2121], "debug_nam": 52, "_constraint": 52, "unbound": [52, 1202, 1207, 1213], "t1": [52, 692, 693, 891, 1116, 1243, 1738, 2000, 2046, 2109, 2110], "extra_fil": [52, 1297, 1300], "opset_vers": [52, 2097, 2099, 2100], "opset": [52, 2097, 2099, 2100, 2131, 2140], "txt": [52, 1297, 1300, 2085, 2102, 2127, 2145], "decod": [52, 1361, 1592, 1593, 1594, 1738, 2102], "utf": [52, 1361, 2099, 2102], "expected_opset_vers": 52, "rb": [52, 1297, 1361], "seek": [52, 1297, 1361, 2102, 2104], "cl": [52, 66, 68, 143, 2051, 2081, 2104, 2109, 2146], "serialized_type_nam": 52, "treespec": 52, "inputdataclass": 52, "outputdataclass": 52, "shapescollect": 52, "builder": [52, 2133], "tensor_x": [52, 2097], "tensor_i": 52, "tensor_z": 52, "refine_dynamic_shapes_from_suggested_fix": 52, "msg": [52, 1078, 1079, 1081, 1203, 2103, 2121], "constraintviol": 52, "straightforward": [52, 64, 2054, 2067, 2089, 2101, 2114, 2131], "ti": [52, 1176, 1789, 1886, 2051, 2084, 2135], "_dx": 52, "1024": [52, 2077, 2078, 2127, 2136], "_derivedconstraint": 52, "graph_signatur": [52, 53], "module_call_graph": 52, "run_decomposit": [52, 2097], "decomp_t": 52, "_preserve_op": 52, "joint": [52, 685, 2053], "exportbackwardsignatur": 52, "gradients_to_paramet": 52, "gradients_to_user_input": 52, "loss_output": 52, "gurante": 52, "getattr": [52, 64, 2045, 2081, 2094, 2109], "parameters_buffers_constant_tensor": 52, "flattened_user_input": 52, "mutated_input": 52, "flattened_user_output": 52, "custommodul": [52, 847, 2097, 2104], "my_paramet": [52, 2046, 2097], "register_buff": [52, 1289, 1548, 1730, 1739, 2044, 2046, 2081, 2089, 2097], "my_buffer1": [52, 2097], "my_buffer2": [52, 2097], "add_tensor": [52, 53], "call_funct": [52, 64, 66, 80, 82, 84, 85, 1201, 2131, 2133, 2134, 2144, 2145], "mul_tensor": 52, "mul_tensor_1": 52, "add_tensor_1": 52, "add_tensor_2": 52, "buffer_mut": [52, 2097], "modulecallsignatur": 52, "symintargu": [52, 66, 75], "constantargu": [52, 66, 68], "customobjargu": 52, "tokenargu": 52, "in_spec": 52, "_pytre": [52, 66], "out_spec": 52, "modulecallentri": 52, "nonetyp": [52, 2045, 2047], "replace_all_us": 52, "get_replace_hook": 52, "class_fqn": 52, "fake_v": 52, "_librari": [52, 2051], "fake_class_registri": 52, "fakescriptobject": 52, "unflatten": [52, 55, 2045, 2065, 2066, 2068, 2100, 2118], "flatargsadapt": 52, "target_spec": 52, "input_args_with_path": 52, "codegen": [52, 53, 64, 2081, 2136, 2139, 2145], "flat_args_adapt": 52, "hierachi": 52, "swap": [52, 62, 64, 419, 621, 793, 795, 796, 799, 804, 875, 1295, 1379, 1597, 1598, 1722, 1723, 1979, 2000, 2045, 2048, 2078, 2104, 2114, 2116, 2124], "submod": [52, 64], "new_mod": 52, "unflattenedmodul": 52, "bear": 53, "mlir": 53, "soundli": 53, "audienc": 53, "realiz": [53, 1901], "implic": [53, 1287, 1305, 2062, 2081, 2109, 2114], "bundl": [53, 2088], "notabl": [53, 983, 2047, 2071, 2120, 2127], "graph_modul": [53, 827, 870, 2134, 2144], "sympi": [53, 1203, 1210, 2132], "i0": [53, 310, 1309, 1920, 2045, 2100, 2115], "collorari": 53, "textual": 53, "machineri": [53, 64, 2081, 2133, 2136, 2143], "op_nam": [53, 2051, 2097], "arg4": 53, "arg5": 53, "compact": [53, 1135, 1136, 1138, 1332, 1334, 1337, 2081, 2099, 2104], "args1": 53, "add1": 53, "predefin": [53, 2099], "readign": 53, "referenc": [53, 64, 1019, 1201, 1289, 1548, 1982, 2046, 2075, 2099, 2109, 2134], "19": [53, 690, 751, 976, 1545, 2044, 2099, 2114, 2134, 2139], "dummy_help": 53, "helper_util": 53, "89": [53, 621, 1865, 2139], "nn_module_stack": 53, "came": [53, 2130, 2133], "self_linear": 53, "self_sequenti": 53, "source_fn_stack": 53, "source_fn": 53, "encapsul": [53, 63, 64, 1204, 2097, 2109, 2130], "control_flow": [53, 66, 69, 74, 75, 78], "x_1": [53, 1098, 1099, 1100, 1101, 1357, 1465, 1481, 1482, 1625, 1636, 1980], "num_us": [53, 64], "y_1": [53, 1980], "higher_ord": [53, 66, 69, 74, 75, 78], "liter": [53, 1800, 2045, 2048, 2066, 2102, 2144, 2147], "dim_ord": 53, "tensormeta": 53, "promot": [53, 55, 83, 690, 956, 959, 968, 1061, 1114, 1162, 1164, 1165, 1166, 1167, 1433, 1486, 1487, 1488, 1492, 1636, 1856, 1876, 1877, 1883, 1898, 1955, 1965, 2047, 2097, 2117, 2121, 2135, 2136, 2140], "max_pool2d_with_index": 53, "add_on": 53, "ph_0": 53, "jax": [53, 56, 59, 60, 61, 2075, 2082, 2133, 2136], "int64_t": [53, 1800], "scalartyp": [53, 2140], "memoryformat": [53, 2140], "memory_format": [53, 64, 159, 174, 176, 179, 182, 183, 184, 193, 199, 210, 213, 237, 244, 271, 301, 329, 335, 397, 503, 504, 529, 584, 627, 980, 1120, 1121, 1175, 1201, 1289, 1548, 1738, 1746, 1747, 1799, 1867, 1869, 1871, 2041, 2043, 2045, 2081, 2121, 2140], "_register_pytree_nod": 53, "sharding_strategi": 55, "auto_wrap_polici": 55, "backward_prefetch": 55, "backwardprefetch": [55, 2043], "backward_pr": [55, 1289, 1548], "mixed_precis": [55, 1738], "ignored_modul": 55, "param_init_fn": 55, "sync_module_st": 55, "forward_prefetch": [55, 2084], "limit_all_gath": [55, 2084], "use_orig_param": 55, "ignored_st": 55, "inspir": [55, 1810, 2081, 2138], "deepspe": 55, "shorten": 55, "sharded_modul": 55, "0001": [55, 64, 1100, 1334, 1536, 1672, 1803, 1841, 2045, 2101], "dev_id": 55, "shard_grad_op": 55, "unshard": [55, 2084], "full_shard": 55, "summon_full_param": 55, "with_grad": 55, "gap": [55, 876, 1873, 2043, 2104, 2143], "delai": [55, 490, 1738, 2111, 2136], "reacquir": 55, "nccl_cross_nic": 55, "no_sync": [55, 1738], "cpuoffload": [55, 2043], "modulewrappolici": 55, "custompolici": 55, "proceed": [55, 90, 1018, 1402, 1415, 1501, 2012, 2110, 2111], "nonwrapped_numel": 55, "travers": [55, 845, 1212, 1738, 2080, 2081, 2110, 2124, 2125], "subtre": 55, "size_based_auto_wrap_polici": 55, "exce": [55, 1367, 2078, 2091], "100m": 55, "numel": [55, 439, 448, 981, 1005, 1150, 1274, 2045, 2065, 2071, 2075, 2100, 2113, 2114], "custom_auto_wrap_polici": 55, "min_num_param": 55, "1e8": 55, "my_auto_wrap_polici": 55, "1e5": 55, "mixedprecis": [55, 2043], "granular": [55, 82, 1303, 2074, 2143], "is_meta": [55, 2100], "reset_paramet": [55, 1563, 1737], "torchdistx": 55, "deferred_init": 55, "materialize_modul": 55, "my_init_fn": 55, "fullstatedictconfig": [55, 2043], "flatparamet": 55, "unifi": [55, 2043, 2062, 2066, 2133], "alten": 55, "distributed_device_mesh": 55, "check_is_root": 55, "clip_grad_norm_": [55, 1743, 2074], "max_norm": [55, 750, 751, 1490, 1491, 1645, 1646, 1743, 1744, 2045, 2074], "norm_typ": [55, 750, 751, 1490, 1491, 1515, 1516, 1517, 1645, 1646, 1675, 1676, 1677, 1743, 1744, 2045], "clip": [55, 1001, 1743, 1744, 1745, 1805, 2045, 2068, 2082, 2099, 2100], "infin": [55, 1003, 1279, 1281, 1283, 1284, 1438, 1460, 1541, 1542, 1543, 1679, 1680, 1681, 1744, 1809, 1925, 1937, 2114, 2115], "no_shard": 55, "largest": [55, 594, 954, 1163, 1321, 1342, 1344, 1346, 1347, 1362, 1692, 1754, 1977, 2045, 2046, 2047, 2140, 2144, 2150], "fp32": [55, 786, 800, 825, 1104, 1738, 2078, 2084, 2092, 2104, 2105, 2107, 2138], "flatten_sharded_optim_state_dict": 55, "sharded_optim_state_dict": 55, "shard_full_optim_state_dict": 55, "fsdp_modul": 55, "root_onli": 55, "full_optim_state_dict": 55, "optim_input": 55, "rank0_onli": 55, "get_state_dict_typ": 55, "statedictset": [55, 2043], "assertionerror": [55, 64, 66, 68, 73, 75, 86, 739, 1035, 1801, 2071, 2121, 2145], "differen": 55, "intercept": [55, 64, 2081, 2137], "occurr": [55, 406, 905, 948, 1287, 1390, 1780, 1991, 1992, 2113, 2132], "statedicttyp": 55, "fulloptimstatedictconfig": [55, 2043], "set_state_dict_typ": 55, "save_a_checkpoint": 55, "load_a_checkpoint": 55, "optim_state_dict_to_load": 55, "is_named_optim": 55, "load_directli": 55, "original_osd": 55, "namedoptim": 55, "keyedoptim": 55, "torchrec": [55, 2043], "gossipgrad": [55, 1738], "latter": [55, 692, 797, 1289, 1518, 1548, 1555, 2082, 2089, 2091, 2093, 2133], "rekey_optim_state_dict": 55, "optim_state_key_typ": 55, "loadabl": [55, 2042], "wrapped_model": 55, "wrapped_optim": 55, "full_osd": 55, "nonwrapped_model": 55, "nonwrapped_optim": 55, "rekeyed_osd": 55, "optimstatekeytyp": 55, "param_id": 55, "osd": 55, "param_nam": 55, "sharded_osd": 55, "scatter_full_optim_state_dict": 55, "new_model": 55, "new_optim": 55, "resid": [55, 63, 200, 293, 341, 1361, 1738, 2078, 2109, 2130], "remap": [55, 91, 419, 1293, 1297, 1361, 1382, 2042, 2058, 2108], "state_dict_config": 55, "optim_state_dict_config": 55, "descend": [55, 64, 140, 546, 887, 1201, 1289, 1353, 1354, 1548, 1930, 1958, 2045, 2140], "transpar": [55, 2080, 2109, 2111], "sharded_state_dict": 55, "shardedstatedictconfig": [55, 2043], "offload_to_cpu": 55, "optimstatedictconfig": [55, 2043], "param_state_dict": 55, "statedictconfig": [55, 2043], "writeback": 55, "summon": 55, "discard": [55, 1203, 1286, 1347, 1757, 2042, 2046, 2060], "redundantli": [55, 2074], "materi": [55, 911, 915, 916, 917, 998, 1609, 1610, 1611, 1741, 1742, 1827, 1881, 1882, 2081, 2136], "throughput": [55, 2044, 2077, 2078, 2084], "backward_post": 55, "altogeth": [55, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2133], "contend": 55, "volum": [55, 1252], "_hybrid_shard_zero2": 55, "freed": [55, 154, 904, 925, 1026, 1075, 2064, 2078, 2084, 2087, 2109, 2116, 2130, 2147], "param_dtyp": 55, "reduce_dtyp": 55, "buffer_dtyp": 55, "keep_low_precision_grad": 55, "cast_forward_input": 55, "cast_root_forward_input": 55, "_module_classes_to_ignor": 55, "batchnorm": [55, 705, 706, 1185, 1289, 1299, 1548, 1588, 1738, 1739, 1748, 1749, 1750, 1751, 2057, 2068, 2075, 2089, 2101, 2104, 2106, 2107], "_batchnorm": [55, 1748, 1750], "permit": [55, 1202, 1213, 2078, 2114], "thereaft": 55, "local_state_dict": 55, "upcast": 55, "recast": 55, "offload_param": 55, "cfg": 55, "finetun": [55, 1289, 1548], "model_fn": 55, "my_checkpoint": 55, "_use_dtensor": 55, "localstatedictconfig": [55, 2043], "shardedoptimstatedictconfig": [55, 2043], "localoptimstatedictconfig": [55, 2043], "love": 56, "hear": 56, "vmap": [56, 58, 59, 64, 916, 917, 919, 921, 925, 930, 931, 1178, 1181, 1182, 1184, 1186, 2051], "arbitrarili": [56, 61, 517, 1292, 1619, 2047, 2075, 2081, 2082], "stock": [56, 61], "ensembl": [56, 59, 61, 1186], "maml": [56, 61], "vjp": [56, 59, 60, 900, 901, 911, 916, 917, 1182, 1188, 2007, 2081, 2082], "whirlwind": 56, "tour": 56, "ux": [56, 61, 1197, 2104], "jacrev": [57, 59, 60, 921, 1180, 1181, 2082], "functional_cal": [57, 59, 1186, 2136], "running_mean": [58, 1185, 1289, 1462, 1463, 1464, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1548, 1588, 1624, 1664, 1739, 2045, 2089, 2094, 2140], "running_var": [58, 1185, 1289, 1462, 1463, 1464, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1548, 1588, 1624, 1664, 2045, 2094, 2140], "groupnorm": [58, 1655], "anywher": [58, 2074], "batchnorm2d": [58, 718, 721, 723, 728, 822, 1299, 1484, 1522, 1624, 2057, 2075, 2089, 2104, 2106], "track_running_stat": [58, 756, 757, 758, 1185, 1462, 1463, 1464, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1588, 2094], "resnet": [58, 2042, 2044, 2046, 2089, 2102, 2119, 2124], "regnet": 58, "norm_lay": 58, "resnet18": [58, 64, 2042, 2044, 2046, 2058, 2102, 2143], "num_group": [58, 754, 1502, 1655, 2045], "fragil": 58, "replace_all_batch_norm_modules_": 58, "upstream": [59, 2095], "coupl": [59, 83, 2044, 2088, 2096, 2110, 2130, 2144], "jvp": [59, 60, 901, 906, 909, 910, 911, 915, 916, 917, 1184, 2081], "jacfwd": [59, 60, 921, 1180, 2082], "carefulli": [59, 63, 490, 2051, 2082, 2102, 2135, 2137], "make_functional_with_buff": 59, "hurri": 59, "gist": [59, 799, 2086, 2139], "emul": [59, 807, 2048, 2081, 2103], "fmodel": 59, "compute_loss": [59, 61, 1176, 1178], "predict": [59, 490, 1452, 1461, 1501, 1637, 2101, 2119, 2127], "argnum": [59, 1178, 1179, 1180, 1181, 1182], "carri": [59, 340, 804, 847, 849, 868, 869, 2051, 2076, 2104], "stack_module_st": 59, "num_model": [59, 1186], "base_model": 59, "clearer": [59, 1346, 1827, 2081, 2097], "call_single_model": 59, "aotautograd": [59, 685, 985, 2053, 2080, 2135, 2136, 2137, 2145], "stori": [59, 2086, 2133], "grad_x": [60, 2051, 2082, 2136], "has_aux": [60, 1178, 1179, 1181, 1182, 1183, 1187], "mental": [60, 1177], "absenc": [60, 2127], "unbind": [60, 1188, 2007, 2043, 2045, 2065, 2100, 2118], "presenc": [60, 64, 1299, 1439, 2091, 2102, 2114, 2141], "pop": [60, 950, 1079, 1080, 1549, 1558, 2100, 2103, 2133], "lst": 60, "batchedtensor": 60, "batched_tensor_input": 60, "new_": [60, 2078, 2120], "new_zero": [60, 2045, 2100], "new_empti": [60, 2045, 2051, 2100], "diag_emb": [60, 1109, 1325, 1326, 1353, 1958, 2045, 2100], "vec": [60, 111, 112, 428, 695, 1436, 1790, 2045, 2114, 2140], "copy_": [60, 62, 419, 1177, 1601, 2044, 2045, 2065, 2078, 2116], "arithmet": [60, 956, 959, 973, 1345, 1883, 2048, 2060, 2065, 2066, 2092, 2104, 2117], "extra_arg": 60, "theoret": 60, "custom_dot": 60, "lax": 60, "while_loop": 60, "is_nonzero": [60, 2045, 2100, 2114], "rag": 60, "unclear": [60, 621], "add_nois": 60, "prng": 60, "cos_x": [61, 1178], "neg_sin_x": [61, 1178], "feature_s": [61, 1178, 1188, 2007], "feature_vec": [61, 1178, 1188, 2007], "mseloss": [61, 1178, 1508, 1580, 1686, 2078, 2080], "grad_weight_per_exampl": [61, 1178], "cotang": [61, 1187], "vjp_fn": [61, 1187], "out_tang": 61, "hessian0": 61, "hessian1": 61, "hess": [61, 1180], "set_overwrite_module_params_on_convers": [62, 2043], "to_empti": [62, 1289, 1548, 2055], "get_overwrite_module_params_on_convers": [62, 2043], "set_swap_module_params_on_convers": [62, 2043], "swap_tensor": [62, 419, 2043], "module_load": 62, "get_swap_module_params_on_convers": [62, 419, 1289, 1548, 2043], "rpc_async": [63, 2047, 2100, 2109, 2111], "add_done_callback": 63, "fut": [63, 1292, 1738, 2077, 2109], "set_result": [63, 1738, 2109], "haven": [63, 2089, 2143], "set_except": 63, "baseexcept": 63, "valueerror": [63, 66, 86, 905, 948, 1287, 1289, 1548, 1759, 1760, 1780, 1783, 2081, 2097, 2113, 2121, 2144], "twice": [63, 621, 920, 1184, 2074, 2075, 2083, 2086, 2135], "slow_set_futur": 63, "sleep": 63, "cb1": 63, "cb2": 63, "dedic": [63, 2078], "pool": [63, 771, 772, 773, 774, 787, 788, 1016, 1020, 1021, 1053, 1054, 1064, 1075, 1398, 1400, 1449, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1495, 1496, 1515, 1516, 1517, 1541, 1542, 1543, 1544, 1545, 1546, 1549, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1649, 1650, 1675, 1676, 1677, 1679, 1680, 1681, 1862, 1863, 2043, 2077, 2078, 2081, 2089, 2091, 2106, 2109, 2130], "didn": [63, 2081, 2084, 2095, 2101], "cb_fut": 63, "chain_cb_fut": 63, "cb": [63, 2109], "held": [63, 1016, 1043, 1071, 1401, 2020, 2074, 2138], "collect_al": [63, 2043], "fut0": 63, "fut1": [63, 2109], "fut_list": 63, "wait_al": [63, 2043], "clamp": [64, 190, 191, 807, 810, 979, 1296, 1460, 1501, 1654, 1665, 1725, 2045, 2057, 2065, 2099, 2100, 2104, 2106, 2107, 2115, 2121, 2140], "call_modul": [64, 82, 1201, 2144], "call_method": [64, 82, 1201, 2131, 2134], "feed": [64, 2044, 2083, 2089, 2124, 2135], "fake": [64, 86, 717, 718, 719, 720, 721, 722, 723, 724, 725, 735, 736, 737, 761, 799, 804, 807, 808, 818, 820, 847, 872, 873, 1133, 1134, 1201, 1203, 1212, 1226, 2051, 2097, 2102, 2104, 2107, 2126], "theses": 64, "callsit": 64, "constitut": [64, 2133], "isol": [64, 1728, 2064, 2101, 2145], "tracer_class": 64, "gm": [64, 2131, 2134, 2135, 2144, 2145], "treatment": 64, "topk": [64, 2045, 2065, 2100, 2140], "print_tabular": [64, 2131, 2134], "opcod": [64, 2102, 2131, 2134], "linear_weight": 64, "linear_1": 64, "topk_1": 64, "pose": [64, 2110, 2133], "explor": [64, 81, 2042, 2075, 2089, 2102, 2147], "lint": 64, "inserting_aft": [64, 2144], "new_nod": 64, "replace_all_uses_with": [64, 2144], "tediou": 64, "unwieldi": 64, "fusion": [64, 685, 798, 822, 871, 872, 983, 1291, 1298, 1303, 1304, 1305, 1306, 1746, 1747, 2057, 2089, 2104, 2133, 2136, 2138, 2144, 2145], "imagin": [64, 2109, 2133, 2137], "requisit": 64, "relu_decomposit": 64, "decomposition_rul": 64, "constitu": [64, 2067, 2081, 2084], "new_graph": 64, "graphappendingtrac": 64, "proxy_arg": 64, "output_proxi": 64, "node_copi": 64, "ari": [64, 2099], "unari": [64, 1181, 1182, 1592, 1594, 1596, 2048, 2065], "organiz": 64, "shapeprop": 64, "named_modul": [64, 1289, 1548, 2089], "args_it": 64, "load_arg": 64, "map_arg": 64, "fetch_attr": [64, 1201], "target_atom": 64, "attr_itr": 64, "hasattr": [64, 1996, 2045, 2081, 2104, 2134], "nonexist": [64, 2046, 2047], "self_obj": 64, "encompass": 64, "prove": [64, 2064], "disprov": 64, "led": [64, 2147], "auxiliari": [64, 1178, 1179, 1181, 1182, 1183, 1187, 2042, 2088], "nondeterminist": [64, 317, 319, 325, 503, 519, 521, 954, 1120, 1121, 1122, 1311, 1467, 1475, 1476, 1477, 1478, 1479, 1480, 1544, 1545, 1546, 1629, 1630, 1631, 1632, 1633, 1634, 1638, 1646, 1654, 1665, 1693, 1706, 1725, 1726, 1727, 1900, 1995, 2131], "unord": [64, 1549, 1558], "nondetermin": [64, 931, 2093], "dedupl": [64, 2099], "torchvis": [64, 2042, 2043, 2044, 2046, 2085, 2099, 2102, 2104, 2119, 2124, 2143], "transformed_resnet18": 64, "input_imag": 64, "224": [64, 872, 873, 2044, 2046, 2085, 2099, 2143], "margin": [64, 1481, 1507, 1540, 1551, 1553, 1597, 1598, 1635, 1662, 1678, 1687, 1722, 1723, 2045, 2119], "commut": 64, "toolbox": 64, "tradit": [64, 1596, 2096, 2097], "luckili": 64, "my_pass": 64, "my_module_transform": 64, "input_valu": 64, "prompt": [64, 2042, 2095], "set_trac": [64, 1294, 1301, 1307, 2044], "examin": [64, 2089, 2099, 2103, 2147], "undergon": 64, "subclassm": 64, "pre_trac": 64, "post_trac": 64, "sake": 64, "tabular": [64, 685, 2053], "transform_graph": 64, "session": [64, 2097], "luck": [64, 2133], "input_nod": 64, "stepwis": 64, "breakpoint": [64, 2047, 2133, 2144], "excel": [64, 2137], "realpython": 64, "pycharm": 64, "vscode": 64, "graphic": [64, 2061, 2095, 2143], "parlanc": 64, "func_to_trac": 64, "dyn": 64, "155": 64, "__bool__": [64, 2045, 2047], "to_bool": 64, "traceerror": [64, 2104], "hyper": [64, 1580, 2046, 2119], "do_activ": 64, "512": [64, 1592, 1593, 1594, 1595, 1596, 2078, 2129], "without_activ": 64, "with_activ": 64, "traced_without_activ": 64, "traced_with_activ": 64, "concrete_arg": 64, "__torch_function__": [64, 2146], "161": 64, "len_1": 64, "sqrt_1": 64, "truediv": [64, 2131, 2133, 2134], "mycustomtrac": 64, "traced_graph": 64, "runnabl": [64, 2074, 2099, 2119, 2145], "myspecialsubmodul": 64, "neg_1": 64, "is_leaf_modul": [64, 2125], "sparse_coo_tensor": [64, 548, 585, 1939, 2045, 2049, 2100, 2114], "ones_lik": [64, 1181, 1182, 1187, 2045, 2051, 2067, 2078, 2081, 2082, 2089, 2100], "zeros_lik": [64, 911, 913, 915, 916, 917, 2045, 2049, 2067, 2078, 2100, 2114], "viabl": [64, 2075, 2078], "torch_randn": 64, "gotcha": 64, "dropoutrepro": 64, "assert_clos": [64, 1136, 1138, 1139, 1144, 1145, 1150, 1151, 1152, 1154, 1156, 2043, 2044, 2121], "greatest": [64, 1231, 1438, 2099, 2121], "6207983493804932": 64, "dropoutrepro2": 64, "overspeci": [64, 983, 2132], "ph": 64, "shouldn": [64, 1016, 2102, 2114, 2118], "fn_or_nam": 64, "callfunct": 64, "my_custom_funct": [64, 985], "fn_to_be_trac": 64, "reassign": [64, 2078], "regener": 64, "unset": [64, 946, 2092], "add_submodul": 64, "subpath": 64, "get_submodul": [64, 1289, 1548], "delete_all_unused_submodul": 64, "delete_submodul": 64, "print_read": [64, 2051, 2134], "print_output": 64, "include_strid": 64, "include_devic": 64, "date": [64, 2102], "pythoncod": 64, "fxmodul": 64, "owning_modul": 64, "tracer_cl": 64, "tracer_extra": 64, "the_funct": 64, "type_expr": 64, "create_nod": 64, "method_nam": 64, "0th": [64, 1188, 2007], "inserting_befor": 64, "influenc": [64, 1805, 2097, 2114, 2148], "eliminate_dead_cod": 64, "is_impure_nod": 64, "topolog": [64, 2099], "impur": 64, "is_impur": 64, "attr_1": 64, "bad": [64, 66, 2064, 2099, 2102, 2104, 2135, 2143], "erase_nod": 64, "to_eras": 64, "eras": [64, 66, 71, 72, 2132], "find_nod": 64, "iterat": 64, "qualified_nam": 64, "graph_copi": 64, "val_map": 64, "return_output_nod": 64, "companion": 64, "arg_transform": 64, "value_remap": 64, "_node_list": 64, "doubli": 64, "on_generate_cod": 64, "make_transform": 64, "transformcodefunc": 64, "insert_pdb": 64, "bodi": [64, 66, 75, 78, 1301, 2044, 2046, 2047, 2048, 2097, 2134, 2145], "current_tran": 64, "stuff": [64, 2135], "default_valu": 64, "_not_": 64, "tabul": 64, "process_input": [64, 1201], "process_output": [64, 1201], "python_cod": 64, "root_modul": [64, 799, 2106], "set_codegen": 64, "return_typ": [64, 702, 1098, 1099, 1252, 1311, 1349, 1387, 1390, 1392, 1395, 1440, 1930, 1977, 1982], "printout": [64, 1063, 1076, 2134], "all_input_nod": 64, "format_nod": 64, "placeholder_nam": 64, "maybe_return_typenam": 64, "autogener": [64, 2071, 2082], "insert_arg": 64, "normalized_argu": 64, "arg_typ": 64, "kwarg_typ": 64, "normalize_to_only_use_kwarg": 64, "vararg": 64, "argskwargspair": 64, "bx": 64, "ax": [64, 976, 1321, 1335, 1339, 1350, 1351, 1352, 1380, 1391, 1556, 1567, 1982, 2099, 2136], "prev": [64, 1825], "replace_with": 64, "delete_user_cb": 64, "propagate_meta": 64, "replace_input_with": 64, "old_input": 64, "new_input": 64, "create_proxi": [64, 2133], "record_stack_trac": 64, "outputgraph": [64, 2133], "update_arg": 64, "update_kwarg": 64, "autowrap_modul": 64, "autowrap_funct": 64, "create_arg": 64, "create_args_for_root": 64, "root_fn": 64, "is_modul": 64, "introspect": [64, 985, 2136], "disallow": [64, 2102, 2109, 2117, 2136, 2137], "proxy_factory_fn": 64, "get_fresh_qualnam": 64, "clash": 64, "attr": [64, 66, 68, 1208, 1361, 1391, 1886], "attr_val": 64, "parameter_proxy_cach": 64, "module_qualified_nam": [64, 2125], "path_of_modul": 64, "some_hyperparamet": 64, "indexed_item": 64, "proxied_valu": 64, "garbage_collect_valu": [64, 1201], "run_nod": [64, 1201], "vice": [64, 462, 607, 1172, 1173, 1540, 2075, 2107, 2116, 2132], "versa": [64, 462, 607, 1172, 1173, 1540, 2075, 2107, 2116, 2132], "negsigmswapinterpret": 64, "call_self": 64, "args_tail": 64, "boxed_run": [64, 1201], "args_list": [64, 1201], "promptli": [64, 1201, 1212, 1362], "fetch_args_kwargs_from_env": [64, 1201], "map_nodes_to_valu": [64, 1201], "initial_env": [64, 1201], "enable_io_process": [64, 1201], "negsigmswapxform": 64, "nodes_map": [64, 2144], "subgraph_rewrit": [64, 2144], "m1": [64, 2005, 2006, 2059], "m2": [64, 1787, 2005, 2006, 2059, 2104], "traced_modul": [64, 2094, 2144], "despit": [64, 1305, 1306, 2078, 2086], "stack_1": 64, "stack_2": 64, "sum_2": 64, "max_1": 64, "max_2": 64, "exhaust": [66, 1738, 2130, 2148], "escap": [66, 76, 985], "hatch": [66, 76, 985], "mypi": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 1276, 2046, 2047], "untyp": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2116], "assumeconstantresult": [66, 77], "burn": [66, 77, 2130], "tracabl": [66, 77], "get_item": [66, 77], "i64": [66, 71, 72, 76, 77], "myautogradfunct": 66, "autogradfunct": 66, "allow_in_graph": [66, 2136], "p_linear_weight": 66, "p_linear_bia": 66, "mul_1": [66, 72, 2131, 2133], "mysubmodul": [66, 74, 75], "condbranchclassmethod": [66, 74, 75], "subm": [66, 74, 75], "condbranchnestedfunct": [66, 74, 75], "inner_true_fn": [66, 74, 75], "inner_false_fn": [66, 74, 75], "condbranchnonlocalvari": [66, 74, 75], "my_tensor_var": [66, 74, 75], "my_primitive_var": [66, 74, 75], "nonloc": [66, 69, 74, 75, 2048], "c_lifted_tensor_0": [66, 74, 75], "lift_fresh_copi": [66, 74, 75, 2100], "constant_tensor": [66, 74, 75], "lifted_tensor_0": [66, 74, 75], "condclosedovervari": [66, 69, 74], "condoperand": [66, 74, 75], "extra_input": [66, 74, 75], "sym_size_int_1": [66, 74, 75], "add_3": [66, 71, 74, 75], "sub_1": [66, 74, 75], "vr": [66, 74, 75, 76, 77, 1207], "int_oo": [66, 74, 75], "condpred": [66, 74, 75], "constrainassizeexampl": [66, 76, 77], "hint": [66, 76, 77, 685, 1016, 1053, 1064, 1203, 1213, 1219, 1290, 1554, 1592, 1593, 1594, 1595, 1596, 2044, 2046, 2047, 2051, 2078, 2081, 2097, 2109, 2132], "_check": [66, 76, 77], "_check_is_s": [66, 76, 77], "u0": [66, 76, 77], "sym_constrain_range_for_size_default": [66, 76, 77], "sym_constrain_range_for_s": [66, 76, 77, 2045, 2100], "ge_3": [66, 76, 77], "_assert_scalar_default": [66, 76, 77], "_assert_scalar": [66, 76, 77, 2100, 2130], "le_1": [66, 76, 77], "_assert_scalar_default_1": [66, 76, 77], "u1": [66, 76, 77], "u2": [66, 76, 77, 2145], "constrainasvalueexampl": [66, 76, 77], "ge_1": [66, 76, 77], "test_decor": 66, "dynamicshapeassert": [66, 67], "dynamicshapeconstructor": [66, 75], "dynamicshapeifguard": [66, 71, 75], "dynamicshapemap": [66, 75, 78], "body_graph_0": [66, 75, 78], "map_impl": [66, 75, 78], "dynamicshapesl": [66, 75], "slice_2": [66, 75], "dynamicshapeview": [66, 75], "new_x_shap": [66, 75], "fnwithkwarg": [66, 72], "pos0": [66, 72], "tuple0": [66, 72], "myarg": [66, 72], "mykw0": [66, 72], "mykwarg": [66, 72], "input0": [66, 72], "input1": [66, 72, 765, 1465, 1481, 1482, 1540, 1557, 1625, 1635, 1636, 1678, 2045, 2074, 2099], "tuple0_0": [66, 72], "tuple0_1": [66, 72], "myargs_0": [66, 72], "myargs_1": [66, 72], "mul_2": [66, 72], "mul_3": [66, 72], "mul_4": [66, 72], "mul_5": [66, 72], "mul_6": [66, 72], "listcontain": [66, 67, 72, 75], "monkei": [66, 67, 72, 75, 1996], "cow": [66, 67, 72, 75], "pig": [66, 67, 72, 75], "listunpack": [66, 71, 72], "args_0": [66, 71, 72], "args_1": [66, 71, 72], "args_2": [66, 71, 72], "nestedfunct": [66, 69], "nullcontextmanag": [66, 70], "nullcontext": [66, 70], "pytreeflatten": 66, "tree_flatten": 66, "x_0_1": 66, "x_0_2": 66, "dim1_x": [66, 75], "scalaroutput": [66, 75], "anim": 66, "moo": 66, "specializedattribut": 66, "staticforloop": [66, 71], "unrol": [66, 71, 2046, 2047, 2099, 2136], "ret": [66, 71, 2081, 2109], "add_4": [66, 71], "add_5": [66, 71], "add_6": [66, 71], "add_7": [66, 71], "add_8": [66, 71], "add_9": [66, 71], "staticif": [66, 71], "tensorsetattr": [66, 68], "setattr": [66, 68, 2047], "typereflectionmethod": [66, 68], "overli": [66, 68, 2081, 2133], "userinputmut": [66, 79], "not_supported_yet": [66, 68, 73, 75, 80], "_export": [66, 68, 73, 75, 80, 2104, 2127], "db": [66, 68, 73, 75, 80], "supportlevel": [66, 68, 73, 75, 80], "dynamicshaperound": [66, 68, 75], "support_level": [66, 68, 73, 75, 80], "roundtoint": [66, 68, 75], "inttruediv": [66, 68, 75], "modelattrmut": [66, 73], "attr_list": [66, 73], "recreate_list": [66, 73], "optionalinput": [66, 73], "torchsymmin": [66, 80], "sym_min": [66, 80], "0x7f3e54f23a60": [66, 80], "undergo": 81, "gain": [81, 1827, 2073, 2126, 2127, 2138, 2139], "fxe0010": [81, 2097], "diagnosticopt": [81, 83, 2097], "verbosity_level": [81, 83, 2097], "onnx_diagnost": [81, 83, 685], "fxe0008": [81, 2097], "onnxscript": [82, 2097, 2098, 2099], "torchlib": [82, 86], "fxonnxinterpret": 82, "onnx": [83, 84, 86, 87, 88, 685, 1781, 1782, 1800, 1801, 1802, 2043, 2066, 2104, 2126], "endors": 83, "noteworthi": 83, "_intern": [83, 88, 2116], "disregard": [86, 87, 89, 2133], "indexerror": [86, 1765, 1767], "typeerror": [86, 1770, 2081, 2121, 2146], "opschema": [86, 2097], "onnxfunct": [87, 89, 2097], "perfect": 87, "nearest": [87, 784, 790, 792, 1441, 1601, 1603, 1654, 1665, 1725, 1727, 1858, 1886, 2078], "highest": [87, 685, 1452, 1868, 1869, 1901, 2105, 2121], "stringent": 87, "op_level_debug": [87, 89, 2097], "elementwise_dtyp": 88, "_ref": 88, "type_promot": 88, "absent": [89, 2080], "signifi": 89, "enable_tim": [90, 1018, 1402, 1415, 2012, 2078], "e_cuda": [90, 92, 1415, 1416], "elapsed_tim": [90, 1018, 1402, 1415, 2012, 2078], "end_ev": [90, 1018, 1402, 1415, 2012, 2078], "elaps": [90, 1018, 1402, 1415, 2012, 2060], "record_ev": [90, 92, 1019, 1023, 1415, 1416, 2013], "s_cuda": [90, 92, 1415, 1416], "e1_cuda": [90, 1415], "e2_cuda": [90, 1415], "s1_cuda": [90, 92, 1415, 1416], "s2_cuda": [90, 92, 1415, 1416], "s2": [90, 1415, 2114], "g_cpu": 91, "g_cuda": 91, "clone_st": 91, "cloned_st": 91, "bytetensor": [91, 1050, 1051, 1090, 1091, 1242, 1403, 1411, 1423, 1429, 1906, 1998, 2024, 2025, 2035, 2036, 2108, 2117, 2120], "graphsafe_get_st": [91, 2078], "current_st": 91, "graphsafe_set_st": [91, 2078], "g_cuda_oth": 91, "2147483647": 91, "0x8000_0000_0000_0000": [91, 1382, 2108], "0xffff_ffff_ffff_ffff": [91, 1382, 2108], "random_devic": 91, "1516516984916": 91, "new_stat": [91, 1090, 1091, 1411, 1429, 1906, 1998, 2035, 2036, 2108], "void": [91, 1062, 2078, 2088, 2136], "g_cpu_oth": 91, "queu": [92, 490, 1024, 1416, 1417, 2014, 2078], "wait_ev": [92, 1019, 1023, 1416, 2013], "abs_": [96, 2045, 2065, 2120], "acosh": [100, 126, 878, 2045, 2065, 2100, 2140], "batch1": [103, 104, 155, 156, 691, 951, 2045], "batch2": [103, 104, 155, 156, 173, 691, 951, 2045], "tensor1": [105, 106, 107, 108, 692, 693, 1384, 1883, 2045], "tensor2": [105, 106, 107, 108, 318, 408, 692, 693, 1384, 1883, 2045], "mat1": [109, 110, 558, 694, 1254, 1310, 1394, 1931, 1935, 1936, 1950, 2045, 2140], "mat2": [109, 110, 417, 558, 694, 963, 1254, 1310, 1394, 1931, 1935, 1936, 1950, 2045, 2140], "mat": [111, 112, 544, 695, 1436, 1864, 1928, 1931, 1950, 2045, 2119], "vec1": [113, 114, 696, 2045], "vec2": [113, 114, 292, 465, 696, 1234, 1846, 2045], "keepdim": [116, 118, 119, 120, 122, 138, 139, 358, 396, 411, 413, 414, 415, 418, 433, 434, 435, 436, 457, 474, 483, 559, 569, 619, 698, 700, 701, 702, 704, 885, 886, 1311, 1342, 1346, 1359, 1377, 1387, 1389, 1390, 1392, 1395, 1439, 1440, 1441, 1442, 1557, 1694, 1794, 1855, 1858, 1952, 1953, 1957, 2002, 2003, 2045, 2065, 2115, 2140], "rtol": [117, 348, 699, 930, 931, 1278, 1344, 1347, 1802, 2044, 2045, 2121], "atol": [117, 348, 699, 930, 931, 1278, 1344, 1347, 1356, 1802, 2044, 2045, 2081, 2121], "08": [117, 348, 699, 961, 1278, 1336, 1482, 1562, 1698, 1807, 1808, 1809, 1811, 1823, 1824, 1827, 1841, 1912, 2045], "equal_nan": [117, 348, 699, 1278, 2045, 2121], "arcco": [125, 2045, 2100, 2121], "acosh_": [127, 2045, 2065], "arccosh": [127, 2045, 2100], "arcsin": [129, 892, 2045, 2100, 2114], "arcsinh": [131, 2045, 2100], "atan2_": [134, 2045, 2065], "arctan2": [134, 2045, 2100], "arctan": [135, 2045, 2100], "arctanh": [137, 2045, 2100], "asinh": [147, 880, 2045, 2065, 2100, 2114, 2140], "atan": [151, 636, 637, 881, 2045, 2065, 2100, 2114, 2140], "atanh": [153, 883, 2045, 2065, 2100, 2114, 2140], "wrt": [154, 930, 931], "60521": [154, 904], "issuecom": [154, 904], "867061780": [154, 904], "texttt": [157, 158, 699, 1278, 1452, 2121], "bernoulli": [158, 765, 1456, 1485, 1486, 1487, 1488, 1492, 1499, 1518, 1639, 1640, 1641, 1642, 1647, 2043, 2045, 2065, 2100, 2123], "preserve_format": [159, 174, 176, 179, 182, 183, 184, 193, 210, 213, 244, 271, 301, 329, 397, 529, 584, 627, 980, 1121, 1175, 1799, 1867, 1869, 1871, 2041, 2081, 2117], "minlength": [160, 954, 2045], "bitwise_and": [162, 2045, 2100, 2140], "bitwise_left_shift": [164, 2045, 2100], "bitwise_not": [166, 2045, 2065, 2100, 2140], "bitwise_or": [168, 2045, 2100, 2140], "bitwise_right_shift": [170, 2045, 2100], "bitwise_xor": [172, 2045, 2100, 2140], "uint8": [176, 246, 621, 698, 704, 1172, 1856, 1859, 1860, 1883, 2104, 2116, 2117, 2119, 2120, 2150], "cauchi": [177, 2043, 2075, 2086, 2100, 2123], "dfrac": [177, 381, 612, 1482, 1636, 1754, 1755, 1788, 1791], "complex32": [183, 1475, 1476, 1477, 1629, 1630, 1631, 1800, 1898, 2120, 2121], "int8": [184, 452, 734, 955, 956, 957, 958, 959, 960, 1172, 1371, 1372, 1373, 1374, 2104, 2107, 2114, 2116, 2117, 2120, 2150], "input2": [187, 463, 464, 521, 765, 1465, 1481, 1482, 1540, 1557, 1625, 1635, 1636, 1678, 2045, 2074, 2099], "clamp_": [192, 2045, 2065], "uncoalesc": [194, 332, 1943], "coo": [194, 327, 332, 346, 618, 1254, 1931, 1935, 1940, 1941, 1942, 1943, 1944, 1945, 2043, 2054, 2117, 2121], "inttensor": [195, 212, 1264, 1379, 1380, 1490, 2117, 2120], "csr": [195, 212, 347, 587, 592, 1491, 1931, 1935, 1936, 1942, 1945, 2054, 2121], "sparse_csr": [195, 212, 587, 592, 1935, 1936, 1938, 1942, 1945, 2114], "nnz": [195, 548, 587, 588, 589, 591, 592, 1213, 1444, 1933, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 2051, 2114], "int32": [195, 212, 317, 325, 329, 451, 621, 967, 1121, 1133, 1134, 1169, 1172, 1173, 1320, 1331, 1332, 1333, 1351, 1379, 1467, 1856, 1893, 2104, 2114, 2116, 2117, 2120, 2138, 2150], "mkl": [195, 212, 2043, 2077, 2085, 2095, 2100, 2114, 2122, 2148], "routin": [195, 212, 887, 1362, 1930, 1958, 2114], "downcast": [195, 212], "to_sparse_csr": [195, 212, 588, 589, 1932, 1935, 1936, 2045, 2100, 2114], "conj_phys": [198, 998, 2045, 2100, 2114, 2140], "contiguous_format": [199, 335, 503, 504, 1120, 1738, 1746, 1747, 2117], "non_block": [200, 213, 584, 607, 627, 1289, 1548, 1780, 2045, 2078, 2116, 2140], "copysign": [202, 2045, 2100], "fweight": [209, 1005, 2045], "aweight": [209, 1005, 2045], "sparse_dim": [222, 549, 550, 1931, 1935, 1939, 1943, 2045, 2100, 2114], "dim1": [229, 231, 232, 573, 596, 597, 1107, 1109, 1110, 1324, 1961, 1979, 2045, 2140], "dim2": [229, 231, 232, 1107, 1109, 1110, 1324, 2045, 2140], "digamma": [235, 2045, 2065, 2100, 2115, 2140], "laid": 237, "outermost": [237, 1243], "channels_last": [237, 1289, 1548, 1738, 1746, 1747, 2117], "rounding_mod": [239, 240, 241, 242, 1114, 1115, 1164, 1167, 1877, 1987, 2045, 2140], "split_size_or_sect": [245, 306, 623, 1946], "eq": [248, 2045, 2065, 2100, 2140], "erf": [251, 644, 645, 2045, 2065, 2100, 2114, 2115, 2140], "erfc": [253, 646, 647, 2045, 2065, 2100, 2115, 2140], "lambd": [262, 302, 1503, 1586, 1657, 1715, 1803, 2045], "theori": [262, 2075, 2084], "fill_valu": [264, 450, 1174, 1175, 1467, 2045, 2078, 2140], "tall": [264, 1348, 1353, 2081], "start_dim": [267, 1158, 1493, 2045], "end_dim": [267, 1158, 1493, 2045], "float_pow": [273, 2045, 2100], "floor_divid": [277, 1114, 2045, 2100, 2114], "divisor": [280, 281, 493, 494, 773, 774, 1114, 1164, 1167, 1198, 1231, 1458, 1459, 1494, 1600, 1622, 1623, 1877, 1987], "fmod": [281, 1877, 2045, 2100, 2140], "mantissa": [284, 485, 1169, 1313, 1901, 2045, 2078, 2092, 2140], "gcd": [287, 2045, 2100, 2140], "ge": [289, 1245, 1383, 1499, 1504, 1505, 1518, 1556, 1658, 1659, 2045, 2065, 2100, 2140], "geometr": [290, 784, 790, 1654, 1665, 1725, 2001, 2043, 2100, 2123, 2142], "greater_equ": [298, 2045, 2100], "hypot": [308, 2045, 2100, 2140], "igamma": [312, 2045, 2100, 2140], "igammac": [314, 2045, 2100, 2140], "3100": [315, 487, 1260, 1875], "3553j": [315, 487, 1260, 1875], "5445": [315, 487, 1260, 1875], "7896j": [315, 487, 1260, 1875], "6492": [315, 487, 1260, 1875], "0633j": [315, 487, 1260, 1875], "0638": [315, 487, 1260, 1875], "8119j": [315, 487, 1260, 1875], "3553": [315, 1260], "7896": [315, 1260], "0633": [315, 1260, 1336, 2067], "8119": [315, 1260], "index_add_": [316, 911, 913, 916, 1261, 1262, 2045, 2093], "index_copy_": [318, 2045], "index_fill_": [320, 2045, 2065], "index_put_": [322, 2045], "include_self": [325, 520, 521, 1263, 1892, 2045, 2140], "identit": 325, "floattensor": [325, 491, 691, 692, 693, 694, 695, 740, 930, 931, 951, 1490, 1491, 1551, 1592, 1899, 2117, 2120], "amax": [325, 521, 701, 702, 1935, 2045, 2100, 2140], "amin": [325, 521, 700, 702, 1935, 2045, 2100, 2140], "fill_": [325, 1289, 1315, 1548, 1878, 2045, 2065, 2089, 2116], "72": [325, 621, 1243, 2104], "uint8_t": [330, 1800], "retain_grad": [339, 2045, 2075, 2100], "requires_grad_": [339, 452, 1289, 1467, 1548, 1638, 1932, 1935, 1973, 2045, 2065, 2075, 2120, 2145], "n_fft": [355, 560, 1286, 1954, 2045], "hop_length": [355, 560, 1286, 1954, 2045], "win_length": [355, 560, 1286, 1954, 2045], "center": [355, 560, 784, 790, 1139, 1286, 1619, 1654, 1665, 1725, 1824, 1847, 1914, 1954, 2045, 2075, 2085, 2100, 2119], "onesid": [355, 560, 1286, 1954, 2045, 2140], "return_complex": [355, 560, 1286, 1954, 2045], "element_s": [357, 439, 2045, 2065, 2100, 2116], "lcm": [360, 2045, 2100], "ldexp": [362, 1169, 2045, 2100], "le": [364, 1210, 1317, 1504, 1505, 1658, 1659, 2045, 2065, 2100, 2121, 2140], "lerp": [366, 2045, 2100], "lt": [367, 399, 1210, 1316, 2044, 2045, 2065, 2100, 2131, 2134, 2140], "less_equ": [370, 2045, 2100], "lgamma": [372, 656, 657, 2045, 2100, 2140], "ln": [381, 1318, 2115], "logical_and": [387, 2045, 2100, 2140], "logical_not": [389, 1706, 2045, 2065, 2067, 2100, 2140], "logical_or": [391, 2045, 2100, 2140], "logical_xor": [393, 2045, 2100, 2140], "pivot": [400, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1379, 1380, 1381, 1857, 2045], "get_info": [400, 1379], "lu_data": [401, 1380, 1381, 2045], "lu_pivot": [401, 1380, 1381, 2045], "masked_fill_": [403, 1706, 2045, 2065, 2066], "booltensor": [404, 406, 740, 1383, 1592, 2010, 2117, 2120], "masked_scatter_": [405, 2045], "mvlgamma": [430, 2045, 2100], "posinf": [431, 432, 1438, 2045], "neginf": [431, 432, 1438, 2045], "nan_to_num": [432, 2045, 2100], "interpol": [435, 483, 790, 791, 792, 1315, 1441, 1601, 1602, 1603, 1619, 1654, 1725, 1726, 1727, 1858, 1995, 2045, 2106], "ne": [443, 1754, 1788, 1796, 2045, 2065, 2100, 2140, 2145], "8182e": 449, "5765e": 449, "41": [449, 1122, 1348, 1728, 1787, 1857], "0545e": 449, "0949e": 449, "4842e": [449, 1122], "0000e": [449, 1122, 1162, 1367, 1376, 1438, 1787, 1912, 1914, 1915, 1920, 1921], "00": [449, 1122, 1162, 1367, 1376, 1438, 1787, 1801, 1912, 1914, 1915, 1920, 1921, 2044, 2099], "141592": [450, 1174], "1416": [450, 1103, 1174, 1973], "from_numpi": [452, 890, 891, 1897, 1973, 2051, 2136], "array_lik": [452, 890, 1940, 1941, 1942, 1943, 1944, 1945, 1973, 2067, 2120], "nextaft": [455, 2045, 2100, 2140], "fro": [457, 1321, 1342, 1346, 1359, 1765, 1774, 1794, 2045], "not_equ": [460, 2045, 2100], "resolve_conj": [462, 998, 2045, 2100], "resolve_neg": [462, 2045, 2100], "shorthand": [462, 1309], "input3": [464, 2045], "polygamma": [470, 2045, 2100, 2115], "q_per_channel_axi": [477, 478, 2045, 2100], "zero_point": [478, 480, 743, 744, 745, 746, 747, 748, 749, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 775, 777, 778, 779, 780, 782, 785, 786, 807, 810, 828, 829, 830, 831, 834, 863, 1133, 1134, 1859, 1860, 1861, 1862, 1863, 2045, 2104, 2105], "qtensor": [482, 2045], "life": [490, 1019], "unexpectedli": [490, 2116, 2120], "poll": 490, "realloc": [490, 983, 1264, 2078], "counterintuit": [490, 2075], "s1": [490, 1203, 2133], "some_comm_op": 490, "wouldn": [490, 1216, 2111, 2135], "chrome": [490, 942, 2103, 2139, 2143], "export_chrome_trac": [490, 2103, 2143], "cudacachingalloc": [490, 1020, 2078, 2084], "enable_grad": [492, 2049, 2123], "0100": [492, 886, 1343, 1859], "0200": 492, "0300": [492, 2094], "maxnorm": [495, 496, 1878, 2045], "tile": [497, 2045, 2071, 2078, 2100, 2114, 2136], "repeat_interleav": [497, 1706, 1995, 2045, 2100, 2106], "output_s": [498, 746, 747, 748, 771, 772, 1449, 1450, 1451, 1453, 1454, 1455, 1479, 1494, 1495, 1496, 1544, 1545, 1546, 1600, 1613, 1614, 1615, 1616, 1617, 1618, 1648, 1649, 1650, 1682, 1683, 1684, 1879, 2045, 2067, 2140], "is_leaf": [499, 2045, 2065, 2067, 2100], "saved_weight": 500, "loaded_weight": 500, "5503": 500, "4926": [500, 2089], "1158": 500, "8303": 500, "1007": 500, "9853": 500, "2316": 500, "6606": 500, "resiz": [503, 504, 528, 549, 550, 1172, 1173, 1177, 1601, 1654, 1665, 2045, 2065, 2085, 2100, 2116, 2140], "set_": [503, 2045], "shift": [509, 956, 959, 1139, 1146, 1456, 1462, 1463, 1464, 1492, 1588, 1647, 1884, 1913, 2045, 2048], "decim": [511, 512, 1886, 2045, 2092, 2150], "scatter_": [516, 519, 1890, 2045], "scatter_add_": [517, 518, 1891, 1995, 2045], "scatter_reduce_": [517, 520, 1892, 2045], "axi": [517, 519, 521, 831, 834, 996, 1118, 1133, 1159, 1230, 1255, 1859, 1879, 1884, 1885, 2009, 2045, 2051, 2082, 2099, 2104, 2136, 2140, 2144], "4600": 517, "2300": 517, "scatter_reduc": [521, 1995, 2045, 2100, 2140], "sgn": [526, 1168, 1910, 2045, 2065, 2067, 2100, 2114], "untypedstorag": [528, 561, 617, 1275, 2043, 2094, 2116], "int16": [529, 1172, 1372, 2114, 2116, 2117, 2120, 2150], "dense_dim": [547, 549, 550, 587, 588, 589, 591, 592, 1943, 2045, 2100, 2114], "nse": [548, 2114], "6550": 548, "2397": 548, "1611": 548, "0779": [548, 1326, 1854, 2010], "2326": 548, "0558": 548, "4711": 548, "9678": 548, "5138": 548, "0411": 548, "9417": 548, "5158": 548, "0793": 548, "0036": [548, 1387], "2569": 548, "1055": 548, "sparse_coo": [548, 587, 1444, 1935, 1938, 1939, 1943, 2114, 2117], "split_siz": [551, 1946, 2045, 2140], "squeez": [557, 698, 700, 701, 702, 704, 1311, 1377, 1387, 1389, 1390, 1392, 1395, 1439, 1442, 1636, 1855, 1939, 1952, 1953, 1957, 2002, 2003, 2045, 2065, 2099, 2100, 2106, 2118, 2140], "pad_mod": [560, 1954, 2045], "typedstorag": [561, 1275, 2043, 2094, 2116], "untyped_storag": 561, "compute_uv": [571, 1353, 1354, 1958, 2045], "axis0": [572, 1960, 2045], "axis1": [572, 1960, 2045], "dim0": [573, 596, 597, 1961, 1979, 2045], "indices_or_sect": [582, 1117, 1253, 1974, 2008], "5044": 584, "0005": [584, 1837, 1843], "3310": 584, "0584": [584, 1958], "cuda0": [584, 2078, 2087, 2120], "masked_grad": [585, 2045], "sparse_mask": [585, 2045, 2100], "mkldnn": [586, 1299, 2043, 2100], "sparsedim": 587, "blocksiz": [587, 588, 589, 1940, 1941, 1942, 2045, 2114], "sparse_csc": [587, 591, 1938, 1942, 1944, 2114], "sparse_bsr": [587, 589, 1941, 1942, 2114], "sparse_bsc": [587, 588, 1940, 1942, 2114], "bsr": [587, 589, 1941, 1942, 2121], "bsc": [587, 588, 1940, 1942, 2121], "csc": [587, 591, 1942, 1944, 2121], "minu": [587, 588, 589, 591, 592, 2115], "crow_indic": [587, 589, 592, 1933, 1935, 1936, 1938, 1941, 1942, 1945, 2045, 2100, 2114, 2121], "col_indic": [587, 589, 592, 1935, 1936, 1938, 1941, 1942, 1945, 2045, 2071, 2100, 2114, 2121], "sparsecsr": [587, 1979, 2114], "row_indic": [588, 591, 1940, 1944, 2045, 2100, 2114, 2121], "ccol_indic": [588, 591, 1940, 1944, 2045, 2100, 2114, 2121], "_nnz": [590, 591, 592, 2100], "012766935862600803": 593, "5415473580360413": 593, "08909505605697632": 593, "7729271650314331": 593, "unitriangular": [598, 1352, 1982, 2045], "tril": [600, 1609, 1610, 1611, 1706, 2045, 2100, 2136], "triu": [602, 1759, 1982, 2045, 2099, 2100, 2136], "trunc": [606, 682, 683, 692, 1114, 1157, 1164, 1167, 1886, 2045, 2065, 2100, 2114, 2140], "sizedim": 611, "return_invers": [613, 614, 1991, 1992, 2045], "return_count": [613, 614, 1991, 1992, 2045], "unsqueez": [616, 1139, 1310, 1350, 1490, 1568, 1759, 1976, 2045, 2051, 2081, 2100, 2106, 2114, 2118, 2119, 2140], "subspac": [621, 1353, 1554, 1847, 1958, 1959], "span": [621, 1080, 1081, 1483, 1958, 2103, 2109], "foral": 621, "proportion": [621, 790, 1601, 1725], "9482": [621, 1266], "0310": 621, "4999": 621, "5316": 621, "1520": 621, "7472": 621, "5617": 621, "8649": 621, "4724": [621, 2089], "0334": 621, "2976": 621, "8499": 621, "2109": 621, "9913": 621, "9607": 621, "6123": 621, "1064483442": 621, "1124191867": 621, "1069546515": 621, "1089989247": 621, "1105482831": 621, "1061112040": 621, "1057999968": 621, "1084397505": 621, "1071760287": 621, "1123489973": 621, "1097310419": 621, "1084649136": 621, "1101533110": 621, "1073668768": 621, "1082790149": 621, "1088634448": 621, "1000000000": 621, "0047": 621, "0310j": 621, "5316j": 621, "7472j": 621, "8649j": 621, "0334j": 621, "8499j": 621, "9913j": 621, "6123j": 621, "202": 621, "154": [621, 2095], "59": [621, 1984, 1986], "182": 621, "243": [621, 1286, 1958], "253": 621, "188": 621, "185": [621, 2145], "252": [621, 2095], "191": 621, "63": [621, 2095, 2104], "240": 621, "227": 621, "165": 621, "190": 621, "146": 621, "106": 621, "205": 621, "112": [621, 2145], "206": 621, "189": 621, "95": [621, 1835, 1838, 1839, 2062], "147": 621, "43": 621, "246": [621, 2145], "87": 621, "235": 621, "226": 621, "254": [621, 2095], "111": [621, 1801, 2099], "117": 621, "177": 621, "28": [621, 751, 1102, 1980, 2097, 2099, 2133, 2134, 2139], "xlogi": [626, 2045, 2100, 2115], "inductor": [685, 983, 985, 2053, 2085, 2100, 2104, 2126, 2127, 2130, 2131, 2132, 2133, 2134, 2136, 2138, 2139, 2142, 2143, 2145, 2147], "aot_graph": [685, 2053], "aot_joint_graph": [685, 2053], "ddp_graph": [685, 2053, 2080], "graph_cod": [685, 2053, 2133], "graph_break": [685, 2053, 2130, 2133, 2136, 2137, 2143], "graph_siz": [685, 2133], "recompiles_verbos": 685, "trace_sourc": 685, "trace_cal": 685, "trace_bytecod": 685, "output_cod": [685, 2053, 2136, 2138, 2145], "kernel_cod": 685, "perf_hint": [685, 983], "post_grad_graph": 685, "cudagraph": [685, 983, 1053, 2078, 2126, 2136, 2138, 2139, 2142], "sym_nod": 685, "compiled_autograd_verbos": 685, "cudagraph_static_input": 685, "toggl": [685, 2078, 2103], "suppress": [685, 2047, 2108], "silenc": 685, "lowest": [685, 973, 1438, 1764, 1765, 1773, 1774, 1868, 1869, 2081, 2121], "notset": 685, "torchinductor": [685, 2053, 2126, 2127, 2132, 2134, 2136, 2138], "ddpoptim": [685, 2053], "symnod": [685, 1193, 2132], "opter": 685, "unregist": [685, 2053, 2060, 2099], "cosin": [688, 689, 1002, 1003, 1481, 1482, 1636, 1830, 1831, 1839, 1916, 2101, 2136], "3348": 688, "5889": 688, "2005": [688, 2003, 2145], "1584": 688, "2294": [688, 1389], "2004": 688, "3690": 688, "7298": [688, 1876], "hyperbol": [689, 893, 896, 1003, 1589, 1925, 1972], "uniform_": [689, 896, 953, 2043, 2045, 2065, 2073, 2081, 2115, 2123], "3192": 689, "9915": 689, "9674": 689, "7151": 689, "7791": 689, "3120": [689, 1000], "2979": 689, "1341": 689, "_i": [690, 691, 692, 693, 694, 951, 953, 956, 959, 963, 978, 1114, 1164, 1313, 1315, 1433, 1597, 1850, 1854, 1870, 1873, 1908, 1955, 2010, 2115], "0202": 690, "0985": 690, "3506": [690, 1379], "6056": 690, "3944": 690, "9732": 690, "3497": 690, "6245": [690, 1321], "4022": [690, 1958], "3743": 690, "7724": 690, "5811": 690, "8017": 690, "7695": 690, "3930": 690, "3672": [690, 1015, 1322], "1450": [690, 1939], "6971": 690, "0736": [690, 2089], "0994": 690, "3216": 690, "7845": 690, "1610": 690, "1868": 690, "4090": 690, "9902": [690, 1015, 1322], "3667": [690, 1000], "3925": 690, "6147": 690, "sum_": [691, 1286, 1341, 1358, 1457, 1458, 1459, 1475, 1476, 1477, 1483, 1515, 1516, 1517, 1536, 1551, 1555, 1557, 1952, 1953, 1954, 1975, 1980, 2002, 2003, 2004, 2115], "mathbin": [691, 694, 695, 951, 963, 1936], "doubletensor": [691, 692, 693, 694, 695, 951, 1899, 2117, 2120], "tensorfloat32": [691, 694, 951, 963, 1384, 1394, 1475, 1476, 1477, 1478, 1479, 1480, 1535, 1629, 1630, 1631, 1632, 1633, 1634, 1671, 1901, 2078, 2092], "6311": 691, "0503": 691, "9768": [691, 2089], "0362": 691, "1653": 691, "8185": 691, "4255": [691, 1433], "6760": 691, "9453": 691, "5743": 691, "8202": 691, "3691": 691, "0943": 691, "1109": [691, 1501, 1921], "4730": [691, 1975], "histor": [692, 1075, 1487, 2077, 2089, 2094], "2312": [692, 1939], "6496": 692, "1312": 692, "0428": 692, "4292": 692, "1030": 692, "5369": 692, "9829": 692, "0430": 692, "8635": 693, "6391": 693, "6174": 693, "7617": 693, "5879": 693, "7388": 693, "8353": 693, "6249": 693, "6511": 693, "8716": 694, "4671": 694, "3746": 694, "7573": 694, "9555": 694, "8681": 694, "3768": 695, "5565": 695, "otim": [696, 1310, 1498, 1653], "conj": [697, 999, 1135, 1136, 1138, 1140, 1147, 1149, 1153, 1154, 1156, 1319, 1320, 1326, 1328, 1347, 1881, 1882, 2045, 2081, 2086, 2100, 2120, 2140], "mh": [697, 974, 975, 976, 1326, 1958, 2045, 2100, 2118, 2120], "lvert": [699, 1278, 1597, 1691, 2121], "rvert": [699, 1278, 2121], "leq": [699, 952, 953, 1000, 1137, 1139, 1278, 1310, 1314, 1329, 1335, 1467, 1489, 1551, 1553, 1555, 1638, 1690, 1693, 1911, 1954, 2073, 2115], "elementwis": [699, 1000, 1033, 1061, 1062, 1162, 1164, 1448, 1510, 1511, 1512, 1715, 2001, 2047, 2067, 2086, 2115], "07": [699, 828, 829, 830, 831, 834, 974, 1122, 1327, 1330, 1335, 1347, 1348, 1354, 1377, 1380, 1753, 1802, 1810, 1915, 1920, 1958, 2099], "09": [699, 1810, 1828, 2051, 2121], "8177": 700, "4878": 700, "2491": 700, "9130": 700, "7158": 700, "1775": 700, "0992": 700, "4817": 700, "0053": 700, "0164": 700, "3738": 700, "0507": [700, 2099], "9700": 700, "1106": 700, "0318": 700, "0816": [700, 1379], "6451": 701, "4866": [701, 2127], "2987": 701, "3312": 701, "5744": 701, "2980": [701, 2067], "8397": 701, "2713": 701, "9128": 701, "9214": 701, "7268": 701, "2995": 701, "9023": [701, 1320], "4853": 701, "9075": 701, "6165": 701, "180": [703, 1103, 1865], "14159": [703, 1973], "135": 703, "45": [703, 1463, 1464, 1511, 1512, 1588, 1787, 2099], "ao": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 2104, 2105, 2106], "batch_norm": [705, 706, 1299, 2045, 2100], "fuse": [705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 734, 798, 799, 810, 812, 813, 814, 822, 858, 870, 871, 983, 1303, 1304, 1706, 1746, 1747, 1748, 1749, 1750, 1751, 1806, 1807, 1808, 1826, 1901, 2057, 2065, 2068, 2099, 2101, 2104, 2105, 2106, 2107, 2136, 2138, 2144], "bn": [707, 708, 709, 710, 711, 712, 822, 871, 1119, 1299, 1748, 1750, 2094, 2101, 2104, 2105], "qat": [717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 735, 736, 737, 738, 798, 799, 857, 2104, 2105, 2106], "dilat": [717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 735, 736, 743, 744, 745, 746, 747, 748, 777, 778, 779, 787, 788, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1524, 1525, 1526, 1527, 1528, 1529, 1541, 1542, 1543, 1600, 1629, 1630, 1631, 1632, 1633, 1634, 1648, 1679, 1680, 1681, 1724, 1862, 1863, 2045, 2099, 2140], "padding_mod": [717, 718, 719, 720, 721, 722, 723, 724, 730, 731, 732, 735, 736, 743, 744, 745, 746, 747, 748, 777, 778, 779, 1475, 1476, 1477, 1478, 1479, 1480, 1524, 1525, 1526, 1527, 1528, 1529, 1654, 2045, 2140], "momentum": [717, 718, 719, 720, 721, 722, 728, 729, 741, 742, 756, 757, 758, 1462, 1463, 1464, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1588, 1624, 1664, 1811, 1824, 1826, 1832, 1839, 1841, 2045, 2085, 2089, 2091, 2101, 2140], "freeze_bn": [717, 718, 719, 720, 721, 722], "qconfig": [717, 718, 719, 720, 721, 722, 723, 724, 725, 735, 736, 737, 738, 793, 795, 797, 800, 801, 802, 804, 847, 849, 850, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 872, 873, 2125], "batchnorm1d": [717, 720, 1521, 1588, 1624, 2094, 2106], "fakequant": [717, 718, 719, 720, 721, 722, 723, 724, 725, 735, 736, 737, 738, 810, 873], "weight_fake_qu": [717, 718, 719, 720, 721, 722, 723, 724, 735, 736], "quant": [717, 718, 719, 720, 721, 722, 723, 724, 725, 735, 736, 737, 761, 796, 798, 799, 804, 847, 872, 873, 1133, 1134, 2104, 2105], "batchnorm3d": [719, 722, 724, 729, 1523, 1588, 1624, 2106], "num_featur": [728, 729, 741, 742, 756, 757, 758, 1289, 1462, 1463, 1464, 1510, 1511, 1512, 1521, 1522, 1523, 1530, 1531, 1532, 1548, 1588, 1656, 2089], "qint8": [733, 734, 761, 766, 769, 770, 777, 778, 779, 786, 798, 800, 807, 829, 852, 869, 870, 872, 873, 1800, 1859, 1860, 2104, 2106, 2107, 2116, 2120, 2121], "from_float": [737, 743, 744, 745, 750, 751, 761, 769, 804, 825, 832, 835, 847, 2104], "use_precomputed_fake_qu": [737, 743, 744, 745, 750, 751, 761, 769, 804, 875], "qparams_dict": [737, 743, 744, 745, 769], "hidden_s": [739, 765, 766, 770, 1499, 1500, 1518, 1519, 1564, 1565, 1566, 2045], "num_lay": [739, 765, 1499, 1518, 1564, 1565, 1593, 1595, 2045, 2089], "batch_first": [739, 740, 765, 1499, 1518, 1554, 1564, 1565, 1592, 1594, 1596, 1781, 1783, 1784, 1786, 2045, 2083], "bidirect": [739, 765, 1499, 1518, 1564, 1565, 2045], "_lstmlayer": 739, "nnqa": 739, "h0": [739, 765, 767, 1499, 1518, 1564], "c0": [739, 767, 1518, 2145], "hn": [739, 765, 767, 1499, 1500, 1518, 1564], "cn": [739, 767, 1289, 1518, 1870], "weight_ih": [739, 1500, 1519, 1564, 1566], "weight_hh": [739, 1500, 1519, 1564, 1566], "embed_dim": [740, 1554], "num_head": [740, 1554, 1608, 2045], "add_bias_kv": [740, 1554], "add_zero_attn": [740, 1554, 2045], "kdim": [740, 1554], "vdim": [740, 1554], "dequant": [740, 793, 796, 798, 799, 807, 809, 872, 2045, 2100, 2105, 2107, 2121, 2124], "mha": [740, 1554, 2043], "conver": 740, "key_padding_mask": [740, 1554, 2045], "need_weight": [740, 1554, 2045], "attn_mask": [740, 1554, 1592, 1706, 2045], "average_attn_weight": [740, 1554, 2045], "is_caus": [740, 1554, 1595, 1596, 1611, 1706, 2045], "attn_output_weight": [740, 1554], "unmask": [740, 1592], "attn_weight": [740, 1554, 1706], "head": [740, 1452, 1554, 1592, 1594, 1596, 1706, 2071], "attn_output": [740, 1554], "quint8": [743, 744, 745, 746, 747, 748, 750, 751, 761, 777, 778, 779, 786, 798, 800, 807, 828, 829, 830, 831, 834, 836, 870, 872, 1800, 1859, 1860, 1861, 1862, 1863, 2104, 2106, 2107, 2116, 2120, 2121], "learnabl": [743, 744, 745, 746, 747, 748, 750, 751, 761, 765, 769, 1462, 1463, 1464, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1490, 1491, 1499, 1500, 1502, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1556, 1563, 1564, 1566, 1588, 1646, 1699, 1737, 2089, 2101], "q_input": [743, 744, 745, 746, 747, 748, 777, 778, 779], "quantize_per_tensor": [743, 744, 745, 746, 747, 748, 761, 762, 763, 777, 778, 779, 1861, 1862, 1863, 2045, 2100, 2104], "unequ": [744, 745, 746, 747, 748, 1476, 1477, 1479, 1480], "50": [744, 746, 747, 748, 777, 833, 1345, 1458, 1459, 1467, 1475, 1476, 1477, 1479, 1480, 1495, 1496, 1515, 1516, 1517, 1541, 1542, 1543, 1599, 1631, 1632, 1634, 1638, 1649, 1650, 1825, 1970, 2067, 2078, 2119, 2136], "56": [745, 1993, 2114, 2139], "output_pad": [746, 747, 748, 1478, 1479, 1480, 1527, 1528, 1529, 1632, 1633, 1634, 2045, 2140], "qnnpack": [746, 747, 761, 769, 866, 867, 870, 872, 873, 2104, 2106], "convtranspose2d": [746, 1528, 1633, 1746, 1995, 2106], "nnq": [746, 747, 748, 793, 795, 796, 875, 2104], "downsampl": [746, 747, 748, 1479, 1601, 1619, 1654, 1665], "upsampl": [746, 747, 748, 784, 791, 792, 1479, 1602, 1603, 1619, 1654, 1665, 1726, 1727], "fbgemm": [747, 748, 761, 769, 842, 866, 867, 870, 872, 873, 2051, 2104, 2105, 2130, 2136, 2137], "cubic": [748, 1496, 1650, 1654], "num_embed": [750, 751, 1490, 1491, 1646], "embedding_dim": [750, 751, 1490, 1491, 1520, 1645, 1646], "padding_idx": [750, 1490, 1491, 1645, 1646, 2045, 2140], "scale_grad_by_freq": [750, 751, 1490, 1491, 1645, 1646, 2045, 2140], "_weight": [750, 751, 1490, 1491, 1811, 1823, 2144], "overwritten": [750, 751, 761, 769, 804, 852, 872, 890, 2075, 2081, 2121, 2130], "_embed": [750, 751], "_dim": [750, 751, 1490], "include_last_offset": [751, 1491, 1646, 2045, 2140], "embedding_bag": [751, 2045, 2100], "floatfunct": [752, 2104], "activation_post_process": [752, 807, 2104], "add_relu": [752, 753, 762, 2057, 2100, 2124], "add_scalar": [752, 753, 762, 2100, 2119, 2124], "mul_scalar": [752, 753, 762, 2100, 2124], "collector": 753, "f_add": 753, "num_channel": [754, 1502, 2066], "normalized_shap": [759, 1520, 1563, 1668, 1703, 1737, 2045, 2067, 2140], "elementwise_affin": [759, 1520, 1563, 1737], "negative_slop": [760, 785, 1534, 1669, 1670, 2045, 2073, 2140], "slope": [760, 785, 1534, 1580, 2073], "bias_": [761, 769], "_featur": [761, 769, 786, 1452, 1465, 1533, 1535, 1625, 1671], "precomput": [761, 804, 2132], "from_refer": [761, 769], "ref_qlinear": [761, 769], "output_scal": [761, 764, 1861, 2045], "output_zero_point": [761, 764, 1861, 2045], "q_add": 762, "qint32": [762, 763, 1800, 1859, 1860, 2104, 2107, 2116, 2120, 2121], "x_0": [763, 1980], "gate": [765, 766, 1498, 1499, 1500, 1518, 1578, 1653, 1709], "r_t": [765, 1499, 1805, 1823], "w_": [765, 1450, 1451, 1454, 1455, 1458, 1459, 1461, 1469, 1470, 1471, 1472, 1473, 1474, 1476, 1477, 1479, 1480, 1483, 1495, 1496, 1499, 1500, 1516, 1517, 1518, 1519, 1542, 1543, 1545, 1546, 1555, 1560, 1561, 1564, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1601, 1602, 1603, 1604, 1605, 1606, 1650, 1654], "x_t": [765, 906, 910, 911, 916, 917, 1462, 1463, 1464, 1499, 1510, 1511, 1512, 1518, 1564, 1588, 1804], "b_": [765, 1499, 1500, 1518, 1519, 1536, 1564, 1566, 1975, 2114], "hr": [765, 1499, 1500, 1518, 2086], "h_": [765, 1450, 1451, 1454, 1455, 1458, 1459, 1465, 1470, 1471, 1473, 1474, 1476, 1477, 1479, 1480, 1495, 1496, 1499, 1500, 1516, 1517, 1518, 1535, 1542, 1543, 1544, 1545, 1546, 1560, 1561, 1564, 1566, 1571, 1572, 1574, 1575, 1601, 1602, 1603, 1605, 1606, 1625, 1650, 1654], "z_t": [765, 1499], "iz": [765, 1499, 1500], "hz": [765, 1029, 1499, 1500, 2119], "n_t": [765, 1499], "odot": [765, 1499, 1500, 1518, 1519, 1805], "h_t": [765, 1499, 1518, 1564], "hadamard": [765, 1499, 1500, 1518, 1519], "multilay": [765, 1499, 1518, 2097], "b_ih": [765, 1499, 1500, 1518, 1519, 1564, 1566, 2045], "b_hh": [765, 1499, 1500, 1518, 1519, 1564, 1566, 2045], "h_0": [765, 1499, 1518, 1519, 1564], "seq_len": [765, 1499, 1518, 1554, 1564], "pack_padded_sequ": [765, 1499, 1518, 1564, 1780, 1782, 1783, 2083], "num_direct": [765, 1499, 1518, 1564], "h_n": [765, 1499, 1518, 1564], "_size": [765, 1449, 1450, 1451, 1453, 1454, 1455, 1457, 1458, 1459, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1495, 1496, 1499, 1500, 1515, 1516, 1517, 1518, 1519, 1541, 1542, 1543, 1544, 1545, 1546, 1564, 1566, 1600, 1650], "_layer": [765, 1499, 1518, 1564], "_direct": 765, "output1": [765, 1452, 2074, 2099], "output2": [765, 1452], "weight_ih_l": [765, 1499, 1518, 1564], "w_ir": [765, 1499], "w_iz": [765, 1499], "w_in": [765, 1499], "weight_hh_l": [765, 1499, 1518, 1564], "w_hr": [765, 1499], "w_hz": [765, 1499], "w_hn": [765, 1499], "bias_ih_l": [765, 1499, 1518, 1564], "b_ir": [765, 1499], "b_iz": [765, 1499], "b_in": [765, 1499], "bias_hh_l": [765, 1499, 1518, 1564], "b_hr": [765, 1499], "b_hz": [765, 1499], "b_hn": [765, 1499], "mathcal": [765, 1465, 1475, 1476, 1477, 1478, 1479, 1480, 1490, 1491, 1499, 1500, 1518, 1519, 1533, 1535, 1564, 1566, 1567, 1588, 1870, 2073, 2086], "subtli": [765, 1499, 1805, 1826], "gru": [766, 1500, 1565, 2045, 2078, 2100, 2104, 2106], "cell": [766, 768, 770, 1499, 1500, 1518, 1519, 1564, 1566], "hx": [766, 768, 770, 1500, 1519, 1566, 2045], "cx": [768, 1519, 2045], "nonlinear": [770, 1460, 1481, 1507, 1564, 1566, 1576, 2043, 2073, 2114], "elman": [770, 1564, 1566], "adaptiveavgpool2d": [771, 1614, 1995, 2106], "adaptiveavgpool3d": [772, 1615, 1995, 2106], "ceil_mod": [773, 774, 787, 788, 1457, 1458, 1459, 1515, 1516, 1517, 1541, 1542, 1543, 1621, 1622, 1623, 1675, 1676, 1677, 1679, 1680, 1681, 1862, 1863, 2045, 2140], "count_include_pad": [773, 774, 1457, 1458, 1459, 1621, 1622, 1623, 2045, 2140], "divisor_overrid": [773, 774, 1458, 1459, 1622, 1623, 2045, 2140], "kh": [773, 774, 778, 779, 1458, 1459, 1495, 1496, 1542, 1543, 1622, 1623, 1630, 1631, 1633, 1634, 1649, 1650, 1680, 1681], "kw": [773, 774, 778, 779, 1458, 1459, 1495, 1496, 1542, 1543, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1649, 1650, 1679, 1680, 1681], "sh": [773, 774, 778, 779, 1622, 1623, 1630, 1631, 1633, 1634, 1680, 1681, 2085, 2145], "sw": [773, 774, 777, 778, 779, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1679, 1680, 1681], "avgpool2d": [773, 1622, 2106], "_channel": [773, 774, 777, 778, 779, 1475, 1476, 1477, 1478, 1479, 1480, 1502, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1679, 1680, 1681, 2109], "ih": [773, 774, 778, 779, 1564, 1566, 1622, 1623, 1630, 1631, 1633, 1634, 1680, 1681], "iw": [773, 774, 777, 778, 779, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634, 1679, 1680, 1681], "padh": [773, 774, 778, 779, 1622, 1623, 1630, 1631, 1633, 1634], "padw": [773, 774, 777, 778, 779, 1621, 1622, 1623, 1629, 1630, 1631, 1632, 1633, 1634], "kd": [774, 779, 1459, 1543], "padd": [774, 779], "formul": [775, 1466, 1489, 1503, 1538, 1585, 1586, 1673, 1691, 1706, 2086, 2114], "min_": [776, 1325, 1326, 1335, 1353, 1958], "max_": [776, 1541, 1542, 1543, 1754, 1788], "convolv": [777, 778, 779, 1475, 1476, 1477, 1478, 1479, 1480, 1524, 1525, 1526, 1527, 1528, 1529, 1629, 1630, 1631, 1632, 1633, 1634], "dw": [777, 778, 779, 1629, 1630, 1631, 1632, 1633, 1634], "qf": [777, 778, 779], "dtype_input": [777, 778, 779], "dtype_filt": [777, 778, 779], "q_filter": [777, 778, 779], "dh": [778, 779, 1630, 1631, 1633, 1634], "dd": 779, "scale_factor": [784, 790, 791, 792, 1601, 1602, 1603, 1665, 1706, 1725, 1726, 1727, 2045, 2140], "align_corn": [784, 790, 791, 1601, 1602, 1619, 1654, 1665, 1725, 1726, 2045, 2140], "height": [784, 790, 1458, 1459, 1476, 1477, 1479, 1480, 1516, 1517, 1542, 1543, 1555, 1583, 1601, 1665, 1725, 2066], "spatial": [784, 790, 791, 792, 971, 1139, 1463, 1494, 1520, 1560, 1561, 1583, 1600, 1601, 1602, 1603, 1619, 1627, 1654, 1665, 1695, 1696, 1697, 1725, 1726, 1727], "pixel": [784, 790, 792, 1476, 1483, 1486, 1487, 1488, 1492, 1555, 1560, 1561, 1601, 1619, 1654, 1665, 1725, 1727], "corner": [784, 790, 962, 1601, 1609, 1610, 1611, 1619, 1654, 1665, 1725, 2097], "leakyrelu": [785, 1549, 1669, 2089, 2106], "_slope": [785, 1534, 1669, 2073], "xa": [786, 1339, 1350, 1351, 1352, 1535, 1671], "return_indic": [787, 788, 1453, 1454, 1455, 1495, 1496, 1541, 1542, 1543, 1544, 1545, 1546, 1616, 1617, 1618, 1649, 1650, 1679, 1680, 1681, 2045], "maxpool1d": [787, 1544, 1679, 1682, 2106], "linearli": [790, 1184, 1348, 1601, 1725, 1836, 1857, 2083, 2101, 2107], "neighbour": [792, 1536, 1665, 1727], "stub": [793, 795, 2102], "calibr": [793, 795, 804, 847, 849, 868, 870, 872, 2074, 2104, 2105, 2107, 2125], "_numeric_debug_handl": 794, "quantstub": [796, 2104], "dequantstub": [796, 2104], "quantwrapp": 797, "backend_config": [798, 799, 800, 801, 802, 825, 826, 870, 871, 872, 873, 2125], "backendpatternconfig": [798, 872], "blob": [798, 1177, 2086, 2088, 2119, 2144], "dtypeconfig": [798, 799, 801, 872], "observationtyp": [798, 799, 872, 2106], "weighted_int8_dtype_config": [798, 872], "input_dtyp": [798, 800, 872, 2106], "output_dtyp": [798, 800, 872, 2106, 2140], "weight_dtyp": [798, 800, 872, 2106], "bias_dtyp": [798, 800, 2106], "fuse_conv2d_relu": 798, "is_qat": [798, 799], "convrelu2d": [798, 2106], "linear_config": 798, "set_observation_typ": [798, 799, 872], "output_use_different_observer_as_input": [798, 799, 802, 872, 2106], "add_dtype_config": [798, 799, 872], "set_root_modul": [798, 799], "set_qat_modul": [798, 799], "set_reference_quantized_modul": [798, 799], "conv_relu_config": 798, "set_fused_modul": [798, 799], "set_fuser_method": [798, 799], "fused_conv_relu_config": 798, "my_backend": [798, 2131], "set_backend_pattern_config": [798, 872], "from_dict": [798, 799, 800, 823, 824, 825, 865], "backend_config_dict": [798, 2104], "set_nam": 798, "to_dict": [798, 799, 800, 823, 824, 825, 865], "backendconfig": [799, 826, 870, 872, 2107], "dtype_config": [799, 2106], "backend_pattern_config_dict": 799, "observation_typ": [799, 2106], "qat_modul": [799, 2106], "reference_quantized_modul": 799, "fused_modul": [799, 2106], "fuser_method": [799, 822, 2106], "pattern_complex_format": 799, "set_dtype_config": 799, "fuser": [799, 1303, 2044], "fuse_linear_relu": 799, "linearrelu": [799, 2106], "8bea7180a8ba3c279f2c9b050f2a69a6": 799, "understood": [799, 970], "output_share_observer_with_input": [799, 802, 2106], "renam": [799, 1996, 1998, 2045, 2051, 2065, 2066, 2100, 2139], "quantdequantstub": 799, "set_pattern": 799, "is_dynam": [800, 807, 828, 829, 830, 831, 833, 834, 835, 2106], "quant1": 800, "dequant1": 800, "fp32_linear": 800, "quant2": 800, "dequant2": 800, "bracket": [800, 2110], "dtype_config1": 800, "dtype_config2": 800, "dtypewithconstraint": [800, 2106], "quant_min_lower_bound": [800, 801, 2106], "quant_max_upper_bound": [800, 801, 2106], "255": [800, 810, 1133, 1134, 1173, 1654, 1665, 1725, 2104, 2106, 2119], "input_dtype_with_constraint": 800, "scale_min_lower_bound": [800, 801, 2106], "scale_max_upper_bound": [800, 801, 2106], "dtype_config_dict": 800, "bias_typ": [800, 872], "scale_exact_match": [801, 2106], "zero_point_exact_match": [801, 2106], "quant_min": [801, 807, 810, 828, 829, 830, 831, 834, 835, 1133, 1134, 2045, 2104], "quant_max": [801, 807, 810, 828, 829, 830, 831, 834, 835, 1133, 1134, 2045, 2104], "fixedqparamsobserv": 801, "fixedqparamsfakequant": 801, "input_output_not_observ": [802, 2106], "ref_result": 803, "actual_result": 803, "debug_handle_id": 803, "nodeaccuracysummari": 803, "sqnr": [803, 2125], "mse": [803, 2133], "remove_qconfig": 804, "is_refer": 804, "convert_custom_config_dict": [804, 823, 2104], "from_observ": [804, 823, 2104], "observed_to_quantized_custom_module_class": [804, 823, 2104], "observedcustommodul": [804, 823, 825, 847, 2104], "quantizedcustommodul": [804, 823], "calib_data": 805, "debug_handl": 806, "fake_quant": [807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 873, 1133, 1134, 2125], "movingaverageminmaxobserv": [807, 810, 831], "observer_kwarg": [807, 810], "x_out": [807, 810], "quanti": 807, "choose_qparam": 807, "dq": 807, "fake_quant_en": 807, "observer_en": 807, "calculate_qparam": [808, 828, 829, 833], "extra_repr": [809, 1289, 1548, 1563, 1737, 2081], "qscheme": [810, 828, 829, 830, 831, 834, 835, 836, 2045, 2100, 2104, 2107, 2121], "fake_qu": [811, 815, 816, 817, 2104], "default_fake_qu": 812, "default_per_channel_weight_fake_qu": 813, "default_weight_fake_qu": 814, "histogram": [815, 828, 840, 1250, 1252, 2045, 2100, 2119], "memoryless": [816, 817], "averaging_const": [816, 817, 830, 831, 2045], "modules_to_fus": 822, "fuser_func": 822, "fuse_known_modul": 822, "fuse_custom_config_dict": [822, 824], "convmodul": 822, "bnmodul": 822, "convbnmodul": 822, "additional_fuser_method_map": 822, "fuse_conv_bn": [822, 2106], "conv1": [822, 1301, 1548, 1577, 2044, 2097, 2104, 2119], "bn1": 822, "relu1": [822, 1577, 1728], "fused_m": 822, "custom_config": [823, 824, 825, 826], "convert_fx": [823, 2104, 2125], "convert_custom_config": [823, 870, 2104], "set_observed_to_quantized_map": 823, "set_preserved_attribut": [823, 824, 825], "attr1": [823, 824, 825, 2099], "attr2": [823, 824, 825, 2099], "floatcustommodul": [823, 825], "weight_onli": [823, 870, 2056, 2104], "preserved_attribut": [823, 824, 825], "observed_class": [823, 825], "quantized_class": 823, "quant_typ": [823, 825], "quanttyp": [823, 825], "fuse_fx": [824, 2104], "fuse_custom_config": [824, 871], "convertcustomconfig": [824, 870], "prepare_fx": [825, 850, 870, 873, 2104, 2125], "prepare_qat_fx": [825, 870, 2104], "prepare_custom_config": [825, 826, 872, 873, 2104], "set_standalone_module_nam": 825, "module1": [825, 865, 2078], "qconfig_map": [825, 826, 865, 866, 867, 870, 872, 873, 2104], "child_prepare_custom_config": 825, "set_standalone_module_class": 825, "mystandalonemodul": 825, "set_float_to_observed_map": 825, "set_non_traceable_module_nam": 825, "module2": [825, 865, 2078], "module3": [825, 2078], "set_non_traceable_module_class": 825, "nontraceablemodule1": 825, "nontraceablemodule2": 825, "set_input_quantized_index": 825, "set_output_quantized_index": 825, "prepare_custom_config_dict": [825, 847, 850, 2104], "standalone_module_nam": 825, "standalone_module_class": 825, "module_class": 825, "float_to_observed_custom_module_class": [825, 847, 2104], "non_traceable_module_nam": 825, "non_traceable_module_class": 825, "input_quantized_idx": 825, "output_quantized_idx": 825, "float_class": 825, "qconfigmap": [826, 866, 867, 870, 872, 2104, 2107], "preparecustomconfig": [826, 872], "numeric_debug_handle_id": [827, 848], "2048": [828, 1592, 1594, 1596, 2078], "per_tensor_affin": [828, 829, 830, 1860, 1861, 1862, 1863, 2104, 2107], "reduce_rang": [828, 829, 830, 831, 834, 836, 2045, 2104, 2105], "factory_kwarg": [828, 829, 834], "1920928955078125e": [828, 829, 830, 831, 834], "finfo": [828, 829, 830, 831, 834, 1344, 1347, 1448, 1563, 1737, 2043, 2121], "minmaxobserv": [828, 830, 834, 852, 872, 873, 2107], "x_": [829, 830, 1005, 1129, 1363, 1364, 1366, 1369, 1377, 1461, 1483, 1538, 1555, 1582, 1584, 1712, 1935, 1937, 1980, 2075, 2107, 2115], "q_": [829, 2107], "x_orig": 829, "reset_min_max_v": [829, 834], "ch_axi": [831, 834, 2045], "per_channel_affin": [831, 834, 1859, 2104, 2107], "custom_op_nam": [832, 835], "with_arg": [833, 852, 872, 873], "_callable_arg": 833, "_with_arg": 833, "foo_build": 833, "foo_instance1": 833, "foo_instance2": 833, "with_callable_arg": 833, "_with_callable_arg": 833, "cur_tim": 833, "get_time_func": 833, "dan": 833, "creation_tim": 833, "compute_dtyp": 835, "ptq": [840, 2104, 2105, 2107], "obs_dict": 846, "get_observer_state_dict": 846, "allow_list": [847, 2124], "observer_non_leaf_module_list": 847, "preemptiv": [847, 849, 1738], "numeric_debug_handl": 848, "propagate_qconfig_": 850, "qconfig_dict": [850, 865], "pt2e": 851, "export_util": 851, "my_qconfig": 852, "default_observ": 852, "default_qat_config": 858, "set_glob": [865, 870, 872, 2104], "set_object_typ": [865, 870, 872], "set_module_name_regex": 865, "regex": 865, "set_module_nam": [865, 870, 872], "set_module_name_object_type_ord": 865, "global_qconfig": 865, "qconfig1": 865, "qconfig2": 865, "qconfig3": 865, "object_typ": 865, "module_name_regex": 865, "module_name_object_type_ord": 865, "conv0": 865, "x86": [866, 867, 1902, 2104, 2106], "run_arg": [868, 874], "qconfig_spec": 869, "quantize_fx": [870, 871, 872, 873, 2104, 2125], "_remove_qconfig": 870, "qconfig_from_prepar": 870, "prepared_model": [870, 872, 873], "xnnpack": [870, 2057, 2104], "get_default_backend_config": [870, 872, 873], "quantized_model": 870, "fusion_pattern": 871, "fusecustomconfig": 871, "_equalization_config": 872, "get_default_qconfig_map": [872, 2104], "float_model": [872, 873, 2104, 2124], "data_load": [872, 873, 1832, 1839, 2091, 2104], "get_default_qconfig": [872, 873, 2104], "linear_pattern_config": 872, "suer": 872, "sample_inference_data": [872, 2104], "get_default_qat_qconfig_map": [873, 2104], "load_weight": 873, "train_data": 873, "get_default_qat_qconfig": [873, 2104], "custom_module_class_map": 875, "lceil": [876, 972], "rceil": [876, 972], "adjac": [876, 962, 1486, 1487, 1488, 1492, 1873, 2114, 2143], "set_default_dtyp": [876, 952, 961, 1120, 1122, 1132, 1137, 1155, 1171, 1174, 1236, 1247, 1248, 1309, 1798, 1866, 1870, 1873, 1899, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2040], "get_default_dtyp": [876, 1360, 1376, 1800, 1873, 2116, 2117, 2150], "set_default_devic": [876, 952, 961, 1120, 1122, 1132, 1137, 1155, 1171, 1174, 1247, 1248, 1309, 1360, 1376, 1798, 1866, 1868, 1870, 1872, 1873, 1899, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1940, 1941, 1942, 1943, 1944, 1945, 1984, 1986, 2040, 2117], "5000": [876, 891, 897, 898, 899, 954, 978, 1137, 1139, 1140, 1147, 1150, 1155, 1165, 1167, 1168, 1169, 1243, 1249, 1252, 1315, 1341, 1360, 1439, 1441, 1472, 1473, 1491, 1601, 1858, 1862, 1863, 1864, 1873, 1877, 2115, 2120], "maxim": [885, 1387, 1481, 1544, 1545, 1546, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827, 2114, 2136, 2145], "3398": 885, "2663": [885, 2078], "2686": 885, "2450": 885, "7401": 885, "8805": 885, "3402": 885, "1936": 885, "4907": [885, 1377], "3948": [885, 1000], "0691": 885, "3132": 885, "6092": 885, "5419": 885, "2993": [885, 1957], "3195": 885, "1139": 886, "2254": 886, "1381": [886, 1957], "3687": 886, "1975": [886, 2067], "0102": 886, "4732": 886, "9240": 886, "1207": [886, 1433], "7506": 886, "0213": 886, "7809": 886, "2960": 886, "9384": 886, "1438": 886, "ascend": [887, 1139, 1326, 1328, 1357, 1413, 1893, 1930, 1991], "0785": 887, "5267": 887, "8521": 887, "4065": 887, "1598": 887, "0788": 887, "0745": 887, "2700": 887, "2208": 887, "0722": 887, "7064": 887, "2564": 887, "0669": 887, "2318": 887, "8229": 887, "9280": 887, "lexicograph": [888, 1793, 2047, 2114], "9039": 889, "6291": 889, "0795": [889, 1858, 2089], "1586": 889, "1939": [889, 2081], "4900": 889, "1909": 889, "7503": 889, "9355": 889, "histori": [890, 891, 1186, 1810, 1973, 2043, 2054, 2067, 2081, 2083, 2110], "cupi": 890, "dlpack": [891, 1170, 2043], "frombuff": [891, 1897], "data_ptr": [891, 937, 2051, 2065, 2100, 2116, 2118], "addbackward0": [891, 2089, 2094], "__array_interface__": [891, 2136], "5962": 892, "4985": 892, "4396": 892, "4525": [892, 2067], "6387": 892, "4552": 892, "sine": [893, 1913, 1923, 1925], "1606": 893, "4267": 893, "0899": 893, "0250": 893, "1599": 893, "1534": 893, "9435": 893, "8990": [893, 1114], "arctang": [894, 895], "2341": 894, "2539": 894, "6256": 894, "6448": 894, "2299": 894, "2487": 894, "5591": [894, 923], "5727": 894, "quadrant": 895, "9041": [895, 971], "0196": [895, 971], "3108": [895, 971], "4423": [895, 971], "9833": 895, "0811": 895, "9743": 895, "4151": 895, "tangent": [896, 905, 909, 910, 1183, 1184, 1589, 1971, 1972], "9385": 896, "2968": 896, "8591": 896, "1871": 896, "7253": 896, "3060": 896, "2899": 896, "1893": 896, "needs_input_grad": [900, 916, 917, 2081], "setup_context": [901, 911, 912, 913, 914, 915, 916, 917, 2051, 2082], "save_for_forward": [901, 911, 916, 917, 2082], "grad_input": [902, 911, 913, 915, 916, 917, 935, 1289, 1548, 2081, 2089], "underneath": [903, 916, 917], "generate_vmap_rul": [903, 916, 917, 2082], "out_dim": [903, 916, 917, 1188, 2007, 2045, 2051, 2066, 2082], "grad_tensor": [904, 925, 2045, 2078], "grad_vari": 904, "forward_ad": [905, 906], "primal": [905, 910, 1179, 1183, 1184, 1187], "unpack_du": [905, 906, 909], "dual": [905, 906, 907, 909, 910, 1792, 2082], "make_du": [906, 910, 911, 916, 917], "your_fn": 906, "grad_aft": 906, "dual_level": [909, 910, 911, 916, 917], "apply_jvp": 911, "mark_dirti": [911, 916, 917, 937, 2081], "x_npy": [911, 912, 916], "once_differenti": [911, 912, 913, 914, 915, 916, 917, 2081], "mark_non_differenti": [911, 916, 917, 2081, 2082], "g1": [911, 913, 915, 916, 917, 2078, 2111], "g2": [911, 913, 915, 916, 917, 2078, 2111], "weren": [911, 914, 916], "grad_out": [911, 914, 916, 917, 2045, 2086, 2140], "gx": [911, 914, 916], "gy": [911, 914, 916], "gz": [911, 914, 916, 2103], "y_t": [911, 916, 917], "fwad": [911, 916, 917], "a_dual": [911, 916, 917], "set_materialize_grad": [911, 916, 917, 2081], "simplefunc": [911, 915, 916, 917], "induc": [911, 915, 916, 917, 1654, 1693, 2073, 2132], "backward_extend": 917, "forward_extend": 917, "outer_jacobian_strategi": 919, "disconnect": [919, 920, 921, 922, 923, 924], "cliff": [919, 921, 925], "_debug_only_display_vmap_fallback_warn": [919, 925], "pow_reduc": [919, 920, 923], "2265": 919, "8221": 919, "9456": [919, 953], "2550": 919, "viewbackward": [919, 921, 2084], "pow_adder_reduc": [919, 920, 923], "func_output": [920, 922, 923, 924], "1448": 920, "0239": 920, "6456": 920, "4988": 920, "4310": 920, "sumbackward0": [920, 923, 2081], "3030": 920, "vhp": 920, "batched_grad": 921, "exp_reduc": [921, 922, 924], "4917": 921, "4352": 921, "4369": 921, "3799": 921, "exp_add": 921, "8052": 921, "3963": 921, "3090": 922, "6742": 922, "9114": 922, "2106": 922, "sumbackward1": [922, 924], "squeezebackward1": 922, "adder": [922, 924], "2399": 922, "5005": 922, "0689": 923, "2431": 923, "0989": 923, "4456": 923, "8053": [923, 1888], "7817": 924, "2458": 924, "7830": 924, "7782": 924, "4458": 924, "3962": 924, "3042": [924, 1347], "6354": 924, "1288": [924, 1916, 1951], "0652": 924, "5483": 924, "5035": 924, "2046": [924, 1000, 2081], "1292": 924, "1432": 924, "3059": 924, "3225": 924, "6652": 924, "7753": 924, "0152": 924, "4225": 924, "3340": 924, "only_input": 925, "allow_unus": [925, 2045], "is_grads_batch": 925, "materialize_grad": 925, "require_grad": [925, 2047, 2075], "inferencemod": [926, 2075, 2127], "bump": [926, 937], "_version": [926, 2100], "doubler": [926, 1123, 1792], "is_train": [927, 2123], "gradgradcheck": [929, 930, 2081], "06": [930, 931, 1330, 1335, 1336, 1347, 1348, 1353, 1501, 1557, 1597, 1600, 1651, 1722, 1804, 1825, 1958, 2045, 2121], "raise_except": [930, 931, 2051], "nondet_tol": [930, 931], "check_undefined_grad": [930, 931], "check_grad_dtyp": [930, 931], "check_batched_grad": [930, 931], "check_batched_forward_grad": 930, "check_forward_ad": 930, "check_backward_ad": 930, "fast_mod": [930, 931, 2086], "differenc": [930, 2081], "perturb": [930, 931, 2086], "gen_non_contig_grad_output": 931, "check_fwd_over_rev": 931, "check_rev_over_rev": 931, "noncontigu": [931, 1061, 2121], "inaccuraci": 931, "clonebackward0": 933, "gi": [935, 936, 2089], "inference_mod": [937, 1554, 1596], "88446": 939, "profilerstep": 939, "optimizer1step": 939, "optimizer2step": 939, "optimizer1": [939, 2074], "current_step": 939, "erase_step_count": 939, "increment_step": 939, "_kineto_step": 939, "init_step_count": 939, "eventlist": [942, 943], "group_by_stack_n": [943, 2103], "roof": 943, "functioneventavg": [943, 945], "node_id": 946, "77": 946, "47": 946, "470u": 946, "73": 946, "465u": 946, "03": [946, 974, 1367, 1914, 1915, 1920], "121": 946, "891u": 946, "324u": 946, "421u": 946, "503u": 946, "234": [946, 2051], "344u": 946, "000u": 946, "profiler_util": [947, 948, 949, 950], "elapsed_u": 947, "mem_record": 949, "in_interv": 949, "start_u": 949, "end_u": 949, "shallow": [950, 1289, 1484, 1548, 1597, 1598, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1823, 1824, 1825, 1826, 1827], "default_factori": [950, 2144], "__missing__": 950, "fromkei": [950, 1558], "keyerror": 950, "popitem": [950, 1558, 2100], "lifo": 950, "setdefault": [950, 1558, 2100], "window_length": [952, 961, 1247, 1248, 1309, 2045], "2n": [952, 1911, 2114], "_length": [952, 961, 1247, 1248, 1286, 1467, 1954], "sim": [953, 1562, 1698, 1850, 1870], "pseudorandom": [953, 1434, 1795, 1847, 1850, 1866, 1868, 1870, 1872, 1959], "1737": 953, "0950": [953, 1936], "3609": 953, "7148": 953, "0289": [953, 1983], "2676": 953, "8937": 953, "7202": 953, "2500": [954, 1137, 1139, 1140, 1150, 1155, 1360, 1601, 1864], "7500": [954, 1140, 1150, 1169, 1243, 1345, 1360, 1601, 1864, 1919], "AND": [955, 1207, 1371, 2047, 2075], "OR": [958, 1225, 1373, 2047, 2067], "xor": [960, 1374, 2047], "blackman": [961, 1921], "arrang": 962, "broadcast_tensor": [964, 2045, 2100], "out_int32": [967, 1893, 2045], "opposit": [967, 1140, 1142, 1592, 1958, 1979], "formal": [967, 1893, 2054, 2066, 2084, 2113], "eg": [967, 1886, 1893, 2144], "from_": [968, 2045], "tensor_a": [969, 982], "tensor_b": 969, "6580": 970, "0969": 970, "4614": 970, "1034": [970, 1119], "5790": 970, "1497": 970, "compute_mod": [971, 2140], "use_mm_for_euclid_dist_if_necessari": 971, "distanc": [971, 1286, 1325, 1326, 1353, 1507, 1557, 1597, 1598, 1695, 1723, 1832, 1954, 1958, 2043], "infti": [971, 1286, 1341, 1460, 1515, 1516, 1517, 1580, 1695, 1823, 2115], "use_mm_for_euclid_dist": 971, "donot_use_mm_for_euclid_dist": 971, "minkowski": [971, 1695], "ham": [971, 1247, 1695, 1917], "closest": [971, 1695], "xn": [971, 1695], "4821": [971, 974], "059": 971, "0590": 971, "1763": [971, 1876], "4713": [971, 1876], "6986": [971, 1876], "3702": [971, 1876], "1193": [971, 1379], "0959": 971, "7138": 971, "8322": 971, "2830": [971, 1985], "3791": 971, "6341": 972, "4208": 972, "0900": 972, "5826": 972, "clr": [973, 1832], "3375": 973, "9790": 973, "1119": 973, "6577": 973, "5609": [973, 1645], "5095": 973, "2614": 973, "4038": 973, "3378": [973, 1985], "4982": 973, "2457": [973, 1392], "2561": 973, "4684": 973, "7163": 973, "9647": 973, "8917": [973, 1370], "3213": [973, 1366], "2284": [973, 1099], "8615": 973, "2816": 973, "tu": 974, "mt": [974, 1319, 1326, 1328, 1332, 1333, 1334, 1339, 1348, 1857, 1958, 2045, 2054, 2100, 2118, 2120], "4112": 974, "7486": 974, "4551": 974, "3544": 974, "6724": 974, "5528": 974, "0592": [974, 2089], "9371": 974, "5487": 974, "7023": 974, "3842e": [974, 1335], "hermitian": [975, 976, 1001, 1135, 1136, 1138, 1140, 1141, 1142, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1319, 1320, 1325, 1326, 1328, 1332, 1333, 1334, 1344, 1347, 1353, 2045], "9314": 975, "2251": [975, 1015, 1322, 1364], "0889": 975, "4439": 975, "2122": 975, "1412": 975, "6358e": 975, "lh": [976, 1335], "1625": 976, "6097": 976, "8398": 976, "2387": [976, 1001], "3771": [976, 1336], "4173": 976, "1626": [976, 1015, 1322], "6881e": 976, "tensor_split": [977, 1117, 1253, 2008, 2045, 2100, 2118], "min_valu": [978, 1506], "max_valu": [978, 1506, 2045], "_valu": [978, 1452, 1745, 1943, 2081, 2100, 2114], "7120": 978, "1734": [978, 1264], "0478": [978, 2010], "0922": 978, "3333": [978, 1243, 1252, 1601, 1602, 1973], "horizont": [981, 1253, 1255, 2101, 2136], "hstack": [981, 2045, 2100, 2114], "with_replac": [982, 2045], "combinations_with_replac": 982, "_inputt": 983, "_rett": 983, "fullgraph": [983, 2136, 2145], "cache_size_limit": [983, 2136, 2145], "list_backend": [983, 2126, 2131, 2138], "compiler_custom_backend": 983, "triton": [983, 2071, 2082, 2085, 2126, 2130, 2134, 2136, 2138, 2143, 2145], "_inductor": [983, 2130, 2136, 2145], "list_mode_opt": 983, "epilogue_fus": 983, "max_autotun": 983, "fallback_random": [983, 2136, 2145], "shape_pad": 983, "graph_diagram": 983, "pictur": 983, "list_opt": 983, "_glibcxx_use_cxx11_abi": [984, 2085], "black": [985, 2137], "throughout": [985, 1780, 2086, 2089, 2104, 2133], "footgun": [985, 2130, 2135], "bypass": [985, 1119, 2051, 2067, 2078, 2081, 2137, 2143], "bullet": [985, 2047], "rand_foo": 988, "compiler_cudagraph_tre": 988, "external_util": 990, "stricter": [991, 1434, 2137], "is_compil": [991, 2137], "exclude_tag": 992, "flip": [998, 1160, 1161, 1357, 2045, 2100, 2101, 2136, 2140], "writeabl": [998, 999], "is_conj": [998, 1881, 2045, 2100], "geq": [1000, 1232, 1321, 1329, 1457, 1458, 1459, 1483, 1534, 1555, 1567, 1637, 1690, 1753, 2073, 2115], "signbit": [1000, 2045, 2100, 2114, 2140], "2557": 1000, "0026": 1000, "5387": 1000, "4740": 1000, "9244": 1000, "7079": 1000, "2778": 1000, "0249": [1000, 1365], "5719": 1000, "0059": 1000, "2600": 1000, "4475": 1000, "9567": [1000, 1325, 1957], "5757": 1000, "1751": 1000, "0742": 1000, "2998": 1000, "1054": 1000, "2373": 1000, "3190": [1000, 2078], "1128": [1000, 1347, 1518], "pearson": 1001, "coeffici": [1001, 1247, 1804, 1805, 1807, 1808, 1809, 1811, 1823, 1827, 1916, 1917, 1918, 1982], "r_": [1001, 1805, 1975], "ij": [1001, 1119, 1369, 1377, 1391, 1551, 1935], "c_": [1001, 1475, 1476, 1477, 1478, 1479, 1480, 1518, 1560, 1561, 1805], "jj": 1001, "cov": [1001, 2045, 2100], "2678": [1001, 1490], "0908": 1001, "3766": 1001, "2780": 1001, "5812": 1001, "1535": [1001, 1490], "2350": 1001, "3582": 1001, "4309": 1002, "2706": 1002, "8562": 1002, "9796": [1002, 1335], "1395": 1002, "2957": 1002, "6553": 1002, "5574": 1002, "1632": 1003, "1835": 1003, "6979": 1003, "7325": [1003, 1109], "0133": 1003, "7860": 1003, "2536": 1003, "2805": 1003, "sleef": [1003, 1925], "y_": [1005, 1129, 1363, 1364, 1366, 1461, 1483, 1513, 1935, 1980, 2075, 2115], "_w": [1005, 1495], "w_i": [1005, 1329], "mu_x": 1005, "mu_i": [1005, 1811], "w_ia_i": 1005, "w_ix_": 1005, "mathbb": [1005, 1243, 1319, 1321, 1325, 1326, 1327, 1328, 1329, 1330, 1335, 1336, 1339, 1341, 1348, 1350, 1352, 1353, 1483, 1555, 1753], "bessel": [1005, 1309, 1920, 1952, 1953, 2002, 2003, 2115], "unbias": [1005, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1588, 1952, 1953, 2002, 2003, 2045, 2140], "corrcoef": [1005, 2045, 2100], "6667": [1005, 1252, 1601, 1602, 1878, 1911, 2094], "fw": 1005, "4282": 1005, "0255": [1005, 1106], "4144": [1005, 2078], "4169": 1005, "streamcontext": [1013, 1094, 1431, 2038, 2043], "abstractcontextmanag": 1013, "3956": [1015, 1322], "1455": [1015, 1322, 2095], "6895": [1015, 1322], "5849": [1015, 1322], "3599": [1015, 1322], "7180": [1015, 1322], "0521": [1015, 1322], "1339": [1015, 1322], "0225": [1015, 1322, 1335], "0257": [1015, 1322], "4725": [1015, 1322], "1479": [1015, 1322], "7005": [1015, 1322], "9757": [1015, 1322], "3904": [1015, 1322], "3726": [1015, 1322], "1836": [1015, 1322], "9688": [1015, 1322], "7153": [1015, 1322, 2115], "2159": [1015, 1322], "0844": [1015, 1322], "5281": [1015, 1322], "6120": [1015, 1322], "4490": [1015, 1322], "5687": [1015, 1322], "9792": [1015, 1100, 1322], "8304": [1015, 1322], "3037": [1015, 1322, 2089], "5650": [1015, 1322], "2329": [1015, 1322], "9883": [1015, 1322], "0551": [1015, 1322], "capture_begin": [1016, 2078], "capture_error_mod": [1016, 1053], "make_graphed_cal": [1016, 2078], "graph_pool_handl": [1016, 1053, 1064], "other_graph_inst": [1016, 1053, 1064], "cudastreamcapturemod": [1016, 1053], "thread_loc": [1016, 1053], "cudamalloc": [1016, 1053, 1075, 2078, 2147], "unsaf": [1016, 1053, 1361, 1756, 1759, 2045, 2078, 2102], "capture_end": [1016, 2078], "debug_dump": 1016, "debug_path": 1016, "enable_debug_mod": 1016, "path_to_so_fil": 1017, "alloc_fn_nam": 1017, "free_fn_nam": 1017, "interprocess": 1018, "from_ipc_handl": 1018, "ipc": [1018, 1057], "ipc_handl": 1018, "cudaeventsynchron": 1018, "cudastreamwaitev": [1018, 1019, 1023], "stream_ptr": 1019, "cudastream_t": [1019, 2078], "cudastreamsynchron": [1019, 1023], "_cuda_cudaalloc": 1020, "mempool": 1021, "active_pool": 1021, "_mempool": 1021, "interoper": 1025, "caching_allocator_delet": 1025, "mem_ptr": 1026, "caching_allocator_alloc": 1026, "peer_devic": 1027, "_cudaalloc": 1028, "clock": 1029, "sm": 1029, "hertz": 1029, "smi": [1029, 1043, 1071, 1077, 1082, 1096, 1097, 2078, 2083, 2087], "buffer_s": 1031, "10485760": 1031, "chunk_siz": [1034, 1182, 1188, 2007], "_cudart": 1035, "libcudart": 1035, "check_error": [1035, 1320, 1331, 1333, 1338, 1351, 2045], "cuda_profil": 1035, "perform_cuda_operations_with_stream": 1035, "nsy": 1035, "cudaprofilerstart": 1035, "cudaprofilerstop": 1035, "cudart_test": 1035, "cublashandle_t": 1036, "unoccupi": [1043, 1401, 2020], "cudamallocasync": [1044, 1075, 2078], "_cudadeviceproperti": 1048, "gencod": 1049, "cuda_graph": 1053, "ordinari": [1055, 1738, 1998, 2074], "code_str": [1061, 1062], "temp": 1061, "typenam": [1061, 1062], "my_kernel": [1061, 1062], "jitted_fn": [1061, 1062], "create_jit_fn": [1061, 1062], "util_fn": 1061, "gelu": [1061, 1578, 1592, 1594, 1596, 1709, 2045, 2067, 2100, 2140], "my_gelu": 1061, "my_lib": [1061, 2051, 2095], "num_output": 1062, "sample_arg": 1064, "num_warmup_it": 1064, "allow_unused_input": 1064, "datadistributedparallel": 1064, "amp": [1064, 1998, 2043, 2074, 2139, 2142, 2145], "autocast": [1064, 1554, 2043, 2051, 2078, 2081, 2085, 2145], "insuffici": [1065, 1193, 2030, 2132, 2145], "manual_seed_al": [1065, 1998, 2030], "occupi": [1067, 1071, 1083, 1398, 1536, 1672, 2078, 2087, 2150], "reset_peak_memory_stat": [1067, 1069, 1083, 1084], "max_memory_reserv": [1068, 2078, 2087], "cudamemgetinfo": 1070, "memory_reserv": [1072, 2078, 2087], "snapshot": [1074, 2043, 2047, 2078, 2087], "large_pool": 1075, "small_pool": 1075, "allocated_byt": 1075, "reserved_byt": 1075, "active_byt": 1075, "inactive_split": 1075, "inactive_split_byt": 1075, "octob": 1075, "1mb": [1075, 2147], "num_alloc_retri": 1075, "num_oom": 1075, "num_sync_all_stream": 1075, "synchronize_and_free_ev": 1075, "num_device_alloc": 1075, "cumemmap": 1075, "num_device_fre": 1075, "cumemunmap": 1075, "cudafre": [1075, 2078, 2147], "assist": [1075, 2080, 2120], "max_split_s": 1075, "oversize_alloc": 1075, "oversize_seg": 1075, "requested_byt": 1075, "abbrevi": 1076, "percent": [1077, 1097, 2139], "instantan": [1078, 2103], "ascii": [1078, 1081, 1361, 2047, 2103], "sensor": [1082, 1096], "mw": 1082, "milliwatt": 1082, "fermi": 1082, "max_memory_alloc": [1083, 2078, 2087], "max_memory_cach": 1084, "memory_stat": [1085, 2043, 2078, 2087], "seed_al": [1086, 2032], "environment": [1088, 2139], "total_memori": [1089, 1410], "debug_mod": [1093, 1900], "centigrad": 1096, "x_2": [1098, 1099, 1100, 1101, 1357, 1465, 1481, 1482, 1625, 1636], "x_3": [1098, 1099, 1100, 1101, 1357], "3449": 1098, "5447": 1098, "0685": 1098, "5104": [1098, 2078], "1706": 1098, "2259": 1098, "4696": 1098, "3284": 1098, "9946": 1098, "8209": 1098, "6628": 1099, "0975": 1099, "2680": [1099, 2077], "3298": [1099, 1106], "4220": 1099, "3885": 1099, "1762": 1099, "9165": 1099, "6684": [1099, 1266], "6001": 1100, "2069": 1100, "1919": 1100, "6727": [1100, 1113], "0062": 1100, "4126": 1100, "2129": 1100, "4206": 1100, "1968": [1100, 2115], "1241": 1100, "0238": 1100, "0233": [1100, 1865], "0157": 1100, "0158": [1100, 1958], "0065": 1100, "0014": [1100, 2115], "0006": 1100, "46": [1101, 1247, 1916], "49": [1101, 1162, 1345, 2077], "74": 1101, "83": 1101, "trapezoid": [1102, 1981, 2045, 2100], "360": 1103, "2832": 1103, "diagflat": [1106, 2045, 2100], "5950": 1106, "0872": 1106, "4264": 1106, "1064": [1106, 2089], "8795": 1106, "2429": 1106, "1374": 1106, "1029": 1106, "6482": 1106, "6300": 1106, "5410": 1107, "2934": 1107, "1788": [1107, 2115], "5684": 1107, "0845": [1107, 1925, 2089], "3986": 1107, "2956": [1108, 1322], "9068": 1108, "1695": 1108, "2094": [1108, 2078], "3018": 1108, "1516": 1108, "9342": 1108, "0854": 1109, "1431": 1109, "1752": 1109, "8536": 1109, "0905": 1109, "0360": [1109, 1433], "6927": 1109, "3735": 1109, "4945": 1109, "2631": [1109, 1413, 2078], "3755": 1109, "5977": [1109, 2081], "8172": 1109, "1065": [1109, 2089], "0401": 1109, "2235": [1109, 1957], "7938": 1109, "3081": 1109, "6166": 1109, "2335": 1109, "0500": [1109, 2094], "7336": 1109, "3836": 1109, "1015": 1109, "5393": 1113, "8675": 1113, "5916": 1113, "6321": 1113, "0967": 1113, "0511": 1113, "6295": 1113, "8360": 1113, "6973": 1113, "6537": 1113, "dividend": [1114, 1164, 1167, 1877, 1987], "true_divid": [1114, 2045, 2100], "3810": [1114, 1251], "2774": 1114, "2972": 1114, "3719": 1114, "4637": [1114, 2081], "7620": 1114, "5548": 1114, "5944": 1114, "7438": 1114, "9274": 1114, "3711": 1114, "9353": 1114, "4605": 1114, "2917": 1114, "1815": [1114, 1370], "0111": [1114, 1914], "9805": 1114, "5923": 1114, "1062": 1114, "4581": [1114, 1329], "7759": 1114, "2344": 1114, "1830": 1114, "0313": 1114, "1908": 1114, "4757": 1114, "8032": 1114, "2930": 1114, "8113": 1114, "2308": 1114, "4620": [1114, 2010], "6051": 1114, "5676": 1114, "2639": 1114, "2260": 1114, "4509": [1114, 1343], "2086": 1114, "1322": 1114, "9764": 1114, "9564": 1114, "3484": 1114, "2278": 1114, "1068": [1114, 1264], "4678": 1114, "3938": [1114, 1968], "depthwis": [1117, 1118, 1475, 1476, 1477], "atleast_3d": [1118, 2045, 2100], "notat": [1119, 1513, 1905, 2048, 2089, 2120], "einstein": 1119, "summat": [1119, 1286, 1369, 1377, 2114], "subscript": [1119, 2048, 2091], "jk": [1119, 2139], "ik": [1119, 1362, 1935], "za": 1119, "alphabet": [1119, 1638, 2109], "arrow": [1119, 2111], "ki": 1119, "ellipsi": [1119, 2047, 2048, 2066], "fourth": 1119, "whitespac": [1119, 2048], "opt_einsum": [1119, 2043], "_the_": 1119, "disclaim": 1119, "sublist": [1119, 2145], "52": 1119, "op1": [1119, 2047], "sublist1": 1119, "op2": [1119, 2047], "sublist2": 1119, "subslist_out": 1119, "7952": 1119, "2433": 1119, "4545": 1119, "1156": 1119, "2897": [1119, 2089], "3918": 1119, "4963": 1119, "3744": 1119, "9381": 1119, "2685": 1119, "6070": 1119, "7208": 1119, "8058": 1119, "4419": 1119, "0936": 1119, "1713": 1119, "4291": 1119, "5802": 1119, "7350": [1119, 2115], "5704": 1119, "4290": 1119, "9323": 1119, "4480": 1119, "bij": 1119, "bjk": 1119, "bik": 1119, "0564": 1119, "5904": 1119, "2023": 1119, "1271": 1119, "6706": [1119, 1858], "8097": 1119, "8025": 1119, "1183": 1119, "2239": [1119, 1349], "3107": 1119, "5756": 1119, "2354": 1119, "4558": 1119, "3460": 1119, "5087": 1119, "8530": [1119, 1472, 1604], "8153": 1119, "8787": 1119, "3839": [1119, 2006], "2112": [1119, 1983], "3728": 1119, "1131": [1119, 1855], "0921": 1119, "8305": 1119, "ji": 1119, "anm": 1119, "bm": 1119, "ba": 1119, "3430": [1119, 1370], "2405": 1119, "4494": 1119, "3311": 1119, "5201": 1119, "0356": 1119, "4064e": 1120, "8000e": 1120, "3493e": 1120, "5751e": 1120, "1428e": 1120, "5955e": 1120, "9683e": 1122, "1239e": 1122, "0705e": 1122, "orig_func": [1123, 1792], "set_grad_en": [1123, 2045, 2100, 2123], "tripler": [1123, 1792], "elsewher": [1124, 1132, 1232, 1246, 1279, 1281, 1282, 1285, 1314, 1378, 1445, 1936, 2042], "_max": [1133, 1134, 2104], "_min": [1133, 1134, 2104], "nearbi": [1133, 1134], "_int": [1133, 1134], "_point": [1133, 1134], "2525": 1133, "0466": 1133, "3491": [1133, 1343], "2168": [1133, 1975], "5906": [1133, 2115], "6258": 1133, "6444": 1133, "0542": 1133, "0475": [1133, 2115], "0486": 1133, "3405": 1133, "6134": [1133, 1392], "6323": 1133, "0552": 1134, "9730": 1134, "3973": 1134, "0780": 1134, "4000": [1134, 1137, 1146, 1155, 1601, 1861, 1911], "fourier": [1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1286, 1921, 1954, 2043], "rfft": [1135, 1140, 1150, 1154, 1155, 1156], "chalf": [1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1150, 1151, 1152, 2045, 2100, 2120], "sm53": [1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156], "ortho": [1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1362], "orthonorm": [1135, 1136, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1353, 1753, 1958], "ifft": [1135, 1139, 1140, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152], "fftn": [1136, 1139, 1145, 1148, 1156], "rfft2": [1136, 1151], "ifft2": [1136, 1148], "two_fft": [1136, 1138, 1148, 1154, 1156], "check_strid": [1136, 1138, 1139, 1144, 1145, 1150, 1151, 1152, 1154, 1156, 2121], "nyquist": [1137, 1139, 1147, 1149, 1153, 1154, 1155, 1156], "i_1": [1138, 1156, 1310], "i_n": [1138, 1156, 1188, 1310, 1975, 2007], "rfftn": [1138, 1142, 1148, 1152, 1154], "ifftn": [1138, 1144, 1149], "reorder": [1139, 1345, 2084], "rearrang": [1139, 1146, 1468, 1560, 1561, 1696, 1697, 2066], "fftfreq": [1139, 1146, 1155], "9000": [1139, 1973], "8000": [1139, 1439, 1601, 1858, 1911], "uncent": 1139, "ifftshift": 1139, "x_center": 1139, "x_uncent": 1139, "fft_uncent": 1139, "fft_center": 1139, "x_centered_2": 1139, "ihfft": [1140, 1148, 1149], "irfft": [1140, 1152, 1153], "symmetri": [1140, 1142, 1954], "transformed_dim_s": [1140, 1150], "0000j": [1140, 1147, 1150, 1319, 1320, 1325, 1326, 1328, 1851, 1908], "1250": [1140, 1413], "1720j": 1140, "0406j": 1140, "2809": 1140, "6250": [1140, 1150, 1169, 1601], "9691": 1140, "hfftn": [1141, 1149], "last_dim_s": [1141, 1142, 1151, 1152, 2140], "ihfft2": 1141, "roundtrip": [1141, 1142, 1150, 1151, 1152], "ihfftn": [1142, 1148], "irfftn": [1142, 1151, 1156], "fft2": [1144, 1154], "two_ifft": [1144, 1145, 1149], "fftshift": 1146, "hfft": 1147, "6882j": 1147, "1625j": 1147, "hfft2": 1148, "8602j": 1150, "2031j": 1150, "1562": 1150, "3511": 1150, "7812": 1150, "2114": 1150, "irfft2": 1154, "wider": [1162, 2044, 2047, 2101, 2114], "2500e": 1162, "1000e": 1162, "7656e": 1162, "lfloor": [1163, 1168, 1452, 1457, 1458, 1459, 1475, 1476, 1477, 1494, 1515, 1516, 1517, 1541, 1542, 1543, 1600, 1601, 1602, 1603, 1623, 1693, 1873, 1954], "rfloor": [1163, 1168, 1452, 1457, 1458, 1459, 1475, 1476, 1477, 1494, 1515, 1516, 1517, 1541, 1542, 1543, 1600, 1601, 1602, 1603, 1623, 1693, 1873, 1954], "8166": 1163, "5308": 1163, "2530": 1163, "2091": 1163, "7000": [1165, 1491, 1910], "3000": [1166, 1490, 1910, 2078], "entrywis": [1167, 1877], "modulu": [1167, 1349, 1877], "operatornam": [1168, 1325, 1326, 1327, 1328, 1345, 1353, 1460, 1461, 1467, 1507, 1508, 1514, 1539, 1580, 1598, 1847, 1870, 1910, 1959], "8750": [1169, 1601], "sizeof": [1171, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 2116], "map_shar": [1171, 2094, 2116], "map_priv": [1171, 2094, 2116], "mmap": [1171, 1361, 2064, 2094, 2116], "tofil": 1171, "t_map": 1171, "char": [1173, 1800, 2065, 2116, 2136], "parameter_and_buffer_dict": 1176, "tie_weight": [1176, 1789], "submodule_nam": [1176, 1789], "parameter_nam": [1176, 1789], "ty": [1176, 1789, 2149], "foo_ti": [1176, 1789], "new_a": [1176, 1789], "grad_weight": [1176, 2081], "detached_param": 1176, "parameters_and_buffer_dict": 1176, "intermediate_upd": 1177, "mutations_and_view": 1177, "proxy_tensor": [1177, 2043, 2051, 2145], "make_fx": [1177, 1193, 2051, 2132, 2145], "inpt": 1177, "f_trace": 1177, "f_no_mutations_trac": 1177, "f_no_mutations_and_views_trac": 1177, "a_1": [1177, 1310], "view_1": 1177, "view_copi": [1177, 2045, 2100, 2123], "view_copy_1": 1177, "as_strid": [1177, 2045, 2100, 2118, 2140], "native_funct": [1177, 2081, 2140], "yaml": [1177, 2081, 2140], "aux": [1178, 1179, 1181, 1182, 1183, 1187], "my_loss_func": 1178, "y_pred": [1178, 2078], "loss_per_sampl": 1178, "y_true": 1178, "autodiff": [1181, 1182, 1183, 1348], "jacobian_f": [1181, 1182], "f_x": [1181, 1182], "jacboian": [1181, 1182], "expectedx": [1181, 1182], "expectedi": [1181, 1182], "_preallocate_and_copi": 1182, "jvp_out": 1183, "wish": [1183, 1949, 2051, 2074, 2078, 2081, 2082], "jvp_fn": 1184, "optimiz": [1186, 2044], "l1": [1186, 1507, 1508, 1580, 1663, 1710, 1764, 1773, 2089, 2094], "l2": [1186, 1508, 1539, 1580, 1803, 1804, 1806, 1807, 1809, 1811, 1823, 1824, 1826, 2074], "vjpfunc": 1187, "unsuccessfulli": [1188, 2007], "rummag": [1188, 2007], "batched_dot": [1188, 2007], "jacobian_row": [1188, 2007], "get_vjp": [1188, 2007], "n1": [1188, 1879, 2007], "n0": [1188, 2007], "batched_pow": [1188, 2007], "autobatch": [1188, 2007], "proxytorchdispatchmod": 1189, "decomposition_t": 1191, "tracing_mod": [1191, 2051], "_allow_non_fake_input": 1191, "pre_dispatch": 1191, "record_module_stack": 1191, "_allow_fake_const": 1191, "_error_on_data_dependent_op": 1191, "thunkif": 1192, "maybe_enable_thunkifi": 1192, "thunkifi": 1193, "thunk": 1193, "buggi": [1193, 1665], "symbolic_shap": [1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 2043, 2132], "symbol_to_sourc": 1196, "var_to_v": 1196, "marked_dynam": 1196, "source_name_to_debug_nam": 1196, "solver": [1196, 2043, 2092], "expr": [1196, 1203, 1210, 1217], "tautologi": 1196, "add_equ": 1196, "forced_speci": 1196, "prettify_result": 1196, "original_signatur": 1196, "constraint_violation_error": 1196, "violat": [1196, 1203, 2078, 2082], "erro": 1196, "remove_redundant_dynamic_result": 1196, "rewrite_with_congru": 1196, "congruenc": 1196, "ration": 1196, "inequ": [1196, 1210], "duck": [1197, 1203, 2081, 2102], "nb": [1197, 1207, 1210, 1212, 1214, 1303], "simplic": [1197, 1759, 2071, 2109, 2110], "varieti": [1197, 2078, 2110], "assume_static_by_default": [1197, 1204], "mark_dynamic_dim": 1197, "warn_onli": [1199, 1202, 1207, 1995], "source_pair": 1199, "derived_equ": 1199, "phantom_symbol": 1199, "forest": 1199, "transit": [1199, 1289, 1391, 1548, 1954, 2043, 2044, 2126], "phantom": 1199, "inner_nam": 1200, "unback": [1201, 1203, 1212, 1213, 1215, 1216, 1224, 1225, 1226, 2130, 2135], "unspeci": 1202, "unspec": 1202, "brittl": 1202, "strictminmaxconstraint": 1202, "should_record_ev": 1203, "tracked_fak": 1203, "add_var_to_v": 1203, "bind_symbol": 1203, "littl": [1203, 2081, 2094, 2111], "evaluate_guard": 1203, "cleanest": 1203, "shenanigan": 1203, "bound_sympi": 1203, "size_oblivi": 1203, "check_equ": 1203, "create_symbol": 1203, "dimdynam": [1203, 1206], "constraint_dim": 1203, "do_not_specialize_zero_on": 1203, "symbolic_context": [1203, 1205, 1206], "create_symbolic_sizes_strides_storage_offset": [1203, 1205, 1206, 1209], "create_symboolnod": 1203, "create_symfloatnod": 1203, "create_symintnod": 1203, "create_unbacked_symbool": 1203, "create_unbacked_symfloat": 1203, "create_unbacked_symint": 1203, "create_unspecified_symbol": 1203, "specialz": 1203, "create_unspecified_symint_and_symbol": 1203, "defer_runtime_assert": 1203, "orig_expr": 1203, "fx_node": 1203, "evaluate_guards_express": 1203, "produce_guards_express": 1203, "evaluate_guards_for_arg": 1203, "ignore_stat": 1203, "evaluate_symexpr": 1203, "compile_fx": [1203, 2145], "symexpr": 1203, "format_guard": 1203, "freeze_runtime_assert": 1203, "discharg": [1203, 1213], "get_axiom": 1203, "compute_hint": 1203, "get_impl": 1203, "booleanatom": 1203, "get_nontrivial_guard": 1203, "get_pruned_guard": 1203, "prune": [1203, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 2068, 2114], "ignore_fresh_unbacked_symbol": 1203, "is_unbacked_symint": 1203, "produce_guard": 1203, "source_ref": 1203, "input_context": 1203, "equalities_input": 1203, "_simplifi": 1203, "localsourc": [1203, 2133], "boilerpl": [1203, 2089, 2102], "nice": [1203, 1475, 1476, 1477, 1478, 1479, 1480, 1494, 1541, 1542, 1543, 1600, 2066, 2075, 2078, 2102, 2133], "set_unbacked_var_to_v": 1203, "propagate_real_tensor": [1203, 1212], "resort": [1203, 2078, 2086, 2102], "size_hint": [1203, 2138], "allow_non": 1203, "suppress_guard": 1203, "allow_scalar_output": 1204, "allow_dynamic_output_shape_op": 1204, "specialize_zero_on": 1204, "duck_shap": 1204, "prefer_deferred_runtime_asserts_over_guard": 1204, "allow_complex_guards_as_runtime_assert": 1204, "dynamic_s": [1205, 1206, 1208], "dynamic_strid": [1205, 1206, 1208], "constraint_s": [1205, 1206, 1208], "constraint_strid": [1205, 1206, 1208], "view_base_context": [1205, 1206, 1208], "tensor_sourc": [1205, 1208], "shape_env_to_source_to_symbol_cach": [1205, 1208], "statelesssymboliccontext": 1205, "owner": [1205, 2042, 2081, 2100, 2109, 2110], "lifecycl": [1205, 2135], "shape_env": [1205, 1212, 1226, 1227], "dimconstraint": 1206, "relaxedunspecconstraint": 1207, "unsoundli": [1207, 1213], "inner_context": 1208, "canonic": 1210, "rh": [1210, 1335, 1380], "Ors": 1210, "cnf": 1210, "subexpr": 1210, "25924": 1210, "retrac": [1211, 1226, 1297, 2133], "example_valu": 1212, "old_example_valu": 1212, "peek": [1212, 2051], "freshli": 1212, "unbacked_var_to_v": 1212, "lie": [1213, 1582, 1584, 1712, 1937, 2115, 2119, 2135], "intersect": [1213, 2071], "fairli": [1213, 2091, 2132, 2136, 2138], "perfectli": [1213, 1901, 2078], "definitely_tru": 1215, "parallel_or": 1216, "parallel_and": 1216, "circuit": 1216, "oblivi": 1217, "118579": 1217, "free_symbol": 1218, "maxsiz": 1223, "sym_and": 1229, "sparse_grad": [1230, 2045, 2140], "tau": [1233, 1329, 1656, 1805, 1806, 1826, 1844, 1845, 1914, 2045], "elementari": [1233, 2075, 2086], "reflector": [1233, 1753, 1845], "household": [1233, 1329, 1753, 1845], "householder_product": [1233, 1753, 1844], "gel": [1233, 1335], "set_deterministic_debug_mod": [1237, 1995], "fork_rng": [1242, 2043, 2108], "edge_ord": [1243, 2045], "rightarrow": 1243, "closer": [1243, 1598, 1858, 2081, 2089, 2104, 2130, 2138, 2139], "interior": 1243, "theorem": 1243, "h_l": 1243, "h_r": 1243, "neighbor": [1243, 1286, 1601, 1603, 1954], "xi_1": 1243, "xi_2": 1243, "approx": [1243, 1847, 1959, 2086], "80": [1243, 1345, 1837, 1905, 2078, 2101], "halv": 1243, "coord": 1243, "54": [1247, 1509, 1917], "hann_window": [1247, 1954, 2045, 2049, 2100], "hann": [1248, 1917], "hist": [1251, 1252, 2045], "bin_edg": [1251, 1252, 2045], "9524": 1251, "leftmost": [1252, 2067], "leg": 1256, "triangl": [1256, 2119], "hypotenus": 1256, "4031": 1256, "gammainc": [1258, 2115], "gammaincc": [1259, 2115], "index_reduce_": [1263, 2045], "1427": 1264, "0231": 1264, "5414": 1264, "0009": 1264, "4664": [1264, 1975], "2647": 1264, "1228": 1264, "6571": 1264, "7230": 1264, "6004": 1264, "multidimension": [1266, 1359, 1510], "8173": 1266, "0874": 1266, "1784": 1266, "3279": 1266, "7894": 1266, "4682": 1266, "7159": 1266, "1506": 1266, "4034": 1266, "3657": [1266, 2094], "0387": 1266, "9892": 1266, "1774": 1266, "3261": 1266, "3917": 1266, "4537": [1266, 1728], "7493": 1266, "1724": 1266, "2291": 1266, "5749": 1266, "2267": 1266, "7920": 1266, "3607": 1266, "3701": 1266, "3666": 1266, "5850": [1266, 1320], "7242": 1266, "9837": 1266, "1560": 1266, "2907": 1266, "6785": 1266, "5671": [1266, 1321], "5452": 1266, "6912": 1266, "5509": 1266, "1782": 1266, "9843": 1266, "7366": 1266, "5672": [1266, 1795], "5115": 1266, "4864": 1266, "2476": 1266, "4337": 1266, "6347": 1266, "1748": 1266, "3567": [1266, 1320], "6558": 1266, "2469": [1266, 2089], "5787": [1266, 1370], "typing_extens": [1275, 1276, 2046], "typeguard": [1275, 1276], "typecheck": [1276, 2100], "warn_alwai": 1277, "set_warn_alwai": 1277, "nonfinit": 1278, "test_el": [1280, 2045], "assume_uniqu": [1280, 2045], "0j": [1285, 2004], "nola": 1286, "envelop": 1286, "hop": [1286, 1954], "shorter": [1286, 2099, 2109], "griffin": 1286, "ieee": [1286, 1501, 1921, 2092], "tran": 1286, "assp": 1286, "vol": [1286, 1501, 1921], "236": 1286, "apr": 1286, "1984": 1286, "slide": [1286, 1457, 1458, 1459, 1494, 1541, 1542, 1543, 1600, 1648, 1679, 1680, 1681, 1724, 1862, 1863, 1954], "fft_size": 1286, "scriptmodul": [1287, 1288, 1293, 1297, 1299, 1300, 1301, 1305, 1306, 1802, 2044, 2046, 2057, 2099], "attributemodul": 1287, "names_ag": 1287, "get_debug_st": 1288, "graphexecutorst": 1288, "_extra_fil": [1288, 1289, 1297, 1300, 2088], "save_to_buff": 1288, "add_modul": [1289, 1548], "init_weight": [1289, 1548, 2089], "buf": [1289, 1548], "20l": [1289, 1548], "1l": [1289, 1548], "5l": [1289, 1548], "pretti": [1289, 1801, 1905, 2044, 2131, 2135], "syntax": [1289, 2044, 2047, 2102, 2137], "code_with_const": 1289, "constmap": 1289, "get_buff": [1289, 1548], "attributeerror": [1289, 1548, 2081, 2104], "get_extra_st": [1289, 1548], "set_extra_st": [1289, 1548], "get_paramet": [1289, 1548], "net_b": [1289, 1548], "net_c": [1289, 1548], "inlined_graph": 1289, "ipu": [1289, 1548, 2051, 2094], "remove_dupl": [1289, 1548], "named_children": [1289, 1548, 2089], "conv4": [1289, 1548], "conv5": [1289, 1548], "memo": [1289, 1548, 2135], "register_backward_hook": [1289, 1548], "register_full_backward_hook": [1289, 1548, 1733, 2089], "register_forward_hook": [1289, 1548, 1731, 2089], "with_kwarg": [1289, 1548], "always_cal": [1289, 1548, 1731], "fire": [1289, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 2080, 2088, 2141], "register_module_forward_hook": [1289, 1548, 2089], "register_forward_pre_hook": [1289, 1484, 1548, 1732, 2089], "forward_pr": [1289, 1548], "register_module_forward_pre_hook": [1289, 1548, 2089], "register_module_full_backward_hook": [1289, 1548, 1729, 2075, 2089], "register_full_backward_pre_hook": [1289, 1548, 1734, 2089], "register_module_full_backward_pre_hook": [1289, 1548, 2089], "register_load_state_dict_post_hook": [1289, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827], "incompatible_kei": [1289, 1548], "register_load_state_dict_pre_hook": [1289, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827], "local_metadata": [1289, 1548], "error_msg": [1289, 1548], "b950": [1289, 1548], "register_modul": [1289, 1548, 1735], "register_paramet": [1289, 1548, 1736, 2081, 2089], "register_state_dict_post_hook": [1289, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827], "register_state_dict_pre_hook": [1289, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827], "keep_var": [1289, 1548], "gan": [1289, 1548, 1754, 1788], "set_submodul": [1289, 1548], "overid": [1289, 1548], "share_memori": [1289, 1548, 2091], "share_memory_": [1289, 1548, 2064, 2116], "4d": [1289, 1463, 1494, 1511, 1548, 1601, 1648, 1665, 1693, 1725, 1746, 1747, 1861], "1913": [1289, 1548], "3420": [1289, 1548], "5113": [1289, 1548, 1975], "2325": [1289, 1322, 1548], "gpu1": [1289, 1548], "1914": [1289, 1548], "5112": [1289, 1548, 2078], "3741": [1289, 1548], "2382": [1289, 1433, 1548], "5593": [1289, 1548], "4443": [1289, 1548], "6122": [1289, 1548], "1150": [1289, 1548], "dst_type": [1289, 1548], "set_to_non": [1289, 1548, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1822, 1823, 1824, 1825, 1826, 1827, 2078], "the_typ": 1290, "the_valu": 1290, "script_bar": 1292, "addmod": 1292, "preserved_attr": 1293, "optimize_numer": 1293, "optimize_for_infer": [1293, 2131], "run_frozen_optim": 1293, "scripted_modul": [1293, 1301, 2094], "frozen_modul": 1293, "modified_tensor": 1293, "mymodule2": 1293, "dump_alias_db": 1293, "training_method": 1294, "testcod": [1295, 1296, 1297, 1300, 2046], "interfacetyp": 1295, "impl1": 1295, "impl2": 1295, "user_fn": 1295, "user_fn_jit": 1295, "target_typ": 1296, "key1": 1296, "val1": 1296, "key2": 1296, "val2": 1296, "_restore_shap": 1297, "scriptfunct": [1297, 1301, 1302, 1305, 2099], "readlin": [1297, 1361, 2102], "other_method": 1299, "lesser": [1299, 2075, 2077], "extent": [1299, 2077, 2114], "frozen_mod": 1299, "_frames_up": 1301, "_rcb": 1301, "scriptdict": 1301, "scriptlist": 1301, "test_sum": 1301, "scripted_fn": [1301, 2044], "conv2": [1301, 1548, 1577, 2044, 2097, 2104], "some_entry_point": 1301, "python_only_fn": 1301, "testnnmodul": 1301, "pdt_model": 1301, "scripted_model": [1301, 2102], "un": [1303, 1467, 2104], "unfus": 1303, "check_trac": [1305, 1306], "check_input": [1305, 1306, 2044], "check_toler": [1305, 1306], "_force_outplac": [1305, 1306], "_module_class": [1305, 1306], "_compilation_unit": [1305, 1306], "compilationunit": [1305, 1306], "example_kwarg_input": 1305, "_store_input": [1305, 1306], "trace_modul": [1305, 2044, 2047], "untrack": 1305, "checker": [1305, 1306, 2047, 2099], "traced_foo": [1305, 2044], "example_weight": [1305, 1306], "example_forward_input": [1305, 1306], "example_inputs_is_kwarg": 1306, "method2": 1306, "example_method2_input": 1306, "weighted_kernel_sum": 1306, "use_memory_effici": 1307, "memory_effici": 1307, "scriptabl": 1307, "kaiser": [1309, 1592, 1594, 1596], "i_0": [1309, 1310, 1920, 1975, 2115], "zeroth": [1309, 1920, 2115], "out_i": 1309, "kroneck": 1310, "a_0": 1310, "a_n": 1310, "b_0": 1310, "b_1": 1310, "b_n": 1310, "k_0": [1310, 1975], "k_1": 1310, "k_n": 1310, "j_0": 1310, "j_1": 1310, "j_n": 1310, "k_t": 1310, "i_t": [1310, 1518, 1825], "b_t": 1310, "j_t": 1310, "bmatrix": 1310, "a_": [1310, 1381, 1536, 1975], "cdot": [1310, 1335, 1347, 1460, 1461, 1482, 1483, 1505, 1513, 1551, 1552, 1553, 1554, 1555, 1592, 1636, 1659, 1805, 1851, 1954, 2115, 2121], "vdot": [1310, 1357, 1358, 2045, 2100], "ddot": [1310, 1357], "kth": 1311, "full_lik": [1315, 2045, 2049, 2051, 2100], "logarithm": [1318, 1323, 1349, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1376, 1467, 1638, 1673, 1934, 2115], "gamma": [1318, 1462, 1463, 1464, 1502, 1510, 1511, 1512, 1520, 1563, 1588, 1737, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1826, 1828, 1832, 1833, 1837, 1842, 1843, 1861, 2043, 2045, 2099, 2100, 2101, 2115], "5724": [1318, 2115], "1208": [1318, 2115], "mathrlap": [1319, 1325, 1326, 1327, 1328, 1336, 1339, 1348, 1350, 1352, 1353, 1753], "qquad": [1319, 1321, 1325, 1326, 1327, 1328, 1329, 1336, 1339, 1348, 1350, 1352, 1353, 1753], "eigenvalu": [1319, 1325, 1326, 1327, 1328, 1341, 1344, 1347, 1352, 1353, 1362, 1847, 2045], "resp": [1319, 1326, 1328, 1352, 1353, 1370], "5266": 1319, "9586": 1319, "0626j": 1319, "4160": 1319, "5895": 1319, "2322": 1319, "2976j": 1319, "4928": [1319, 1975], "4692e": 1319, "8747e": 1319, "performantli": 1320, "3792": 1320, "9831j": 1320, "8757": 1320, "5425": 1320, "6374j": 1320, "kappa": 1321, "_p": [1321, 1557], "frobeniu": [1321, 1335, 1342, 1346, 1794], "nuc": [1321, 1342, 1346, 1359, 1765, 1774, 1794], "nuclear": [1321, 1342, 1346, 1794], "sigma_1": [1321, 1335, 1344, 1347], "sigma_n": 1321, "kappa_2": 1321, "kappa_": 1321, "4142": [1321, 1346, 1794, 1851], "1623": [1321, 1342], "2426": [1321, 1346, 1794], "7071": [1321, 1913], "5917": 1321, "9941": 1322, "5132": 1322, "5681": 1322, "4653": 1322, "4507": 1322, "4119": 1322, "6163": 1322, "1073": 1322, "3957": 1322, "9666": [1322, 1645], "0840": 1322, "3357": 1322, "2139": 1322, "slogdet": [1323, 1370, 2045, 2100], "0934": 1323, "1990": [1323, 1370], "4099": [1323, 1370], "7386": [1323, 1370], "diagonaliz": [1325, 1327], "eigenvector": [1325, 1326, 1362, 2045], "neq": [1325, 1326, 1329, 1353, 1445, 1551, 1553, 1804, 1806, 1807, 1809, 1811, 1823, 1824, 1826, 1830, 1958], "phi": [1325, 1326, 1353, 1497, 1652, 1958], "shall": [1325, 1326, 1353, 1756, 1760], "lambda_i": [1325, 1326, 1341], "lambda_j": [1325, 1326], "eigval": [1325, 2045], "9828": [1325, 1983, 2089], "3889j": 1325, "4617": 1325, "3010j": 1325, "1662": 1325, "7435j": 1325, "6139": 1325, "0562j": 1325, "1226": [1325, 1327], "5738j": [1325, 1327], "7537": [1325, 1327], "1286j": [1325, 1327], "9218": 1325, "1882": 1325, "2220j": 1325, "0270": 1325, "3867j": 1325, "7119e": 1325, "2841e": 1325, "uplo": [1326, 1328, 2045], "unitari": [1326, 1329, 1348, 1353, 1753, 1845], "ill": [1326, 1619, 2092], "eigvalsh": [1326, 1344], "9228": [1326, 1328], "2029": [1326, 1328], "0862j": [1326, 1328], "3464": [1326, 1328], "3277": [1326, 1328], "9415": [1326, 1328], "0846": 1326, "9964": 1326, "9170": 1326, "3898j": 1326, "0331j": 1326, "1062e": 1326, "5423e": 1326, "polynomi": [1327, 1328, 1840, 2136], "_n": [1327, 1328, 1330, 1753, 2081], "4576e": [1327, 1354], "5797": 1328, "4629": 1328, "1605": 1328, "3780": 1328, "1113": [1328, 2089], "7381": 1328, "h_1h_2": 1329, "h_k": 1329, "h_i": [1329, 1583], "_m": [1329, 1753], "tau_i": 1329, "8034": 1329, "4184j": 1329, "2588": 1329, "0174j": 1329, "6853": 1329, "7953j": 1329, "0790": 1329, "5620j": 1329, "6989j": 1329, "5360": 1329, "1193j": 1329, "3877": 1329, "6691j": 1329, "3512": 1329, "3024j": 1329, "4766": 1329, "5783j": 1329, "0361": [1329, 2089], "6587j": 1329, "6396": [1329, 2089], "1612j": 1329, "3693": 1329, "4481j": 1329, "aa": 1330, "pinv": [1330, 1335, 1849], "moor": [1330, 1347], "penros": [1330, 1347], "ainv": [1330, 1331, 1351, 1355], "1921e": 1330, "9073e": [1330, 1600], "5107e": 1330, "ldl": [1332, 1334], "indefinit": [1332, 2056], "ld": [1332, 1333, 1334, 2045], "sytrf": [1332, 1333], "ldl_solv": 1332, "ldl_factor_ex": [1332, 1334], "2079": [1332, 1333, 2115], "2414": [1332, 1333], "9428": [1332, 1333], "4554": [1332, 1333], "3264": [1332, 1333], "3823": [1332, 1333], "5884": [1332, 1333], "9595": [1332, 1333, 1913], "2695": [1332, 1333], "8513": [1332, 1333], "1633": [1332, 1333], "ldl_factor": 1333, "rcond": [1335, 1347, 1849, 2045], "_f": 1335, "gelsi": 1335, "gelsd": 1335, "gelss": 1335, "tridiagon": 1335, "sigma_i": [1335, 1353, 1958], "residu": [1335, 1362, 2045, 2089], "singular_valu": [1335, 2045], "0838": [1335, 2089], "2275": [1335, 1413], "3844": 1335, "5499": 1335, "1175": 1335, "9102": 1335, "0870": 1335, "6772": 1335, "7758": 1335, "5109": 1335, "4382": 1335, "3769": 1335, "1818": 1335, "3450": 1335, "0806": [1335, 2089], "3967": 1335, "3994": 1335, "1521": 1335, "1473": 1335, "9194": 1335, "0458": 1335, "6705": [1335, 1394], "1802": 1335, "4086": 1335, "5152e": 1335, "zero_": [1335, 1645, 2045, 2065, 2066, 2089, 2114], "5007": 1336, "9755": 1336, "0489": 1336, "9644": [1336, 1389], "9605e": 1336, "0376e": 1336, "lu_factor_ex": [1337, 1379], "lu_unpack": [1337, 1379, 2045, 2100], "b1": 1337, "b2": [1337, 2078, 2087], "getrf": [1338, 1351], "adjoint": [1339, 2045, 2100, 2118, 2120], "_exp": 1341, "7183": [1341, 2089], "3891": 1341, "8660": 1341, "ord": [1342, 1346, 1359, 1794, 2045, 2047, 2100], "la": [1342, 1346, 1359, 2089], "2829": 1342, "2627": 1342, "0756": 1343, "4980": 1343, "6617": 1343, "4994": 1343, "9980": 1343, "2731": 1343, "8001": 1343, "2640": 1343, "4571": 1343, "5511": 1343, "0163": [1343, 1389], "5292": 1343, "4899": 1343, "0822": 1343, "2773": [1343, 2067], "varepsilon": [1344, 1347, 1597], "tol": [1344, 1362, 2045], "fewest": 1345, "bc": [1345, 2055, 2101], "75000": 1345, "26": [1345, 1831, 2133, 2134, 2145], "148": 1345, "vector_norm": [1346, 1794], "matrix_norm": [1346, 1359, 1754, 1794], "7460": [1346, 1794], "3485": 1346, "8570e": 1346, "8480": 1346, "2361": [1346, 1794, 1795], "7417": [1346, 1794], "computation": [1347, 2086], "5495": [1347, 1413], "0979": 1347, "4092": 1347, "4132": [1347, 1919], "1143": 1347, "3662": 1347, "6374": 1347, "9294": 1347, "3269": [1347, 2089], "5745": [1347, 1952, 1953, 2002, 2003], "0382": [1347, 1433], "5922": 1347, "6759": 1347, "0600": 1347, "1933": 1347, "2090": 1347, "0903": 1347, "0817": 1347, "4752": [1347, 1957], "7124": 1347, "1631": 1347, "2272": 1347, "1356": 1347, "3933": 1347, "5023": 1347, "0308": 1347, "1725": 1347, "5216": 1347, "apinv": 1347, "5633e": 1347, "0830e": 1347, "wide": [1348, 1353, 1753, 1915, 2062, 2077, 2081, 2089, 2101, 2136], "51": [1348, 1546, 1857], "167": [1348, 1857], "68": [1348, 1857, 2044, 2046], "8571": [1348, 1857], "3943": [1348, 1857], "3314": [1348, 1857], "4286": [1348, 1857], "9029": [1348, 1857], "0343": [1348, 1857], "2857": [1348, 1857], "1714": [1348, 1857, 2089], "9429": [1348, 1857], "175": [1348, 1857], "q2": 1348, "r2": [1348, 1588], "6099e": 1348, "2158e": 1348, "logabsdet": [1349, 2045], "0032": 1349, "6690": 1349, "1161": 1349, "4053": 1349, "6218": [1349, 1972], "9273": 1349, "0082": 1349, "7576": 1349, "logdet": [1349, 2045, 2100], "linalg_slogdet": [1349, 2045, 2100], "2776": 1349, "solve_ex": 1350, "solve_triangular": [1350, 1982], "expand_a": [1350, 2045, 2081, 2100, 2118], "rectangular": [1352, 1353, 1381, 1954, 2073, 2097], "triu_": [1352, 2045], "tril_": [1352, 2045], "full_matric": [1353, 1354, 1759, 1958, 2045, 2140], "vh": [1353, 1759, 1958, 2045, 2140], "gesvdj": [1353, 1354, 1958], "jacobi": 1353, "gesvda": [1353, 1354], "gesvd": [1353, 1354, 1958], "u_k": 1353, "v_k": 1353, "sigma_j": [1353, 1958], "eigendecomposit": 1353, "0486e": 1353, "0957e": 1353, "5139": 1354, "1087": 1354, "1066": 1354, "ind": [1355, 1356, 2045, 2082], "tensorsolv": 1355, "ndim": [1355, 1356, 2065, 2067, 2114, 2120, 2134], "atensorinv": 1355, "movedim": [1356, 1396, 2045, 2051, 2082, 2100, 2118], "tensorinv": 1356, "vandermond": [1357, 2001], "pmatrix": 1357, "x_n": [1357, 1460, 1461, 1507, 1508, 1514, 1539, 1580, 1980, 2075], "125": [1357, 1567, 2001, 2045], "overlin": [1358, 2004], "3223": 1358, "2815": 1358, "1944": [1358, 2089], "4345": 1359, "pickle_modul": [1361, 1889], "pickle_load_arg": 1361, "register_packag": [1361, 2094], "binaryio": [1361, 1889, 2102], "add_safe_glob": [1361, 2094], "mmape": 1361, "untrust": [1361, 2042, 2058, 2102], "tamper": [1361, 2102], "surg": 1361, "unicodedecodeerror": 1361, "codec": 1361, "0x": 1361, "latin1": 1361, "byte_arrai": 1361, "niter": [1362, 1847, 1959], "ortho_iparam": 1362, "ortho_fparam": 1362, "ortho_bparam": 1362, "knyazev": 1362, "knyazev2001": 1362, "stathopoulosetal2002": 1362, "converg": [1362, 1580, 1753, 1807, 1808, 1839, 2074, 2089, 2092], "precondition": 1362, "eigenpair": 1362, "criterion": [1362, 1460, 1461, 1481, 1483, 1508, 1514, 1539, 1540, 1551, 1552, 1553, 1580, 1581, 1597, 1598, 1831, 1864, 2083, 2085], "fep": 1362, "eigenproblem": 1362, "iparam": 1362, "fparam": 1362, "bparam": 1362, "ivar": 1362, "fvar": 1362, "bvar": 1362, "tvar": 1362, "istep": 1362, "converged_count": 1362, "rerr": 1362, "force_stop": 1362, "2001": 1362, "precondit": 1362, "eigensolv": 1362, "siam": 1362, "sci": 1362, "517": 1362, "541": 1362, "epub": 1362, "doi": [1362, 1501, 1921], "1137": 1362, "s1064827500366124": 1362, "andrea": 1362, "stathopoulo": 1362, "kesheng": 1362, "2002": [1362, 1921], "2165": 1362, "2182": 1362, "s1064827500370883": 1362, "duerschetal2018": 1362, "jed": 1362, "duersch": 1362, "meiyu": 1362, "shao": 1362, "chao": 1362, "ming": 1362, "gu": 1362, "c655": 1362, "c676": 1362, "17m1129830": 1362, "log_": [1363, 1364, 1365, 1366, 2045, 2065], "7767": 1363, "3234": 1363, "2156": 1363, "2411": 1363, "5739": 1363, "5637": 1363, "4640": 1363, "1952": 1363, "4226": 1363, "5204": [1363, 1866], "5224": 1364, "9354": 1364, "7257": 1364, "1301": 1364, "2820": 1364, "0290": 1364, "1392": 1364, "8857": 1364, "6476": 1364, "0090": [1365, 1446, 1853, 2115], "9923": 1365, "5372": 1365, "2492": 1365, "8653": 1365, "7055": 1365, "7705": 1365, "2225": 1365, "8419": 1366, "8003": [1366, 2093], "9971": 1366, "5287": 1366, "0490": 1366, "2483": 1366, "0042": 1366, "9196": 1366, "3504": [1366, 1975], "logsumexp": [1367, 2045, 2065, 2071, 2100, 2115], "3069": 1367, "6867": 1367, "8731": 1367, "30000": 1367, "1269e": 1367, "log_2": 1368, "logaddexp": [1368, 2045, 2100], "limits_": 1369, "42296738": 1369, "04462666": 1369, "86278635": 1369, "94622083": 1369, "05277811": 1369, "39202815": 1369, "83525007": 1369, "84492621": 1369, "06084887": 1369, "06844475": 1369, "2611": [1370, 1972], "9254": 1370, "6213": [1370, 2089], "6843": 1370, "3242": 1370, "9665": 1370, "4539": 1370, "0887": [1370, 2115], "1336": 1370, "4025": 1370, "7089": [1370, 1490], "9032": 1370, "3031": 1370, "2589": 1376, "1135": 1376, "5481": [1376, 1389, 2089], "9566": 1376, "sum_j": [1377, 1538, 1582, 1584, 1712, 1937, 2115], "0593": [1377, 2089], "5696": 1377, "6859e": 1377, "compute_pivot": 1379, "transposit": [1379, 1979, 2114], "perm": 1379, "a_lu": 1379, "5558": 1379, "1684": 1379, "1551": 1379, "1940": 1379, "6189": 1379, "5497": 1379, "4526": 1379, "2526": 1379, "3285": 1379, "7988": 1379, "7175": 1379, "9701": 1379, "2634": 1379, "9255": 1379, "3459": 1379, "00000e": 1380, "8312": 1380, "unpack_data": [1381, 2045], "unpack_pivot": [1381, 2045], "l_": [1381, 1449, 1453, 1457, 1461, 1475, 1476, 1477, 1478, 1515, 1541], "u_": [1381, 1804, 1809], "3552": [1383, 1646], "3825": 1383, "8297": 1383, "3477": 1383, "2035": [1383, 1952, 1953, 2002, 2003], "2252": [1383, 2115], "5002": 1383, "6248": [1383, 1392], "1307": 1383, "0608": [1383, 1930], "1244": 1383, "0139": 1383, "6763": 1387, "7445": 1387, "2369": 1387, "argmax": [1387, 1452, 1541, 1679, 1680, 1681, 1970, 2045, 2100, 2140], "max_indic": 1387, "2360": 1387, "2942": 1387, "1222": [1387, 2089], "8475": 1387, "1949": 1387, "1127": 1387, "6702": 1387, "5717": 1387, "9207": 1387, "1297": 1387, "8768": 1387, "6172": 1387, "6060": 1387, "2432": 1387, "3288": 1389, "3367": [1389, 1951], "nanmean": [1389, 2045, 2100], "3841": 1389, "6320": 1389, "4254": 1389, "7384": 1389, "0131": 1389, "6549": [1389, 1913], "4279": 1389, "3350": 1389, "7694": 1389, "5600": [1389, 1601], "0842": 1389, "9580": 1389, "3623": 1389, "2343": [1389, 2067], "5085": 1389, "4599": 1389, "1807": 1389, "5219": 1390, "5212": 1390, "2202": 1390, "2505": 1390, "3982": 1390, "9948": 1390, "3518": 1390, "3131": 1390, "3180": [1390, 2114], "6993": 1390, "0436": 1390, "0438": 1390, "2270": 1390, "2751": 1390, "7303": 1390, "2192": 1390, "3321": 1390, "2488": 1390, "0778": 1390, "9510": 1390, "7048": 1390, "4742": [1390, 1988, 2115], "7125": [1390, 1939], "plot": [1391, 2077, 2103, 2119, 2147], "t_0": [1391, 1831], "t_": [1391, 1496, 1650, 1830, 1831, 2045, 2114, 2135], "s_0": 1391, "s_": [1391, 1450, 1451, 1493, 1599], "g_0": 1391, "g_": [1391, 1809, 1825, 1826], "g_i": 1391, "t_i": 1391, "0d": [1391, 1540], "xy": 1391, "50276": 1391, "cartesian_prod": [1391, 2045, 2100], "grid_x": 1391, "grid_i": 1391, "dstack": [1391, 2045, 2100, 2114], "matplotlib": [1391, 2119], "pyplot": 1391, "plt": 1391, "plot_surfac": 1391, "6750": 1392, "0857": [1392, 1985], "7197": [1392, 2010], "argmin": [1392, 2045, 2100, 2140], "min_indic": [1392, 2045], "1334": 1392, "2803": 1392, "4644": [1392, 1952, 1953, 2002, 2003], "2635": [1392, 2089], "3651": 1392, "0384": 1392, "0128": 1392, "7015": 1392, "1153": 1392, "9849": 1392, "1458": [1392, 2115], "5788": 1392, "deduc": [1394, 2114], "4851": 1394, "5037": 1394, "3633": 1394, "0760": 1394, "3362": [1396, 1397], "8437": [1396, 1397], "9627": [1396, 1397], "1727": [1396, 1397], "5173": [1396, 1397], "1398": [1396, 1397], "mpsalloc": [1398, 1400], "metal": [1400, 1408, 1410, 2057, 2061, 2062, 2090], "mpsgraph": 1400, "wait_until_complet": [1405, 1406], "signpost": [1405, 1406, 1407, 2062], "xcode": 1406, "recommendedmaxworkingsets": [1408, 1410, 2062], "unlimit": [1410, 2078], "1321": 1413, "4370": [1413, 2114], "1289": 1413, "0527": 1413, "3077": [1413, 1948], "0881": 1413, "1259": 1413, "0284": 1413, "2015": [1433, 2073, 2089], "6087": 1433, "1494": 1433, "5491": 1433, "260": 1433, "8663": 1433, "3137": 1433, "0700": 1433, "8378": 1433, "5146": 1433, "5244": 1433, "5767": 1433, "1363": 1433, "5877": 1433, "5083": 1433, "1614": 1433, "1645": 1433, "7021": 1433, "0085": 1433, "0367": 1433, "1567": 1433, "4312": 1433, "1019": 1433, "4394": 1433, "8753": 1433, "_sampl": 1434, "n_sampl": 1434, "prob_dist": 1434, "0404": 1436, "6361": 1436, "multigammaln": [1437, 2115], "4028e": 1438, "38": [1438, 2134], "1400e": 1438, "isnan": [1439, 2045, 2100, 2114, 2140], "midpoint": [1441, 1858], "weakli": [1443, 1444, 2115], "to_spars": [1444, 1935, 2045, 2093, 2100, 2114], "2262": [1446, 1853], "0682": [1446, 1853], "2866": [1446, 1853], "3940": [1446, 1853], "5x7": [1450, 1454], "7x7": [1450, 1454], "10x7": [1450, 1454], "cube": [1451, 1455, 1864], "d_": [1451, 1455, 1459, 1471, 1474, 1477, 1480, 1517, 1543, 1546, 1572, 1575, 1601, 1606, 1654, 1983, 1984, 1985, 1986], "5x7x9": [1451, 1455], "7x7x7": [1451, 1455], "7x9x8": [1451, 1455], "n_class": 1452, "cutoff": [1452, 2073], "div_valu": 1452, "head_bia": 1452, "edouard": 1452, "grave": [1452, 1467], "armand": 1452, "joulin": 1452, "moustapha": 1452, "cissu00e9": 1452, "grangier": 1452, "hervu00e9": 1452, "ju00e9g": 1452, "imbalanc": 1452, "zipf": 1452, "law": 1452, "102": [1452, 2139], "1001": 1452, "1002": 1452, "_class": 1452, "maxunpool1d": [1453, 1541, 1682, 1995], "maxunpool2d": [1454, 1495, 1542, 1683, 1995], "maxunpool3d": [1455, 1496, 1543, 1684, 1995], "selu": [1456, 1492, 1647, 2045, 2073, 2099, 2100], "n_i": [1457, 1458, 1459, 1475, 1476, 1477, 1541, 1542, 1543, 1597, 1598], "c_j": [1457, 1458, 1459, 1541, 1542, 1543], "size_averag": [1460, 1461, 1481, 1483, 1507, 1513, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1626, 1627, 1635, 1637, 1662, 1666, 1667, 1678, 1686, 1687, 1688, 1689, 1690, 1698, 1710, 1711, 1722, 2045], "unreduc": [1460, 1461, 1483, 1508, 1514, 1539, 1555, 1580, 1598], "ell": [1460, 1461, 1483, 1507, 1508, 1514, 1539, 1555, 1580, 1598], "l_1": [1460, 1461, 1483, 1507, 1508, 1514, 1539, 1555, 1580, 1598], "l_n": [1460, 1461, 1483, 1507, 1508, 1514, 1539, 1555, 1580, 1598], "w_n": [1460, 1461, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "y_n": [1460, 1461, 1483, 1507, 1508, 1514, 1539, 1555, 1580, 1980, 2075], "lim_": [1460, 2075], "secondli": 1460, "rescal": [1460, 1461, 1483, 1552, 1553, 1555, 1582, 1584, 1626, 1627, 1637, 1690, 1759, 1788], "nbatch": [1460, 1461], "meantim": [1460, 1461, 1481, 1483, 1507, 1514, 1539, 1540, 1551, 1552, 1553, 1555, 1562, 1580, 1581, 1597, 1626, 1627, 1637, 1666, 1690, 1698, 2145], "pos_weight": [1461, 1627, 2045], "recal": [1461, 2081, 2119], "ell_c": 1461, "l_c": 1461, "p_c": 1461, "imbal": 1461, "pai": [1461, 1627, 2095, 2118], "spacial": 1461, "random_": [1461, 1483, 1555, 1627, 2045, 2065, 2123], "hat": [1462, 1463, 1464, 1510, 1511, 1512, 1588], "terminologi": [1462, 1463, 1464, 1588], "5d": [1464, 1512, 1601, 1654, 1665, 1693, 1725], "volumetr": [1464, 1588, 1601, 1654, 1665, 1725, 1726, 1727], "spatio": [1464, 1588], "in1_featur": 1465, "in2_featur": 1465, "in1": [1465, 1625], "in2": [1465, 1625], "blank": [1467, 1638, 2045, 2048], "zero_infin": [1467, 1638, 2045], "connectionist": [1467, 1638], "unseg": 1467, "longest": [1467, 1781, 1783, 1784, 2083], "input_length": [1467, 1638, 2045, 2083], "target_length": [1467, 1638, 2045], "s_n": 1467, "target_n": 1467, "unbatch": [1467, 1483, 1494, 1499, 1510, 1518, 1554, 1564, 1592, 1648], "s_min": 1467, "toronto": 1467, "edu": [1467, 1864], "icml_2006": 1467, "background": [1467, 1478, 1654, 1693, 2091, 2109], "channel_shuffl": [1468, 2045, 2100], "_left": [1469, 1470, 1471, 1472, 1473, 1474, 1570, 1571, 1572, 1573, 1574, 1575, 1604, 1605, 1606, 1693], "_right": [1469, 1470, 1471, 1472, 1473, 1474, 1570, 1571, 1572, 1573, 1574, 1575, 1604, 1605, 1606, 1693], "_top": [1470, 1471, 1473, 1474, 1571, 1572, 1574, 1575, 1605, 1606, 1693], "_bottom": [1470, 1471, 1473, 1474, 1571, 1572, 1574, 1575, 1605, 1606, 1693], "_front": [1471, 1474, 1572, 1575, 1606, 1693], "_back": [1471, 1474, 1572, 1575, 1606, 1693], "320": [1471, 1575], "480": [1471, 1575], "0491": [1472, 1604], "7152": [1472, 1604], "0749": [1472, 1604], "3287": [1472, 1604], "8966": [1472, 1604], "1466": [1472, 1604], "2771": [1472, 1604], "6616": [1472, 1604], "4523": [1472, 1604], "1255": [1472, 1604], "6372": [1472, 1604, 1958], "1182": [1472, 1604], "8652": [1472, 1604], "6585": 1473, "4320": [1473, 1968], "8701": 1473, "4649": 1473, "_j": [1475, 1476], "star": [1475, 1476, 1477, 2047], "uue0": 1475, "trou": [1475, 1476, 1477, 1478, 1479, 1480, 1494, 1600], "harder": [1475, 1476, 1477, 1478, 1479, 1480, 1494, 1542, 1543, 1600], "u00e0": [1476, 1477, 1478, 1479, 1480, 1494, 1600], "prod_": [1476, 1477, 1479, 1480, 1493, 1599, 1811], "out_j": 1477, "deconvolut": [1478, 1479, 1480, 1632, 1633, 1634], "_pad": [1478, 1479, 1480], "semi": [1481, 1507, 2043, 2073], "supervis": [1481, 1507], "vert": [1482, 1557, 1636], "_2": [1482, 1636, 1754, 1788], "ast_1": [1482, 1498], "ast_2": [1482, 1498], "ignore_index": [1483, 1555, 1637, 1690, 2045], "unbalanc": [1483, 1555], "d_1": [1483, 1555, 1637, 1690], "d_2": [1483, 1555, 1637, 1690], "d_k": [1483, 1555, 1637, 1690], "_index": [1483, 1555], "logsoftmax": [1483, 1555, 1582, 1673], "nllloss": [1483, 1582, 1690, 1712, 1995], "blend": 1483, "smooth": [1483, 1508, 1580, 1585, 1637, 1663, 1710, 1824], "w_c": 1483, "rethink": [1483, 1637], "incept": [1483, 1637], "spectral_norm": [1484, 1778], "neuron": 1485, "detector": 1485, "dropout1d": [1487, 2045], "_freez": 1490, "sparseadam": [1490, 2101], "0251": 1490, "6902": [1490, 1855], "7172": 1490, "6431": 1490, "0748": 1490, "6969": 1490, "4970": 1490, "3448": 1490, "9685": 1490, "3677": 1490, "7265": 1490, "1685": 1490, "4362": 1490, "4004": [1490, 1939], "9400": 1490, "9124": 1490, "3616": 1490, "1151": 1490, "0309": 1490, "9315": 1490, "1655": [1490, 2078], "9897": [1490, 2081], "0635": 1490, "7895": 1490, "0364": 1490, "6778": 1490, "5803": 1490, "from_pretrain": [1490, 1491, 2138], "bag": [1491, 1646], "per_sample_weight": [1491, 1646, 2045, 2140], "embedding_sum": 1491, "8861": 1491, "4350": 1491, "0523": 1491, "1306": 1491, "5798": 1491, "0044": 1491, "7082": [1491, 1646], "2145": [1491, 1646], "6251": [1491, 1646], "6500": 1491, "satur": [1492, 1647], "alphadropout": [1492, 1620], "160": [1493, 2101], "unfold": [1494, 2045, 2100, 2118], "prod_d": [1494, 1600], "neighborhood": [1494, 1600], "col2im": [1494, 2045, 2100, 2140], "fold_param": [1494, 1600], "input_on": [1494, 1600], "output_ratio": [1495, 1496, 1649, 1650, 2045], "_random_sampl": [1495, 1496, 1649, 1650, 2045], "ben": [1495, 1496, 1649, 1650], "graham": [1495, 1496, 1649, 1650], "oh": [1495, 1496, 1649, 1650], "ow": [1495, 1496, 1649, 1650], "_ratio": [1495, 1496, 1650], "_h": 1495, "13x12": [1495, 1649], "kt": [1496, 1623, 1631, 1634, 1650, 1681], "ot": [1496, 1650], "13x12x11": [1496, 1650], "044715": [1497, 1652], "pack_sequ": [1499, 1518, 1564, 1783, 1785], "bias_ih": [1500, 1519, 1564, 1566], "bias_hh": [1500, 1519, 1564, 1566], "homoscedast": [1501, 1651], "heteroscedast": [1501, 1651], "nix": 1501, "weigend": 1501, "1994": 1501, "icnn": 1501, "94": 1501, "orlando": 1501, "fl": 1501, "usa": [1501, 2119], "374138": 1501, "instancenorm": [1502, 2106], "shrinkag": [1503, 1586, 1657, 1715], "mobilenetv3": [1505, 1659], "_val": 1506, "dissimilar": 1507, "l1loss": [1508, 1580, 1667], "outlier": [1508, 1580, 2104, 2105], "huber": [1508, 1580, 1663], "smoothl1loss": [1508, 1663, 1710], "insensit": 1509, "unused_argument1": 1509, "unused_argument2": 1509, "ingredi": [1510, 1511, 1512], "styliz": [1510, 1511, 1512], "rgb": [1511, 1512, 2119], "log_target": [1513, 1666, 2045], "kl": [1513, 1666, 2043], "summaris": 1513, "loss_pointwis": 1513, "batchmean": [1513, 1666], "kl_loss": 1513, "mae": 1514, "proj_siz": [1518, 1565], "f_t": [1518, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "hf": [1518, 1519], "g_t": [1518, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "ig": [1518, 1519], "hg": [1518, 1519], "o_t": 1518, "ho": [1518, 1519], "c_t": [1518, 1805], "forget": [1518, 2046, 2047], "1402": 1518, "c_0": [1518, 1519, 1805], "c_n": 1518, "w_ii": 1518, "w_if": 1518, "w_ig": 1518, "w_io": 1518, "w_hi": 1518, "w_hf": 1518, "w_hg": 1518, "w_ho": 1518, "b_ii": 1518, "b_if": 1518, "b_ig": 1518, "b_io": 1518, "b_hi": 1518, "b_hf": 1518, "b_hg": 1518, "b_ho": 1518, "weight_hr_l": 1518, "_revers": 1518, "h_1": 1519, "c_1": 1519, "time_step": 1519, "_shape": [1520, 1563, 1737], "sentence_length": 1520, "lazymodulemixin": [1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533], "cls_to_becom": [1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1742], "convtranspose1d": [1527, 1632, 1995, 2106], "convtranspose3d": [1529, 1634, 1747, 1995, 2106], "instancenorm1d": [1530, 1664, 2106], "instancenorm2d": [1531, 1664, 2106], "instancenorm3d": [1532, 1664, 2106], "uninitializedparamet": [1533, 1728, 2043], "lrn": 1536, "signal_2d": 1536, "signal_4d": 1536, "output_2d": 1536, "output_4d": 1536, "x_j": [1538, 1582, 1584, 1712, 1937, 2086, 2115], "80827": [1544, 1545, 1546], "unpool": [1544, 1545, 1546], "maxpool3d": [1546, 1681, 1684, 1995, 2106], "unpooled_output": 1546, "t_destin": 1548, "lrelu": [1549, 2089], "hing": [1551, 1553], "sum_i": [1552, 1553, 1581], "nelement": [1552, 1581], "jointli": 1554, "multihead": [1554, 1594], "concat": [1554, 2045, 2084, 2100], "head_1": 1554, "head_h": 1554, "head_i": 1554, "qw_i": 1554, "kw_i": 1554, "vw_i": 1554, "nestedtensor": [1554, 1596, 2067], "multihead_attn": 1554, "e_q": 1554, "e_k": 1554, "e_v": 1554, "_head": [1554, 1592], "merge_mask": 1554, "mask_typ": 1554, "merged_mask": 1554, "nll": 1555, "num_paramet": 1556, "nchannel": 1556, "decai": [1556, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 1833, 1836, 1837, 1840, 1841, 1843, 1914, 2101], "legitim": [1556, 1654, 2082], "vert_p": 1557, "upscale_factor": [1560, 1696, 2045], "upscal": 1560, "video": [1560, 1561, 2066, 2119, 2134], "shi": [1560, 1561], "2016": [1560, 1561, 1598], "_factor": [1560, 1561, 1601, 1602, 1603], "pixel_shuffl": [1560, 2045, 2100, 2106], "downscale_factor": [1561, 1697, 2045], "pixelshuffl": [1561, 1696, 1697, 2106], "downscal": 1561, "pixel_unshuffl": [1561, 2045, 2100, 2106], "log_input": [1562, 1698, 2045], "poisson": [1562, 1698, 1914, 2043, 2045, 2100], "stirl": [1562, 1698], "rm": [1563, 1597, 1598, 1737, 1805], "rms_norm": [1563, 1737, 2045, 2100], "hh": [1564, 1566], "h_t_minus_1": 1564, "flatten_paramet": 1565, "3333333333333333": [1567, 1829, 1836, 2045], "leaki": [1567, 1704, 2073], "rectifi": [1567, 1568, 1700, 2073], "empir": 1567, "crelu": 1568, "1603": 1568, "05201": 1568, "6732632423543772848170429916717": [1576, 1707], "0507009873554804934193349852946": [1576, 1707], "kaiming_norm": 1576, "kaiming_normal_": [1576, 2043, 2049, 2073], "initialis": 1576, "calculate_gain": [1576, 2043, 2049, 2073], "cascad": 1577, "relu2": [1577, 1728], "swish": [1578, 1709], "coin": [1578, 1709], "cnn": [1580, 2104], "ross": 1580, "girshick": 1580, "quadrat": [1580, 2083], "huberloss": [1580, 1663], "w_j": 1583, "soft": [1586, 1656, 1715, 2062], "softshrinkag": 1586, "convert_sync_batchnorm": 1588, "r1": 1588, "sync_bn_network": 1588, "ddp_sync_bn_network": 1588, "sync_bn_modul": 1588, "d_model": [1592, 1593, 1594, 1595, 1596], "nhead": [1592, 1593, 1594, 1595, 1596], "num_encoder_lay": 1592, "num_decoder_lay": 1592, "dim_feedforward": [1592, 1594, 1596], "custom_encod": 1592, "custom_decod": 1592, "layer_norm_ep": [1592, 1594, 1596], "norm_first": [1592, 1594, 1596], "ashish": [1592, 1594, 1596], "vaswani": [1592, 1594, 1596], "noam": [1592, 1594, 1596, 1805], "shazeer": [1592, 1594, 1596, 1805], "niki": [1592, 1594, 1596], "parmar": [1592, 1594, 1596], "jakob": [1592, 1594, 1596], "uszkoreit": [1592, 1594, 1596], "llion": [1592, 1594, 1596], "jone": [1592, 1594, 1596], "aidan": [1592, 1594, 1596], "gomez": [1592, 1594, 1596], "lukasz": [1592, 1594, 1596], "illia": [1592, 1594, 1596], "polosukhin": [1592, 1594, 1596], "6000": [1592, 1594, 1596, 1601, 1861, 1908, 1911], "6010": [1592, 1594, 1596], "feedforward": [1592, 1594, 1596, 2073], "transformer_model": 1592, "word_language_model": 1592, "src_mask": [1592, 1596], "tgt_mask": [1592, 1593, 1594], "memory_mask": [1592, 1593, 1594], "src_key_padding_mask": [1592, 1595, 1596], "tgt_key_padding_mask": [1592, 1593, 1594], "memory_key_padding_mask": [1592, 1593, 1594], "src_is_caus": 1592, "tgt_is_caus": [1592, 1593, 1594], "memory_is_caus": [1592, 1593, 1594], "_mask": [1592, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777], "_key_padding_mask": 1592, "generate_square_subsequent_mask": 1592, "sz": 1592, "decoder_lay": [1593, 1594], "transformerdecoderlay": 1593, "transformer_decod": 1593, "encoder_lay": [1595, 1596], "enable_nested_tensor": 1595, "mask_check": 1595, "bert": [1595, 2138], "1810": 1595, "04805": 1595, "transformerencoderlay": 1595, "transformer_encod": 1595, "triplet": [1597, 1598, 1722, 1723], "x3": 1597, "balnta": [1597, 1598], "riba": [1597, 1598], "a_i": [1597, 1598, 1916], "p_i": [1597, 1598], "rvert_p": [1597, 1691], "tripletmarginwithdistanceloss": [1597, 1723], "triplet_loss": [1597, 1598], "distance_funct": [1598, 1723], "l_i": 1598, "tripletmarginloss": [1598, 1722], "l_p": [1598, 1691], "pairwisedist": [1598, 1694], "penal": [1598, 2089, 2101], "distant": 1598, "anchor_id": 1598, "positive_id": 1598, "negative_id": 1598, "l_infin": 1598, "bmva": 1598, "bmvc": 1598, "paper119": 1598, "unflattened_s": 1599, "namedtensor": 1599, "namedshap": 1599, "u_1": 1599, "u_n": 1599, "u_i": 1599, "im2col": [1600, 2045, 2100], "2x3": 1600, "3x4": 1600, "inp_unf": 1600, "out_unf": 1600, "recompute_scale_factor": [1601, 1665], "bicub": [1601, 1654, 1665, 1725, 1995], "trilinear": [1601, 1654, 1665, 1725, 1995], "input_3x3": 1601, "4375": 1601, "8125": 1601, "9375": 1601, "2400": [1601, 1975], "1200": [1601, 1886, 2078], "8800": 1601, "4400": [1601, 1975], "7200": 1601, "0400": 1601, "2800": [1601, 1908], "3600": 1601, "5200": 1601, "6400": 1601, "1678": 1605, "4418": 1605, "9466": [1605, 2115], "9604": 1605, "4219": 1605, "5241": 1605, "9162": 1605, "5436": [1605, 1975], "6446": 1605, "sdpa_kernel": [1607, 1706], "flash_attent": [1607, 1612, 1706], "seq_len_q": 1608, "seq_len_kv": 1608, "causalvari": 1608, "constru": 1608, "causal_upper_left": 1608, "causal_lower_right": 1608, "bsz": 1608, "seqlen_q": 1608, "seqlen_kv": 1608, "head_dim": 1608, "attn_bia": [1608, 1706], "upper_left": [1609, 1611], "lower_right": [1609, 1610], "diagonal_offset": [1609, 1610], "causalbia": [1610, 1611, 1706], "sdpbackend": [1612, 1706], "adaptiveavgpool1d": [1613, 2106], "tripl": [1615, 1618], "adaptivemaxpool1d": 1616, "adaptivemaxpool2d": [1617, 1995], "adaptivemaxpool3d": 1618, "avgpool1d": [1621, 2106], "st": [1623, 1631, 1634, 1681, 2145], "avgpool3d": [1623, 1995, 2106], "iT": [1623, 1631, 1634], "padt": [1623, 1631, 1634], "score": [1627, 1706, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774, 2043, 2071], "dt": [1631, 1634, 2115, 2145], "out_padw": [1632, 1633, 1634], "out_padh": [1633, 1634], "out_padt": 1634, "cosineembeddingloss": 1635, "ctcloss": [1638, 1995], "charact": [1638, 1905, 2044, 2047, 2066, 2109], "elu": [1644, 2045, 2099, 2100, 2106], "embedding_matrix": [1645, 1646], "8490": 1645, "9625": 1645, "6753": 1645, "7761": 1645, "6108": 1645, "6246": 1645, "9751": 1645, "3618": 1645, "4161": [1645, 2114], "2419": 1645, "7383": 1645, "0237": 1645, "7794": 1645, "0528": 1645, "3385": 1645, "8612": 1645, "1867": 1645, "5384": 1645, "8720": 1645, "6262": 1645, "7471": 1645, "embeddingbag": [1646, 1995, 2104, 2106, 2120], "3397": 1646, "5545": 1646, "5893": 1646, "4386": 1646, "5882": 1646, "featurealphadropout": 1647, "gaussiannllloss": 1651, "border": 1654, "affine_grid": [1654, 2045], "extrema": 1654, "pil": [1654, 1665], "overshoot": [1654, 1665, 1725], "gumbel": [1656, 2043], "y_hard": 1656, "y_soft": 1656, "hardtanh": [1661, 2045, 2057, 2100, 2106, 2140], "hingeembeddingloss": 1662, "use_input_stat": [1664, 2045], "antialia": 1665, "anti": 1665, "pillow": [1665, 2119], "inter_nearest": 1665, "104157": 1665, "kldivloss": 1666, "batchsiz": [1666, 1940, 1941, 1942, 1944, 1945, 2114], "leaky_relu": [1670, 2045, 2073, 2100, 2106, 2140], "localresponsenorm": 1672, "_stacklevel": [1673, 1712, 1713, 2045, 2051], "lppool1d": 1675, "lppool2d": 1676, "lppool3d": 1677, "marginrankingloss": 1678, "max_unpool1d": [1679, 2045], "multimarginloss": 1687, "multilabelmarginloss": 1688, "multilabelsoftmarginloss": 1689, "n_0": 1691, "n_": 1691, "n_k": 1691, "everywher": [1692, 1954, 2101], "circularpad2d": 1693, "constantpad2d": 1693, "reflectionpad2d": [1693, 1995], "replicationpad2d": [1693, 1995], "t4d": 1693, "p1d": 1693, "p2d": 1693, "p3d": 1693, "pixelunshuffl": [1697, 2106], "poissonnllloss": 1698, "rrelu": [1705, 2045, 2100], "dropout_p": [1706, 2045], "enable_gqa": [1706, 2045, 2071], "temp_mask": 1706, "mymodel": [1706, 2047, 2074, 2091, 2097], "gqa": [1706, 2071], "number_of_heads_queri": 1706, "number_of_heads_key_valu": 1706, "number_of_heads_kei": 1706, "number_of_heads_valu": 1706, "hq": [1706, 2071], "ev": [1706, 2071], "legend": [1706, 2071], "llama3": 1706, "softmarginloss": 1711, "module_kwarg": 1721, "upsample_trilinear": 1726, "fo": 1726, "spatia": 1727, "mixin": [1728, 2043], "dry": 1728, "lazymlp": 1728, "lazylinear": 1728, "lazy_mlp": 1728, "8832e": 1728, "5636e": 1728, "1598e": 1728, "5637e": 1728, "8788e": 1728, "0042e": 1728, "0019": 1728, "lazymodul": 1728, "full_mlp": 1728, "3837": [1728, 1855], "0907": 1728, "6708": 1728, "5223": 1728, "9028": 1728, "2851": 1728, "6813": 1728, "5766": 1728, "8678": 1728, "1320": 1728, "2938": 1728, "0679": [1728, 1985], "2793": [1728, 1795], "1088": 1728, "1795": 1728, "2301": 1728, "2807": 1728, "2479": 1728, "1091": 1728, "has_uninitialized_param": 1728, "initialize_paramet": 1728, "check_reduct": 1738, "delay_all_reduce_named_param": 1738, "param_to_hook_all_reduc": 1738, "optimizer_param": 1738, "loss_func": [1738, 2109], "consume_prefix_in_state_dict_if_pres": 1738, "nccl2": 1738, "dictat": [1738, 2047], "mebibyt": 1738, "mib": 1738, "detach_": [1738, 2045, 2065, 2106, 2114], "ddp_logging_data": 1738, "can_set_static_graph": 1738, "model_ddp": 1738, "_get_ddp_logging_data": 1738, "divide_by_initial_world_s": 1738, "caught": [1738, 2064], "syncbatchnorm": 1738, "deplet": 1738, "pariti": 1738, "another_input": 1738, "predivid": 1738, "noop": [1738, 2071], "encode_and_decod": 1738, "encoded_tensor": 1738, "decoded_tensor": 1738, "error_if_nonfinit": [1743, 1744], "clip_valu": 1745, "nhwc": [1746, 1747, 2117, 2119], "outweigh": [1746, 1747, 1827, 2145], "channels_last_3d": [1747, 2117], "ndhwc": [1747, 2117], "_convnd": 1748, "conv_w": 1749, "conv_b": 1749, "bn_rm": [1749, 1751], "bn_rv": [1749, 1751], "bn_ep": [1749, 1751], "bn_w": [1749, 1751], "bn_b": [1749, 1751], "linear_w": 1751, "linear_b": 1751, "orthogonal_map": 1753, "use_trivi": 1753, "qq": 1753, "matrix_exp": [1753, 2045, 2100], "caylei": 1753, "thin": [1753, 1857], "manifold": 1753, "register_parametr": [1753, 1754, 1756, 1757, 1788, 2068], "orth_linear": 1753, "parametrizedlinear": [1753, 1754, 1755], "parametrizationlist": [1753, 1754, 1755, 1759], "_orthogon": 1753, "9332e": 1753, "n_power_iter": [1754, 1788], "sn": [1754, 1788], "discrimin": [1754, 1788], "adversari": [1754, 1788], "lipschitz": 1754, "reimplement": [1754, 1788, 2133], "_spectralnorm": 1754, "convtranspos": [1754, 1788], "snm": 1754, "0081": 1754, "amaxbackward0": 1754, "decoupl": [1755, 1791, 1805, 1808, 1811, 1823], "1602": [1755, 1791], "07868": [1755, 1791], "_weightnorm": 1755, "original0": [1755, 1756, 1759, 1791], "original1": [1755, 1756, 1759, 1791], "tensor_nam": [1756, 1758, 1759, 1760], "right_invers": [1756, 1759], "out_rnn": 1757, "rnn_cell": 1757, "inbuilt": 1759, "unparametr": 1759, "rankon": 1759, "surject": 1759, "s0_sqrt": 1759, "linear_rank_on": 1759, "matrix_rank": 1759, "leave_parametr": 1760, "unparametris": 1760, "skeleton": 1761, "compute_mask": [1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "importance_scor": [1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1773, 1774], "apply_mask": [1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "pruned_tensor": [1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "default_mask": [1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768], "_orig": [1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777], "undon": [1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1777], "unprun": [1764, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776], "basepruningmethod": [1766, 1772], "add_pruning_method": 1766, "pruning_typ": [1766, 1770], "unstructur": [1766, 1770], "ravel": [1766, 2045, 2100], "nonmask": 1766, "bias_mask": [1769, 1771], "pruning_method": 1770, "parameters_to_prun": 1770, "l1unstructur": 1770, "parameters_to_vector": 1770, "forward_pre_hook": [1772, 2089], "random_unstructur": [1772, 1777], "odict_kei": 1773, "weight_orig": 1773, "weight_mask": [1773, 1776], "columns_prun": 1775, "t_modul": [1778, 1779, 1788, 1791], "weight_norm": 1779, "sorted_indic": [1780, 1782, 1783, 1785], "unsorted_indic": [1780, 1782, 1783, 1785], "abc": [1780, 2047], "axbc": 1780, "conform": [1780, 2089], "is_cuda": [1780, 2065, 2100, 2116], "enforce_sort": [1781, 1782, 1783], "unsort": [1781, 1782, 1893], "shortest": 1781, "uncondition": [1781, 2042, 2081, 2146], "pad_sequ": [1782, 1786, 2045, 2100], "padding_valu": [1783, 1784, 2045], "total_length": [1783, 2083], "seq_unpack": 1783, "lens_unpack": 1783, "padding_sid": [1784, 2045], "packed_sequ": 1785, "unpacked_sequ": 1785, "padded_sequ": 1786, "unpad": 1786, "unstack": 1786, "as_tensor": [1786, 1973, 2045, 2067, 2081, 2100, 2119, 2120, 2121], "unpadded_sequ": 1786, "module_cl": [1787, 2109], "5846e": 1787, "29": [1787, 1921, 2099], "8307e": 1787, "5250e": 1787, "1210e": 1787, "4677e": 1787, "5915e": 1787, "4013e": 1787, "weight_u": 1788, "parameters_and_buff": 1789, "reparamater": 1789, "weight_g": [1791, 2045], "weight_v": 1791, "modern": [1791, 2092, 2129, 2136], "bother": 1791, "102999": 1791, "remove_parametr": 1791, "as_tupl": [1793, 2010, 2071], "complexfloat": [1794, 1800], "0425": 1795, "7969": 1795, "2925": 1795, "7229": 1795, "2134": 1795, "0505": 1795, "1408": 1795, "0563": 1795, "0566": 1795, "0732": [1795, 1975], "0687": 1795, "1177": 1795, "2303": [1795, 1951], "1552": 1795, "6148": 1795, "6535": 1795, "8318": 1795, "3987": 1795, "9544": [1795, 1865], "6048": 1795, "7909": 1795, "120": [1797, 2119], "from_valu": 1800, "onnx_typ": 1800, "tensorprotodatatyp": 1800, "torch_c_value_with_type_float": 1800, "from_dtyp": 1800, "jit_type_bas": 1800, "safer": [1800, 2054], "onnxexportererror": [1800, 2097, 2099], "from_onnx_typ": 1800, "_c_onnx": [1800, 2099], "_onnx": 1800, "symbolicvalueerror": 1800, "onnx_compat": 1800, "scalar_nam": 1800, "complexhalf": 1800, "complexdoubl": 1800, "float8e5m2": 1800, "float8e4m3fn": 1800, "float8e5m2fnuz": 1800, "float8e4m3fnuz": 1800, "torch_nam": 1800, "int8_t": 1800, "int16_t": 1800, "float8_e5m2": [1800, 2116, 2120], "float8_e4m3fn": [1800, 2116, 2120], "float8_e5m2fnuz": [1800, 2116], "float8_e4m3fnuz": [1800, 2116], "verif": [1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 2099], "params_dict": 1801, "export_opt": [1801, 2097], "_excluded_node_kind": 1801, "frozenset": [1801, 2047], "scalarimplicit": [1801, 2100], "prim": [1801, 2044, 2099, 2100], "listconstruct": [1801, 2044], "all_mismatch_leaf_graph_info": 1801, "essential_node_count": 1801, "subgraph": [1801, 2075, 2080, 2099, 2102, 2125, 2134, 2135, 2145], "essential_node_kind": 1801, "export_repro": 1801, "repro_dir": 1801, "repro": [1801, 2136, 2145], "test_": 1801, "test_data_set_0": 1801, "input_0": [1801, 2099], "pb": [1801, 2099], "input_1": [1801, 2099], "output_0": 1801, "output_1": 1801, "find_mismatch": [1801, 2099], "exhibit": [1801, 2099, 2132, 2145], "verificationopt": [1801, 2099], "find_partit": 1801, "has_mismatch": 1801, "pretty_print_mismatch": 1801, "pretty_print_tre": 1801, "graph_info": [1801, 2099], "__2": [1801, 2099], "__1": [1801, 2099], "__3": [1801, 2099], "110": [1801, 2099], "verify_export": 1801, "onnx_graph": 1801, "onnx_out": 1801, "pt_out": 1801, "ignore_non": 1802, "check_shap": 1802, "check_dtyp": [1802, 2121], "onnxbackend": 1802, "onnx_runtime_cpu": 1802, "remained_onnx_input_idx": 1802, "acceptable_error_percentag": 1802, "percentag": [1802, 1839, 1914, 2071, 2104], "weight_decai": [1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827, 2089, 2101], "1e6": 1803, "tensorlist": [1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "prohibit": [1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826, 2078, 2094], "impair": [1803, 1804, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "ungraph": [1803, 1804, 1807, 1808, 1809, 1811, 1823, 1824, 1825], "removeablehandl": [1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827], "register_step_post_hook": [1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827], "register_step_pre_hook": [1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1823, 1824, 1825, 1826, 1827], "new_arg": [1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1819, 1823, 1824, 1825, 1826, 1827], "new_kwarg": [1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1819, 1823, 1824, 1825, 1826, 1827], "momentum_buff": [1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1820, 1823, 1824, 1825, 1826, 1827], "reevalu": [1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1821, 1823, 1824, 1825, 1826, 1827, 2101], "rho": 1804, "110mm": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "4pt": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "textbf": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "theta_0": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "v_0": [1804, 1807, 1808, 1811, 1823, 1824], "leftarrow": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "u_0": [1804, 1809], "hspace": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "5mm": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1824, 1825, 1826], "nabla_": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "theta_": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "10mm": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1824, 1825, 1826], "v_t": [1804, 1807, 1808, 1811, 1823, 1824], "v_": [1804, 1807, 1808, 1811, 1823, 1824, 1826], "2_t": [1804, 1805, 1806, 1807, 1808, 1811, 1823, 1824], "21mm": 1804, "u_t": [1804, 1805, 1809], "theta_t": [1804, 1805, 1806, 1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "oscil": 1804, "beta2_decai": 1805, "beta_2": [1805, 1807, 1808, 1809, 1811, 1823], "15mm": [1805, 1811, 1825, 1826], "epsilon_1": 1805, "epsilon_2": 1805, "textit": [1805, 1807, 1808, 1811, 1823, 1826], "r_0": 1805, "23mm": 1805, "col": [1805, 1984, 1986, 2045, 2071], "widehat": [1805, 1807, 1808, 1811, 1823], "_0": [1805, 1824, 2082, 2102, 2147], "rho_t": [1805, 1823], "alpha_t": 1805, "1_m": 1805, "top_n": 1805, "sublinear": 1805, "mitchel": 1805, "stern": 1805, "beta2": 1805, "standardli": 1805, "epsilon1": 1805, "epsilon2": 1805, "presum": 1805, "1_n": 1805, "top_m": 1805, "alon": [1805, 1995, 2046, 2102], "lr_decai": 1806, "initial_accumulator_valu": 1806, "12mm": [1806, 1823], "_sum_0": 1806, "tild": [1806, 1824], "_sum_t": 1806, "_sum_": 1806, "subgradi": 1806, "999": [1807, 1808, 1809, 1811, 1823, 1827, 2094, 2101], "amsgrad": [1807, 1808], "beta_1": [1807, 1808, 1809, 1811, 1823], "13mm": [1807, 1808, 1809, 1811, 1823, 1824, 1825, 1826], "m_0": [1807, 1808, 1809, 1811, 1823], "m_t": [1807, 1808, 1809, 1811, 1823], "m_": [1807, 1808, 1809, 1811, 1823, 2114], "002": [1809, 1811], "t_1": 1809, "2e": [1809, 1811], "max_it": 1810, "max_ev": 1810, "tolerance_grad": 1810, "tolerance_chang": 1810, "history_s": 1810, "line_search_fn": 1810, "bfg": 1810, "minfunc": 1810, "intens": [1810, 2092], "param_byt": 1810, "strong_wolf": 1810, "momentum_decai": 1811, "004": 1811, "decoupled_weight_decai": [1811, 1823], "gamma_t": 1811, "psi": [1811, 2115], "_decai": [1811, 1823], "mu_t": 1811, "96": 1811, "mu_": 1811, "11mm": 1811, "incorpor": [1811, 1913, 2104], "nesterov": [1811, 1826], "4e": 1811, "nadamw": 1811, "weightdecai": 1823, "18mm": 1823, "rho_": 1823, "6mm": 1823, "t_2": 1823, "l_t": 1823, "radamw": 1823, "av": 1824, "8mm": 1824, "3mm": 1824, "lectur": 1824, "hinton": 1824, "step_siz": [1825, 1843], "resili": [1825, 2092], "eta_": [1825, 1830, 1831], "etaplu": 1825, "etaminu": 1825, "gamma_": [1825, 2115], "0_": 1825, "eta_0": 1825, "i_": [1825, 1975], "eta_t": [1825, 1830, 1831], "dampen": 1826, "sutskev": 1826, "veloc": 1826, "conflat": 1827, "is_spars": [1827, 2065, 2100, 2114, 2116], "maskedtensor": [1827, 2114], "rig": 1827, "insist": 1827, "lr_schedul": [1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 2101], "chainabl": [1828, 1834, 1839, 1841, 1842], "081": 1828, "729": [1828, 1842], "6561": [1828, 2005], "59049": 1828, "scheduler1": [1828, 1842, 2101], "constantlr": [1828, 1842], "total_it": [1828, 1829, 1836, 1840, 1842], "scheduler2": [1828, 1842, 2101], "exponentiallr": [1828, 1842, 2101], "get_last_lr": [1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843], "get_lr": [1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843], "print_lr": [1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843], "is_verbos": [1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843], "__dict__": [1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843], "last_epoch": [1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843], "mileston": [1829, 1836, 1837, 1842, 2101], "simultan": [1829, 1830, 1836, 1837, 1843, 2075, 2109], "025": [1829, 1836], "t_max": [1830, 2101], "eta_min": [1830, 1831], "anneal": [1830, 1831, 1839, 2101], "cur": [1830, 1831], "sgdr": [1830, 1831], "2k": 1830, "sole": 1830, "t_mult": 1831, "base_lr": [1832, 1839], "max_lr": [1832, 1839], "step_size_up": 1832, "step_size_down": 1832, "scale_fn": 1832, "scale_mod": 1832, "cycle_momentum": [1832, 1839], "base_momentum": [1832, 1839], "max_momentum": [1832, 1839], "cyclic": 1832, "forth": [1832, 2001, 2042, 2103, 2130], "amplitud": [1832, 1839], "triangular2": 1832, "exp_rang": 1832, "bckenstler": 1832, "train_batch": [1832, 1839], "lr_lambda": [1835, 1838], "lambda1": 1835, "lambda2": 1835, "start_factor": 1836, "end_factor": 1836, "03125": 1836, "0375": 1836, "04375": 1836, "005": [1837, 1843], "lmbda": 1838, "total_step": 1839, "steps_per_epoch": 1839, "pct_start": 1839, "anneal_strategi": [1839, 2101], "div_factor": 1839, "final_div_factor": 1839, "three_phas": 1839, "1cycl": 1839, "fastai": 1839, "unpublish": 1839, "initial_lr": 1839, "min_lr": [1839, 1841], "1e4": 1839, "annihil": 1839, "00075": 1840, "00050": 1840, "00025": 1840, "patienc": 1841, "threshold_mod": 1841, "cooldown": 1841, "stagnat": 1841, "new_lr": 1841, "baselin": 1841, "intoler": 1841, "optimum": 1841, "dynamic_threshold": 1841, "val_loss": 1841, "81": 1842, "mn": 1845, "pca": [1847, 2114], "overestim": [1847, 1959], "nathan": [1847, 1959], "halko": [1847, 1959], "gunnar": [1847, 1959], "martinsson": [1847, 1959], "tropp": [1847, 1959], "probabilist": [1847, 1959], "0909": [1847, 1959], "4061": [1847, 1959], "na": [1847, 1959], "cmath": [1851, 2045], "4142j": 1851, "4331": 1854, "2475": [1854, 1957], "6834": 1854, "2791": 1854, "1875": 1854, "5561": 1854, "4670": 1854, "8020": 1855, "5428": 1855, "5854": 1855, "5261": [1855, 1958], "1857": 1855, "2498": 1855, "1646": [1855, 2078], "0705": [1855, 2081], "0629": 1855, "2962": 1855, "0821": [1855, 1914], "1831": 1855, "type1": [1856, 2045], "type2": [1856, 2045], "2117": 1858, "9765": 1858, "1707": 1858, "4884": 1858, "5661": 1858, "5795": 1858, "5280": 1858, "9206": 1858, "quantization_schem": [1859, 1860, 1861, 1862, 1863], "int_repr": [1859, 1860, 2045, 2100], "nchw": [1861, 2119], "qx": [1861, 1862, 1863], "00001": 1861, "max_pool1d": [1862, 2045, 2100, 2106], "max_pool2d": [1863, 2045, 2097, 2100, 2106], "quasirandom": 1864, "scrambl": 1864, "sobol": 1864, "quasi": 1864, "21201": 1864, "web": 1864, "unsw": 1864, "au": [1864, 2102], "fkuo": 1864, "art": 1864, "owen": 1864, "niederreit": 1864, "xing": 1864, "466": 1864, "489": 1864, "decemb": 1864, "1998": 1864, "zh": 1864, "vychisl": 1864, "phy": 1864, "784": 1864, "802": 1864, "1967": 1864, "soboleng": 1864, "draw_base2": 1864, "base2": 1864, "fast_forward": 1864, "142": 1865, "283": 1865, "570": 1865, "359": 1865, "9894": 1865, "2503": 1866, "3525": 1866, "5673": 1866, "8237": 1866, "5781": 1866, "6879": 1866, "3816": 1866, "7249": 1866, "0998": 1866, "im": [1870, 2075], "1436": 1870, "9966": 1870, "3426": 1870, "6366": 1870, "5954": 1870, "8929": 1870, "0923": 1870, "1719": 1870, "4709": 1870, "1996": 1870, "4595": 1876, "4314": 1876, "n2": 1879, "n3": 1879, "negat": [1882, 1967, 2047], "is_neg": [1882, 2045, 2100], "equidist": 1886, "inexact": 1886, "1234567": 1886, "1230": 1886, "vstack": [1887, 2045, 2100, 2114], "0370": 1888, "2970": 1888, "5420": 1888, "9105": 1888, "8351": 1888, "pickle_protocol": [1889, 2102], "default_protocol": 1889, "_use_new_zipfile_seri": [1889, 2094], "zipfil": [1889, 2102], "sorted_sequ": [1893, 2045], "sorter": [1893, 2045], "sorted_sequence_1d": 1893, "select_copi": [1895, 2045, 2100], "92701": [1897, 2117], "get_default_devic": 1897, "henry2019": 1901, "briefli": [1901, 2084], "nine": 1901, "fma": 1901, "10x": [1901, 1959], "1904": 1901, "06376": 1901, "denorm": [1902, 2092], "sse3": 1902, "aarch64": 1902, "323": 1902, "88131e": 1902, "324": 1902, "interop": 1903, "intraop": 1904, "edgeitem": 1905, "linewidth": 1905, "sci_mod": 1905, "shamelessli": 1905, "repr": [1905, 2047], "sane": 1905, "_tensor_str": 1905, "_formatt": 1905, "12345": 1905, "1235": 1905, "excess": [1907, 2136], "24j": 1908, "8000j": 1908, "9600j": 1908, "4472": [1908, 2089], "8944j": 1908, "expit": [1909, 2115], "2222": [1911, 1973], "4444": 1911, "8889": 1911, "4901e": 1912, "4000e": 1912, "0077e": 1912, "4923e": 1912, "waveform": [1913, 1914, 1915], "1564": 1913, "4540": 1913, "8910": 1913, "9877": 1913, "1423": [1913, 1936], "4154": 1913, "8413": [1913, 2115], "0302": 1914, "2231": 1914, "6065": 1914, "5400e": 1914, "3546e": 1914, "4788e": 1914, "8316e": 1914, "02": [1914, 1915, 1920], "3534e": 1914, "0065e": [1915, 1920], "1875e": [1915, 1920], "3937e": [1915, 1920], "2465e": [1915, 1920], "8250e": [1915, 1920], "9858e": [1915, 1920], "1365e": [1915, 1920], "8659e": [1915, 1920], "4658e": [1915, 1920], "3941e": [1915, 1920], "5400": 1916, "3376": 1916, "4200": 1916, "9136": 1916, "wit": [1916, 2044], "0955": [1916, 1917, 1919], "3455": [1916, 1917, 1919], "6545": [1916, 1917, 1919], "9045": [1916, 1917, 1919], "0800": [1917, 1918], "1876": [1917, 1918], "4601": [1917, 1918], "7700": [1917, 1918], "9723": [1917, 1918], "1679": 1918, "3979": 1918, "6821": 1918, "9121": 1918, "1170": 1919, "9698": 1919, "36358": 1921, "z_n": [1921, 2075], "48917": 1921, "2z_n": 1921, "13659": 1921, "3z_n": 1921, "01064": 1921, "4z_n": 1921, "u03c0": 1921, "sidelob": 1921, "transact": 1921, "acoust": 1921, "speech": 1921, "84": 1921, "91": 1921, "feb": 1921, "1981": 1921, "tassp": 1921, "1163506": 1921, "heinzel": 1921, "spectrum": [1921, 2092, 2148], "dft": 1921, "februari": 1921, "holomet": 1921, "fnal": 1921, "gov": 1921, "gh_fft": 1921, "nutal": 1921, "general_ham": 1921, "6280e": 1921, "2698e": 1921, "1052e": 1921, "9826e": 1921, "5461": [1923, 2089], "1347": 1923, "7266": 1923, "2746": 1923, "5194": 1923, "1343": 1923, "4032": 1923, "2711": 1923, "5380": 1925, "8632": 1925, "1265": 1925, "9399": 1925, "5644": 1925, "9744": 1925, "1268": 1925, "2162": 1930, "6719": 1930, "3332": 1930, "5793": [1930, 2089], "0061": 1930, "6058": 1930, "9497": 1930, "5071": 1930, "3343": 1930, "9553": 1930, "0960": 1930, "derivati": [1931, 1935], "to_sparse_coo": 1932, "sparsr": 1933, "run_my_model": 1933, "prev_checks_en": 1933, "check_invari": [1933, 1940, 1941, 1942, 1943, 1944, 1945, 2114], "sparse_csr_tensor": [1933, 2045, 2100, 2114], "z_": [1935, 2075, 2115], "bigoplus_": 1935, "kj": 1935, "bigoplu": 1935, "sparseaddmmbackward0": 1935, "y1": [1935, 2097, 2130], "sparsemmreduceimplbackward0": 1935, "y2": [1935, 2097, 2130], "sparsiti": [1936, 2043, 2054, 2071, 2073], "spy": 1936, "2847": 1936, "7805": 1936, "1900": [1936, 2093], "to_dens": [1936, 1938, 2045, 2071, 2100, 2114], "3903": 1936, "x_k": 1937, "6438": 1939, "6467": 1939, "3411": 1939, "0918": 1939, "5348": 1939, "0634": 1939, "0494": 1939, "0646": 1939, "1844": 1939, "1276": 1939, "1874": 1939, "6334": 1939, "9682": 1939, "5340": 1939, "7483": 1939, "4512": 1939, "4073": 1939, "8901": 1939, "3183": 1939, "7539": 1939, "6596": 1939, "ncolblock": [1940, 2114], "array_list": [1940, 1941, 1942, 1944, 1945], "nrow": [1940, 1941, 1942, 1944, 1945, 2114], "ncol": [1940, 1941, 1942, 1944, 1945, 2114], "denses": [1940, 1941, 1942, 1944, 1945, 2114], "check_sparse_tensor_invari": [1940, 1941, 1942, 1943, 1944, 1945, 2114], "nrowblock": [1941, 2114], "compressed_indic": [1942, 2045, 2114], "plain_indic": [1942, 2045, 2114], "compressed_dim_s": [1942, 2114], "is_coalesc": [1943, 2045, 2100, 2114], "rdinat": 1943, "prerequisit": [1943, 2080], "coalescion": 1943, "sparsetensor": 1943, "_indic": [1943, 2100, 2114, 2136], "0755": [1947, 1948], "0226": [1947, 1948], "0831": [1947, 1948], "4806": [1947, 1948], "0112": 1947, "2883": 1947, "6933": 1947, "0457": 1948, "0069": 1948, "2310": 1948, "2345": [1951, 1983], "1229": 1951, "1863": 1951, "2959": [1952, 1953, 2002, 2003], "8101": [1952, 1953, 2002, 2003], "5027": [1952, 1953, 2002, 2003], "3270": [1952, 1953, 2002, 2003], "5905": [1952, 1953, 2002, 2003], "6538": [1952, 1953, 2002, 2003, 2089], "3330": [1952, 1953, 2002, 2003], "5596": [1952, 1953, 2002, 2003], "6548": [1952, 1953, 2002, 2003], "1264": [1952, 1953, 2002, 2003], "5080": [1952, 1953, 1958, 2002, 2003, 2089], "6420": [1952, 1953, 2002, 2003], "1992": [1952, 1953, 2002, 2003], "0311": [1952, 2115], "7477": 1952, "2204": 1952, "9087": 1952, "2620": 1953, "0028": [1953, 1979], "0957": 1953, "6038": 1953, "0645": [1953, 2003], "4485": [1953, 2003], "8707": [1953, 2003], "0665": [1953, 2003], "taper": 1954, "librosa": 1954, "omega": 1954, "win": [1954, 2075], "_fft": [1954, 2045], "1133": 1957, "2958": 1957, "5475": 1957, "0569": 1957, "0737": 1957, "3429": 1957, "9138": 1957, "9337": 1957, "6864": [1957, 1983], "1132": 1957, "7892": 1957, "1003": 1957, "5688": 1957, "3637": 1957, "9906": 1957, "5197": 1957, "4598": 1957, "3708": 1957, "6217": 1957, "435": 1957, "1335": 1957, "3135": 1957, "gesdd": 1958, "conquer": 1958, "gesvdjbatch": 1958, "fortran": 1958, "2364": 1958, "7752": 1958, "7201": 1958, "7394": 1958, "0504": 1958, "3371": 1958, "5296": 1958, "3550": 1958, "5569": 1958, "2445": 1958, "1414": 1958, "4027": 1958, "0287": 1958, "5434": 1958, "1946": 1958, "8833": 1958, "3679": 1958, "4296": 1958, "2890": 1958, "6604": 1958, "2717": 1958, "2618": 1958, "4234": 1958, "2481": 1958, "4733": 1958, "3289": [1958, 2094], "0315": 1958, "7806": 1958, "0199": 1958, "8766": 1958, "4809": 1958, "4054": 1958, "7600": 1958, "8611": 1958, "2594": 1958, "4373": 1958, "6531e": 1958, "a_big": 1958, "6503e": 1958, "adequ": 1959, "choosen": 1959, "swapax": [1961, 2045, 2100, 2118], "faithfulli": [1965, 2055, 2132], "1995": 1968, "4608": 1968, "7702": 1968, "4875": 1968, "9158": 1968, "5872": 1968, "6929": 1968, "6932": 1968, "take_along_axi": [1970, 2082], "max_idx": 1970, "sorted_idx": 1970, "2027": 1971, "7687": 1971, "4412": 1971, "3856": 1971, "5930": 1971, "9859": 1971, "4722": 1971, "3366": 1971, "8986": 1972, "7279": 1972, "1745": [1972, 2081], "7156": 1972, "8257": 1972, "2553": 1972, "11111": 1973, "222222": 1973, "3333333": 1973, "1111": 1973, "array_split": 1974, "i_d": 1975, "k_": 1975, "4532": 1975, "4874": 1975, "5018": 1975, "4796": [1975, 2093], "5162": 1975, "5306": 1975, "2922": 1975, "7556": 1975, "2741": 1975, "3161": 1975, "0704": 1975, "0187": 1975, "4079": 1975, "3126": 1975, "8744": 1975, "8223": 1975, "9445": 1975, "4117": 1975, "7780": 1975, "7193": 1975, "4867": 1975, "3204": 1975, "5513": 1975, "4737": [1975, 2006], "2850": 1975, "2573": 1975, "5997": 1975, "sparsebsr": 1979, "sparsecsc": 1979, "sparsebsc": 1979, "9893": 1979, "5809": 1979, "1669": 1979, "7299": 1979, "4942": [1979, 2089], "y_0": 1980, "x_diff": 1980, "y_diff": 1980, "riemann": [1980, 2075, 2086, 2115], "badli": 1982, "cloned_coeffici": 1982, "1527": 1982, "0753": 1982, "7986": 1982, "0210": 1982, "3513": 1982, "5492": 1982, "7403": 1982, "0243": 1982, "7841": 1982, "9046": 1982, "5405": 1982, "9320": 1982, "9270": 1982, "2826": 1982, "lbrace": [1983, 1984, 1985, 1986], "rbrace": [1983, 1984, 1985, 1986], "0813": 1983, "8619": 1983, "7105": 1983, "0935": 1983, "1380": 1983, "3409": [1983, 2093], "2219": 1983, "5653": 1983, "2521": 1983, "2544": 1983, "3461": 1983, "4785": 1983, "4477": 1983, "6049": 1983, "6368": 1983, "8775": 1983, "7145": 1983, "1502": 1983, "2716": 1983, "1243": 1983, "5413": 1983, "3615": 1983, "0614": 1983, "7344": 1983, "3164": 1983, "7648": 1983, "4024": 1983, "0978": 1983, "2309": 1985, "5207": 1985, "0049": 1985, "2072": 1985, "0680": 1985, "6602": 1985, "3480": 1985, "5211": 1985, "4573": 1985, "5876": 1985, "0794": [1985, 2115], "8373": 1985, "6654": 1985, "2604": 1985, "5235": 1985, "2447": 1985, "9556": 1985, "2919": 1985, "1768": 1985, "4333": 1985, "3146": [1985, 2089], "6576": 1985, "0432": 1985, "9348": [1985, 2115], "4410": 1985, "9888": 1985, "3337": 1985, "6556": 1985, "4798": 1985, "5466": 1988, "8008": 1988, "9079": 1988, "unique_consecut": [1991, 2045, 2100], "inverse_indic": [1991, 1992], "a_unique_dim0": 1991, "5678": [1993, 2109], "78": 1993, "put_": [1995, 2045], "index_add": [1995, 2045, 2100], "index_select": [1995, 2045, 2100, 2114, 2140], "fractionalmaxpool2d": 1995, "fractionalmaxpool3d": 1995, "reflectionpad1d": 1995, "reflectionpad3d": 1995, "replicationpad1d": 1995, "replicationpad3d": 1995, "histc": [1995, 2045, 2100], "bincount": [1995, 2045, 2100], "kthvalu": [1995, 2045, 2065, 2100], "avg_pool3d_backward_cuda": 1995, "for_tensor": 1996, "for_modul": 1996, "for_packed_sequ": 1996, "for_storag": 1996, "unsupported_dtyp": 1996, "privateuse1": [1996, 1998, 2103, 2108, 2123], "rename_privateuse1_backend": [1996, 2043], "is_foo": 1996, "frames_to_skip": 1997, "maximum_number_of_fram": 1997, "_register_device_modul": 1998, "backendmodul": 1998, "get_amp_supported_dtyp": 1998, "_is_in_bad_fork": 1998, "bad_fork": 1998, "get_rng_stat": [1998, 2043, 2108], "set_rng_stat": [1998, 2043, 2108], "extend_dispatch": 1998, "pytorch_open_registration_exampl": 1998, "nicer": 1999, "slot": [2000, 2129, 2146], "alexandr": 2001, "theophil": 2001, "0631": 2002, "5590": 2002, "4893": 2002, "8258": 2002, "5926": 2003, "0056": 2003, "3646": 2003, "vecdot": 2004, "mi": [2005, 2006], "6116": 2005, "5772": [2005, 2115], "4606": 2005, "9120": 2005, "0786": 2005, "7497": 2005, "6623": 2005, "5772j": 2005, "9120j": 2005, "7497j": 2005, "6623j": 2005, "3839j": 2006, "2098": 2006, "6699j": 2006, "3470": 2006, "9451j": 2006, "5174": 2006, "3136j": 2006, "6699": 2006, "9451": 2006, "3136": 2006, "vertic": [2008, 2009, 2101, 2119, 2136], "atleast_2d": [2009, 2045, 2100], "3139": 2010, "3898": 2010, "1657": 2010, "0383": 2010, "8785": 2010, "1089": 2010, "_xpudeviceproperti": 2023, "hubconf": 2042, "entrypoint_nam": 2042, "_resnet18": 2042, "smoother": [2042, 2054], "load_state_dict_from_url": [2042, 2058], "2gb": 2042, "relative_path_to_checkpoint": 2042, "pth": [2042, 2058, 2085, 2094], "dirnam": [2042, 2085], "__file__": [2042, 2095, 2102, 2138], "5c106cde": [2042, 2058], "force_reload": 2042, "skip_valid": 2042, "trust_repo": 2042, "repo_own": 2042, "repo_nam": 2042, "ref": [2042, 2114, 2132, 2145], "torchhub": 2042, "github_token": 2042, "mute": 2042, "repo_or_dir": 2042, "resnet50": [2042, 2085, 2119, 2138], "resnet50_weight": [2042, 2085], "imagenet1k_v1": 2042, "download_url_to_fil": 2042, "hash_prefix": 2042, "temporary_fil": 2042, "sha256": [2042, 2058], "s3": [2042, 2058, 2095], "amazonaw": [2042, 2058, 2095], "model_dir": [2042, 2058], "check_hash": [2042, 2058], "hub_dir": [2042, 2058], "get_dir": [2042, 2058], "ext": [2042, 2058], "eight": [2042, 2058], "hash": [2042, 2045, 2047, 2058, 2100], "succinct": 2042, "set_dir": 2042, "path_to_hub_dir": 2042, "torch_hom": 2042, "xdg_cache_hom": [2042, 2078], "reiniti": [2042, 2055], "path_importer_cach": 2042, "subpackag": [2042, 2102], "offend": [2042, 2137], "classifi": [2043, 2047, 2099, 2101, 2104, 2119], "pypi": 2043, "conda": [2043, 2085, 2095], "hip": 2043, "javadoc": 2043, "uninitializedbuff": 2043, "anomali": 2043, "can_device_access_p": 2043, "current_blas_handl": 2043, "device_of": 2043, "get_arch_list": 2043, "get_device_cap": 2043, "get_device_nam": 2043, "get_device_properti": 2043, "get_gencode_flag": 2043, "get_sync_debug_mod": 2043, "ipc_collect": 2043, "memory_usag": 2043, "set_stream": 2043, "set_sync_debug_mod": 2043, "power_draw": 2043, "clock_rat": 2043, "outofmemoryerror": 2043, "jiter": 2043, "tunableop": 2043, "sanit": 2043, "_record_memory_histori": [2043, 2147], "_snapshot": [2043, 2147], "_dump_snapshot": [2043, 2147], "empty_cach": [2043, 2078, 2087, 2147], "set_per_process_memory_fract": 2043, "current_allocated_memori": 2043, "driver_allocated_memori": 2043, "recommended_max_memori": 2043, "deferredmtiacallerror": 2043, "idiom": [2043, 2095], "nnpack": 2043, "openmp": [2043, 2077, 2095, 2122, 2134, 2136], "xeon": [2043, 2077, 2142], "pipelinestag": 2043, "pipelineschedul": 2043, "face": [2043, 2081, 2102, 2119, 2135], "dive": [2043, 2080, 2086, 2102, 2134, 2139], "pathwis": 2043, "exponentialfamili": 2043, "binomi": [2043, 2045, 2100], "chi2": 2043, "continuousbernoulli": 2043, "dirichlet": 2043, "fishersnedecor": 2043, "halfcauchi": 2043, "halfnorm": 2043, "inversegamma": 2043, "kumaraswami": 2043, "lkjcholeski": 2043, "laplac": 2043, "lognorm": 2043, "lowrankmultivariatenorm": 2043, "mixturesamefamili": 2043, "multinomi": [2043, 2045, 2100, 2130], "multivariatenorm": 2043, "negativebinomi": 2043, "onehotcategor": 2043, "relaxedbernoulli": 2043, "logitrelaxedbernoulli": 2043, "relaxedonehotcategor": 2043, "studentt": 2043, "transformeddistribut": 2043, "vonmis": 2043, "weibul": 2043, "wishart": 2043, "hub": [2043, 2058, 2138], "misc": 2043, "normal_": [2043, 2045, 2065, 2073, 2078, 2123], "constant_": [2043, 2073], "ones_": [2043, 2073], "zeros_": [2043, 2073], "eye_": [2043, 2049, 2073], "dirac_": [2043, 2049, 2073], "xavier_uniform_": [2043, 2073], "xavier_normal_": [2043, 2073, 2089], "kaiming_uniform_": [2043, 2073], "trunc_normal_": [2043, 2073], "orthogonal_": [2043, 2049, 2073, 2089], "sparse_": [2043, 2073], "swa": 2043, "ema": 2043, "powersgd": 2043, "remotemodul": 2043, "doublestorag": [2043, 2116], "floatstorag": [2043, 2116], "halfstorag": [2043, 2116], "longstorag": [2043, 2116], "intstorag": [2043, 2116], "shortstorag": [2043, 2116], "charstorag": [2043, 2116], "bytestorag": [2043, 2116], "boolstorag": [2043, 2116], "bfloat16storag": [2043, 2116], "complexdoublestorag": [2043, 2116], "complexfloatstorag": [2043, 2116], "quint8storag": [2043, 2116], "qint8storag": [2043, 2116], "qint32storag": [2043, 2116], "quint4x2storag": [2043, 2116], "quint2x4storag": [2043, 2116], "make_tensor": [2043, 2121], "assert_allclos": [2043, 2121], "generate_methods_for_privateuse1_backend": 2043, "get_cpp_backtrac": 2043, "set_modul": 2043, "sampler": 2043, "mobile_optim": 2043, "optimize_for_mobil": [2043, 2057], "model_zoo": 2043, "load_url": [2043, 2058], "tensorboard": [2043, 2060, 2103], "summarywrit": [2043, 2060, 2119], "module_track": 2043, "moduletrack": [2043, 2059], "iinfo": 2043, "__config__": [2043, 2077], "__future__": 2043, "set_log": [2043, 2053, 2145], "miscellan": [2043, 2148], "torchdata": 2043, "torchserv": 2043, "torchtext": 2043, "xla": [2043, 2051, 2094, 2117, 2132], "disadvantag": 2044, "gentl": 2044, "beam": 2044, "traced_bar": 2044, "myscriptmodul": 2044, "103": [2044, 2046], "939": [2044, 2046], "116": [2044, 2046], "779": [2044, 2046], "123": [2044, 2046], "my_script_modul": [2044, 2046], "ins": 2044, "pytorch_jit": 2044, "traced_fn": 2044, "disable_jit_exampl": 2044, "printer": [2044, 2099], "rv": 2044, "rv0": 2044, "rv1": 2044, "ssa": 2044, "block0": 2044, "block1": 2044, "loop_in_traced_fn": 2044, "input_tupl": 2044, "fill_row_zero": 2044, "tracerwarn": 2044, "nr": 2044, "09115803241729736": 2044, "6782537698745728": 2044, "cpu_model": 2044, "gpu_model": 2044, "sample_input_cpu": 2044, "sample_input_gpu": 2044, "traced_cpu": 2044, "traced_gpu": 2044, "use_gpu": 2044, "__constants__": [2044, 2046], "my_module_inst": 2044, "redeclar": 2044, "nn_module_inst": 2044, "my_scripted_model": 2044, "pep": [2044, 2046, 2099, 2134], "526": [2044, 2046, 2099], "script_method": 2044, "implicitly_compiled_method": 2044, "another_forward": 2044, "unused_method": 2044, "some_fn": 2044, "ever": [2044, 2116, 2147], "some_fn2": 2044, "some_fn3": 2044, "some_fn4": 2044, "my_dict": [2044, 2046], "my_int": [2044, 2046], "my_const": 2044, "make_dict": 2044, "nnc": 2044, "nvfuser": 2044, "__and__": 2045, "__iand__": 2045, "__ilshift__": 2045, "__ior__": 2045, "__irshift__": 2045, "__ixor__": 2045, "__lshift__": 2045, "__or__": 2045, "__rshift__": 2045, "__xor__": 2045, "absolute_": 2045, "acos_": [2045, 2065], "addbmm_": 2045, "addcdiv_": 2045, "addcmul_": 2045, "addmv_": [2045, 2065], "addr_": 2045, "align_a": [2045, 2065, 2066, 2100], "align_to": [2045, 2065, 2066, 2100], "ellipsis_idx": 2045, "aminmax": [2045, 2100], "arccos_": 2045, "arccosh_": 2045, "arcsin_": [2045, 2114], "arcsinh_": 2045, "arctan2_": 2045, "arctan_": 2045, "arctanh_": 2045, "argwher": [2045, 2100], "as_strided_": 2045, "as_strided_scatt": [2045, 2100, 2140], "asin_": [2045, 2065, 2114], "asinh_": [2045, 2065], "atan_": [2045, 2065], "atanh_": [2045, 2065], "baddbmm_": 2045, "bernoulli_": [2045, 2065, 2123], "bitwise_and_": 2045, "bitwise_left_shift_": 2045, "bitwise_not_": [2045, 2065], "bitwise_or_": 2045, "bitwise_right_shift_": 2045, "bitwise_xor_": 2045, "broadcast_to": [2045, 2100], "cauchy_": [2045, 2065, 2123], "ceil_": [2045, 2065], "clamp_max": [2045, 2100], "clamp_max_": 2045, "clamp_min": [2045, 2100], "clamp_min_": 2045, "clip_": 2045, "conj_physical_": 2045, "copysign_": 2045, "cos_": [2045, 2065, 2075], "cosh_": [2045, 2065], "count_nonzero": [2045, 2100], "cummax": [2045, 2100], "cummin": [2045, 2100], "cumprod_": 2045, "cumsum_": 2045, "deg2rad": [2045, 2065, 2100, 2114], "deg2rad_": [2045, 2065, 2114], "outdim": 2045, "diagonal_scatt": [2045, 2100], "digamma_": [2045, 2065], "div_": [2045, 2065, 2114], "divide_": 2045, "dsplit": [2045, 2100], "eq_": 2045, "erf_": [2045, 2065], "erfc_": [2045, 2065], "erfinv_": [2045, 2065], "exp2": [2045, 2100, 2115, 2119, 2140], "exp2_": 2045, "exp_": [2045, 2065], "expm1_": [2045, 2065], "exponential_": [2045, 2065, 2123], "fill_diagonal_": 2045, "fix_": 2045, "fliplr": [2045, 2100], "flipud": [2045, 2100], "float_power_": 2045, "floor_": [2045, 2065], "floor_divide_": [2045, 2114], "fmax": [2045, 2100, 2140], "fmin": [2045, 2100, 2140], "fmod_": 2045, "frac_": [2045, 2065], "frexp": [2045, 2100, 2140], "gcd_": 2045, "ge_": 2045, "ger": [2045, 2100], "get_devic": [2045, 2065, 2100, 2114, 2116, 2117], "greater_": 2045, "greater_equal_": 2045, "gt_": 2045, "hardshrink": [2045, 2100], "heavisid": [2045, 2100], "heaviside_": 2045, "hsplit": [2045, 2100, 2118], "hypot_": 2045, "i0_": 2045, "igamma_": 2045, "igammac_": 2045, "index_fil": [2045, 2065, 2100], "index_reduc": [2045, 2100], "is_complex": [2045, 2097, 2100, 2114, 2117], "is_contigu": [2045, 2065, 2100, 2118], "is_floating_point": [2045, 2065, 2100, 2114, 2117], "is_infer": [2045, 2100], "is_same_s": [2045, 2100, 2114], "is_set_to": [2045, 2100], "is_sign": [2045, 2065, 2100, 2114], "isclos": [2045, 2100], "isfinit": [2045, 2092, 2100, 2140], "isinf": [2045, 2100, 2114, 2140], "isneginf": [2045, 2100, 2114], "isposinf": [2045, 2100, 2114], "isreal": [2045, 2100], "istft": [2045, 2100], "kron": [2045, 2100], "lcm_": 2045, "ldexp_": 2045, "le_": 2045, "lerp_": 2045, "less_": 2045, "less_equal_": 2045, "lgamma_": 2045, "log10_": [2045, 2065], "log1p_": [2045, 2065, 2114], "log2_": [2045, 2065], "log_normal_": [2045, 2065, 2123], "logaddexp2": [2045, 2100], "logcumsumexp": [2045, 2100], "logical_and_": 2045, "logical_not_": [2045, 2065], "logical_or_": 2045, "logical_xor_": 2045, "logit_": 2045, "lt_": 2045, "masked_fil": [2045, 2065, 2067, 2100, 2114], "masked_scatt": [2045, 2100], "masked_select": [2045, 2065, 2100], "matrix_pow": [2045, 2100], "moveaxi": [2045, 2100], "msort": [2045, 2100], "multiply_": 2045, "mvlgamma_": 2045, "nan_to_num_": 2045, "nanmedian": [2045, 2065, 2100], "nansum": [2045, 2100], "narrow_copi": [2045, 2100, 2114], "ne_": 2045, "neg_": [2045, 2065, 2114], "negative_": [2045, 2114], "new_empty_strid": [2045, 2100], "new_ful": [2045, 2078, 2100], "new_on": [2045, 2100], "nextafter_": 2045, "nonzero_stat": [2045, 2100], "not_equal_": 2045, "polygamma_": 2045, "pow_": [2045, 2065], "q_per_channel_scal": [2045, 2100], "q_per_channel_zero_point": [2045, 2100], "q_scale": [2045, 2100], "q_zero_point": [2045, 2100], "rad2deg": [2045, 2065, 2100, 2114], "rad2deg_": [2045, 2065, 2114], "reciprocal_": [2045, 2065], "record_stream": [2045, 2078, 2100], "refine_nam": [2045, 2065, 2066, 2100], "relu_": [2045, 2106], "remainder_": 2045, "rename_": [2045, 2065, 2066], "renorm_": 2045, "reshape_a": [2045, 2067, 2100, 2118], "resize_a": [2045, 2100], "the_templ": 2045, "resize_as_": [2045, 2065, 2114], "resize_as_sparse_": 2045, "retains_grad": [2045, 2100], "roll": [2045, 2100], "rot90": [2045, 2100], "round_": [2045, 2065], "rsqrt_": [2045, 2065], "select_scatt": [2045, 2100, 2140], "sgn_": [2045, 2065], "sigmoid_": [2045, 2065, 2106], "sign_": [2045, 2065], "sinc_": 2045, "sinh_": [2045, 2065], "slice_invers": [2045, 2100], "slice_scatt": [2045, 2100, 2140], "smm": [2045, 2100, 2114], "sparse_resize_": 2045, "sparse_resize_and_clear_": 2045, "split_with_s": [2045, 2100, 2118, 2140], "sqrt_": [2045, 2065], "square_": 2045, "squeeze_": [2045, 2106], "sspaddmm": [2045, 2100, 2114], "sub_": [2045, 2065, 2114], "subtract_": 2045, "sum_to_s": [2045, 2100], "swapaxes_": 2045, "swapdim": [2045, 2100, 2118], "swapdims_": 2045, "take_along_dim": [2045, 2100], "tan_": [2045, 2065], "tanh_": [2045, 2065, 2106], "tensor_indices_or_sect": 2045, "to_mkldnn": [2045, 2100], "to_padded_tensor": [2045, 2067, 2100], "to_sparse_bsc": [2045, 2100], "to_sparse_bsr": [2045, 2100, 2114], "to_sparse_csc": [2045, 2100, 2114], "transpose_": [2045, 2114], "true_divide_": 2045, "trunc_": [2045, 2065], "type_a": [2045, 2065, 2100], "out0": [2045, 2094], "unsafe_chunk": [2045, 2100], "unsafe_split": [2045, 2100], "unsafe_split_with_s": [2045, 2100], "unsqueeze_": [2045, 2106], "view_a": [2045, 2100, 2118], "vsplit": [2045, 2100, 2118], "xlogy_": 2045, "adaptive_avg_pool2d": [2045, 2081, 2100, 2106], "adaptive_max_pool1d_with_indic": [2045, 2081], "adaptive_max_pool2d_with_indic": 2045, "adaptive_max_pool3d_with_indic": 2045, "alpha_dropout": [2045, 2100], "assert_int_or_pair": 2045, "arg_nam": 2045, "binary_cross_entropi": [2045, 2100], "binary_cross_entropy_with_logit": [2045, 2100], "celu": [2045, 2100], "dropout2d": 2045, "dropout3d": 2045, "feature_alpha_dropout": [2045, 2100], "fractional_max_pool2d_with_indic": 2045, "fractional_max_pool3d_with_indic": 2045, "gaussian_nll_loss": 2045, "glu": [2045, 2100], "gumbel_softmax": 2045, "hardsigmoid": [2045, 2100, 2106], "hardswish": [2045, 2100, 2106], "huber_loss": [2045, 2100], "instance_norm": [2045, 2100, 2106], "local_response_norm": 2045, "lp_pool1d": 2045, "lp_pool2d": 2045, "lp_pool3d": 2045, "max_pool1d_with_indic": [2045, 2100], "max_pool3d_with_indic": [2045, 2100, 2140], "mish": [2045, 2100], "multi_head_attention_forward": 2045, "embed_dim_to_check": 2045, "in_proj_weight": 2045, "in_proj_bia": 2045, "bias_k": 2045, "bias_v": 2045, "out_proj_weight": 2045, "out_proj_bia": 2045, "use_separate_proj_weight": 2045, "q_proj_weight": 2045, "k_proj_weight": 2045, "v_proj_weight": 2045, "static_k": 2045, "static_v": 2045, "multilabel_soft_margin_loss": 2045, "relu6": [2045, 2100, 2106], "silu": [2045, 2067, 2100, 2130], "softsign": 2045, "tanhshrink": 2045, "adaptive_avg_pool1d": [2045, 2081, 2100, 2106, 2140], "adaptive_max_pool1d": [2045, 2081, 2100], "affine_grid_gener": [2045, 2100], "alias_copi": [2045, 2100], "align_tensor": [2045, 2100], "alpha_dropout_": 2045, "as_strided_copi": [2045, 2100], "atleast_1d": [2045, 2100], "avg_pool1d": [2045, 2100, 2106, 2140], "bartlett_window": [2045, 2049, 2100], "cudnn_en": 2045, "batch_norm_backward_elemt": 2045, "invstd": 2045, "sum_di": 2045, "sum_dy_xmu": 2045, "batch_norm_backward_reduc": 2045, "input_g": 2045, "bias_g": 2045, "out3": 2045, "batch_norm_elemt": [2045, 2100], "batch_norm_gather_stat": [2045, 2100], "batch_norm_gather_stats_with_count": [2045, 2100], "batch_norm_stat": [2045, 2100], "batch_norm_update_stat": [2045, 2100], "blackman_window": [2045, 2049, 2100], "block_diag": [2045, 2100], "can_cast": [2045, 2100], "ccol_indices_copi": [2045, 2100], "celu_": 2045, "choose_qparams_optim": [2045, 2100], "n_bin": 2045, "bit_width": 2045, "col_indices_copi": [2045, 2100], "column_stack": [2045, 2100], "constant_pad_nd": [2045, 2100, 2140], "conv_tbc": [2045, 2100], "crow_indices_copi": [2045, 2100], "cudnn_affine_grid_gener": [2045, 2100], "cudnn_batch_norm": [2045, 2100], "exponential_average_factor": 2045, "cudnn_convolut": [2045, 2100], "cudnn_convolution_add_relu": [2045, 2100], "cudnn_convolution_relu": [2045, 2100], "cudnn_convolution_transpos": [2045, 2100], "cudnn_grid_sampl": [2045, 2100], "cudnn_is_accept": [2045, 2100], "cumulative_trapezoid": [2045, 2100], "detach_copi": [2045, 2100, 2144], "diagonal_copi": [2045, 2100], "dropout_": [2045, 2057], "embedding_renorm_": 2045, "physical_layout": [2045, 2140], "empty_quant": [2045, 2100], "anyenumtyp": 2045, "expand_copi": [2045, 2100], "fake_quantize_per_channel_affin": [2045, 2100], "fbgemm_linear_fp16_weight": [2045, 2100], "packed_weight": 2045, "fbgemm_linear_fp16_weight_fp32_activ": [2045, 2100], "fbgemm_linear_int8_weight": [2045, 2100], "col_offset": 2045, "weight_scal": 2045, "weight_zero_point": 2045, "fbgemm_linear_int8_weight_fp32_activ": [2045, 2100], "fbgemm_linear_quantize_weight": [2045, 2100], "fbgemm_pack_gemm_matrix_fp16": [2045, 2100], "fbgemm_pack_quantized_matrix": [2045, 2100], "feature_alpha_dropout_": 2045, "feature_dropout": [2045, 2100], "feature_dropout_": 2045, "frobenius_norm": [2045, 2100], "from_fil": [2045, 2100, 2116], "fused_moving_avg_obs_fake_qu": [2045, 2100], "observer_on": 2045, "fake_quant_on": 2045, "running_min": 2045, "running_max": 2045, "per_row_fake_qu": 2045, "symmetric_qu": 2045, "interpolation_mod": [2045, 2140], "has_bias": 2045, "gru_cel": [2045, 2100], "w_ih": 2045, "w_hh": 2045, "hamming_window": [2045, 2049, 2100], "histogramdd": [2045, 2100], "hspmm": [2045, 2100, 2114], "indices_copi": [2045, 2100], "is_autocast_cpu_en": [2045, 2100], "is_autocast_en": [2045, 2100], "is_grad_en": [2045, 2100], "is_vulkan_avail": [2045, 2100], "isin": [2045, 2100], "kaiser_window": [2045, 2100], "lstm_cell": [2045, 2100], "meshgrid": [2045, 2100], "miopen_batch_norm": [2045, 2100], "miopen_convolut": [2045, 2100], "miopen_convolution_add_relu": [2045, 2100], "miopen_convolution_relu": [2045, 2100], "miopen_convolution_transpos": [2045, 2100], "miopen_depthwise_convolut": [2045, 2100], "miopen_rnn": [2045, 2100], "weight_stride0": 2045, "dropout_st": 2045, "out4": 2045, "mkldnn_adaptive_avg_pool2d": [2045, 2100], "mkldnn_convolut": [2045, 2100], "mkldnn_linear_backward_weight": 2045, "bias_defin": 2045, "mkldnn_max_pool2d": [2045, 2100], "mkldnn_max_pool3d": [2045, 2100], "mkldnn_rnn_layer": [2045, 2100], "weight0": 2045, "weight1": 2045, "weight2": 2045, "weight3": 2045, "hx_": 2045, "cx_": 2045, "native_batch_norm": [2045, 2100], "save_mean": 2045, "save_invstd": 2045, "native_channel_shuffl": [2045, 2100], "native_dropout": [2045, 2100, 2140], "native_group_norm": [2045, 2100, 2140], "hxw": [2045, 2140], "native_layer_norm": [2045, 2100, 2140], "native_norm": [2045, 2100, 2114], "norm_except_dim": [2045, 2100], "nuclear_norm": [2045, 2100], "pairwise_dist": [2045, 2100], "permute_copi": [2045, 2100], "promote_typ": [2045, 2100, 2121], "quantize_per_channel": [2045, 2100, 2104], "quantize_per_tensor_dynam": [2045, 2100, 2104], "quantized_batch_norm": [2045, 2100], "quantized_gru_cel": [2045, 2100], "packed_ih": 2045, "packed_hh": 2045, "col_offsets_ih": 2045, "col_offsets_hh": 2045, "scale_ih": 2045, "scale_hh": 2045, "zero_point_ih": 2045, "zero_point_hh": 2045, "quantized_lstm_cel": [2045, 2100], "quantized_max_pool1d": [2045, 2100], "quantized_max_pool2d": [2045, 2100], "quantized_max_pool3d": [2045, 2100], "quantized_rnn_relu_cel": [2045, 2100], "quantized_rnn_tanh_cel": [2045, 2100], "rand_lik": [2045, 2049, 2078, 2100, 2123, 2130], "randint_lik": [2045, 2049, 2100, 2123], "randn_lik": [2045, 2049, 2067, 2100, 2123], "randperm": [2045, 2049, 2100, 2123, 2140], "result_typ": [2045, 2100], "scalar1": 2045, "scalar2": 2045, "rnn_relu": [2045, 2100], "rnn_relu_cel": [2045, 2100], "rnn_tanh": [2045, 2100], "rnn_tanh_cel": [2045, 2100], "row_indices_copi": [2045, 2100], "row_stack": [2045, 2100], "rrelu_": 2045, "rsub": [2045, 2100], "scalar_tensor": [2045, 2100, 2140], "searchsort": [2045, 2100], "segment_reduc": [2045, 2100], "selu_": 2045, "slice_copi": [2045, 2100], "sparse_bsc_tensor": [2045, 2100, 2114], "sparse_bsr_tensor": [2045, 2100, 2114], "sparse_compressed_tensor": [2045, 2100, 2114], "sparse_csc_tensor": [2045, 2100, 2114], "split_copi": [2045, 2100], "split_with_sizes_copi": [2045, 2100], "squeeze_copi": [2045, 2100], "std_mean": [2045, 2065, 2100], "sym_constrain_rang": [2045, 2100], "t_copi": [2045, 2100], "threshold_": 2045, "transpose_copi": [2045, 2100], "trapz": [2045, 2100], "tril_indic": [2045, 2049, 2100], "triu_indic": [2045, 2049, 2100], "unbind_copi": [2045, 2100], "unfold_copi": [2045, 2100], "unsqueeze_copi": [2045, 2100], "values_copi": [2045, 2100], "vander": [2045, 2049, 2100], "var_mean": [2045, 2065, 2100], "view_as_complex_copi": [2045, 2100], "view_as_real_copi": [2045, 2100], "_nn": 2045, "adaptive_max_pool2d": [2045, 2100], "avg_pool2d": [2045, 2100, 2106, 2140], "conv_depthwise3d": [2045, 2100], "cross_entropy_loss": [2045, 2100], "input_scal": 2045, "elu_": 2045, "flatten_dense_tensor": [2045, 2100], "random_sampl": 2045, "gelu_": 2045, "hardsigmoid_": [2045, 2106], "hardswish_": 2045, "hardtanh_": [2045, 2106], "leaky_relu_": 2045, "log_sigmoid": [2045, 2100], "mish_": 2045, "mkldnn_linear": [2045, 2100], "mkldnn_reorder_conv2d_weight": [2045, 2100], "mkldnn_reorder_conv3d_weight": [2045, 2100], "nll_loss2d": [2045, 2100], "nll_loss_nd": [2045, 2100], "reflection_pad3d": [2045, 2100, 2140], "relu6_": 2045, "rrelu_with_nois": [2045, 2100], "rrelu_with_noise_": 2045, "silu_": 2045, "slow_conv3d": [2045, 2100], "slow_conv_dilated2d": [2045, 2100], "slow_conv_dilated3d": [2045, 2100], "slow_conv_transpose2d": [2045, 2100], "slow_conv_transpose3d": [2045, 2100], "softshrink": [2045, 2100], "thnn_conv2d": [2045, 2100], "unflatten_dense_tensor": [2045, 2100], "upsample_bicubic2d": [2045, 2100], "scales_h": 2045, "scales_w": 2045, "upsample_bilinear2d": [2045, 2100, 2140], "upsample_linear1d": [2045, 2100], "upsample_nearest1d": [2045, 2100], "upsample_nearest2d": [2045, 2100, 2140], "upsample_nearest3d": [2045, 2100], "scales_d": 2045, "upsample_trilinear3d": [2045, 2100], "fft_fftfreq": [2045, 2100], "fft_fftshift": [2045, 2100], "fft_hfft2": [2045, 2100], "fft_hfftn": [2045, 2100], "fft_ifftshift": [2045, 2100], "fft_ihfft2": [2045, 2100], "fft_ihfftn": [2045, 2100], "fft_rfftfreq": [2045, 2100], "_linalg": 2045, "linalg_cross": [2045, 2100], "linalg_det": [2045, 2100], "linalg_diagon": [2045, 2100], "eigvec": 2045, "linalg_ldl_factor": [2045, 2100], "linalg_ldl_factor_ex": [2045, 2100], "linalg_ldl_solv": [2045, 2100], "linalg_lu": [2045, 2100], "linalg_lu_factor": [2045, 2100], "linalg_lu_factor_ex": [2045, 2100], "linalg_lu_solv": [2045, 2100], "linalg_matmul": [2045, 2100], "linalg_matrix_exp": [2045, 2100], "linalg_matrix_pow": [2045, 2100], "linalg_multi_dot": [2045, 2100], "linalg_norm": [2045, 2100], "linalg_pinv": [2045, 2100], "linalg_solve_ex": [2045, 2100], "linalg_solve_triangular": [2045, 2100], "linalg_vand": [2045, 2100], "linalg_vecdot": [2045, 2100], "linalg_vector_norm": [2045, 2100], "_nest": 2045, "nested_to_padded_tensor": [2045, 2100], "_spars": 2045, "sparse_sampled_addmm": [2045, 2100], "_special": 2045, "special_airy_ai": [2045, 2100], "special_bessel_j0": [2045, 2100], "special_bessel_j1": [2045, 2100], "special_bessel_y0": [2045, 2100], "special_bessel_y1": [2045, 2100], "special_chebyshev_polynomial_t": [2045, 2100], "special_chebyshev_polynomial_u": [2045, 2100], "special_chebyshev_polynomial_v": [2045, 2100], "special_chebyshev_polynomial_w": [2045, 2100], "special_digamma": [2045, 2100], "special_entr": [2045, 2100], "special_erf": [2045, 2100], "special_erfc": [2045, 2100], "special_erfcx": [2045, 2100], "special_erfinv": [2045, 2100], "special_exp2": [2045, 2100], "special_expit": [2045, 2100], "special_expm1": [2045, 2100], "special_gammainc": [2045, 2100], "special_gammaincc": [2045, 2100], "special_gammaln": [2045, 2100], "special_hermite_polynomial_h": [2045, 2100], "special_i0": [2045, 2100], "special_i1": [2045, 2100], "special_laguerre_polynomial_l": [2045, 2100], "special_legendre_polynomial_p": [2045, 2100], "special_log1p": [2045, 2100], "special_log_ndtr": [2045, 2100], "special_log_softmax": [2045, 2100], "special_logit": [2045, 2100], "special_logsumexp": [2045, 2100], "special_modified_bessel_i0": [2045, 2100], "special_modified_bessel_i1": [2045, 2100], "special_modified_bessel_k0": [2045, 2100], "special_modified_bessel_k1": [2045, 2100], "special_multigammaln": [2045, 2100], "special_ndtr": [2045, 2100], "special_ndtri": [2045, 2100], "special_polygamma": [2045, 2100], "special_psi": [2045, 2100], "special_round": [2045, 2100], "special_scaled_modified_bessel_k0": [2045, 2100], "special_scaled_modified_bessel_k1": [2045, 2100], "special_shifted_chebyshev_polynomial_t": [2045, 2100], "special_shifted_chebyshev_polynomial_u": [2045, 2100], "special_shifted_chebyshev_polynomial_v": [2045, 2100], "special_shifted_chebyshev_polynomial_w": [2045, 2100], "special_sinc": [2045, 2100], "special_softmax": [2045, 2100], "special_spherical_bessel_j0": [2045, 2100], "special_xlog1pi": [2045, 2100], "special_xlogi": [2045, 2100], "special_zeta": [2045, 2100], "tval": 2045, "is_accept": 2045, "rect": 2045, "magic": [2045, 2048, 2123, 2135], "__complex__": 2045, "__float__": 2045, "__int__": 2045, "hex": [2045, 2047, 2100], "__hex__": 2045, "oct": [2045, 2100], "__oct__": 2045, "divmod": [2045, 2047, 2100], "chr": [2045, 2047, 2100], "int_float": 2045, "float_int": 2045, "fab": [2045, 2100], "int_int": 2045, "float_float": 2045, "complex_complex": 2045, "int_complex": 2045, "complex_int": 2045, "float_complex": 2045, "complex_float": [2045, 2116], "scalar_scalar": 2045, "int_to_int": 2045, "modf": [2045, 2100], "mathremaind": [2045, 2100], "programm": [2046, 2047, 2104], "tn": 2046, "subtyp": 2046, "an_error": 2046, "noreturn": [2046, 2047], "classvar": [2046, 2047], "anystr": [2046, 2047], "nomin": 2046, "newtyp": [2046, 2047], "tup": [2046, 2047], "emptydatastructur": 2046, "my_list": 2046, "aug_add_x": 2046, "inc": [2046, 2047], "assign_x": [2046, 2047], "polymorph": 2046, "sum_pair": 2046, "red": [2046, 2047], "green": [2046, 2047, 2137], "enum_fn": [2046, 2047], "my_variable_nam": 2046, "top_level_method": 2046, "other_help": 2046, "ten": [2046, 2119], "my_submodul": 2046, "tuple_or_list": 2046, "a_tupl": 2046, "is_script": [2046, 2047, 2100], "unsupported_linear_op": 2046, "is_trac": [2046, 2047], "univers": 2046, "a_dict": 2046, "some_dict": 2046, "delimit": [2047, 2048], "tstype": 2047, "tsmoduletyp": 2047, "tsalltyp": 2047, "tsmetatyp": 2047, "tsprimitivetyp": 2047, "tsstructuraltyp": 2047, "tsnominaltyp": 2047, "myclass": [2047, 2102], "printabl": [2047, 2102], "sortabl": 2047, "nevertheless": [2047, 2111], "inc_first_el": 2047, "cpufloattyp": 2047, "tstupl": 2047, "tsnamedtupl": 2047, "tslist": 2047, "tsdict": 2047, "tsoption": 2047, "tsunion": 2047, "tsfutur": 2047, "tsrref": 2047, "tsawait": 2047, "await": [2047, 2048, 2109], "keytyp": 2047, "tensortyp": [2047, 2144], "_await": 2047, "mytupl": 2047, "scripted_inc": 2047, "_annotatednamedtupl": 2047, "_namedtupleannot": 2047, "_unannotatednamedtupl": 2047, "mistak": [2047, 2083, 2135], "nameerror": 2047, "remedi": 2047, "tsbuiltinclass": 2047, "tscustomclass": 2047, "tsenum": 2047, "tstensor": 2047, "subtensor": [2047, 2081, 2146], "subwithtorchfunct": 2047, "script_g": 2047, "tsclassdef": 2047, "methoddefinit": 2047, "__torch__": [2047, 2099], "class2": 2047, "tsenumdef": 2047, "tsenumtyp": 2047, "memberidentifi": 2047, "intenum": 2047, "intflag": 2047, "basecolor": 2047, "compli": [2047, 2102], "classbodydefinit": 2047, "moduleobj": 2047, "testmodul": 2047, "dosometh": 2047, "strateg": 2047, "congruent": 2047, "python3": 2047, "unannot": 2047, "python3annot": 2047, "paramannot": 2047, "returnannot": 2047, "funcormethodbodi": 2047, "mypyannot": 2047, "localvarannot": 2047, "setval": 2047, "moduletyp": [2047, 2102], "classidentifi": 2047, "instanceattridentifi": 2047, "offset_": 2047, "grammar": 2047, "chapter": [2047, 2086], "floattyp": 2047, "inttyp": 2047, "stringtyp": 2047, "devicetyp": 2047, "tupletyp": 2047, "listtyp": 2047, "enclosur": 2047, "parenth_form": 2047, "list_displai": 2047, "dict_displai": 2047, "legal": 2047, "stringliter": 2047, "floatnumb": 2047, "expression_list": 2047, "list_comprehens": 2047, "comp_for": 2047, "target_list": 2047, "or_expr": 2047, "key_datum_list": 2047, "dict_comprehens": 2047, "key_datum": 2047, "ongo": [2047, 2099, 2107, 2109], "enclos": 2047, "datum": [2047, 2125], "attributeref": 2047, "slice_list": 2047, "slice_item": 2047, "proper_slic": 2047, "argument_list": 2047, "desugar": [2047, 2135], "u_expr": 2047, "tightli": [2047, 2089], "m_expr": 2047, "a_expr": 2047, "shift_expr": 2047, "and_expr": 2047, "xor_expr": 2047, "comp_oper": 2047, "__contains__": 2047, "or_test": 2047, "and_test": 2047, "not_test": 2047, "conditional_express": 2047, "starred_item": 2047, "expression_stmt": 2047, "starred_express": 2047, "assignment_express": 2047, "assignment_stmt": 2047, "augmented_assignment_stmt": 2047, "augtarget": 2047, "augop": 2047, "annotated_assignment_stmt": 2047, "raise_stmt": 2047, "assert_stmt": 2047, "return_stmt": 2047, "del_stmt": 2047, "pass_stmt": 2047, "print_stmt": 2047, "break_stmt": 2047, "continue_stmt": 2047, "if_stmt": 2047, "while_stmt": 2047, "for_stmt": 2047, "with_stmt": 2047, "with_item": 2047, "tuple_stmt": 2047, "getattr_stmt": 2047, "hasattr_stmt": 2047, "zip_stmt": 2047, "iterable1": 2047, "iterable2": 2047, "enumerate_stmt": 2047, "five": [2047, 2094], "add_stat_valu": 2047, "sugaredvalu": 2047, "__abs__": 2047, "bytearrai": 2047, "delattr": 2047, "exec": 2047, "__index__": 2047, "isint": 2047, "issubclass": [2047, 2081], "ndigit": 2047, "__import__": [2047, 2102], "notimpl": [2047, 2048, 2081, 2135], "rpc_sync": [2047, 2100, 2109, 2110, 2111], "synonym": 2047, "_fork": [2047, 2077], "_wait": [2047, 2077], "lexic": 2048, "indent": 2048, "coroutin": [2048, 2133], "__del__": [2048, 2075], "__bytes__": 2048, "__slots__": 2048, "metaclass": 2048, "mro": 2048, "__r": 2048, "__": [2048, 2144], "bytesliter": 2048, "imagnumb": 2048, "parenthes": 2048, "ifs": 2048, "customiz": [2048, 2124, 2134, 2148], "compound": 2048, "adaptivelogsoftmaxwithloss": 2049, "opcheck": 2051, "torch_librari": [2051, 2081, 2127], "test_util": 2051, "test_schema": 2051, "test_autograd_registr": 2051, "test_faketensor": 2051, "test_aot_dispatch_dynam": 2051, "opoverloadpacket": 2051, "customopdef": 2051, "custom_op": [2051, 2099, 2135], "mylib": 2051, "numpy_mul": 2051, "mutates_arg": 2051, "numpy_add": 2051, "x_np": 2051, "z_np": 2051, "numpy_sin": 2051, "register_autograd": 2051, "sample_input": [2051, 2089], "718": 2051, "my_linear": [2051, 2059], "collis": 2051, "pessimist": 2051, "prone": [2051, 2064, 2091, 2135], "y_np": 2051, "numpy_sin_cpu": 2051, "numpy_sin_inplac": 2051, "register_kernel": 2051, "x_cpu": [2051, 2078], "x_cuda": 2051, "backward_fn": 2051, "functionctx": 2051, "keyword_only_input": 2051, "setup_context_fn": 2051, "custom_ops_landing_pag": 2051, "custom_linear": 2051, "_subclass": [2051, 2055, 2097, 2132, 2135], "fake_tensor": [2051, 2097, 2132, 2135], "faketensormod": [2051, 2097, 2132, 2135], "custom_nonzero": 2051, "get_ctx": 2051, "new_dynamic_s": 2051, "register_vmap": 2051, "vmap_func": 2051, "to_numpi": [2051, 2082], "numpy_cub": 2051, "numpy_cube_vmap": 2051, "numpy_mul_vmap": 2051, "x_bdim": [2051, 2082], "y_bdim": 2051, "impl_abstract": [2051, 2135], "qualnam": 2051, "abstractimplctx": 2051, "fakeimplctx": 2051, "register_torch_dispatch": 2051, "torch_dispatch_class": 2051, "__torch_dispatch__": [2051, 2114, 2135], "torchdispatchmod": [2051, 2081], "mymod": 2051, "_python_dispatch": [2051, 2081], "infer_schema": 2051, "prototype_funct": 2051, "foo_impl": 2051, "set_kernel_en": 2051, "2020": 2051, "googl": 2051, "colab": [2051, 2102, 2135], "dispatch_kei": [2051, 2134], "keynam": 2051, "alias_analysi": 2051, "conserv": [2051, 2054, 2078, 2135], "with_keyset": 2051, "fallthrough_kernel": 2051, "fallthrough": 2051, "redispatch": [2051, 2081, 2135], "fallback_kernel": 2051, "div_cpu": 2051, "impl_": 2051, "operator_nam": 2051, "mysin": 2051, "off_by_default": 2053, "_registr": 2053, "spammi": [2053, 2134, 2145], "compiled_autograd": 2053, "born": 2054, "citizen": 2054, "afterthought": 2054, "intuit": [2054, 2138], "alik": 2054, "grai": 2054, "systemat": 2054, "onboard": 2054, "maskedarrai": 2054, "masked_tensor": 2054, "principl": [2055, 2078, 2136], "meta_util": 2055, "undocu": 2055, "fidel": 2055, "torch_force_weights_only_load": 2056, "torch_autograd_shutdown_wait_limit": 2056, "torch_device_backend_autoload": 2056, "mobil": [2057, 2104, 2136], "blocklist": [2057, 2102], "mobileoptimizertyp": 2057, "conv_bn_fus": 2057, "correspondingli": 2057, "prepack": [2057, 2100], "insert_fold_prepack_op": 2057, "arm": [2057, 2104], "remove_dropout": 2057, "hoist": 2057, "hoist_conv_packed_param": 2057, "fuse_add_relu": 2057, "vulkan": 2057, "vulkan_automatic_gpu_transf": 2057, "freeze_modul": 2057, "script_modul": 2057, "optimization_blocklist": 2057, "preserved_method": 2057, "_mobileoptimizertyp": 2057, "recursivescriptmodul": [2057, 2094], "download": [2058, 2085, 2095, 2119, 2138], "friendli": 2059, "flopcountermod": 2059, "is_bw": 2059, "infrequ": 2060, "window_s": 2060, "max_sampl": 2060, "cap": 2060, "hasn": [2060, 2102], "_monitor": 2060, "data_value_t": 2060, "eventhandlerhandl": 2060, "register_event_handl": 2060, "unregister_event_handl": 2060, "tensorboardeventhandl": 2060, "shader": [2061, 2090], "processor": [2061, 2136], "metalperformanceshad": 2061, "pytorch_debug_mps_alloc": 2062, "pytorch_mps_log_profile_info": 2062, "mpsprofil": 2062, "logopt": 2062, "pytorch_mps_trace_signpost": 2062, "profileopt": 2062, "signposttyp": 2062, "pytorch_mps_high_watermark_ratio": 2062, "watermark": 2062, "pytorch_mps_low_watermark_ratio": 2062, "pytorch_mps_fast_math": 2062, "shade": 2062, "pytorch_mps_prefer_met": 2062, "pytorch_enable_mps_fallback": 2062, "m_high_watermark_ratio": 2062, "shared_memori": 2064, "abruptli": 2064, "get_all_sharing_strategi": 2064, "get_sharing_strategi": 2064, "set_sharing_strategi": 2064, "new_strategi": 2064, "di": [2064, 2130, 2133, 2134], "abnorm": [2064, 2091], "forev": [2064, 2080], "asap": 2064, "queue_2": 2064, "x_clone": 2064, "segfault": [2064, 2092, 2135], "shm_open": [2064, 2116], "seriou": [2064, 2078, 2135], "torch_shm_manag": 2064, "unnot": 2064, "spawncontext": 2064, "has_nam": 2065, "is_shar": [2065, 2116], "is_sparse_csr": [2065, 2100, 2116], "is_tensor": [2065, 2114], "items": [2065, 2100], "unifies_names_from_input_tensor": 2065, "nbyte": [2065, 2100, 2116], "ndimens": 2065, "register_post_accumulate_grad_hook": [2065, 2075], "position": [2065, 2066], "unnam": [2065, 2066], "misalign": 2065, "inher": 2065, "collaps": [2065, 2100, 2140], "disappear": 2065, "img": [2066, 2119], "renamed_img": 2066, "coexist": 2066, "wildcard": [2066, 2102, 2144], "somewher": [2066, 2088], "scale_channel": 2066, "more_img": 2066, "named_tensor": 2066, "named_img": 2066, "flat_img": 2066, "named_flat_img": 2066, "unflattened_named_img": 2066, "grad_loss": 2066, "8107": 2066, "6357": 2066, "0783": 2066, "rename_map": 2066, "greedili": 2066, "unment": 2066, "49152": 2066, "datastructur": 2067, "seamless": 2067, "nested_tensor": 2067, "nt": 2067, "vein": 2067, "as_nested_tensor": 2067, "irregular": 2067, "indistinguish": 2067, "2286": 2067, "4842": 2067, "7827": 2067, "6745": [2067, 2115], "0658": 2067, "1247": 2067, "4078": 2067, "8083": 2067, "2871": 2067, "5559": 2067, "9885": 2067, "4074": 2067, "4855": 2067, "0733": 2067, "8285": 2067, "6858": 2067, "7030": 2067, "3481": 2067, "0236": 2067, "jag": [2067, 2132], "fake_grad": 2067, "nt2": 2067, "6862": 2067, "1282": 2067, "1031": 2067, "0464": 2067, "3276": 2067, "9967": 2067, "0054": 2067, "8972": 2067, "9174": 2067, "4995": 2067, "8546": 2067, "7194": 2067, "2918": 2067, "1846": 2067, "8793": 2067, "5183": 2067, "6447": 2067, "8009": 2067, "8468": 2067, "9832": 2067, "5272": 2067, "pt_infer": 2067, "pt_larg": 2067, "pt_small": 2067, "bitwidth": [2068, 2089, 2104, 2114], "asymmetr": [2068, 2104, 2107], "alter": [2069, 2074, 2081, 2141], "score_mod": 2071, "block_mask": 2071, "return_ls": 2071, "kernel_opt": 2071, "q_idx": 2071, "k_idx": 2071, "hkv": 2071, "blockspars": 2071, "create_block_mask": 2071, "mask_mod": 2071, "q_len": 2071, "kv_len": 2071, "_compil": 2071, "kv_idx": 2071, "kv_block_siz": 2071, "q_block_siz": 2071, "causal_mask": 2071, "8192": 2071, "create_mask": 2071, "mod_fn": 2071, "_score_mod_signatur": 2071, "_mask_mod_signatur": 2071, "and_mask": 2071, "or_mask": 2071, "noop_mask": 2071, "token_q": 2071, "token_kv": 2071, "kv_num_block": 2071, "kv_indic": 2071, "full_kv_num_block": 2071, "full_kv_indic": 2071, "q_num_block": 2071, "q_indic": 2071, "full_q_num_block": 2071, "full_q_indic": 2071, "somewhat": [2071, 2075, 2078, 2114], "bcsr": 2071, "num_blocks_in_row": 2071, "max_blocks_in_col": 2071, "dense_mask": 2071, "block_idx": 2071, "kv": 2071, "dkv": 2071, "from_kv_block": 2071, "kv_block": 2071, "_transposed_ord": 2071, "full_kv_": 2071, "invidu": 2071, "to_str": 2071, "grid_siz": 2071, "nifti": 2071, "attention_bias": 2072, "sacrific": [2073, 2078], "dirac": 2073, "glorot": 2073, "bengio": 2073, "fan": 2073, "_in": 2073, "_out": [2073, 2086, 2140], "Be": [2073, 2099, 2142], "fan_in": 2073, "fan_out": 2073, "kaim": 2073, "delv": 2073, "surpass": 2073, "he": 2073, "_mode": 2073, "redrawn": 2073, "sax": 2073, "2013": 2073, "marten": 2073, "scaler": [2074, 2078, 2085], "clip_grad_value_": 2074, "unscale_": 2074, "optimizer2": 2074, "batch_per_it": 2074, "iters_to_accumul": 2074, "num_proc": 2074, "grad_param": 2074, "grad_norm": 2074, "scaled_grad_param": 2074, "inv_scal": 2074, "get_scal": 2074, "proce": [2074, 2078, 2109, 2145], "optimizer0": 2074, "output0": 2074, "model0": 2074, "model1": 2074, "loss0": 2074, "loss1": 2074, "hundr": [2074, 2088, 2145], "imped": 2074, "poor": [2074, 2075], "dp_model": 2074, "imported_funct": 2074, "mymm": 2074, "myfloat32func": 2074, "fwd_output": 2074, "cleaner": 2075, "mapsto": 2075, "educ": 2075, "_saved_self": 2075, "convex": 2075, "concav": 2075, "togglabl": 2075, "drawback": 2075, "0011": 2075, "creator": [2075, 2109, 2111], "hogwild": 2075, "train_fn": 2075, "graphtask": 2075, "copyslic": 2075, "mutex": 2075, "gotten": 2075, "curiou": 2075, "\u2102": 2075, "yj": 2075, "holomorph": 2075, "fulfil": [2075, 2082, 2102, 2132], "mathematician": 2075, "studi": [2075, 2103], "beauti": 2075, "0906": 2075, "4835": 2075, "audio": [2075, 2085, 2119, 2133], "\u211d": 2075, "_output": 2075, "vj": 2075, "handi": [2075, 2078], "selfdeletingtempfil": 2075, "tmp_dir": 2075, "uuid": 2075, "uuid4": 2075, "temp_fil": 2075, "forbidden": 2075, "savedtensor": 2075, "_raw_saved_": 2075, "_raw_saved_self": 2075, "save_on_disk_threshold": 2075, "tensor_or_sctf": 2075, "_saved_oth": 2075, "4th": 2076, "backcompat": 2076, "broadcast_warn": 2076, "userwarn": 2076, "compute_z": 2077, "w_z": 2077, "w_y": 2077, "tbb": 2077, "aten_thread": 2077, "omp": 2077, "mkl_thread": 2077, "mkldnn_cpu_runtim": 2077, "use_mkldnn": 2077, "use_tbb": 2077, "use_openmp": 2077, "ON": [2077, 2087, 2088], "set_num_interop_thread": 2077, "get_num_interop_thread": 2077, "set_num_thread": [2077, 2091], "get_num_thread": 2077, "omp_num_thread": [2077, 2122], "mkl_num_thread": [2077, 2122], "e5": 2077, "oversubscript": 2077, "memory manag": 2078, "optimize pytorch": 2078, "irrespect": 2078, "spread": 2078, "cuda2": [2078, 2087], "broadli": [2078, 2104], "set_float_32_matmul_precis": 2078, "a100": [2078, 2142, 2145], "a_ful": 2078, "10240": 2078, "b_full": 2078, "ab_ful": 2078, "7277": 2078, "ab_tf32": 2078, "016": 2078, "ga100": 2078, "1747": 2078, "relative_error": 2078, "0022": 2078, "ab_fp32": 2078, "0031": 2078, "000039": 2078, "7x": 2078, "globalcontext": 2078, "setallowtf32cubla": 2078, "setallowtf32cudnn": 2078, "bench_gemm_transform": 2078, "allow_fp16_reduc": 2078, "4048": 2078, "1634": 2078, "1639": 2078, "4056": 2078, "1670": 2078, "1661": 2078, "4080": 2078, "1664": 2078, "1658": 2078, "1651": 2078, "4104": 2078, "1677": 2078, "1674": 2078, "4128": 2078, "1796": [2078, 2089], "2519": 2078, "5096": 2078, "2144": 2078, "2149": 2078, "2766": 2078, "5120": 2078, "2142": 2078, "9728": 2078, "3875": 2078, "5779": 2078, "16384": [2078, 2138], "6182": 2078, "9656": 2078, "setallowfp16reductioncubla": 2078, "instabl": 2078, "setallowbf16reductioncubla": 2078, "invis": [2078, 2133, 2136, 2145], "start_ev": 2078, "elapsed_time_m": 2078, "pointless": 2078, "exploit": 2078, "paragraph": [2078, 2086], "initial_grad": 2078, "memory_alloc": [2078, 2087], "memory_snapshot": [2078, 2087], "memcheck": 2078, "option2": 2078, "value2": 2078, "max_split_size_mb": 2078, "mb": 2078, "borderlin": 2078, "memory_summari": 2078, "roundup_power2_divis": 2078, "1280": 2078, "1536": 2078, "1792": 2078, "256mb": 2078, "512mb": 2078, "1gb": [2078, 2143], "knob": [2078, 2132], "garbage_collection_threshold": 2078, "reclaim": [2078, 2130], "release_cached_block": 2078, "unfavor": 2078, "expandable_seg": 2078, "2mb": 2078, "sliver": 2078, "pinned_use_cuda_host_regist": 2078, "cudahostregist": 2078, "cudahostalloc": 2078, "malloc": [2078, 2147], "pinned_num_register_thread": 2078, "cuda_runtime_api": 2078, "iostream": [2078, 2127], "fpic": 2078, "my_malloc": 2078, "ssize_t": 2078, "ptr": 2078, "cout": [2078, 2127], "endl": [2078, 2088, 2127], "my_fre": 2078, "cudapluggablealloc": 2078, "new_alloc": 2078, "change_current_alloc": 2078, "_cuda_clearcublasworkspac": 2078, "lru": 2078, "geometri": 2078, "1023": 2078, "zeta": [2078, 2100, 2115, 2140], "use_pytorch_kernel_cach": 2078, "pytorch_kernel_cache_path": 2078, "store_tru": 2078, "disable_cuda": 2078, "assess": 2078, "cudagetdevicecount": 2078, "cuinit": 2078, "nvmldevicegetcount_v2": 2078, "poison": 2078, "aforement": [2078, 2091], "train_load": [2078, 2085, 2091], "x_gpu": 2078, "x_cpu_long": 2078, "y_cpu": 2078, "y_gpu": 2078, "y_cpu_long": 2078, "new_tensor": 2078, "overus": 2078, "cudagraphlaunch": 2078, "elid": 2078, "versatil": 2078, "static_input": 2078, "static_output": 2078, "realist": 2078, "sophist": [2078, 2101], "register_generator_st": 2078, "virtual": [2078, 2116], "d_in": 2078, "d_out": 2078, "640": 2078, "static_target": 2078, "static_y_pr": 2078, "static_loss": 2078, "real_input": [2078, 2135], "real_target": 2078, "refil": 2078, "rejoin": 2078, "cuda_work": 2078, "nsight": 2078, "reorgan": 2078, "graphabl": 2078, "illeg": [2078, 2132], "needlessli": [2078, 2132], "econom": 2078, "static_out_1": 2078, "g1_workload": 2078, "static_in_1": 2078, "static_out_2": 2078, "g2_workload": 2078, "static_in_2": 2078, "real_data_1": 2078, "real_data_2": 2078, "occasion": [2078, 2114, 2135], "click": [2079, 2123, 2142, 2143], "29500": [2080, 2109, 2110], "grad0": 2080, "grad1": 2080, "bucket1": 2080, "bucket0": 2080, "hurt": 2080, "kick": [2080, 2109, 2110, 2142], "earliest": 2080, "unreadi": 2080, "perspect": [2080, 2084, 2092, 2110], "hpp": 2080, "processgroupgloo": 2080, "processgroupmpi": 2080, "_sync_param": 2080, "autograd_hook": 2080, "prepare_for_backward": 2080, "dist_ddp": 2080, "optimize_ddp": 2080, "linearfunct": 2081, "grad_bia": 2081, "mulconst": 2081, "mycub": [2081, 2082], "grad_dx": [2081, 2082], "my_cub": [2081, 2082], "input_featur": 2081, "output_featur": 2081, "__array_function__": [2081, 2136], "nep": [2081, 2136], "0018": 2081, "scalartensor": 2081, "handled_funct": 2081, "mandat": 2081, "update_wrapp": 2081, "ensure_tensor": 2081, "metadatatensor": 2081, "__add__": 2081, "subtensor2": 2081, "othersubtensor": 2081, "loggingtensor": 2081, "permiss": 2081, "_metadata": 2081, "ndata": 2081, "ministri": 2081, "silli": 2081, "superclass": 2081, "troublesom": 2081, "_get_overridable_funct": 2081, "get_overridable_funct": [2081, 2146], "func_dict": 2081, "nn_func": 2081, "labori": 2081, "_get_testing_overrid": 2081, "get_testing_overrid": [2081, 2146], "override_dict": 2081, "dummy_add": 2081, "get_ignored_funct": [2081, 2146], "outdat": 2081, "dispatchkei": 2081, "zerotensor": 2081, "compositeimplicitautograd": 2081, "func_nam": [2081, 2109], "overload_nam": 2081, "exot": 2081, "zoo": 2081, "torchfunctionmod": 2081, "resolve_nam": [2081, 2146], "functionlog": 2081, "dispatchlog": 2081, "7164": 2081, "9336": 2081, "4287": 2081, "7989": 2081, "2169": 2081, "7474": 2081, "5624": 2081, "5970": 2081, "4328": 2081, "9794": 2081, "3490": 2081, "8671": 2081, "8573": 2081, "4338": 2081, "4948": 2081, "1249": 2081, "3307": 2081, "2151": 2081, "6018": 2081, "9060": 2081, "2974": 2081, "7708": 2081, "6668": 2081, "0352": 2081, "7948": 2081, "6023": 2081, "4303": 2081, "2036": 2081, "6831": 2081, "8120": 2081, "5949": 2081, "5416": 2081, "3335": 2081, "5897": 2081, "custom_vjp": 2082, "custom_jvp": 2082, "numpysort": 2082, "ind_inv": 2082, "_1": [2082, 2102], "numpytak": 2082, "numpy_sort": 2082, "ggx": 2082, "vmappabl": 2082, "ind_bdim": 2082, "ind_inv_bdim": 2082, "expanded_x": 2082, "expanded_ind": 2082, "expanded_ind_inv": 2082, "new_dim": 2082, "logical_dim": 2082, "maybe_expand_bdim_at_front": 2082, "pseudocod": 2082, "rapidli": [2083, 2091, 2097, 2098], "fortun": [2083, 2145], "abridg": 2083, "total_loss": 2083, "extrud": 2083, "phenomenon": 2083, "plenti": [2083, 2133], "bptt": 2083, "repackag": 2083, "nm": 2083, "blow": 2083, "rememb": [2083, 2091, 2101], "elf": 2083, "grep": [2083, 2129, 2133], "run_model": 2083, "recoveri": 2083, "data_parallel": 2083, "pad_packed_sequ": 2083, "padded_input": 2083, "packed_input": 2083, "packed_output": 2083, "my_lstm": 2083, "dp_m": 2083, "padding_input": 2083, "flava": 2084, "sooner": 2084, "llm": 2084, "6b": 2084, "2b": 2084, "8gb": 2084, "1x": 2084, "24gb": 2084, "total_transformer_block_params_in_b": 2084, "dtype_byt": 2084, "num_gpu": 2084, "gb": 2084, "2x": [2084, 2119, 2139], "record_funct": [2084, 2143], "recordstream": 2084, "flat_param": 2084, "splitwithsizesbackward": 2084, "4gb": 2084, "6gb": 2084, "_another_": 2084, "_could_": 2084, "setvar": 2085, "pti": 2085, "oneapi_root": 2085, "oneapi": 2085, "acitv": 2085, "cd": [2085, 2095, 2102, 2127, 2145], "checkout": [2085, 2099], "cmake": [2085, 2087, 2095, 2127], "pip": [2085, 2095, 2097, 2098, 2099, 2119, 2134], "use_xpu": 2085, "cmake_prefix_path": [2085, 2127], "conda_prefix": 2085, "torchvison": 2085, "cifar10": 2085, "totensor": [2085, 2119], "train_dataset": [2085, 2093], "batch_idx": 2085, "optimizer_state_dict": 2085, "use_amp": 2085, "ur": 2086, "ui": [2086, 2119, 2139, 2142], "j_f": 2086, "calculu": 2086, "cw": 2086, "bigger": 2086, "articl": 2086, "58eb23378f2a376565a66ac32c93a316c45b6131": 2086, "l99": 2086, "l105": 2086, "ds_dx": 2086, "compute_gradi": 2086, "ds_dy": 2086, "conj_w_d": 2086, "w_d": 2086, "d_idx": 2086, "albeit": 2086, "wonder": 2086, "amd": [2087, 2126], "dialect": 2087, "portabl": 2087, "rocmdoc": 2087, "programming_guid": 2087, "hip_api_guid": 2087, "cuda_vers": 2087, "cudaruntimegetvers": 2087, "cudadrivergetvers": 2087, "hip_vers": 2087, "hipruntimegetvers": 2087, "hipdrivergetvers": 2087, "11000": 2087, "use_rocm": 2087, "40300": 2087, "drocm_force_enable_gpu_assert": 2087, "addglobalcallback": 2088, "recordfunct": 2088, "ivalu": 2088, "threadlocaldebuginfo": 2088, "debuginfoguard": 2088, "recordfunctioncallback": 2088, "onfunctionent": 2088, "onfunctionexit": 2088, "needsinput": 2088, "samplingprob": 2088, "enablerecordfunct": 2088, "cerr": 2088, "broader": [2088, 2123], "inject": 2088, "setapiusagehandl": 2088, "setapiusagelogg": 2088, "event_nam": 2088, "c10_log_api_usage_onc": 2088, "my_api": 2088, "_log_api_usage_onc": 2088, "archiv": [2088, 2094], "akin": [2088, 2127], "jpeg": 2088, "camera": [2088, 2119], "setexportmoduleextrafileshook": 2088, "extrafilesmap": 2088, "producer_info": 2088, "getenv": 2088, "getsourc": 2088, "precompil": 2088, "pyc": 2088, "loos": 2088, "elabor": 2089, "tpu": 2089, "mylinear": 2089, "0413": 2089, "2057": 2089, "0597": 2089, "8247": 2089, "1045": 2089, "4299": 2089, "5457": 2089, "4793": 2089, "3634": 2089, "8525": 2089, "6749": 2089, "l0": [2089, 2094, 2133], "deeper": [2089, 2102], "bignet": 2089, "big_net": 2089, "dynamicnet": 2089, "dynamic_net": 2089, "2051": 2089, "7601": 2089, "1963": 2089, "4354": 2089, "6598": 2089, "4446": 2089, "4628": 2089, "8774": 2089, "6848": 2089, "5458": 2089, "4647": 2089, "5310": 2089, "0609": 2089, "0940": 2089, "1266": 2089, "0623": 2089, "3508": 2089, "0550": 2089, "5317": 2089, "5562": 2089, "4028": 2089, "6942": 2089, "0140": 2089, "0329": 2089, "1160": 2089, "0434": 2089, "3889": 2089, "1613": 2089, "6340": 2089, "3887": 2089, "9979": 2089, "0767": 2089, "3526": 2089, "8756": 2089, "5847": 2089, "6016": 2089, "1608": 2089, "0829": 2089, "6338": 2089, "9239": 2089, "6943": 2089, "5034": 2089, "0268": 2089, "4489": 2089, "9403": 2089, "1571": [2089, 2094], "2509": 2089, "5052": 2089, "3088": 2089, "4951": 2089, "3381": 2089, "5166": 2089, "beginn": 2089, "examples_nn": 2089, "polynomial_modul": 2089, "teach": 2089, "0013": [2089, 2115], "0030": 2089, "0008": 2089, "modalmodul": 2089, "6614": 2089, "2669": 2089, "0617": 2089, "4519": 2089, "two_layer_net_optim": 2089, "blitz": 2089, "neural_networks_tutori": 2089, "autograd_tutori": 2089, "new_net": 2089, "runningmean": 2089, "1041": 2089, "0647": 2089, "1515": 2089, "m_load": 2089, "unserialized_th": 2089, "statefulmodul": 2089, "param3": 2089, "param_list": 2089, "parameterlist": 2089, "param_dict": 2089, "parameterdict": 2089, "buffer1": 2089, "buffer2": 2089, "buffer3": 2089, "0322": 2089, "9066": 2089, "1409": 2089, "4852": 2089, "6949": 2089, "2911": 2089, "1044": 2089, "4202": 2089, "1953": 2089, "5299": 2089, "8747": 2089, "6289": 2089, "4898": 2089, "6434": 2089, "5187": 2089, "0346": 2089, "4077": 2089, "4324": 2089, "7022": 2089, "3915": 2089, "6176": 2089, "6062": 2089, "5992": 2089, "4452": 2089, "2843": 2089, "3710": 2089, "3947": 2089, "saving_loading_model": 2089, "what_is_state_dict": 2089, "skip_init": 2089, "skip_param_init": 2089, "forward_hook": [2089, 2141], "backward_hook": [2089, 2141], "new_grad_input": 2089, "5059": 2089, "8158": 2089, "2390": 2089, "0043": 2089, "addmmbackward": 2089, "forward_pre_hook_handl": 2089, "5752": 2089, "7421": 2089, "forward_hook_handl": 2089, "0980": 2089, "4666": 2089, "0256": 2089, "4497": 2089, "5046": 2089, "combat": 2089, "mps_devic": 2090, "yourfavoritenet": 2090, "a3c": 2091, "set_start_method": 2091, "simplequeu": 2091, "cope": 2091, "eleg": 2091, "num_process": 2091, "inappropri": 2091, "vcpu": 2091, "htop": 2091, "exceed": 2091, "competit": 2091, "oversubscrib": 2091, "mnist_hogwild": 2091, "dataloader_kwarg": 2091, "train_epoch": 2091, "30x": 2091, "boost": [2091, 2129], "754": 2092, "1e20": 2092, "4142e": 2092, "struggl": 2092, "benign": 2092, "v_dot2": 2092, "mfma": 2092, "fp64": 2092, "miopen": 2092, "rocblas_internal_fp16_alt_impl": 2092, "miopen_debug_convolution_attrib_fp16_alt_impl": 2092, "_convbackend": 2092, "slownd": 2092, "slownd_transpos": 2092, "slownd_dil": 2092, "slownd_dilated_transpos": 2092, "convbackend": 2092, "miopendepthwis": 2092, "miopentranspos": 2092, "svd_lowrank": [2093, 2114], "22modul": 2093, "20determin": 2093, "index_add_cuda_": 2093, "1509": 2093, "8027": 2093, "0333": 2093, "1444": 2093, "rese": 2093, "seed_work": 2093, "worker_se": 2093, "tensor_dict": 2094, "loaded_numb": 2094, "loaded_even": 2094, "loaded_smal": 2094, "num_batches_track": 2094, "bn_state_dict": 2094, "new_bn": 2094, "out0_relu": 2094, "1400": 2094, "4563": 2094, "0271": 2094, "4406": 2094, "2827": 2094, "4588": 2094, "2031": 2094, "1316": 2094, "6533": 2094, "3413": 2094, "1112": 2094, "m_state_dict": 2094, "new_m": 2094, "zip64": 2094, "pkl": [2094, 2102], "byteord": 2094, "original_nam": 2094, "controlflowmodul": 2094, "controlflowmodule_trac": 2094, "3793": 2094, "controlflowmodule_script": 2094, "tagger": 2094, "ipu_tag": 2094, "ipu_deseri": 2094, "startswith": [2094, 2100], "get_default_load_endian": 2094, "loadendian": 2094, "default_load_endian": 2094, "set_default_load_endian": 2094, "endian": 2094, "get_default_mmap_opt": 2094, "default_mmap_opt": 2094, "set_default_mmap_opt": 2094, "safe_glob": 2094, "mytensor": 2094, "namedtemporaryfil": 2094, "5024": 2094, "8152": 2094, "5455": 2094, "8234": 2094, "clear_safe_glob": 2094, "get_safe_glob": 2094, "rem": 2095, "7z": 2095, "curl": 2095, "ossci": 2095, "mkl_2020": 2095, "aoa": 2095, "omkl": 2095, "cuda_prefix": 2095, "cuda102": 2095, "magma_2": 2095, "4_": 2095, "omagma": 2095, "cmake_include_path": 2095, "magma_hom": 2095, "studio": [2095, 2097], "cmake_gener": 2095, "ffi": 2095, "create_extens": 2095, "_ext": 2095, "define_macro": 2095, "relative_to": 2095, "c99": 2095, "x86_x64": 2095, "packagesnotfounderror": 2095, "anaconda": 2095, "noarch": 2095, "continuum": 2095, "pkg": 2095, "pro": [2095, 2119], "msys2": 2095, "importerror": [2095, 2102], "dll": 2095, "vc2017": 2095, "vc": 2095, "vs2017_runtim": 2095, "mkl_fft": 2095, "intel_openmp": 2095, "vs2017": 2095, "openbla": 2095, "forg": 2095, "emerg": [2095, 2132], "forgotten": 2095, "freeze_support": 2095, "forkingpickl": 2095, "brokenpipeerror": 2095, "errno": 2095, "couldn": [2095, 2099], "torch_14808_1591070686": 2095, "thalloc": 2095, "tdr": 2095, "thcudacheck": 2095, "csrc": [2095, 2127, 2132, 2133], "storageshar": 2095, "microsoft": [2096, 2104], "flavor": 2096, "polish": [2096, 2097], "orchestr": [2097, 2141], "exportopt": 2097, "onnxregistri": 2097, "extractor": 2097, "fxgraphextractor": 2097, "onnxfakecontext": 2097, "onnxprogram": [2097, 2099], "onnxprogramseri": 2097, "upgrad": [2097, 2101, 2121], "perceptron": 2097, "mlpmodel": 2097, "fc0": 2097, "fc3": 2097, "97": [2097, 2115], "onnx_program": 2097, "dynamo_export": [2097, 2099], "model_proto": 2097, "modelproto": 2097, "complianc": 2097, "protobuf": [2097, 2099], "netron": 2097, "icon": 2097, "viewer": [2097, 2147], "parseabl": 2097, "fxe0007": 2097, "fxe0011": 2097, "fxe0012": 2097, "fxe0013": 2097, "fxe0014": 2097, "fxe0015": 2097, "fxe0016": 2097, "model_kwarg": 2097, "torch_export": 2097, "my_simple_model": 2097, "my_dynamic_model": 2097, "tensor_typ": 2097, "elem_typ": 2097, "dim_param": [2097, 2099], "arg0_dim_0": 2097, "arg0_dim_1": 2097, "arg0_dim_2": 2097, "fake_context": 2097, "onnx_registri": 2097, "diagnostic_opt": 2097, "enable_fake_mod": 2097, "xdoctest": [2097, 2098], "torch_doctest_onnx": [2097, 2098], "my_nn_modul": 2097, "my_model_without_initi": 2097, "WITH": [2097, 2099], "my_model_with_initi": 2097, "model_st": 2097, "input_adapt": 2097, "output_adapt": 2097, "diagnostic_context": 2097, "export_except": 2097, "model_signatur": 2097, "model_torch": 2097, "io_adapt": 2097, "inputadapt": 2097, "outputadapt": 2097, "diagnosticcontext": 2097, "adapt_torch_inputs_to_onnx": 2097, "model_with_state_dict": 2097, "func_nested_input": 2097, "x_dict": 2097, "y_tupl": 2097, "y3": 2097, "adapt_torch_outputs_to_onnx": 2097, "model_output": 2097, "func_returning_tupl": 2097, "pt_output": 2097, "inputadaptstep": 2097, "outputadaptstep": 2097, "pprint": 2097, "9216": [2097, 2099], "p_conv1_weight": 2097, "p_conv2_weight": 2097, "p_fc1_weight": 2097, "p_fc2_weight": 2097, "b_my_buffer2": 2097, "b_my_buffer1": 2097, "_log_softmax": [2097, 2100, 2140], "include_initi": 2097, "bufferediobas": 2097, "safetensor": 2097, "safe_open": 2097, "save_diagnost": 2097, "protobufonnxprogramseri": 2097, "serializetostr": 2097, "exported_model": 2097, "onnxruntimeopt": 2097, "session_opt": 2097, "execution_provid": 2097, "execution_provider_opt": 2097, "onnxruntim": [2097, 2098, 2099, 2104], "sessionopt": 2097, "invalidexportoptionserror": 2097, "get_op_funct": 2097, "is_registered_op": 2097, "register_op": 2097, "tracedonnxfunct": 2097, "sctip": 2097, "warnings_as_error": 2097, "is_onnxrt_backend_support": 2098, "onnxrt": [2098, 2126], "dummy_input": 2099, "input_nam": 2099, "actual_input_1": 2099, "learned_": 2099, "output_nam": 2099, "learned_0": 2099, "learned_1": 2099, "learned_2": 2099, "learned_3": 2099, "learned_14": 2099, "learned_15": 2099, "kernel_shap": 2099, "check_model": 2099, "printable_graph": 2099, "ort": 2099, "ort_sess": 2099, "inferencesess": 2099, "astyp": 2099, "seq_length": 2099, "real_seq_length": 2099, "experienc": 2099, "new_data": 2099, "hope": [2099, 2133, 2139], "symbolic_opset": 2099, "symbolic_opset9": 2099, "_variablefunct": 2099, "pyi": 2099, "___torch_mangle_0": 2099, "alpha_f": 2099, "myrelu": 2099, "value_t": 2099, "pythonop": [2099, 2100], "mylogexp": 2099, "operator_export_typ": 2099, "onnx_fallthrough": 2099, "onnx_aten_fallback": 2099, "onnx_opset": 2099, "opset15": 2099, "custom_opset": 2099, "67326": 2099, "alphax": 2099, "castlik": 2099, "gammax": 2099, "settyp": 2099, "custom_selu": 2099, "jit_util": 2099, "graphcontext": 2099, "onnxscript_op": 2099, "register_custom_op_symbol": 2099, "symbolic_nam": 2099, "symbolic_fn": 2099, "symbolic_help": 2099, "symbolic_foo_forward": 2099, "custom_domain": 2099, "attr1_f": 2099, "attr2_i": 2099, "foo_forward": 2099, "foomodel": 2099, "example_input1": 2099, "caffe2": [2099, 2119], "torch_script_graph": 2099, "unconvertible_op": 2099, "dynamic_ax": 2099, "export_param": 2099, "trainingmod": 2099, "operatorexporttyp": 2099, "do_constant_fold": 2099, "keep_initializers_as_input": 2099, "export_modules_as_funct": 2099, "autograd_inlin": 2099, "OF": 2099, "input_i": 2099, "input_z": 2099, "untrain": 2099, "doc_str": 2099, "onnx_aten": 2099, "summodul": 2099, "dim_valu": 2099, "my_custom_axis_nam": 2099, "sum_dynamic_axes_1": 2099, "deduplicate_initi": 2099, "74765": 2099, "checkererror": 2099, "unsupportedoperatorerror": 2099, "export_to_pretty_str": 2099, "export_typ": 2099, "google_print": 2099, "add_node_nam": 2099, "to_text": 2099, "nodeproto": 2099, "debugstr": 2099, "contrib": 2099, "test_aten_embedding_2": 2099, "test_oper": 2099, "unregister_custom_op_symbol": 2099, "select_model_mode_for_export": 2099, "is_in_onnx_export": 2099, "middl": [2099, 2133], "enable_log": 2099, "disable_log": 2099, "graphinfo": 2099, "incorrect_relu_symbolic_funct": 2099, "2328854203224182": 2099, "699536174352349": 2099, "u2713": 2099, "constantchunk": 2100, "__and_": 2100, "__contains_": 2100, "__derive_index": 2100, "__getitem_": 2100, "__interpol": 2100, "__is_": 2100, "__isnot_": 2100, "__lshift_": 2100, "__not_": 2100, "__or_": 2100, "__range_length": 2100, "__rshift_": 2100, "__xor_": 2100, "_cast_byt": 2100, "_cast_char": 2100, "_cast_doubl": 2100, "_cast_float": 2100, "_cast_half": 2100, "_cast_int": 2100, "_cast_long": 2100, "_cast_short": 2100, "_conj": 2100, "_convolution_mod": 2100, "_dim_arang": 2100, "_pack_padded_sequ": 2100, "_pad_packed_sequ": 2100, "_reshape_from_tensor": 2100, "_sample_dirichlet": 2100, "_set_item": 2100, "_shape_as_tensor": 2100, "_standard_gamma": 2100, "_uniqu": 2100, "_unique2": 2100, "_weight_norm": 2100, "conv1d_relu": 2100, "conv2d_relu": 2100, "conv3d_relu": 2100, "embedding_renorm": 2100, "floordiv": [2100, 2106], "linear_relu": [2100, 2106], "nonzero_numpi": 2100, "numpy_t": 2100, "unchecked_cast": 2100, "unique_dim": 2100, "_c10d_function": 2100, "all_gather_into_tensor_coalesc": 2100, "all_gather_into_tensor_out": 2100, "all_reduce_coalesc": 2100, "reduce_scatter_tensor_coalesc": 2100, "wait_tensor": 2100, "_c10d_functional_autograd": 2100, "_dtensor": 2100, "shard_dim_alltoal": 2100, "_quantiz": 2100, "conv2d_prepack": 2100, "conv3d_prepack": 2100, "conv_transpose1d_prepack": 2100, "conv_transpose2d_prepack": 2100, "conv_transpose3d_prepack": 2100, "linear_dynam": 2100, "linear_prepack": 2100, "linear_prepack_fp16": 2100, "linear_prepack_fp16_legaci": 2100, "linear_prepack_legaci": 2100, "wrapped_fbgemm_linear_fp16_weight": 2100, "wrapped_fbgemm_pack_gemm_matrix_fp16": 2100, "_test": 2100, "get_first": 2100, "compleximplicit": 2100, "floatimplicit": 2100, "intimplicit": 2100, "__iand_": 2100, "__ilshift_": 2100, "__ior_": 2100, "__irshift_": 2100, "__ixor_": 2100, "__round_to_zero_floordiv": 2100, "__upsampl": 2100, "__upsample_bilinear": 2100, "__upsample_nearest": 2100, "_adaptive_avg_pool2d": [2100, 2140], "_adaptive_avg_pool3d": [2100, 2140], "_add_batch_dim": 2100, "_add_relu": 2100, "_addmm_activ": 2100, "_aminmax": 2100, "_amp_foreach_non_finite_check_and_unscal": 2100, "_amp_update_scal": 2100, "_assert_async": 2100, "_assert_tensor_metadata": 2100, "_autocast_to_full_precis": 2100, "_autocast_to_reduced_precis": 2100, "_batch_norm_impl_index": 2100, "_batch_norm_no_upd": 2100, "_batch_norm_with_upd": 2100, "_batch_norm_with_update_funct": 2100, "_cdist_forward": [2100, 2140], "_cholesky_solve_help": 2100, "_choose_qparams_per_tensor": 2100, "_chunk_cat": 2100, "_coalesc": 2100, "_compute_linear_combin": 2100, "_conj_copi": 2100, "_conj_phys": 2100, "_conv_depthwise2d": 2100, "_convert_indices_from_coo_to_csr": 2100, "_convert_indices_from_csr_to_coo": 2100, "_convert_weight_to_int4pack": 2100, "_copy_from": 2100, "_copy_from_and_res": 2100, "_cslt_compress": 2100, "_cslt_sparse_mm": 2100, "_cslt_sparse_mm_search": 2100, "_ctc_loss": 2100, "_cudnn_ctc_loss": 2100, "_cudnn_init_dropout_st": 2100, "_cudnn_rnn": 2100, "_cudnn_rnn_flatten_weight": 2100, "_cufft_clear_plan_cach": 2100, "_cufft_get_plan_cache_max_s": 2100, "_cufft_get_plan_cache_s": 2100, "_cufft_set_plan_cache_max_s": 2100, "_cummax_help": 2100, "_cummin_help": 2100, "_debug_has_internal_overlap": 2100, "_dimi": 2100, "_dimv": 2100, "_dirichlet_grad": 2100, "_efficient_attention_forward": 2100, "_efficientzerotensor": 2100, "_embedding_bag": [2100, 2140], "_embedding_bag_forward_onli": 2100, "_empty_affine_quant": 2100, "_empty_per_channel_affine_quant": 2100, "_euclidean_dist": 2100, "_fake_quantize_learnable_per_channel_affin": 2100, "_fake_quantize_learnable_per_tensor_affin": 2100, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 2100, "_fft_c2c": 2100, "_fft_c2r": 2100, "_fft_r2c": 2100, "_fill_mem_eff_dropout_mask": 2100, "_flash_attention_forward": 2100, "_foobar": [2100, 2145], "_foreach_ab": 2100, "_foreach_aco": 2100, "_foreach_add": 2100, "_foreach_addcdiv": 2100, "_foreach_addcmul": 2100, "_foreach_asin": 2100, "_foreach_atan": 2100, "_foreach_ceil": 2100, "_foreach_clamp_max": 2100, "_foreach_clamp_min": 2100, "_foreach_copi": 2100, "_foreach_co": 2100, "_foreach_cosh": 2100, "_foreach_div": 2100, "_foreach_erf": 2100, "_foreach_erfc": 2100, "_foreach_exp": 2100, "_foreach_expm1": 2100, "_foreach_floor": 2100, "_foreach_frac": 2100, "_foreach_lerp": 2100, "_foreach_lgamma": 2100, "_foreach_log": 2100, "_foreach_log10": 2100, "_foreach_log1p": 2100, "_foreach_log2": 2100, "_foreach_max": 2100, "_foreach_maximum": 2100, "_foreach_minimum": 2100, "_foreach_mul": 2100, "_foreach_neg": 2100, "_foreach_norm": 2100, "_foreach_pow": 2100, "_foreach_reciproc": 2100, "_foreach_round": 2100, "_foreach_sigmoid": 2100, "_foreach_sign": 2100, "_foreach_sin": 2100, "_foreach_sinh": 2100, "_foreach_sqrt": 2100, "_foreach_sub": 2100, "_foreach_tan": 2100, "_foreach_tanh": 2100, "_foreach_trunc": 2100, "_foreach_zero": 2100, "_functional_assert_async": 2100, "_functional_assert_scalar": 2100, "_functional_sym_constrain_rang": 2100, "_functional_sym_constrain_range_for_s": 2100, "_fused_adagrad": 2100, "_fused_adam": 2100, "_fused_adamw": 2100, "_fused_dropout": 2100, "_fused_moving_avg_obs_fq_help": [2100, 2130], "_fused_moving_avg_obs_fq_helper_funct": [2100, 2130], "_fused_sdp_choic": 2100, "_fused_sgd": 2100, "_fw_primal": 2100, "_fw_primal_copi": 2100, "_get_cpu_cap": 2100, "_get_tracing_st": 2100, "_grad_sum_to_s": 2100, "_has_compatible_shallow_copy_typ": 2100, "_has_same_storage_numel": 2100, "_histogramdd_bin_edg": 2100, "_histogramdd_from_bin_ct": 2100, "_histogramdd_from_bin_tensor": 2100, "_index_put_impl": 2100, "_indices_copi": 2100, "_infer_s": 2100, "_int_mm": 2100, "_is_all_tru": 2100, "_is_any_tru": 2100, "_is_zerotensor": 2100, "_jagged_to_padded_dense_forward": 2100, "_lazy_clon": 2100, "_linalg_check_error": 2100, "_linalg_det": 2100, "_linalg_eigh": 2100, "_linalg_eigv": 2100, "_linalg_slogdet": 2100, "_linalg_solve_ex": 2100, "_linalg_svd": 2100, "_list_to_tensor": 2100, "_local_scalar_dens": [2100, 2130, 2140], "_logcumsumexp": 2100, "_lstm_mp": 2100, "_make_dep_token": 2100, "_make_du": 2100, "_make_dual_copi": 2100, "_make_per_channel_quantized_tensor": 2100, "_make_per_tensor_quantized_tensor": 2100, "_masked_scal": 2100, "_masked_softmax": 2100, "_mixed_dtypes_linear": 2100, "_mkldnn_reshap": 2100, "_mkldnn_transpos": 2100, "_mps_convolut": 2100, "_mps_convolution_transpos": 2100, "_native_batch_norm_legit": [2100, 2140], "_native_batch_norm_legit_funct": 2100, "_native_batch_norm_legit_no_train": [2100, 2140], "_native_multi_head_attent": 2100, "_ncf_unsqueez": 2100, "_ncf_view": 2100, "_neg_view": 2100, "_neg_view_copi": 2100, "_nested_compute_contiguous_strides_offset": 2100, "_nested_from_pad": 2100, "_nested_from_padded_and_nested_exampl": 2100, "_nested_get_jagged_dummi": 2100, "_nested_get_length": 2100, "_nested_get_max_seqlen": 2100, "_nested_get_min_seqlen": 2100, "_nested_get_offset": 2100, "_nested_get_ragged_idx": 2100, "_nested_get_valu": 2100, "_nested_get_values_copi": 2100, "_nested_tensor_from_mask": 2100, "_nested_tensor_from_mask_left_align": 2100, "_nested_tensor_from_tensor_list": 2100, "_nested_tensor_s": 2100, "_nested_tensor_softmax_with_shap": 2100, "_nested_tensor_storage_offset": 2100, "_nested_tensor_strid": 2100, "_nested_view_from_buff": 2100, "_nested_view_from_buffer_copi": 2100, "_nested_view_from_jag": 2100, "_nested_view_from_jagged_copi": 2100, "_new_zeros_with_same_feature_meta": 2100, "_nnpack_avail": 2100, "_nnpack_spatial_convolut": 2100, "_no_grad_embedding_renorm": 2100, "_no_grad_fil": 2100, "_no_grad_norm": 2100, "_no_grad_uniform": 2100, "_no_grad_zero": 2100, "_pack_sequ": 2100, "_pad_circular": 2100, "_pad_enum": 2100, "_padded_dense_to_jagged_forward": 2100, "_pdist_forward": [2100, 2140], "_pin_memori": 2100, "_prelu_kernel": 2100, "_print": 2100, "_propagate_xla_data": 2100, "_remove_batch_dim": 2100, "_reshape_alia": 2100, "_reshape_alias_copi": 2100, "_reshape_copi": 2100, "_resize_output": 2100, "_rowwise_prun": 2100, "_safe_softmax": 2100, "_saturate_weight_to_fp16": 2100, "_scaled_dot_product_attention_math": 2100, "_scaled_dot_product_attention_math_for_mp": 2100, "_scaled_dot_product_cudnn_attent": 2100, "_scaled_dot_product_efficient_attent": 2100, "_scaled_dot_product_flash_attent": 2100, "_scaled_dot_product_flash_attention_for_cpu": 2100, "_scaled_dot_product_fused_attention_overrid": 2100, "_scaled_mm": 2100, "_size_if_not_equ": 2100, "_slow_conv2d_forward": 2100, "_sobol_engine_draw": 2100, "_sobol_engine_ff": 2100, "_sobol_engine_initialize_st": 2100, "_sobol_engine_scrambl": 2100, "_softmax": [2100, 2115, 2140], "_sparse_addmm": 2100, "_sparse_broadcast_to": 2100, "_sparse_broadcast_to_copi": 2100, "_sparse_bsc_tensor_unsaf": 2100, "_sparse_bsr_tensor_unsaf": 2100, "_sparse_compressed_tensor_unsaf": 2100, "_sparse_compressed_tensor_with_dim": 2100, "_sparse_coo_tensor_unsaf": 2100, "_sparse_coo_tensor_with_dim": 2100, "_sparse_coo_tensor_with_dims_and_tensor": 2100, "_sparse_csc_tensor_unsaf": 2100, "_sparse_csr_prod": 2100, "_sparse_csr_sum": 2100, "_sparse_csr_tensor_unsaf": 2100, "_sparse_log_softmax": 2100, "_sparse_mask_project": 2100, "_sparse_mm": 2100, "_sparse_mm_reduce_impl": 2100, "_sparse_semi_structured_addmm": 2100, "_sparse_semi_structured_appli": 2100, "_sparse_semi_structured_apply_dens": 2100, "_sparse_semi_structured_linear": 2100, "_sparse_semi_structured_mm": 2100, "_sparse_semi_structured_til": 2100, "_sparse_softmax": 2100, "_sparse_sparse_matmul": 2100, "_sparse_sum": 2100, "_spdiag": 2100, "_standard_gamma_grad": 2100, "_tensor_to_list": 2100, "_test_ambiguous_default": 2100, "_test_autograd_multiple_dispatch": 2100, "_test_autograd_multiple_dispatch_view": 2100, "_test_autograd_multiple_dispatch_view_copi": 2100, "_test_check_tensor": 2100, "_test_functorch_fallback": 2100, "_test_optional_filled_intlist": 2100, "_test_optional_floatlist": 2100, "_test_optional_intlist": 2100, "_test_parallel_materi": 2100, "_test_serialization_subcmul": 2100, "_test_string_default": 2100, "_test_warn_in_autograd": 2100, "_thnn_fused_gru_cel": 2100, "_thnn_fused_lstm_cel": 2100, "_to_copi": [2100, 2140], "_to_cpu": 2100, "_to_dens": 2100, "_to_spars": 2100, "_to_sparse_bsc": 2100, "_to_sparse_bsr": 2100, "_to_sparse_csc": 2100, "_to_sparse_csr": 2100, "_to_sparse_semi_structur": 2100, "_transform_bias_rescale_qkv": 2100, "_transformer_encoder_layer_fwd": 2100, "_trilinear": 2100, "_triton_multi_head_attent": 2100, "_triton_scaled_dot_attent": 2100, "_unpack_du": 2100, "_unsafe_index": 2100, "_unsafe_index_put": 2100, "_unsafe_masked_index": 2100, "_unsafe_masked_index_put_accumul": 2100, "_unsafe_view": 2100, "_unwrap_opt": 2100, "_upsample_bicubic2d_aa": 2100, "_upsample_bilinear2d_aa": 2100, "_upsample_nearest_exact1d": 2100, "_upsample_nearest_exact2d": 2100, "_upsample_nearest_exact3d": 2100, "_use_cudnn_ctc_loss": 2100, "_use_cudnn_rnn_flatten_weight": 2100, "_validate_compressed_sparse_indic": 2100, "_validate_sparse_bsc_tensor_arg": 2100, "_validate_sparse_bsr_tensor_arg": 2100, "_validate_sparse_compressed_tensor_arg": 2100, "_validate_sparse_coo_tensor_arg": 2100, "_validate_sparse_csc_tensor_arg": 2100, "_validate_sparse_csr_tensor_arg": 2100, "_values_copi": 2100, "_weight_int4pack_mm": 2100, "_weight_int8pack_mm": 2100, "_weight_norm_interfac": 2100, "capit": 2100, "confirmed_by_own": [2100, 2109], "convolution_overrid": 2100, "copy_sparse_to_spars": 2100, "endswith": 2100, "expandtab": 2100, "fake_quantize_per_channel_affine_cachemask": 2100, "fake_quantize_per_tensor_affine_cachemask": 2100, "fill_diagon": 2100, "glu_jvp": 2100, "has_torch_funct": [2100, 2146], "is_non_overlapping_and_dens": 2100, "is_own": [2100, 2109], "is_strides_like_format": 2100, "isalnum": 2100, "isalpha": 2100, "isdecim": 2100, "isdigit": 2100, "isidentifi": 2100, "islow": 2100, "isnumer": 2100, "isprint": 2100, "isspac": 2100, "istitl": 2100, "isupp": 2100, "lift_fresh": 2100, "ljust": 2100, "local_valu": [2100, 2109], "log_sigmoid_forward": 2100, "lstrip": 2100, "matrix_h": 2100, "nll_loss2d_forward": 2100, "nll_loss_forward": 2100, "normal_funct": 2100, "owner_nam": [2100, 2109], "percentformat": 2100, "quantized_gru": 2100, "quantized_lstm": 2100, "resize_as_spars": 2100, "rfind": 2100, "rindex": 2100, "rjust": 2100, "rpartit": 2100, "rsplit": 2100, "rstrip": 2100, "set_data": 2100, "slow_conv3d_forward": 2100, "sparse_res": 2100, "sparse_resize_and_clear": 2100, "splitlin": 2100, "swapcas": 2100, "sym_numel": [2100, 2140], "sym_storage_offset": [2100, 2140], "sym_strid": [2100, 2140], "unique_dim_consecut": 2100, "zfill": 2100, "_allgather_bas": 2100, "_reduce_scatter_bas": 2100, "allgath": 2100, "allgather_coalesc": 2100, "allgather_into_tensor_coalesc": 2100, "allreduce_coalesc": 2100, "alltoal": 2100, "alltoall_bas": 2100, "recv_any_sourc": 2100, "debugprim": 2100, "load_tensor": 2100, "_alloc_from_pool": 2100, "_mm_plus_mm": 2100, "_reinterpret_tensor": 2100, "accumulate_grad": 2100, "resize_storage_byt": 2100, "_mkl_linear": 2100, "_mkl_reorder_linear_weight": 2100, "_convolution_pointwis": 2100, "_convolution_transpose_pointwis": 2100, "_get_mkldnn_serialized_md": 2100, "_is_mkldnn_acl_support": 2100, "_is_mkldnn_bf16_support": 2100, "_is_mkldnn_fp16_support": 2100, "_linear_pointwis": 2100, "_nbyte": 2100, "_reorder_convolution_transpose_weight": 2100, "_reorder_convolution_weight": 2100, "_reorder_linear_weight": 2100, "_reorder_mkldnn_rnn_layer_weight": 2100, "mkldnn_prepack": 2100, "conv2d_run": 2100, "qconv1d_pointwis": 2100, "qconv2d_pointwis": 2100, "qconv3d_pointwis": 2100, "qconv_prepack": 2100, "qlinear_pointwis": 2100, "qlinear_prepack": 2100, "conv2d_clamp_prepack": 2100, "conv2d_clamp_run": 2100, "conv2d_transpose_clamp_prepack": 2100, "conv2d_transpose_clamp_run": 2100, "linear_clamp_prepack": 2100, "linear_clamp_run": 2100, "unpack_prepacked_sizes_conv2d": 2100, "unpack_prepacked_sizes_linear": 2100, "addstatvalu": 2100, "autogradadd": 2100, "autogradallnonzero": 2100, "autogradallzero": 2100, "autogradanynonzero": 2100, "autogradzero": 2100, "bailout": [2100, 2132], "bailouttempl": 2100, "broadcastmkldnntensor": 2100, "broadcasts": 2100, "chunksiz": 2100, "constantmkldnntensor": 2100, "differentiablegraph": 2100, "enumnam": 2100, "enumvalu": 2100, "fallbackgraph": 2100, "fusedconcat": 2100, "fusiongroup": 2100, "ifthenels": 2100, "ignoredpythonop": 2100, "mkldnnclamp": 2100, "mkldnnhardsigmoid": 2100, "mkldnnhardswish": 2100, "mkldnnhardtanh": 2100, "mkldnnlayernorm": 2100, "mkldnnscalarmul": 2100, "mmbatchsid": 2100, "mmtreereduc": 2100, "modulecontainerindex": 2100, "numtotensor": 2100, "raiseexcept": 2100, "reductions": 2100, "requiresgradcheck": 2100, "staticruntimecopyout": 2100, "staticsubgraph": 2100, "stringindex": 2100, "tensorexprdynamicgroup": 2100, "tensorexprdynamicguard": 2100, "tensorexprgroup": 2100, "timepoint": 2100, "tupleindex": 2100, "tupleunpack": 2100, "varconcat": 2100, "varstack": 2100, "awaitable_nowait": 2100, "awaitable_wait": 2100, "is_cpu": 2100, "is_ipu": 2100, "is_maia": 2100, "is_mkldnn": 2100, "is_mp": 2100, "is_mtia": 2100, "is_nest": 2100, "is_quant": 2100, "is_vulkan": 2100, "is_xla": 2100, "is_xpu": 2100, "onednnfusiongroup": 2100, "onednnfusionguard": 2100, "profile_ivalu": 2100, "rangelist": 2100, "rpc_remot": 2100, "unchecked_unwrap_opt": 2100, "_make_token": [2100, 2140], "_sink_token": [2100, 2140], "bessel_i0": [2100, 2140], "bessel_i1": [2100, 2140], "bessel_j0": [2100, 2115, 2140], "bessel_j1": [2100, 2115, 2140], "broadcast_in_dim": [2100, 2140], "cbrt": [2100, 2140], "collapse_view": [2100, 2140], "convert_element_typ": [2100, 2140], "copy_strid": [2100, 2140], "copy_to": [2100, 2140], "device_put": [2100, 2140], "erf_inv": [2100, 2140], "erfcx": [2100, 2115, 2140], "fft_c2c": [2100, 2140], "fft_c2r": [2100, 2140], "fft_r2c": [2100, 2140], "iota": [2100, 2140], "maximum_valu": [2100, 2140], "minimum_valu": [2100, 2140], "ndtri": [2100, 2115, 2140], "rev": [2100, 2140], "shift_left": [2100, 2140], "shift_right_arithmet": [2100, 2140], "slice_in_dim": [2100, 2140], "spherical_bessel_j0": [2100, 2115, 2140], "view_of": [2100, 2140], "view_of_dtyp": [2100, 2140], "xor_sum": [2100, 2140], "_call_end_callbacks_on_jit_fut": 2100, "_record_function_ent": 2100, "_record_function_enter_new": 2100, "_record_function_exit": 2100, "_bfloat16quantizedtofloat": 2100, "_floattobfloat16quant": 2100, "add_out": 2100, "add_relu_out": 2100, "add_scalar_out": 2100, "add_scalar_relu": 2100, "add_scalar_relu_out": 2100, "batch_norm1d": 2100, "batch_norm1d_relu": 2100, "batch_norm2d": 2100, "batch_norm2d_relu": 2100, "batch_norm3d": 2100, "batch_norm3d_relu": 2100, "batch_norm_relu": 2100, "cat_out": 2100, "cat_relu": 2100, "cat_relu_out": 2100, "conv1d_dynam": 2100, "conv1d_prepack": 2100, "conv1d_unpack": 2100, "conv2d_add": 2100, "conv2d_add_relu": 2100, "conv2d_dil": 2100, "conv2d_dynam": 2100, "conv2d_group": 2100, "conv2d_output_pad": 2100, "conv2d_pad": 2100, "conv2d_strid": 2100, "conv2d_transpos": 2100, "conv2d_unpack": 2100, "conv2d_unpack_s": 2100, "conv3d_dil": 2100, "conv3d_dynam": 2100, "conv3d_group": 2100, "conv3d_output_pad": 2100, "conv3d_pad": 2100, "conv3d_strid": 2100, "conv3d_transpos": 2100, "conv3d_unpack": 2100, "conv_prepack": 2100, "conv_transpose1d_dynam": 2100, "conv_transpose1d_unpack": 2100, "conv_transpose2d_dil": 2100, "conv_transpose2d_dynam": 2100, "conv_transpose2d_group": 2100, "conv_transpose2d_output_pad": 2100, "conv_transpose2d_pad": 2100, "conv_transpose2d_strid": 2100, "conv_transpose2d_transpos": 2100, "conv_transpose2d_unpack": 2100, "conv_transpose3d_dil": 2100, "conv_transpose3d_dynam": 2100, "conv_transpose3d_group": 2100, "conv_transpose3d_output_pad": 2100, "conv_transpose3d_pad": 2100, "conv_transpose3d_strid": 2100, "conv_transpose3d_transpos": 2100, "conv_transpose3d_unpack": 2100, "conv_unpack": 2100, "embedding_4bit": 2100, "embedding_bag_2bit_prepack": 2100, "embedding_bag_2bit_rowwise_offset": 2100, "embedding_bag_2bit_unpack": 2100, "embedding_bag_4bit": 2100, "embedding_bag_4bit_prepack": 2100, "embedding_bag_4bit_rowwise_offset": 2100, "embedding_bag_4bit_unpack": 2100, "embedding_bag_byt": 2100, "embedding_bag_byte_prepack": 2100, "embedding_bag_byte_rowwise_offset": 2100, "embedding_bag_byte_unpack": 2100, "embedding_bag_prepack": 2100, "embedding_bag_unpack": 2100, "embedding_byt": 2100, "linear_dynamic_fp16": 2100, "linear_dynamic_fp16_unpacked_weight": 2100, "linear_leaky_relu": 2100, "linear_relu_dynam": 2100, "linear_relu_dynamic_fp16": 2100, "linear_tanh": 2100, "linear_unpack": 2100, "linear_unpack_fp16": 2100, "linear_with_input_q_dq_qweight_dq_output_fp32": 2100, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 2100, "make_quantized_cell_param": 2100, "make_quantized_cell_params_dynam": 2100, "make_quantized_cell_params_fp16": 2100, "mul_out": 2100, "mul_relu": 2100, "mul_relu_out": 2100, "mul_scalar_out": 2100, "mul_scalar_relu": 2100, "mul_scalar_relu_out": 2100, "quantized_gru_cell_dynam": 2100, "quantized_lstm_cell_dynam": 2100, "quantized_rnn_relu_cell_dynam": 2100, "quantized_rnn_tanh_cell_dynam": 2100, "rngprim": 2100, "philox_rand": 2100, "qlinear": 2100, "qlinear_dynam": 2100, "qlinear_relu": 2100, "qlinear_relu_dynam": 2100, "qlinear_unpack": 2100, "static_runtim": 2100, "vartupleunpack": 2100, "clamp_nan_to_num": 2100, "create_owned_ref": 2100, "dequantize_copi": 2100, "dict_unpack": 2100, "expand_dims_copi": 2100, "flatten_copi": 2100, "fused_equally_split": 2100, "reshape_copi": 2100, "select_tensor": 2100, "signed_log1p": 2100, "to_copi": 2100, "to_maybe_copy_out": 2100, "var1": 2101, "var2": 2101, "bias_param": 2101, "adadelta": 2101, "adafactor": 2101, "adamax": 2101, "asgd": 2101, "nadam": 2101, "radam": 2101, "rmsprop": 2101, "rprop": 2101, "lrschedul": 2101, "reducelronplateau": 2101, "multisteplr": 2101, "swa_util": 2101, "averagedmodel": 2101, "swalr": 2101, "update_bn": 2101, "optima": 2101, "polyak": 2101, "averaged_model": 2101, "multi_avg_fn": 2101, "get_ema_multi_avg_fn": 2101, "textrm": 2101, "update_paramet": 2101, "avg_fn": 2101, "_foreach": 2101, "ema_model": 2101, "ema_avg": 2101, "averaged_model_paramet": 2101, "model_paramet": 2101, "num_averag": 2101, "swa_schedul": 2101, "anneal_epoch": 2101, "swa_lr": 2101, "swa_model": 2101, "cosineannealinglr": 2101, "swa_start": 2101, "test_input": 2101, "secur": 2102, "unpackag": 2102, "exercis": 2102, "unzip": 2102, "my_packag": 2102, "freeli": 2102, "94304870911616": 2102, "94304900784016": 2102, "extern_modul": 2102, "model_1": 2102, "myzip": 2102, "file_byt": 2102, "writestr": 2102, "new_file_byt": 2102, "vim": 2102, "vimrc": 2102, "bufreadcmd": 2102, "brows": 2102, "amatch": 2102, "vi": 2102, "packageimport": 2102, "queryabl": 2102, "glob": 2102, "packageexport": 2102, "pe": 2102, "save_pickl": 2102, "has_fil": 2102, "importer_file_structur": 2102, "package_a": 2102, "get_rdep": 2102, "all_path": 2102, "dependency_graph_str": 2102, "save_text": 2102, "save_binari": 2102, "my_resourc": 2102, "config_stuff": 2102, "raw_data": 2102, "my_byt": 2102, "complementari": [2102, 2115], "load_pickl": 2102, "load_text": 2102, "load_binari": 2102, "my_tensor": 2102, "__reduce_package__": 2102, "my_str": 2102, "time_import": 2102, "time_export": 2102, "pickler": 2102, "persistent_id": 2102, "persistent_load": 2102, "generated_module_nam": 2102, "get_unique_id": 2102, "clock_gettim": 2102, "unpackage_foo": 2102, "depickl": 2102, "foo_1": 2102, "foo_2": 2102, "foo_packag": 2102, "foo_collect": 2102, "foo1": 2102, "foo2": 2102, "imported_foo": 2102, "9857706": 2102, "650140837": 2102, "652698385": 2102, "__torch_package__": 2102, "is_in_packag": 2102, "userexcept": 2102, "unpackageableexcept": 2102, "loaded_modul": 2102, "import_modul": 2102, "save_source_str": 2102, "save_modul": 2102, "textwrap": 2102, "dedent": 2102, "my_funct": 2102, "is_packag": 2102, "importlib": 2102, "my_pickl": 2102, "get_my_resourc": 2102, "read_text": 2102, "torch_package_import": 2102, "get_my_pickl": 2102, "is_from_packag": 2102, "stdlib": 2102, "my_test": 2102, "f2": 2102, "sys_import": 2102, "script_model": 2102, "mixed_model": 2102, "python_model_with_scripted_submodul": 2102, "loaded_script": 2102, "loaded_mix": 2102, "convention": 2102, "94286146172688": 2102, "94286146172784": 2102, "consult": [2102, 2132], "essai": 2102, "another_packag": 2102, "pickletool": 2102, "ast": 2102, "deni": 2102, "my_export": 2102, "my_interned_modul": 2102, "package_export": 2102, "my_externed_modul": 2102, "my_mocked_modul": 2102, "unwant": [2102, 2119], "hodg": 2102, "podg": 2102, "bazel": 2102, "buck": 2102, "my_class_inst": 2102, "imported_myclass": 2102, "okai": 2102, "torch_package_0": 2102, "handle_me_this_wai": 2102, "inadvert": 2102, "pun": 2102, "packagingerror": 2102, "dependency_graph": 2102, "emptymatcherror": 2102, "allow_empti": 2102, "_sysimport": 2102, "hermet": 2102, "scan": 2102, "orderedimport": 2102, "add_depend": 2102, "graphviz": 2102, "lang": 2102, "denied_modul": 2102, "my_subpackag": 2102, "digraph": 2102, "externed_modul": 2102, "interned_modul": 2102, "mocked_modul": 2102, "register_extern_hook": 2102, "register_intern_hook": 2102, "register_mock_hook": 2102, "myobject": 2102, "save_source_fil": 2102, "file_or_directori": 2102, "my_subsubpackag": 2102, "file_or_buff": 2102, "module_allow": 2102, "pytorchfileread": 2102, "python_vers": 2102, "is_dir": 2102, "_kinetoprofil": 2103, "execution_trace_observ": 2103, "profileract": 2103, "export_memory_timelin": 2103, "executiontraceobserv": 2103, "add_metadata": 2103, "add_metadata_json": 2103, "unaggreg": 2103, "suffix": [2103, 2119, 2120], "png": 2103, "gzip": 2103, "numbyt": 2103, "increment_vers": 2103, "_memory_profil": 2103, "export_stack": 2103, "self_cuda_time_tot": 2103, "preset_metadata_json": 2103, "preset": 2103, "toggle_collection_dynam": 2103, "on_trace_readi": 2103, "record_and_sav": 2103, "tensorboard_trace_handl": 2103, "dir_nam": 2103, "logdir": [2103, 2119], "plugin": [2103, 2119, 2131], "code_to_profil": 2103, "row_limit": 2103, "trace_handl": 2103, "test_trace_": 2103, "step_num": 2103, "code_iteration_to_profil": 2103, "register_callback": 2103, "execution_trac": 2103, "test_execution_trace_with_kineto": 2103, "test_profil": 2103, "_itraceobserv": 2103, "skip_first": 2103, "worker_nam": [2103, 2109], "use_gzip": 2103, "range_push": 2103, "range_pop": 2103, "4x": 2104, "88": [2104, 2139], "14k": 2104, "domin": 2104, "previous_layer_fp32": 2104, "linear_fp32": 2104, "activation_fp32": 2104, "next_layer_fp32": 2104, "linear_weight_fp32": 2104, "linear_int8_w_fp32_inp": 2104, "linear_weight_int8": 2104, "ptdq": 2104, "fc": 2104, "model_fp32": 2104, "model_int8": 2104, "quantize_dynam": 2104, "input_fp32": 2104, "previous_layer_int8": 2104, "linear_with_activation_int8": 2104, "next_layer_int8": 2104, "ptsq": 2104, "minmax": 2104, "l2norm": 2104, "model_fp32_fus": 2104, "fuse_modul": [2104, 2105], "model_fp32_prepar": 2104, "fq": 2104, "prepare_qat": 2104, "training_loop": 2104, "requant": 2104, "linear1": 2104, "custom_qconfig": 2104, "fxptq": 2104, "model_fp": 2104, "usermodel": 2104, "model_to_quant": 2104, "default_dynamic_qconfig": 2104, "model_prepar": 2104, "model_quant": 2104, "model_fus": 2104, "quantize_pt2": 2104, "prepare_pt2": 2104, "capture_pre_autograd_graph": 2104, "xnnpackquant": 2104, "get_symmetric_quantization_config": 2104, "prepare_qat_pt2": 2104, "convert_pt2": 2104, "per_tensor_symmetr": [2104, 2107], "per_channel_symmetr": [2104, 2107], "per_channel_scal": 2104, "per_channel_zero_point": 2104, "quantized_tensor": 2104, "qengin": 2104, "in4": 2104, "tensorrt": [2104, 2126, 2131, 2136], "fx2trt": 2104, "float_modul": [2104, 2124], "staticquantcustommodul": 2104, "observed_modul": 2104, "default_qconfig": [2104, 2125], "vnni": 2104, "test_quantized_op": 2104, "testquantizedop": 2104, "test_custom_module_lstm": 2104, "test_quantize_fx": 2104, "testquantizefx": 2104, "test_static_lstm": 2104, "some_oper": 2104, "e2": 2104, "thnn_conv2d_forward": 2104, "quantizedcpu": 2104, "some_qconfig": 2104, "linearpackedparam": 2104, "_modul": 2104, "prepare_orig": 2104, "quantized_orig": 2104, "scripted_quant": 2104, "fp32_op": 2105, "int8_op": 2105, "cooperlak": 2105, "audit": 2105, "op_fp32": 2105, "op_int8": 2105, "_numeric_suit": 2105, "_numeric_suite_fx": 2105, "0x7fb084ef68a0": 2106, "0x7fb05df653a0": 2106, "0x7fb05df65430": 2106, "num_tensor_args_to_observation_typ": 2106, "convbn1d": 2106, "0x7fb05be5f790": 2106, "reference_quantized_module_for_root": 2106, "fuse_convtranspose_bn": 2106, "0x7fb05be5f940": 2106, "linearbn1d": 2106, "fuse_linear_bn": 2106, "0x7fb05be5f8b0": 2106, "convbn2d": 2106, "convbn3d": 2106, "bnrelu2d": 2106, "bnrelu3d": 2106, "input_type_to_index": 2106, "conv_fus": 2106, "convbnrelu1d": 2106, "convbnrelu2d": 2106, "convbnrelu3d": 2106, "convrelu1d": 2106, "convrelu3d": 2106, "0x7fb05df654c0": 2106, "0x7fb05df65af0": 2106, "quint4x2": [2106, 2116, 2120, 2121], "embedding_op": 2106, "0x7fb05df68a60": 2106, "00390625": 2106, "0x7fb05df68310": 2106, "0x7fb05df684c0": 2106, "0x7fb05df659d0": 2106, "0x7fb05df688b0": 2106, "0x7fb05def54c0": 2106, "0x7fb05df68940": 2106, "0x7fb05df65ca0": 2106, "linear_fus": 2106, "_sequential_wrapper2": 2106, "0x7fb08c103430": 2106, "0x7fb05df658b0": 2106, "0x7fb055dfb8b0": 2106, "fuse_conv_bn_relu": 2106, "0x7fb05be5f820": 2106, "0x7fb055db6160": 2106, "0x7fb055db61f0": 2106, "0x7fb055db6280": 2106, "0x7fb055db6310": 2106, "0x7fb055db63a0": 2106, "0x7fb055db6430": 2106, "0x7fb055db64c0": 2106, "0x7fb055db6550": 2106, "0x7fb055db65e0": 2106, "0x7fb055db6670": 2106, "0x7fb05df65a60": 2106, "0078125": 2106, "customconfig": 2107, "custom_module_config": 2107, "_caller": 2108, "_devices_kw": 2108, "slowli": 2108, "unind": 2108, "shortcom": 2109, "stitch": 2109, "init_rpc": [2109, 2110], "rpc_backend_opt": 2109, "trainer3": 2109, "parameterserver2": 2109, "backendtyp": 2109, "rpcbackendopt": 2109, "rpcagent": 2109, "transmit": 2109, "calle": [2109, 2111], "_set_rpc_timeout": 2109, "worker0": 2109, "my_script_add": 2109, "wire": 2109, "fut2": 2109, "meth": 2109, "grace": 2109, "userrref": [2109, 2111], "async_execut": 2109, "paus": 2109, "outmost": 2109, "async_add_chain": 2109, "worker2": 2109, "script_add": 2109, "async_add": 2109, "asyncexecutionclass": 2109, "static_async_add": 2109, "class_async_add": 2109, "ret_fut": 2109, "bound_async_add": 2109, "rpc_timeout": 2109, "incid": [2109, 2111], "nvlink": 2109, "multiplex": 2109, "tensorpiperpcbackendopt": 2109, "num_worker_thread": 2109, "device_map": 2109, "_transport": 2109, "tensorpipeag": 2109, "set_device_map": 2109, "intermitt": 2109, "backoff": 2109, "pyrref": 2109, "type_hint": 2109, "_distributed_rpc": 2109, "dist_autograd_ctx_id": 2109, "ctx_id": 2109, "ownerrref": [2109, 2111], "remote_modul": 2109, "forward_async": 2109, "remote_devic": 2109, "workernam": 2109, "ps0": 2109, "remote_linear_modul": 2109, "get_module_rref": 2109, "remote_paramet": 2109, "my_add": [2110, 2146], "t4": 2110, "t5": 2110, "autograd_message_id": 2110, "autograd_context_id": 2110, "send1": 2110, "kickoff": 2110, "recv2": 2110, "heard": 2110, "send2": 2110, "recv1": 2110, "dist_autograd_simpl": 2110, "random_tensor": 2110, "_run_process": 2110, "dst_rank": 2110, "dst_name": 2110, "run_process": 2110, "rrefid": 2111, "transient": 2111, "udf": 2111, "deliveri": 2111, "knowledg": 2111, "danger": 2111, "ancestor": 2111, "trickier": 2111, "forkid": 2111, "ack": 2111, "solid": 2111, "followup": 2111, "lil": 2114, "stark": 2114, "9093": 2114, "1411": 2114, "7568": 2114, "9589": 2114, "2794": 2114, "catastroph": 2114, "9900": 2114, "metadata_mask": 2114, "rce": 2114, "rc": 2114, "62": 2114, "to_sparse_semi_structur": 2114, "1x4": 2114, "16x16": 2114, "a_spars": 2114, "sparsesemistructuredtensor": 2114, "000": 2114, "400": 2114, "plain_dim_s": 2114, "lp64": 2114, "280": 2114, "310": 2114, "sp": 2114, "9078": 2114, "conception": 2114, "sparsesemistructur": 2114, "lobpcg": 2114, "geneig": 2114, "pca_lowrank": 2114, "kindli": 2114, "airy_ai": 2115, "airi": 2115, "9635": 2115, "entr": 2115, "3466": 2115, "int_": 2115, "8427": 2115, "0561": 2115, "4769": 2115, "9213": 2115, "8858": 2115, "7683": 2115, "7481": 2115, "2920": 2115, "int_0": 2115, "gammaln": 2115, "a1": 2115, "a2": 2115, "3528": 2115, "5665": 2115, "6472": 2115, "4335": 2115, "2650": 2115, "2661": 2115, "2796": 2115, "8808": 2115, "3019": 2115, "4658": 2115, "3085": 2115, "2430": 2115, "2070": 2115, "i1": 2115, "5652": 2115, "9534": 2115, "7595": 2115, "2153": 2115, "log_ndtr": 2115, "_ndtr": 2115, "6077": 2115, "7832": 2115, "841": 2115, "6931": 2115, "1728": 2115, "023": 2115, "9331": 2115, "6486": 2115, "1523": 2115, "6516": 2115, "6352": 2115, "6131": 2115, "7169": 2115, "6261": 2115, "displaystyl": 2115, "undefiend": 2115, "6835": 2115, "8474": 2115, "1929": 2115, "7162": 2115, "4180": 2115, "3928": 2115, "4007": 2115, "7586": 2115, "3901": 2115, "5049": 2115, "ndtr": 2115, "0228": 2115, "1587": 2115, "9772": 2115, "9987": 2115, "2p": 2115, "64493": 2115, "4041": 2115, "8288": 2115, "4939": 2115, "4091": 2115, "8863": 2115, "771": 2115, "scaled_modified_bessel_k0": 2115, "scaled_modified_bessel_k1": 2115, "2948": 2115, "0267": 2115, "1566": 2115, "9186": 2115, "8631": 2115, "0259": 2115, "1300": 2115, "spheric": 2115, "xlog1pi": 2115, "3863": 2115, "1972": 2115, "6094": 2115, "2189": 2115, "8283": 2115, "7726": 2115, "0986": 2115, "1589": 2115, "hurwitz": 2115, "6449": 2115, "0823": 2115, "wrap_storag": 2116, "complex_doubl": 2116, "from_buff": 2116, "is_hpu": 2116, "pickle_storage_typ": 2116, "_storagebas": 2116, "byteswap": 2116, "posix": 2116, "shm_unlink": 2116, "unlink": 2116, "quint2x4": [2116, 2121], "twelv": 2117, "halftensor": [2117, 2120], "bfloat16tensor": [2117, 2120], "chartensor": [2117, 2120], "shorttensor": [2117, 2120], "binary16": [2117, 2120], "significand": [2117, 2120], "float_tensor": 2117, "double_tensor": 2117, "complex_float_tensor": 2117, "complex_double_tensor": 2117, "int_tensor": 2117, "long_tensor": 2117, "uint_tensor": 2117, "bool_tensor": 2117, "long_zerodim": 2117, "int_zerodim": 2117, "cuda1": 2117, "blogpost": [2118, 2133], "trainset": 2119, "mnist": 2119, "mnist_train": 2119, "trainload": 2119, "grayscal": 2119, "make_grid": 2119, "add_imag": 2119, "add_graph": 2119, "clutter": 2119, "n_iter": 2119, "purge_step": 2119, "max_queu": 2119, "flush_sec": 2119, "filename_suffix": 2119, "current_datetime_hostnam": 2119, "exp1": 2119, "global_step": 2119, "purg": 2119, "event_file_writ": 2119, "eventfilewrit": 2119, "may04_22": 2119, "54_": 2119, "macbook": 2119, "my_experi": 2119, "lr_0": 2119, "1_batch_16": 2119, "locallr_0": 2119, "scalar_valu": 2119, "walltim": 2119, "new_styl": 2119, "double_precis": 2119, "blobnam": 2119, "simple_valu": 2119, "main_tag": 2119, "tag_scalar_dict": 2119, "run_14h": 2119, "xsinx": 2119, "xcosx": 2119, "tanx": 2119, "add_histogram": 2119, "max_bin": 2119, "img_tensor": 2119, "dataformat": 2119, "chw": 2119, "hwc": 2119, "hw": 2119, "wh": 2119, "3xhxw": 2119, "img_hwc": 2119, "my_imag": 2119, "my_image_hwc": 2119, "img_batch": 2119, "my_image_batch": 2119, "add_figur": 2119, "add_video": 2119, "vid_tensor": 2119, "fp": 2119, "moviepi": 2119, "add_audio": 2119, "snd_tensor": 2119, "sample_r": 2119, "44100": 2119, "add_text": 2119, "text_str": 2119, "input_to_model": 2119, "use_strict_trac": 2119, "fed": 2119, "add_embed": 2119, "label_img": 2119, "metadata_head": 2119, "projector": 2119, "kwlist": 2119, "add_pr_curv": 2119, "num_threshold": 2119, "pr_curv": 2119, "add_custom_scalar": 2119, "chart": 2119, "categorynam": 2119, "chartnam": 2119, "listofproperti": 2119, "multilin": 2119, "taiwan": 2119, "twse": 2119, "0050": 2119, "2330": 2119, "dow": 2119, "aaa": 2119, "bbb": 2119, "ccc": 2119, "nasdaq": 2119, "add_mesh": 2119, "config_dict": 2119, "threej": 2119, "vertex": 2119, "number_of_vertic": 2119, "vertices_tensor": 2119, "colors_tensor": 2119, "faces_tensor": 2119, "my_mesh": 2119, "add_hparam": 2119, "hparam_dict": 2119, "metric_dict": 2119, "hparam_domain_discret": 2119, "run_nam": 2119, "hparam": 2119, "bsize": 2119, "uint16": [2120, 2136], "uint32": [2120, 2136], "uint64": [2120, 2136], "e4m3": 2120, "e5m2": 2120, "asid": 2120, "58734": 2120, "2209": 2120, "05433": 2120, "tini": [2120, 2121, 2139, 2150], "_like": 2120, "coercion": 2120, "allow_subclass": 2121, "check_devic": 2121, "check_layout": 2121, "6e": 2121, "3e": 2121, "assert_equ": 2121, "000000000000001e": 2121, "1e0": 2121, "argh": 2121, "nfooter": 2121, "66": 2121, "footer": 2121, "exclude_zero": 2121, "1205": 2121, "2282": 2121, "6380": 2121, "default_gener": 2123, "as_integer_ratio": 2123, "is_integ": 2123, "data_dependent_output": 2123, "dynamic_output_shap": 2123, "inplace_view": 2123, "needs_fixed_stride_ord": 2123, "nondeterministic_bitwis": 2123, "nondeterministic_seed": 2123, "pt2_compliant_tag": 2123, "compare_weight": 2124, "float_dict": 2124, "quantized_dict": 2124, "wt_compare_dict": 2124, "qmodel": 2124, "compute_error": 2124, "weight_dict": 2124, "get_logger_dict": 2124, "shadowlogg": 2124, "outputlogg": [2124, 2125], "target_dict": 2124, "q_modul": 2124, "logger_cl": [2124, 2125], "prepare_model_with_stub": 2124, "module_swap_list": 2124, "q_model": 2124, "ob_dict": 2124, "compare_model_stub": 2124, "quantizablebasicblock": 2124, "get_matching_activ": 2124, "act_dict": 2124, "prepare_model_output": 2124, "compare_model_output": 2124, "act_compare_dict": 2124, "weight_comparison": 2125, "extract_weight": 2125, "extend_logger_results_with_comparison": 2125, "compute_sqnr": 2125, "mp_n": 2125, "mq_n": 2125, "add_logg": 2125, "act_comparison": 2125, "extract_logger_info": 2125, "mp_shadows_mq": 2125, "add_shadow_logg": 2125, "shadow_act_comparison": 2125, "extract_shadow_logger_info": 2125, "ref_node_nam": 2125, "prev_node_nam": 2125, "model_nam": 2125, "ref_nam": 2125, "prev_node_target_typ": 2125, "ref_node_target_typ": 2125, "results_typ": 2125, "index_within_arg": 2125, "index_of_arg": 2125, "qconfig_str": 2125, "outputcomparisonlogg": 2125, "x_ref": 2125, "nstracer": 2125, "skipped_module_nam": 2125, "skipped_module_class": 2125, "model_name_a": 2125, "model_a": 2125, "model_name_b": 2125, "model_b": 2125, "base_name_to_sets_of_related_op": 2125, "unmatchable_types_map": 2125, "op_to_type_to_weight_extraction_fn": 2125, "unmatch": 2125, "nsresultstyp": 2125, "name_a": 2125, "name_b": 2125, "should_log_input": 2125, "model_a_with_logg": 2125, "model_b_with_logg": 2125, "model_name_to_use_for_layer_nam": 2125, "node_type_to_io_type_map": 2125, "model_a_shadows_b": 2125, "model_name_1": 2125, "model_name_2": 2125, "comparison_fn": 2125, "comparison_nam": 2125, "prepare_n_shadows_model": 2125, "qconfig_multi_map": 2125, "custom_prepare_fn": 2125, "custom_prepare_kwarg": 2125, "custom_trac": 2125, "args_kwargs_m": 2125, "op_m": 2125, "output_m": 2125, "op_m_n": 2125, "log_m_n": 2125, "log_m_0": 2125, "qconfig_n": 2125, "args_m": 2125, "op_m_prepared_with_qconfig_n": 2125, "out_m_n": 2125, "kwargs_m": 2125, "docblock": 2125, "loggers_set_en": 2125, "loggers_set_save_activ": 2125, "save_activ": 2125, "convert_n_shadows_model": 2125, "custom_convert_fn": 2125, "custom_convert_kwarg": 2125, "extract_results_n_shadows_model": 2125, "print_comparisons_n_shadows_model": 2125, "compute_normalized_l2_error": 2125, "compute_cosine_similar": 2125, "surfac": 2126, "openai": 2126, "ipex": 2126, "torch_tensorrt": 2126, "tvm": 2126, "apach": 2126, "openvino": 2126, "aotinductor": 2126, "dashboard": [2126, 2134, 2139], "nnmodul": 2126, "craft": 2127, "aot_compil": 2127, "torchinductor_freez": 2127, "batch_dim": 2127, "so_path": 2127, "aot_inductor": 2127, "output_path": 2127, "getcwd": 2127, "model_container_runner_cuda": 2127, "model_container_runner_cpu": 2127, "aotimodelcontainerrunnercuda": 2127, "aotimodelcontainerrunnercpu": 2127, "kcuda": 2127, "kcpu": 2127, "aoti_runn": 2127, "runner": 2127, "inputs2": 2127, "cmakelist": 2127, "aoti_exampl": 2127, "cmake_minimum_requir": 2127, "fatal_error": 2127, "find_packag": 2127, "add_execut": 2127, "add_custom_command": 2127, "cmake_current_source_dir": 2127, "target_link_librari": 2127, "set_properti": 2127, "cxx_standard": 2127, "mkdir": 2127, "5184": 2127, "4462": 2127, "4611": 2127, "4744": 2127, "4811": 2127, "4938": 2127, "4193": 2127, "cudafloattyp": 2127, "4883": 2127, "4703": 2127, "simd": 2129, "isa": 2129, "amx": 2129, "collect_env": 2129, "avx512f": 2129, "avx512bw": 2129, "avx512_vnni": 2129, "amx_til": 2129, "amx_bf16": 2129, "amx_int8": 2129, "debut": 2130, "cachingalloc": 2130, "cudagraph_tre": 2130, "cudagraph1": 2130, "cudagraph2": 2130, "mut": 2130, "cudagraph_support_input_mut": 2130, "cudagraph_mark_step_begin": 2130, "profit": 2130, "kb": 2130, "550": 2130, "enjoi": 2130, "cudagraph_skip_dynamic_graph": 2130, "dense_to_jag": 2130, "jagged_to_padded_dens": 2130, "run_and_save_rng_st": 2130, "run_with_rng_st": 2130, "unintend": 2130, "prematur": 2130, "mark_step_begin": 2130, "my_custom_backend": 2131, "f_opt": 2131, "my_compil": [2131, 2134], "torch_dynamo_backend": 2131, "your_modul": 2131, "minifi": [2131, 2136], "aot_autograd": 2131, "fw_compil": 2131, "bw_compil": 2131, "make_boxed_func": 2131, "model_opt": 2131, "0x7f1a894649a8": 2131, "mockmodul": 2131, "optimized_mod": 2131, "toy_exampl": [2131, 2134, 2136, 2145], "abs_1": [2131, 2134], "0x7f8d259298a0": 2131, "superior": 2131, "optimize_for_inference_compil": 2131, "code_to_acceler": 2131, "lookup_backend": 2131, "trt_compil": 2131, "inductor_compil": 2131, "recognit": 2132, "induct": 2132, "mark_dynam": [2132, 2133], "shapeenv": [2132, 2135], "reusabl": 2132, "plumb": 2132, "symnodeimpl": 2132, "python_symnod": 2132, "_meta_registr": 2132, "decomp": [2132, 2135], "primtorch": [2132, 2135], "apparatu": 2132, "constrain_rang": 2132, "wherebi": 2132, "blame": 2133, "insan": 2133, "backtrac": [2133, 2135, 2145], "blindli": 2133, "arduou": 2133, "l_x_": 2133, "l_y_": 2133, "l_n_": 2133, "sequel": 2133, "_convert_frame_assert": 2133, "variabletrack": 2133, "listvari": 2133, "constantvari": [2133, 2136, 2145], "tensorvari": [2133, 2136, 2145], "variablebuild": 2133, "_wrap": 2133, "userdefinedobjectvari": 2133, "sourcebuild": 2133, "load_glob": [2133, 2134], "torchingraphfunctionvari": 2133, "instructortranslatorbas": 2133, "symbolic_convert": [2133, 2145], "instructiontranslatorbas": 2133, "build_list": 2133, "inst": 2133, "popn": 2133, "argval": 2133, "mutable_loc": 2133, "mutableloc": 2133, "instructiontransl": 2133, "wrap_fx_proxi": 2133, "overkil": 2133, "___check_type_id": 2133, "94334122025024": 2133, "9433": 2133, "getitemsourc": 2133, "94439025877664": 2133, "94439025840192": 2133, "saw": 2133, "l_a_": [2133, 2134], "l_b_": [2133, 2134], "__compiled_fn_1": 2133, "check_tensor": [2133, 2134], "maybe_mark_dynam": 2133, "mark_stat": 2133, "symnodevari": 2133, "812": 2133, "evaluate_expr": 2133, "django": 2133, "rust": 2133, "choke": 2133, "doctr_det_predictor": 2133, "cv2": 2133, "postprocess": 2133, "confess": 2133, "revisit": 2133, "__compiled_fn_0": [2133, 2134], "load_fast": [2133, 2134], "store_fast": [2133, 2134], "graph_out_0": 2133, "load_const": [2133, 2134], "binary_subscr": 2133, "__resume_at_14_1": 2133, "rot_two": 2133, "resume_in_fn": 2133, "__compiled_fn_2": 2133, "unpack_sequ": [2133, 2134], "l6": 2133, "l8": 2133, "l20": 2133, "l22": 2133, "hamper": 2133, "ride": 2133, "demystifi": 2133, "literatur": 2133, "eval_fram": [2133, 2134], "lingo": 2133, "interestingli": 2133, "523": 2134, "watch": 2134, "kaichao": 2134, "_dynamo_dynamic_indic": 2134, "utils_devic": 2134, "___skip_backend_check": 2134, "___current_backend": 2134, "___lookup_backend": 2134, "140355900538256": 2134, "dispatchkeyset": 2134, "backendselect": 2134, "adinplaceorview": 2134, "autogradcpu": 2134, "recaptur": 2134, "decompil": 2134, "depyf": 2134, "eval_with_kei": 2134, "0x7f9ca082f8a0": 2134, "load_method": 2134, "binary_add": 2134, "binary_true_divid": 2134, "compare_op": 2134, "pop_jump_if_fals": 2134, "binary_multipli": 2134, "__resume_at_30_1": 2134, "__resume_at_38_2": 2134, "__temp_1": 2134, "youkaichao": 2134, "__resume_at_": 2134, "jump_absolut": 2134, "resume_at": 2134, "_debug_get_cache_entry_list": 2134, "__code__": 2134, "codetyp": 2134, "innermost_fn": 2134, "cache_entri": 2134, "check_fn": 2134, "code_part": 2134, "___guarded_cod": 2134, "___check_global_st": 2134, "140215810860528": 2134, "___check_tensor": 2134, "tensor_check_nam": 2134, "co_freevar": 2134, "__closure__": 2134, "___is_grad_en": 2134, "___are_deterministic_algorithms_en": 2134, "___is_torch_function_en": 2134, "value_a": 2134, "value_b": 2134, "__self__": 2134, "compiled_exampl": 2134, "get_cache_entri": 2134, "recompile_and_add_another_cache_entri": 2134, "trash": 2135, "subclass_zoo": 2135, "bunch": 2135, "from_real_tensor": 2135, "fakeifi": 2135, "dispatch_devic": 2135, "ly": 2135, "derefer": 2135, "in_kernel_invocation_manag": 2135, "unwrap": 2135, "test_fake_tensor": 2135, "fake_mod": 2135, "fake_tensor_convert": 2135, "fake_x": 2135, "fake_i": 2135, "fake_z": 2135, "_guard": 2135, "detect_fake_mod": 2135, "fake_arg": 2135, "unset_fake_temporarili": 2135, "nich": 2135, "faketensorprop": 2135, "fake_tensor_prop": 2135, "propagate_dont_convert_input": 2135, "fake_input": 2135, "real_tensor": 2135, "annoi": 2135, "somehow": 2135, "fakecopymod": 2135, "gave": 2135, "fakeif": 2135, "tension": 2135, "analys": 2135, "metaconvert": 2135, "die": 2135, "saroufim": 2136, "evalfram": 2136, "usercod": 2136, "rob": 2136, "diminish": 2136, "vast": 2136, "250k": 2136, "aitempl": 2136, "aot_eag": [2136, 2145], "compile_tim": [2136, 2143, 2145], "torch_compile_debug": [2136, 2138], "troubl": [2136, 2137, 2145], "compileprofil": [2136, 2145], "profiler_model": [2136, 2145], "traffic": 2136, "frozen_toy_exampl": 2136, "multiprocessor": 2136, "some_fun": [2136, 2145], "insurmount": [2136, 2145], "woo": [2136, 2145], "framesummari": [2136, 2145], "generic_jump": [2136, 2145], "torch_dynamo_resume_in_toy_example_at_5": [2136, 2145], "torchdynamo_dynamic_shap": 2136, "cv": 2136, "app": 2136, "unnecessarili": 2136, "cold": [2136, 2142], "visibli": 2136, "torchdynamo_repro_level": [2136, 2145], "bisect": [2136, 2145], "torchdynamo_repro_aft": [2136, 2145], "dramat": [2136, 2145], "allevi": 2136, "wrapper_fn": 2136, "my_fn": 2136, "pitfal": 2136, "_indices_from": 2136, "recarrai": 2136, "float128": 2136, "complex256": 2136, "esoter": 2136, "ufunc": 2136, "poly1d": 2136, "__array_wrap__": 2136, "ctype": 2136, "numpy_fn": 2136, "tweak": 2136, "wrap_numpi": 2136, "charg": 2136, "oop": 2136, "costli": 2136, "daunt": 2136, "diagnos": 2136, "pinpoint": 2136, "discern": 2136, "trace_numpi": 2136, "_numpi": 2136, "uncommon": 2136, "finer": 2136, "a_fn": [2136, 2137], "aa_fn": [2136, 2137], "ab_fn": [2136, 2137], "unblock": 2137, "nnthi": 2137, "nnnote": 2137, "screen": [2137, 2143], "is_dynamo_compil": 2137, "b_fn": 2137, "white": 2137, "new_fn": 2138, "famou": 2138, "crunch": 2138, "torchinductor_": 2138, "your_usernam": 2138, "triton_meta": 2138, "i32": 2138, "mutated_arg_nam": 2138, "instance_descriptor": 2138, "divisible_by_16": 2138, "equal_to_1": 2138, "triton_": [2138, 2143], "in_ptr0": 2138, "out_ptr0": 2138, "xnumel": 2138, "xblock": 2138, "tl": 2138, "constexpr": 2138, "xoffset": 2138, "program_id": 2138, "xindex": 2138, "xmask": 2138, "tmp0": 2138, "tmp1": 2138, "tmp2": 2138, "v0": 2138, "opt_model": 2138, "timm": [2138, 2142], "berttoken": 2138, "bertmodel": 2138, "uncas": 2138, "me": 2138, "encoded_input": 2138, "return_tensor": 2138, "trigonometri": 2138, "skim": 2138, "create_model": 2138, "resnext101_32x8d": 2138, "torchinductor_unique_kernel_nam": 2139, "triton_poi_fused_cat_155": 2139, "poi": 2139, "torchinductor_benchmark_kernel": 2139, "har": 2139, "torchinductor_max_autotun": 2139, "mixnet_l": 2139, "timm_model": 2139, "torchinductor_shunt": 2139, "qz": 2139, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 2139, "shunting314": 2139, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 2139, "48efc83b12ec3ead950052e4a0220b10": 2139, "compiled_module_profil": 2139, "browser": [2139, 2143], "zoom": [2139, 2143, 2147], "distort": [2139, 2143], "densenet121": 2139, "69": 2139, "cutlass": 2139, "57": 2139, "ff": 2139, "justifi": 2139, "triton_red_fus": 2139, "__native_batch_norm_legit_functional_16": 2139, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 2139, "_adaptive_avg_pool2d_backward": 2140, "half_to_float": 2140, "no_stat": 2140, "start_step": 2140, "avg_pool2d_backward": 2140, "convolution_backward": 2140, "bias_siz": 2140, "output_mask": 2140, "scalar_mod": 2140, "tensor_mod": 2140, "embedding_dense_backward": 2140, "num_weight": 2140, "max_pool2d_with_indices_backward": 2140, "native_group_norm_backward": 2140, "rstd": 2140, "native_layer_norm_backward": 2140, "tensor_scalar": 2140, "tensor_tensor": 2140, "dim_int": 2140, "dim_intlist": 2140, "broadcast_dimens": 2140, "start_indic": 2140, "limit_indic": 2140, "start_index": 2140, "limit_index": 2140, "outer_length": 2140, "constabl": 2141, "_forward_pre_hook": 2141, "_backward_pre_hook": 2141, "_backward_hook": 2141, "_state_dict_hook": 2141, "load_": 2141, "avoiabl": 2141, "skip_nnmodule_hook_guard": 2141, "pre_backward": 2141, "warn_onc": 2141, "hui": 2142, "nightli": 2142, "night": 2142, "40gb": [2142, 2145], "2ghz": 2142, "torchbench": 2142, "trend": 2142, "droplist": 2142, "with_cudagraph": 2142, "toosl": 2143, "ncu": 2143, "model_c": 2143, "fwd_bwd": 2143, "scroll": 2143, "shortcut": 2143, "compiledfunctionbackward": 2143, "ac2g": 2143, "dropdown": 2143, "525": 2143, "_init_for_cuda_graph": 2143, "warmup_compil": 2143, "fn_c": 2143, "trace_compil": 2143, "meanwhil": 2143, "clue": 2143, "synthet": 2143, "modelwithbreak": 2143, "create_sequenti": 2143, "mod1": 2143, "mod2": 2143, "mod3": 2143, "mod4": 2143, "trace_break": 2143, "culaunchkernel": 2143, "cudalaunchkernel": 2143, "unique_kernel_nam": 2143, "sit": 2144, "replace_add_with_mul": 2144, "insert_relu_after_add": 2144, "new_relu_nod": 2144, "replaceaddwithmul": 2144, "transformed_graph_modul": 2144, "replaceaddwithmulsub": 2144, "mul_r": 2144, "removedetachpass": 2144, "args_map": 2144, "_schema": 2144, "kwarg_onli": 2144, "scalartotensorpass": 2144, "try_coerc": 2144, "replace_pattern": 2144, "replaced_pattern": 2144, "replace_pattern_with_filt": 2144, "replacedpattern": 2144, "passmanag": 2144, "pass_manag": 2144, "pm": 2144, "replace_add_with_div": 2144, "replace_div_with_mul": 2144, "run_checks_after_each_pass": 2144, "suppress_check_failur": 2144, "graph_module_out": 2144, "set_check": 2144, "check_div_target": 2144, "add_check": 2144, "subgraphmatch": 2144, "matcher_util": 2144, "match_output": 2144, "match_placehold": 2144, "remove_overlapping_match": 2144, "ignore_liter": 2144, "largemodel": 2144, "_bia": 2144, "large_model_graph": 2144, "patternmodel": 2144, "_weight_1": 2144, "_bias_1": 2144, "pattern_graph": 2144, "subgraph_match": 2144, "match_result": 2144, "internalmatch": 2144, "placeholder_nod": 2144, "returning_nod": 2144, "capabilitybasedpartition": 2144, "l34": 2144, "operator_support": 2144, "operatorsupportbas": 2144, "allows_single_node_partit": 2144, "non_compute_op": 2144, "_oper": 2144, "allowed_single_node_partition_op": 2144, "ll28c1": 2144, "l28c1": 2144, "is_node_support": 2144, "l150": 2144, "any_chain": 2144, "l164": 2144, "addmuloperatorsupport": 2144, "capability_partition": 2144, "op_support": 2144, "partition_list": 2144, "propose_partit": 2144, "fused_graph_modul": 2144, "fuse_partit": 2144, "lazo": 2145, "torchdynamo_verbos": 2145, "replay_record_en": 2145, "torchdynamo_debug_funct": 2145, "test_assertion_error": 2145, "compiled_test_assertion_error": 2145, "convert_fram": 2145, "mlazo": 2145, "837": 2145, "build_map": 2145, "log_level": 2145, "thousand": 2145, "test_backend_error": 2145, "compiled_test_backend_error": 2145, "decomp_fn": 2145, "810": 2145, "repro_aft": 2145, "minifier_launch": 2145, "base_dir": 2145, "rand_strid": 2145, "0a0": 2145, "gitfddfc44": 2145, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 2145, "2022": 2145, "thu_feb_10_18": 2145, "41_pst_2022": 2145, "v11": 2145, "cuda_11": 2145, "r11": 2145, "30978841_0": 2145, "sxm4": 2145, "compile_fx_inn": 2145, "toy_compil": 2145, "debug_util": 2145, "run_fwd_maybe_bwd": 2145, "opt_mod": 2145, "rg": 2145, "test_model": 2145, "debug_dir_root": 2145, "torch_compile_debug_dir": 2145, "run_2023_03_01_08_20_52_143510": 2145, "pid_180167": 2145, "model__0_forward_1": 2145, "aot_model___0_debug": 2145, "fx_graph_read": 2145, "fx_graph_runn": 2145, "fx_graph_transform": 2145, "ir_post_fus": 2145, "ir_pre_fus": 2145, "fx_graph": 2145, "buf1": 2145, "schedulernod": 2145, "computedbuff": 2145, "memorydep": 2145, "unmet_depend": 2145, "buf0": 2145, "met_depend": 2145, "primals_2": 2145, "buf1_loop_bodi": 2145, "var_rang": 2145, "z0": 2145, "index0": 2145, "index1": 2145, "get_index": 2145, "get_index_1": 2145, "load_1": 2145, "get_index_2": 2145, "compiled_fun": 2145, "hinder": 2145, "explanation_verbos": 2145, "out_guard": 2145, "ops_per_graph": 2145, "compiled_toi": 2145, "torchdynamo_extended_debug_guard_ad": 2145, "torchdynamo_extended_debug_create_symbol": 2145, "torchdynamo_extended_debug_cpp": 2145, "torchinductor_force_disable_cach": 2145, "force_disable_cach": 2145, "as_subclass": 2146, "handle_torch_funct": 2146, "public_api": 2146, "relevant_arg": 2146, "has_torch_function_unari": 2146, "is_tensor_lik": 2146, "notatensor": 2146, "tensorlik": 2146, "is_tensor_method_or_properti": 2146, "__get__": 2146, "__module__": 2146, "wrap_torch_funct": 2146, "drag": 2147, "interactiv": 2147, "memory_viz": 2147, "run_your_cod": 2147, "my_snapshot": 2147, "javascript": 2147, "upload": 2147, "pan": 2147, "mous": 2147, "slider": 2147, "b7f064c000000_0": 2147, "7f064c000000": 2147, "max_entri": 2147, "_memory_viz": 2147, "2u": 2147, "50n": 2147, "currenli": 2147, "typeddict": 2147, "device_trac": 2147, "traceentri": 2147, "total_s": 2147, "segment_typ": 2147, "allocated_s": 2147, "active_s": 2147, "active_awaiting_fre": 2147, "requested_s": 2147, "active_alloc": 2147, "took": 2147, "free_request": 2147, "free_complet": 2147, "segment_alloc": 2147, "segment_fre": 2147, "coorel": 2147, "device_fre": 2147, "dump_snapshot": 2147, "interplai": 2148, "torch_nccl_async_error_handl": 2149, "torch_nccl_high_prior": 2149, "torch_nccl_dump_on_timeout": 2149, "torch_nccl_trace_buffer_s": 2149, "torch_nccl_desync_debug": 2149, "desync": 2149, "culprit": 2149, "torch_nccl_enable_tim": 2149, "torch_nccl_enable_monitor": 2149, "torch_nccl_heartbeat_timeout_sec": 2149, "prolong": 2149, "flight": 2149, "ring": 2149, "tracebuff": 2149, "torch_nccl_trace_cpp_stack": 2149, "torch_nccl_coord_check_milsec": 2149, "torch_nccl_wait_timeout_dump_milsec": 2149, "torch_nccl_debug_info_temp_fil": 2149, "torch_nccl_debug_info_pipe_fil": 2149, "torch_nccl_nan_check": 2149, "smallest_norm": 2150, "subnorm": 2150, "denormal_numb": 2150, "tailor": 2152}, "objects": {"": [[2123, 0, 0, "-", "torch"], [2044, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[2116, 1, 1, "", "BFloat16Storage"], [2116, 1, 1, "", "BoolStorage"], [2116, 1, 1, "", "ByteStorage"], [2116, 1, 1, "", "CharStorage"], [2116, 1, 1, "", "ComplexDoubleStorage"], [2116, 1, 1, "", "ComplexFloatStorage"], [2116, 1, 1, "", "DoubleStorage"], [90, 1, 1, "", "Event"], [2116, 1, 1, "", "FloatStorage"], [91, 1, 1, "", "Generator"], [2116, 1, 1, "", "HalfStorage"], [2116, 1, 1, "", "IntStorage"], [2116, 1, 1, "", "LongStorage"], [2116, 1, 1, "", "QInt32Storage"], [2116, 1, 1, "", "QInt8Storage"], [2116, 1, 1, "", "QUInt2x4Storage"], [2116, 1, 1, "", "QUInt4x2Storage"], [2116, 1, 1, "", "QUInt8Storage"], [2116, 1, 1, "", "ShortStorage"], [2113, 1, 1, "", "Size"], [92, 1, 1, "", "Stream"], [2123, 1, 1, "", "SymBool"], [2123, 1, 1, "", "SymFloat"], [2123, 1, 1, "", "SymInt"], [2123, 1, 1, "", "Tag"], [2120, 1, 1, "", "Tensor"], [2116, 1, 1, "", "TypedStorage"], [2116, 1, 1, "", "UntypedStorage"], [13, 0, 0, "-", "__config__"], [62, 0, 0, "-", "__future__"], [629, 5, 1, "", "_assert"], [630, 5, 1, "", "_foreach_abs"], [631, 5, 1, "", "_foreach_abs_"], [632, 5, 1, "", "_foreach_acos"], [633, 5, 1, "", "_foreach_acos_"], [634, 5, 1, "", "_foreach_asin"], [635, 5, 1, "", "_foreach_asin_"], [636, 5, 1, "", "_foreach_atan"], [637, 5, 1, "", "_foreach_atan_"], [638, 5, 1, "", "_foreach_ceil"], [639, 5, 1, "", "_foreach_ceil_"], [640, 5, 1, "", "_foreach_cos"], [641, 5, 1, "", "_foreach_cos_"], [642, 5, 1, "", "_foreach_cosh"], [643, 5, 1, "", "_foreach_cosh_"], [644, 5, 1, "", "_foreach_erf"], [645, 5, 1, "", "_foreach_erf_"], [646, 5, 1, "", "_foreach_erfc"], [647, 5, 1, "", "_foreach_erfc_"], [648, 5, 1, "", "_foreach_exp"], [649, 5, 1, "", "_foreach_exp_"], [650, 5, 1, "", "_foreach_expm1"], [651, 5, 1, "", "_foreach_expm1_"], [652, 5, 1, "", "_foreach_floor"], [653, 5, 1, "", "_foreach_floor_"], [654, 5, 1, "", "_foreach_frac"], [655, 5, 1, "", "_foreach_frac_"], [656, 5, 1, "", "_foreach_lgamma"], [657, 5, 1, "", "_foreach_lgamma_"], [658, 5, 1, "", "_foreach_log"], [659, 5, 1, "", "_foreach_log10"], [660, 5, 1, "", "_foreach_log10_"], [661, 5, 1, "", "_foreach_log1p"], [662, 5, 1, "", "_foreach_log1p_"], [663, 5, 1, "", "_foreach_log2"], [664, 5, 1, "", "_foreach_log2_"], [665, 5, 1, "", "_foreach_log_"], [666, 5, 1, "", "_foreach_neg"], [667, 5, 1, "", "_foreach_neg_"], [668, 5, 1, "", "_foreach_reciprocal"], [669, 5, 1, "", "_foreach_reciprocal_"], [670, 5, 1, "", "_foreach_round"], [671, 5, 1, "", "_foreach_round_"], [672, 5, 1, "", "_foreach_sigmoid"], [673, 5, 1, "", "_foreach_sigmoid_"], [674, 5, 1, "", "_foreach_sin"], [675, 5, 1, "", "_foreach_sin_"], [676, 5, 1, "", "_foreach_sinh"], [677, 5, 1, "", "_foreach_sinh_"], [678, 5, 1, "", "_foreach_sqrt"], [679, 5, 1, "", "_foreach_sqrt_"], [680, 5, 1, "", "_foreach_tan"], [681, 5, 1, "", "_foreach_tan_"], [682, 5, 1, "", "_foreach_trunc"], [683, 5, 1, "", "_foreach_trunc_"], [684, 5, 1, "", "_foreach_zero_"], [2053, 0, 0, "-", "_logging"], [686, 5, 1, "", "abs"], [687, 5, 1, "", "absolute"], [688, 5, 1, "", "acos"], [689, 5, 1, "", "acosh"], [690, 5, 1, "", "add"], [691, 5, 1, "", "addbmm"], [692, 5, 1, "", "addcdiv"], [693, 5, 1, "", "addcmul"], [694, 5, 1, "", "addmm"], [695, 5, 1, "", "addmv"], [696, 5, 1, "", "addr"], [697, 5, 1, "", "adjoint"], [698, 5, 1, "", "all"], [699, 5, 1, "", "allclose"], [700, 5, 1, "", "amax"], [701, 5, 1, "", "amin"], [702, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [703, 5, 1, "", "angle"], [704, 5, 1, "", "any"], [2104, 0, 0, "-", "ao"], [876, 5, 1, "", "arange"], [877, 5, 1, "", "arccos"], [878, 5, 1, "", "arccosh"], [879, 5, 1, "", "arcsin"], [880, 5, 1, "", "arcsinh"], [881, 5, 1, "", "arctan"], [882, 5, 1, "", "arctan2"], [883, 5, 1, "", "arctanh"], [884, 5, 1, "", "are_deterministic_algorithms_enabled"], [885, 5, 1, "", "argmax"], [886, 5, 1, "", "argmin"], [887, 5, 1, "", "argsort"], [888, 5, 1, "", "argwhere"], [889, 5, 1, "", "as_strided"], [890, 5, 1, "", "as_tensor"], [891, 5, 1, "", "asarray"], [892, 5, 1, "", "asin"], [893, 5, 1, "", "asinh"], [894, 5, 1, "", "atan"], [895, 5, 1, "", "atan2"], [896, 5, 1, "", "atanh"], [897, 5, 1, "", "atleast_1d"], [898, 5, 1, "", "atleast_2d"], [899, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [951, 5, 1, "", "baddbmm"], [952, 5, 1, "", "bartlett_window"], [953, 5, 1, "", "bernoulli"], [954, 5, 1, "", "bincount"], [955, 5, 1, "", "bitwise_and"], [956, 5, 1, "", "bitwise_left_shift"], [957, 5, 1, "", "bitwise_not"], [958, 5, 1, "", "bitwise_or"], [959, 5, 1, "", "bitwise_right_shift"], [960, 5, 1, "", "bitwise_xor"], [961, 5, 1, "", "blackman_window"], [962, 5, 1, "", "block_diag"], [963, 5, 1, "", "bmm"], [964, 5, 1, "", "broadcast_shapes"], [965, 5, 1, "", "broadcast_tensors"], [966, 5, 1, "", "broadcast_to"], [967, 5, 1, "", "bucketize"], [968, 5, 1, "", "can_cast"], [969, 5, 1, "", "cartesian_prod"], [970, 5, 1, "", "cat"], [971, 5, 1, "", "cdist"], [972, 5, 1, "", "ceil"], [973, 5, 1, "", "chain_matmul"], [974, 5, 1, "", "cholesky"], [975, 5, 1, "", "cholesky_inverse"], [976, 5, 1, "", "cholesky_solve"], [977, 5, 1, "", "chunk"], [978, 5, 1, "", "clamp"], [979, 5, 1, "", "clip"], [980, 5, 1, "", "clone"], [981, 5, 1, "", "column_stack"], [982, 5, 1, "", "combinations"], [983, 5, 1, "", "compile"], [984, 5, 1, "", "compiled_with_cxx11_abi"], [2128, 0, 0, "-", "compiler"], [994, 5, 1, "", "complex"], [995, 5, 1, "", "concat"], [996, 5, 1, "", "concatenate"], [997, 5, 1, "", "cond"], [998, 5, 1, "", "conj"], [999, 5, 1, "", "conj_physical"], [2123, 0, 0, "-", "contrib"], [1000, 5, 1, "", "copysign"], [1001, 5, 1, "", "corrcoef"], [1002, 5, 1, "", "cos"], [1003, 5, 1, "", "cosh"], [1004, 5, 1, "", "count_nonzero"], [1005, 5, 1, "", "cov"], [16, 0, 0, "-", "cpu"], [1015, 5, 1, "", "cross"], [17, 0, 0, "-", "cuda"], [1098, 5, 1, "", "cummax"], [1099, 5, 1, "", "cummin"], [1100, 5, 1, "", "cumprod"], [1101, 5, 1, "", "cumsum"], [1102, 5, 1, "", "cumulative_trapezoid"], [1103, 5, 1, "", "deg2rad"], [1104, 5, 1, "", "dequantize"], [1105, 5, 1, "", "det"], [2117, 1, 1, "", "device"], [1106, 5, 1, "", "diag"], [1107, 5, 1, "", "diag_embed"], [1108, 5, 1, "", "diagflat"], [1109, 5, 1, "", "diagonal"], [1110, 5, 1, "", "diagonal_scatter"], [1111, 5, 1, "", "diff"], [1112, 5, 1, "", "digamma"], [1113, 5, 1, "", "dist"], [28, 0, 0, "-", "distributed"], [35, 0, 0, "-", "distributions"], [1114, 5, 1, "", "div"], [1115, 5, 1, "", "divide"], [1116, 5, 1, "", "dot"], [1117, 5, 1, "", "dsplit"], [1118, 5, 1, "", "dstack"], [2117, 1, 1, "", "dtype"], [1119, 5, 1, "", "einsum"], [1120, 5, 1, "", "empty"], [1121, 5, 1, "", "empty_like"], [1122, 5, 1, "", "empty_strided"], [1123, 1, 1, "", "enable_grad"], [1124, 5, 1, "", "eq"], [1125, 5, 1, "", "equal"], [1126, 5, 1, "", "erf"], [1127, 5, 1, "", "erfc"], [1128, 5, 1, "", "erfinv"], [1129, 5, 1, "", "exp"], [1130, 5, 1, "", "exp2"], [1131, 5, 1, "", "expm1"], [52, 0, 0, "-", "export"], [1132, 5, 1, "", "eye"], [1133, 5, 1, "", "fake_quantize_per_channel_affine"], [1134, 5, 1, "", "fake_quantize_per_tensor_affine"], [54, 0, 0, "-", "fft"], [1157, 5, 1, "", "fix"], [1158, 5, 1, "", "flatten"], [1159, 5, 1, "", "flip"], [1160, 5, 1, "", "fliplr"], [1161, 5, 1, "", "flipud"], [1162, 5, 1, "", "float_power"], [1163, 5, 1, "", "floor"], [1164, 5, 1, "", "floor_divide"], [1165, 5, 1, "", "fmax"], [1166, 5, 1, "", "fmin"], [1167, 5, 1, "", "fmod"], [1168, 5, 1, "", "frac"], [1169, 5, 1, "", "frexp"], [1170, 5, 1, "", "from_dlpack"], [1171, 5, 1, "", "from_file"], [1172, 5, 1, "", "from_numpy"], [1173, 5, 1, "", "frombuffer"], [1174, 5, 1, "", "full"], [1175, 5, 1, "", "full_like"], [57, 0, 0, "-", "func"], [2123, 0, 0, "-", "functional"], [63, 0, 0, "-", "futures"], [64, 0, 0, "-", "fx"], [1230, 5, 1, "", "gather"], [1231, 5, 1, "", "gcd"], [1232, 5, 1, "", "ge"], [1233, 5, 1, "", "geqrf"], [1234, 5, 1, "", "ger"], [1235, 5, 1, "", "get_default_device"], [1236, 5, 1, "", "get_default_dtype"], [1237, 5, 1, "", "get_deterministic_debug_mode"], [1238, 5, 1, "", "get_device_module"], [1239, 5, 1, "", "get_float32_matmul_precision"], [1240, 5, 1, "", "get_num_interop_threads"], [1241, 5, 1, "", "get_num_threads"], [1242, 5, 1, "", "get_rng_state"], [1243, 5, 1, "", "gradient"], [1244, 5, 1, "", "greater"], [1245, 5, 1, "", "greater_equal"], [1246, 5, 1, "", "gt"], [1247, 5, 1, "", "hamming_window"], [1248, 5, 1, "", "hann_window"], [1249, 5, 1, "", "heaviside"], [1250, 5, 1, "", "histc"], [1251, 5, 1, "", "histogram"], [1252, 5, 1, "", "histogramdd"], [1253, 5, 1, "", "hsplit"], [1254, 5, 1, "", "hspmm"], [1255, 5, 1, "", "hstack"], [2042, 0, 0, "-", "hub"], [1256, 5, 1, "", "hypot"], [1257, 5, 1, "", "i0"], [1258, 5, 1, "", "igamma"], [1259, 5, 1, "", "igammac"], [1260, 5, 1, "", "imag"], [1261, 5, 1, "", "index_add"], [1262, 5, 1, "", "index_copy"], [1263, 5, 1, "", "index_reduce"], [1264, 5, 1, "", "index_select"], [1265, 5, 1, "", "initial_seed"], [1266, 5, 1, "", "inner"], [1267, 5, 1, "", "inverse"], [1268, 5, 1, "", "is_complex"], [1269, 5, 1, "", "is_conj"], [1270, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1271, 5, 1, "", "is_floating_point"], [1272, 5, 1, "", "is_grad_enabled"], [1273, 5, 1, "", "is_inference_mode_enabled"], [1274, 5, 1, "", "is_nonzero"], [1275, 5, 1, "", "is_storage"], [1276, 5, 1, "", "is_tensor"], [1277, 5, 1, "", "is_warn_always_enabled"], [1278, 5, 1, "", "isclose"], [1279, 5, 1, "", "isfinite"], [1280, 5, 1, "", "isin"], [1281, 5, 1, "", "isinf"], [1282, 5, 1, "", "isnan"], [1283, 5, 1, "", "isneginf"], [1284, 5, 1, "", "isposinf"], [1285, 5, 1, "", "isreal"], [1286, 5, 1, "", "istft"], [2044, 0, 0, "-", "jit"], [1309, 5, 1, "", "kaiser_window"], [1310, 5, 1, "", "kron"], [1311, 5, 1, "", "kthvalue"], [2117, 1, 1, "", "layout"], [1312, 5, 1, "", "lcm"], [1313, 5, 1, "", "ldexp"], [1314, 5, 1, "", "le"], [1315, 5, 1, "", "lerp"], [1316, 5, 1, "", "less"], [1317, 5, 1, "", "less_equal"], [1318, 5, 1, "", "lgamma"], [2051, 0, 0, "-", "library"], [2052, 0, 0, "-", "linalg"], [1360, 5, 1, "", "linspace"], [1361, 5, 1, "", "load"], [1362, 5, 1, "", "lobpcg"], [1363, 5, 1, "", "log"], [1364, 5, 1, "", "log10"], [1365, 5, 1, "", "log1p"], [1366, 5, 1, "", "log2"], [1367, 5, 1, "", "logaddexp"], [1368, 5, 1, "", "logaddexp2"], [1369, 5, 1, "", "logcumsumexp"], [1370, 5, 1, "", "logdet"], [1371, 5, 1, "", "logical_and"], [1372, 5, 1, "", "logical_not"], [1373, 5, 1, "", "logical_or"], [1374, 5, 1, "", "logical_xor"], [1375, 5, 1, "", "logit"], [1376, 5, 1, "", "logspace"], [1377, 5, 1, "", "logsumexp"], [1378, 5, 1, "", "lt"], [1379, 5, 1, "", "lu"], [1380, 5, 1, "", "lu_solve"], [1381, 5, 1, "", "lu_unpack"], [1382, 5, 1, "", "manual_seed"], [2054, 0, 0, "-", "masked"], [1383, 5, 1, "", "masked_select"], [1384, 5, 1, "", "matmul"], [1385, 5, 1, "", "matrix_exp"], [1386, 5, 1, "", "matrix_power"], [1387, 5, 1, "", "max"], [1388, 5, 1, "", "maximum"], [1389, 5, 1, "", "mean"], [1390, 5, 1, "", "median"], [2117, 1, 1, "", "memory_format"], [1391, 5, 1, "", "meshgrid"], [1392, 5, 1, "", "min"], [1393, 5, 1, "", "minimum"], [1394, 5, 1, "", "mm"], [1395, 5, 1, "", "mode"], [2060, 0, 0, "-", "monitor"], [1396, 5, 1, "", "moveaxis"], [1397, 5, 1, "", "movedim"], [2061, 0, 0, "-", "mps"], [1413, 5, 1, "", "msort"], [2063, 0, 0, "-", "mtia"], [1433, 5, 1, "", "mul"], [1434, 5, 1, "", "multinomial"], [1435, 5, 1, "", "multiply"], [2064, 0, 0, "-", "multiprocessing"], [1436, 5, 1, "", "mv"], [1437, 5, 1, "", "mvlgamma"], [1438, 5, 1, "", "nan_to_num"], [1439, 5, 1, "", "nanmean"], [1440, 5, 1, "", "nanmedian"], [1441, 5, 1, "", "nanquantile"], [1442, 5, 1, "", "nansum"], [1443, 5, 1, "", "narrow"], [1444, 5, 1, "", "narrow_copy"], [1445, 5, 1, "", "ne"], [1446, 5, 1, "", "neg"], [1447, 5, 1, "", "negative"], [2067, 0, 0, "-", "nested"], [1448, 5, 1, "", "nextafter"], [2068, 0, 0, "-", "nn"], [1792, 1, 1, "", "no_grad"], [1793, 5, 1, "", "nonzero"], [1794, 5, 1, "", "norm"], [1795, 5, 1, "", "normal"], [1796, 5, 1, "", "not_equal"], [1797, 5, 1, "", "numel"], [1798, 5, 1, "", "ones"], [1799, 5, 1, "", "ones_like"], [2099, 0, 0, "-", "onnx"], [2101, 0, 0, "-", "optim"], [1844, 5, 1, "", "orgqr"], [1845, 5, 1, "", "ormqr"], [1846, 5, 1, "", "outer"], [2146, 0, 0, "-", "overrides"], [2102, 0, 0, "-", "package"], [1847, 5, 1, "", "pca_lowrank"], [1848, 5, 1, "", "permute"], [1849, 5, 1, "", "pinverse"], [1850, 5, 1, "", "poisson"], [1851, 5, 1, "", "polar"], [1852, 5, 1, "", "polygamma"], [1853, 5, 1, "", "positive"], [1854, 5, 1, "", "pow"], [1855, 5, 1, "", "prod"], [2103, 0, 0, "-", "profiler"], [1856, 5, 1, "", "promote_types"], [1857, 5, 1, "", "qr"], [1858, 5, 1, "", "quantile"], [2107, 0, 0, "-", "quantization"], [1859, 5, 1, "", "quantize_per_channel"], [1860, 5, 1, "", "quantize_per_tensor"], [1861, 5, 1, "", "quantized_batch_norm"], [1862, 5, 1, "", "quantized_max_pool1d"], [1863, 5, 1, "", "quantized_max_pool2d"], [2123, 0, 0, "-", "quasirandom"], [1865, 5, 1, "", "rad2deg"], [1866, 5, 1, "", "rand"], [1867, 5, 1, "", "rand_like"], [1868, 5, 1, "", "randint"], [1869, 5, 1, "", "randint_like"], [1870, 5, 1, "", "randn"], [1871, 5, 1, "", "randn_like"], [2108, 0, 0, "-", "random"], [1872, 5, 1, "", "randperm"], [1873, 5, 1, "", "range"], [1874, 5, 1, "", "ravel"], [1875, 5, 1, "", "real"], [1876, 5, 1, "", "reciprocal"], [1877, 5, 1, "", "remainder"], [1878, 5, 1, "", "renorm"], [1879, 5, 1, "", "repeat_interleave"], [1880, 5, 1, "", "reshape"], [1881, 5, 1, "", "resolve_conj"], [1882, 5, 1, "", "resolve_neg"], [1883, 5, 1, "", "result_type"], [2123, 0, 0, "-", "return_types"], [1884, 5, 1, "", "roll"], [1885, 5, 1, "", "rot90"], [1886, 5, 1, "", "round"], [1887, 5, 1, "", "row_stack"], [1888, 5, 1, "", "rsqrt"], [1889, 5, 1, "", "save"], [1890, 5, 1, "", "scatter"], [1891, 5, 1, "", "scatter_add"], [1892, 5, 1, "", "scatter_reduce"], [1893, 5, 1, "", "searchsorted"], [1894, 5, 1, "", "seed"], [1895, 5, 1, "", "select"], [1896, 5, 1, "", "select_scatter"], [2123, 0, 0, "-", "serialization"], [1897, 5, 1, "", "set_default_device"], [1898, 5, 1, "", "set_default_dtype"], [1899, 5, 1, "", "set_default_tensor_type"], [1900, 5, 1, "", "set_deterministic_debug_mode"], [1901, 5, 1, "", "set_float32_matmul_precision"], [1902, 5, 1, "", "set_flush_denormal"], [1903, 5, 1, "", "set_num_interop_threads"], [1904, 5, 1, "", "set_num_threads"], [1905, 5, 1, "", "set_printoptions"], [1906, 5, 1, "", "set_rng_state"], [1907, 5, 1, "", "set_warn_always"], [1908, 5, 1, "", "sgn"], [1909, 5, 1, "", "sigmoid"], [1910, 5, 1, "", "sign"], [2112, 0, 0, "-", "signal"], [1922, 5, 1, "", "signbit"], [1923, 5, 1, "", "sin"], [1924, 5, 1, "", "sinc"], [1925, 5, 1, "", "sinh"], [1926, 5, 1, "", "slice_scatter"], [1927, 5, 1, "", "slogdet"], [1928, 5, 1, "", "smm"], [1929, 5, 1, "", "softmax"], [1930, 5, 1, "", "sort"], [2114, 0, 0, "-", "sparse"], [1940, 5, 1, "", "sparse_bsc_tensor"], [1941, 5, 1, "", "sparse_bsr_tensor"], [1942, 5, 1, "", "sparse_compressed_tensor"], [1943, 5, 1, "", "sparse_coo_tensor"], [1944, 5, 1, "", "sparse_csc_tensor"], [1945, 5, 1, "", "sparse_csr_tensor"], [2115, 0, 0, "-", "special"], [1946, 5, 1, "", "split"], [1947, 5, 1, "", "sqrt"], [1948, 5, 1, "", "square"], [1949, 5, 1, "", "squeeze"], [1950, 5, 1, "", "sspaddmm"], [1951, 5, 1, "", "stack"], [1952, 5, 1, "", "std"], [1953, 5, 1, "", "std_mean"], [1954, 5, 1, "", "stft"], [2123, 0, 0, "-", "storage"], [1955, 5, 1, "", "sub"], [1956, 5, 1, "", "subtract"], [1957, 5, 1, "", "sum"], [1958, 5, 1, "", "svd"], [1959, 5, 1, "", "svd_lowrank"], [1960, 5, 1, "", "swapaxes"], [1961, 5, 1, "", "swapdims"], [1962, 5, 1, "", "sym_float"], [1963, 5, 1, "", "sym_int"], [1964, 5, 1, "", "sym_ite"], [1965, 5, 1, "", "sym_max"], [1966, 5, 1, "", "sym_min"], [1967, 5, 1, "", "sym_not"], [1968, 5, 1, "", "t"], [1969, 5, 1, "", "take"], [1970, 5, 1, "", "take_along_dim"], [1971, 5, 1, "", "tan"], [1972, 5, 1, "", "tanh"], [1973, 5, 1, "", "tensor"], [1974, 5, 1, "", "tensor_split"], [1975, 5, 1, "", "tensordot"], [2121, 0, 0, "-", "testing"], [1976, 5, 1, "", "tile"], [1977, 5, 1, "", "topk"], [2123, 0, 0, "-", "torch_version"], [1978, 5, 1, "", "trace"], [1979, 5, 1, "", "transpose"], [1980, 5, 1, "", "trapezoid"], [1981, 5, 1, "", "trapz"], [1982, 5, 1, "", "triangular_solve"], [1983, 5, 1, "", "tril"], [1984, 5, 1, "", "tril_indices"], [1985, 5, 1, "", "triu"], [1986, 5, 1, "", "triu_indices"], [1987, 5, 1, "", "true_divide"], [1988, 5, 1, "", "trunc"], [2123, 0, 0, "-", "types"], [1989, 5, 1, "", "unbind"], [1990, 5, 1, "", "unflatten"], [1991, 5, 1, "", "unique"], [1992, 5, 1, "", "unique_consecutive"], [1993, 5, 1, "", "unravel_index"], [1994, 5, 1, "", "unsqueeze"], [1995, 5, 1, "", "use_deterministic_algorithms"], [2151, 0, 0, "-", "utils"], [2001, 5, 1, "", "vander"], [2002, 5, 1, "", "var"], [2003, 5, 1, "", "var_mean"], [2004, 5, 1, "", "vdot"], [2123, 0, 0, "-", "version"], [2005, 5, 1, "", "view_as_complex"], [2006, 5, 1, "", "view_as_real"], [2007, 5, 1, "", "vmap"], [2008, 5, 1, "", "vsplit"], [2009, 5, 1, "", "vstack"], [2010, 5, 1, "", "where"], [2011, 5, 1, "", "xlogy"], [2152, 0, 0, "-", "xpu"], [2040, 5, 1, "", "zeros"], [2041, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[2116, 2, 1, "", "dtype"]], "torch.BoolStorage": [[2116, 2, 1, "", "dtype"]], "torch.ByteStorage": [[2116, 2, 1, "", "dtype"]], "torch.CharStorage": [[2116, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[2116, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[2116, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[2116, 2, 1, "", "dtype"]], "torch.Event": [[90, 3, 1, "", "elapsed_time"], [90, 3, 1, "", "query"], [90, 3, 1, "", "record"], [90, 3, 1, "", "synchronize"], [90, 3, 1, "", "wait"]], "torch.FloatStorage": [[2116, 2, 1, "", "dtype"]], "torch.Generator": [[91, 3, 1, "", "clone_state"], [91, 2, 1, "", "device"], [91, 3, 1, "", "get_state"], [91, 3, 1, "", "graphsafe_get_state"], [91, 3, 1, "", "graphsafe_set_state"], [91, 3, 1, "", "initial_seed"], [91, 3, 1, "", "manual_seed"], [91, 3, 1, "", "seed"], [91, 3, 1, "", "set_state"]], "torch.HalfStorage": [[2116, 2, 1, "", "dtype"]], "torch.IntStorage": [[2116, 2, 1, "", "dtype"]], "torch.LongStorage": [[2116, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[2116, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[2116, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[2116, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[2116, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[2116, 2, 1, "", "dtype"]], "torch.ShortStorage": [[2116, 2, 1, "", "dtype"]], "torch.Size": [[2113, 3, 1, "", "count"], [2113, 3, 1, "", "index"], [2113, 3, 1, "", "numel"]], "torch.Stream": [[92, 3, 1, "", "query"], [92, 3, 1, "", "record_event"], [92, 3, 1, "", "synchronize"], [92, 3, 1, "", "wait_event"], [92, 3, 1, "", "wait_stream"]], "torch.SymFloat": [[2123, 3, 1, "", "as_integer_ratio"], [2123, 3, 1, "", "is_integer"]], "torch.SymInt": [[2123, 3, 1, "", "as_integer_ratio"]], "torch.Tag": [[2123, 4, 1, "", "name"]], "torch.Tensor": [[2120, 2, 1, "", "H"], [2120, 2, 1, "", "T"], [2120, 3, 1, "", "__init__"], [93, 3, 1, "", "abs"], [94, 3, 1, "", "abs_"], [95, 3, 1, "", "absolute"], [96, 3, 1, "", "absolute_"], [97, 3, 1, "", "acos"], [98, 3, 1, "", "acos_"], [99, 3, 1, "", "acosh"], [100, 3, 1, "", "acosh_"], [101, 3, 1, "", "add"], [102, 3, 1, "", "add_"], [103, 3, 1, "", "addbmm"], [104, 3, 1, "", "addbmm_"], [105, 3, 1, "", "addcdiv"], [106, 3, 1, "", "addcdiv_"], [107, 3, 1, "", "addcmul"], [108, 3, 1, "", "addcmul_"], [109, 3, 1, "", "addmm"], [110, 3, 1, "", "addmm_"], [111, 3, 1, "", "addmv"], [112, 3, 1, "", "addmv_"], [113, 3, 1, "", "addr"], [114, 3, 1, "", "addr_"], [115, 3, 1, "", "adjoint"], [2066, 3, 1, "", "align_as"], [2066, 3, 1, "", "align_to"], [116, 3, 1, "", "all"], [117, 3, 1, "", "allclose"], [118, 3, 1, "", "amax"], [119, 3, 1, "", "amin"], [120, 3, 1, "", "aminmax"], [121, 3, 1, "", "angle"], [122, 3, 1, "", "any"], [123, 3, 1, "", "apply_"], [124, 3, 1, "", "arccos"], [125, 3, 1, "", "arccos_"], [126, 3, 1, "", "arccosh"], [127, 3, 1, "", "arccosh_"], [128, 3, 1, "", "arcsin"], [129, 3, 1, "", "arcsin_"], [130, 3, 1, "", "arcsinh"], [131, 3, 1, "", "arcsinh_"], [132, 3, 1, "", "arctan"], [133, 3, 1, "", "arctan2"], [134, 3, 1, "", "arctan2_"], [135, 3, 1, "", "arctan_"], [136, 3, 1, "", "arctanh"], [137, 3, 1, "", "arctanh_"], [138, 3, 1, "", "argmax"], [139, 3, 1, "", "argmin"], [140, 3, 1, "", "argsort"], [141, 3, 1, "", "argwhere"], [142, 3, 1, "", "as_strided"], [143, 3, 1, "", "as_subclass"], [144, 3, 1, "", "asin"], [145, 3, 1, "", "asin_"], [146, 3, 1, "", "asinh"], [147, 3, 1, "", "asinh_"], [148, 3, 1, "", "atan"], [149, 3, 1, "", "atan2"], [150, 3, 1, "", "atan2_"], [151, 3, 1, "", "atan_"], [152, 3, 1, "", "atanh"], [153, 3, 1, "", "atanh_"], [154, 3, 1, "", "backward"], [155, 3, 1, "", "baddbmm"], [156, 3, 1, "", "baddbmm_"], [157, 3, 1, "", "bernoulli"], [158, 3, 1, "", "bernoulli_"], [159, 3, 1, "", "bfloat16"], [160, 3, 1, "", "bincount"], [161, 3, 1, "", "bitwise_and"], [162, 3, 1, "", "bitwise_and_"], [163, 3, 1, "", "bitwise_left_shift"], [164, 3, 1, "", "bitwise_left_shift_"], [165, 3, 1, "", "bitwise_not"], [166, 3, 1, "", "bitwise_not_"], [167, 3, 1, "", "bitwise_or"], [168, 3, 1, "", "bitwise_or_"], [169, 3, 1, "", "bitwise_right_shift"], [170, 3, 1, "", "bitwise_right_shift_"], [171, 3, 1, "", "bitwise_xor"], [172, 3, 1, "", "bitwise_xor_"], [173, 3, 1, "", "bmm"], [174, 3, 1, "", "bool"], [175, 3, 1, "", "broadcast_to"], [176, 3, 1, "", "byte"], [177, 3, 1, "", "cauchy_"], [178, 3, 1, "", "ccol_indices"], [179, 3, 1, "", "cdouble"], [180, 3, 1, "", "ceil"], [181, 3, 1, "", "ceil_"], [182, 3, 1, "", "cfloat"], [183, 3, 1, "", "chalf"], [184, 3, 1, "", "char"], [185, 3, 1, "", "cholesky"], [186, 3, 1, "", "cholesky_inverse"], [187, 3, 1, "", "cholesky_solve"], [188, 3, 1, "", "chunk"], [189, 3, 1, "", "clamp"], [190, 3, 1, "", "clamp_"], [191, 3, 1, "", "clip"], [192, 3, 1, "", "clip_"], [193, 3, 1, "", "clone"], [194, 3, 1, "", "coalesce"], [195, 3, 1, "", "col_indices"], [196, 3, 1, "", "conj"], [197, 3, 1, "", "conj_physical"], [198, 3, 1, "", "conj_physical_"], [199, 3, 1, "", "contiguous"], [200, 3, 1, "", "copy_"], [201, 3, 1, "", "copysign"], [202, 3, 1, "", "copysign_"], [203, 3, 1, "", "corrcoef"], [204, 3, 1, "", "cos"], [205, 3, 1, "", "cos_"], [206, 3, 1, "", "cosh"], [207, 3, 1, "", "cosh_"], [208, 3, 1, "", "count_nonzero"], [209, 3, 1, "", "cov"], [210, 3, 1, "", "cpu"], [211, 3, 1, "", "cross"], [212, 3, 1, "", "crow_indices"], [213, 3, 1, "", "cuda"], [214, 3, 1, "", "cummax"], [215, 3, 1, "", "cummin"], [216, 3, 1, "", "cumprod"], [217, 3, 1, "", "cumprod_"], [218, 3, 1, "", "cumsum"], [219, 3, 1, "", "cumsum_"], [220, 3, 1, "", "data_ptr"], [221, 3, 1, "", "deg2rad"], [222, 3, 1, "", "dense_dim"], [223, 3, 1, "", "dequantize"], [224, 3, 1, "", "det"], [225, 3, 1, "", "detach"], [226, 3, 1, "", "detach_"], [227, 2, 1, "", "device"], [228, 3, 1, "", "diag"], [229, 3, 1, "", "diag_embed"], [230, 3, 1, "", "diagflat"], [231, 3, 1, "", "diagonal"], [232, 3, 1, "", "diagonal_scatter"], [233, 3, 1, "", "diff"], [234, 3, 1, "", "digamma"], [235, 3, 1, "", "digamma_"], [236, 3, 1, "", "dim"], [237, 3, 1, "", "dim_order"], [238, 3, 1, "", "dist"], [239, 3, 1, "", "div"], [240, 3, 1, "", "div_"], [241, 3, 1, "", "divide"], [242, 3, 1, "", "divide_"], [243, 3, 1, "", "dot"], [244, 3, 1, "", "double"], [245, 3, 1, "", "dsplit"], [246, 3, 1, "", "element_size"], [247, 3, 1, "", "eq"], [248, 3, 1, "", "eq_"], [249, 3, 1, "", "equal"], [250, 3, 1, "", "erf"], [251, 3, 1, "", "erf_"], [252, 3, 1, "", "erfc"], [253, 3, 1, "", "erfc_"], [254, 3, 1, "", "erfinv"], [255, 3, 1, "", "erfinv_"], [256, 3, 1, "", "exp"], [257, 3, 1, "", "exp_"], [258, 3, 1, "", "expand"], [259, 3, 1, "", "expand_as"], [260, 3, 1, "", "expm1"], [261, 3, 1, "", "expm1_"], [262, 3, 1, "", "exponential_"], [263, 3, 1, "", "fill_"], [264, 3, 1, "", "fill_diagonal_"], [265, 3, 1, "", "fix"], [266, 3, 1, "", "fix_"], [267, 3, 1, "", "flatten"], [268, 3, 1, "", "flip"], [269, 3, 1, "", "fliplr"], [270, 3, 1, "", "flipud"], [271, 3, 1, "", "float"], [272, 3, 1, "", "float_power"], [273, 3, 1, "", "float_power_"], [274, 3, 1, "", "floor"], [275, 3, 1, "", "floor_"], [276, 3, 1, "", "floor_divide"], [277, 3, 1, "", "floor_divide_"], [278, 3, 1, "", "fmax"], [279, 3, 1, "", "fmin"], [280, 3, 1, "", "fmod"], [281, 3, 1, "", "fmod_"], [282, 3, 1, "", "frac"], [283, 3, 1, "", "frac_"], [284, 3, 1, "", "frexp"], [285, 3, 1, "", "gather"], [286, 3, 1, "", "gcd"], [287, 3, 1, "", "gcd_"], [288, 3, 1, "", "ge"], [289, 3, 1, "", "ge_"], [290, 3, 1, "", "geometric_"], [291, 3, 1, "", "geqrf"], [292, 3, 1, "", "ger"], [293, 3, 1, "", "get_device"], [294, 2, 1, "", "grad"], [295, 3, 1, "", "greater"], [296, 3, 1, "", "greater_"], [297, 3, 1, "", "greater_equal"], [298, 3, 1, "", "greater_equal_"], [299, 3, 1, "", "gt"], [300, 3, 1, "", "gt_"], [301, 3, 1, "", "half"], [302, 3, 1, "", "hardshrink"], [303, 3, 1, "", "heaviside"], [304, 3, 1, "", "histc"], [305, 3, 1, "", "histogram"], [306, 3, 1, "", "hsplit"], [307, 3, 1, "", "hypot"], [308, 3, 1, "", "hypot_"], [309, 3, 1, "", "i0"], [310, 3, 1, "", "i0_"], [311, 3, 1, "", "igamma"], [312, 3, 1, "", "igamma_"], [313, 3, 1, "", "igammac"], [314, 3, 1, "", "igammac_"], [315, 2, 1, "", "imag"], [316, 3, 1, "", "index_add"], [317, 3, 1, "", "index_add_"], [318, 3, 1, "", "index_copy"], [319, 3, 1, "", "index_copy_"], [320, 3, 1, "", "index_fill"], [321, 3, 1, "", "index_fill_"], [322, 3, 1, "", "index_put"], [323, 3, 1, "", "index_put_"], [324, 3, 1, "", "index_reduce"], [325, 3, 1, "", "index_reduce_"], [326, 3, 1, "", "index_select"], [327, 3, 1, "", "indices"], [328, 3, 1, "", "inner"], [329, 3, 1, "", "int"], [330, 3, 1, "", "int_repr"], [331, 3, 1, "", "inverse"], [332, 3, 1, "", "is_coalesced"], [333, 3, 1, "", "is_complex"], [334, 3, 1, "", "is_conj"], [335, 3, 1, "", "is_contiguous"], [336, 2, 1, "", "is_cuda"], [337, 3, 1, "", "is_floating_point"], [338, 3, 1, "", "is_inference"], [339, 2, 1, "", "is_leaf"], [340, 2, 1, "", "is_meta"], [341, 3, 1, "", "is_pinned"], [342, 2, 1, "", "is_quantized"], [343, 3, 1, "", "is_set_to"], [344, 3, 1, "", "is_shared"], [345, 3, 1, "", "is_signed"], [346, 2, 1, "", "is_sparse"], [347, 2, 1, "", "is_sparse_csr"], [348, 3, 1, "", "isclose"], [349, 3, 1, "", "isfinite"], [350, 3, 1, "", "isinf"], [351, 3, 1, "", "isnan"], [352, 3, 1, "", "isneginf"], [353, 3, 1, "", "isposinf"], [354, 3, 1, "", "isreal"], [355, 3, 1, "", "istft"], [356, 3, 1, "", "item"], [357, 2, 1, "", "itemsize"], [358, 3, 1, "", "kthvalue"], [359, 3, 1, "", "lcm"], [360, 3, 1, "", "lcm_"], [361, 3, 1, "", "ldexp"], [362, 3, 1, "", "ldexp_"], [363, 3, 1, "", "le"], [364, 3, 1, "", "le_"], [365, 3, 1, "", "lerp"], [366, 3, 1, "", "lerp_"], [367, 3, 1, "", "less"], [368, 3, 1, "", "less_"], [369, 3, 1, "", "less_equal"], [370, 3, 1, "", "less_equal_"], [371, 3, 1, "", "lgamma"], [372, 3, 1, "", "lgamma_"], [373, 3, 1, "", "log"], [374, 3, 1, "", "log10"], [375, 3, 1, "", "log10_"], [376, 3, 1, "", "log1p"], [377, 3, 1, "", "log1p_"], [378, 3, 1, "", "log2"], [379, 3, 1, "", "log2_"], [380, 3, 1, "", "log_"], [381, 3, 1, "", "log_normal_"], [382, 3, 1, "", "logaddexp"], [383, 3, 1, "", "logaddexp2"], [384, 3, 1, "", "logcumsumexp"], [385, 3, 1, "", "logdet"], [386, 3, 1, "", "logical_and"], [387, 3, 1, "", "logical_and_"], [388, 3, 1, "", "logical_not"], [389, 3, 1, "", "logical_not_"], [390, 3, 1, "", "logical_or"], [391, 3, 1, "", "logical_or_"], [392, 3, 1, "", "logical_xor"], [393, 3, 1, "", "logical_xor_"], [394, 3, 1, "", "logit"], [395, 3, 1, "", "logit_"], [396, 3, 1, "", "logsumexp"], [397, 3, 1, "", "long"], [398, 3, 1, "", "lt"], [399, 3, 1, "", "lt_"], [400, 3, 1, "", "lu"], [401, 3, 1, "", "lu_solve"], [2120, 2, 1, "", "mH"], [2120, 2, 1, "", "mT"], [402, 3, 1, "", "map_"], [403, 3, 1, "", "masked_fill"], [404, 3, 1, "", "masked_fill_"], [405, 3, 1, "", "masked_scatter"], [406, 3, 1, "", "masked_scatter_"], [407, 3, 1, "", "masked_select"], [408, 3, 1, "", "matmul"], [409, 3, 1, "", "matrix_exp"], [410, 3, 1, "", "matrix_power"], [411, 3, 1, "", "max"], [412, 3, 1, "", "maximum"], [413, 3, 1, "", "mean"], [414, 3, 1, "", "median"], [415, 3, 1, "", "min"], [416, 3, 1, "", "minimum"], [417, 3, 1, "", "mm"], [418, 3, 1, "", "mode"], [419, 3, 1, "", "module_load"], [420, 3, 1, "", "moveaxis"], [421, 3, 1, "", "movedim"], [422, 3, 1, "", "msort"], [423, 3, 1, "", "mul"], [424, 3, 1, "", "mul_"], [425, 3, 1, "", "multinomial"], [426, 3, 1, "", "multiply"], [427, 3, 1, "", "multiply_"], [428, 3, 1, "", "mv"], [429, 3, 1, "", "mvlgamma"], [430, 3, 1, "", "mvlgamma_"], [2066, 2, 1, "", "names"], [431, 3, 1, "", "nan_to_num"], [432, 3, 1, "", "nan_to_num_"], [433, 3, 1, "", "nanmean"], [434, 3, 1, "", "nanmedian"], [435, 3, 1, "", "nanquantile"], [436, 3, 1, "", "nansum"], [437, 3, 1, "", "narrow"], [438, 3, 1, "", "narrow_copy"], [439, 2, 1, "", "nbytes"], [440, 2, 1, "", "ndim"], [441, 3, 1, "", "ndimension"], [442, 3, 1, "", "ne"], [443, 3, 1, "", "ne_"], [444, 3, 1, "", "neg"], [445, 3, 1, "", "neg_"], [446, 3, 1, "", "negative"], [447, 3, 1, "", "negative_"], [448, 3, 1, "", "nelement"], [449, 3, 1, "", "new_empty"], [450, 3, 1, "", "new_full"], [451, 3, 1, "", "new_ones"], [452, 3, 1, "", "new_tensor"], [453, 3, 1, "", "new_zeros"], [454, 3, 1, "", "nextafter"], [455, 3, 1, "", "nextafter_"], [456, 3, 1, "", "nonzero"], [457, 3, 1, "", "norm"], [458, 3, 1, "", "normal_"], [459, 3, 1, "", "not_equal"], [460, 3, 1, "", "not_equal_"], [461, 3, 1, "", "numel"], [462, 3, 1, "", "numpy"], [463, 3, 1, "", "orgqr"], [464, 3, 1, "", "ormqr"], [465, 3, 1, "", "outer"], [466, 3, 1, "", "permute"], [467, 3, 1, "", "pin_memory"], [468, 3, 1, "", "pinverse"], [469, 3, 1, "", "polygamma"], [470, 3, 1, "", "polygamma_"], [471, 3, 1, "", "positive"], [472, 3, 1, "", "pow"], [473, 3, 1, "", "pow_"], [474, 3, 1, "", "prod"], [475, 3, 1, "", "put_"], [476, 3, 1, "", "q_per_channel_axis"], [477, 3, 1, "", "q_per_channel_scales"], [478, 3, 1, "", "q_per_channel_zero_points"], [479, 3, 1, "", "q_scale"], [480, 3, 1, "", "q_zero_point"], [481, 3, 1, "", "qr"], [482, 3, 1, "", "qscheme"], [483, 3, 1, "", "quantile"], [484, 3, 1, "", "rad2deg"], [485, 3, 1, "", "random_"], [486, 3, 1, "", "ravel"], [487, 2, 1, "", "real"], [488, 3, 1, "", "reciprocal"], [489, 3, 1, "", "reciprocal_"], [490, 3, 1, "", "record_stream"], [2066, 3, 1, "", "refine_names"], [491, 3, 1, "", "register_hook"], [492, 3, 1, "", "register_post_accumulate_grad_hook"], [493, 3, 1, "", "remainder"], [494, 3, 1, "", "remainder_"], [2066, 3, 1, "", "rename"], [2066, 3, 1, "", "rename_"], [495, 3, 1, "", "renorm"], [496, 3, 1, "", "renorm_"], [497, 3, 1, "", "repeat"], [498, 3, 1, "", "repeat_interleave"], [499, 2, 1, "", "requires_grad"], [500, 3, 1, "", "requires_grad_"], [501, 3, 1, "", "reshape"], [502, 3, 1, "", "reshape_as"], [503, 3, 1, "", "resize_"], [504, 3, 1, "", "resize_as_"], [505, 3, 1, "", "resolve_conj"], [506, 3, 1, "", "resolve_neg"], [507, 3, 1, "", "retain_grad"], [508, 2, 1, "", "retains_grad"], [509, 3, 1, "", "roll"], [510, 3, 1, "", "rot90"], [511, 3, 1, "", "round"], [512, 3, 1, "", "round_"], [513, 3, 1, "", "row_indices"], [514, 3, 1, "", "rsqrt"], [515, 3, 1, "", "rsqrt_"], [516, 3, 1, "", "scatter"], [517, 3, 1, "", "scatter_"], [518, 3, 1, "", "scatter_add"], [519, 3, 1, "", "scatter_add_"], [520, 3, 1, "", "scatter_reduce"], [521, 3, 1, "", "scatter_reduce_"], [522, 3, 1, "", "select"], [523, 3, 1, "", "select_scatter"], [524, 3, 1, "", "set_"], [525, 3, 1, "", "sgn"], [526, 3, 1, "", "sgn_"], [527, 2, 1, "", "shape"], [528, 3, 1, "", "share_memory_"], [529, 3, 1, "", "short"], [530, 3, 1, "", "sigmoid"], [531, 3, 1, "", "sigmoid_"], [532, 3, 1, "", "sign"], [533, 3, 1, "", "sign_"], [534, 3, 1, "", "signbit"], [535, 3, 1, "", "sin"], [536, 3, 1, "", "sin_"], [537, 3, 1, "", "sinc"], [538, 3, 1, "", "sinc_"], [539, 3, 1, "", "sinh"], [540, 3, 1, "", "sinh_"], [541, 3, 1, "", "size"], [542, 3, 1, "", "slice_scatter"], [543, 3, 1, "", "slogdet"], [544, 3, 1, "", "smm"], [545, 3, 1, "", "softmax"], [546, 3, 1, "", "sort"], [547, 3, 1, "", "sparse_dim"], [548, 3, 1, "", "sparse_mask"], [549, 3, 1, "", "sparse_resize_"], [550, 3, 1, "", "sparse_resize_and_clear_"], [551, 3, 1, "", "split"], [552, 3, 1, "", "sqrt"], [553, 3, 1, "", "sqrt_"], [554, 3, 1, "", "square"], [555, 3, 1, "", "square_"], [556, 3, 1, "", "squeeze"], [557, 3, 1, "", "squeeze_"], [558, 3, 1, "", "sspaddmm"], [559, 3, 1, "", "std"], [560, 3, 1, "", "stft"], [561, 3, 1, "", "storage"], [562, 3, 1, "", "storage_offset"], [563, 3, 1, "", "storage_type"], [564, 3, 1, "", "stride"], [565, 3, 1, "", "sub"], [566, 3, 1, "", "sub_"], [567, 3, 1, "", "subtract"], [568, 3, 1, "", "subtract_"], [569, 3, 1, "", "sum"], [570, 3, 1, "", "sum_to_size"], [571, 3, 1, "", "svd"], [572, 3, 1, "", "swapaxes"], [573, 3, 1, "", "swapdims"], [574, 3, 1, "", "t"], [575, 3, 1, "", "t_"], [576, 3, 1, "", "take"], [577, 3, 1, "", "take_along_dim"], [578, 3, 1, "", "tan"], [579, 3, 1, "", "tan_"], [580, 3, 1, "", "tanh"], [581, 3, 1, "", "tanh_"], [582, 3, 1, "", "tensor_split"], [583, 3, 1, "", "tile"], [584, 3, 1, "", "to"], [585, 3, 1, "", "to_dense"], [586, 3, 1, "", "to_mkldnn"], [587, 3, 1, "", "to_sparse"], [588, 3, 1, "", "to_sparse_bsc"], [589, 3, 1, "", "to_sparse_bsr"], [590, 3, 1, "", "to_sparse_coo"], [591, 3, 1, "", "to_sparse_csc"], [592, 3, 1, "", "to_sparse_csr"], [593, 3, 1, "", "tolist"], [594, 3, 1, "", "topk"], [595, 3, 1, "", "trace"], [596, 3, 1, "", "transpose"], [597, 3, 1, "", "transpose_"], [598, 3, 1, "", "triangular_solve"], [599, 3, 1, "", "tril"], [600, 3, 1, "", "tril_"], [601, 3, 1, "", "triu"], [602, 3, 1, "", "triu_"], [603, 3, 1, "", "true_divide"], [604, 3, 1, "", "true_divide_"], [605, 3, 1, "", "trunc"], [606, 3, 1, "", "trunc_"], [607, 3, 1, "", "type"], [608, 3, 1, "", "type_as"], [609, 3, 1, "", "unbind"], [610, 3, 1, "", "unflatten"], [611, 3, 1, "", "unfold"], [612, 3, 1, "", "uniform_"], [613, 3, 1, "", "unique"], [614, 3, 1, "", "unique_consecutive"], [615, 3, 1, "", "unsqueeze"], [616, 3, 1, "", "unsqueeze_"], [617, 3, 1, "", "untyped_storage"], [618, 3, 1, "", "values"], [619, 3, 1, "", "var"], [620, 3, 1, "", "vdot"], [621, 3, 1, "", "view"], [622, 3, 1, "", "view_as"], [623, 3, 1, "", "vsplit"], [624, 3, 1, "", "where"], [625, 3, 1, "", "xlogy"], [626, 3, 1, "", "xlogy_"], [627, 3, 1, "", "xpu"], [628, 3, 1, "", "zero_"]], "torch.TypedStorage": [[2116, 3, 1, "", "bfloat16"], [2116, 3, 1, "", "bool"], [2116, 3, 1, "", "byte"], [2116, 3, 1, "", "char"], [2116, 3, 1, "", "clone"], [2116, 3, 1, "", "complex_double"], [2116, 3, 1, "", "complex_float"], [2116, 3, 1, "", "copy_"], [2116, 3, 1, "", "cpu"], [2116, 3, 1, "", "cuda"], [2116, 3, 1, "", "data_ptr"], [2116, 4, 1, "", "device"], [2116, 3, 1, "", "double"], [2116, 2, 1, "", "dtype"], [2116, 3, 1, "", "element_size"], [2116, 4, 1, "", "filename"], [2116, 3, 1, "", "fill_"], [2116, 3, 1, "", "float"], [2116, 3, 1, "", "float8_e4m3fn"], [2116, 3, 1, "", "float8_e4m3fnuz"], [2116, 3, 1, "", "float8_e5m2"], [2116, 3, 1, "", "float8_e5m2fnuz"], [2116, 3, 1, "", "from_buffer"], [2116, 3, 1, "", "from_file"], [2116, 3, 1, "", "get_device"], [2116, 3, 1, "", "half"], [2116, 3, 1, "", "hpu"], [2116, 3, 1, "", "int"], [2116, 4, 1, "", "is_cuda"], [2116, 4, 1, "", "is_hpu"], [2116, 3, 1, "", "is_pinned"], [2116, 3, 1, "", "is_shared"], [2116, 2, 1, "", "is_sparse"], [2116, 3, 1, "", "long"], [2116, 3, 1, "", "nbytes"], [2116, 3, 1, "", "pickle_storage_type"], [2116, 3, 1, "", "pin_memory"], [2116, 3, 1, "", "resizable"], [2116, 3, 1, "", "resize_"], [2116, 3, 1, "", "share_memory_"], [2116, 3, 1, "", "short"], [2116, 3, 1, "", "size"], [2116, 3, 1, "", "to"], [2116, 3, 1, "", "tolist"], [2116, 3, 1, "", "type"], [2116, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[2116, 3, 1, "", "bfloat16"], [2116, 3, 1, "", "bool"], [2116, 3, 1, "", "byte"], [2116, 3, 1, "", "byteswap"], [2116, 3, 1, "", "char"], [2116, 3, 1, "", "clone"], [2116, 3, 1, "", "complex_double"], [2116, 3, 1, "", "complex_float"], [2116, 3, 1, "", "copy_"], [2116, 3, 1, "", "cpu"], [2116, 3, 1, "", "cuda"], [2116, 3, 1, "", "data_ptr"], [2116, 2, 1, "", "device"], [2116, 3, 1, "", "double"], [2116, 3, 1, "", "element_size"], [2116, 4, 1, "", "filename"], [2116, 3, 1, "", "fill_"], [2116, 3, 1, "", "float"], [2116, 3, 1, "", "float8_e4m3fn"], [2116, 3, 1, "", "float8_e4m3fnuz"], [2116, 3, 1, "", "float8_e5m2"], [2116, 3, 1, "", "float8_e5m2fnuz"], [2116, 3, 1, "", "from_buffer"], [2116, 3, 1, "", "from_file"], [2116, 3, 1, "", "get_device"], [2116, 3, 1, "", "half"], [2116, 3, 1, "", "hpu"], [2116, 3, 1, "", "int"], [2116, 4, 1, "", "is_cuda"], [2116, 4, 1, "", "is_hpu"], [2116, 3, 1, "", "is_pinned"], [2116, 3, 1, "", "is_shared"], [2116, 2, 1, "", "is_sparse"], [2116, 2, 1, "", "is_sparse_csr"], [2116, 3, 1, "", "long"], [2116, 3, 1, "", "mps"], [2116, 3, 1, "", "nbytes"], [2116, 3, 1, "", "new"], [2116, 3, 1, "", "pin_memory"], [2116, 3, 1, "", "resizable"], [2116, 3, 1, "", "resize_"], [2116, 3, 1, "", "share_memory_"], [2116, 3, 1, "", "short"], [2116, 3, 1, "", "size"], [2116, 3, 1, "", "to"], [2116, 3, 1, "", "tolist"], [2116, 3, 1, "", "type"], [2116, 3, 1, "", "untyped"]], "torch.__config__": [[13, 5, 1, "", "parallel_info"], [13, 5, 1, "", "show"]], "torch.__future__": [[62, 5, 1, "", "get_overwrite_module_params_on_conversion"], [62, 5, 1, "", "get_swap_module_params_on_conversion"], [62, 5, 1, "", "set_overwrite_module_params_on_conversion"], [62, 5, 1, "", "set_swap_module_params_on_conversion"]], "torch._higher_order_ops.cond": [[12, 5, 1, "", "cond"]], "torch._library.custom_ops": [[2051, 1, 1, "", "CustomOpDef"]], "torch._library.custom_ops.CustomOpDef": [[2051, 3, 1, "", "set_kernel_enabled"]], "torch._logging": [[685, 5, 1, "", "set_logs"]], "torch.amp": [[0, 0, 0, "-", "autocast_mode"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"], [0, 0, 0, "-", "grad_scaler"]], "torch.amp.autocast_mode": [[0, 5, 1, "", "is_autocast_available"]], "torch.ao": [[2104, 0, 0, "-", "nn"], [2104, 0, 0, "-", "ns"], [2104, 0, 0, "-", "pruning"], [2104, 0, 0, "-", "quantization"]], "torch.ao.nn": [[2107, 0, 0, "-", "intrinsic"], [2107, 0, 0, "-", "qat"], [2104, 0, 0, "-", "quantizable"], [2104, 0, 0, "-", "quantized"], [2104, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[705, 1, 1, "", "BNReLU2d"], [706, 1, 1, "", "BNReLU3d"], [707, 1, 1, "", "ConvBn1d"], [708, 1, 1, "", "ConvBn2d"], [709, 1, 1, "", "ConvBn3d"], [710, 1, 1, "", "ConvBnReLU1d"], [711, 1, 1, "", "ConvBnReLU2d"], [712, 1, 1, "", "ConvBnReLU3d"], [713, 1, 1, "", "ConvReLU1d"], [714, 1, 1, "", "ConvReLU2d"], [715, 1, 1, "", "ConvReLU3d"], [716, 1, 1, "", "LinearReLU"], [2107, 0, 0, "-", "modules"], [2107, 0, 0, "-", "qat"], [2107, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.modules": [[2104, 0, 0, "-", "fused"]], "torch.ao.nn.intrinsic.qat": [[717, 1, 1, "", "ConvBn1d"], [718, 1, 1, "", "ConvBn2d"], [719, 1, 1, "", "ConvBn3d"], [720, 1, 1, "", "ConvBnReLU1d"], [721, 1, 1, "", "ConvBnReLU2d"], [722, 1, 1, "", "ConvBnReLU3d"], [723, 1, 1, "", "ConvReLU2d"], [724, 1, 1, "", "ConvReLU3d"], [725, 1, 1, "", "LinearReLU"], [726, 1, 1, "", "freeze_bn_stats"], [2107, 0, 0, "-", "modules"], [727, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.qat.modules": [[2104, 0, 0, "-", "conv_fused"], [2104, 0, 0, "-", "linear_fused"], [2104, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized": [[728, 1, 1, "", "BNReLU2d"], [729, 1, 1, "", "BNReLU3d"], [730, 1, 1, "", "ConvReLU1d"], [731, 1, 1, "", "ConvReLU2d"], [732, 1, 1, "", "ConvReLU3d"], [733, 1, 1, "", "LinearReLU"], [2107, 0, 0, "-", "dynamic"], [2107, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[734, 1, 1, "", "LinearReLU"], [2107, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2104, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules": [[2104, 0, 0, "-", "bn_relu"], [2104, 0, 0, "-", "conv_add"], [2104, 0, 0, "-", "conv_relu"], [2104, 0, 0, "-", "linear_relu"]], "torch.ao.nn.qat": [[735, 1, 1, "", "Conv2d"], [736, 1, 1, "", "Conv3d"], [737, 1, 1, "", "Linear"], [2107, 0, 0, "-", "dynamic"], [2107, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[737, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[738, 1, 1, "", "Linear"], [2107, 0, 0, "-", "modules"]], "torch.ao.nn.qat.dynamic.modules": [[2104, 0, 0, "-", "linear"]], "torch.ao.nn.qat.modules": [[2104, 0, 0, "-", "conv"], [2104, 0, 0, "-", "embedding_ops"], [2104, 0, 0, "-", "linear"]], "torch.ao.nn.quantizable": [[739, 1, 1, "", "LSTM"], [740, 1, 1, "", "MultiheadAttention"], [2104, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[740, 3, 1, "", "dequantize"], [740, 3, 1, "", "forward"]], "torch.ao.nn.quantizable.modules": [[2104, 0, 0, "-", "activation"], [2104, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized": [[741, 1, 1, "", "BatchNorm2d"], [742, 1, 1, "", "BatchNorm3d"], [743, 1, 1, "", "Conv1d"], [744, 1, 1, "", "Conv2d"], [745, 1, 1, "", "Conv3d"], [746, 1, 1, "", "ConvTranspose1d"], [747, 1, 1, "", "ConvTranspose2d"], [748, 1, 1, "", "ConvTranspose3d"], [749, 1, 1, "", "ELU"], [750, 1, 1, "", "Embedding"], [751, 1, 1, "", "EmbeddingBag"], [752, 1, 1, "", "FXFloatFunctional"], [753, 1, 1, "", "FloatFunctional"], [754, 1, 1, "", "GroupNorm"], [755, 1, 1, "", "Hardswish"], [756, 1, 1, "", "InstanceNorm1d"], [757, 1, 1, "", "InstanceNorm2d"], [758, 1, 1, "", "InstanceNorm3d"], [759, 1, 1, "", "LayerNorm"], [760, 1, 1, "", "LeakyReLU"], [761, 1, 1, "", "Linear"], [762, 1, 1, "", "QFunctional"], [763, 1, 1, "", "ReLU6"], [764, 1, 1, "", "Sigmoid"], [2107, 0, 0, "-", "dynamic"], [2107, 0, 0, "-", "functional"], [2107, 0, 0, "-", "modules"], [2104, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[743, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[744, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[745, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[750, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[751, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[761, 3, 1, "", "from_float"], [761, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[765, 1, 1, "", "GRU"], [766, 1, 1, "", "GRUCell"], [767, 1, 1, "", "LSTM"], [768, 1, 1, "", "LSTMCell"], [769, 1, 1, "", "Linear"], [770, 1, 1, "", "RNNCell"], [2107, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[769, 3, 1, "", "from_float"], [769, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic.modules": [[2104, 0, 0, "-", "conv"], [2104, 0, 0, "-", "linear"], [2104, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized.functional": [[771, 1, 1, "", "adaptive_avg_pool2d"], [772, 1, 1, "", "adaptive_avg_pool3d"], [773, 1, 1, "", "avg_pool2d"], [774, 1, 1, "", "avg_pool3d"], [775, 1, 1, "", "celu"], [776, 1, 1, "", "clamp"], [777, 1, 1, "", "conv1d"], [778, 1, 1, "", "conv2d"], [779, 1, 1, "", "conv3d"], [780, 1, 1, "", "elu"], [781, 1, 1, "", "hardsigmoid"], [782, 1, 1, "", "hardswish"], [783, 1, 1, "", "hardtanh"], [784, 1, 1, "", "interpolate"], [785, 1, 1, "", "leaky_relu"], [786, 1, 1, "", "linear"], [787, 1, 1, "", "max_pool1d"], [788, 1, 1, "", "max_pool2d"], [789, 1, 1, "", "threshold"], [790, 1, 1, "", "upsample"], [791, 1, 1, "", "upsample_bilinear"], [792, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.modules": [[2104, 0, 0, "-", "activation"], [2104, 0, 0, "-", "batchnorm"], [2104, 0, 0, "-", "conv"], [2104, 0, 0, "-", "dropout"], [2104, 0, 0, "-", "embedding_ops"], [2104, 0, 0, "-", "functional_modules"], [2104, 0, 0, "-", "linear"], [2104, 0, 0, "-", "normalization"], [2104, 0, 0, "-", "rnn"], [2104, 0, 0, "-", "utils"]], "torch.ao.nn.quantized.reference": [[2104, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.reference.modules": [[2104, 0, 0, "-", "conv"], [2104, 0, 0, "-", "linear"], [2104, 0, 0, "-", "rnn"], [2104, 0, 0, "-", "sparse"], [2104, 0, 0, "-", "utils"]], "torch.ao.nn.sparse": [[2104, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[2104, 0, 0, "-", "dynamic"], [2104, 0, 0, "-", "linear"], [2104, 0, 0, "-", "utils"]], "torch.ao.nn.sparse.quantized.dynamic": [[2104, 0, 0, "-", "linear"]], "torch.ao.ns": [[2124, 0, 0, "-", "_numeric_suite"], [2125, 0, 0, "-", "_numeric_suite_fx"], [2104, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[2124, 1, 1, "", "Logger"], [2124, 1, 1, "", "OutputLogger"], [2124, 1, 1, "", "Shadow"], [2124, 1, 1, "", "ShadowLogger"], [2124, 5, 1, "", "compare_model_outputs"], [2124, 5, 1, "", "compare_model_stub"], [2124, 5, 1, "", "compare_weights"], [2124, 5, 1, "", "get_logger_dict"], [2124, 5, 1, "", "get_matching_activations"], [2124, 5, 1, "", "prepare_model_outputs"], [2124, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[2124, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[2124, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[2124, 3, 1, "", "add"], [2124, 3, 1, "", "add_relu"], [2124, 3, 1, "", "add_scalar"], [2124, 3, 1, "", "cat"], [2124, 3, 1, "", "forward"], [2124, 3, 1, "", "mul"], [2124, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[2124, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[2125, 1, 1, "", "NSTracer"], [2125, 1, 1, "", "OutputComparisonLogger"], [2125, 1, 1, "", "OutputLogger"], [2125, 5, 1, "", "add_loggers"], [2125, 5, 1, "", "add_shadow_loggers"], [2125, 5, 1, "", "convert_n_shadows_model"], [2125, 5, 1, "", "extend_logger_results_with_comparison"], [2125, 5, 1, "", "extract_logger_info"], [2125, 5, 1, "", "extract_results_n_shadows_model"], [2125, 5, 1, "", "extract_shadow_logger_info"], [2125, 5, 1, "", "extract_weights"], [2125, 5, 1, "", "loggers_set_enabled"], [2125, 5, 1, "", "loggers_set_save_activations"], [2125, 5, 1, "", "prepare_n_shadows_model"], [2125, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[2125, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[2125, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[2125, 3, 1, "", "forward"]], "torch.ao.ns.fx": [[2104, 0, 0, "-", "graph_matcher"], [2104, 0, 0, "-", "graph_passes"], [2104, 0, 0, "-", "mappings"], [2104, 0, 0, "-", "n_shadows_utils"], [2104, 0, 0, "-", "ns_types"], [2104, 0, 0, "-", "pattern_utils"], [2104, 0, 0, "-", "qconfig_multi_mapping"], [2104, 0, 0, "-", "utils"], [2104, 0, 0, "-", "weight_utils"]], "torch.ao.ns.fx.utils": [[2125, 5, 1, "", "compute_cosine_similarity"], [2125, 5, 1, "", "compute_normalized_l2_error"], [2125, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[2104, 0, 0, "-", "scheduler"], [2104, 0, 0, "-", "sparsifier"]], "torch.ao.pruning.scheduler": [[2104, 0, 0, "-", "base_scheduler"], [2104, 0, 0, "-", "cubic_scheduler"], [2104, 0, 0, "-", "lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2104, 0, 0, "-", "base_sparsifier"], [2104, 0, 0, "-", "nearly_diagonal_sparsifier"], [2104, 0, 0, "-", "utils"], [2104, 0, 0, "-", "weight_norm_sparsifier"]], "torch.ao.quantization": [[793, 1, 1, "", "DeQuantStub"], [794, 2, 1, "", "NUMERIC_DEBUG_HANDLE_KEY"], [795, 1, 1, "", "QuantStub"], [796, 1, 1, "", "QuantWrapper"], [797, 1, 1, "", "add_quant_dequant"], [2104, 0, 0, "-", "backend_config"], [803, 1, 1, "", "compare_results"], [804, 1, 1, "", "convert"], [805, 1, 1, "", "default_eval_fn"], [806, 1, 1, "", "extract_results_from_loggers"], [2104, 0, 0, "-", "fake_quantize"], [2104, 0, 0, "-", "fuse_modules"], [2104, 0, 0, "-", "fuser_method_mappings"], [2104, 0, 0, "-", "fx"], [827, 1, 1, "", "generate_numeric_debug_handle"], [2104, 0, 0, "-", "observer"], [847, 1, 1, "", "prepare"], [848, 1, 1, "", "prepare_for_propagation_comparison"], [849, 1, 1, "", "prepare_qat"], [850, 1, 1, "", "propagate_qconfig_"], [2107, 0, 0, "-", "pt2e"], [2104, 0, 0, "-", "qconfig"], [2104, 0, 0, "-", "qconfig_mapping"], [2104, 0, 0, "-", "quant_type"], [2104, 0, 0, "-", "quantization_mappings"], [868, 1, 1, "", "quantize"], [869, 1, 1, "", "quantize_dynamic"], [2104, 0, 0, "-", "quantize_fx"], [2104, 0, 0, "-", "quantize_jit"], [2104, 0, 0, "-", "quantize_pt2e"], [874, 1, 1, "", "quantize_qat"], [2107, 0, 0, "-", "quantizer"], [2104, 0, 0, "-", "stubs"], [875, 1, 1, "", "swap_module"], [2104, 0, 0, "-", "utils"]], "torch.ao.quantization.backend_config": [[798, 1, 1, "", "BackendConfig"], [799, 1, 1, "", "BackendPatternConfig"], [800, 1, 1, "", "DTypeConfig"], [801, 1, 1, "", "DTypeWithConstraints"], [802, 1, 1, "", "ObservationType"], [2104, 0, 0, "-", "backend_config"], [2104, 0, 0, "-", "executorch"], [2104, 0, 0, "-", "fbgemm"], [2104, 0, 0, "-", "native"], [2104, 0, 0, "-", "observation_type"], [2104, 0, 0, "-", "onednn"], [2104, 0, 0, "-", "qnnpack"], [2104, 0, 0, "-", "tensorrt"], [2104, 0, 0, "-", "utils"], [2104, 0, 0, "-", "x86"]], "torch.ao.quantization.backend_config.BackendConfig": [[798, 4, 1, "", "configs"], [798, 3, 1, "", "from_dict"], [798, 3, 1, "", "set_backend_pattern_config"], [798, 3, 1, "", "set_backend_pattern_configs"], [798, 3, 1, "", "set_name"], [798, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[799, 3, 1, "", "add_dtype_config"], [799, 3, 1, "", "from_dict"], [799, 3, 1, "", "set_dtype_configs"], [799, 3, 1, "", "set_fused_module"], [799, 3, 1, "", "set_fuser_method"], [799, 3, 1, "", "set_observation_type"], [799, 3, 1, "", "set_pattern"], [799, 3, 1, "", "set_qat_module"], [799, 3, 1, "", "set_reference_quantized_module"], [799, 3, 1, "", "set_root_module"], [799, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[800, 3, 1, "", "from_dict"], [800, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[802, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [802, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [802, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[807, 1, 1, "", "FakeQuantize"], [808, 1, 1, "", "FakeQuantizeBase"], [809, 1, 1, "", "FixedQParamsFakeQuantize"], [810, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [811, 2, 1, "", "default_fake_quant"], [812, 2, 1, "", "default_fused_act_fake_quant"], [813, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [814, 2, 1, "", "default_fused_wt_fake_quant"], [815, 2, 1, "", "default_histogram_fake_quant"], [816, 2, 1, "", "default_per_channel_weight_fake_quant"], [817, 2, 1, "", "default_weight_fake_quant"], [818, 1, 1, "", "disable_fake_quant"], [819, 1, 1, "", "disable_observer"], [820, 1, 1, "", "enable_fake_quant"], [821, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize": [[809, 3, 1, "", "extra_repr"]], "torch.ao.quantization.fuse_modules": [[822, 1, 1, "", "fuse_modules"]], "torch.ao.quantization.fx": [[2104, 0, 0, "-", "convert"], [2104, 0, 0, "-", "custom_config"], [2104, 0, 0, "-", "fuse"], [2104, 0, 0, "-", "fuse_handler"], [2104, 0, 0, "-", "graph_module"], [2104, 0, 0, "-", "lower_to_fbgemm"], [2104, 0, 0, "-", "lower_to_qnnpack"], [2104, 0, 0, "-", "lstm_utils"], [2104, 0, 0, "-", "match_utils"], [2104, 0, 0, "-", "pattern_utils"], [2104, 0, 0, "-", "prepare"], [2104, 0, 0, "-", "qconfig_mapping_utils"], [2104, 0, 0, "-", "quantize_handler"], [2104, 0, 0, "-", "tracer"], [2104, 0, 0, "-", "utils"]], "torch.ao.quantization.fx.custom_config": [[823, 1, 1, "", "ConvertCustomConfig"], [824, 1, 1, "", "FuseCustomConfig"], [825, 1, 1, "", "PrepareCustomConfig"], [826, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[823, 3, 1, "", "from_dict"], [823, 3, 1, "", "set_observed_to_quantized_mapping"], [823, 3, 1, "", "set_preserved_attributes"], [823, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[824, 3, 1, "", "from_dict"], [824, 3, 1, "", "set_preserved_attributes"], [824, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[825, 3, 1, "", "from_dict"], [825, 3, 1, "", "set_float_to_observed_mapping"], [825, 3, 1, "", "set_input_quantized_indexes"], [825, 3, 1, "", "set_non_traceable_module_classes"], [825, 3, 1, "", "set_non_traceable_module_names"], [825, 3, 1, "", "set_output_quantized_indexes"], [825, 3, 1, "", "set_preserved_attributes"], [825, 3, 1, "", "set_standalone_module_class"], [825, 3, 1, "", "set_standalone_module_name"], [825, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[828, 1, 1, "", "HistogramObserver"], [829, 1, 1, "", "MinMaxObserver"], [830, 1, 1, "", "MovingAverageMinMaxObserver"], [831, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [832, 1, 1, "", "NoopObserver"], [833, 1, 1, "", "ObserverBase"], [834, 1, 1, "", "PerChannelMinMaxObserver"], [835, 1, 1, "", "PlaceholderObserver"], [836, 1, 1, "", "RecordingObserver"], [837, 2, 1, "", "default_debug_observer"], [838, 2, 1, "", "default_dynamic_quant_observer"], [839, 2, 1, "", "default_float_qparams_observer"], [840, 2, 1, "", "default_histogram_observer"], [841, 2, 1, "", "default_observer"], [842, 2, 1, "", "default_per_channel_weight_observer"], [843, 2, 1, "", "default_placeholder_observer"], [844, 2, 1, "", "default_weight_observer"], [845, 1, 1, "", "get_observer_state_dict"], [846, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[829, 3, 1, "", "calculate_qparams"], [829, 3, 1, "", "forward"], [829, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[833, 3, 1, "", "with_args"], [833, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[834, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[2104, 0, 0, "-", "duplicate_dq_pass"], [2104, 0, 0, "-", "export_utils"], [2104, 0, 0, "-", "graph_utils"], [2104, 0, 0, "-", "port_metadata_pass"], [2104, 0, 0, "-", "prepare"], [2104, 0, 0, "-", "qat_utils"], [2107, 0, 0, "-", "representation"], [2104, 0, 0, "-", "utils"]], "torch.ao.quantization.pt2e.export_utils": [[851, 1, 1, "", "model_is_exported"]], "torch.ao.quantization.pt2e.representation": [[2104, 0, 0, "-", "rewrite"]], "torch.ao.quantization.qconfig": [[852, 1, 1, "", "QConfig"], [853, 2, 1, "", "default_activation_only_qconfig"], [854, 2, 1, "", "default_debug_qconfig"], [855, 2, 1, "", "default_dynamic_qconfig"], [856, 2, 1, "", "default_per_channel_qconfig"], [857, 2, 1, "", "default_qat_qconfig"], [858, 2, 1, "", "default_qat_qconfig_v2"], [859, 2, 1, "", "default_qconfig"], [860, 2, 1, "", "default_weight_only_qconfig"], [861, 2, 1, "", "float16_dynamic_qconfig"], [862, 2, 1, "", "float16_static_qconfig"], [863, 2, 1, "", "float_qparams_weight_only_qconfig"], [864, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[865, 1, 1, "", "QConfigMapping"], [866, 1, 1, "", "get_default_qat_qconfig_mapping"], [867, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[865, 3, 1, "", "from_dict"], [865, 3, 1, "", "set_global"], [865, 3, 1, "", "set_module_name"], [865, 3, 1, "", "set_module_name_object_type_order"], [865, 3, 1, "", "set_module_name_regex"], [865, 3, 1, "", "set_object_type"], [865, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[870, 1, 1, "", "convert_fx"], [871, 1, 1, "", "fuse_fx"], [872, 1, 1, "", "prepare_fx"], [873, 1, 1, "", "prepare_qat_fx"]], "torch.ao.quantization.quantizer": [[2104, 0, 0, "-", "composable_quantizer"], [2104, 0, 0, "-", "embedding_quantizer"], [2104, 0, 0, "-", "quantizer"], [2104, 0, 0, "-", "utils"], [2104, 0, 0, "-", "x86_inductor_quantizer"], [2104, 0, 0, "-", "xnnpack_quantizer"], [2104, 0, 0, "-", "xnnpack_quantizer_utils"]], "torch.autograd": [[1, 1, 1, "", "Function"], [1, 0, 0, "-", "anomaly_mode"], [904, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [1, 0, 0, "-", "forward_ad"], [1, 0, 0, "-", "function"], [1, 0, 0, "-", "functional"], [925, 5, 1, "", "grad"], [1, 0, 0, "-", "grad_mode"], [1, 0, 0, "-", "gradcheck"], [1, 0, 0, "-", "graph"], [1, 0, 0, "-", "profiler"], [1, 0, 0, "-", "profiler_legacy"], [1, 0, 0, "-", "profiler_util"], [1, 1, 1, "", "set_detect_anomaly"], [1, 0, 0, "-", "variable"]], "torch.autograd.Function": [[900, 3, 1, "", "backward"], [901, 3, 1, "", "forward"], [902, 3, 1, "", "jvp"], [903, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[905, 1, 1, "", "UnpackedDualTensor"], [906, 1, 1, "", "dual_level"], [907, 5, 1, "", "enter_dual_level"], [908, 5, 1, "", "exit_dual_level"], [909, 5, 1, "", "make_dual"], [910, 5, 1, "", "unpack_dual"]], "torch.autograd.forward_ad.UnpackedDualTensor": [[905, 3, 1, "", "count"], [905, 3, 1, "", "index"], [905, 2, 1, "", "primal"], [905, 2, 1, "", "tangent"]], "torch.autograd.function": [[911, 1, 1, "", "BackwardCFunction"], [916, 1, 1, "", "InplaceFunction"], [917, 1, 1, "", "NestedIOFunction"], [918, 5, 1, "", "once_differentiable"]], "torch.autograd.function.BackwardCFunction": [[911, 3, 1, "", "apply"], [911, 3, 1, "", "apply_jvp"], [911, 3, 1, "", "mark_dirty"], [911, 3, 1, "", "mark_non_differentiable"], [911, 3, 1, "", "save_for_backward"], [911, 3, 1, "", "save_for_forward"], [911, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.FunctionCtx": [[912, 3, 1, "", "mark_dirty"], [913, 3, 1, "", "mark_non_differentiable"], [914, 3, 1, "", "save_for_backward"], [915, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.InplaceFunction": [[916, 3, 1, "", "backward"], [916, 3, 1, "", "forward"], [916, 3, 1, "", "jvp"], [916, 3, 1, "", "mark_dirty"], [916, 3, 1, "", "mark_non_differentiable"], [916, 3, 1, "", "save_for_backward"], [916, 3, 1, "", "save_for_forward"], [916, 3, 1, "", "set_materialize_grads"], [916, 3, 1, "", "setup_context"], [916, 3, 1, "", "vjp"], [916, 3, 1, "", "vmap"]], "torch.autograd.function.NestedIOFunction": [[917, 3, 1, "", "backward"], [917, 3, 1, "", "backward_extended"], [917, 3, 1, "", "forward"], [917, 3, 1, "", "forward_extended"], [917, 3, 1, "", "jvp"], [917, 3, 1, "", "mark_dirty"], [917, 3, 1, "", "mark_non_differentiable"], [917, 3, 1, "", "save_for_backward"], [917, 3, 1, "", "save_for_forward"], [917, 4, 1, "", "saved_tensors"], [917, 3, 1, "", "set_materialize_grads"], [917, 3, 1, "", "setup_context"], [917, 3, 1, "", "vjp"], [917, 3, 1, "", "vmap"]], "torch.autograd.functional": [[919, 5, 1, "", "hessian"], [920, 5, 1, "", "hvp"], [921, 5, 1, "", "jacobian"], [922, 5, 1, "", "jvp"], [923, 5, 1, "", "vhp"], [924, 5, 1, "", "vjp"]], "torch.autograd.grad_mode": [[926, 1, 1, "", "inference_mode"], [927, 1, 1, "", "set_grad_enabled"], [928, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.grad_mode.inference_mode": [[926, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_grad_enabled": [[927, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_multithreading_enabled": [[928, 3, 1, "", "clone"]], "torch.autograd.gradcheck": [[929, 6, 1, "", "GradcheckError"], [930, 5, 1, "", "gradcheck"], [931, 5, 1, "", "gradgradcheck"]], "torch.autograd.graph": [[1, 1, 1, "", "GradientEdge"], [1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 5, 1, "", "get_gradient_edge"], [937, 5, 1, "", "increment_version"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.graph.Node": [[932, 3, 1, "", "metadata"], [933, 3, 1, "", "name"], [934, 4, 1, "", "next_functions"], [935, 3, 1, "", "register_hook"], [936, 3, 1, "", "register_prehook"]], "torch.autograd.profiler": [[938, 1, 1, "", "EnforceUnique"], [939, 1, 1, "", "KinetoStepTracker"], [1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [940, 5, 1, "", "load_nvprof"], [941, 5, 1, "", "parse_nvprof_trace"], [1, 1, 1, "", "profile"], [946, 1, 1, "", "record_function"]], "torch.autograd.profiler.EnforceUnique": [[938, 3, 1, "", "see"]], "torch.autograd.profiler.KinetoStepTracker": [[939, 3, 1, "", "current_step"], [939, 3, 1, "", "erase_step_count"], [939, 3, 1, "", "increment_step"], [939, 3, 1, "", "init_step_count"]], "torch.autograd.profiler.profile": [[942, 3, 1, "", "export_chrome_trace"], [943, 3, 1, "", "key_averages"], [944, 4, 1, "", "self_cpu_time_total"], [945, 3, 1, "", "total_average"]], "torch.autograd.profiler_util": [[947, 1, 1, "", "Interval"], [948, 1, 1, "", "Kernel"], [949, 1, 1, "", "MemRecordsAcc"], [950, 1, 1, "", "StringTable"]], "torch.autograd.profiler_util.Interval": [[947, 3, 1, "", "elapsed_us"]], "torch.autograd.profiler_util.Kernel": [[948, 3, 1, "", "count"], [948, 2, 1, "", "device"], [948, 2, 1, "", "duration"], [948, 3, 1, "", "index"], [948, 2, 1, "", "name"]], "torch.autograd.profiler_util.MemRecordsAcc": [[949, 3, 1, "", "in_interval"]], "torch.autograd.profiler_util.StringTable": [[950, 3, 1, "", "clear"], [950, 3, 1, "", "copy"], [950, 2, 1, "", "default_factory"], [950, 3, 1, "", "fromkeys"], [950, 3, 1, "", "get"], [950, 3, 1, "", "items"], [950, 3, 1, "", "keys"], [950, 3, 1, "", "pop"], [950, 3, 1, "", "popitem"], [950, 3, 1, "", "setdefault"], [950, 3, 1, "", "update"], [950, 3, 1, "", "values"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mha"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "nnpack"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPAParams"], [2, 5, 1, "", "can_use_cudnn_attention"], [2, 5, 1, "", "can_use_efficient_attention"], [2, 5, 1, "", "can_use_flash_attention"], [2, 5, 1, "", "cudnn_sdp_enabled"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_cudnn_sdp"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "is_flash_attention_available"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_blas_library"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 0, 0, "-", "rnn"], [2, 5, 1, "", "version"]], "torch.backends.mha": [[2, 5, 1, "", "get_fastpath_enabled"], [2, 5, 1, "", "set_fastpath_enabled"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.nnpack": [[2, 5, 1, "", "flags"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "set_flags"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.backends.xeon": [[2, 0, 0, "-", "run_cpu"]], "torch.compiler": [[985, 5, 1, "", "allow_in_graph"], [986, 5, 1, "", "assume_constant_result"], [987, 5, 1, "", "compile"], [988, 5, 1, "", "cudagraph_mark_step_begin"], [989, 5, 1, "", "disable"], [990, 5, 1, "", "is_compiling"], [991, 5, 1, "", "is_dynamo_compiling"], [992, 5, 1, "", "list_backends"], [993, 5, 1, "", "reset"]], "torch.cpu": [[1006, 1, 1, "", "Stream"], [1007, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [1008, 5, 1, "", "current_device"], [1009, 5, 1, "", "current_stream"], [1010, 5, 1, "", "device_count"], [1011, 5, 1, "", "is_available"], [1012, 5, 1, "", "set_device"], [1013, 5, 1, "", "stream"], [1014, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda": [[1016, 1, 1, "", "CUDAGraph"], [1017, 1, 1, "", "CUDAPluggableAllocator"], [1018, 1, 1, "", "Event"], [1019, 1, 1, "", "ExternalStream"], [1020, 1, 1, "", "MemPool"], [1021, 1, 1, "", "MemPoolContext"], [1022, 6, 1, "", "OutOfMemoryError"], [1023, 1, 1, "", "Stream"], [1024, 1, 1, "", "StreamContext"], [18, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [1025, 5, 1, "", "caching_allocator_alloc"], [1026, 5, 1, "", "caching_allocator_delete"], [1027, 5, 1, "", "can_device_access_peer"], [1028, 5, 1, "", "change_current_allocator"], [1029, 5, 1, "", "clock_rate"], [17, 0, 0, "-", "comm"], [1035, 5, 1, "", "cudart"], [1036, 5, 1, "", "current_blas_handle"], [1037, 5, 1, "", "current_device"], [1038, 5, 1, "", "current_stream"], [1039, 5, 1, "", "default_stream"], [1040, 1, 1, "", "device"], [1041, 5, 1, "", "device_count"], [1042, 1, 1, "", "device_of"], [1043, 5, 1, "", "empty_cache"], [17, 0, 0, "-", "error"], [1044, 5, 1, "", "get_allocator_backend"], [1045, 5, 1, "", "get_arch_list"], [1046, 5, 1, "", "get_device_capability"], [1047, 5, 1, "", "get_device_name"], [1048, 5, 1, "", "get_device_properties"], [1049, 5, 1, "", "get_gencode_flags"], [1050, 5, 1, "", "get_rng_state"], [1051, 5, 1, "", "get_rng_state_all"], [1052, 5, 1, "", "get_sync_debug_mode"], [1053, 1, 1, "", "graph"], [1054, 5, 1, "", "graph_pool_handle"], [17, 0, 0, "-", "graphs"], [1055, 5, 1, "", "init"], [1056, 5, 1, "", "initial_seed"], [1057, 5, 1, "", "ipc_collect"], [1058, 5, 1, "", "is_available"], [1059, 5, 1, "", "is_current_stream_capturing"], [1060, 5, 1, "", "is_initialized"], [17, 0, 0, "-", "jiterator"], [1063, 5, 1, "", "list_gpu_processes"], [1064, 5, 1, "", "make_graphed_callables"], [1065, 5, 1, "", "manual_seed"], [1066, 5, 1, "", "manual_seed_all"], [1067, 5, 1, "", "max_memory_allocated"], [1068, 5, 1, "", "max_memory_cached"], [1069, 5, 1, "", "max_memory_reserved"], [1070, 5, 1, "", "mem_get_info"], [17, 0, 0, "-", "memory"], [1071, 5, 1, "", "memory_allocated"], [1072, 5, 1, "", "memory_cached"], [1073, 5, 1, "", "memory_reserved"], [1074, 5, 1, "", "memory_snapshot"], [1075, 5, 1, "", "memory_stats"], [1076, 5, 1, "", "memory_summary"], [1077, 5, 1, "", "memory_usage"], [17, 0, 0, "-", "nccl"], [17, 0, 0, "-", "nvtx"], [1082, 5, 1, "", "power_draw"], [17, 0, 0, "-", "profiler"], [17, 0, 0, "-", "random"], [1083, 5, 1, "", "reset_max_memory_allocated"], [1084, 5, 1, "", "reset_max_memory_cached"], [1085, 5, 1, "", "reset_peak_memory_stats"], [1086, 5, 1, "", "seed"], [1087, 5, 1, "", "seed_all"], [1088, 5, 1, "", "set_device"], [1089, 5, 1, "", "set_per_process_memory_fraction"], [1090, 5, 1, "", "set_rng_state"], [1091, 5, 1, "", "set_rng_state_all"], [1092, 5, 1, "", "set_stream"], [1093, 5, 1, "", "set_sync_debug_mode"], [17, 0, 0, "-", "sparse"], [1094, 5, 1, "", "stream"], [17, 0, 0, "-", "streams"], [1095, 5, 1, "", "synchronize"], [1096, 5, 1, "", "temperature"], [19, 0, 0, "-", "tunable"], [1097, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[1016, 3, 1, "", "capture_begin"], [1016, 3, 1, "", "capture_end"], [1016, 3, 1, "", "debug_dump"], [1016, 3, 1, "", "enable_debug_mode"], [1016, 3, 1, "", "pool"], [1016, 3, 1, "", "replay"], [1016, 3, 1, "", "reset"]], "torch.cuda.Event": [[1018, 3, 1, "", "elapsed_time"], [1018, 3, 1, "", "from_ipc_handle"], [1018, 3, 1, "", "ipc_handle"], [1018, 3, 1, "", "query"], [1018, 3, 1, "", "record"], [1018, 3, 1, "", "synchronize"], [1018, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[1019, 3, 1, "", "query"], [1019, 3, 1, "", "record_event"], [1019, 3, 1, "", "synchronize"], [1019, 3, 1, "", "wait_event"], [1019, 3, 1, "", "wait_stream"]], "torch.cuda.MemPool": [[1020, 4, 1, "", "allocator"], [1020, 4, 1, "", "id"]], "torch.cuda.MemPoolContext": [[1021, 3, 1, "", "active_pool"]], "torch.cuda.Stream": [[1023, 3, 1, "", "query"], [1023, 3, 1, "", "record_event"], [1023, 3, 1, "", "synchronize"], [1023, 3, 1, "", "wait_event"], [1023, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[18, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "common"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda.comm": [[1030, 5, 1, "", "broadcast"], [1031, 5, 1, "", "broadcast_coalesced"], [1032, 5, 1, "", "gather"], [1033, 5, 1, "", "reduce_add"], [1034, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1061, 5, 1, "", "_create_jit_fn"], [1062, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[2147, 5, 1, "", "_dump_snapshot"], [2147, 5, 1, "", "_record_memory_history"], [2147, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1078, 5, 1, "", "mark"], [1079, 5, 1, "", "range"], [1080, 5, 1, "", "range_pop"], [1081, 5, 1, "", "range_push"]], "torch.cuda.tunable": [[19, 5, 1, "", "enable"], [19, 5, 1, "", "get_filename"], [19, 5, 1, "", "get_max_tuning_duration"], [19, 5, 1, "", "get_max_tuning_iterations"], [19, 5, 1, "", "get_results"], [19, 5, 1, "", "get_validators"], [19, 5, 1, "", "is_enabled"], [19, 5, 1, "", "read_file"], [19, 5, 1, "", "set_filename"], [19, 5, 1, "", "set_max_tuning_duration"], [19, 5, 1, "", "set_max_tuning_iterations"], [19, 5, 1, "", "tuning_enable"], [19, 5, 1, "", "tuning_is_enabled"], [19, 5, 1, "", "write_file"], [19, 5, 1, "", "write_file_on_exit"]], "torch.distributed": [[28, 1, 1, "", "Backend"], [28, 1, 1, "", "DistBackendError"], [28, 1, 1, "", "DistError"], [28, 1, 1, "", "DistNetworkError"], [28, 1, 1, "", "DistStoreError"], [28, 1, 1, "", "FileStore"], [24, 1, 1, "", "GradBucket"], [28, 1, 1, "", "HashStore"], [28, 1, 1, "", "P2POp"], [28, 1, 1, "", "PrefixStore"], [28, 1, 1, "", "ReduceOp"], [28, 1, 1, "", "Store"], [28, 1, 1, "", "TCPStore"], [28, 1, 1, "", "Work"], [28, 0, 0, "-", "algorithms"], [28, 5, 1, "", "all_gather"], [28, 5, 1, "", "all_gather_into_tensor"], [28, 5, 1, "", "all_gather_object"], [28, 5, 1, "", "all_reduce"], [28, 5, 1, "", "all_to_all"], [28, 5, 1, "", "all_to_all_single"], [28, 0, 0, "-", "argparse_util"], [2109, 0, 0, "-", "autograd"], [28, 5, 1, "", "barrier"], [28, 5, 1, "", "batch_isend_irecv"], [28, 5, 1, "", "breakpoint"], [28, 5, 1, "", "broadcast"], [28, 5, 1, "", "broadcast_object_list"], [28, 0, 0, "-", "c10d_logger"], [30, 0, 0, "-", "checkpoint"], [28, 0, 0, "-", "collective_utils"], [28, 0, 0, "-", "constants"], [28, 0, 0, "-", "device_mesh"], [28, 0, 0, "-", "distributed_c10d"], [28, 0, 0, "-", "elastic"], [55, 0, 0, "-", "fsdp"], [28, 5, 1, "", "gather"], [28, 5, 1, "", "gather_object"], [28, 5, 1, "", "get_backend"], [28, 5, 1, "", "get_global_rank"], [28, 5, 1, "", "get_group_rank"], [28, 5, 1, "", "get_process_group_ranks"], [28, 5, 1, "", "get_rank"], [28, 5, 1, "", "get_world_size"], [28, 5, 1, "", "init_process_group"], [28, 5, 1, "", "irecv"], [28, 5, 1, "", "is_available"], [28, 5, 1, "", "is_gloo_available"], [28, 5, 1, "", "is_initialized"], [28, 5, 1, "", "is_mpi_available"], [28, 5, 1, "", "is_nccl_available"], [28, 5, 1, "", "is_torchelastic_launched"], [28, 5, 1, "", "isend"], [28, 0, 0, "-", "launch"], [28, 0, 0, "-", "launcher"], [28, 0, 0, "-", "logging_handlers"], [28, 5, 1, "", "monitored_barrier"], [28, 5, 1, "", "new_group"], [28, 0, 0, "-", "nn"], [32, 0, 0, "-", "optim"], [33, 0, 0, "-", "pipelining"], [28, 5, 1, "", "recv"], [28, 5, 1, "", "recv_object_list"], [28, 5, 1, "", "reduce"], [28, 1, 1, "", "reduce_op"], [28, 5, 1, "", "reduce_scatter"], [28, 5, 1, "", "reduce_scatter_tensor"], [28, 0, 0, "-", "remote_device"], [28, 0, 0, "-", "rendezvous"], [2109, 0, 0, "-", "rpc"], [48, 0, 0, "-", "run"], [28, 5, 1, "", "scatter"], [28, 5, 1, "", "scatter_object_list"], [28, 5, 1, "", "send"], [28, 5, 1, "", "send_object_list"], [28, 0, 0, "-", "tensor"], [28, 0, 0, "-", "utils"]], "torch.distributed.Backend": [[28, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[24, 5, 1, "", "buffer"], [24, 5, 1, "", "gradients"], [24, 5, 1, "", "index"], [24, 5, 1, "", "is_last"], [24, 5, 1, "", "parameters"], [24, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[28, 5, 1, "", "add"], [28, 5, 1, "", "compare_set"], [28, 5, 1, "", "delete_key"], [28, 5, 1, "", "get"], [28, 5, 1, "", "num_keys"], [28, 5, 1, "", "set"], [28, 5, 1, "", "set_timeout"], [28, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[29, 1, 1, "", "Join"], [29, 1, 1, "", "JoinHook"], [29, 1, 1, "", "Joinable"], [28, 0, 0, "-", "ddp_comm_hooks"], [28, 0, 0, "-", "join"], [28, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[29, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[29, 3, 1, "", "main_hook"], [29, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[29, 4, 1, "", "join_device"], [29, 3, 1, "", "join_hook"], [29, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks": [[28, 0, 0, "-", "ddp_zero_hook"], [28, 0, 0, "-", "debugging_hooks"], [28, 0, 0, "-", "default_hooks"], [28, 0, 0, "-", "mixed_precision_hooks"], [28, 0, 0, "-", "optimizer_overlap_hooks"], [28, 0, 0, "-", "post_localSGD_hook"], [28, 0, 0, "-", "powerSGD_hook"], [28, 0, 0, "-", "quantization_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[24, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[24, 5, 1, "", "allreduce_hook"], [24, 5, 1, "", "bf16_compress_hook"], [24, 5, 1, "", "bf16_compress_wrapper"], [24, 5, 1, "", "fp16_compress_hook"], [24, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[24, 1, 1, "", "PowerSGDState"], [24, 5, 1, "", "batched_powerSGD_hook"], [24, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[24, 3, 1, "", "__getstate__"], [24, 3, 1, "", "__setstate__"]], "torch.distributed.algorithms.model_averaging": [[28, 0, 0, "-", "averagers"], [28, 0, 0, "-", "hierarchical_model_averager"], [28, 0, 0, "-", "utils"]], "torch.distributed.autograd": [[2109, 5, 1, "", "backward"], [2109, 1, 1, "", "context"], [2109, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[30, 1, 1, "", "DefaultLoadPlanner"], [30, 1, 1, "", "DefaultSavePlanner"], [30, 1, 1, "", "FileSystemReader"], [30, 1, 1, "", "FileSystemWriter"], [30, 1, 1, "", "LoadPlan"], [30, 1, 1, "", "LoadPlanner"], [30, 1, 1, "", "ReadItem"], [30, 1, 1, "", "SavePlan"], [30, 1, 1, "", "SavePlanner"], [30, 1, 1, "", "StorageReader"], [30, 1, 1, "", "StorageWriter"], [28, 0, 0, "-", "api"], [28, 0, 0, "-", "default_planner"], [28, 0, 0, "-", "filesystem"], [30, 0, 0, "-", "format_utils"], [30, 0, 0, "-", "logger"], [30, 0, 0, "-", "logging_handlers"], [28, 0, 0, "-", "metadata"], [28, 0, 0, "-", "optimizer"], [28, 0, 0, "-", "planner"], [28, 0, 0, "-", "planner_helpers"], [28, 0, 0, "-", "resharding"], [30, 0, 0, "-", "staging"], [28, 0, 0, "-", "state_dict"], [28, 0, 0, "-", "state_dict_loader"], [28, 0, 0, "-", "state_dict_saver"], [28, 0, 0, "-", "stateful"], [28, 0, 0, "-", "storage"], [28, 0, 0, "-", "utils"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[30, 3, 1, "", "lookup_tensor"], [30, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[30, 3, 1, "", "lookup_object"], [30, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.FileSystemReader": [[30, 4, 1, "", "checkpoint_id"]], "torch.distributed.checkpoint.FileSystemWriter": [[30, 3, 1, "", "stage"]], "torch.distributed.checkpoint.LoadPlanner": [[30, 3, 1, "", "commit_tensor"], [30, 3, 1, "", "create_global_plan"], [30, 3, 1, "", "create_local_plan"], [30, 3, 1, "", "finish_plan"], [30, 3, 1, "", "load_bytes"], [30, 3, 1, "", "resolve_bytes"], [30, 3, 1, "", "resolve_tensor"], [30, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[30, 3, 1, "", "create_global_plan"], [30, 3, 1, "", "create_local_plan"], [30, 3, 1, "", "finish_plan"], [30, 3, 1, "", "resolve_data"], [30, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[30, 3, 1, "", "prepare_global_plan"], [30, 3, 1, "", "prepare_local_plan"], [30, 3, 1, "", "read_data"], [30, 3, 1, "", "read_metadata"], [30, 3, 1, "", "reset"], [30, 3, 1, "", "set_up_storage_reader"], [30, 3, 1, "", "validate_checkpoint_id"]], "torch.distributed.checkpoint.StorageWriter": [[30, 3, 1, "", "finish"], [30, 3, 1, "", "prepare_global_plan"], [30, 3, 1, "", "prepare_local_plan"], [30, 3, 1, "", "reset"], [30, 3, 1, "", "set_up_storage_writer"], [30, 3, 1, "", "storage_meta"], [30, 3, 1, "", "validate_checkpoint_id"], [30, 3, 1, "", "write_data"]], "torch.distributed.checkpoint.format_utils": [[30, 1, 1, "", "BroadcastingTorchSaveReader"], [30, 1, 1, "", "DynamicMetaLoadPlanner"], [30, 5, 1, "", "dcp_to_torch_save"], [30, 5, 1, "", "torch_save_to_dcp"]], "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader": [[30, 3, 1, "", "prepare_global_plan"], [30, 3, 1, "", "prepare_local_plan"], [30, 3, 1, "", "read_data"], [30, 3, 1, "", "read_metadata"], [30, 3, 1, "", "reset"], [30, 3, 1, "", "set_up_storage_reader"], [30, 3, 1, "", "validate_checkpoint_id"]], "torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner": [[30, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.planner": [[30, 1, 1, "", "WriteItem"]], "torch.distributed.checkpoint.planner.WriteItem": [[30, 3, 1, "", "tensor_storage_size"]], "torch.distributed.checkpoint.staging": [[30, 1, 1, "", "AsyncStager"], [30, 1, 1, "", "BlockingAsyncStager"]], "torch.distributed.checkpoint.staging.AsyncStager": [[30, 4, 1, "", "should_synchronize_after_execute"], [30, 3, 1, "", "stage"], [30, 3, 1, "", "synchronize_staging"]], "torch.distributed.checkpoint.staging.BlockingAsyncStager": [[30, 3, 1, "", "stage"], [30, 3, 1, "", "synchronize_staging"]], "torch.distributed.checkpoint.state_dict": [[30, 1, 1, "", "StateDictOptions"], [30, 5, 1, "", "get_model_state_dict"], [30, 5, 1, "", "get_optimizer_state_dict"], [30, 5, 1, "", "get_state_dict"], [30, 5, 1, "", "set_model_state_dict"], [30, 5, 1, "", "set_optimizer_state_dict"], [30, 5, 1, "", "set_state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[30, 5, 1, "", "load"], [30, 5, 1, "", "load_state_dict"]], "torch.distributed.checkpoint.state_dict_saver": [[30, 5, 1, "", "async_save"], [30, 5, 1, "", "save"], [30, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.stateful": [[30, 1, 1, "", "Stateful"]], "torch.distributed.checkpoint.stateful.Stateful": [[30, 3, 1, "", "load_state_dict"], [30, 3, 1, "", "state_dict"]], "torch.distributed.device_mesh": [[28, 1, 1, "", "DeviceMesh"], [28, 5, 1, "", "init_device_mesh"]], "torch.distributed.elastic": [[37, 0, 0, "-", "agent"], [38, 0, 0, "-", "control_plane"], [41, 0, 0, "-", "events"], [44, 0, 0, "-", "metrics"], [45, 0, 0, "-", "multiprocessing"], [47, 0, 0, "-", "rendezvous"], [50, 0, 0, "-", "timer"], [28, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[37, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[37, 1, 1, "", "ElasticAgent"], [37, 1, 1, "", "SimpleElasticAgent"], [37, 1, 1, "", "Worker"], [37, 1, 1, "", "WorkerGroup"], [37, 1, 1, "", "WorkerSpec"], [37, 1, 1, "", "WorkerState"], [28, 0, 0, "-", "api"], [37, 0, 0, "-", "health_check_server"], [28, 0, 0, "-", "local_elastic_agent"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[37, 3, 1, "", "get_worker_group"], [37, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[37, 3, 1, "", "_assign_worker_ranks"], [37, 3, 1, "", "_exit_barrier"], [37, 3, 1, "", "_initialize_workers"], [37, 3, 1, "", "_monitor_workers"], [37, 3, 1, "", "_rendezvous"], [37, 3, 1, "", "_restart_workers"], [37, 3, 1, "", "_shutdown"], [37, 3, 1, "", "_start_workers"], [37, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[37, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[37, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[37, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.health_check_server": [[37, 1, 1, "", "HealthCheckServer"], [37, 5, 1, "", "create_healthcheck_server"]], "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer": [[37, 3, 1, "", "start"], [37, 3, 1, "", "stop"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[37, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.control_plane": [[38, 5, 1, "", "worker_main"]], "torch.distributed.elastic.events": [[28, 0, 0, "-", "api"], [41, 5, 1, "", "construct_and_record_rdzv_event"], [41, 5, 1, "", "get_logging_handler"], [28, 0, 0, "-", "handlers"], [41, 5, 1, "", "record"]], "torch.distributed.elastic.events.api": [[41, 1, 1, "", "Event"], [41, 2, 1, "", "EventMetadataValue"], [41, 1, 1, "", "EventSource"]], "torch.distributed.elastic.metrics": [[28, 0, 0, "-", "api"], [44, 5, 1, "", "configure"], [44, 5, 1, "", "prof"], [44, 5, 1, "", "put_metric"]], "torch.distributed.elastic.metrics.api": [[44, 1, 1, "", "ConsoleMetricHandler"], [44, 1, 1, "", "MetricHandler"], [44, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.multiprocessing": [[28, 0, 0, "-", "api"], [40, 0, 0, "-", "errors"], [28, 0, 0, "-", "redirects"], [45, 5, 1, "", "start_processes"], [49, 0, 0, "-", "subprocess_handler"], [28, 0, 0, "-", "tail_log"]], "torch.distributed.elastic.multiprocessing.api": [[45, 1, 1, "", "DefaultLogsSpecs"], [45, 1, 1, "", "LogsDest"], [45, 1, 1, "", "LogsSpecs"], [45, 1, 1, "", "MultiprocessContext"], [45, 1, 1, "", "PContext"], [45, 1, 1, "", "RunProcsResult"], [45, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs": [[45, 3, 1, "", "reify"]], "torch.distributed.elastic.multiprocessing.api.LogsSpecs": [[45, 3, 1, "", "reify"]], "torch.distributed.elastic.multiprocessing.errors": [[40, 1, 1, "", "ChildFailedError"], [40, 1, 1, "", "ErrorHandler"], [40, 1, 1, "", "ProcessFailure"], [28, 0, 0, "-", "error_handler"], [28, 0, 0, "-", "handlers"], [40, 5, 1, "", "record"]], "torch.distributed.elastic.multiprocessing.subprocess_handler": [[49, 0, 0, "-", "handlers"], [49, 0, 0, "-", "subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers": [[49, 5, 1, "", "get_subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler": [[49, 1, 1, "", "SubprocessHandler"]], "torch.distributed.elastic.rendezvous": [[47, 1, 1, "", "RendezvousHandler"], [47, 1, 1, "", "RendezvousHandlerRegistry"], [47, 1, 1, "", "RendezvousInfo"], [47, 1, 1, "", "RendezvousParameters"], [28, 0, 0, "-", "api"], [28, 0, 0, "-", "c10d_rendezvous_backend"], [28, 0, 0, "-", "dynamic_rendezvous"], [28, 0, 0, "-", "etcd_rendezvous"], [28, 0, 0, "-", "etcd_rendezvous_backend"], [28, 0, 0, "-", "etcd_server"], [28, 0, 0, "-", "etcd_store"], [47, 0, 0, "-", "registry"], [28, 0, 0, "-", "static_tcp_rendezvous"], [28, 0, 0, "-", "utils"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[47, 3, 1, "", "get_backend"], [47, 3, 1, "", "get_run_id"], [47, 3, 1, "", "is_closed"], [47, 3, 1, "", "next_rendezvous"], [47, 3, 1, "", "num_nodes_waiting"], [47, 3, 1, "", "set_closed"], [47, 3, 1, "", "shutdown"], [47, 4, 1, "", "use_agent_store"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[47, 3, 1, "", "get"], [47, 3, 1, "", "get_as_bool"], [47, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.api": [[47, 1, 1, "", "RendezvousClosedError"], [47, 1, 1, "", "RendezvousConnectionError"], [47, 1, 1, "", "RendezvousError"], [47, 1, 1, "", "RendezvousGracefulExitError"], [47, 1, 1, "", "RendezvousStateError"], [47, 1, 1, "", "RendezvousStoreInfo"], [47, 1, 1, "", "RendezvousTimeoutError"]], "torch.distributed.elastic.rendezvous.api.RendezvousStoreInfo": [[47, 3, 1, "", "build"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[47, 1, 1, "", "C10dRendezvousBackend"], [47, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[47, 3, 1, "", "get_state"], [47, 4, 1, "", "name"], [47, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[47, 1, 1, "", "DynamicRendezvousHandler"], [47, 1, 1, "", "RendezvousBackend"], [47, 1, 1, "", "RendezvousTimeout"], [47, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[47, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[47, 3, 1, "", "get_state"], [47, 4, 1, "", "name"], [47, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[47, 4, 1, "", "close"], [47, 4, 1, "", "heartbeat"], [47, 4, 1, "", "join"], [47, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[47, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[47, 1, 1, "", "EtcdRendezvousBackend"], [47, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[47, 3, 1, "", "get_state"], [47, 4, 1, "", "name"], [47, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[47, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[47, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[47, 3, 1, "", "add"], [47, 3, 1, "", "check"], [47, 3, 1, "", "get"], [47, 3, 1, "", "set"], [47, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[50, 1, 1, "", "FileTimerClient"], [50, 1, 1, "", "FileTimerServer"], [50, 1, 1, "", "LocalTimerClient"], [50, 1, 1, "", "LocalTimerServer"], [50, 1, 1, "", "TimerClient"], [50, 1, 1, "", "TimerRequest"], [50, 1, 1, "", "TimerServer"], [28, 0, 0, "-", "api"], [50, 5, 1, "", "configure"], [50, 0, 0, "-", "debug_info_logging"], [50, 5, 1, "", "expires"], [28, 0, 0, "-", "file_based_local_timer"], [28, 0, 0, "-", "local_timer"]], "torch.distributed.elastic.timer.TimerClient": [[50, 3, 1, "", "acquire"], [50, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[50, 3, 1, "", "clear_timers"], [50, 3, 1, "", "get_expired_timers"], [50, 3, 1, "", "register_timers"]], "torch.distributed.elastic.timer.debug_info_logging": [[50, 5, 1, "", "log_debug_info_for_expired_timers"]], "torch.distributed.elastic.utils": [[28, 0, 0, "-", "api"], [28, 0, 0, "-", "data"], [28, 0, 0, "-", "distributed"], [28, 0, 0, "-", "log_level"], [28, 0, 0, "-", "logging"], [28, 0, 0, "-", "store"]], "torch.distributed.elastic.utils.data": [[28, 0, 0, "-", "cycling_iterator"], [28, 0, 0, "-", "elastic_distributed_sampler"]], "torch.distributed.fsdp": [[55, 1, 1, "", "BackwardPrefetch"], [55, 1, 1, "", "CPUOffload"], [55, 1, 1, "", "FullOptimStateDictConfig"], [55, 1, 1, "", "FullStateDictConfig"], [55, 1, 1, "", "FullyShardedDataParallel"], [55, 1, 1, "", "LocalOptimStateDictConfig"], [55, 1, 1, "", "LocalStateDictConfig"], [55, 1, 1, "", "MixedPrecision"], [55, 1, 1, "", "OptimStateDictConfig"], [55, 1, 1, "", "ShardedOptimStateDictConfig"], [55, 1, 1, "", "ShardedStateDictConfig"], [55, 1, 1, "", "ShardingStrategy"], [55, 1, 1, "", "StateDictConfig"], [55, 1, 1, "", "StateDictSettings"], [28, 0, 0, "-", "api"], [28, 0, 0, "-", "fully_sharded_data_parallel"], [28, 0, 0, "-", "sharded_grad_scaler"], [28, 0, 0, "-", "wrap"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[55, 3, 1, "", "apply"], [55, 3, 1, "", "check_is_root"], [55, 3, 1, "", "clip_grad_norm_"], [55, 3, 1, "", "flatten_sharded_optim_state_dict"], [55, 3, 1, "", "forward"], [55, 3, 1, "", "fsdp_modules"], [55, 3, 1, "", "full_optim_state_dict"], [55, 3, 1, "", "get_state_dict_type"], [55, 4, 1, "", "module"], [55, 3, 1, "", "named_buffers"], [55, 3, 1, "", "named_parameters"], [55, 3, 1, "", "no_sync"], [55, 3, 1, "", "optim_state_dict"], [55, 3, 1, "", "optim_state_dict_to_load"], [55, 3, 1, "", "register_comm_hook"], [55, 3, 1, "", "rekey_optim_state_dict"], [55, 3, 1, "", "scatter_full_optim_state_dict"], [55, 3, 1, "", "set_state_dict_type"], [55, 3, 1, "", "shard_full_optim_state_dict"], [55, 3, 1, "", "sharded_optim_state_dict"], [55, 3, 1, "", "state_dict_type"], [55, 3, 1, "", "summon_full_params"]], "torch.distributed.launcher": [[28, 0, 0, "-", "api"]], "torch.distributed.nn": [[28, 0, 0, "-", "api"], [28, 0, 0, "-", "functional"], [28, 0, 0, "-", "jit"]], "torch.distributed.nn.api": [[28, 0, 0, "-", "remote_module"]], "torch.distributed.nn.api.remote_module": [[2109, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[2109, 3, 1, "", "get_module_rref"], [2109, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[28, 0, 0, "-", "instantiator"], [28, 0, 0, "-", "templates"]], "torch.distributed.nn.jit.templates": [[28, 0, 0, "-", "remote_module_template"]], "torch.distributed.optim": [[32, 1, 1, "", "DistributedOptimizer"], [32, 1, 1, "", "PostLocalSGDOptimizer"], [32, 1, 1, "", "ZeroRedundancyOptimizer"], [28, 0, 0, "-", "apply_optimizer_in_backward"], [28, 0, 0, "-", "functional_adadelta"], [28, 0, 0, "-", "functional_adagrad"], [28, 0, 0, "-", "functional_adam"], [28, 0, 0, "-", "functional_adamax"], [28, 0, 0, "-", "functional_adamw"], [28, 0, 0, "-", "functional_rmsprop"], [28, 0, 0, "-", "functional_rprop"], [28, 0, 0, "-", "functional_sgd"], [28, 0, 0, "-", "named_optimizer"], [28, 0, 0, "-", "optimizer"], [28, 0, 0, "-", "post_localSGD_optimizer"], [28, 0, 0, "-", "utils"], [28, 0, 0, "-", "zero_redundancy_optimizer"]], "torch.distributed.optim.DistributedOptimizer": [[32, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[32, 3, 1, "", "load_state_dict"], [32, 3, 1, "", "state_dict"], [32, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[32, 3, 1, "", "add_param_group"], [32, 3, 1, "", "consolidate_state_dict"], [32, 4, 1, "", "join_device"], [32, 3, 1, "", "join_hook"], [32, 4, 1, "", "join_process_group"], [32, 3, 1, "", "load_state_dict"], [32, 3, 1, "", "state_dict"], [32, 3, 1, "", "step"]], "torch.distributed.pipelining": [[33, 1, 1, "", "Pipe"], [33, 1, 1, "", "SplitPoint"], [33, 0, 0, "-", "microbatch"], [33, 5, 1, "", "pipe_split"], [33, 5, 1, "", "pipeline"], [33, 0, 0, "-", "schedules"], [33, 0, 0, "-", "stage"]], "torch.distributed.pipelining.microbatch": [[33, 1, 1, "", "TensorChunkSpec"], [33, 5, 1, "", "merge_chunks"], [33, 5, 1, "", "split_args_kwargs_into_chunks"]], "torch.distributed.pipelining.schedules": [[33, 1, 1, "", "PipelineScheduleMulti"], [33, 1, 1, "", "PipelineScheduleSingle"], [33, 1, 1, "", "Schedule1F1B"], [33, 1, 1, "", "ScheduleFlexibleInterleaved1F1B"], [33, 1, 1, "", "ScheduleGPipe"], [33, 1, 1, "", "ScheduleInterleaved1F1B"], [33, 1, 1, "", "ScheduleLoopedBFS"]], "torch.distributed.pipelining.schedules.PipelineScheduleMulti": [[33, 3, 1, "", "step"]], "torch.distributed.pipelining.schedules.PipelineScheduleSingle": [[33, 3, 1, "", "step"]], "torch.distributed.pipelining.stage": [[33, 1, 1, "", "PipelineStage"], [33, 5, 1, "", "build_stage"]], "torch.distributed.rpc": [[2109, 1, 1, "", "BackendType"], [2109, 1, 1, "", "PyRRef"], [2109, 1, 1, "", "RpcBackendOptions"], [2109, 1, 1, "", "TensorPipeRpcBackendOptions"], [2109, 1, 1, "", "WorkerInfo"], [28, 0, 0, "-", "api"], [28, 0, 0, "-", "backend_registry"], [28, 0, 0, "-", "constants"], [28, 0, 0, "-", "functions"], [2109, 5, 1, "", "get_worker_info"], [2109, 5, 1, "", "init_rpc"], [28, 0, 0, "-", "internal"], [28, 0, 0, "-", "options"], [2109, 5, 1, "", "remote"], [2109, 5, 1, "", "rpc_async"], [2109, 5, 1, "", "rpc_sync"], [28, 0, 0, "-", "rref_proxy"], [28, 0, 0, "-", "server_process_global_profiler"], [2109, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[2109, 3, 1, "", "backward"], [2109, 3, 1, "", "confirmed_by_owner"], [2109, 3, 1, "", "is_owner"], [2109, 3, 1, "", "local_value"], [2109, 3, 1, "", "owner"], [2109, 3, 1, "", "owner_name"], [2109, 3, 1, "", "remote"], [2109, 3, 1, "", "rpc_async"], [2109, 3, 1, "", "rpc_sync"], [2109, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[2109, 4, 1, "", "init_method"], [2109, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[2109, 4, 1, "", "device_maps"], [2109, 4, 1, "", "devices"], [2109, 4, 1, "", "init_method"], [2109, 4, 1, "", "num_worker_threads"], [2109, 4, 1, "", "rpc_timeout"], [2109, 3, 1, "", "set_device_map"], [2109, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[2109, 4, 1, "", "id"], [2109, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[2109, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[34, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel": [[34, 1, 1, "", "ColwiseParallel"], [34, 1, 1, "", "PrepareModuleInput"], [34, 1, 1, "", "PrepareModuleOutput"], [34, 1, 1, "", "RowwiseParallel"], [34, 1, 1, "", "SequenceParallel"], [28, 0, 0, "-", "api"], [28, 0, 0, "-", "ddp"], [28, 0, 0, "-", "fsdp"], [28, 0, 0, "-", "input_reshard"], [28, 0, 0, "-", "loss"], [34, 5, 1, "", "loss_parallel"], [34, 5, 1, "", "parallelize_module"], [28, 0, 0, "-", "style"]], "torch.distributions": [[35, 0, 0, "-", "bernoulli"], [35, 0, 0, "-", "beta"], [35, 0, 0, "-", "binomial"], [35, 0, 0, "-", "categorical"], [35, 0, 0, "-", "cauchy"], [35, 0, 0, "-", "chi2"], [35, 0, 0, "-", "constraint_registry"], [35, 0, 0, "-", "constraints"], [35, 0, 0, "-", "continuous_bernoulli"], [35, 0, 0, "-", "dirichlet"], [35, 0, 0, "-", "distribution"], [35, 0, 0, "-", "exp_family"], [35, 0, 0, "-", "exponential"], [35, 0, 0, "-", "fishersnedecor"], [35, 0, 0, "-", "gamma"], [35, 0, 0, "-", "geometric"], [35, 0, 0, "-", "gumbel"], [35, 0, 0, "-", "half_cauchy"], [35, 0, 0, "-", "half_normal"], [35, 0, 0, "-", "independent"], [35, 0, 0, "-", "inverse_gamma"], [35, 0, 0, "-", "kl"], [35, 0, 0, "-", "kumaraswamy"], [35, 0, 0, "-", "laplace"], [35, 0, 0, "-", "lkj_cholesky"], [35, 0, 0, "-", "log_normal"], [35, 0, 0, "-", "logistic_normal"], [35, 0, 0, "-", "lowrank_multivariate_normal"], [35, 0, 0, "-", "mixture_same_family"], [35, 0, 0, "-", "multinomial"], [35, 0, 0, "-", "multivariate_normal"], [35, 0, 0, "-", "negative_binomial"], [35, 0, 0, "-", "normal"], [35, 0, 0, "-", "one_hot_categorical"], [35, 0, 0, "-", "pareto"], [35, 0, 0, "-", "poisson"], [35, 0, 0, "-", "relaxed_bernoulli"], [35, 0, 0, "-", "relaxed_categorical"], [35, 0, 0, "-", "studentT"], [35, 0, 0, "-", "transformed_distribution"], [35, 0, 0, "-", "transforms"], [35, 0, 0, "-", "uniform"], [35, 0, 0, "-", "utils"], [35, 0, 0, "-", "von_mises"], [35, 0, 0, "-", "weibull"], [35, 0, 0, "-", "wishart"]], "torch.distributions.bernoulli": [[35, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "enumerate_support"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_enumerate_support"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "param_shape"], [35, 4, 1, "", "probs"], [35, 3, 1, "", "sample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.beta": [[35, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[35, 2, 1, "", "arg_constraints"], [35, 4, 1, "", "concentration0"], [35, 4, 1, "", "concentration1"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.binomial": [[35, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "enumerate_support"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_enumerate_support"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "param_shape"], [35, 4, 1, "", "probs"], [35, 3, 1, "", "sample"], [35, 4, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.categorical": [[35, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "enumerate_support"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_enumerate_support"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "param_shape"], [35, 4, 1, "", "probs"], [35, 3, 1, "", "sample"], [35, 4, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[35, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.chi2": [[35, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[35, 2, 1, "", "arg_constraints"], [35, 4, 1, "", "df"], [35, 3, 1, "", "expand"]], "torch.distributions.constraint_registry": [[35, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[35, 3, 1, "", "register"]], "torch.distributions.constraints": [[35, 1, 1, "", "Constraint"], [35, 2, 1, "", "cat"], [35, 2, 1, "", "dependent_property"], [35, 2, 1, "", "greater_than"], [35, 2, 1, "", "greater_than_eq"], [35, 2, 1, "", "half_open_interval"], [35, 2, 1, "", "independent"], [35, 2, 1, "", "integer_interval"], [35, 2, 1, "", "interval"], [35, 5, 1, "", "is_dependent"], [35, 2, 1, "", "less_than"], [35, 2, 1, "", "multinomial"], [35, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[35, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[35, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "param_shape"], [35, 4, 1, "", "probs"], [35, 3, 1, "", "rsample"], [35, 3, 1, "", "sample"], [35, 4, 1, "", "stddev"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[35, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.distribution": [[35, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[35, 4, 1, "", "arg_constraints"], [35, 4, 1, "", "batch_shape"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "enumerate_support"], [35, 4, 1, "", "event_shape"], [35, 3, 1, "", "expand"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "perplexity"], [35, 3, 1, "", "rsample"], [35, 3, 1, "", "sample"], [35, 3, 1, "", "sample_n"], [35, 3, 1, "", "set_default_validate_args"], [35, 4, 1, "", "stddev"], [35, 4, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[35, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[35, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[35, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 4, 1, "", "stddev"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[35, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.gamma": [[35, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.geometric": [[35, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "probs"], [35, 3, 1, "", "sample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[35, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "stddev"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[35, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "scale"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[35, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "scale"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.independent": [[35, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "enumerate_support"], [35, 3, 1, "", "expand"], [35, 4, 1, "", "has_enumerate_support"], [35, 4, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 3, 1, "", "sample"], [35, 4, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.inverse_gamma": [[35, 1, 1, "", "InverseGamma"]], "torch.distributions.inverse_gamma.InverseGamma": [[35, 2, 1, "", "arg_constraints"], [35, 4, 1, "", "concentration"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "rate"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.kl": [[35, 5, 1, "", "kl_divergence"], [35, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[35, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.laplace": [[35, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 4, 1, "", "stddev"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[35, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "expand"], [35, 3, 1, "", "log_prob"], [35, 3, 1, "", "sample"], [35, 2, 1, "", "support"]], "torch.distributions.log_normal": [[35, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 4, 1, "", "loc"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "scale"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[35, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[35, 2, 1, "", "arg_constraints"], [35, 4, 1, "", "covariance_matrix"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "precision_matrix"], [35, 3, 1, "", "rsample"], [35, 4, 1, "", "scale_tril"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[35, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 4, 1, "", "component_distribution"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mixture_distribution"], [35, 3, 1, "", "sample"], [35, 4, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[35, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "param_shape"], [35, 4, 1, "", "probs"], [35, 3, 1, "", "sample"], [35, 4, 1, "", "support"], [35, 2, 1, "", "total_count"], [35, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[35, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[35, 2, 1, "", "arg_constraints"], [35, 4, 1, "", "covariance_matrix"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "precision_matrix"], [35, 3, 1, "", "rsample"], [35, 4, 1, "", "scale_tril"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[35, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "expand"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "param_shape"], [35, 4, 1, "", "probs"], [35, 3, 1, "", "sample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.normal": [[35, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 3, 1, "", "sample"], [35, 4, 1, "", "stddev"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[35, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "enumerate_support"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_enumerate_support"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "param_shape"], [35, 4, 1, "", "probs"], [35, 3, 1, "", "sample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.pareto": [[35, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.poisson": [[35, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "expand"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "sample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[35, 1, 1, "", "LogitRelaxedBernoulli"], [35, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "expand"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "param_shape"], [35, 4, 1, "", "probs"], [35, 3, 1, "", "rsample"], [35, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "probs"], [35, 2, 1, "", "support"], [35, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[35, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 4, 1, "", "logits"], [35, 4, 1, "", "probs"], [35, 2, 1, "", "support"], [35, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[35, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[35, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "expand"], [35, 4, 1, "", "has_rsample"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 3, 1, "", "rsample"], [35, 3, 1, "", "sample"], [35, 4, 1, "", "support"]], "torch.distributions.transforms": [[35, 1, 1, "", "AbsTransform"], [35, 1, 1, "", "AffineTransform"], [35, 1, 1, "", "CatTransform"], [35, 1, 1, "", "ComposeTransform"], [35, 1, 1, "", "CorrCholeskyTransform"], [35, 1, 1, "", "CumulativeDistributionTransform"], [35, 1, 1, "", "ExpTransform"], [35, 1, 1, "", "IndependentTransform"], [35, 1, 1, "", "LowerCholeskyTransform"], [35, 1, 1, "", "PositiveDefiniteTransform"], [35, 1, 1, "", "PowerTransform"], [35, 1, 1, "", "ReshapeTransform"], [35, 1, 1, "", "SigmoidTransform"], [35, 1, 1, "", "SoftmaxTransform"], [35, 1, 1, "", "SoftplusTransform"], [35, 1, 1, "", "StackTransform"], [35, 1, 1, "", "StickBreakingTransform"], [35, 1, 1, "", "TanhTransform"], [35, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[35, 3, 1, "", "forward_shape"], [35, 4, 1, "", "inv"], [35, 3, 1, "", "inverse_shape"], [35, 3, 1, "", "log_abs_det_jacobian"], [35, 4, 1, "", "sign"]], "torch.distributions.uniform": [[35, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "cdf"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "icdf"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "rsample"], [35, 4, 1, "", "stddev"], [35, 4, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[35, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 3, 1, "", "sample"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.weibull": [[35, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[35, 2, 1, "", "arg_constraints"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.distributions.wishart": [[35, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[35, 2, 1, "", "arg_constraints"], [35, 4, 1, "", "covariance_matrix"], [35, 3, 1, "", "entropy"], [35, 3, 1, "", "expand"], [35, 2, 1, "", "has_rsample"], [35, 3, 1, "", "log_prob"], [35, 4, 1, "", "mean"], [35, 4, 1, "", "mode"], [35, 4, 1, "", "precision_matrix"], [35, 3, 1, "", "rsample"], [35, 4, 1, "", "scale_tril"], [35, 2, 1, "", "support"], [35, 4, 1, "", "variance"]], "torch.export": [[52, 2, 1, "", "Constraint"], [52, 1, 1, "", "ExportBackwardSignature"], [52, 1, 1, "", "ExportGraphSignature"], [52, 1, 1, "", "ExportedProgram"], [52, 1, 1, "", "ModuleCallEntry"], [52, 1, 1, "", "ModuleCallSignature"], [52, 0, 0, "-", "custom_obj"], [52, 5, 1, "", "dims"], [52, 0, 0, "-", "dynamic_shapes"], [52, 0, 0, "-", "experimental"], [52, 5, 1, "", "export"], [52, 0, 0, "-", "exported_program"], [52, 0, 0, "-", "graph_signature"], [52, 5, 1, "", "load"], [52, 5, 1, "", "register_dataclass"], [52, 5, 1, "", "save"], [52, 0, 0, "-", "unflatten"]], "torch.export.ExportedProgram": [[52, 3, 1, "", "buffers"], [52, 3, 1, "", "module"], [52, 3, 1, "", "named_buffers"], [52, 3, 1, "", "named_parameters"], [52, 3, 1, "", "parameters"], [52, 3, 1, "", "run_decompositions"]], "torch.export.dynamic_shapes": [[52, 5, 1, "", "Dim"], [52, 1, 1, "", "ShapesCollection"], [52, 5, 1, "", "dynamic_dim"], [52, 5, 1, "", "refine_dynamic_shapes_from_suggested_fixes"]], "torch.export.dynamic_shapes.ShapesCollection": [[52, 3, 1, "", "dynamic_shapes"]], "torch.export.graph_signature": [[52, 1, 1, "", "CustomObjArgument"], [52, 1, 1, "", "ExportGraphSignature"], [52, 1, 1, "", "InputKind"], [52, 1, 1, "", "InputSpec"], [52, 1, 1, "", "OutputKind"], [52, 1, 1, "", "OutputSpec"]], "torch.export.graph_signature.ExportGraphSignature": [[52, 3, 1, "", "get_replace_hook"], [52, 3, 1, "", "replace_all_uses"]], "torch.export.unflatten": [[52, 1, 1, "", "FlatArgsAdapter"], [52, 1, 1, "", "InterpreterModule"], [52, 5, 1, "", "unflatten"]], "torch.export.unflatten.FlatArgsAdapter": [[52, 3, 1, "", "adapt"]], "torch.fft": [[1135, 5, 1, "", "fft"], [1136, 5, 1, "", "fft2"], [1137, 5, 1, "", "fftfreq"], [1138, 5, 1, "", "fftn"], [1139, 5, 1, "", "fftshift"], [1140, 5, 1, "", "hfft"], [1141, 5, 1, "", "hfft2"], [1142, 5, 1, "", "hfftn"], [1143, 5, 1, "", "ifft"], [1144, 5, 1, "", "ifft2"], [1145, 5, 1, "", "ifftn"], [1146, 5, 1, "", "ifftshift"], [1147, 5, 1, "", "ihfft"], [1148, 5, 1, "", "ihfft2"], [1149, 5, 1, "", "ihfftn"], [1150, 5, 1, "", "irfft"], [1151, 5, 1, "", "irfft2"], [1152, 5, 1, "", "irfftn"], [1153, 5, 1, "", "rfft"], [1154, 5, 1, "", "rfft2"], [1155, 5, 1, "", "rfftfreq"], [1156, 5, 1, "", "rfftn"]], "torch.func": [[1176, 5, 1, "", "functional_call"], [1177, 5, 1, "", "functionalize"], [1178, 5, 1, "", "grad"], [1179, 5, 1, "", "grad_and_value"], [1180, 5, 1, "", "hessian"], [1181, 5, 1, "", "jacfwd"], [1182, 5, 1, "", "jacrev"], [1183, 5, 1, "", "jvp"], [1184, 5, 1, "", "linearize"], [1185, 5, 1, "", "replace_all_batch_norm_modules_"], [1186, 5, 1, "", "stack_module_state"], [1187, 5, 1, "", "vjp"], [1188, 5, 1, "", "vmap"]], "torch.futures": [[63, 1, 1, "", "Future"], [63, 5, 1, "", "collect_all"], [63, 5, 1, "", "wait_all"]], "torch.futures.Future": [[63, 3, 1, "", "add_done_callback"], [63, 3, 1, "", "done"], [63, 3, 1, "", "set_exception"], [63, 3, 1, "", "set_result"], [63, 3, 1, "", "then"], [63, 3, 1, "", "value"], [63, 3, 1, "", "wait"]], "torch.fx": [[64, 1, 1, "", "Graph"], [64, 1, 1, "", "GraphModule"], [64, 1, 1, "", "Interpreter"], [64, 1, 1, "", "Node"], [64, 1, 1, "", "Proxy"], [64, 1, 1, "", "Tracer"], [64, 1, 1, "", "Transformer"], [64, 0, 0, "-", "annotate"], [64, 0, 0, "-", "config"], [64, 0, 0, "-", "experimental"], [64, 0, 0, "-", "graph"], [64, 0, 0, "-", "graph_module"], [64, 0, 0, "-", "immutable_collections"], [64, 0, 0, "-", "interpreter"], [64, 0, 0, "-", "node"], [64, 0, 0, "-", "operator_schemas"], [64, 0, 0, "-", "passes"], [64, 0, 0, "-", "proxy"], [64, 5, 1, "", "replace_pattern"], [64, 0, 0, "-", "subgraph_rewriter"], [64, 5, 1, "", "symbolic_trace"], [64, 0, 0, "-", "tensor_type"], [64, 0, 0, "-", "traceback"], [64, 5, 1, "", "wrap"]], "torch.fx.Graph": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "call_function"], [64, 3, 1, "", "call_method"], [64, 3, 1, "", "call_module"], [64, 3, 1, "", "create_node"], [64, 3, 1, "", "eliminate_dead_code"], [64, 3, 1, "", "erase_node"], [64, 3, 1, "", "find_nodes"], [64, 3, 1, "", "get_attr"], [64, 3, 1, "", "graph_copy"], [64, 3, 1, "", "inserting_after"], [64, 3, 1, "", "inserting_before"], [64, 3, 1, "", "lint"], [64, 3, 1, "", "node_copy"], [64, 4, 1, "", "nodes"], [64, 3, 1, "", "on_generate_code"], [64, 3, 1, "", "output"], [64, 3, 1, "", "placeholder"], [64, 3, 1, "", "print_tabular"], [64, 3, 1, "", "process_inputs"], [64, 3, 1, "", "process_outputs"], [64, 3, 1, "", "python_code"], [64, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "add_submodule"], [64, 4, 1, "", "code"], [64, 3, 1, "", "delete_all_unused_submodules"], [64, 3, 1, "", "delete_submodule"], [64, 4, 1, "", "graph"], [64, 3, 1, "", "print_readable"], [64, 3, 1, "", "recompile"], [64, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[64, 3, 1, "", "boxed_run"], [64, 3, 1, "", "call_function"], [64, 3, 1, "", "call_method"], [64, 3, 1, "", "call_module"], [64, 3, 1, "", "fetch_args_kwargs_from_env"], [64, 3, 1, "", "fetch_attr"], [64, 3, 1, "", "get_attr"], [64, 3, 1, "", "map_nodes_to_values"], [64, 3, 1, "", "output"], [64, 3, 1, "", "placeholder"], [64, 3, 1, "", "run"], [64, 3, 1, "", "run_node"]], "torch.fx.Node": [[64, 4, 1, "", "all_input_nodes"], [64, 3, 1, "", "append"], [64, 4, 1, "", "args"], [64, 3, 1, "", "format_node"], [64, 3, 1, "", "insert_arg"], [64, 3, 1, "", "is_impure"], [64, 4, 1, "", "kwargs"], [64, 4, 1, "", "next"], [64, 3, 1, "", "normalized_arguments"], [64, 3, 1, "", "prepend"], [64, 4, 1, "", "prev"], [64, 3, 1, "", "replace_all_uses_with"], [64, 3, 1, "", "replace_input_with"], [64, 4, 1, "", "stack_trace"], [64, 3, 1, "", "update_arg"], [64, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[64, 3, 1, "", "call_module"], [64, 3, 1, "", "create_arg"], [64, 3, 1, "", "create_args_for_root"], [64, 3, 1, "", "create_node"], [64, 3, 1, "", "create_proxy"], [64, 3, 1, "", "get_fresh_qualname"], [64, 3, 1, "", "getattr"], [64, 3, 1, "", "is_leaf_module"], [64, 3, 1, "", "iter"], [64, 3, 1, "", "keys"], [64, 3, 1, "", "path_of_module"], [64, 3, 1, "", "proxy"], [64, 3, 1, "", "to_bool"], [64, 3, 1, "", "trace"]], "torch.fx.Transformer": [[64, 3, 1, "", "call_function"], [64, 3, 1, "", "call_module"], [64, 3, 1, "", "get_attr"], [64, 3, 1, "", "placeholder"], [64, 3, 1, "", "transform"]], "torch.fx.experimental": [[64, 0, 0, "-", "accelerator_partitioner"], [64, 0, 0, "-", "const_fold"], [64, 0, 0, "-", "debug"], [64, 0, 0, "-", "graph_gradual_typechecker"], [64, 0, 0, "-", "merge_matmul"], [64, 0, 0, "-", "meta_tracer"], [64, 0, 0, "-", "migrate_gradual_types"], [64, 0, 0, "-", "normalize"], [64, 0, 0, "-", "optimization"], [64, 0, 0, "-", "partitioner_utils"], [65, 0, 0, "-", "proxy_tensor"], [64, 0, 0, "-", "recording"], [64, 0, 0, "-", "refinement_types"], [64, 0, 0, "-", "rewriter"], [64, 0, 0, "-", "schema_type_annotation"], [64, 0, 0, "-", "sym_node"], [65, 0, 0, "-", "symbolic_shapes"], [64, 0, 0, "-", "unification"], [64, 0, 0, "-", "unify_refinements"], [64, 0, 0, "-", "validator"]], "torch.fx.experimental.migrate_gradual_types": [[64, 0, 0, "-", "constraint"], [64, 0, 0, "-", "constraint_generator"], [64, 0, 0, "-", "constraint_transformation"], [64, 0, 0, "-", "operation"], [64, 0, 0, "-", "transform_to_z3"], [64, 0, 0, "-", "util"], [64, 0, 0, "-", "z3_types"]], "torch.fx.experimental.proxy_tensor": [[1189, 5, 1, "", "get_proxy_mode"], [1190, 5, 1, "", "handle_sym_dispatch"], [1191, 5, 1, "", "make_fx"], [1192, 5, 1, "", "maybe_disable_thunkify"], [1193, 5, 1, "", "maybe_enable_thunkify"]], "torch.fx.experimental.symbolic_shapes": [[1194, 1, 1, "", "CallMethodKey"], [1195, 1, 1, "", "ConvertIntKey"], [1196, 1, 1, "", "DimConstraints"], [1197, 1, 1, "", "DimDynamic"], [1198, 1, 1, "", "DivideByKey"], [1199, 1, 1, "", "EqualityConstraint"], [1200, 1, 1, "", "InnerTensorKey"], [1201, 1, 1, "", "PropagateUnbackedSymInts"], [1202, 1, 1, "", "RelaxedUnspecConstraint"], [1203, 1, 1, "", "ShapeEnv"], [1204, 1, 1, "", "ShapeEnvSettings"], [1205, 1, 1, "", "StatefulSymbolicContext"], [1206, 1, 1, "", "StatelessSymbolicContext"], [1207, 1, 1, "", "StrictMinMaxConstraint"], [1208, 1, 1, "", "SubclassSymbolicContext"], [1209, 1, 1, "", "SymbolicContext"], [1210, 5, 1, "", "canonicalize_bool_expr"], [1211, 5, 1, "", "check_consistent"], [1212, 5, 1, "", "compute_unbacked_bindings"], [1213, 5, 1, "", "constrain_range"], [1214, 5, 1, "", "constrain_unify"], [1215, 5, 1, "", "definitely_false"], [1216, 5, 1, "", "definitely_true"], [1217, 5, 1, "", "guard_size_oblivious"], [1218, 5, 1, "", "has_free_symbols"], [1219, 5, 1, "", "hint_int"], [1220, 5, 1, "", "is_accessor_node"], [1221, 5, 1, "", "is_concrete_bool"], [1222, 5, 1, "", "is_concrete_int"], [1223, 5, 1, "", "lru_cache"], [1224, 5, 1, "", "parallel_and"], [1225, 5, 1, "", "parallel_or"], [1226, 5, 1, "", "rebind_unbacked"], [1227, 5, 1, "", "resolve_unbacked_bindings"], [1228, 5, 1, "", "statically_known_true"], [1229, 5, 1, "", "sym_eq"]], "torch.fx.experimental.symbolic_shapes.CallMethodKey": [[1194, 3, 1, "", "get"]], "torch.fx.experimental.symbolic_shapes.ConvertIntKey": [[1195, 3, 1, "", "get"]], "torch.fx.experimental.symbolic_shapes.DimConstraints": [[1196, 3, 1, "", "add"], [1196, 3, 1, "", "add_equality"], [1196, 3, 1, "", "forced_specializations"], [1196, 3, 1, "", "prettify_results"], [1196, 3, 1, "", "remove_redundant_dynamic_results"], [1196, 3, 1, "", "rewrite_with_congruences"], [1196, 3, 1, "", "solve"]], "torch.fx.experimental.symbolic_shapes.DivideByKey": [[1198, 3, 1, "", "get"]], "torch.fx.experimental.symbolic_shapes.InnerTensorKey": [[1200, 3, 1, "", "get"]], "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts": [[1201, 3, 1, "", "boxed_run"], [1201, 3, 1, "", "call_function"], [1201, 3, 1, "", "call_method"], [1201, 3, 1, "", "call_module"], [1201, 3, 1, "", "fetch_args_kwargs_from_env"], [1201, 3, 1, "", "fetch_attr"], [1201, 3, 1, "", "get_attr"], [1201, 3, 1, "", "map_nodes_to_values"], [1201, 3, 1, "", "output"], [1201, 3, 1, "", "placeholder"], [1201, 3, 1, "", "run"], [1201, 3, 1, "", "run_node"]], "torch.fx.experimental.symbolic_shapes.ShapeEnv": [[1203, 3, 1, "", "add_var_to_val"], [1203, 3, 1, "", "bind_symbols"], [1203, 3, 1, "", "bound_sympy"], [1203, 3, 1, "", "check_equal"], [1203, 3, 1, "", "cleanup"], [1203, 3, 1, "", "create_symbol"], [1203, 3, 1, "", "create_symbolic_sizes_strides_storage_offset"], [1203, 3, 1, "", "create_symboolnode"], [1203, 3, 1, "", "create_symfloatnode"], [1203, 3, 1, "", "create_symintnode"], [1203, 3, 1, "", "create_unbacked_symbool"], [1203, 3, 1, "", "create_unbacked_symfloat"], [1203, 3, 1, "", "create_unbacked_symint"], [1203, 3, 1, "", "create_unspecified_symbol"], [1203, 3, 1, "", "create_unspecified_symint_and_symbol"], [1203, 3, 1, "", "defer_runtime_assert"], [1203, 3, 1, "", "evaluate_guards_expression"], [1203, 3, 1, "", "evaluate_guards_for_args"], [1203, 3, 1, "", "evaluate_symexpr"], [1203, 3, 1, "", "format_guards"], [1203, 3, 1, "", "freeze"], [1203, 3, 1, "", "freeze_runtime_asserts"], [1203, 3, 1, "", "get_axioms"], [1203, 3, 1, "", "get_implications"], [1203, 3, 1, "", "get_nontrivial_guards"], [1203, 3, 1, "", "get_pruned_guards"], [1203, 3, 1, "", "ignore_fresh_unbacked_symbols"], [1203, 3, 1, "", "is_unbacked_symint"], [1203, 3, 1, "", "produce_guards"], [1203, 3, 1, "", "produce_guards_expression"], [1203, 3, 1, "", "replace"], [1203, 3, 1, "", "set_unbacked_var_to_val"], [1203, 3, 1, "", "simplify"], [1203, 3, 1, "", "size_hint"], [1203, 3, 1, "", "suppress_guards"]], "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint": [[1207, 3, 1, "", "render"]], "torch.fx.experimental.unification": [[64, 0, 0, "-", "core"], [64, 0, 0, "-", "dispatch"], [64, 0, 0, "-", "match"], [64, 0, 0, "-", "more"], [64, 0, 0, "-", "multipledispatch"], [64, 0, 0, "-", "unification_tools"], [64, 0, 0, "-", "utils"], [64, 0, 0, "-", "variable"]], "torch.fx.experimental.unification.multipledispatch": [[64, 0, 0, "-", "conflict"], [64, 0, 0, "-", "core"], [64, 0, 0, "-", "dispatcher"], [64, 0, 0, "-", "utils"], [64, 0, 0, "-", "variadic"]], "torch.fx.passes": [[64, 0, 0, "-", "annotate_getitem_nodes"], [64, 0, 0, "-", "backends"], [64, 0, 0, "-", "dialect"], [64, 0, 0, "-", "fake_tensor_prop"], [64, 0, 0, "-", "graph_drawer"], [64, 0, 0, "-", "graph_manipulation"], [64, 0, 0, "-", "graph_transform_observer"], [64, 0, 0, "-", "infra"], [64, 0, 0, "-", "net_min_base"], [64, 0, 0, "-", "operator_support"], [64, 0, 0, "-", "param_fetch"], [64, 0, 0, "-", "pass_manager"], [64, 0, 0, "-", "reinplace"], [64, 0, 0, "-", "runtime_assert"], [64, 0, 0, "-", "shape_prop"], [64, 0, 0, "-", "split_module"], [64, 0, 0, "-", "split_utils"], [64, 0, 0, "-", "splitter_base"], [64, 0, 0, "-", "tests"], [64, 0, 0, "-", "tools_common"], [64, 0, 0, "-", "utils"]], "torch.fx.passes.backends": [[64, 0, 0, "-", "cudagraphs"]], "torch.fx.passes.dialect": [[64, 0, 0, "-", "common"]], "torch.fx.passes.dialect.common": [[64, 0, 0, "-", "cse_pass"]], "torch.fx.passes.infra": [[64, 0, 0, "-", "partitioner"], [64, 0, 0, "-", "pass_base"], [64, 0, 0, "-", "pass_manager"]], "torch.fx.passes.tests": [[64, 0, 0, "-", "test_pass_manager"]], "torch.fx.passes.utils": [[64, 0, 0, "-", "common"], [64, 0, 0, "-", "fuser_utils"], [64, 0, 0, "-", "matcher_utils"], [64, 0, 0, "-", "matcher_with_name_node_map_utils"], [64, 0, 0, "-", "source_matcher_utils"]], "torch.hub": [[2042, 5, 1, "", "download_url_to_file"], [2042, 5, 1, "", "get_dir"], [2042, 5, 1, "", "help"], [2042, 5, 1, "", "list"], [2042, 5, 1, "", "load"], [2042, 5, 1, "", "load_state_dict_from_url"], [2042, 5, 1, "", "set_dir"]], "torch.jit": [[1287, 1, 1, "", "Attribute"], [1288, 1, 1, "", "ScriptFunction"], [1289, 1, 1, "", "ScriptModule"], [1290, 5, 1, "", "annotate"], [2044, 0, 0, "-", "annotations"], [1291, 5, 1, "", "enable_onednn_fusion"], [2044, 5, 1, "", "export"], [1292, 5, 1, "", "fork"], [1293, 5, 1, "", "freeze"], [2044, 0, 0, "-", "frontend"], [2044, 0, 0, "-", "generate_bytecode"], [1294, 5, 1, "", "ignore"], [1295, 5, 1, "", "interface"], [2046, 5, 1, "", "is_scripting"], [2046, 5, 1, "", "is_tracing"], [1296, 5, 1, "", "isinstance"], [1297, 5, 1, "", "load"], [2044, 0, 0, "-", "mobile"], [1298, 5, 1, "", "onednn_fusion_enabled"], [1299, 5, 1, "", "optimize_for_inference"], [2044, 0, 0, "-", "quantized"], [1300, 5, 1, "", "save"], [1301, 5, 1, "", "script"], [1302, 5, 1, "", "script_if_tracing"], [1303, 5, 1, "", "set_fusion_strategy"], [1304, 1, 1, "", "strict_fusion"], [2045, 0, 0, "-", "supported_ops"], [1305, 5, 1, "", "trace"], [1306, 5, 1, "", "trace_module"], [2049, 0, 0, "-", "unsupported_tensor_ops"], [1307, 5, 1, "", "unused"], [1308, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1287, 3, 1, "", "count"], [1287, 3, 1, "", "index"], [1287, 2, 1, "", "type"], [1287, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1288, 3, 1, "", "get_debug_state"], [1288, 3, 1, "", "save"], [1288, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1289, 3, 1, "", "add_module"], [1289, 3, 1, "", "apply"], [1289, 3, 1, "", "bfloat16"], [1289, 3, 1, "", "buffers"], [1289, 3, 1, "", "children"], [1289, 4, 1, "", "code"], [1289, 4, 1, "", "code_with_constants"], [1289, 3, 1, "", "compile"], [1289, 3, 1, "", "cpu"], [1289, 3, 1, "", "cuda"], [1289, 3, 1, "", "double"], [1289, 3, 1, "", "eval"], [1289, 3, 1, "", "extra_repr"], [1289, 3, 1, "", "float"], [1289, 3, 1, "", "get_buffer"], [1289, 3, 1, "", "get_extra_state"], [1289, 3, 1, "", "get_parameter"], [1289, 3, 1, "", "get_submodule"], [1289, 4, 1, "", "graph"], [1289, 3, 1, "", "half"], [1289, 4, 1, "", "inlined_graph"], [1289, 3, 1, "", "ipu"], [1289, 3, 1, "", "load_state_dict"], [1289, 3, 1, "", "modules"], [1289, 3, 1, "", "mtia"], [1289, 3, 1, "", "named_buffers"], [1289, 3, 1, "", "named_children"], [1289, 3, 1, "", "named_modules"], [1289, 3, 1, "", "named_parameters"], [1289, 3, 1, "", "parameters"], [1289, 3, 1, "", "register_backward_hook"], [1289, 3, 1, "", "register_buffer"], [1289, 3, 1, "", "register_forward_hook"], [1289, 3, 1, "", "register_forward_pre_hook"], [1289, 3, 1, "", "register_full_backward_hook"], [1289, 3, 1, "", "register_full_backward_pre_hook"], [1289, 3, 1, "", "register_load_state_dict_post_hook"], [1289, 3, 1, "", "register_load_state_dict_pre_hook"], [1289, 3, 1, "", "register_module"], [1289, 3, 1, "", "register_parameter"], [1289, 3, 1, "", "register_state_dict_post_hook"], [1289, 3, 1, "", "register_state_dict_pre_hook"], [1289, 3, 1, "", "requires_grad_"], [1289, 3, 1, "", "save"], [1289, 3, 1, "", "set_extra_state"], [1289, 3, 1, "", "set_submodule"], [1289, 3, 1, "", "share_memory"], [1289, 3, 1, "", "state_dict"], [1289, 3, 1, "", "to"], [1289, 3, 1, "", "to_empty"], [1289, 3, 1, "", "train"], [1289, 3, 1, "", "type"], [1289, 3, 1, "", "xpu"], [1289, 3, 1, "", "zero_grad"]], "torch.library": [[2051, 1, 1, "", "Library"], [2051, 5, 1, "", "custom_op"], [2051, 5, 1, "", "define"], [2051, 5, 1, "", "fallthrough_kernel"], [2051, 5, 1, "", "get_ctx"], [2051, 5, 1, "", "impl"], [2051, 5, 1, "", "impl_abstract"], [2051, 5, 1, "", "infer_schema"], [2051, 5, 1, "", "opcheck"], [2051, 5, 1, "", "register_autograd"], [2051, 5, 1, "", "register_fake"], [2051, 5, 1, "", "register_kernel"], [2051, 5, 1, "", "register_torch_dispatch"], [2051, 5, 1, "", "register_vmap"]], "torch.library.Library": [[2051, 3, 1, "", "define"], [2051, 3, 1, "", "fallback"], [2051, 3, 1, "", "impl"]], "torch.linalg": [[1319, 5, 1, "", "cholesky"], [1320, 5, 1, "", "cholesky_ex"], [1321, 5, 1, "", "cond"], [1322, 5, 1, "", "cross"], [1323, 5, 1, "", "det"], [1324, 5, 1, "", "diagonal"], [1325, 5, 1, "", "eig"], [1326, 5, 1, "", "eigh"], [1327, 5, 1, "", "eigvals"], [1328, 5, 1, "", "eigvalsh"], [1329, 5, 1, "", "householder_product"], [1330, 5, 1, "", "inv"], [1331, 5, 1, "", "inv_ex"], [1332, 5, 1, "", "ldl_factor"], [1333, 5, 1, "", "ldl_factor_ex"], [1334, 5, 1, "", "ldl_solve"], [1335, 5, 1, "", "lstsq"], [1336, 5, 1, "", "lu"], [1337, 5, 1, "", "lu_factor"], [1338, 5, 1, "", "lu_factor_ex"], [1339, 5, 1, "", "lu_solve"], [1340, 5, 1, "", "matmul"], [1341, 5, 1, "", "matrix_exp"], [1342, 5, 1, "", "matrix_norm"], [1343, 5, 1, "", "matrix_power"], [1344, 5, 1, "", "matrix_rank"], [1345, 5, 1, "", "multi_dot"], [1346, 5, 1, "", "norm"], [1347, 5, 1, "", "pinv"], [1348, 5, 1, "", "qr"], [1349, 5, 1, "", "slogdet"], [1350, 5, 1, "", "solve"], [1351, 5, 1, "", "solve_ex"], [1352, 5, 1, "", "solve_triangular"], [1353, 5, 1, "", "svd"], [1354, 5, 1, "", "svdvals"], [1355, 5, 1, "", "tensorinv"], [1356, 5, 1, "", "tensorsolve"], [1357, 5, 1, "", "vander"], [1358, 5, 1, "", "vecdot"], [1359, 5, 1, "", "vector_norm"]], "torch.masked": [[2054, 0, 0, "-", "maskedtensor"]], "torch.masked.maskedtensor": [[2054, 0, 0, "-", "binary"], [2054, 0, 0, "-", "core"], [2054, 0, 0, "-", "creation"], [2054, 0, 0, "-", "passthrough"], [2054, 0, 0, "-", "reductions"], [2054, 0, 0, "-", "unary"]], "torch.monitor": [[2060, 1, 1, "", "Aggregation"], [2060, 1, 1, "", "Event"], [2060, 1, 1, "", "EventHandlerHandle"], [2060, 1, 1, "", "Stat"], [2060, 1, 1, "", "TensorboardEventHandler"], [2060, 1, 1, "", "data_value_t"], [2060, 5, 1, "", "log_event"], [2060, 5, 1, "", "register_event_handler"], [2060, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[2060, 4, 1, "", "name"]], "torch.monitor.Event": [[2060, 3, 1, "", "__init__"], [2060, 4, 1, "", "data"], [2060, 4, 1, "", "name"], [2060, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[2060, 3, 1, "", "__init__"], [2060, 3, 1, "", "add"], [2060, 4, 1, "", "count"], [2060, 3, 1, "", "get"], [2060, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[2060, 3, 1, "", "__init__"]], "torch.mps": [[1398, 5, 1, "", "current_allocated_memory"], [1399, 5, 1, "", "device_count"], [1400, 5, 1, "", "driver_allocated_memory"], [1401, 5, 1, "", "empty_cache"], [2061, 0, 0, "-", "event"], [1403, 5, 1, "", "get_rng_state"], [1404, 5, 1, "", "manual_seed"], [2061, 0, 0, "-", "profiler"], [1408, 5, 1, "", "recommended_max_memory"], [1409, 5, 1, "", "seed"], [1410, 5, 1, "", "set_per_process_memory_fraction"], [1411, 5, 1, "", "set_rng_state"], [1412, 5, 1, "", "synchronize"]], "torch.mps.event": [[1402, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1402, 3, 1, "", "elapsed_time"], [1402, 3, 1, "", "query"], [1402, 3, 1, "", "record"], [1402, 3, 1, "", "synchronize"], [1402, 3, 1, "", "wait"]], "torch.mps.profiler": [[1405, 5, 1, "", "profile"], [1406, 5, 1, "", "start"], [1407, 5, 1, "", "stop"]], "torch.mtia": [[1414, 6, 1, "", "DeferredMtiaCallError"], [1415, 1, 1, "", "Event"], [1416, 1, 1, "", "Stream"], [1417, 1, 1, "", "StreamContext"], [1418, 5, 1, "", "current_device"], [1419, 5, 1, "", "current_stream"], [1420, 5, 1, "", "default_stream"], [1421, 1, 1, "", "device"], [1422, 5, 1, "", "device_count"], [1423, 5, 1, "", "get_rng_state"], [1424, 5, 1, "", "init"], [1425, 5, 1, "", "is_available"], [1426, 5, 1, "", "is_initialized"], [1427, 5, 1, "", "memory_stats"], [1428, 5, 1, "", "set_device"], [1429, 5, 1, "", "set_rng_state"], [1430, 5, 1, "", "set_stream"], [1431, 5, 1, "", "stream"], [1432, 5, 1, "", "synchronize"]], "torch.mtia.Event": [[1415, 3, 1, "", "elapsed_time"], [1415, 3, 1, "", "query"], [1415, 3, 1, "", "record"], [1415, 3, 1, "", "synchronize"], [1415, 3, 1, "", "wait"]], "torch.mtia.Stream": [[1416, 3, 1, "", "query"], [1416, 3, 1, "", "record_event"], [1416, 3, 1, "", "synchronize"], [1416, 3, 1, "", "wait_event"], [1416, 3, 1, "", "wait_stream"]], "torch.multiprocessing": [[2064, 1, 1, "", "SpawnContext"], [2064, 5, 1, "", "get_all_sharing_strategies"], [2064, 5, 1, "", "get_sharing_strategy"], [2064, 0, 0, "-", "pool"], [2064, 0, 0, "-", "queue"], [2064, 0, 0, "-", "reductions"], [2064, 5, 1, "", "set_sharing_strategy"], [2064, 0, 0, "-", "spawn"]], "torch.multiprocessing.SpawnContext": [[2064, 3, 1, "", "join"]], "torch.multiprocessing.spawn": [[2064, 5, 1, "", "spawn"]], "torch.nested": [[2067, 5, 1, "", "as_nested_tensor"], [2067, 5, 1, "", "nested_tensor"], [2067, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1449, 1, 1, "", "AdaptiveAvgPool1d"], [1450, 1, 1, "", "AdaptiveAvgPool2d"], [1451, 1, 1, "", "AdaptiveAvgPool3d"], [1452, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1453, 1, 1, "", "AdaptiveMaxPool1d"], [1454, 1, 1, "", "AdaptiveMaxPool2d"], [1455, 1, 1, "", "AdaptiveMaxPool3d"], [1456, 1, 1, "", "AlphaDropout"], [1457, 1, 1, "", "AvgPool1d"], [1458, 1, 1, "", "AvgPool2d"], [1459, 1, 1, "", "AvgPool3d"], [1460, 1, 1, "", "BCELoss"], [1461, 1, 1, "", "BCEWithLogitsLoss"], [1462, 1, 1, "", "BatchNorm1d"], [1463, 1, 1, "", "BatchNorm2d"], [1464, 1, 1, "", "BatchNorm3d"], [1465, 1, 1, "", "Bilinear"], [1466, 1, 1, "", "CELU"], [1467, 1, 1, "", "CTCLoss"], [1468, 1, 1, "", "ChannelShuffle"], [1469, 1, 1, "", "CircularPad1d"], [1470, 1, 1, "", "CircularPad2d"], [1471, 1, 1, "", "CircularPad3d"], [1472, 1, 1, "", "ConstantPad1d"], [1473, 1, 1, "", "ConstantPad2d"], [1474, 1, 1, "", "ConstantPad3d"], [1475, 1, 1, "", "Conv1d"], [1476, 1, 1, "", "Conv2d"], [1477, 1, 1, "", "Conv3d"], [1478, 1, 1, "", "ConvTranspose1d"], [1479, 1, 1, "", "ConvTranspose2d"], [1480, 1, 1, "", "ConvTranspose3d"], [1481, 1, 1, "", "CosineEmbeddingLoss"], [1482, 1, 1, "", "CosineSimilarity"], [1483, 1, 1, "", "CrossEntropyLoss"], [1484, 1, 1, "", "DataParallel"], [1485, 1, 1, "", "Dropout"], [1486, 1, 1, "", "Dropout1d"], [1487, 1, 1, "", "Dropout2d"], [1488, 1, 1, "", "Dropout3d"], [1489, 1, 1, "", "ELU"], [1490, 1, 1, "", "Embedding"], [1491, 1, 1, "", "EmbeddingBag"], [1492, 1, 1, "", "FeatureAlphaDropout"], [1493, 1, 1, "", "Flatten"], [1494, 1, 1, "", "Fold"], [1495, 1, 1, "", "FractionalMaxPool2d"], [1496, 1, 1, "", "FractionalMaxPool3d"], [1497, 1, 1, "", "GELU"], [1498, 1, 1, "", "GLU"], [1499, 1, 1, "", "GRU"], [1500, 1, 1, "", "GRUCell"], [1501, 1, 1, "", "GaussianNLLLoss"], [1502, 1, 1, "", "GroupNorm"], [1503, 1, 1, "", "Hardshrink"], [1504, 1, 1, "", "Hardsigmoid"], [1505, 1, 1, "", "Hardswish"], [1506, 1, 1, "", "Hardtanh"], [1507, 1, 1, "", "HingeEmbeddingLoss"], [1508, 1, 1, "", "HuberLoss"], [1509, 1, 1, "", "Identity"], [1510, 1, 1, "", "InstanceNorm1d"], [1511, 1, 1, "", "InstanceNorm2d"], [1512, 1, 1, "", "InstanceNorm3d"], [1513, 1, 1, "", "KLDivLoss"], [1514, 1, 1, "", "L1Loss"], [1515, 1, 1, "", "LPPool1d"], [1516, 1, 1, "", "LPPool2d"], [1517, 1, 1, "", "LPPool3d"], [1518, 1, 1, "", "LSTM"], [1519, 1, 1, "", "LSTMCell"], [1520, 1, 1, "", "LayerNorm"], [1521, 1, 1, "", "LazyBatchNorm1d"], [1522, 1, 1, "", "LazyBatchNorm2d"], [1523, 1, 1, "", "LazyBatchNorm3d"], [1524, 1, 1, "", "LazyConv1d"], [1525, 1, 1, "", "LazyConv2d"], [1526, 1, 1, "", "LazyConv3d"], [1527, 1, 1, "", "LazyConvTranspose1d"], [1528, 1, 1, "", "LazyConvTranspose2d"], [1529, 1, 1, "", "LazyConvTranspose3d"], [1530, 1, 1, "", "LazyInstanceNorm1d"], [1531, 1, 1, "", "LazyInstanceNorm2d"], [1532, 1, 1, "", "LazyInstanceNorm3d"], [1533, 1, 1, "", "LazyLinear"], [1534, 1, 1, "", "LeakyReLU"], [1535, 1, 1, "", "Linear"], [1536, 1, 1, "", "LocalResponseNorm"], [1537, 1, 1, "", "LogSigmoid"], [1538, 1, 1, "", "LogSoftmax"], [1539, 1, 1, "", "MSELoss"], [1540, 1, 1, "", "MarginRankingLoss"], [1541, 1, 1, "", "MaxPool1d"], [1542, 1, 1, "", "MaxPool2d"], [1543, 1, 1, "", "MaxPool3d"], [1544, 1, 1, "", "MaxUnpool1d"], [1545, 1, 1, "", "MaxUnpool2d"], [1546, 1, 1, "", "MaxUnpool3d"], [1547, 1, 1, "", "Mish"], [1548, 1, 1, "", "Module"], [1549, 1, 1, "", "ModuleDict"], [1550, 1, 1, "", "ModuleList"], [1551, 1, 1, "", "MultiLabelMarginLoss"], [1552, 1, 1, "", "MultiLabelSoftMarginLoss"], [1553, 1, 1, "", "MultiMarginLoss"], [1554, 1, 1, "", "MultiheadAttention"], [1555, 1, 1, "", "NLLLoss"], [1556, 1, 1, "", "PReLU"], [1557, 1, 1, "", "PairwiseDistance"], [1558, 1, 1, "", "ParameterDict"], [1559, 1, 1, "", "ParameterList"], [1560, 1, 1, "", "PixelShuffle"], [1561, 1, 1, "", "PixelUnshuffle"], [1562, 1, 1, "", "PoissonNLLLoss"], [1563, 1, 1, "", "RMSNorm"], [1564, 1, 1, "", "RNN"], [1565, 1, 1, "", "RNNBase"], [1566, 1, 1, "", "RNNCell"], [1567, 1, 1, "", "RReLU"], [1568, 1, 1, "", "ReLU"], [1569, 1, 1, "", "ReLU6"], [1570, 1, 1, "", "ReflectionPad1d"], [1571, 1, 1, "", "ReflectionPad2d"], [1572, 1, 1, "", "ReflectionPad3d"], [1573, 1, 1, "", "ReplicationPad1d"], [1574, 1, 1, "", "ReplicationPad2d"], [1575, 1, 1, "", "ReplicationPad3d"], [1576, 1, 1, "", "SELU"], [1577, 1, 1, "", "Sequential"], [1578, 1, 1, "", "SiLU"], [1579, 1, 1, "", "Sigmoid"], [1580, 1, 1, "", "SmoothL1Loss"], [1581, 1, 1, "", "SoftMarginLoss"], [1582, 1, 1, "", "Softmax"], [1583, 1, 1, "", "Softmax2d"], [1584, 1, 1, "", "Softmin"], [1585, 1, 1, "", "Softplus"], [1586, 1, 1, "", "Softshrink"], [1587, 1, 1, "", "Softsign"], [1588, 1, 1, "", "SyncBatchNorm"], [1589, 1, 1, "", "Tanh"], [1590, 1, 1, "", "Tanhshrink"], [1591, 1, 1, "", "Threshold"], [1592, 1, 1, "", "Transformer"], [1593, 1, 1, "", "TransformerDecoder"], [1594, 1, 1, "", "TransformerDecoderLayer"], [1595, 1, 1, "", "TransformerEncoder"], [1596, 1, 1, "", "TransformerEncoderLayer"], [1597, 1, 1, "", "TripletMarginLoss"], [1598, 1, 1, "", "TripletMarginWithDistanceLoss"], [1599, 1, 1, "", "Unflatten"], [1600, 1, 1, "", "Unfold"], [1601, 1, 1, "", "Upsample"], [1602, 1, 1, "", "UpsamplingBilinear2d"], [1603, 1, 1, "", "UpsamplingNearest2d"], [1604, 1, 1, "", "ZeroPad1d"], [1605, 1, 1, "", "ZeroPad2d"], [1606, 1, 1, "", "ZeroPad3d"], [2069, 0, 0, "-", "attention"], [2068, 0, 0, "-", "backends"], [2068, 0, 0, "-", "common_types"], [2068, 0, 0, "-", "cpp"], [2068, 0, 0, "-", "functional"], [2068, 0, 0, "-", "grad"], [2068, 0, 0, "-", "init"], [2107, 0, 0, "-", "intrinsic"], [2068, 0, 0, "-", "modules"], [2068, 0, 0, "-", "parallel"], [2068, 0, 0, "-", "parameter"], [2107, 0, 0, "-", "qat"], [2107, 0, 0, "-", "quantizable"], [2107, 0, 0, "-", "quantized"], [2068, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1452, 3, 1, "", "log_prob"], [1452, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1490, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1491, 3, 1, "", "forward"], [1491, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1521, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1522, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1523, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1524, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1525, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1526, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1527, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1528, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1529, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1530, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1531, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1532, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1533, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1548, 3, 1, "", "add_module"], [1548, 3, 1, "", "apply"], [1548, 3, 1, "", "bfloat16"], [1548, 3, 1, "", "buffers"], [1548, 3, 1, "", "children"], [1548, 3, 1, "", "compile"], [1548, 3, 1, "", "cpu"], [1548, 3, 1, "", "cuda"], [1548, 3, 1, "", "double"], [1548, 3, 1, "", "eval"], [1548, 3, 1, "", "extra_repr"], [1548, 3, 1, "", "float"], [1548, 3, 1, "", "forward"], [1548, 3, 1, "", "get_buffer"], [1548, 3, 1, "", "get_extra_state"], [1548, 3, 1, "", "get_parameter"], [1548, 3, 1, "", "get_submodule"], [1548, 3, 1, "", "half"], [1548, 3, 1, "", "ipu"], [1548, 3, 1, "", "load_state_dict"], [1548, 3, 1, "", "modules"], [1548, 3, 1, "", "mtia"], [1548, 3, 1, "", "named_buffers"], [1548, 3, 1, "", "named_children"], [1548, 3, 1, "", "named_modules"], [1548, 3, 1, "", "named_parameters"], [1548, 3, 1, "", "parameters"], [1548, 3, 1, "", "register_backward_hook"], [1548, 3, 1, "", "register_buffer"], [1548, 3, 1, "", "register_forward_hook"], [1548, 3, 1, "", "register_forward_pre_hook"], [1548, 3, 1, "", "register_full_backward_hook"], [1548, 3, 1, "", "register_full_backward_pre_hook"], [1548, 3, 1, "", "register_load_state_dict_post_hook"], [1548, 3, 1, "", "register_load_state_dict_pre_hook"], [1548, 3, 1, "", "register_module"], [1548, 3, 1, "", "register_parameter"], [1548, 3, 1, "", "register_state_dict_post_hook"], [1548, 3, 1, "", "register_state_dict_pre_hook"], [1548, 3, 1, "", "requires_grad_"], [1548, 3, 1, "", "set_extra_state"], [1548, 3, 1, "", "set_submodule"], [1548, 3, 1, "", "share_memory"], [1548, 3, 1, "", "state_dict"], [1548, 3, 1, "", "to"], [1548, 3, 1, "", "to_empty"], [1548, 3, 1, "", "train"], [1548, 3, 1, "", "type"], [1548, 3, 1, "", "xpu"], [1548, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1549, 3, 1, "", "clear"], [1549, 3, 1, "", "items"], [1549, 3, 1, "", "keys"], [1549, 3, 1, "", "pop"], [1549, 3, 1, "", "update"], [1549, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1550, 3, 1, "", "append"], [1550, 3, 1, "", "extend"], [1550, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1554, 3, 1, "", "forward"], [1554, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1558, 3, 1, "", "clear"], [1558, 3, 1, "", "copy"], [1558, 3, 1, "", "fromkeys"], [1558, 3, 1, "", "get"], [1558, 3, 1, "", "items"], [1558, 3, 1, "", "keys"], [1558, 3, 1, "", "pop"], [1558, 3, 1, "", "popitem"], [1558, 3, 1, "", "setdefault"], [1558, 3, 1, "", "update"], [1558, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1559, 3, 1, "", "append"], [1559, 3, 1, "", "extend"]], "torch.nn.RMSNorm": [[1563, 3, 1, "", "extra_repr"], [1563, 3, 1, "", "forward"], [1563, 3, 1, "", "reset_parameters"]], "torch.nn.RNNBase": [[1565, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1577, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1588, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1592, 3, 1, "", "forward"], [1592, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1593, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1594, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1595, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1596, 3, 1, "", "forward"]], "torch.nn.attention": [[1607, 1, 1, "", "SDPBackend"], [2070, 0, 0, "-", "bias"], [2071, 0, 0, "-", "flex_attention"], [1612, 5, 1, "", "sdpa_kernel"]], "torch.nn.attention.SDPBackend": [[1607, 4, 1, "", "name"]], "torch.nn.attention.bias": [[1608, 1, 1, "", "CausalBias"], [1609, 1, 1, "", "CausalVariant"], [1610, 5, 1, "", "causal_lower_right"], [1611, 5, 1, "", "causal_upper_left"]], "torch.nn.attention.flex_attention": [[2071, 1, 1, "", "BlockMask"], [2071, 5, 1, "", "and_masks"], [2071, 5, 1, "", "create_block_mask"], [2071, 5, 1, "", "create_mask"], [2071, 5, 1, "", "flex_attention"], [2071, 5, 1, "", "noop_mask"], [2071, 5, 1, "", "or_masks"]], "torch.nn.attention.flex_attention.BlockMask": [[2071, 2, 1, "", "BLOCK_SIZE"], [2071, 3, 1, "", "as_tuple"], [2071, 3, 1, "", "from_kv_blocks"], [2071, 2, 1, "", "full_kv_indices"], [2071, 2, 1, "", "full_kv_num_blocks"], [2071, 2, 1, "", "full_q_indices"], [2071, 2, 1, "", "full_q_num_blocks"], [2071, 2, 1, "", "kv_indices"], [2071, 2, 1, "", "kv_num_blocks"], [2071, 2, 1, "", "mask_mod"], [2071, 3, 1, "", "numel"], [2071, 2, 1, "", "q_indices"], [2071, 2, 1, "", "q_num_blocks"], [2071, 4, 1, "", "shape"], [2071, 3, 1, "", "sparsity"], [2071, 3, 1, "", "to"], [2071, 3, 1, "", "to_dense"], [2071, 3, 1, "", "to_string"]], "torch.nn.backends": [[2068, 0, 0, "-", "thnn"]], "torch.nn.functional": [[1613, 5, 1, "", "adaptive_avg_pool1d"], [1614, 5, 1, "", "adaptive_avg_pool2d"], [1615, 5, 1, "", "adaptive_avg_pool3d"], [1616, 5, 1, "", "adaptive_max_pool1d"], [1617, 5, 1, "", "adaptive_max_pool2d"], [1618, 5, 1, "", "adaptive_max_pool3d"], [1619, 5, 1, "", "affine_grid"], [1620, 5, 1, "", "alpha_dropout"], [1621, 5, 1, "", "avg_pool1d"], [1622, 5, 1, "", "avg_pool2d"], [1623, 5, 1, "", "avg_pool3d"], [1624, 5, 1, "", "batch_norm"], [1625, 5, 1, "", "bilinear"], [1626, 5, 1, "", "binary_cross_entropy"], [1627, 5, 1, "", "binary_cross_entropy_with_logits"], [1628, 5, 1, "", "celu"], [1629, 5, 1, "", "conv1d"], [1630, 5, 1, "", "conv2d"], [1631, 5, 1, "", "conv3d"], [1632, 5, 1, "", "conv_transpose1d"], [1633, 5, 1, "", "conv_transpose2d"], [1634, 5, 1, "", "conv_transpose3d"], [1635, 5, 1, "", "cosine_embedding_loss"], [1636, 5, 1, "", "cosine_similarity"], [1637, 5, 1, "", "cross_entropy"], [1638, 5, 1, "", "ctc_loss"], [1639, 5, 1, "", "dropout"], [1640, 5, 1, "", "dropout1d"], [1641, 5, 1, "", "dropout2d"], [1642, 5, 1, "", "dropout3d"], [1643, 5, 1, "", "elu"], [1644, 5, 1, "", "elu_"], [1645, 5, 1, "", "embedding"], [1646, 5, 1, "", "embedding_bag"], [1647, 5, 1, "", "feature_alpha_dropout"], [1648, 5, 1, "", "fold"], [1649, 5, 1, "", "fractional_max_pool2d"], [1650, 5, 1, "", "fractional_max_pool3d"], [1651, 5, 1, "", "gaussian_nll_loss"], [1652, 5, 1, "", "gelu"], [1653, 5, 1, "", "glu"], [1654, 5, 1, "", "grid_sample"], [1655, 5, 1, "", "group_norm"], [1656, 5, 1, "", "gumbel_softmax"], [1657, 5, 1, "", "hardshrink"], [1658, 5, 1, "", "hardsigmoid"], [1659, 5, 1, "", "hardswish"], [1660, 5, 1, "", "hardtanh"], [1661, 5, 1, "", "hardtanh_"], [1662, 5, 1, "", "hinge_embedding_loss"], [1663, 5, 1, "", "huber_loss"], [1664, 5, 1, "", "instance_norm"], [1665, 5, 1, "", "interpolate"], [1666, 5, 1, "", "kl_div"], [1667, 5, 1, "", "l1_loss"], [1668, 5, 1, "", "layer_norm"], [1669, 5, 1, "", "leaky_relu"], [1670, 5, 1, "", "leaky_relu_"], [1671, 5, 1, "", "linear"], [1672, 5, 1, "", "local_response_norm"], [1673, 5, 1, "", "log_softmax"], [1674, 5, 1, "", "logsigmoid"], [1675, 5, 1, "", "lp_pool1d"], [1676, 5, 1, "", "lp_pool2d"], [1677, 5, 1, "", "lp_pool3d"], [1678, 5, 1, "", "margin_ranking_loss"], [1679, 5, 1, "", "max_pool1d"], [1680, 5, 1, "", "max_pool2d"], [1681, 5, 1, "", "max_pool3d"], [1682, 5, 1, "", "max_unpool1d"], [1683, 5, 1, "", "max_unpool2d"], [1684, 5, 1, "", "max_unpool3d"], [1685, 5, 1, "", "mish"], [1686, 5, 1, "", "mse_loss"], [1687, 5, 1, "", "multi_margin_loss"], [1688, 5, 1, "", "multilabel_margin_loss"], [1689, 5, 1, "", "multilabel_soft_margin_loss"], [1690, 5, 1, "", "nll_loss"], [1691, 5, 1, "", "normalize"], [1692, 5, 1, "", "one_hot"], [1693, 5, 1, "", "pad"], [1694, 5, 1, "", "pairwise_distance"], [1695, 5, 1, "", "pdist"], [1696, 5, 1, "", "pixel_shuffle"], [1697, 5, 1, "", "pixel_unshuffle"], [1698, 5, 1, "", "poisson_nll_loss"], [1699, 5, 1, "", "prelu"], [1700, 5, 1, "", "relu"], [1701, 5, 1, "", "relu6"], [1702, 5, 1, "", "relu_"], [1703, 5, 1, "", "rms_norm"], [1704, 5, 1, "", "rrelu"], [1705, 5, 1, "", "rrelu_"], [1706, 5, 1, "", "scaled_dot_product_attention"], [1707, 5, 1, "", "selu"], [1708, 5, 1, "", "sigmoid"], [1709, 5, 1, "", "silu"], [1710, 5, 1, "", "smooth_l1_loss"], [1711, 5, 1, "", "soft_margin_loss"], [1712, 5, 1, "", "softmax"], [1713, 5, 1, "", "softmin"], [1714, 5, 1, "", "softplus"], [1715, 5, 1, "", "softshrink"], [1716, 5, 1, "", "softsign"], [1717, 5, 1, "", "tanh"], [1718, 5, 1, "", "tanhshrink"], [1719, 5, 1, "", "threshold"], [1720, 5, 1, "", "threshold_"], [1722, 5, 1, "", "triplet_margin_loss"], [1723, 5, 1, "", "triplet_margin_with_distance_loss"], [1724, 5, 1, "", "unfold"], [1725, 5, 1, "", "upsample"], [1726, 5, 1, "", "upsample_bilinear"], [1727, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[2073, 5, 1, "", "calculate_gain"], [2073, 5, 1, "", "constant_"], [2073, 5, 1, "", "dirac_"], [2073, 5, 1, "", "eye_"], [2073, 5, 1, "", "kaiming_normal_"], [2073, 5, 1, "", "kaiming_uniform_"], [2073, 5, 1, "", "normal_"], [2073, 5, 1, "", "ones_"], [2073, 5, 1, "", "orthogonal_"], [2073, 5, 1, "", "sparse_"], [2073, 5, 1, "", "trunc_normal_"], [2073, 5, 1, "", "uniform_"], [2073, 5, 1, "", "xavier_normal_"], [2073, 5, 1, "", "xavier_uniform_"], [2073, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[2107, 0, 0, "-", "modules"], [2107, 0, 0, "-", "qat"], [2107, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.modules": [[2104, 0, 0, "-", "fused"]], "torch.nn.intrinsic.qat": [[2107, 0, 0, "-", "modules"]], "torch.nn.intrinsic.qat.modules": [[2104, 0, 0, "-", "conv_fused"], [2104, 0, 0, "-", "linear_fused"], [2104, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized": [[2107, 0, 0, "-", "dynamic"], [2107, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[2107, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2104, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized.modules": [[2104, 0, 0, "-", "bn_relu"], [2104, 0, 0, "-", "conv_relu"], [2104, 0, 0, "-", "linear_relu"]], "torch.nn.modules": [[2068, 0, 0, "-", "activation"], [2068, 0, 0, "-", "adaptive"], [2068, 0, 0, "-", "batchnorm"], [2068, 0, 0, "-", "channelshuffle"], [2068, 0, 0, "-", "container"], [2068, 0, 0, "-", "conv"], [2068, 0, 0, "-", "distance"], [2068, 0, 0, "-", "dropout"], [2068, 0, 0, "-", "flatten"], [2068, 0, 0, "-", "fold"], [2068, 0, 0, "-", "instancenorm"], [2068, 0, 0, "-", "lazy"], [2068, 0, 0, "-", "linear"], [2068, 0, 0, "-", "loss"], [2068, 0, 0, "-", "module"], [2068, 0, 0, "-", "normalization"], [2068, 0, 0, "-", "padding"], [2068, 0, 0, "-", "pixelshuffle"], [2068, 0, 0, "-", "pooling"], [2068, 0, 0, "-", "rnn"], [2068, 0, 0, "-", "sparse"], [2068, 0, 0, "-", "transformer"], [2068, 0, 0, "-", "upsampling"], [2068, 0, 0, "-", "utils"]], "torch.nn.modules.lazy": [[1728, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1728, 3, 1, "", "has_uninitialized_params"], [1728, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1729, 5, 1, "", "register_module_backward_hook"], [1730, 5, 1, "", "register_module_buffer_registration_hook"], [1731, 5, 1, "", "register_module_forward_hook"], [1732, 5, 1, "", "register_module_forward_pre_hook"], [1733, 5, 1, "", "register_module_full_backward_hook"], [1734, 5, 1, "", "register_module_full_backward_pre_hook"], [1735, 5, 1, "", "register_module_module_registration_hook"], [1736, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.modules.normalization": [[1737, 1, 1, "", "RMSNorm"]], "torch.nn.modules.normalization.RMSNorm": [[1737, 3, 1, "", "extra_repr"], [1737, 3, 1, "", "forward"], [1737, 3, 1, "", "reset_parameters"]], "torch.nn.parallel": [[1738, 1, 1, "", "DistributedDataParallel"], [2068, 0, 0, "-", "comm"], [1721, 5, 1, "", "data_parallel"], [2068, 0, 0, "-", "distributed"], [2068, 0, 0, "-", "parallel_apply"], [2068, 0, 0, "-", "replicate"], [2068, 0, 0, "-", "scatter_gather"]], "torch.nn.parallel.DistributedDataParallel": [[1738, 3, 1, "", "join"], [1738, 3, 1, "", "join_hook"], [1738, 3, 1, "", "no_sync"], [1738, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1739, 1, 1, "", "Buffer"], [1740, 1, 1, "", "Parameter"], [1741, 1, 1, "", "UninitializedBuffer"], [1742, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1742, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[2107, 0, 0, "-", "dynamic"], [2107, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[2107, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic.modules": [[2104, 0, 0, "-", "linear"]], "torch.nn.qat.modules": [[2104, 0, 0, "-", "conv"], [2104, 0, 0, "-", "embedding_ops"], [2104, 0, 0, "-", "linear"]], "torch.nn.quantizable": [[2107, 0, 0, "-", "modules"]], "torch.nn.quantizable.modules": [[2104, 0, 0, "-", "activation"], [2104, 0, 0, "-", "rnn"]], "torch.nn.quantized": [[2107, 0, 0, "-", "dynamic"], [2104, 0, 0, "-", "functional"], [2107, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[2107, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic.modules": [[2104, 0, 0, "-", "conv"], [2104, 0, 0, "-", "linear"], [2104, 0, 0, "-", "rnn"]], "torch.nn.quantized.modules": [[2104, 0, 0, "-", "activation"], [2104, 0, 0, "-", "batchnorm"], [2104, 0, 0, "-", "conv"], [2104, 0, 0, "-", "dropout"], [2104, 0, 0, "-", "embedding_ops"], [2104, 0, 0, "-", "functional_modules"], [2104, 0, 0, "-", "linear"], [2104, 0, 0, "-", "normalization"], [2104, 0, 0, "-", "rnn"], [2104, 0, 0, "-", "utils"]], "torch.nn.utils": [[2068, 0, 0, "-", "clip_grad"], [1743, 5, 1, "", "clip_grad_norm"], [1744, 5, 1, "", "clip_grad_norm_"], [1745, 5, 1, "", "clip_grad_value_"], [1746, 5, 1, "", "convert_conv2d_weight_memory_format"], [1747, 5, 1, "", "convert_conv3d_weight_memory_format"], [2068, 0, 0, "-", "convert_parameters"], [1748, 5, 1, "", "fuse_conv_bn_eval"], [1749, 5, 1, "", "fuse_conv_bn_weights"], [1750, 5, 1, "", "fuse_linear_bn_eval"], [1751, 5, 1, "", "fuse_linear_bn_weights"], [2068, 0, 0, "-", "fusion"], [2068, 0, 0, "-", "init"], [2068, 0, 0, "-", "memory_format"], [1752, 5, 1, "", "parameters_to_vector"], [2068, 0, 0, "-", "parametrizations"], [2068, 0, 0, "-", "parametrize"], [2068, 0, 0, "-", "prune"], [1778, 5, 1, "", "remove_spectral_norm"], [1779, 5, 1, "", "remove_weight_norm"], [2068, 0, 0, "-", "rnn"], [1787, 5, 1, "", "skip_init"], [1788, 5, 1, "", "spectral_norm"], [2068, 0, 0, "-", "stateless"], [1790, 5, 1, "", "vector_to_parameters"], [1791, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1753, 5, 1, "", "orthogonal"], [1754, 5, 1, "", "spectral_norm"], [1755, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrize": [[1756, 1, 1, "", "ParametrizationList"], [1757, 5, 1, "", "cached"], [1758, 5, 1, "", "is_parametrized"], [1759, 5, 1, "", "register_parametrization"], [1760, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1756, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1761, 1, 1, "", "BasePruningMethod"], [1762, 1, 1, "", "CustomFromMask"], [1763, 1, 1, "", "Identity"], [1764, 1, 1, "", "L1Unstructured"], [1765, 1, 1, "", "LnStructured"], [1766, 1, 1, "", "PruningContainer"], [1767, 1, 1, "", "RandomStructured"], [1768, 1, 1, "", "RandomUnstructured"], [1769, 5, 1, "", "custom_from_mask"], [1770, 5, 1, "", "global_unstructured"], [1771, 5, 1, "", "identity"], [1772, 5, 1, "", "is_pruned"], [1773, 5, 1, "", "l1_unstructured"], [1774, 5, 1, "", "ln_structured"], [1775, 5, 1, "", "random_structured"], [1776, 5, 1, "", "random_unstructured"], [1777, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1761, 3, 1, "", "apply"], [1761, 3, 1, "", "apply_mask"], [1761, 3, 1, "", "compute_mask"], [1761, 3, 1, "", "prune"], [1761, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1762, 3, 1, "", "apply"], [1762, 3, 1, "", "apply_mask"], [1762, 3, 1, "", "prune"], [1762, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1763, 3, 1, "", "apply"], [1763, 3, 1, "", "apply_mask"], [1763, 3, 1, "", "prune"], [1763, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1764, 3, 1, "", "apply"], [1764, 3, 1, "", "apply_mask"], [1764, 3, 1, "", "prune"], [1764, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1765, 3, 1, "", "apply"], [1765, 3, 1, "", "apply_mask"], [1765, 3, 1, "", "compute_mask"], [1765, 3, 1, "", "prune"], [1765, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1766, 3, 1, "", "add_pruning_method"], [1766, 3, 1, "", "apply"], [1766, 3, 1, "", "apply_mask"], [1766, 3, 1, "", "compute_mask"], [1766, 3, 1, "", "prune"], [1766, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1767, 3, 1, "", "apply"], [1767, 3, 1, "", "apply_mask"], [1767, 3, 1, "", "compute_mask"], [1767, 3, 1, "", "prune"], [1767, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1768, 3, 1, "", "apply"], [1768, 3, 1, "", "apply_mask"], [1768, 3, 1, "", "prune"], [1768, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1780, 1, 1, "", "PackedSequence"], [1781, 5, 1, "", "pack_padded_sequence"], [1782, 5, 1, "", "pack_sequence"], [1783, 5, 1, "", "pad_packed_sequence"], [1784, 5, 1, "", "pad_sequence"], [1785, 5, 1, "", "unpack_sequence"], [1786, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1780, 2, 1, "", "batch_sizes"], [1780, 3, 1, "", "count"], [1780, 2, 1, "", "data"], [1780, 3, 1, "", "index"], [1780, 4, 1, "", "is_cuda"], [1780, 3, 1, "", "is_pinned"], [1780, 2, 1, "", "sorted_indices"], [1780, 3, 1, "", "to"], [1780, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1789, 5, 1, "", "functional_call"]], "torch.onnx": [[2097, 1, 1, "", "DiagnosticOptions"], [2097, 1, 1, "", "ExportOptions"], [2097, 1, 1, "", "InvalidExportOptionsError"], [1800, 1, 1, "", "JitScalarType"], [2097, 1, 1, "", "ONNXProgram"], [2097, 1, 1, "", "ONNXProgramSerializer"], [2097, 1, 1, "", "ONNXRuntimeOptions"], [2097, 1, 1, "", "OnnxExporterError"], [2097, 1, 1, "", "OnnxRegistry"], [2099, 5, 1, "", "disable_log"], [2097, 5, 1, "", "dynamo_export"], [2097, 5, 1, "", "enable_fake_mode"], [2099, 5, 1, "", "enable_log"], [2096, 0, 0, "-", "errors"], [2099, 5, 1, "", "export"], [2099, 5, 1, "", "export_to_pretty_string"], [2099, 5, 1, "", "is_in_onnx_export"], [2098, 5, 1, "", "is_onnxrt_backend_supported"], [2096, 0, 0, "-", "operators"], [2099, 5, 1, "", "register_custom_op_symbolic"], [2099, 5, 1, "", "select_model_mode_for_export"], [2096, 0, 0, "-", "symbolic_caffe2"], [2096, 0, 0, "-", "symbolic_helper"], [2096, 0, 0, "-", "symbolic_opset10"], [2096, 0, 0, "-", "symbolic_opset11"], [2096, 0, 0, "-", "symbolic_opset12"], [2096, 0, 0, "-", "symbolic_opset13"], [2096, 0, 0, "-", "symbolic_opset14"], [2096, 0, 0, "-", "symbolic_opset15"], [2096, 0, 0, "-", "symbolic_opset16"], [2096, 0, 0, "-", "symbolic_opset17"], [2096, 0, 0, "-", "symbolic_opset18"], [2096, 0, 0, "-", "symbolic_opset19"], [2096, 0, 0, "-", "symbolic_opset20"], [2096, 0, 0, "-", "symbolic_opset7"], [2096, 0, 0, "-", "symbolic_opset8"], [2096, 0, 0, "-", "symbolic_opset9"], [2099, 5, 1, "", "unregister_custom_op_symbolic"], [2096, 0, 0, "-", "utils"], [2096, 0, 0, "-", "verification"]], "torch.onnx.JitScalarType": [[1800, 3, 1, "", "dtype"], [1800, 3, 1, "", "from_dtype"], [1800, 3, 1, "", "from_onnx_type"], [1800, 3, 1, "", "from_value"], [1800, 3, 1, "", "onnx_compatible"], [1800, 3, 1, "", "onnx_type"], [1800, 3, 1, "", "scalar_name"], [1800, 3, 1, "", "torch_name"]], "torch.onnx.ONNXProgram": [[2097, 3, 1, "", "adapt_torch_inputs_to_onnx"], [2097, 3, 1, "", "adapt_torch_outputs_to_onnx"], [2097, 4, 1, "", "diagnostic_context"], [2097, 4, 1, "", "fake_context"], [2097, 4, 1, "", "model_proto"], [2097, 4, 1, "", "model_signature"], [2097, 3, 1, "", "save"], [2097, 3, 1, "", "save_diagnostics"]], "torch.onnx.ONNXProgramSerializer": [[2097, 3, 1, "", "serialize"]], "torch.onnx.OnnxRegistry": [[2097, 3, 1, "", "get_op_functions"], [2097, 3, 1, "", "is_registered_op"], [2097, 4, 1, "", "opset_version"], [2097, 3, 1, "", "register_op"]], "torch.onnx.verification": [[1801, 1, 1, "", "GraphInfo"], [1802, 1, 1, "", "VerificationOptions"], [2099, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1801, 3, 1, "", "all_mismatch_leaf_graph_info"], [1801, 3, 1, "", "clear"], [1801, 3, 1, "", "essential_node_count"], [1801, 3, 1, "", "essential_node_kinds"], [1801, 3, 1, "", "export_repro"], [1801, 3, 1, "", "find_mismatch"], [1801, 3, 1, "", "find_partition"], [1801, 3, 1, "", "has_mismatch"], [1801, 3, 1, "", "pretty_print_mismatch"], [1801, 3, 1, "", "pretty_print_tree"], [1801, 3, 1, "", "verify_export"]], "torch.optim": [[1803, 1, 1, "", "ASGD"], [1804, 1, 1, "", "Adadelta"], [1805, 1, 1, "", "Adafactor"], [1806, 1, 1, "", "Adagrad"], [1807, 1, 1, "", "Adam"], [1808, 1, 1, "", "AdamW"], [1809, 1, 1, "", "Adamax"], [1810, 1, 1, "", "LBFGS"], [1811, 1, 1, "", "NAdam"], [2101, 1, 1, "", "Optimizer"], [1823, 1, 1, "", "RAdam"], [1824, 1, 1, "", "RMSprop"], [1825, 1, 1, "", "Rprop"], [1826, 1, 1, "", "SGD"], [1827, 1, 1, "", "SparseAdam"], [2101, 0, 0, "-", "adadelta"], [2101, 0, 0, "-", "adagrad"], [2101, 0, 0, "-", "adam"], [2101, 0, 0, "-", "adamax"], [2101, 0, 0, "-", "adamw"], [2101, 0, 0, "-", "asgd"], [2101, 0, 0, "-", "lbfgs"], [2101, 0, 0, "-", "lr_scheduler"], [2101, 0, 0, "-", "nadam"], [2101, 0, 0, "-", "optimizer"], [2101, 0, 0, "-", "radam"], [2101, 0, 0, "-", "rmsprop"], [2101, 0, 0, "-", "rprop"], [2101, 0, 0, "-", "sgd"], [2101, 0, 0, "-", "sparse_adam"], [2101, 0, 0, "-", "swa_utils"]], "torch.optim.ASGD": [[1803, 3, 1, "", "add_param_group"], [1803, 3, 1, "", "load_state_dict"], [1803, 3, 1, "", "register_load_state_dict_post_hook"], [1803, 3, 1, "", "register_load_state_dict_pre_hook"], [1803, 3, 1, "", "register_state_dict_post_hook"], [1803, 3, 1, "", "register_state_dict_pre_hook"], [1803, 3, 1, "", "register_step_post_hook"], [1803, 3, 1, "", "register_step_pre_hook"], [1803, 3, 1, "", "state_dict"], [1803, 3, 1, "", "step"], [1803, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1804, 3, 1, "", "add_param_group"], [1804, 3, 1, "", "load_state_dict"], [1804, 3, 1, "", "register_load_state_dict_post_hook"], [1804, 3, 1, "", "register_load_state_dict_pre_hook"], [1804, 3, 1, "", "register_state_dict_post_hook"], [1804, 3, 1, "", "register_state_dict_pre_hook"], [1804, 3, 1, "", "register_step_post_hook"], [1804, 3, 1, "", "register_step_pre_hook"], [1804, 3, 1, "", "state_dict"], [1804, 3, 1, "", "step"], [1804, 3, 1, "", "zero_grad"]], "torch.optim.Adafactor": [[1805, 3, 1, "", "add_param_group"], [1805, 3, 1, "", "load_state_dict"], [1805, 3, 1, "", "register_load_state_dict_post_hook"], [1805, 3, 1, "", "register_load_state_dict_pre_hook"], [1805, 3, 1, "", "register_state_dict_post_hook"], [1805, 3, 1, "", "register_state_dict_pre_hook"], [1805, 3, 1, "", "register_step_post_hook"], [1805, 3, 1, "", "register_step_pre_hook"], [1805, 3, 1, "", "state_dict"], [1805, 3, 1, "", "step"], [1805, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1806, 3, 1, "", "add_param_group"], [1806, 3, 1, "", "load_state_dict"], [1806, 3, 1, "", "register_load_state_dict_post_hook"], [1806, 3, 1, "", "register_load_state_dict_pre_hook"], [1806, 3, 1, "", "register_state_dict_post_hook"], [1806, 3, 1, "", "register_state_dict_pre_hook"], [1806, 3, 1, "", "register_step_post_hook"], [1806, 3, 1, "", "register_step_pre_hook"], [1806, 3, 1, "", "state_dict"], [1806, 3, 1, "", "step"], [1806, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1807, 3, 1, "", "add_param_group"], [1807, 3, 1, "", "load_state_dict"], [1807, 3, 1, "", "register_load_state_dict_post_hook"], [1807, 3, 1, "", "register_load_state_dict_pre_hook"], [1807, 3, 1, "", "register_state_dict_post_hook"], [1807, 3, 1, "", "register_state_dict_pre_hook"], [1807, 3, 1, "", "register_step_post_hook"], [1807, 3, 1, "", "register_step_pre_hook"], [1807, 3, 1, "", "state_dict"], [1807, 3, 1, "", "step"], [1807, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1808, 3, 1, "", "add_param_group"], [1808, 3, 1, "", "load_state_dict"], [1808, 3, 1, "", "register_load_state_dict_post_hook"], [1808, 3, 1, "", "register_load_state_dict_pre_hook"], [1808, 3, 1, "", "register_state_dict_post_hook"], [1808, 3, 1, "", "register_state_dict_pre_hook"], [1808, 3, 1, "", "register_step_post_hook"], [1808, 3, 1, "", "register_step_pre_hook"], [1808, 3, 1, "", "state_dict"], [1808, 3, 1, "", "step"], [1808, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1809, 3, 1, "", "add_param_group"], [1809, 3, 1, "", "load_state_dict"], [1809, 3, 1, "", "register_load_state_dict_post_hook"], [1809, 3, 1, "", "register_load_state_dict_pre_hook"], [1809, 3, 1, "", "register_state_dict_post_hook"], [1809, 3, 1, "", "register_state_dict_pre_hook"], [1809, 3, 1, "", "register_step_post_hook"], [1809, 3, 1, "", "register_step_pre_hook"], [1809, 3, 1, "", "state_dict"], [1809, 3, 1, "", "step"], [1809, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1810, 3, 1, "", "add_param_group"], [1810, 3, 1, "", "load_state_dict"], [1810, 3, 1, "", "register_load_state_dict_post_hook"], [1810, 3, 1, "", "register_load_state_dict_pre_hook"], [1810, 3, 1, "", "register_state_dict_post_hook"], [1810, 3, 1, "", "register_state_dict_pre_hook"], [1810, 3, 1, "", "register_step_post_hook"], [1810, 3, 1, "", "register_step_pre_hook"], [1810, 3, 1, "", "state_dict"], [1810, 3, 1, "", "step"], [1810, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1811, 3, 1, "", "add_param_group"], [1811, 3, 1, "", "load_state_dict"], [1811, 3, 1, "", "register_load_state_dict_post_hook"], [1811, 3, 1, "", "register_load_state_dict_pre_hook"], [1811, 3, 1, "", "register_state_dict_post_hook"], [1811, 3, 1, "", "register_state_dict_pre_hook"], [1811, 3, 1, "", "register_step_post_hook"], [1811, 3, 1, "", "register_step_pre_hook"], [1811, 3, 1, "", "state_dict"], [1811, 3, 1, "", "step"], [1811, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1812, 3, 1, "", "add_param_group"], [1813, 3, 1, "", "load_state_dict"], [1814, 3, 1, "", "register_load_state_dict_post_hook"], [1815, 3, 1, "", "register_load_state_dict_pre_hook"], [1816, 3, 1, "", "register_state_dict_post_hook"], [1817, 3, 1, "", "register_state_dict_pre_hook"], [1818, 3, 1, "", "register_step_post_hook"], [1819, 3, 1, "", "register_step_pre_hook"], [1820, 3, 1, "", "state_dict"], [1821, 3, 1, "", "step"], [1822, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1823, 3, 1, "", "add_param_group"], [1823, 3, 1, "", "load_state_dict"], [1823, 3, 1, "", "register_load_state_dict_post_hook"], [1823, 3, 1, "", "register_load_state_dict_pre_hook"], [1823, 3, 1, "", "register_state_dict_post_hook"], [1823, 3, 1, "", "register_state_dict_pre_hook"], [1823, 3, 1, "", "register_step_post_hook"], [1823, 3, 1, "", "register_step_pre_hook"], [1823, 3, 1, "", "state_dict"], [1823, 3, 1, "", "step"], [1823, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1824, 3, 1, "", "add_param_group"], [1824, 3, 1, "", "load_state_dict"], [1824, 3, 1, "", "register_load_state_dict_post_hook"], [1824, 3, 1, "", "register_load_state_dict_pre_hook"], [1824, 3, 1, "", "register_state_dict_post_hook"], [1824, 3, 1, "", "register_state_dict_pre_hook"], [1824, 3, 1, "", "register_step_post_hook"], [1824, 3, 1, "", "register_step_pre_hook"], [1824, 3, 1, "", "state_dict"], [1824, 3, 1, "", "step"], [1824, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1825, 3, 1, "", "add_param_group"], [1825, 3, 1, "", "load_state_dict"], [1825, 3, 1, "", "register_load_state_dict_post_hook"], [1825, 3, 1, "", "register_load_state_dict_pre_hook"], [1825, 3, 1, "", "register_state_dict_post_hook"], [1825, 3, 1, "", "register_state_dict_pre_hook"], [1825, 3, 1, "", "register_step_post_hook"], [1825, 3, 1, "", "register_step_pre_hook"], [1825, 3, 1, "", "state_dict"], [1825, 3, 1, "", "step"], [1825, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1826, 3, 1, "", "add_param_group"], [1826, 3, 1, "", "load_state_dict"], [1826, 3, 1, "", "register_load_state_dict_post_hook"], [1826, 3, 1, "", "register_load_state_dict_pre_hook"], [1826, 3, 1, "", "register_state_dict_post_hook"], [1826, 3, 1, "", "register_state_dict_pre_hook"], [1826, 3, 1, "", "register_step_post_hook"], [1826, 3, 1, "", "register_step_pre_hook"], [1826, 3, 1, "", "state_dict"], [1826, 3, 1, "", "step"], [1826, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1827, 3, 1, "", "add_param_group"], [1827, 3, 1, "", "load_state_dict"], [1827, 3, 1, "", "register_load_state_dict_post_hook"], [1827, 3, 1, "", "register_load_state_dict_pre_hook"], [1827, 3, 1, "", "register_state_dict_post_hook"], [1827, 3, 1, "", "register_state_dict_pre_hook"], [1827, 3, 1, "", "register_step_post_hook"], [1827, 3, 1, "", "register_step_pre_hook"], [1827, 3, 1, "", "state_dict"], [1827, 3, 1, "", "step"], [1827, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1828, 1, 1, "", "ChainedScheduler"], [1829, 1, 1, "", "ConstantLR"], [1830, 1, 1, "", "CosineAnnealingLR"], [1831, 1, 1, "", "CosineAnnealingWarmRestarts"], [1832, 1, 1, "", "CyclicLR"], [1833, 1, 1, "", "ExponentialLR"], [1834, 1, 1, "", "LRScheduler"], [1835, 1, 1, "", "LambdaLR"], [1836, 1, 1, "", "LinearLR"], [1837, 1, 1, "", "MultiStepLR"], [1838, 1, 1, "", "MultiplicativeLR"], [1839, 1, 1, "", "OneCycleLR"], [1840, 1, 1, "", "PolynomialLR"], [1841, 1, 1, "", "ReduceLROnPlateau"], [1842, 1, 1, "", "SequentialLR"], [1843, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1828, 3, 1, "", "get_last_lr"], [1828, 3, 1, "", "get_lr"], [1828, 3, 1, "", "load_state_dict"], [1828, 3, 1, "", "print_lr"], [1828, 3, 1, "", "state_dict"], [1828, 3, 1, "", "step"]], "torch.optim.lr_scheduler.ConstantLR": [[1829, 3, 1, "", "get_last_lr"], [1829, 3, 1, "", "get_lr"], [1829, 3, 1, "", "load_state_dict"], [1829, 3, 1, "", "print_lr"], [1829, 3, 1, "", "state_dict"], [1829, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1830, 3, 1, "", "get_last_lr"], [1830, 3, 1, "", "get_lr"], [1830, 3, 1, "", "load_state_dict"], [1830, 3, 1, "", "print_lr"], [1830, 3, 1, "", "state_dict"], [1830, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1831, 3, 1, "", "get_last_lr"], [1831, 3, 1, "", "get_lr"], [1831, 3, 1, "", "load_state_dict"], [1831, 3, 1, "", "print_lr"], [1831, 3, 1, "", "state_dict"], [1831, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1832, 3, 1, "", "get_last_lr"], [1832, 3, 1, "", "get_lr"], [1832, 3, 1, "", "load_state_dict"], [1832, 3, 1, "", "print_lr"], [1832, 3, 1, "", "scale_fn"], [1832, 3, 1, "", "step"]], "torch.optim.lr_scheduler.ExponentialLR": [[1833, 3, 1, "", "get_last_lr"], [1833, 3, 1, "", "get_lr"], [1833, 3, 1, "", "load_state_dict"], [1833, 3, 1, "", "print_lr"], [1833, 3, 1, "", "state_dict"], [1833, 3, 1, "", "step"]], "torch.optim.lr_scheduler.LRScheduler": [[1834, 3, 1, "", "get_last_lr"], [1834, 3, 1, "", "get_lr"], [1834, 3, 1, "", "load_state_dict"], [1834, 3, 1, "", "print_lr"], [1834, 3, 1, "", "state_dict"], [1834, 3, 1, "", "step"]], "torch.optim.lr_scheduler.LambdaLR": [[1835, 3, 1, "", "get_last_lr"], [1835, 3, 1, "", "get_lr"], [1835, 3, 1, "", "load_state_dict"], [1835, 3, 1, "", "print_lr"], [1835, 3, 1, "", "state_dict"], [1835, 3, 1, "", "step"]], "torch.optim.lr_scheduler.LinearLR": [[1836, 3, 1, "", "get_last_lr"], [1836, 3, 1, "", "get_lr"], [1836, 3, 1, "", "load_state_dict"], [1836, 3, 1, "", "print_lr"], [1836, 3, 1, "", "state_dict"], [1836, 3, 1, "", "step"]], "torch.optim.lr_scheduler.MultiStepLR": [[1837, 3, 1, "", "get_last_lr"], [1837, 3, 1, "", "get_lr"], [1837, 3, 1, "", "load_state_dict"], [1837, 3, 1, "", "print_lr"], [1837, 3, 1, "", "state_dict"], [1837, 3, 1, "", "step"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1838, 3, 1, "", "get_last_lr"], [1838, 3, 1, "", "get_lr"], [1838, 3, 1, "", "load_state_dict"], [1838, 3, 1, "", "print_lr"], [1838, 3, 1, "", "state_dict"], [1838, 3, 1, "", "step"]], "torch.optim.lr_scheduler.OneCycleLR": [[1839, 3, 1, "", "get_last_lr"], [1839, 3, 1, "", "get_lr"], [1839, 3, 1, "", "load_state_dict"], [1839, 3, 1, "", "print_lr"], [1839, 3, 1, "", "state_dict"], [1839, 3, 1, "", "step"]], "torch.optim.lr_scheduler.PolynomialLR": [[1840, 3, 1, "", "get_last_lr"], [1840, 3, 1, "", "get_lr"], [1840, 3, 1, "", "load_state_dict"], [1840, 3, 1, "", "print_lr"], [1840, 3, 1, "", "state_dict"], [1840, 3, 1, "", "step"]], "torch.optim.lr_scheduler.ReduceLROnPlateau": [[1841, 3, 1, "", "get_last_lr"], [1841, 3, 1, "", "get_lr"], [1841, 3, 1, "", "load_state_dict"], [1841, 3, 1, "", "print_lr"], [1841, 3, 1, "", "step"]], "torch.optim.lr_scheduler.SequentialLR": [[1842, 3, 1, "", "get_last_lr"], [1842, 3, 1, "", "get_lr"], [1842, 3, 1, "", "load_state_dict"], [1842, 3, 1, "", "print_lr"], [1842, 3, 1, "", "state_dict"], [1842, 3, 1, "", "step"]], "torch.optim.lr_scheduler.StepLR": [[1843, 3, 1, "", "get_last_lr"], [1843, 3, 1, "", "get_lr"], [1843, 3, 1, "", "load_state_dict"], [1843, 3, 1, "", "print_lr"], [1843, 3, 1, "", "state_dict"], [1843, 3, 1, "", "step"]], "torch.overrides": [[2146, 5, 1, "", "get_ignored_functions"], [2146, 5, 1, "", "get_overridable_functions"], [2146, 5, 1, "", "get_testing_overrides"], [2146, 5, 1, "", "handle_torch_function"], [2146, 5, 1, "", "has_torch_function"], [2146, 5, 1, "", "is_tensor_like"], [2146, 5, 1, "", "is_tensor_method_or_property"], [2146, 5, 1, "", "resolve_name"], [2146, 5, 1, "", "wrap_torch_function"]], "torch.package": [[2102, 1, 1, "", "Directory"], [2102, 1, 1, "", "EmptyMatchError"], [2102, 1, 1, "", "PackageExporter"], [2102, 1, 1, "", "PackageImporter"], [2102, 1, 1, "", "PackagingError"], [2102, 0, 0, "-", "analyze"], [2102, 0, 0, "-", "file_structure_representation"], [2102, 0, 0, "-", "find_file_dependencies"], [2102, 0, 0, "-", "glob_group"], [2102, 0, 0, "-", "importer"], [2102, 0, 0, "-", "package_exporter"], [2102, 0, 0, "-", "package_importer"]], "torch.package.Directory": [[2102, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[2102, 3, 1, "", "__init__"], [2102, 3, 1, "", "add_dependency"], [2102, 3, 1, "", "all_paths"], [2102, 3, 1, "", "close"], [2102, 3, 1, "", "denied_modules"], [2102, 3, 1, "", "deny"], [2102, 3, 1, "", "dependency_graph_string"], [2102, 3, 1, "", "extern"], [2102, 3, 1, "", "externed_modules"], [2102, 3, 1, "", "get_rdeps"], [2102, 3, 1, "", "get_unique_id"], [2102, 3, 1, "", "intern"], [2102, 3, 1, "", "interned_modules"], [2102, 3, 1, "", "mock"], [2102, 3, 1, "", "mocked_modules"], [2102, 3, 1, "", "register_extern_hook"], [2102, 3, 1, "", "register_intern_hook"], [2102, 3, 1, "", "register_mock_hook"], [2102, 3, 1, "", "save_binary"], [2102, 3, 1, "", "save_module"], [2102, 3, 1, "", "save_pickle"], [2102, 3, 1, "", "save_source_file"], [2102, 3, 1, "", "save_source_string"], [2102, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[2102, 3, 1, "", "__init__"], [2102, 3, 1, "", "file_structure"], [2102, 3, 1, "", "id"], [2102, 3, 1, "", "import_module"], [2102, 3, 1, "", "load_binary"], [2102, 3, 1, "", "load_pickle"], [2102, 3, 1, "", "load_text"], [2102, 3, 1, "", "python_version"]], "torch.package.analyze": [[2102, 0, 0, "-", "find_first_use_of_broken_modules"], [2102, 0, 0, "-", "is_from_package"], [2102, 0, 0, "-", "trace_dependencies"]], "torch.profiler": [[2103, 1, 1, "", "ProfilerAction"], [2103, 1, 1, "", "ProfilerActivity"], [2103, 1, 1, "", "_KinetoProfile"], [2103, 0, 0, "-", "itt"], [2103, 1, 1, "", "profile"], [2103, 0, 0, "-", "profiler"], [2103, 0, 0, "-", "python_tracer"], [2103, 5, 1, "", "schedule"], [2103, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[2103, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[2103, 3, 1, "", "add_metadata"], [2103, 3, 1, "", "add_metadata_json"], [2103, 3, 1, "", "events"], [2103, 3, 1, "", "export_chrome_trace"], [2103, 3, 1, "", "export_memory_timeline"], [2103, 3, 1, "", "export_stacks"], [2103, 3, 1, "", "key_averages"], [2103, 3, 1, "", "preset_metadata_json"], [2103, 3, 1, "", "toggle_collection_dynamic"]], "torch.profiler.itt": [[2103, 5, 1, "", "is_available"], [2103, 5, 1, "", "mark"], [2103, 5, 1, "", "range_pop"], [2103, 5, 1, "", "range_push"]], "torch.profiler.profile": [[2103, 3, 1, "", "step"]], "torch.quantization": [[2104, 0, 0, "-", "fake_quantize"], [2104, 0, 0, "-", "fuse_modules"], [2104, 0, 0, "-", "fuser_method_mappings"], [2107, 0, 0, "-", "fx"], [2104, 0, 0, "-", "observer"], [2104, 0, 0, "-", "qconfig"], [2104, 0, 0, "-", "quant_type"], [2104, 0, 0, "-", "quantization_mappings"], [2104, 0, 0, "-", "quantize"], [2104, 0, 0, "-", "quantize_fx"], [2104, 0, 0, "-", "quantize_jit"], [2104, 0, 0, "-", "stubs"], [2104, 0, 0, "-", "utils"]], "torch.quantization.fx": [[2104, 0, 0, "-", "convert"], [2104, 0, 0, "-", "fuse"], [2104, 0, 0, "-", "fusion_patterns"], [2104, 0, 0, "-", "graph_module"], [2104, 0, 0, "-", "match_utils"], [2104, 0, 0, "-", "pattern_utils"], [2104, 0, 0, "-", "prepare"], [2104, 0, 0, "-", "quantization_patterns"], [2104, 0, 0, "-", "quantization_types"], [2104, 0, 0, "-", "utils"]], "torch.quasirandom": [[1864, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1864, 3, 1, "", "draw"], [1864, 3, 1, "", "draw_base2"], [1864, 3, 1, "", "fast_forward"], [1864, 3, 1, "", "reset"]], "torch.random": [[2108, 5, 1, "", "fork_rng"], [2108, 5, 1, "", "get_rng_state"], [2108, 5, 1, "", "initial_seed"], [2108, 5, 1, "", "manual_seed"], [2108, 5, 1, "", "seed"], [2108, 5, 1, "", "set_rng_state"]], "torch.serialization": [[2094, 5, 1, "", "add_safe_globals"], [2094, 5, 1, "", "clear_safe_globals"], [2094, 5, 1, "", "get_default_load_endianness"], [2094, 5, 1, "", "get_default_mmap_options"], [2094, 5, 1, "", "get_safe_globals"], [2094, 5, 1, "", "register_package"], [2094, 1, 1, "", "safe_globals"], [2094, 5, 1, "", "set_default_load_endianness"], [2094, 5, 1, "", "set_default_mmap_options"]], "torch.signal": [[2112, 0, 0, "-", "windows"]], "torch.signal.windows": [[1911, 5, 1, "", "bartlett"], [1912, 5, 1, "", "blackman"], [1913, 5, 1, "", "cosine"], [1914, 5, 1, "", "exponential"], [1915, 5, 1, "", "gaussian"], [1916, 5, 1, "", "general_cosine"], [1917, 5, 1, "", "general_hamming"], [1918, 5, 1, "", "hamming"], [1919, 5, 1, "", "hann"], [1920, 5, 1, "", "kaiser"], [1921, 5, 1, "", "nuttall"], [2123, 0, 0, "-", "windows"]], "torch.sparse": [[1931, 5, 1, "", "addmm"], [1932, 5, 1, "", "as_sparse_gradcheck"], [1933, 1, 1, "", "check_sparse_tensor_invariants"], [1934, 5, 1, "", "log_softmax"], [1935, 5, 1, "", "mm"], [1936, 5, 1, "", "sampled_addmm"], [2123, 0, 0, "-", "semi_structured"], [1937, 5, 1, "", "softmax"], [1938, 5, 1, "", "spdiags"], [1939, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1933, 3, 1, "", "disable"], [1933, 3, 1, "", "enable"], [1933, 3, 1, "", "is_enabled"]], "torch.special": [[2115, 5, 1, "", "airy_ai"], [2115, 5, 1, "", "bessel_j0"], [2115, 5, 1, "", "bessel_j1"], [2115, 5, 1, "", "digamma"], [2115, 5, 1, "", "entr"], [2115, 5, 1, "", "erf"], [2115, 5, 1, "", "erfc"], [2115, 5, 1, "", "erfcx"], [2115, 5, 1, "", "erfinv"], [2115, 5, 1, "", "exp2"], [2115, 5, 1, "", "expit"], [2115, 5, 1, "", "expm1"], [2115, 5, 1, "", "gammainc"], [2115, 5, 1, "", "gammaincc"], [2115, 5, 1, "", "gammaln"], [2115, 5, 1, "", "i0"], [2115, 5, 1, "", "i0e"], [2115, 5, 1, "", "i1"], [2115, 5, 1, "", "i1e"], [2115, 5, 1, "", "log1p"], [2115, 5, 1, "", "log_ndtr"], [2115, 5, 1, "", "log_softmax"], [2115, 5, 1, "", "logit"], [2115, 5, 1, "", "logsumexp"], [2115, 5, 1, "", "multigammaln"], [2115, 5, 1, "", "ndtr"], [2115, 5, 1, "", "ndtri"], [2115, 5, 1, "", "polygamma"], [2115, 5, 1, "", "psi"], [2115, 5, 1, "", "round"], [2115, 5, 1, "", "scaled_modified_bessel_k0"], [2115, 5, 1, "", "scaled_modified_bessel_k1"], [2115, 5, 1, "", "sinc"], [2115, 5, 1, "", "softmax"], [2115, 5, 1, "", "spherical_bessel_j0"], [2115, 5, 1, "", "xlog1py"], [2115, 5, 1, "", "xlogy"], [2115, 5, 1, "", "zeta"]], "torch.testing": [[2121, 5, 1, "", "assert_allclose"], [2121, 5, 1, "", "assert_close"], [2121, 5, 1, "", "make_tensor"]], "torch.torch": [[2123, 2, 1, "", "default_generator"], [2150, 1, 1, "", "finfo"], [2150, 1, 1, "", "iinfo"]], "torch.utils": [[2123, 0, 0, "-", "backcompat"], [2151, 0, 0, "-", "backend_registration"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [2151, 0, 0, "-", "bundled_inputs"], [2151, 0, 0, "-", "checkpoint"], [2151, 0, 0, "-", "collect_env"], [2151, 0, 0, "-", "cpp_backtrace"], [2151, 0, 0, "-", "cpp_extension"], [23, 0, 0, "-", "data"], [27, 0, 0, "-", "deterministic"], [2151, 0, 0, "-", "dlpack"], [2151, 0, 0, "-", "file_baton"], [2151, 0, 0, "-", "flop_counter"], [1996, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1997, 5, 1, "", "get_cpp_backtrace"], [2123, 0, 0, "-", "hipify"], [2151, 0, 0, "-", "hooks"], [2050, 0, 0, "-", "jit"], [2151, 0, 0, "-", "mkldnn"], [2151, 0, 0, "-", "mobile_optimizer"], [2123, 0, 0, "-", "model_dump"], [2058, 0, 0, "-", "model_zoo"], [2059, 0, 0, "-", "module_tracker"], [1998, 5, 1, "", "rename_privateuse1_backend"], [1999, 5, 1, "", "set_module"], [2151, 0, 0, "-", "show_pickle"], [2000, 5, 1, "", "swap_tensors"], [2119, 0, 0, "-", "tensorboard"], [2151, 0, 0, "-", "throughput_benchmark"], [2123, 0, 0, "-", "viz"], [2151, 0, 0, "-", "weak"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "Compare"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.Compare": [[3, 3, 1, "", "colorize"], [3, 3, 1, "", "extend_results"], [3, 3, 1, "", "highlight_warnings"], [3, 3, 1, "", "print"], [3, 3, 1, "", "trim_significant_figures"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "adaptive_autorange"], [3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.examples": [[2151, 0, 0, "-", "blas_compare_setup"], [2151, 0, 0, "-", "compare"], [2151, 0, 0, "-", "fuzzer"], [2151, 0, 0, "-", "op_benchmark"], [2151, 0, 0, "-", "simple_timeit"], [2151, 0, 0, "-", "spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers": [[2151, 0, 0, "-", "binary"], [2151, 0, 0, "-", "sparse_binary"], [2151, 0, 0, "-", "sparse_unary"], [2151, 0, 0, "-", "spectral"], [2151, 0, 0, "-", "unary"]], "torch.utils.benchmark.utils": [[2151, 0, 0, "-", "common"], [2151, 0, 0, "-", "compare"], [2151, 0, 0, "-", "compile"], [2151, 0, 0, "-", "cpp_jit"], [2151, 0, 0, "-", "fuzzer"], [2151, 0, 0, "-", "sparse_fuzzer"], [2151, 0, 0, "-", "timer"], [3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[2151, 0, 0, "-", "timer_interface"]], "torch.utils.checkpoint": [[5, 1, 1, "", "CheckpointPolicy"], [5, 1, 1, "", "SelectiveCheckpointContext"], [5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"], [5, 5, 1, "", "create_selective_checkpoint_contexts"], [5, 5, 1, "", "set_checkpoint_debug_enabled"]], "torch.utils.cpp_extension": [[14, 5, 1, "", "BuildExtension"], [14, 5, 1, "", "CUDAExtension"], [14, 5, 1, "", "CppExtension"], [14, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [14, 5, 1, "", "include_paths"], [14, 5, 1, "", "is_ninja_available"], [14, 5, 1, "", "load"], [14, 5, 1, "", "load_inline"], [14, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[23, 1, 1, "", "BatchSampler"], [23, 1, 1, "", "ChainDataset"], [23, 1, 1, "", "ConcatDataset"], [23, 1, 1, "", "DataLoader"], [23, 1, 1, "", "Dataset"], [23, 1, 1, "", "IterableDataset"], [23, 1, 1, "", "RandomSampler"], [23, 1, 1, "", "Sampler"], [23, 1, 1, "", "SequentialSampler"], [23, 1, 1, "", "StackDataset"], [23, 1, 1, "", "Subset"], [23, 1, 1, "", "SubsetRandomSampler"], [23, 1, 1, "", "TensorDataset"], [23, 1, 1, "", "WeightedRandomSampler"], [2151, 0, 0, "-", "backward_compatibility"], [2151, 0, 0, "-", "dataloader"], [23, 0, 0, "-", "datapipes"], [2151, 0, 0, "-", "dataset"], [23, 5, 1, "", "default_collate"], [23, 5, 1, "", "default_convert"], [2151, 0, 0, "-", "distributed"], [23, 5, 1, "", "get_worker_info"], [2151, 0, 0, "-", "graph"], [2151, 0, 0, "-", "graph_settings"], [23, 5, 1, "", "random_split"], [2151, 0, 0, "-", "sampler"]], "torch.utils.data._utils.collate": [[23, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[23, 0, 0, "-", "dataframe"], [2151, 0, 0, "-", "datapipe"], [2151, 0, 0, "-", "gen_pyi"], [23, 0, 0, "-", "iter"], [23, 0, 0, "-", "map"], [23, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.dataframe": [[2151, 0, 0, "-", "dataframe_wrapper"], [2151, 0, 0, "-", "dataframes"], [2151, 0, 0, "-", "datapipes"], [2151, 0, 0, "-", "structures"]], "torch.utils.data.datapipes.iter": [[2151, 0, 0, "-", "callable"], [2151, 0, 0, "-", "combinatorics"], [2151, 0, 0, "-", "combining"], [2151, 0, 0, "-", "filelister"], [2151, 0, 0, "-", "fileopener"], [2151, 0, 0, "-", "grouping"], [2151, 0, 0, "-", "routeddecoder"], [2151, 0, 0, "-", "selecting"], [2151, 0, 0, "-", "sharding"], [2151, 0, 0, "-", "streamreader"], [2151, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.map": [[2151, 0, 0, "-", "callable"], [2151, 0, 0, "-", "combinatorics"], [2151, 0, 0, "-", "combining"], [2151, 0, 0, "-", "grouping"], [2151, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.utils": [[2151, 0, 0, "-", "common"], [2151, 0, 0, "-", "decoder"], [2151, 0, 0, "-", "snapshot"]], "torch.utils.data.distributed": [[23, 1, 1, "", "DistributedSampler"]], "torch.utils.deterministic": [[27, 2, 1, "", "fill_uninitialized_memory"]], "torch.utils.dlpack": [[36, 5, 1, "", "from_dlpack"], [36, 5, 1, "", "to_dlpack"]], "torch.utils.hipify": [[2151, 0, 0, "-", "constants"], [2151, 0, 0, "-", "cuda_to_hip_mappings"], [2151, 0, 0, "-", "hipify_python"], [2151, 0, 0, "-", "version"]], "torch.utils.jit": [[2151, 0, 0, "-", "log_extract"]], "torch.utils.mobile_optimizer": [[2057, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[2058, 5, 1, "", "load_url"]], "torch.utils.module_tracker": [[2059, 1, 1, "", "ModuleTracker"]], "torch.utils.tensorboard": [[2151, 0, 0, "-", "summary"], [2151, 0, 0, "-", "writer"]], "torch.utils.tensorboard.writer": [[2119, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[2119, 3, 1, "", "__init__"], [2119, 3, 1, "", "add_audio"], [2119, 3, 1, "", "add_custom_scalars"], [2119, 3, 1, "", "add_embedding"], [2119, 3, 1, "", "add_figure"], [2119, 3, 1, "", "add_graph"], [2119, 3, 1, "", "add_histogram"], [2119, 3, 1, "", "add_hparams"], [2119, 3, 1, "", "add_image"], [2119, 3, 1, "", "add_images"], [2119, 3, 1, "", "add_mesh"], [2119, 3, 1, "", "add_pr_curve"], [2119, 3, 1, "", "add_scalar"], [2119, 3, 1, "", "add_scalars"], [2119, 3, 1, "", "add_text"], [2119, 3, 1, "", "add_video"], [2119, 3, 1, "", "close"], [2119, 3, 1, "", "flush"]], "torch.xpu": [[2012, 1, 1, "", "Event"], [2013, 1, 1, "", "Stream"], [2014, 1, 1, "", "StreamContext"], [2015, 5, 1, "", "current_device"], [2016, 5, 1, "", "current_stream"], [2017, 1, 1, "", "device"], [2018, 5, 1, "", "device_count"], [2019, 1, 1, "", "device_of"], [2020, 5, 1, "", "empty_cache"], [2021, 5, 1, "", "get_device_capability"], [2022, 5, 1, "", "get_device_name"], [2023, 5, 1, "", "get_device_properties"], [2024, 5, 1, "", "get_rng_state"], [2025, 5, 1, "", "get_rng_state_all"], [2026, 5, 1, "", "init"], [2027, 5, 1, "", "initial_seed"], [2028, 5, 1, "", "is_available"], [2029, 5, 1, "", "is_initialized"], [2030, 5, 1, "", "manual_seed"], [2031, 5, 1, "", "manual_seed_all"], [2152, 0, 0, "-", "random"], [2032, 5, 1, "", "seed"], [2033, 5, 1, "", "seed_all"], [2034, 5, 1, "", "set_device"], [2035, 5, 1, "", "set_rng_state"], [2036, 5, 1, "", "set_rng_state_all"], [2037, 5, 1, "", "set_stream"], [2038, 5, 1, "", "stream"], [2152, 0, 0, "-", "streams"], [2039, 5, 1, "", "synchronize"]], "torch.xpu.Event": [[2012, 3, 1, "", "elapsed_time"], [2012, 3, 1, "", "query"], [2012, 3, 1, "", "record"], [2012, 3, 1, "", "synchronize"], [2012, 3, 1, "", "wait"]], "torch.xpu.Stream": [[2013, 3, 1, "", "query"], [2013, 3, 1, "", "record_event"], [2013, 3, 1, "", "synchronize"], [2013, 3, 1, "", "wait_event"], [2013, 3, 1, "", "wait_stream"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 23, 33, 2044, 2074, 2082], "mix": [0, 2044, 2074], "precis": [0, 2074, 2078, 2092], "packag": [0, 1, 15, 28, 2064, 2095, 2102], "torchamp": [0, 2078, 2085], "autocast": [0, 2074], "gradient": [0, 1, 61, 1243, 2074, 2075, 2082, 2123, 2136], "scale": [0, 2074, 2088], "op": [0, 12, 86, 2049, 2051, 2074, 2099, 2123], "refer": [0, 12, 18, 19, 33, 52, 53, 57, 64, 2044, 2046, 2047, 2048, 2060, 2066, 2087, 2097, 2102, 2103, 2104, 2107, 2111, 2120, 2128, 2147], "elig": 0, "cuda": [0, 2, 10, 17, 18, 20, 213, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 2064, 2078, 2083, 2087, 2091, 2093, 2095, 2130, 2136, 2143, 2147], "specif": [0, 23, 53, 2114], "behavior": [0, 19, 23, 2075, 2086], "can": [0, 2075, 2083, 2136, 2142], "float16": 0, "float32": 0, "promot": [0, 7, 88], "widest": 0, "input": [0, 19, 52, 2065, 2074, 2086, 2130], "type": [0, 23, 53, 88, 607, 2046, 2047, 2081, 2099, 2102, 2120, 2150], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1627], "over": [0, 8, 2046], "binary_cross_entropi": [0, 1626], "xpu": [0, 627, 2015, 2016, 2018, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2152], "experiment": [0, 65, 1189, 1190, 1191, 1192, 1193, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 2052], "cpu": [0, 2, 10, 16, 210, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 2075, 2077, 2091, 2104, 2129], "bfloat16": [0, 159], "differenti": [1, 2075], "autograd": [1, 10, 11, 15, 60, 900, 901, 902, 903, 904, 907, 908, 909, 910, 912, 913, 914, 915, 918, 919, 920, 921, 922, 923, 924, 925, 929, 930, 931, 932, 933, 934, 935, 936, 937, 940, 941, 942, 943, 944, 945, 2066, 2074, 2075, 2081, 2082, 2099, 2109, 2110], "forward": [1, 901, 2081, 2110], "mode": [1, 48, 58, 418, 1395, 2075, 2081, 2086, 2099, 2104, 2110], "function": [1, 28, 35, 54, 56, 57, 59, 61, 64, 84, 87, 900, 901, 902, 903, 912, 913, 914, 915, 918, 919, 920, 921, 922, 923, 924, 1177, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 2044, 2045, 2046, 2047, 2049, 2052, 2054, 2065, 2067, 2068, 2072, 2074, 2075, 2082, 2086, 2094, 2099, 2107, 2114, 2115, 2136, 2146], "higher": 1, "level": [1, 10, 86, 2051, 2107], "api": [1, 10, 12, 15, 18, 19, 31, 33, 41, 52, 57, 60, 64, 2043, 2044, 2047, 2051, 2060, 2066, 2077, 2078, 2081, 2087, 2088, 2097, 2099, 2102, 2103, 2104, 2107, 2128, 2132, 2133, 2135, 2136, 2137, 2147], "local": [1, 2047, 2075, 2123, 2142, 2144], "disabl": [1, 23, 989, 2044, 2075, 2123, 2136, 2137], "comput": [1, 61, 2075, 2092, 2110, 2123, 2136], "default": [1, 23, 24, 2046, 2075, 2078, 2086, 2106, 2133], "layout": [1, 2117], "manual": [1, 33], "In": [1, 8, 2075, 2076, 2123], "place": [1, 60, 2065, 2075, 2076, 2099, 2123], "oper": [1, 10, 19, 24, 28, 52, 60, 80, 89, 2046, 2047, 2052, 2054, 2065, 2066, 2067, 2075, 2079, 2081, 2088, 2095, 2099, 2100, 2104, 2114, 2120, 2123, 2135, 2143], "tensor": [1, 11, 15, 34, 52, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 1973, 2045, 2049, 2052, 2055, 2064, 2065, 2066, 2067, 2075, 2081, 2094, 2099, 2104, 2107, 2114, 2117, 2118, 2120, 2123, 2135], "correct": [1, 64, 2075], "check": [1, 37, 64, 2044, 2075, 2085, 2087, 2142], "variabl": [1, 20, 25, 28, 48, 2044, 2046, 2047, 2056, 2062, 2122, 2139, 2148, 2149], "deprec": 1, "context": [1, 19, 29, 45, 70, 2110], "method": [1, 40, 41, 44, 50, 2045, 2046, 2049, 2099, 2107, 2114], "mixin": 1, "custom": [1, 39, 50, 64, 2047, 2051, 2074, 2078, 2079, 2082, 2089, 2099, 2101, 2102, 2104, 2131], "util": [1, 3, 4, 5, 10, 14, 23, 27, 28, 33, 36, 57, 59, 1097, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1996, 1997, 1998, 1999, 2000, 2050, 2057, 2058, 2059, 2068, 2069, 2071, 2094, 2107, 2119, 2123, 2125, 2144, 2151], "numer": [1, 2086, 2092, 2105, 2107], "profil": [1, 28, 940, 941, 942, 943, 944, 945, 1405, 1406, 1407, 2061, 2088, 2089, 2103, 2139, 2143, 2145], "debug": [1, 24, 25, 28, 50, 64, 86, 2044, 2104, 2105, 2131, 2136, 2145], "anomali": 1, "detect": 1, "graph": [1, 17, 52, 53, 64, 81, 932, 933, 934, 935, 936, 937, 1053, 2044, 2075, 2078, 2104, 2130, 2133, 2136, 2143, 2144, 2145], "backend": [2, 28, 47, 48, 2044, 2087, 2090, 2098, 2104, 2106, 2109, 2126, 2129, 2131, 2145], "cudnn": 2, "mha": 2, "mp": [2, 10, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 2061, 2062, 2090], "mkl": 2, "mkldnn": [2, 10], "nnpack": 2, "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 2093, 2139], "bottleneck": 4, "checkpoint": [5, 24, 30], "pytorch": [6, 7, 8, 9, 10, 15, 26, 28, 52, 60, 2043, 2044, 2045, 2049, 2075, 2078, 2079, 2081, 2085, 2093, 2094, 2099, 2104, 2107, 2126, 2130, 2141, 2142, 2145, 2149], "govern": [6, 9, 10], "build": [6, 7, 10, 33, 2077, 2085, 2088, 2089, 2095], "ci": [6, 10], "how": [6, 24, 33, 58, 2042, 2075, 2081, 2101, 2102, 2134, 2135, 2136, 2142], "add": [6, 9, 101, 690], "new": [6, 7, 9, 2051, 2081], "maintain": [6, 9, 10], "contribut": [7, 2096], "guid": 7, "process": [7, 9, 23, 45, 2074], "get": [7, 31, 2085, 2099, 2126, 2136, 2138], "start": [7, 31, 45, 1406, 2085, 2126, 2138, 2145], "propos": 7, "featur": [7, 2088, 2089, 2136], "report": [7, 2083], "issu": [7, 2044, 2097, 2143], "implement": [7, 33, 37, 47, 50, 2042, 2080, 2086, 2099, 2105, 2107, 2111, 2133, 2135], "fix": [7, 48, 58, 265, 1157], "bug": 7, "ad": [7, 2081, 2099, 2133], "tutori": [7, 10, 2102, 2109], "improv": [7, 2089], "document": [7, 31, 2043], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 64, 2044, 2078, 2085, 2102, 2136], "readabl": 7, "test": [7, 2047, 2051, 2081, 2102, 2121, 2142], "case": [7, 2044], "make": [7, 9, 2130, 2133], "codebas": 7, "more": [7, 52, 56, 2109, 2126], "robust": 7, "triag": 7, "about": [7, 2075, 2109, 2135], "sourc": [7, 2085, 2093, 2095, 2102], "develop": [7, 52, 2043, 2096, 2126], "common": [7, 28, 64, 2088, 2104], "mistak": 7, "To": 7, "avoid": [7, 2091, 2093, 2099, 2102], "frequent": [7, 2044, 2083, 2099, 2104, 2136], "ask": [7, 2044, 2083, 2099, 2104, 2136], "question": [7, 2044, 2083, 2099, 2104, 2136], "On": [7, 24, 2046], "python": [7, 8, 28, 52, 60, 67, 68, 69, 70, 71, 72, 73, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2081, 2093, 2099, 2133], "doc": [7, 10, 2087], "c": [7, 10, 15, 2051, 2075, 2087, 2094, 2099, 2127], "overview": [7, 18, 19, 52, 64, 2096, 2097, 2102, 2103, 2114, 2131, 2134], "design": [8, 2047, 2080, 2109, 2110, 2111], "philosophi": 8, "principl": [8, 9], "1": [8, 33, 48, 58, 2044, 2082, 2133], "usabl": 8, "perform": [8, 10, 2089, 2094, 2135, 2142, 2143, 2145], "2": [8, 33, 58, 2044, 2078, 2082, 2083, 2085, 2104, 2107, 2141, 2142, 2145], "simpl": [8, 2046, 2047, 2089, 2097, 2110], "easi": 8, "3": [8, 48, 58], "first": [8, 2102], "best": [8, 2078, 2091, 2104, 2129], "class": [8, 40, 64, 2044, 2046, 2047, 2049, 2099, 2101, 2102, 2120], "languag": [8, 2043, 2044, 2046, 2047, 2048], "interoper": 8, "mechan": [9, 2072, 2075, 2086], "summari": [9, 2104], "modul": [9, 10, 57, 59, 64, 1548, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 2044, 2045, 2046, 2047, 2049, 2068, 2075, 2081, 2089, 2094, 2102, 2104, 2141], "core": [9, 10, 2140], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 2047], "confirm": 9, "remov": [9, 1777, 2065], "The": [9, 64, 2047, 2075, 2132], "re": [9, 2102], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 48, 58, 2085, 2136], "controversi": 9, "gener": [9, 17, 29, 60, 64, 91, 2076, 2082, 2093, 2104, 2105, 2123, 2133, 2134, 2147, 2152], "polici": [9, 2132], "faq": [9, 2095], "respons": 10, "nn": [10, 57, 59, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 2046, 2047, 2068, 2069, 2070, 2071, 2072, 2073, 2075, 2078, 2081, 2094, 2107, 2114, 2141], "optim": [10, 11, 32, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 2074, 2075, 2078, 2101, 2109, 2110, 2123], "compil": [10, 59, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 2078, 2085, 2126, 2127, 2128, 2136, 2137, 2143, 2145], "jit": [10, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 2044, 2047, 2050], "torchscript": [10, 15, 2044, 2045, 2046, 2047, 2049, 2077, 2088, 2096, 2099, 2100, 2102], "fx": [10, 64, 65, 81, 82, 83, 85, 88, 1189, 1190, 1191, 1192, 1193, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 2089, 2104, 2107, 2125], "torchdynamo": [10, 2080, 2096, 2097, 2098, 2130, 2137, 2145], "distribut": [10, 28, 30, 31, 32, 33, 34, 35, 48, 2068, 2072, 2080, 2087, 2089, 2109, 2110, 2136], "rng": 10, "multiprocess": [10, 45, 2064, 2078, 2091, 2095], "dataload": [10, 2093], "linear": [10, 11, 737, 738, 761, 769, 786, 1184, 1535, 1671, 2068, 2072, 2092, 2114], "algebra": [10, 11, 2092, 2114], "linalg": [10, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 2052, 2092], "spars": [10, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 2068, 2072, 2114], "nestedtensor": 10, "nest": [10, 2067], "maskedtensor": [10, 2054], "mask": [10, 2054], "fast": [10, 54, 2086, 2110], "fourier": [10, 54], "transform": [10, 35, 54, 56, 57, 59, 61, 64, 1592, 2068, 2081, 2089, 2136, 2144], "fft": [10, 54, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156], "inductor": 10, "gpu": [10, 28, 2068, 2072, 2074, 2083, 2085, 2139], "triton": [10, 2139], "nvfuser": 10, "amd": [10, 2092], "rocm": [10, 19, 2087], "hip": [10, 2087], "tool": [10, 17, 2105, 2114], "c10": 10, "dispatch": 10, "onnx": [10, 81, 82, 89, 2096, 2097, 2098, 2099, 2100], "export": [10, 52, 53, 2096, 2097, 2099, 2102, 2104, 2107, 2123, 2127, 2136], "mobil": 10, "edg": [10, 2044, 2102], "model": [10, 15, 33, 52, 73, 2042, 2074, 2083, 2088, 2097, 2101, 2102, 2104, 2107, 2127, 2132, 2138, 2139], "compress": [10, 2114], "window": [10, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2095, 2112], "appl": 10, "m1": 10, "powerpc": 10, "aarch64": 10, "librari": [10, 2043, 2051, 2093], "xla": 10, "torchserv": 10, "torchvis": [10, 58], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 994, 2075, 2086], "number": [11, 17, 48, 2075, 2077, 2083, 2093, 2123, 2152], "creat": [11, 2044, 2051, 2066], "transit": [11, 48], "from": [11, 48, 59, 64, 2042, 2051, 2065, 2085, 2095, 2099, 2102], "old": 11, "represent": [11, 81], "access": [11, 2046, 2102, 2145], "real": [11, 487, 1875, 2086], "imag": [11, 315, 1260], "angl": [11, 121, 703], "ab": [11, 93, 686], "serial": [11, 52, 2094, 2123], "control": [12, 38, 52, 60, 64, 71, 2093, 2123, 2137], "flow": [12, 52, 60, 64, 71, 2104, 2123], "cond": [12, 74, 997, 1321], "exampl": [12, 33, 42, 52, 64, 2074, 2080, 2081, 2082, 2085, 2097, 2099, 2110, 2131], "invari": 12, "higher_ord": 12, "__config__": 13, "cpp_extens": 14, "extend": [15, 37, 2051, 2081, 2082, 2145], "extens": [15, 17, 2088, 2095], "author": [15, 64], "stream": [16, 17, 18, 92, 1006, 1013, 1023, 1094, 1416, 1431, 2013, 2038, 2063, 2078, 2152], "event": [16, 17, 39, 41, 90, 1018, 1402, 1415, 2012, 2061, 2063, 2152], "random": [17, 23, 60, 2083, 2093, 2108, 2123, 2152], "commun": [17, 24, 28, 2043, 2084], "collect": [17, 28], "beta": [17, 35], "memori": [17, 23, 2078, 2083, 2087, 2089, 2093, 2147], "manag": [17, 29, 70, 2064, 2078, 2087, 2102, 2144], "nvidia": [17, 2092], "nvtx": [17, 1078, 1079, 1080, 1081], "jiter": [17, 1061, 1062], "tunableop": [17, 19], "sanit": [17, 18], "prototyp": [17, 2104, 2105], "usag": [18, 31, 48, 2078, 2082, 2088, 2089, 2095, 2141, 2147], "enabl": [19, 2087], "tune": [19, 2077], "separ": [19, 2081], "file": [19, 28, 2064, 2094, 2102], "output": [19, 53, 2086, 2133], "A": [19, 64, 2089, 2097, 2133], "note": [19, 48, 81, 2043, 2047, 2078, 2084, 2104, 2109], "current": [19, 2066], "tunabl": 19, "tunablegemm": 19, "environ": [20, 25, 28, 48, 2056, 2062, 2085, 2088, 2102, 2122, 2139, 2148, 2149], "data": [23, 52, 60, 72, 2047, 2080, 2083, 2099, 2105, 2120], "dataset": 23, "map": [23, 78, 2087], "style": 23, "iter": [23, 2046], "load": [23, 1297, 1361, 2042, 2094, 2102, 2104], "order": [23, 2075], "sampler": 23, "batch": [23, 58, 2092, 2101], "non": [23, 52, 64, 2068, 2072, 2075, 2078, 2092, 2102, 2104], "work": [23, 57, 2055, 2074, 2083, 2114, 2135, 2136, 2143], "collate_fn": 23, "singl": [23, 48, 2074], "multi": [23, 28, 48, 2068, 2072], "platform": 23, "pin": [23, 2078], "ddp": 24, "hook": [24, 2075, 2089, 2141], "us": [24, 28, 33, 64, 2046, 2075, 2078, 2081, 2086, 2097, 2099, 2101, 2102, 2104, 2114, 2136, 2138, 2143, 2145, 2147], "what": [24, 33, 53, 56, 58, 61, 2054, 2075, 2102, 2134, 2136, 2142, 2143], "doe": [24, 33, 2075, 2135, 2136], "powersgd": 24, "state": [24, 2089, 2102, 2147], "acknowledg": 24, "deploi": 26, "ha": 26, "been": 26, "move": 26, "multipi": 26, "determinist": 27, "come": [28, 2075], "which": [28, 2075, 2136], "choos": 28, "network": [28, 2078, 2083, 2089], "interfac": [28, 1295, 2087], "other": [28, 2068, 2093, 2102, 2114, 2123, 2135], "nccl": [28, 2078, 2130], "basic": [28, 2047, 2066, 2071, 2082, 2109, 2120, 2143], "initi": [28, 2068, 2089, 2120], "tcp": 28, "share": [28, 2064, 2078, 2102, 2111], "system": [28, 2047, 2064, 2082], "post": [28, 2104], "shutdown": 28, "reiniti": 28, "kei": [28, 81, 2095], "valu": [28, 76, 618, 2046, 2047, 2092, 2106, 2111], "store": [28, 47], "group": 28, "devicemesh": 28, "point": [28, 2088], "synchron": [28, 1014, 1095, 1412, 1432, 2039], "asynchron": [28, 2047, 2078, 2091], "third": 28, "parti": 28, "launch": [28, 48, 2143], "spawn": [28, 2064], "applic": 28, "breakpoint": 28, "monitor": [28, 2060], "barrier": 28, "torch_distributed_debug": 28, "log": [28, 33, 50, 373, 1363, 2088], "join": [29, 2123], "elast": [31, 37, 48], "advanc": [31, 2089], "plugin": 31, "pipelin": 33, "parallel": [33, 34, 1721, 2078, 2080, 2083, 2123], "why": [33, 56, 61, 2078, 2086, 2102, 2114, 2136], "i": [33, 53, 61, 2054, 2075, 2102, 2134, 2135, 2136, 2142], "step": [33, 1821, 2101, 2138], "pipelinestag": 33, "pipelineschedul": 33, "execut": [33, 2047, 2075, 2078, 2102, 2136], "option": [33, 58, 2046, 2077, 2095, 2101], "split": [33, 551, 1946], "hug": 33, "face": 33, "technic": 33, "deep": [33, 52, 2126, 2133], "dive": [33, 52, 2126, 2133], "your": [33, 2102], "own": [33, 2075], "schedul": [33, 2101], "microbatch": 33, "stage": 33, "probabl": 35, "score": 35, "pathwis": 35, "deriv": [35, 2075], "exponentialfamili": 35, "bernoulli": [35, 157, 953], "binomi": 35, "categor": 35, "cauchi": 35, "chi2": 35, "continuousbernoulli": 35, "dirichlet": 35, "exponenti": [35, 1914], "fishersnedecor": 35, "gamma": 35, "geometr": 35, "gumbel": 35, "halfcauchi": 35, "halfnorm": 35, "independ": 35, "inversegamma": 35, "kumaraswami": 35, "lkjcholeski": 35, "laplac": 35, "lognorm": 35, "lowrankmultivariatenorm": 35, "mixturesamefamili": 35, "multinomi": [35, 425, 1434], "multivariatenorm": 35, "negativebinomi": 35, "normal": [35, 1691, 1795, 2068, 2101], "onehotcategor": 35, "pareto": 35, "poisson": [35, 1850], "relaxedbernoulli": 35, "logitrelaxedbernoulli": 35, "relaxedonehotcategor": 35, "studentt": 35, "transformeddistribut": 35, "uniform": 35, "vonmis": 35, "weibul": 35, "wishart": 35, "kl": 35, "diverg": [35, 2049], "constraint": [35, 2078], "registri": [35, 47, 89], "dlpack": 36, "agent": 37, "server": [37, 47, 50], "concept": 37, "watchdog": 37, "health": 37, "plane": 38, "launcher": 39, "rendezv": [39, 47, 48], "handler": [39, 44, 47, 2083], "metric": [39, 44], "error": [40, 2083, 2095, 2104, 2105, 2145], "propag": [40, 2066], "object": [41, 73, 2102], "torchelast": 43, "kubernet": 43, "multipl": [45, 2074, 2078, 2081], "worker": [45, 48, 2083], "quickstart": 46, "dataclass": 47, "except": [47, 2083], "dynam": [47, 52, 60, 64, 75, 76, 2104, 2107, 2130, 2132, 2135], "c10d": 47, "etcd": 47, "legaci": 47, "torchrun": 48, "node": [48, 53, 82, 85, 88, 932, 933, 934, 935, 936, 2075], "stack": [48, 1951, 2104], "fault": 48, "toler": 48, "size": [48, 541, 2067, 2084, 2113], "failur": 48, "min": [48, 415, 1392], "max": [48, 411, 1387], "4": [48, 58, 2085], "up": [48, 2085, 2136], "membership": [48, 2047], "definit": [48, 2047], "deploy": [48, 2088], "import": [48, 2042, 2095, 2102, 2135], "notic": [48, 2042], "subprocess": [49, 2064], "handl": [49, 2136], "retriev": 49, "subprocesshandl": 49, "expir": 50, "timer": 50, "client": 50, "write": [50, 64, 2075, 2099, 2144], "info": [50, 2150], "train": [51, 2074, 2085, 2089, 2091, 2104, 2136], "script": [51, 1301, 2044, 2095, 2099], "exist": 52, "framework": [52, 2102, 2109], "an": [52, 2042, 2099, 2101, 2102], "strict": 52, "express": [52, 2046, 2047], "special": [52, 2047, 2075, 2115, 2133], "shape": [52, 60, 75, 527, 2099, 2130, 2132, 2133, 2135], "primit": [52, 2047], "contain": [52, 2068], "limit": [52, 60, 64, 2042, 2082, 2099, 2130, 2137, 2141], "break": [52, 2046, 2047, 2133, 2136, 2143, 2145], "depend": [52, 60, 2097, 2102, 2110], "miss": 52, "fake": [52, 2135], "meta": [52, 2047, 2055], "abstract": 52, "kernel": [52, 948, 2087, 2104, 2139, 2143], "read": [52, 56, 2099, 2126, 2142], "addit": [52, 81], "link": 52, "user": [52, 2102, 2111, 2126], "ir": [53, 2140, 2144], "assumpt": [53, 2111], "exportedprogram": 53, "call_funct": 53, "metadata": [53, 932, 2088], "placehold": 53, "get_attr": 53, "symint": [53, 2132], "faketensor": 53, "pytre": 53, "abl": 53, "helper": 54, "fullyshardeddataparallel": 55, "func": [56, 57, 59, 61, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 2081, 2082, 2136], "ar": [56, 61, 2042, 2075, 2102, 2133, 2136], "compos": [56, 61, 2131], "patch": [58, 2102], "norm": [58, 457, 1346, 1794], "": [58, 2102, 2136, 2142], "happen": 58, "batchnorm": 58, "paramet": [58, 1740, 2046, 2101], "functorch": [58, 59], "eval": [58, 2075], "migrat": [59, 2044], "make_funct": 59, "combine_state_for_ensembl": 59, "ux": 60, "vmap": [60, 61, 903, 1188, 2007, 2081, 2082, 2136], "mutat": [60, 79, 2123, 2130], "arbitrari": [60, 2102], "structur": [60, 72, 2047, 2114], "out": [60, 2065, 2083], "item": [60, 356], "nonzero": [60, 456, 1793], "friend": 60, "whirlwind": 61, "tour": 61, "grad": [61, 294, 925, 1178, 2075, 2078, 2136], "auto": 61, "vector": 61, "vjp": [61, 924, 1187], "jacobian": [61, 921], "product": [61, 2052, 2136], "jvp": [61, 902, 922, 1183, 2082], "jacrev": [61, 1182], "jacfwd": [61, 1181], "hessian": [61, 919, 1180], "__future__": 62, "futur": 63, "quick": 64, "primer": 64, "manipul": [64, 2066], "direct": 64, "subgraph": [64, 2144], "rewrit": [64, 2144], "With": [64, 2049], "replace_pattern": 64, "proxi": 64, "retrac": 64, "interpret": [64, 2044], "pattern": [64, 2046, 2099, 2102], "introduct": [64, 2054, 2067, 2104, 2133], "pitfal": [64, 2099], "pdb": 64, "print": [64, 2046, 2047], "to_fold": 64, "graphmodul": 64, "avail": [64, 2085], "debugg": [64, 2107], "symbol": [64, 84, 87, 2099, 2104, 2123, 2133], "trace": [64, 595, 1305, 1978, 2044, 2099, 2103, 2104, 2136, 2137, 2143], "static": [64, 2099, 2104, 2133], "tracer": [64, 2044], "leaf": 64, "miscellanea": 64, "symbolic_shap": [65, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229], "proxy_tensor": [65, 1189, 1190, 1191, 1192, 1193], "exportdb": 66, "tag": [66, 2123], "support": [66, 2045, 2047, 2054, 2065, 2066, 2067, 2082, 2099, 2100, 2104, 2114, 2130, 2136, 2141], "assume_constant_result": [66, 77, 986], "autograd_funct": 66, "class_method": 66, "cond_branch_class_method": [66, 74, 75], "cond_branch_nested_funct": [66, 74, 75], "cond_branch_nonlocal_vari": [66, 74, 75], "cond_closed_over_vari": [66, 69, 74], "cond_operand": [66, 74, 75], "cond_pred": [66, 74, 75], "constrain_as_size_exampl": [66, 76, 77], "constrain_as_value_exampl": [66, 76, 77], "decor": 66, "dictionari": [66, 72, 2047], "dynamic_shape_assert": [66, 67], "dynamic_shape_constructor": [66, 75], "dynamic_shape_if_guard": [66, 71, 75], "dynamic_shape_map": [66, 75, 78], "dynamic_shape_sl": [66, 75], "dynamic_shape_view": [66, 75], "fn_with_kwarg": [66, 72], "list_contain": [66, 67, 72, 75], "list_unpack": [66, 71, 72], "nested_funct": [66, 69], "null_context_manag": [66, 70], "pytree_flatten": 66, "scalar_output": [66, 75], "specialized_attribut": 66, "static_for_loop": [66, 71], "static_if": [66, 71], "tensor_setattr": [66, 68], "type_reflection_method": [66, 68], "user_input_mut": [66, 79], "Not": [66, 2049], "yet": 66, "dynamic_shape_round": [66, 68, 75], "model_attr_mut": [66, 73], "optional_input": [66, 73], "unsupported_oper": [66, 80], "assert": [67, 2047, 2087], "builtin": [68, 2045], "closur": [69, 2101], "escap": [77, 2136], "hatch": [77, 2136], "fxe0007": 81, "fxe0008": 82, "fxe0010": 83, "pass": [83, 2047, 2078, 2091, 2104, 2110, 2144], "fxe0011": 84, "call": [84, 2046, 2047, 2081, 2082, 2136], "fxe0012": 85, "unsupport": [85, 2046, 2047, 2049, 2099, 2100], "analysi": 85, "fxe0013": 86, "fxe0014": 87, "find": [87, 89, 2102, 2143], "opschema": 87, "match": [87, 2046, 2066], "fxe0015": 88, "insert": 88, "fxe0016": 89, "overload": 89, "abs_": 94, "absolut": [95, 687], "absolute_": 96, "aco": [97, 688], "acos_": 98, "acosh": [99, 689], "acosh_": 100, "add_": 102, "addbmm": [103, 691], "addbmm_": 104, "addcdiv": [105, 692], "addcdiv_": 106, "addcmul": [107, 693], "addcmul_": 108, "addmm": [109, 694, 1931], "addmm_": 110, "addmv": [111, 695], "addmv_": 112, "addr": [113, 696], "addr_": 114, "adjoint": [115, 697], "all": [116, 698, 2081, 2099, 2101], "allclos": [117, 699], "amax": [118, 700], "amin": [119, 701], "aminmax": [120, 702], "ani": [122, 704, 2047, 2136, 2142], "apply_": 123, "arcco": [124, 877], "arccos_": 125, "arccosh": [126, 878], "arccosh_": 127, "arcsin": [128, 879], "arcsin_": 129, "arcsinh": [130, 880], "arcsinh_": 131, "arctan": [132, 881], "arctan2": [133, 882], "arctan2_": 134, "arctan_": 135, "arctanh": [136, 883], "arctanh_": 137, "argmax": [138, 885], "argmin": [139, 886], "argsort": [140, 887], "argwher": [141, 888], "as_strid": [142, 889], "as_subclass": 143, "asin": [144, 892], "asin_": 145, "asinh": [146, 893], "asinh_": 147, "atan": [148, 894], "atan2": [149, 895], "atan2_": 150, "atan_": 151, "atanh": [152, 896], "atanh_": 153, "backward": [154, 900, 904, 2075, 2076, 2078, 2086, 2110], "baddbmm": [155, 951], "baddbmm_": 156, "bernoulli_": 158, "bincount": [160, 954], "bitwise_and": [161, 955], "bitwise_and_": 162, "bitwise_left_shift": [163, 956], "bitwise_left_shift_": 164, "bitwise_not": [165, 957], "bitwise_not_": 166, "bitwise_or": [167, 958], "bitwise_or_": 168, "bitwise_right_shift": [169, 959], "bitwise_right_shift_": 170, "bitwise_xor": [171, 960], "bitwise_xor_": 172, "bmm": [173, 963], "bool": 174, "broadcast_to": [175, 966], "byte": 176, "cauchy_": 177, "ccol_indic": 178, "cdoubl": 179, "ceil": [180, 972], "ceil_": 181, "cfloat": 182, "chalf": 183, "char": 184, "choleski": [185, 974, 1319], "cholesky_invers": [186, 975], "cholesky_solv": [187, 976], "chunk": [188, 977], "clamp": [189, 776, 978], "clamp_": 190, "clip": [191, 979, 2074], "clip_": 192, "clone": [193, 980], "coalesc": 194, "col_indic": 195, "conj": [196, 998], "conj_phys": [197, 999], "conj_physical_": 198, "contigu": 199, "copy_": 200, "copysign": [201, 1000], "copysign_": 202, "corrcoef": [203, 1001], "co": [204, 1002], "cos_": 205, "cosh": [206, 1003], "cosh_": 207, "count_nonzero": [208, 1004], "cov": [209, 1005], "cross": [211, 1015, 1322, 2075], "crow_indic": 212, "cummax": [214, 1098], "cummin": [215, 1099], "cumprod": [216, 1100], "cumprod_": 217, "cumsum": [218, 1101], "cumsum_": 219, "data_ptr": 220, "deg2rad": [221, 1103], "dense_dim": 222, "dequant": [223, 1104, 2104], "det": [224, 1105, 1323], "detach": 225, "detach_": 226, "devic": [227, 1040, 1421, 2017, 2055, 2078, 2092, 2117], "diag": [228, 1106], "diag_emb": [229, 1107], "diagflat": [230, 1108], "diagon": [231, 1109, 1324], "diagonal_scatt": [232, 1110], "diff": [233, 1111], "digamma": [234, 1112], "digamma_": 235, "dim": [236, 2065], "dim_ord": 237, "dist": [238, 1113], "div": [239, 1114, 2094], "div_": 240, "divid": [241, 1115], "divide_": 242, "dot": [243, 1116], "doubl": 244, "dsplit": [245, 1117], "element_s": 246, "eq": [247, 1124], "eq_": 248, "equal": [249, 1125], "erf": [250, 1126], "erf_": 251, "erfc": [252, 1127], "erfc_": 253, "erfinv": [254, 1128], "erfinv_": 255, "exp": [256, 1129], "exp_": 257, "expand": 258, "expand_a": 259, "expm1": [260, 1131], "expm1_": 261, "exponential_": 262, "fill_": 263, "fill_diagonal_": 264, "fix_": 266, "flatten": [267, 1158, 1493], "flip": [268, 1159], "fliplr": [269, 1160], "flipud": [270, 1161], "float": [271, 2094], "float_pow": [272, 1162], "float_power_": 273, "floor": [274, 1163], "floor_": 275, "floor_divid": [276, 1164], "floor_divide_": 277, "fmax": [278, 1165], "fmin": [279, 1166], "fmod": [280, 1167], "fmod_": 281, "frac": [282, 1168], "frac_": 283, "frexp": [284, 1169], "gather": [285, 1032, 1230], "gcd": [286, 1231], "gcd_": 287, "ge": [288, 1232], "ge_": 289, "geometric_": 290, "geqrf": [291, 1233], "ger": [292, 1234], "get_devic": 293, "greater": [295, 1244], "greater_": 296, "greater_equ": [297, 1245], "greater_equal_": 298, "gt": [299, 1246], "gt_": 300, "half": 301, "hardshrink": [302, 1503, 1657], "heavisid": [303, 1249], "histc": [304, 1250], "histogram": [305, 1251], "hsplit": [306, 1253], "hypot": [307, 1256], "hypot_": 308, "i0": [309, 1257], "i0_": 310, "igamma": [311, 1258], "igamma_": 312, "igammac": [313, 1259], "igammac_": 314, "index_add": [316, 1261], "index_add_": 317, "index_copi": [318, 1262], "index_copy_": 319, "index_fil": 320, "index_fill_": 321, "index_put": 322, "index_put_": 323, "index_reduc": [324, 1263], "index_reduce_": 325, "index_select": [326, 1264], "indic": [327, 2043], "inner": [328, 1266], "int": [329, 2133], "int_repr": 330, "invers": [331, 1267, 2052], "is_coalesc": 332, "is_complex": [333, 1268], "is_conj": [334, 1269], "is_contigu": 335, "is_cuda": 336, "is_floating_point": [337, 1271], "is_infer": 338, "is_leaf": 339, "is_meta": 340, "is_pin": 341, "is_quant": 342, "is_set_to": 343, "is_shar": 344, "is_sign": 345, "is_spars": 346, "is_sparse_csr": 347, "isclos": [348, 1278], "isfinit": [349, 1279], "isinf": [350, 1281], "isnan": [351, 1282], "isneginf": [352, 1283], "isposinf": [353, 1284], "isreal": [354, 1285], "istft": [355, 1286], "items": 357, "kthvalu": [358, 1311], "lcm": [359, 1312], "lcm_": 360, "ldexp": [361, 1313], "ldexp_": 362, "le": [363, 1314], "le_": 364, "lerp": [365, 1315], "lerp_": 366, "less": [367, 1316], "less_": 368, "less_equ": [369, 1317], "less_equal_": 370, "lgamma": [371, 1318], "lgamma_": 372, "log10": [374, 1364], "log10_": 375, "log1p": [376, 1365], "log1p_": 377, "log2": [378, 1366], "log2_": 379, "log_": 380, "log_normal_": 381, "logaddexp": [382, 1367], "logaddexp2": [383, 1368], "logcumsumexp": [384, 1369], "logdet": [385, 1370], "logical_and": [386, 1371], "logical_and_": 387, "logical_not": [388, 1372], "logical_not_": 389, "logical_or": [390, 1373], "logical_or_": 391, "logical_xor": [392, 1374], "logical_xor_": 393, "logit": [394, 1375], "logit_": 395, "logsumexp": [396, 1377], "long": 397, "lt": [398, 1378], "lt_": 399, "lu": [400, 1336, 1379], "lu_solv": [401, 1339, 1380], "map_": 402, "masked_fil": 403, "masked_fill_": 404, "masked_scatt": 405, "masked_scatter_": 406, "masked_select": [407, 1383], "matmul": [408, 1340, 1384], "matrix_exp": [409, 1341, 1385], "matrix_pow": [410, 1343, 1386], "maximum": [412, 1388], "mean": [413, 1389], "median": [414, 1390], "minimum": [416, 1393, 2085], "mm": [417, 1394, 1935], "module_load": 419, "moveaxi": [420, 1396], "movedim": [421, 1397], "msort": [422, 1413], "mul": [423, 1433], "mul_": 424, "multipli": [426, 1435], "multiply_": 427, "mv": [428, 1436], "mvlgamma": [429, 1437], "mvlgamma_": 430, "nan_to_num": [431, 1438], "nan_to_num_": 432, "nanmean": [433, 1439], "nanmedian": [434, 1440], "nanquantil": [435, 1441], "nansum": [436, 1442], "narrow": [437, 1443], "narrow_copi": [438, 1444], "nbyte": 439, "ndim": 440, "ndimens": 441, "ne": [442, 1445], "ne_": 443, "neg": [444, 446, 1446, 1447], "neg_": 445, "negative_": 447, "nelement": 448, "new_empti": 449, "new_ful": 450, "new_on": 451, "new_tensor": 452, "new_zero": 453, "nextaft": [454, 1448], "nextafter_": 455, "normal_": 458, "not_equ": [459, 1796], "not_equal_": 460, "numel": [461, 1797], "numpi": [462, 2099, 2136], "orgqr": [463, 1844], "ormqr": [464, 1845], "outer": [465, 1846], "permut": [466, 1848, 2065], "pin_memori": 467, "pinvers": [468, 1849], "polygamma": [469, 1852], "polygamma_": 470, "posit": [471, 1853], "pow": [472, 1854], "pow_": 473, "prod": [474, 1855], "put_": 475, "q_per_channel_axi": 476, "q_per_channel_scal": 477, "q_per_channel_zero_point": 478, "q_scale": 479, "q_zero_point": 480, "qr": [481, 1348, 1857], "qscheme": 482, "quantil": [483, 1858], "rad2deg": [484, 1865], "random_": 485, "ravel": [486, 1874], "reciproc": [488, 1876], "reciprocal_": 489, "record_stream": 490, "register_hook": [491, 935], "register_post_accumulate_grad_hook": 492, "remaind": [493, 1877], "remainder_": 494, "renorm": [495, 1878], "renorm_": 496, "repeat": 497, "repeat_interleav": [498, 1879], "requires_grad": [499, 2075], "requires_grad_": 500, "reshap": [501, 1880], "reshape_a": 502, "resize_": 503, "resize_as_": 504, "resolve_conj": [505, 1881], "resolve_neg": [506, 1882], "retain_grad": 507, "retains_grad": 508, "roll": [509, 1884], "rot90": [510, 1885], "round": [511, 1886], "round_": 512, "row_indic": 513, "rsqrt": [514, 1888], "rsqrt_": 515, "scatter": [516, 1034, 1890], "scatter_": 517, "scatter_add": [518, 1891], "scatter_add_": 519, "scatter_reduc": [520, 1892], "scatter_reduce_": 521, "select": [522, 1895, 2054], "select_scatt": [523, 1896], "set_": 524, "sgn": [525, 1908], "sgn_": 526, "share_memory_": 528, "short": 529, "sigmoid": [530, 764, 1579, 1708, 1909], "sigmoid_": 531, "sign": [532, 1910], "sign_": 533, "signbit": [534, 1922], "sin": [535, 1923], "sin_": 536, "sinc": [537, 1924], "sinc_": 538, "sinh": [539, 1925], "sinh_": 540, "slice_scatt": [542, 1926], "slogdet": [543, 1349, 1927], "smm": [544, 1928], "softmax": [545, 1582, 1712, 1929, 1937], "sort": [546, 1930], "sparse_dim": 547, "sparse_mask": 548, "sparse_resize_": 549, "sparse_resize_and_clear_": 550, "sqrt": [552, 1947], "sqrt_": 553, "squar": [554, 1948], "square_": 555, "squeez": [556, 1949], "squeeze_": 557, "sspaddmm": [558, 1950], "std": [559, 1952], "stft": [560, 1954], "storag": [561, 2116], "storage_offset": 562, "storage_typ": 563, "stride": 564, "sub": [565, 1955], "sub_": 566, "subtract": [567, 1956], "subtract_": 568, "sum": [569, 1939, 1957, 2068], "sum_to_s": 570, "svd": [571, 1353, 1958], "swapax": [572, 1960], "swapdim": [573, 1961], "t": [574, 1968, 2047, 2083, 2136], "t_": 575, "take": [576, 1969, 2101], "take_along_dim": [577, 1970], "tan": [578, 1971], "tan_": 579, "tanh": [580, 1589, 1717, 1972], "tanh_": 581, "tensor_split": [582, 1974], "tile": [583, 1976], "to_dens": 585, "to_mkldnn": 586, "to_spars": 587, "to_sparse_bsc": 588, "to_sparse_bsr": 589, "to_sparse_coo": 590, "to_sparse_csc": 591, "to_sparse_csr": 592, "tolist": 593, "topk": [594, 1977], "transpos": [596, 1979], "transpose_": 597, "triangular_solv": [598, 1982], "tril": [599, 1983], "tril_": 600, "triu": [601, 1985], "triu_": 602, "true_divid": [603, 1987], "true_divide_": 604, "trunc": [605, 1988], "trunc_": 606, "type_a": 608, "unbind": [609, 1989, 2067], "unflatten": [610, 1599, 1990], "unfold": [611, 1600, 1724], "uniform_": 612, "uniqu": [613, 1991], "unique_consecut": [614, 1992], "unsqueez": [615, 1994], "unsqueeze_": 616, "untyped_storag": 617, "var": [619, 2002], "vdot": [620, 2004], "view": [621, 2054, 2094, 2118, 2143], "view_a": 622, "vsplit": [623, 2008], "where": [624, 2010, 2042], "xlogi": [625, 2011], "xlogy_": 626, "zero_": 628, "_assert": 629, "_foreach_ab": 630, "_foreach_abs_": 631, "_foreach_aco": 632, "_foreach_acos_": 633, "_foreach_asin": 634, "_foreach_asin_": 635, "_foreach_atan": 636, "_foreach_atan_": 637, "_foreach_ceil": 638, "_foreach_ceil_": 639, "_foreach_co": 640, "_foreach_cos_": 641, "_foreach_cosh": 642, "_foreach_cosh_": 643, "_foreach_erf": 644, "_foreach_erf_": 645, "_foreach_erfc": 646, "_foreach_erfc_": 647, "_foreach_exp": 648, "_foreach_exp_": 649, "_foreach_expm1": 650, "_foreach_expm1_": 651, "_foreach_floor": 652, "_foreach_floor_": 653, "_foreach_frac": 654, "_foreach_frac_": 655, "_foreach_lgamma": 656, "_foreach_lgamma_": 657, "_foreach_log": 658, "_foreach_log10": 659, "_foreach_log10_": 660, "_foreach_log1p": 661, "_foreach_log1p_": 662, "_foreach_log2": 663, "_foreach_log2_": 664, "_foreach_log_": 665, "_foreach_neg": 666, "_foreach_neg_": 667, "_foreach_reciproc": 668, "_foreach_reciprocal_": 669, "_foreach_round": 670, "_foreach_round_": 671, "_foreach_sigmoid": 672, "_foreach_sigmoid_": 673, "_foreach_sin": 674, "_foreach_sin_": 675, "_foreach_sinh": 676, "_foreach_sinh_": 677, "_foreach_sqrt": 678, "_foreach_sqrt_": 679, "_foreach_tan": 680, "_foreach_tan_": 681, "_foreach_trunc": 682, "_foreach_trunc_": 683, "_foreach_zero_": 684, "_log": [685, 2053], "set_log": 685, "bnrelu2d": [705, 728], "bnrelu3d": [706, 729], "convbn1d": [707, 717], "convbn2d": [708, 718], "convbn3d": [709, 719], "convbnrelu1d": [710, 720], "convbnrelu2d": [711, 721], "convbnrelu3d": [712, 722], "convrelu1d": [713, 730], "convrelu2d": [714, 723, 731], "convrelu3d": [715, 724, 732], "linearrelu": [716, 725, 733, 734], "freeze_bn_stat": 726, "update_bn_stat": 727, "conv2d": [735, 744, 778, 1476, 1630], "conv3d": [736, 745, 779, 1477, 1631], "lstm": [739, 767, 1518, 2093], "multiheadattent": [740, 1554], "batchnorm2d": [741, 1463], "batchnorm3d": [742, 1464], "conv1d": [743, 777, 1475, 1629], "convtranspose1d": [746, 1478], "convtranspose2d": [747, 1479], "convtranspose3d": [748, 1480], "elu": [749, 780, 1489, 1643], "embed": [750, 1490, 1645], "embeddingbag": [751, 1491], "fxfloatfunct": 752, "floatfunct": 753, "groupnorm": [754, 1502], "hardswish": [755, 782, 1505, 1659], "instancenorm1d": [756, 1510], "instancenorm2d": [757, 1511], "instancenorm3d": [758, 1512], "layernorm": [759, 1520], "leakyrelu": [760, 1534], "qfunction": 762, "relu6": [763, 1569, 1701], "gru": [765, 1499], "grucel": [766, 1500], "lstmcell": [768, 1519], "rnncell": [770, 1566], "adaptive_avg_pool2d": [771, 1614], "adaptive_avg_pool3d": [772, 1615], "avg_pool2d": [773, 1622], "avg_pool3d": [774, 1623], "celu": [775, 1466, 1628], "hardsigmoid": [781, 1504, 1658], "hardtanh": [783, 1506, 1660], "interpol": [784, 1665], "leaky_relu": [785, 1669], "max_pool1d": [787, 1679], "max_pool2d": [788, 1680], "threshold": [789, 1591, 1719], "upsampl": [790, 1601, 1725], "upsample_bilinear": [791, 1726], "upsample_nearest": [792, 1727], "dequantstub": 793, "numeric_debug_handle_kei": 794, "quantstub": 795, "quantwrapp": 796, "add_quant_dequ": 797, "backendconfig": 798, "backendpatternconfig": 799, "dtypeconfig": 800, "dtypewithconstraint": 801, "observationtyp": 802, "compare_result": 803, "convert": [804, 2135], "default_eval_fn": 805, "extract_results_from_logg": 806, "fakequant": [807, 2104], "fakequantizebas": 808, "fixedqparamsfakequant": 809, "fusedmovingavgobsfakequant": 810, "default_fake_qu": 811, "default_fused_act_fake_qu": 812, "default_fused_per_channel_wt_fake_qu": 813, "default_fused_wt_fake_qu": 814, "default_histogram_fake_qu": 815, "default_per_channel_weight_fake_qu": 816, "default_weight_fake_qu": 817, "disable_fake_qu": 818, "disable_observ": 819, "enable_fake_qu": 820, "enable_observ": 821, "fuse_modul": 822, "convertcustomconfig": 823, "fusecustomconfig": 824, "preparecustomconfig": 825, "standalonemoduleconfigentri": 826, "generate_numeric_debug_handl": 827, "histogramobserv": 828, "minmaxobserv": 829, "movingaverageminmaxobserv": 830, "movingaverageperchannelminmaxobserv": 831, "noopobserv": 832, "observerbas": 833, "perchannelminmaxobserv": 834, "placeholderobserv": 835, "recordingobserv": 836, "default_debug_observ": 837, "default_dynamic_quant_observ": 838, "default_float_qparams_observ": 839, "default_histogram_observ": 840, "default_observ": 841, "default_per_channel_weight_observ": 842, "default_placeholder_observ": 843, "default_weight_observ": 844, "get_observer_state_dict": 845, "load_observer_state_dict": 846, "prepar": [847, 2104, 2107], "prepare_for_propagation_comparison": 848, "prepare_qat": 849, "propagate_qconfig": 850, "model_is_export": 851, "qconfig": [852, 2104, 2107], "default_activation_only_qconfig": 853, "default_debug_qconfig": 854, "default_dynamic_qconfig": 855, "default_per_channel_qconfig": 856, "default_qat_qconfig": 857, "default_qat_qconfig_v2": 858, "default_qconfig": 859, "default_weight_only_qconfig": 860, "float16_dynamic_qconfig": 861, "float16_static_qconfig": 862, "float_qparams_weight_only_qconfig": 863, "per_channel_dynamic_qconfig": 864, "qconfigmap": 865, "get_default_qat_qconfig_map": 866, "get_default_qconfig_map": 867, "quantiz": [868, 2068, 2089, 2099, 2104, 2105, 2106, 2107], "quantize_dynam": 869, "convert_fx": 870, "fuse_fx": 871, "prepare_fx": 872, "prepare_qat_fx": 873, "quantize_qat": 874, "swap_modul": 875, "arang": 876, "are_deterministic_algorithms_en": 884, "as_tensor": 890, "asarrai": 891, "atleast_1d": 897, "atleast_2d": 898, "atleast_3d": 899, "unpackeddualtensor": 905, "dual_level": 906, "forward_ad": [907, 908, 909, 910], "enter_dual_level": 907, "exit_dual_level": 908, "make_du": 909, "unpack_du": 910, "backwardcfunct": 911, "functionctx": [912, 913, 914, 915], "mark_dirti": 912, "mark_non_differenti": 913, "save_for_backward": 914, "set_materialize_grad": 915, "inplacefunct": 916, "nestediofunct": 917, "once_differenti": 918, "hvp": 920, "vhp": 923, "inference_mod": 926, "set_grad_en": 927, "set_multithreading_en": 928, "gradcheck": [929, 930, 931, 2086], "gradcheckerror": 929, "gradgradcheck": [931, 2086], "name": [933, 2046, 2065, 2066], "next_funct": 934, "register_prehook": 936, "increment_vers": 937, "enforceuniqu": 938, "kinetosteptrack": 939, "load_nvprof": 940, "parse_nvprof_trac": 941, "export_chrome_trac": 942, "key_averag": 943, "self_cpu_time_tot": 944, "total_averag": 945, "record_funct": 946, "interv": 947, "memrecordsacc": 949, "stringtabl": 950, "bartlett_window": 952, "blackman_window": 961, "block_diag": 962, "broadcast_shap": 964, "broadcast_tensor": 965, "bucket": 967, "can_cast": 968, "cartesian_prod": 969, "cat": 970, "cdist": 971, "chain_matmul": 973, "column_stack": 981, "combin": [982, 2081], "compiled_with_cxx11_abi": 984, "allow_in_graph": [985, 2137], "cudagraph_mark_step_begin": 988, "is_compil": 990, "is_dynamo_compil": 991, "list_backend": 992, "reset": 993, "concat": 995, "concaten": 996, "streamcontext": [1007, 1024, 1417, 2014], "current_devic": [1008, 1037, 1418, 2015], "current_stream": [1009, 1038, 1419, 2016], "device_count": [1010, 1041, 1399, 1422, 2018], "is_avail": [1011, 1058, 1425, 2028], "set_devic": [1012, 1088, 1428, 2034], "cudagraph": [1016, 2130], "cudapluggablealloc": 1017, "externalstream": 1019, "mempool": 1020, "mempoolcontext": 1021, "outofmemoryerror": 1022, "caching_allocator_alloc": 1025, "caching_allocator_delet": 1026, "can_device_access_p": 1027, "change_current_alloc": 1028, "clock_rat": 1029, "comm": [1030, 1031, 1032, 1033, 1034], "broadcast": [1030, 2076], "broadcast_coalesc": 1031, "reduce_add": 1033, "cudart": 1035, "current_blas_handl": 1036, "default_stream": [1039, 1420], "device_of": [1042, 2019], "empty_cach": [1043, 1401, 2020], "get_allocator_backend": 1044, "get_arch_list": 1045, "get_device_cap": [1046, 2021], "get_device_nam": [1047, 2022], "get_device_properti": [1048, 2023], "get_gencode_flag": 1049, "get_rng_stat": [1050, 1242, 1403, 1423, 2024], "get_rng_state_al": [1051, 2025], "get_sync_debug_mod": 1052, "graph_pool_handl": 1054, "init": [1055, 1424, 2026, 2073], "initial_se": [1056, 1265, 2027], "ipc_collect": 1057, "is_current_stream_captur": 1059, "is_initi": [1060, 1426, 2029], "_create_jit_fn": 1061, "_create_multi_output_jit_fn": 1062, "list_gpu_process": 1063, "make_graphed_cal": 1064, "manual_se": [1065, 1382, 1404, 2030], "manual_seed_al": [1066, 2031], "max_memory_alloc": 1067, "max_memory_cach": 1068, "max_memory_reserv": 1069, "mem_get_info": 1070, "memory_alloc": 1071, "memory_cach": 1072, "memory_reserv": 1073, "memory_snapshot": 1074, "memory_stat": [1075, 1427], "memory_summari": 1076, "memory_usag": 1077, "mark": 1078, "rang": [1079, 1873, 2046], "range_pop": 1080, "range_push": 1081, "power_draw": 1082, "reset_max_memory_alloc": 1083, "reset_max_memory_cach": 1084, "reset_peak_memory_stat": 1085, "seed": [1086, 1409, 1894, 2032], "seed_al": [1087, 2033], "set_per_process_memory_fract": [1089, 1410], "set_rng_stat": [1090, 1411, 1429, 1906, 2035], "set_rng_state_al": [1091, 2036], "set_stream": [1092, 1430, 2037], "set_sync_debug_mod": 1093, "temperatur": 1096, "cumulative_trapezoid": 1102, "dstack": 1118, "einsum": 1119, "empti": 1120, "empty_lik": 1121, "empty_strid": 1122, "enable_grad": 1123, "exp2": 1130, "ey": 1132, "fake_quantize_per_channel_affin": 1133, "fake_quantize_per_tensor_affin": 1134, "fft2": 1136, "fftfreq": 1137, "fftn": 1138, "fftshift": 1139, "hfft": 1140, "hfft2": 1141, "hfftn": 1142, "ifft": 1143, "ifft2": 1144, "ifftn": 1145, "ifftshift": 1146, "ihfft": 1147, "ihfft2": 1148, "ihfftn": 1149, "irfft": 1150, "irfft2": 1151, "irfftn": 1152, "rfft": 1153, "rfft2": 1154, "rfftfreq": 1155, "rfftn": 1156, "from_dlpack": 1170, "from_fil": 1171, "from_numpi": 1172, "frombuff": 1173, "full": [1174, 2094], "full_lik": 1175, "functional_cal": [1176, 1789], "grad_and_valu": 1179, "replace_all_batch_norm_modules_": 1185, "stack_module_st": 1186, "get_proxy_mod": 1189, "handle_sym_dispatch": 1190, "make_fx": 1191, "maybe_disable_thunkifi": 1192, "maybe_enable_thunkifi": 1193, "callmethodkei": 1194, "convertintkei": 1195, "dimconstraint": 1196, "dimdynam": [1197, 2132], "dividebykei": 1198, "equalityconstraint": 1199, "innertensorkei": 1200, "propagateunbackedsymint": 1201, "relaxedunspecconstraint": 1202, "shapeenv": 1203, "shapeenvset": 1204, "statefulsymboliccontext": 1205, "statelesssymboliccontext": 1206, "strictminmaxconstraint": 1207, "subclasssymboliccontext": 1208, "symboliccontext": 1209, "canonicalize_bool_expr": 1210, "check_consist": 1211, "compute_unbacked_bind": 1212, "constrain_rang": 1213, "constrain_unifi": 1214, "definitely_fals": 1215, "definitely_tru": 1216, "guard_size_oblivi": 1217, "has_free_symbol": 1218, "hint_int": 1219, "is_accessor_nod": 1220, "is_concrete_bool": 1221, "is_concrete_int": 1222, "lru_cach": 1223, "parallel_and": 1224, "parallel_or": 1225, "rebind_unback": 1226, "resolve_unbacked_bind": 1227, "statically_known_tru": 1228, "sym_eq": 1229, "get_default_devic": 1235, "get_default_dtyp": 1236, "get_deterministic_debug_mod": 1237, "get_device_modul": 1238, "get_float32_matmul_precis": 1239, "get_num_interop_thread": 1240, "get_num_thread": 1241, "hamming_window": 1247, "hann_window": 1248, "histogramdd": 1252, "hspmm": 1254, "hstack": 1255, "is_deterministic_algorithms_warn_only_en": 1270, "is_grad_en": 1272, "is_inference_mode_en": 1273, "is_nonzero": 1274, "is_storag": 1275, "is_tensor": 1276, "is_warn_always_en": 1277, "isin": 1280, "attribut": [1287, 2044, 2046, 2047, 2049, 2117], "scriptfunct": 1288, "scriptmodul": [1289, 2094], "annot": [1290, 2047], "enable_onednn_fus": 1291, "fork": 1292, "freez": 1293, "ignor": 1294, "isinst": 1296, "onednn_fusion_en": 1298, "optimize_for_infer": 1299, "save": [1300, 1889, 2042, 2075, 2088, 2094, 2104], "script_if_trac": 1302, "set_fusion_strategi": 1303, "strict_fus": 1304, "trace_modul": 1306, "unus": 1307, "wait": 1308, "kaiser_window": 1309, "kron": 1310, "cholesky_ex": 1320, "eig": 1325, "eigh": 1326, "eigval": 1327, "eigvalsh": 1328, "householder_product": 1329, "inv": 1330, "inv_ex": 1331, "ldl_factor": 1332, "ldl_factor_ex": 1333, "ldl_solv": 1334, "lstsq": 1335, "lu_factor": 1337, "lu_factor_ex": 1338, "matrix_norm": 1342, "matrix_rank": 1344, "multi_dot": 1345, "pinv": 1347, "solv": 1350, "solve_ex": 1351, "solve_triangular": 1352, "svdval": 1354, "tensorinv": 1355, "tensorsolv": 1356, "vander": [1357, 2001], "vecdot": 1358, "vector_norm": 1359, "linspac": 1360, "lobpcg": 1362, "logspac": 1376, "lu_unpack": 1381, "meshgrid": 1391, "current_allocated_memori": 1398, "driver_allocated_memori": 1400, "stop": 1407, "recommended_max_memori": 1408, "mtia": [1414, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 2063], "deferredmtiacallerror": 1414, "adaptiveavgpool1d": 1449, "adaptiveavgpool2d": 1450, "adaptiveavgpool3d": 1451, "adaptivelogsoftmaxwithloss": 1452, "adaptivemaxpool1d": 1453, "adaptivemaxpool2d": 1454, "adaptivemaxpool3d": 1455, "alphadropout": 1456, "avgpool1d": 1457, "avgpool2d": 1458, "avgpool3d": 1459, "bceloss": 1460, "bcewithlogitsloss": 1461, "batchnorm1d": 1462, "bilinear": [1465, 1625], "ctcloss": 1467, "channelshuffl": 1468, "circularpad1d": 1469, "circularpad2d": 1470, "circularpad3d": 1471, "constantpad1d": 1472, "constantpad2d": 1473, "constantpad3d": 1474, "cosineembeddingloss": 1481, "cosinesimilar": 1482, "crossentropyloss": 1483, "dataparallel": [1484, 2068, 2072, 2074, 2078], "dropout": [1485, 1639, 2068, 2072], "dropout1d": [1486, 1640], "dropout2d": [1487, 1641], "dropout3d": [1488, 1642], "featurealphadropout": 1492, "fold": [1494, 1648], "fractionalmaxpool2d": 1495, "fractionalmaxpool3d": 1496, "gelu": [1497, 1652], "glu": [1498, 1653], "gaussiannllloss": 1501, "hingeembeddingloss": 1507, "huberloss": 1508, "ident": [1509, 1763, 1771, 2047, 2083], "kldivloss": 1513, "l1loss": 1514, "lppool1d": 1515, "lppool2d": 1516, "lppool3d": 1517, "lazybatchnorm1d": 1521, "lazybatchnorm2d": 1522, "lazybatchnorm3d": 1523, "lazyconv1d": 1524, "lazyconv2d": 1525, "lazyconv3d": 1526, "lazyconvtranspose1d": 1527, "lazyconvtranspose2d": 1528, "lazyconvtranspose3d": 1529, "lazyinstancenorm1d": 1530, "lazyinstancenorm2d": 1531, "lazyinstancenorm3d": 1532, "lazylinear": 1533, "localresponsenorm": 1536, "logsigmoid": [1537, 1674], "logsoftmax": 1538, "mseloss": 1539, "marginrankingloss": 1540, "maxpool1d": 1541, "maxpool2d": 1542, "maxpool3d": 1543, "maxunpool1d": 1544, "maxunpool2d": 1545, "maxunpool3d": 1546, "mish": [1547, 1685], "moduledict": [1549, 2047], "modulelist": [1550, 2046, 2047], "multilabelmarginloss": 1551, "multilabelsoftmarginloss": 1552, "multimarginloss": 1553, "nllloss": 1555, "prelu": [1556, 1699], "pairwisedist": 1557, "parameterdict": 1558, "parameterlist": 1559, "pixelshuffl": 1560, "pixelunshuffl": 1561, "poissonnllloss": 1562, "rmsnorm": [1563, 1737], "rnn": [1564, 1781, 1782, 1783, 1784, 1785, 1786, 2093], "rnnbase": 1565, "rrelu": [1567, 1704], "relu": [1568, 1700], "reflectionpad1d": 1570, "reflectionpad2d": 1571, "reflectionpad3d": 1572, "replicationpad1d": 1573, "replicationpad2d": 1574, "replicationpad3d": 1575, "selu": [1576, 1707], "sequenti": 1577, "silu": [1578, 1709], "smoothl1loss": 1580, "softmarginloss": 1581, "softmax2d": 1583, "softmin": [1584, 1713], "softplu": [1585, 1714], "softshrink": [1586, 1715], "softsign": [1587, 1716], "syncbatchnorm": 1588, "tanhshrink": [1590, 1718], "transformerdecod": 1593, "transformerdecoderlay": 1594, "transformerencod": 1595, "transformerencoderlay": 1596, "tripletmarginloss": 1597, "tripletmarginwithdistanceloss": 1598, "upsamplingbilinear2d": 1602, "upsamplingnearest2d": 1603, "zeropad1d": 1604, "zeropad2d": 1605, "zeropad3d": 1606, "sdpbackend": 1607, "attent": [1608, 1610, 1611, 1612, 2069, 2070, 2071, 2072], "bia": [1608, 1610, 1611, 2070], "causalbia": [1608, 2070], "causalvari": 1609, "causal_lower_right": 1610, "causal_upper_left": 1611, "sdpa_kernel": 1612, "adaptive_avg_pool1d": 1613, "adaptive_max_pool1d": 1616, "adaptive_max_pool2d": 1617, "adaptive_max_pool3d": 1618, "affine_grid": 1619, "alpha_dropout": 1620, "avg_pool1d": 1621, "batch_norm": 1624, "conv_transpose1d": 1632, "conv_transpose2d": 1633, "conv_transpose3d": 1634, "cosine_embedding_loss": 1635, "cosine_similar": 1636, "cross_entropi": 1637, "ctc_loss": 1638, "elu_": 1644, "embedding_bag": 1646, "feature_alpha_dropout": 1647, "fractional_max_pool2d": 1649, "fractional_max_pool3d": 1650, "gaussian_nll_loss": 1651, "grid_sampl": 1654, "group_norm": 1655, "gumbel_softmax": 1656, "hardtanh_": 1661, "hinge_embedding_loss": 1662, "huber_loss": 1663, "instance_norm": 1664, "kl_div": 1666, "l1_loss": 1667, "layer_norm": 1668, "leaky_relu_": 1670, "local_response_norm": 1672, "log_softmax": [1673, 1934], "lp_pool1d": 1675, "lp_pool2d": 1676, "lp_pool3d": 1677, "margin_ranking_loss": 1678, "max_pool3d": 1681, "max_unpool1d": 1682, "max_unpool2d": 1683, "max_unpool3d": 1684, "mse_loss": 1686, "multi_margin_loss": 1687, "multilabel_margin_loss": 1688, "multilabel_soft_margin_loss": 1689, "nll_loss": 1690, "one_hot": 1692, "pad": [1693, 2068], "pairwise_dist": 1694, "pdist": 1695, "pixel_shuffl": 1696, "pixel_unshuffl": 1697, "poisson_nll_loss": 1698, "relu_": 1702, "rms_norm": 1703, "rrelu_": 1705, "scaled_dot_product_attent": 1706, "smooth_l1_loss": 1710, "soft_margin_loss": 1711, "threshold_": 1720, "data_parallel": [1721, 2072], "triplet_margin_loss": 1722, "triplet_margin_with_distance_loss": 1723, "lazymodulemixin": 1728, "register_module_backward_hook": 1729, "register_module_buffer_registration_hook": 1730, "register_module_forward_hook": 1731, "register_module_forward_pre_hook": 1732, "register_module_full_backward_hook": 1733, "register_module_full_backward_pre_hook": 1734, "register_module_module_registration_hook": 1735, "register_module_parameter_registration_hook": 1736, "distributeddataparallel": [1738, 2074, 2078, 2080], "buffer": [1739, 2078, 2084, 2091], "uninitializedbuff": 1741, "uninitializedparamet": 1742, "clip_grad_norm": 1743, "clip_grad_norm_": 1744, "clip_grad_value_": 1745, "convert_conv2d_weight_memory_format": 1746, "convert_conv3d_weight_memory_format": 1747, "fuse_conv_bn_ev": 1748, "fuse_conv_bn_weight": 1749, "fuse_linear_bn_ev": 1750, "fuse_linear_bn_weight": 1751, "parameters_to_vector": 1752, "parametr": [1753, 1754, 1755, 1757, 1758, 1759, 1760, 2089], "orthogon": 1753, "spectral_norm": [1754, 1788], "weight_norm": [1755, 1791], "parametrizationlist": 1756, "cach": [1757, 2042, 2078, 2087, 2145], "is_parametr": 1758, "register_parametr": 1759, "remove_parametr": 1760, "basepruningmethod": 1761, "customfrommask": 1762, "l1unstructur": 1764, "lnstructur": 1765, "pruningcontain": 1766, "randomstructur": 1767, "randomunstructur": 1768, "prune": [1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 2089], "custom_from_mask": 1769, "global_unstructur": 1770, "is_prun": 1772, "l1_unstructur": 1773, "ln_structur": 1774, "random_structur": 1775, "random_unstructur": 1776, "remove_spectral_norm": 1778, "remove_weight_norm": 1779, "packedsequ": 1780, "pack_padded_sequ": 1781, "pack_sequ": 1782, "pad_packed_sequ": 1783, "pad_sequ": 1784, "unpack_sequ": 1785, "unpad_sequ": 1786, "skip_init": 1787, "stateless": 1789, "vector_to_paramet": 1790, "no_grad": 1792, "ones": [1798, 2136], "ones_lik": 1799, "jitscalartyp": 1800, "graphinfo": 1801, "verificationopt": 1802, "asgd": 1803, "adadelta": 1804, "adafactor": 1805, "adagrad": 1806, "adam": 1807, "adamw": 1808, "adamax": 1809, "lbfg": 1810, "nadam": 1811, "add_param_group": 1812, "load_state_dict": 1813, "register_load_state_dict_post_hook": 1814, "register_load_state_dict_pre_hook": 1815, "register_state_dict_post_hook": 1816, "register_state_dict_pre_hook": 1817, "register_step_post_hook": 1818, "register_step_pre_hook": 1819, "state_dict": [1820, 2141], "zero_grad": 1822, "radam": 1823, "rmsprop": 1824, "rprop": 1825, "sgd": 1826, "sparseadam": 1827, "chainedschedul": 1828, "constantlr": 1829, "cosineannealinglr": 1830, "cosineannealingwarmrestart": 1831, "cycliclr": 1832, "exponentiallr": 1833, "lrschedul": 1834, "lambdalr": 1835, "linearlr": 1836, "multisteplr": 1837, "multiplicativelr": 1838, "onecyclelr": 1839, "polynomiallr": 1840, "reducelronplateau": 1841, "sequentiallr": 1842, "steplr": 1843, "pca_lowrank": 1847, "polar": 1851, "promote_typ": 1856, "quantize_per_channel": 1859, "quantize_per_tensor": 1860, "quantized_batch_norm": 1861, "quantized_max_pool1d": 1862, "quantized_max_pool2d": 1863, "sobolengin": 1864, "rand": 1866, "rand_lik": 1867, "randint": 1868, "randint_lik": 1869, "randn": 1870, "randn_lik": 1871, "randperm": 1872, "result_typ": 1883, "row_stack": 1887, "searchsort": 1893, "set_default_devic": 1897, "set_default_dtyp": 1898, "set_default_tensor_typ": 1899, "set_deterministic_debug_mod": 1900, "set_float32_matmul_precis": 1901, "set_flush_denorm": 1902, "set_num_interop_thread": 1903, "set_num_thread": 1904, "set_printopt": 1905, "set_warn_alwai": 1907, "signal": [1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 2112], "bartlett": 1911, "blackman": 1912, "cosin": 1913, "gaussian": 1915, "general_cosin": 1916, "general_ham": 1917, "ham": 1918, "hann": 1919, "kaiser": 1920, "nuttal": 1921, "as_sparse_gradcheck": 1932, "check_sparse_tensor_invari": 1933, "sampled_addmm": 1936, "spdiag": 1938, "sparse_bsc_tensor": 1940, "sparse_bsr_tensor": 1941, "sparse_compressed_tensor": 1942, "sparse_coo_tensor": 1943, "sparse_csc_tensor": 1944, "sparse_csr_tensor": 1945, "std_mean": 1953, "svd_lowrank": 1959, "sym_float": 1962, "sym_int": 1963, "sym_it": 1964, "sym_max": 1965, "sym_min": 1966, "sym_not": 1967, "tensordot": 1975, "trapezoid": 1980, "trapz": 1981, "tril_indic": 1984, "triu_indic": 1986, "unravel_index": 1993, "use_deterministic_algorithm": 1995, "generate_methods_for_privateuse1_backend": 1996, "get_cpp_backtrac": 1997, "rename_privateuse1_backend": 1998, "set_modul": 1999, "swap_tensor": 2000, "var_mean": 2003, "view_as_complex": 2005, "view_as_r": 2006, "vstack": 2009, "zero": [2040, 2114], "zeros_lik": 2041, "hub": 2042, "publish": 2042, "entrypoint": 2042, "run": [2042, 2142], "my": [2042, 2075, 2083, 2102, 2136, 2142], "download": 2042, "logic": [2042, 2046], "known": [2042, 2044], "bind": 2043, "tabl": [2043, 2094], "built": [2044, 2045, 2047, 2099], "comparison": [2044, 2046, 2047, 2123, 2130], "inspect": [2044, 2097, 2134], "warn": 2044, "appendix": [2044, 2047], "recurs": 2044, "constant": [2044, 2046], "fusion": 2044, "math": [2045, 2123], "construct": [2046, 2047, 2049, 2067, 2101, 2114], "refin": [2046, 2047], "enum": [2046, 2047], "tupl": [2046, 2047], "liter": [2046, 2047], "list": [2046, 2047, 2099], "dict": 2046, "arithmet": [2046, 2047], "subscript": [2046, 2047], "slice": [2046, 2047, 2092, 2123], "ternari": [2046, 2047], "cast": 2046, "statement": [2046, 2047], "assign": [2046, 2047], "If": 2046, "while": [2046, 2047], "loop": 2046, "For": 2046, "continu": [2046, 2047], "return": [2046, 2047, 2083, 2111], "resolut": [2046, 2047], "lookup": 2046, "defin": [2046, 2081, 2082], "terminologi": 2047, "instanc": 2047, "when": [2047, 2075, 2081, 2099, 2104, 2114, 2136], "signatur": 2047, "expr": 2047, "convers": [2047, 2067], "atom": 2047, "identifi": [2047, 2136, 2145], "parenthes": 2047, "form": 2047, "displai": 2047, "primari": 2047, "power": 2047, "unari": [2047, 2054, 2114], "bitwis": 2047, "binari": [2047, 2054], "shift": 2047, "boolean": 2047, "condit": 2047, "augment": 2047, "rais": 2047, "del": 2047, "compound": 2047, "els": 2047, "getattr": 2047, "hasattr": 2047, "zip": [2047, 2102], "enumer": 2047, "rule": [2047, 2066, 2082, 2097], "remot": [2047, 2111], "procedur": 2047, "program": 2047, "coverag": [2048, 2065, 2081], "properti": [2049, 2052], "correctli": 2049, "bound": 2049, "schema": 2049, "between": [2049, 2102, 2136], "low": 2051, "matrix": [2052, 2104], "decomposit": 2052, "solver": 2052, "misc": 2052, "motiv": [2054, 2132, 2135], "reduct": [2054, 2078, 2092, 2123], "idiom": 2055, "miscellan": 2056, "mobile_optim": 2057, "model_zoo": 2058, "module_track": 2059, "strategi": [2064, 2101], "descriptor": 2064, "file_descriptor": 2064, "file_system": 2064, "keep": [2065, 2102], "dimens": [2065, 2066], "unifi": 2065, "contract": 2065, "awai": 2065, "factori": 2065, "variant": 2065, "semant": [2066, 2076, 2078, 2087, 2094], "infer": [2066, 2075, 2077, 2085, 2094, 2127], "explicit": 2066, "align": 2066, "subsystem": 2066, "constructor": 2067, "convolut": [2068, 2072, 2092, 2093], "layer": 2068, "pool": [2068, 2072], "activ": [2068, 2072, 2147], "weight": [2068, 2101], "nonlinear": 2068, "recurr": [2068, 2083], "distanc": [2068, 2072], "loss": [2068, 2072, 2074], "vision": [2068, 2072], "shuffl": 2068, "lazi": 2068, "alias": 2068, "submodul": 2069, "flex_attent": 2071, "blockmask": 2071, "detail": [2071, 2135], "typic": 2074, "unscal": 2074, "accumul": 2074, "penalti": 2074, "one": 2074, "per": [2074, 2101], "need": [2074, 2136], "particular": [2074, 2075], "dtype": [2074, 2094, 2107, 2117], "encod": 2075, "histori": [2075, 2147], "set": [2075, 2085, 2099], "No": 2075, "evalu": [2075, 2086, 2133], "multithread": 2075, "concurr": 2075, "determin": [2075, 2093], "retain": 2075, "thread": [2075, 2077, 2122], "safeti": 2075, "wirting": 2075, "calculu": 2075, "pictur": 2075, "conjug": 2075, "formula": 2075, "domain": 2075, "regist": [2075, 2131], "whether": [2075, 2102], "fire": 2075, "differ": [2075, 2099, 2136], "modifi": 2075, "compat": 2076, "runtim": [2077, 2083, 2145], "tensorfloat": [2078, 2087, 2092], "32": [2078, 2087, 2092, 2095], "tf32": [2078, 2087, 2092], "amper": [2078, 2092], "later": [2078, 2092, 2102], "reduc": [2078, 2092], "fp16": [2078, 2092], "gemm": [2078, 2092], "bf16": [2078, 2092], "bc": 2078, "pytorch_cuda_alloc_conf": 2078, "alloc": [2078, 2083, 2147], "cubla": 2078, "workspac": 2078, "cufft": 2078, "plan": [2078, 2087], "just": 2078, "time": [2078, 2127, 2139, 2143, 2145], "practic": [2078, 2091, 2104, 2129], "agnost": 2078, "instead": 2078, "whole": [2078, 2136], "captur": 2078, "partial": 2078, "9": 2078, "6": 2078, "across": [2078, 2094], "land": 2079, "page": 2079, "intern": [2080, 2099, 2102, 2132, 2134], "processgroup": 2080, "ddpoptim": 2080, "setup_context": 2081, "like": [2081, 2102], "subclass": [2081, 2135], "wrapper": 2081, "__torch_function__": 2081, "overrid": [2081, 2146], "nativ": [2081, 2104, 2106], "__torch_dispatch__": 2081, "convent": 2081, "anoth": 2082, "specifi": 2082, "gotcha": 2082, "staticmethod": 2082, "isn": 2083, "freed": 2083, "properli": 2083, "loader": 2083, "doesn": 2083, "fsdp": 2084, "prefetch": 2084, "nuanc": 2084, "payload": 2084, "intel": [2085, 2103], "hardwar": [2085, 2104], "prerequisit": 2085, "softwar": 2085, "fp32": 2085, "notat": 2086, "background": [2086, 2110, 2111, 2130], "inform": [2086, 2109, 2144], "analyt": 2086, "u": 2086, "reus": [2087, 2091], "hipfft": 2087, "rocfft": 2087, "larg": 2088, "fleet": 2088, "wide": 2088, "attach": 2088, "consider": 2088, "block": 2089, "neural": 2089, "tip": [2091, 2105], "fight": 2091, "deadlock": 2091, "through": 2091, "queue": 2091, "e": 2091, "g": 2091, "hogwild": 2091, "oversubscript": 2091, "accuraci": [2092, 2104, 2105, 2145], "extrem": 2092, "finit": 2092, "instinct": 2092, "mi200": 2092, "reproduc": 2093, "nondeterminist": 2093, "algorithm": [2093, 2101, 2110], "fill": 2093, "uniniti": 2093, "content": [2094, 2102], "preserv": [2094, 2114], "format": [2094, 2102], "them": [2094, 2102], "version": 2094, "integ": 2094, "divis": 2094, "alwai": [2094, 2133], "includ": [2095, 2102], "compon": 2095, "speed": [2095, 2136], "One": [2095, 2144], "instal": 2095, "cffi": 2095, "cpp": 2095, "found": 2095, "win": 2095, "channel": 2095, "without": 2095, "claus": 2095, "protect": 2095, "broken": 2095, "pipe": 2095, "driver": 2095, "shut": 2095, "down": 2095, "ipc": 2095, "base": [2096, 2097, 2099, 2101, 2144], "gui": 2097, "diagnos": [2097, 2145], "sarif": 2097, "diagnost": 2097, "alexnet": 2099, "v": 2099, "index": [2099, 2123], "aten": [2099, 2140, 2144], "inlin": 2099, "discov": 2099, "unconvert": 2099, "onc": 2099, "adjust": 2101, "learn": 2101, "rate": 2101, "averag": 2101, "swa": 2101, "ema": 2101, "care": 2101, "put": 2101, "togeth": 2101, "do": [2102, 2134, 2136], "see": [2102, 2136], "insid": [2102, 2136], "treat": 2102, "archiv": 2102, "file_structur": 2102, "given": 2102, "wa": 2102, "resourc": [2102, 2135], "distinguish": 2102, "explan": 2102, "analyz": 2102, "extern": 2102, "mock": 2102, "refactor": 2102, "sharp": 2102, "global": 2102, "isol": 2102, "each": [2102, 2135], "mangl": 2102, "instrument": 2103, "technologi": 2103, "eager": 2104, "awar": 2104, "mainten": 2104, "engin": 2104, "observ": [2104, 2107], "configur": [2104, 2106], "insensit": 2105, "int8": 2105, "sensit": 2105, "ao": [2107, 2124, 2125], "top": 2107, "quantize_fx": 2107, "qconfig_map": 2107, "backend_config": 2107, "custom_config": 2107, "pt2e": 2107, "0": [2107, 2133, 2141, 2142, 2145], "export_util": 2107, "pt2": 2107, "relat": [2107, 2135], "fake_quant": 2107, "intrins": 2107, "qat": 2107, "scheme": 2107, "rpc": 2109, "tensorpip": 2109, "rref": [2109, 2111], "remotemodul": 2109, "record": 2110, "dure": 2110, "smart": 2110, "end": 2110, "protocol": 2111, "lifetim": 2111, "reason": [2111, 2130], "scenario": 2111, "owner": 2111, "argument": 2111, "sparsiti": 2114, "semi": 2114, "acceler": [2114, 2123], "coo": 2114, "hybrid": 2114, "uncoalesc": 2114, "csr": 2114, "csc": 2114, "bsr": 2114, "bsc": 2114, "memory_format": 2117, "tensorboard": 2119, "creation": 2123, "sampl": 2123, "quasi": 2123, "pointwis": 2123, "spectral": 2123, "bla": 2123, "lapack": 2123, "foreach": 2123, "path": 2123, "n": [2124, 2125], "_numeric_suit": 2124, "_numeric_suite_fx": 2125, "howto": 2126, "vendor": 2126, "aotinductor": 2127, "ahead": 2127, "Of": 2127, "ed": 2127, "x86": 2129, "tree": 2130, "integr": 2130, "callabl": 2130, "previou": 2130, "skip": 2130, "after": 2131, "aotautograd": 2131, "speedi": 2131, "abridg": 2132, "public": 2132, "guard": [2132, 2133, 2134], "overal": [2132, 2135], "architectur": [2132, 2135], "unback": 2132, "dynamo": [2133, 2134], "gentl": 2133, "pep": 2133, "523": 2133, "frame": 2133, "cpython": 2133, "sound": 2133, "duck": 2133, "complet": 2133, "conclus": 2133, "footnot": 2133, "artifact": 2134, "bit": 2135, "individu": [2135, 2139], "characterist": 2135, "interact": 2135, "you": 2136, "still": 2136, "crash": 2136, "slow": 2136, "recompil": [2136, 2145], "am": 2136, "speedup": 2136, "caus": [2136, 2145], "didn": 2136, "incorrect": 2136, "result": 2136, "oom": 2136, "besid": 2136, "via": 2136, "under": 2136, "some": 2136, "did": 2136, "fine": [2136, 2137], "grain": [2136, 2137], "_dynamo": [2136, 2137], "disallow_in_graph": [2136, 2137], "_dynamo_skip": 2136, "pretrain": 2138, "next": 2138, "torchinductor": [2139, 2142, 2145], "relev": 2139, "breakdown": 2139, "prim": 2140, "nnmodul": 2141, "__call__": 2141, "dashboard": 2142, "measur": 2142, "pr": 2142, "affect": 2142, "befor": 2142, "merg": 2142, "understand": [2143, 2147], "around": 2143, "region": 2143, "compiledfunct": 2143, "overhead": 2143, "x": 2144, "none": 2144, "partition": 2144, "matcher": 2144, "capabl": 2144, "troubleshoot": 2145, "titl": 2145, "minifi": 2145, "torch_compile_debug": 2145, "excess": 2145, "cold": 2145, "corrupt": 2145, "snapshot": 2147, "visual": 2147, "timelin": 2147, "processgroupnccl": 2149, "finfo": 2150, "iinfo": 2150}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.addmm_": [[110, "torch-tensor-addmm"]], "torch.Tensor.arccosh_": [[127, "torch-tensor-arccosh"]], "torch.Tensor.all": [[116, "torch-tensor-all"]], "torch.Tensor.angle": [[121, "torch-tensor-angle"]], "torch.Tensor.arccos_": [[125, "torch-tensor-arccos"]], "torch.Tensor.atan2": [[149, "torch-tensor-atan2"]], "torch.Tensor.addcmul": [[107, "torch-tensor-addcmul"]], "torch.Tensor.amin": [[119, "torch-tensor-amin"]], "torch.Tensor.addr_": [[114, "torch-tensor-addr"]], "torch.Tensor.any": [[122, "torch-tensor-any"]], "torch.Tensor.arctan": [[132, "torch-tensor-arctan"]], "torch.Tensor.arctanh_": [[137, "torch-tensor-arctanh"]], "torch.Tensor.arccosh": [[126, "torch-tensor-arccosh"]], "torch.Tensor.addcdiv_": [[106, "torch-tensor-addcdiv"]], "torch.Tensor.arcsinh": [[130, "torch-tensor-arcsinh"]], "torch.Tensor.argmin": [[139, "torch-tensor-argmin"]], "torch.Tensor.atan_": [[151, "torch-tensor-atan"]], "torch.Tensor.adjoint": [[115, "torch-tensor-adjoint"]], "torch.Tensor.allclose": [[117, "torch-tensor-allclose"]], "torch.Tensor.arcsin": [[128, "torch-tensor-arcsin"]], "torch.Tensor.atan2_": [[150, "torch-tensor-atan2"]], "torch.Tensor.addbmm": [[103, "torch-tensor-addbmm"]], "torch.Tensor.arctanh": [[136, "torch-tensor-arctanh"]], "torch.Tensor.argwhere": [[141, "torch-tensor-argwhere"]], "torch.Tensor.add_": [[102, "torch-tensor-add"]], "torch.Tensor.addmv": [[111, "torch-tensor-addmv"]], "torch.Tensor.addmm": [[109, "torch-tensor-addmm"]], "torch.Tensor.arccos": [[124, "torch-tensor-arccos"]], "torch.Tensor.addcdiv": [[105, "torch-tensor-addcdiv"]], "torch.Tensor.arctan2_": [[134, "torch-tensor-arctan2"]], "torch.Tensor.atanh": [[152, "torch-tensor-atanh"]], "torch.Tensor.asin_": [[145, "torch-tensor-asin"]], "torch.Tensor.asin": [[144, "torch-tensor-asin"]], "torch.Tensor.asinh_": [[147, "torch-tensor-asinh"]], "torch.Tensor.asinh": [[146, "torch-tensor-asinh"]], "torch.Tensor.as_subclass": [[143, "torch-tensor-as-subclass"]], "torch.Tensor.addr": [[113, "torch-tensor-addr"]], "torch.Tensor.arcsinh_": [[131, "torch-tensor-arcsinh"]], "torch.Tensor.atan": [[148, "torch-tensor-atan"]], "torch.Tensor.addbmm_": [[104, "torch-tensor-addbmm"]], "torch.Tensor.addmv_": [[112, "torch-tensor-addmv"]], "torch.Tensor.arctan2": [[133, "torch-tensor-arctan2"]], "torch.Tensor.as_strided": [[142, "torch-tensor-as-strided"]], "torch.Tensor.argmax": [[138, "torch-tensor-argmax"]], "torch.Tensor.aminmax": [[120, "torch-tensor-aminmax"]], "torch.Tensor.argsort": [[140, "torch-tensor-argsort"]], "torch.Tensor.arctan_": [[135, "torch-tensor-arctan"]], "torch.Tensor.addcmul_": [[108, "torch-tensor-addcmul"]], "torch.Tensor.amax": [[118, "torch-tensor-amax"]], "torch.Tensor.apply_": [[123, "torch-tensor-apply"]], "torch.Tensor.arcsin_": [[129, "torch-tensor-arcsin"]], "torch.Tensor.greater_": [[296, "torch-tensor-greater"]], "torch.Tensor.expm1_": [[261, "torch-tensor-expm1"]], "torch.Tensor.hardshrink": [[302, "torch-tensor-hardshrink"]], "torch.Tensor.fmax": [[278, "torch-tensor-fmax"]], "torch.Tensor.float_power_": [[273, "torch-tensor-float-power"]], "torch.Tensor.exp_": [[257, "torch-tensor-exp"]], "torch.Tensor.flatten": [[267, "torch-tensor-flatten"]], "torch.Tensor.frac": [[282, "torch-tensor-frac"]], "torch.Tensor.histogram": [[305, "torch-tensor-histogram"]], "torch.Tensor.expm1": [[260, "torch-tensor-expm1"]], "torch.Tensor.expand_as": [[259, "torch-tensor-expand-as"]], "torch.Tensor.get_device": [[293, "torch-tensor-get-device"]], "torch.Tensor.floor_divide": [[276, "torch-tensor-floor-divide"]], "torch.Tensor.fill_diagonal_": [[264, "torch-tensor-fill-diagonal"]], "torch.Tensor.floor_": [[275, "torch-tensor-floor"]], "torch.Tensor.expand": [[258, "torch-tensor-expand"]], "torch.Tensor.greater_equal_": [[298, "torch-tensor-greater-equal"]], "torch.Tensor.gt_": [[300, "torch-tensor-gt"]], "torch.Tensor.grad": [[294, "torch-tensor-grad"]], "torch.Tensor.ge": [[288, "torch-tensor-ge"]], "torch.Tensor.floor_divide_": [[277, "torch-tensor-floor-divide"]], "torch.Tensor.fmod_": [[281, "torch-tensor-fmod"]], "torch.Tensor.gcd": [[286, "torch-tensor-gcd"]], "torch.Tensor.ge_": [[289, "torch-tensor-ge"]], "torch.Tensor.gt": [[299, "torch-tensor-gt"]], "torch.Tensor.geometric_": [[290, "torch-tensor-geometric"]], "torch.Tensor.greater": [[295, "torch-tensor-greater"]], "torch.Tensor.frexp": [[284, "torch-tensor-frexp"]], "torch.Tensor.fix": [[265, "torch-tensor-fix"]], "torch.Tensor.heaviside": [[303, "torch-tensor-heaviside"]], "torch.Tensor.erfinv_": [[255, "torch-tensor-erfinv"]], "torch.Tensor.fmod": [[280, "torch-tensor-fmod"]], "torch.Tensor.flip": [[268, "torch-tensor-flip"]], "torch.Tensor.fmin": [[279, "torch-tensor-fmin"]], "torch.Tensor.ger": [[292, "torch-tensor-ger"]], "torch.Tensor.fill_": [[263, "torch-tensor-fill"]], "torch.Tensor.fliplr": [[269, "torch-tensor-fliplr"]], "torch.Tensor.gather": [[285, "torch-tensor-gather"]], "torch.Tensor.geqrf": [[291, "torch-tensor-geqrf"]], "torch.Tensor.float": [[271, "torch-tensor-float"]], "torch.Tensor.floor": [[274, "torch-tensor-floor"]], "torch.Tensor.half": [[301, "torch-tensor-half"]], "torch.Tensor.exponential_": [[262, "torch-tensor-exponential"]], "torch.Tensor.flipud": [[270, "torch-tensor-flipud"]], "torch.Tensor.gcd_": [[287, "torch-tensor-gcd"]], "torch.Tensor.float_power": [[272, "torch-tensor-float-power"]], "torch.Tensor.histc": [[304, "torch-tensor-histc"]], "torch.Tensor.fix_": [[266, "torch-tensor-fix"]], "torch.Tensor.frac_": [[283, "torch-tensor-frac"]], "torch.Tensor.greater_equal": [[297, "torch-tensor-greater-equal"]], "torch.Tensor.exp": [[256, "torch-tensor-exp"]], "torch.Tensor.erfc_": [[253, "torch-tensor-erfc"]], "torch.Tensor.cummax": [[214, "torch-tensor-cummax"]], "torch.Tensor.cos_": [[205, "torch-tensor-cos"]], "torch.Tensor.cos": [[204, "torch-tensor-cos"]], "torch.Tensor.dense_dim": [[222, "torch-tensor-dense-dim"]], "torch.Tensor.cumsum": [[218, "torch-tensor-cumsum"]], "torch.Tensor.erfc": [[252, "torch-tensor-erfc"]], "torch.Tensor.cuda": [[213, "torch-tensor-cuda"]], "torch.Tensor.div_": [[240, "torch-tensor-div"]], "torch.Tensor.eq": [[247, "torch-tensor-eq"]], "torch.Tensor.cumsum_": [[219, "torch-tensor-cumsum"]], "torch.Tensor.cosh_": [[207, "torch-tensor-cosh"]], "torch.Tensor.digamma": [[234, "torch-tensor-digamma"]], "torch.Tensor.diagonal": [[231, "torch-tensor-diagonal"]], "torch.Tensor.cosh": [[206, "torch-tensor-cosh"]], "torch.Tensor.equal": [[249, "torch-tensor-equal"]], "torch.Tensor.cross": [[211, "torch-tensor-cross"]], "torch.Tensor.erf_": [[251, "torch-tensor-erf"]], "torch.Tensor.det": [[224, "torch-tensor-det"]], "torch.Tensor.cumprod": [[216, "torch-tensor-cumprod"]], "torch.Tensor.diagonal_scatter": [[232, "torch-tensor-diagonal-scatter"]], "torch.Tensor.detach_": [[226, "torch-tensor-detach"]], "torch.Tensor.data_ptr": [[220, "torch-tensor-data-ptr"]], "torch.Tensor.diagflat": [[230, "torch-tensor-diagflat"]], "torch.Tensor.element_size": [[246, "torch-tensor-element-size"]], "torch.Tensor.erf": [[250, "torch-tensor-erf"]], "torch.Tensor.cov": [[209, "torch-tensor-cov"]], "torch.Tensor.div": [[239, "torch-tensor-div"]], "torch.Tensor.eq_": [[248, "torch-tensor-eq"]], "torch.Tensor.cummin": [[215, "torch-tensor-cummin"]], "torch.Tensor.diag": [[228, "torch-tensor-diag"]], "torch.Tensor.cumprod_": [[217, "torch-tensor-cumprod"]], "torch.Tensor.device": [[227, "torch-tensor-device"]], "torch.Tensor.deg2rad": [[221, "torch-tensor-deg2rad"]], "torch.Tensor.divide_": [[242, "torch-tensor-divide"]], "torch.Tensor.dist": [[238, "torch-tensor-dist"]], "torch.Tensor.crow_indices": [[212, "torch-tensor-crow-indices"]], "torch.Tensor.erfinv": [[254, "torch-tensor-erfinv"]], "torch.Tensor.dim_order": [[237, "torch-tensor-dim-order"]], "torch.Tensor.double": [[244, "torch-tensor-double"]], "torch.Tensor.cpu": [[210, "torch-tensor-cpu"]], "torch.Tensor.divide": [[241, "torch-tensor-divide"]], "torch.Tensor.dequantize": [[223, "torch-tensor-dequantize"]], "torch.Tensor.detach": [[225, "torch-tensor-detach"]], "torch.Tensor.dsplit": [[245, "torch-tensor-dsplit"]], "torch.Tensor.diff": [[233, "torch-tensor-diff"]], "torch.Tensor.dim": [[236, "torch-tensor-dim"]], "torch.Tensor.count_nonzero": [[208, "torch-tensor-count-nonzero"]], "torch.Tensor.dot": [[243, "torch-tensor-dot"]], "torch.Tensor.diag_embed": [[229, "torch-tensor-diag-embed"]], "torch.Tensor.digamma_": [[235, "torch-tensor-digamma"]], "torch.Tensor.ceil_": [[181, "torch-tensor-ceil"]], "torch.Tensor.bernoulli_": [[158, "torch-tensor-bernoulli"]], "torch.Tensor.bool": [[174, "torch-tensor-bool"]], "torch.Tensor.bitwise_and_": [[162, "torch-tensor-bitwise-and"]], "torch.Tensor.copy_": [[200, "torch-tensor-copy"]], "torch.Tensor.copysign": [[201, "torch-tensor-copysign"]], "torch.Tensor.clip": [[191, "torch-tensor-clip"]], "torch.Tensor.col_indices": [[195, "torch-tensor-col-indices"]], "torch.Tensor.bitwise_and": [[161, "torch-tensor-bitwise-and"]], "torch.Tensor.corrcoef": [[203, "torch-tensor-corrcoef"]], "torch.Tensor.bitwise_left_shift_": [[164, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.copysign_": [[202, "torch-tensor-copysign"]], "torch.Tensor.cholesky_inverse": [[186, "torch-tensor-cholesky-inverse"]], "torch.Tensor.conj_physical_": [[198, "torch-tensor-conj-physical"]], "torch.Tensor.cfloat": [[182, "torch-tensor-cfloat"]], "torch.Tensor.bitwise_not": [[165, "torch-tensor-bitwise-not"]], "torch.Tensor.baddbmm_": [[156, "torch-tensor-baddbmm"]], "torch.Tensor.bitwise_not_": [[166, "torch-tensor-bitwise-not"]], "torch.Tensor.cauchy_": [[177, "torch-tensor-cauchy"]], "torch.Tensor.clamp_": [[190, "torch-tensor-clamp"]], "torch.Tensor.broadcast_to": [[175, "torch-tensor-broadcast-to"]], "torch.Tensor.clone": [[193, "torch-tensor-clone"]], "torch.Tensor.conj_physical": [[197, "torch-tensor-conj-physical"]], "torch.Tensor.atanh_": [[153, "torch-tensor-atanh"]], "torch.Tensor.cdouble": [[179, "torch-tensor-cdouble"]], "torch.Tensor.bitwise_or": [[167, "torch-tensor-bitwise-or"]], "torch.Tensor.bfloat16": [[159, "torch-tensor-bfloat16"]], "torch.Tensor.bernoulli": [[157, "torch-tensor-bernoulli"]], "torch.Tensor.char": [[184, "torch-tensor-char"]], "torch.Tensor.cholesky": [[185, "torch-tensor-cholesky"]], "torch.Tensor.chunk": [[188, "torch-tensor-chunk"]], "torch.Tensor.bitwise_right_shift": [[169, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.clip_": [[192, "torch-tensor-clip"]], "torch.Tensor.cholesky_solve": [[187, "torch-tensor-cholesky-solve"]], "torch.Tensor.byte": [[176, "torch-tensor-byte"]], "torch.Tensor.bitwise_right_shift_": [[170, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.contiguous": [[199, "torch-tensor-contiguous"]], "torch.Tensor.chalf": [[183, "torch-tensor-chalf"]], "torch.Tensor.backward": [[154, "torch-tensor-backward"]], "torch.Tensor.bitwise_xor_": [[172, "torch-tensor-bitwise-xor"]], "torch.Tensor.ceil": [[180, "torch-tensor-ceil"]], "torch.Tensor.baddbmm": [[155, "torch-tensor-baddbmm"]], "torch.Tensor.bitwise_left_shift": [[163, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bitwise_or_": [[168, "torch-tensor-bitwise-or"]], "torch.Tensor.bmm": [[173, "torch-tensor-bmm"]], "torch.Tensor.coalesce": [[194, "torch-tensor-coalesce"]], "torch.Tensor.bitwise_xor": [[171, "torch-tensor-bitwise-xor"]], "torch.Tensor.ccol_indices": [[178, "torch-tensor-ccol-indices"]], "torch.Tensor.bincount": [[160, "torch-tensor-bincount"]], "torch.Tensor.conj": [[196, "torch-tensor-conj"]], "torch.Tensor.clamp": [[189, "torch-tensor-clamp"]], "torch.Tensor.hypot": [[307, "torch-tensor-hypot"]], "torch.Tensor.isinf": [[350, "torch-tensor-isinf"]], "torch.Tensor.is_cuda": [[336, "torch-tensor-is-cuda"]], "torch.Tensor.inverse": [[331, "torch-tensor-inverse"]], "torch.Tensor.igammac_": [[314, "torch-tensor-igammac"]], "torch.Tensor.index_put_": [[323, "torch-tensor-index-put"]], "torch.Tensor.istft": [[355, "torch-tensor-istft"]], "torch.Tensor.is_complex": [[333, "torch-tensor-is-complex"]], "torch.Tensor.index_add": [[316, "torch-tensor-index-add"]], "torch.Tensor.index_select": [[326, "torch-tensor-index-select"]], "torch.Tensor.isfinite": [[349, "torch-tensor-isfinite"]], "torch.Tensor.isclose": [[348, "torch-tensor-isclose"]], "torch.Tensor.index_reduce": [[324, "torch-tensor-index-reduce"]], "torch.Tensor.imag": [[315, "torch-tensor-imag"]], "torch.Tensor.int": [[329, "torch-tensor-int"]], "torch.Tensor.is_inference": [[338, "torch-tensor-is-inference"]], "torch.Tensor.i0_": [[310, "torch-tensor-i0"]], "torch.Tensor.hsplit": [[306, "torch-tensor-hsplit"]], "torch.Tensor.is_shared": [[344, "torch-tensor-is-shared"]], "torch.Tensor.igamma": [[311, "torch-tensor-igamma"]], "torch.Tensor.index_put": [[322, "torch-tensor-index-put"]], "torch.Tensor.is_pinned": [[341, "torch-tensor-is-pinned"]], "torch.Tensor.inner": [[328, "torch-tensor-inner"]], "torch.Tensor.indices": [[327, "torch-tensor-indices"]], "torch.Tensor.is_quantized": [[342, "torch-tensor-is-quantized"]], "torch.Tensor.is_sparse_csr": [[347, "torch-tensor-is-sparse-csr"]], "torch.Tensor.i0": [[309, "torch-tensor-i0"]], "torch.Tensor.index_copy_": [[319, "torch-tensor-index-copy"]], "torch.Tensor.isreal": [[354, "torch-tensor-isreal"]], "torch.Tensor.index_add_": [[317, "torch-tensor-index-add"]], "torch.Tensor.is_conj": [[334, "torch-tensor-is-conj"]], "torch.Tensor.is_leaf": [[339, "torch-tensor-is-leaf"]], "torch.Tensor.is_signed": [[345, "torch-tensor-is-signed"]], "torch.Tensor.item": [[356, "torch-tensor-item"]], "torch.Tensor.index_fill_": [[321, "torch-tensor-index-fill"]], "torch.Tensor.index_copy": [[318, "torch-tensor-index-copy"]], "torch.Tensor.is_coalesced": [[332, "torch-tensor-is-coalesced"]], "torch.Tensor.is_floating_point": [[337, "torch-tensor-is-floating-point"]], "torch.Tensor.index_fill": [[320, "torch-tensor-index-fill"]], "torch.Tensor.isneginf": [[352, "torch-tensor-isneginf"]], "torch.Tensor.igamma_": [[312, "torch-tensor-igamma"]], "torch.Tensor.isposinf": [[353, "torch-tensor-isposinf"]], "torch.Tensor.index_reduce_": [[325, "torch-tensor-index-reduce"]], "torch.Tensor.int_repr": [[330, "torch-tensor-int-repr"]], "torch.Tensor.is_contiguous": [[335, "torch-tensor-is-contiguous"]], "torch.Tensor.is_set_to": [[343, "torch-tensor-is-set-to"]], "torch.Tensor.hypot_": [[308, "torch-tensor-hypot"]], "torch.Tensor.is_meta": [[340, "torch-tensor-is-meta"]], "torch.Tensor.isnan": [[351, "torch-tensor-isnan"]], "torch.Tensor.is_sparse": [[346, "torch-tensor-is-sparse"]], "torch.Tensor.igammac": [[313, "torch-tensor-igammac"]], "torch.Tensor.logaddexp": [[382, "torch-tensor-logaddexp"]], "torch.Tensor.logit_": [[395, "torch-tensor-logit"]], "torch.Tensor.lu_solve": [[401, "torch-tensor-lu-solve"]], "torch.Tensor.logsumexp": [[396, "torch-tensor-logsumexp"]], "torch.Tensor.masked_select": [[407, "torch-tensor-masked-select"]], "torch.Tensor.logical_not_": [[389, "torch-tensor-logical-not"]], "torch.Tensor.log1p": [[376, "torch-tensor-log1p"]], "torch.Tensor.logical_not": [[388, "torch-tensor-logical-not"]], "torch.Tensor.logit": [[394, "torch-tensor-logit"]], "torch.Tensor.logical_and": [[386, "torch-tensor-logical-and"]], "torch.Tensor.le_": [[364, "torch-tensor-le"]], "torch.Tensor.lt": [[398, "torch-tensor-lt"]], "torch.Tensor.itemsize": [[357, "torch-tensor-itemsize"]], "torch.Tensor.log1p_": [[377, "torch-tensor-log1p"]], "torch.Tensor.lcm_": [[360, "torch-tensor-lcm"]], "torch.Tensor.log2_": [[379, "torch-tensor-log2"]], "torch.Tensor.logical_or": [[390, "torch-tensor-logical-or"]], "torch.Tensor.masked_scatter": [[405, "torch-tensor-masked-scatter"]], "torch.Tensor.lu": [[400, "torch-tensor-lu"]], "torch.Tensor.le": [[363, "torch-tensor-le"]], "torch.Tensor.long": [[397, "torch-tensor-long"]], "torch.Tensor.ldexp_": [[362, "torch-tensor-ldexp"]], "torch.Tensor.logdet": [[385, "torch-tensor-logdet"]], "torch.Tensor.logical_and_": [[387, "torch-tensor-logical-and"]], "torch.Tensor.masked_fill_": [[404, "torch-tensor-masked-fill"]], "torch.Tensor.lerp": [[365, "torch-tensor-lerp"]], "torch.Tensor.logcumsumexp": [[384, "torch-tensor-logcumsumexp"]], "torch.Tensor.less": [[367, "torch-tensor-less"]], "torch.Tensor.less_equal_": [[370, "torch-tensor-less-equal"]], "torch.Tensor.log2": [[378, "torch-tensor-log2"]], "torch.Tensor.kthvalue": [[358, "torch-tensor-kthvalue"]], "torch.Tensor.log_": [[380, "torch-tensor-log"]], "torch.Tensor.ldexp": [[361, "torch-tensor-ldexp"]], "torch.Tensor.logical_or_": [[391, "torch-tensor-logical-or"]], "torch.Tensor.logical_xor_": [[393, "torch-tensor-logical-xor"]], "torch.Tensor.lgamma_": [[372, "torch-tensor-lgamma"]], "torch.Tensor.map_": [[402, "torch-tensor-map"]], "torch.Tensor.logaddexp2": [[383, "torch-tensor-logaddexp2"]], "torch.Tensor.masked_fill": [[403, "torch-tensor-masked-fill"]], "torch.Tensor.logical_xor": [[392, "torch-tensor-logical-xor"]], "torch.Tensor.lcm": [[359, "torch-tensor-lcm"]], "torch.Tensor.lgamma": [[371, "torch-tensor-lgamma"]], "torch.Tensor.less_equal": [[369, "torch-tensor-less-equal"]], "torch.Tensor.log10": [[374, "torch-tensor-log10"]], "torch.Tensor.log10_": [[375, "torch-tensor-log10"]], "torch.Tensor.lt_": [[399, "torch-tensor-lt"]], "torch.Tensor.log_normal_": [[381, "torch-tensor-log-normal"]], "torch.Tensor.log": [[373, "torch-tensor-log"]], "torch.Tensor.masked_scatter_": [[406, "torch-tensor-masked-scatter"]], "torch.Tensor.less_": [[368, "torch-tensor-less"]], "torch.Tensor.lerp_": [[366, "torch-tensor-lerp"]], "torch.vander": [[2001, "torch-vander"]], "torch.unsqueeze": [[1994, "torch-unsqueeze"]], "torch.xpu.initial_seed": [[2027, "torch-xpu-initial-seed"]], "torch.xpu.is_initialized": [[2029, "torch-xpu-is-initialized"]], "torch.xpu.empty_cache": [[2020, "torch-xpu-empty-cache"]], "torch.xpu.set_stream": [[2037, "torch-xpu-set-stream"]], "torch.xpu.set_rng_state": [[2035, "torch-xpu-set-rng-state"]], "device_of": [[2019, "device-of"], [1042, "device-of"]], "torch.unravel_index": [[1993, "torch-unravel-index"]], "torch.view_as_real": [[2006, "torch-view-as-real"]], "torch.var_mean": [[2003, "torch-var-mean"]], "torch.view_as_complex": [[2005, "torch-view-as-complex"]], "torch.xpu.get_device_name": [[2022, "torch-xpu-get-device-name"]], "torch.xpu.seed": [[2032, "torch-xpu-seed"]], "torch.xpu.manual_seed": [[2030, "torch-xpu-manual-seed"]], "torch.xpu.set_device": [[2034, "torch-xpu-set-device"]], "Stream": [[2013, "stream"], [92, "stream"], [1416, "stream"], [1023, "stream"], [1006, "stream"]], "torch.utils.get_cpp_backtrace": [[1997, "torch-utils-get-cpp-backtrace"]], "torch.utils.swap_tensors": [[2000, "torch-utils-swap-tensors"]], "torch.xpu.init": [[2026, "torch-xpu-init"]], "torch.xlogy": [[2011, "torch-xlogy"]], "torch.unique_consecutive": [[1992, "torch-unique-consecutive"]], "torch.utils.set_module": [[1999, "torch-utils-set-module"]], "torch.xpu.current_stream": [[2016, "torch-xpu-current-stream"]], "device": [[2017, "device"], [1421, "device"], [1040, "device"]], "torch.xpu.is_available": [[2028, "torch-xpu-is-available"]], "torch.xpu.seed_all": [[2033, "torch-xpu-seed-all"]], "torch.xpu.get_device_properties": [[2023, "torch-xpu-get-device-properties"]], "torch.xpu.current_device": [[2015, "torch-xpu-current-device"]], "torch.xpu.get_device_capability": [[2021, "torch-xpu-get-device-capability"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1996, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.xpu.stream": [[2038, "torch-xpu-stream"]], "Event": [[2012, "event"], [90, "event"], [1402, "event"], [1415, "event"], [1018, "event"]], "torch.xpu.get_rng_state_all": [[2025, "torch-xpu-get-rng-state-all"]], "torch.unflatten": [[1990, "torch-unflatten"]], "torch.use_deterministic_algorithms": [[1995, "torch-use-deterministic-algorithms"]], "torch.vmap": [[2007, "torch-vmap"]], "torch.vsplit": [[2008, "torch-vsplit"]], "torch.vstack": [[2009, "torch-vstack"]], "torch.xpu.manual_seed_all": [[2031, "torch-xpu-manual-seed-all"]], "torch.unique": [[1991, "torch-unique"]], "torch.xpu.get_rng_state": [[2024, "torch-xpu-get-rng-state"]], "StreamContext": [[2014, "streamcontext"], [1417, "streamcontext"], [1024, "streamcontext"], [1007, "streamcontext"]], "torch.xpu.synchronize": [[2039, "torch-xpu-synchronize"]], "torch.unbind": [[1989, "torch-unbind"]], "torch.var": [[2002, "torch-var"]], "torch.xpu.set_rng_state_all": [[2036, "torch-xpu-set-rng-state-all"]], "torch.xpu.device_count": [[2018, "torch-xpu-device-count"]], "torch.vdot": [[2004, "torch-vdot"]], "torch.where": [[2010, "torch-where"]], "torch.utils.rename_privateuse1_backend": [[1998, "torch-utils-rename-privateuse1-backend"]], "torch.overrides": [[2146, "module-torch.overrides"]], "Functions": [[2146, "functions"], [2046, "functions"], [2044, "functions"], [2099, "functions"], [2115, "functions"]], "Profiling to understand torch.compile performance": [[2143, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[2143, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[2143, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[2143, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[2143, "understanding-compilation-time"]], "Finding graph breaks: \u201cTorch-Compiled Region\u201d and \u201cCompiledFunction\u201d": [[2143, "finding-graph-breaks-torch-compiled-region-and-compiledfunction"]], "Operator Kernels": [[2143, "operator-kernels"]], "Launch overhead": [[2143, "launch-overhead"]], "Type Info": [[2150, "type-info"]], "torch.finfo": [[2150, "torch-finfo"]], "torch.iinfo": [[2150, "torch-iinfo"]], "Understanding CUDA Memory Usage": [[2147, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[2147, "generating-a-snapshot"]], "Using the visualizer": [[2147, "using-the-visualizer"]], "Active Memory Timeline": [[2147, "active-memory-timeline"]], "Allocator State History": [[2147, "allocator-state-history"]], "Snapshot API Reference": [[2147, "snapshot-api-reference"]], "Writing Graph Transformations on ATen IR": [[2144, "writing-graph-transformations-on-aten-ir"]], "Passes": [[2144, "passes"]], "Transformer": [[2144, "transformer"], [1592, "transformer"]], "One-to-One Pass": [[2144, "one-to-one-pass"]], "One-to-X Pass": [[2144, "one-to-x-pass"]], "One-to-None Pass": [[2144, "one-to-none-pass"]], "Utilizing Local Information": [[2144, "utilizing-local-information"]], "Subgraph Rewriter": [[2144, "subgraph-rewriter"]], "Pass Manager": [[2144, "pass-manager"]], "Partitioner": [[2144, "partitioner"]], "Subgraph Matcher": [[2144, "subgraph-matcher"]], "Capability Based Partitioner": [[2144, "capability-based-partitioner"]], "PyTorch 2.0 Troubleshooting": [[2145, "pytorch-2-0-troubleshooting"]], "Title": [[2145, "id1"]], "Diagnosing Runtime Errors": [[2145, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[2145, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[2145, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[2145, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[2145, "minifying-backend-compiler-errors"]], "Performance Profiling": [[2145, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[2145, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[2145, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[2145, "graph-breaks"], [52, "graph-breaks"], [2136, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[2145, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[2145, "excessive-recompilation"]], "Accuracy Debugging": [[2145, "accuracy-debugging"]], "Extended Debugging": [[2145, "extended-debugging"]], "Cold Start Timing and Cache Corruption Debugging": [[2145, "cold-start-timing-and-cache-corruption-debugging"]], "torch.utils": [[2151, "module-torch.utils"]], "torch.xpu": [[2152, "module-torch.xpu"]], "Random Number Generator": [[2152, "random-number-generator"], [17, "random-number-generator"]], "Streams and events": [[2152, "streams-and-events"], [2063, "streams-and-events"], [17, "streams-and-events"], [16, "streams-and-events"]], "Torch Environment Variables": [[2148, "torch-environment-variables"]], "PyTorch 2.0 Performance Dashboard": [[2142, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[2142, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[2142, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[2142, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[2142, "how-can-i-run-any-performance-test-locally"]], "PYTORCH ProcessGroupNCCL Environment Variables": [[2149, "pytorch-processgroupnccl-environment-variables"]], "torch.sub": [[1955, "torch-sub"]], "torch.sparse_csc_tensor": [[1944, "torch-sparse-csc-tensor"]], "torch.sym_not": [[1967, "torch-sym-not"]], "torch.sparse_bsc_tensor": [[1940, "torch-sparse-bsc-tensor"]], "torch.triu": [[1985, "torch-triu"]], "torch.stack": [[1951, "torch-stack"]], "torch.sym_int": [[1963, "torch-sym-int"]], "torch.tril_indices": [[1984, "torch-tril-indices"]], "torch.swapdims": [[1961, "torch-swapdims"]], "torch.subtract": [[1956, "torch-subtract"]], "torch.triangular_solve": [[1982, "torch-triangular-solve"]], "torch.sqrt": [[1947, "torch-sqrt"]], "torch.triu_indices": [[1986, "torch-triu-indices"]], "torch.trunc": [[1988, "torch-trunc"]], "torch.trapezoid": [[1980, "torch-trapezoid"]], "torch.svd": [[1958, "torch-svd"]], "torch.sym_max": [[1965, "torch-sym-max"]], "torch.tril": [[1983, "torch-tril"]], "torch.true_divide": [[1987, "torch-true-divide"]], "torch.sparse_coo_tensor": [[1943, "torch-sparse-coo-tensor"]], "torch.sparse.spdiags": [[1938, "torch-sparse-spdiags"]], "torch.square": [[1948, "torch-square"]], "torch.std_mean": [[1953, "torch-std-mean"]], "torch.squeeze": [[1949, "torch-squeeze"]], "torch.tan": [[1971, "torch-tan"]], "torch.tensor_split": [[1974, "torch-tensor-split"]], "torch.take_along_dim": [[1970, "torch-take-along-dim"]], "torch.split": [[1946, "torch-split"]], "torch.sum": [[1957, "torch-sum"]], "torch.svd_lowrank": [[1959, "torch-svd-lowrank"]], "torch.t": [[1968, "torch-t"]], "torch.tensor": [[1973, "torch-tensor"]], "torch.sparse_compressed_tensor": [[1942, "torch-sparse-compressed-tensor"]], "torch.sym_min": [[1966, "torch-sym-min"]], "torch.sspaddmm": [[1950, "torch-sspaddmm"]], "torch.stft": [[1954, "torch-stft"]], "torch.tensordot": [[1975, "torch-tensordot"]], "torch.tanh": [[1972, "torch-tanh"]], "torch.take": [[1969, "torch-take"]], "torch.sparse.sum": [[1939, "torch-sparse-sum"]], "torch.sym_float": [[1962, "torch-sym-float"]], "torch.trace": [[1978, "torch-trace"]], "torch.transpose": [[1979, "torch-transpose"]], "torch.sym_ite": [[1964, "torch-sym-ite"]], "torch.trapz": [[1981, "torch-trapz"]], "torch.tile": [[1976, "torch-tile"]], "torch.swapaxes": [[1960, "torch-swapaxes"]], "torch.topk": [[1977, "torch-topk"]], "torch.sparse_bsr_tensor": [[1941, "torch-sparse-bsr-tensor"]], "torch.sparse_csr_tensor": [[1945, "torch-sparse-csr-tensor"]], "torch.std": [[1952, "torch-std"]], "torch.select": [[1895, "torch-select"]], "torch.signal.windows.exponential": [[1914, "torch-signal-windows-exponential"]], "torch.sinh": [[1925, "torch-sinh"]], "torch.signal.windows.general_cosine": [[1916, "torch-signal-windows-general-cosine"]], "torch.sin": [[1923, "torch-sin"]], "torch.sigmoid": [[1909, "torch-sigmoid"]], "torch.signal.windows.blackman": [[1912, "torch-signal-windows-blackman"]], "torch.sinc": [[1924, "torch-sinc"]], "torch.set_float32_matmul_precision": [[1901, "torch-set-float32-matmul-precision"]], "torch.softmax": [[1929, "torch-softmax"]], "torch.rsqrt": [[1888, "torch-rsqrt"]], "torch.seed": [[1894, "torch-seed"]], "torch.smm": [[1928, "torch-smm"]], "torch.sparse.log_softmax": [[1934, "torch-sparse-log-softmax"]], "torch.sparse.mm": [[1935, "torch-sparse-mm"]], "torch.scatter": [[1890, "torch-scatter"]], "torch.signal.windows.general_hamming": [[1917, "torch-signal-windows-general-hamming"]], "torch.sparse.as_sparse_gradcheck": [[1932, "torch-sparse-as-sparse-gradcheck"]], "torch.signal.windows.bartlett": [[1911, "torch-signal-windows-bartlett"]], "torch.signal.windows.nuttall": [[1921, "torch-signal-windows-nuttall"]], "torch.set_default_device": [[1897, "torch-set-default-device"]], "torch.signbit": [[1922, "torch-signbit"]], "check_sparse_tensor_invariants": [[1933, "check-sparse-tensor-invariants"]], "torch.set_default_tensor_type": [[1899, "torch-set-default-tensor-type"]], "torch.save": [[1889, "torch-save"]], "torch.scatter_add": [[1891, "torch-scatter-add"]], "torch.sort": [[1930, "torch-sort"]], "torch.set_flush_denormal": [[1902, "torch-set-flush-denormal"]], "torch.sgn": [[1908, "torch-sgn"]], "torch.slice_scatter": [[1926, "torch-slice-scatter"]], "torch.set_num_interop_threads": [[1903, "torch-set-num-interop-threads"]], "torch.set_num_threads": [[1904, "torch-set-num-threads"]], "torch.sign": [[1910, "torch-sign"]], "torch.set_printoptions": [[1905, "torch-set-printoptions"]], "torch.signal.windows.cosine": [[1913, "torch-signal-windows-cosine"]], "torch.signal.windows.gaussian": [[1915, "torch-signal-windows-gaussian"]], "torch.set_warn_always": [[1907, "torch-set-warn-always"]], "torch.sparse.softmax": [[1937, "torch-sparse-softmax"]], "torch.scatter_reduce": [[1892, "torch-scatter-reduce"]], "torch.set_deterministic_debug_mode": [[1900, "torch-set-deterministic-debug-mode"]], "torch.signal.windows.hann": [[1919, "torch-signal-windows-hann"]], "torch.slogdet": [[1927, "torch-slogdet"]], "torch.set_rng_state": [[1906, "torch-set-rng-state"]], "torch.searchsorted": [[1893, "torch-searchsorted"]], "torch.select_scatter": [[1896, "torch-select-scatter"]], "torch.sparse.addmm": [[1931, "torch-sparse-addmm"]], "torch.row_stack": [[1887, "torch-row-stack"]], "torch.signal.windows.kaiser": [[1920, "torch-signal-windows-kaiser"]], "torch.set_default_dtype": [[1898, "torch-set-default-dtype"]], "torch.sparse.sampled_addmm": [[1936, "torch-sparse-sampled-addmm"]], "torch.signal.windows.hamming": [[1918, "torch-signal-windows-hamming"]], "torch.roll": [[1884, "torch-roll"]], "torch.repeat_interleave": [[1879, "torch-repeat-interleave"]], "torch.randint": [[1868, "torch-randint"]], "torch.resolve_conj": [[1881, "torch-resolve-conj"]], "torch.randperm": [[1872, "torch-randperm"]], "torch.quantized_max_pool2d": [[1863, "torch-quantized-max-pool2d"]], "SequentialLR": [[1842, "sequentiallr"]], "torch.result_type": [[1883, "torch-result-type"]], "torch.outer": [[1846, "torch-outer"]], "torch.polygamma": [[1852, "torch-polygamma"]], "torch.orgqr": [[1844, "torch-orgqr"]], "torch.rand": [[1866, "torch-rand"]], "torch.rot90": [[1885, "torch-rot90"]], "torch.round": [[1886, "torch-round"]], "torch.pca_lowrank": [[1847, "torch-pca-lowrank"]], "torch.rand_like": [[1867, "torch-rand-like"]], "torch.reciprocal": [[1876, "torch-reciprocal"]], "torch.qr": [[1857, "torch-qr"]], "torch.quantized_max_pool1d": [[1862, "torch-quantized-max-pool1d"]], "MultiplicativeLR": [[1838, "multiplicativelr"]], "OneCycleLR": [[1839, "onecyclelr"]], "torch.renorm": [[1878, "torch-renorm"]], "torch.randn_like": [[1871, "torch-randn-like"]], "StepLR": [[1843, "steplr"]], "torch.real": [[1875, "torch-real"]], "PolynomialLR": [[1840, "polynomiallr"]], "torch.quantize_per_tensor": [[1860, "torch-quantize-per-tensor"]], "torch.quantized_batch_norm": [[1861, "torch-quantized-batch-norm"]], "SobolEngine": [[1864, "sobolengine"]], "torch.positive": [[1853, "torch-positive"]], "torch.prod": [[1855, "torch-prod"]], "torch.quantize_per_channel": [[1859, "torch-quantize-per-channel"]], "torch.poisson": [[1850, "torch-poisson"]], "torch.randint_like": [[1869, "torch-randint-like"]], "torch.ormqr": [[1845, "torch-ormqr"]], "torch.reshape": [[1880, "torch-reshape"]], "torch.ravel": [[1874, "torch-ravel"]], "torch.polar": [[1851, "torch-polar"]], "ReduceLROnPlateau": [[1841, "reducelronplateau"]], "torch.remainder": [[1877, "torch-remainder"]], "torch.rad2deg": [[1865, "torch-rad2deg"]], "torch.pow": [[1854, "torch-pow"]], "torch.resolve_neg": [[1882, "torch-resolve-neg"]], "LinearLR": [[1836, "linearlr"]], "torch.permute": [[1848, "torch-permute"]], "torch.pinverse": [[1849, "torch-pinverse"]], "torch.promote_types": [[1856, "torch-promote-types"]], "torch.randn": [[1870, "torch-randn"]], "torch.range": [[1873, "torch-range"]], "torch.quantile": [[1858, "torch-quantile"]], "MultiStepLR": [[1837, "multisteplr"]], "torch.nn.functional.softmax": [[1712, "torch-nn-functional-softmax"]], "torch.nn.functional.rrelu_": [[1705, "torch-nn-functional-rrelu"]], "torch.nn.functional.max_unpool3d": [[1684, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.soft_margin_loss": [[1711, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.rms_norm": [[1703, "torch-nn-functional-rms-norm"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1730, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.functional.triplet_margin_loss": [[1722, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.smooth_l1_loss": [[1710, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.softmin": [[1713, "torch-nn-functional-softmin"]], "torch.nn.functional.tanhshrink": [[1718, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.upsample_bilinear": [[1726, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.sigmoid": [[1708, "torch-nn-functional-sigmoid"]], "torch.nn.functional.pixel_unshuffle": [[1697, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.normalize": [[1691, "torch-nn-functional-normalize"]], "torch.nn.functional.softshrink": [[1715, "torch-nn-functional-softshrink"]], "torch.nn.functional.threshold": [[1719, "torch-nn-functional-threshold"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1689, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.modules.module.register_module_backward_hook": [[1729, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1733, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.relu_": [[1702, "torch-nn-functional-relu"]], "torch.nn.functional.tanh": [[1717, "torch-nn-functional-tanh"]], "LazyModuleMixin": [[1728, "lazymodulemixin"]], "torch.nn.functional.nll_loss": [[1690, "torch-nn-functional-nll-loss"]], "torch.nn.functional.softplus": [[1714, "torch-nn-functional-softplus"]], "torch.nn.functional.pixel_shuffle": [[1696, "torch-nn-functional-pixel-shuffle"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1732, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.functional.unfold": [[1724, "torch-nn-functional-unfold"]], "torch.nn.functional.relu6": [[1701, "torch-nn-functional-relu6"]], "torch.nn.functional.mish": [[1685, "torch-nn-functional-mish"]], "torch.nn.functional.mse_loss": [[1686, "torch-nn-functional-mse-loss"]], "torch.nn.modules.module.register_module_forward_hook": [[1731, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.functional.scaled_dot_product_attention": [[1706, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.softsign": [[1716, "torch-nn-functional-softsign"]], "torch.nn.functional.rrelu": [[1704, "torch-nn-functional-rrelu"]], "torch.nn.functional.one_hot": [[1692, "torch-nn-functional-one-hot"]], "torch.nn.functional.multilabel_margin_loss": [[1688, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1721, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.functional.upsample": [[1725, "torch-nn-functional-upsample"]], "torch.nn.functional.max_unpool2d": [[1683, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.silu": [[1709, "torch-nn-functional-silu"]], "torch.nn.functional.poisson_nll_loss": [[1698, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.relu": [[1700, "torch-nn-functional-relu"]], "torch.nn.functional.pad": [[1693, "torch-nn-functional-pad"]], "torch.nn.functional.selu": [[1707, "torch-nn-functional-selu"]], "torch.nn.functional.pairwise_distance": [[1694, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.multi_margin_loss": [[1687, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.threshold_": [[1720, "torch-nn-functional-threshold"]], "torch.nn.functional.prelu": [[1699, "torch-nn-functional-prelu"]], "torch.nn.functional.pdist": [[1695, "torch-nn-functional-pdist"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1723, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.upsample_nearest": [[1727, "torch-nn-functional-upsample-nearest"]], "torch.nn.utils.convert_conv3d_weight_memory_format": [[1747, "torch-nn-utils-convert-conv3d-weight-memory-format"]], "torch.nn.utils.prune.identity": [[1771, "torch-nn-utils-prune-identity"]], "torch.nn.utils.parametrize.register_parametrization": [[1759, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.utils.parametrize.cached": [[1757, "torch-nn-utils-parametrize-cached"]], "torch.nn.utils.remove_weight_norm": [[1779, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.clip_grad_norm": [[1743, "torch-nn-utils-clip-grad-norm"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1783, "torch-nn-utils-rnn-pad-packed-sequence"]], "UninitializedParameter": [[1742, "uninitializedparameter"]], "Buffer": [[1739, "buffer"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1735, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.utils.parameters_to_vector": [[1752, "torch-nn-utils-parameters-to-vector"]], "Parameter": [[1740, "parameter"]], "torch.nn.utils.parametrizations.weight_norm": [[1755, "torch-nn-utils-parametrizations-weight-norm"]], "torch.nn.utils.parametrize.is_parametrized": [[1758, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.utils.remove_spectral_norm": [[1778, "torch-nn-utils-remove-spectral-norm"]], "L1Unstructured": [[1764, "l1unstructured"]], "UninitializedBuffer": [[1741, "uninitializedbuffer"]], "torch.nn.utils.prune.is_pruned": [[1772, "torch-nn-utils-prune-is-pruned"]], "RandomUnstructured": [[1768, "randomunstructured"]], "torch.nn.utils.fuse_conv_bn_weights": [[1749, "torch-nn-utils-fuse-conv-bn-weights"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1736, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.utils.prune.remove": [[1777, "torch-nn-utils-prune-remove"]], "torch.nn.utils.fuse_conv_bn_eval": [[1748, "torch-nn-utils-fuse-conv-bn-eval"]], "Identity": [[1763, "identity"], [1509, "identity"]], "DistributedDataParallel": [[1738, "distributeddataparallel"], [2080, "distributeddataparallel"]], "torch.nn.utils.prune.l1_unstructured": [[1773, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.prune.random_structured": [[1775, "torch-nn-utils-prune-random-structured"]], "BasePruningMethod": [[1761, "basepruningmethod"]], "torch.nn.utils.prune.global_unstructured": [[1770, "torch-nn-utils-prune-global-unstructured"]], "LnStructured": [[1765, "lnstructured"]], "torch.nn.utils.prune.custom_from_mask": [[1769, "torch-nn-utils-prune-custom-from-mask"]], "PruningContainer": [[1766, "pruningcontainer"]], "torch.nn.utils.convert_conv2d_weight_memory_format": [[1746, "torch-nn-utils-convert-conv2d-weight-memory-format"]], "ParametrizationList": [[1756, "parametrizationlist"]], "torch.nn.utils.rnn.pad_sequence": [[1784, "torch-nn-utils-rnn-pad-sequence"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1734, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.utils.clip_grad_value_": [[1745, "torch-nn-utils-clip-grad-value"]], "RandomStructured": [[1767, "randomstructured"]], "torch.nn.utils.clip_grad_norm_": [[1744, "torch-nn-utils-clip-grad-norm"]], "torch.nn.utils.parametrizations.orthogonal": [[1753, "torch-nn-utils-parametrizations-orthogonal"]], "PackedSequence": [[1780, "packedsequence"]], "torch.nn.utils.fuse_linear_bn_eval": [[1750, "torch-nn-utils-fuse-linear-bn-eval"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1760, "torch-nn-utils-parametrize-remove-parametrizations"]], "CustomFromMask": [[1762, "customfrommask"]], "torch.nn.utils.prune.ln_structured": [[1774, "torch-nn-utils-prune-ln-structured"]], "RMSNorm": [[1737, "rmsnorm"], [1563, "rmsnorm"]], "torch.nn.utils.prune.random_unstructured": [[1776, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.fuse_linear_bn_weights": [[1751, "torch-nn-utils-fuse-linear-bn-weights"]], "torch.nn.utils.rnn.pack_sequence": [[1782, "torch-nn-utils-rnn-pack-sequence"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1781, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.parametrizations.spectral_norm": [[1754, "torch-nn-utils-parametrizations-spectral-norm"]], "python.builtin": [[68, "python-builtin"]], "dynamic_shape_round": [[68, "dynamic-shape-round"], [75, "dynamic-shape-round"], [66, "dynamic-shape-round"]], "tensor_setattr": [[68, "tensor-setattr"], [66, "tensor-setattr"]], "type_reflection_method": [[68, "type-reflection-method"], [66, "type-reflection-method"]], "python.closure": [[69, "python-closure"]], "cond_closed_over_variable": [[69, "cond-closed-over-variable"], [74, "cond-closed-over-variable"], [66, "cond-closed-over-variable"]], "nested_function": [[69, "nested-function"], [66, "nested-function"]], "python.data-structure": [[72, "python-data-structure"]], "dictionary": [[72, "dictionary"], [66, "dictionary"]], "fn_with_kwargs": [[72, "fn-with-kwargs"], [66, "fn-with-kwargs"]], "list_contains": [[72, "list-contains"], [67, "list-contains"], [75, "list-contains"], [66, "list-contains"]], "list_unpack": [[72, "list-unpack"], [71, "list-unpack"], [66, "list-unpack"]], "torch.cond": [[74, "torch-cond"], [997, "torch-cond"]], "cond_branch_class_method": [[74, "cond-branch-class-method"], [75, "cond-branch-class-method"], [66, "cond-branch-class-method"]], "cond_branch_nested_function": [[74, "cond-branch-nested-function"], [75, "cond-branch-nested-function"], [66, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[74, "cond-branch-nonlocal-variables"], [75, "cond-branch-nonlocal-variables"], [66, "cond-branch-nonlocal-variables"]], "cond_operands": [[74, "cond-operands"], [75, "cond-operands"], [66, "cond-operands"]], "cond_predicate": [[74, "cond-predicate"], [75, "cond-predicate"], [66, "cond-predicate"]], "torch.Tensor.add": [[101, "torch-tensor-add"]], "torch.Tensor.acos_": [[98, "torch-tensor-acos"]], "torch.func Whirlwind Tour": [[61, "torch-func-whirlwind-tour"]], "What is torch.func?": [[61, "what-is-torch-func"]], "Why composable function transforms?": [[61, "why-composable-function-transforms"], [56, "why-composable-function-transforms"]], "What are the transforms?": [[61, "what-are-the-transforms"]], "grad() (gradient computation)": [[61, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[61, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[61, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[61, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[61, "jacrev-jacfwd-and-hessian"]], "torch.fx.experimental": [[65, "torch-fx-experimental"]], "torch.fx.experimental.symbolic_shapes": [[65, "module-torch.fx.experimental.symbolic_shapes"]], "torch.fx.experimental.proxy_tensor": [[65, "module-torch.fx.experimental.proxy_tensor"]], "torch.fft": [[54, "torch-fft"]], "Fast Fourier Transforms": [[54, "fast-fourier-transforms"]], "Helper Functions": [[54, "helper-functions"]], "torch.Tensor.absolute": [[95, "torch-tensor-absolute"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[89, "fxe0016-find-operator-overloads-in-onnx-registry"]], "torch.func API Reference": [[57, "module-torch.func"]], "Function Transforms": [[57, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[57, "utilities-for-working-with-torch-nn-modules"]], "FXE0007:fx-graph-to-onnx": [[81, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[81, "key-representations"]], "Additional Notes:": [[81, "additional-notes"]], "Train script": [[51, "train-script"]], "torch.dynamic-value": [[76, "torch-dynamic-value"]], "constrain_as_size_example": [[76, "constrain-as-size-example"], [77, "constrain-as-size-example"], [66, "constrain-as-size-example"]], "constrain_as_value_example": [[76, "constrain-as-value-example"], [77, "constrain-as-value-example"], [66, "constrain-as-value-example"]], "FXE0011:no-symbolic-function-for-call-function": [[84, "fxe0011-no-symbolic-function-for-call-function"]], "torch.Tensor.absolute_": [[96, "torch-tensor-absolute"]], "torch.func": [[56, "torch-func"]], "What are composable function transforms?": [[56, "what-are-composable-function-transforms"]], "Read More": [[56, "read-more"], [52, "read-more"], [2126, "read-more"]], "python.object-model": [[73, "python-object-model"]], "model_attr_mutation": [[73, "model-attr-mutation"], [66, "model-attr-mutation"]], "optional_input": [[73, "optional-input"], [66, "optional-input"]], "FXE0015:fx-node-insert-type-promotion": [[88, "fxe0015-fx-node-insert-type-promotion"]], "python.assert": [[67, "python-assert"]], "dynamic_shape_assert": [[67, "dynamic-shape-assert"], [66, "dynamic-shape-assert"]], "FXE0012:unsupported-fx-node-analysis": [[85, "fxe0012-unsupported-fx-node-analysis"]], "UX Limitations": [[60, "ux-limitations"]], "General limitations": [[60, "general-limitations"]], "torch.autograd APIs": [[60, "torch-autograd-apis"]], "vmap limitations": [[60, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[60, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[60, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[60, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[60, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[60, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[60, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[60, "randomness"]], "FXE0008:fx-node-to-onnx": [[82, "fxe0008-fx-node-to-onnx"]], "torch.Tensor.abs": [[93, "torch-tensor-abs"]], "python.context-manager": [[70, "python-context-manager"]], "null_context_manager": [[70, "null-context-manager"], [66, "null-context-manager"]], "torch.map": [[78, "torch-map"]], "dynamic_shape_map": [[78, "dynamic-shape-map"], [75, "dynamic-shape-map"], [66, "dynamic-shape-map"]], "torch.operator": [[80, "torch-operator"]], "unsupported_operator": [[80, "unsupported-operator"], [66, "unsupported-operator"]], "Migrating from functorch to torch.func": [[59, "migrating-from-functorch-to-torch-func"]], "function transforms": [[59, "function-transforms"]], "NN module utilities": [[59, "nn-module-utilities"]], "functorch.make_functional": [[59, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[59, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[59, "functorch-compile"]], "torch.fx": [[64, "torch-fx"]], "Overview": [[64, "module-torch.fx"], [52, "overview"], [19, "module-torch.cuda.tunable"], [18, "module-torch.cuda._sanitizer"], [2103, "module-torch.profiler"], [2097, "overview"], [2131, "overview"], [2096, "overview"]], "Writing Transformations": [[64, "writing-transformations"]], "A Quick Primer on Graphs": [[64, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[64, "graph-manipulation"]], "Direct Graph Manipulation": [[64, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[64, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[64, "graph-manipulation-examples"]], "Proxy/Retracing": [[64, "proxy-retracing"]], "The Interpreter Pattern": [[64, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[64, "examples-of-the-interpreter-pattern"]], "Debugging": [[64, "debugging"], [2044, "debugging"]], "Introduction": [[64, "introduction"], [2067, "introduction"], [2054, "introduction"]], "Common Pitfalls in Transform Authoring": [[64, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[64, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[64, "debugging-the-generated-code"]], "Use pdb": [[64, "use-pdb"]], "Print the Generated Code": [[64, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[64, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[64, "debugging-the-transformation"]], "Available Debuggers": [[64, "available-debuggers"]], "Limitations of Symbolic Tracing": [[64, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[64, "dynamic-control-flow"]], "Static Control Flow": [[64, "static-control-flow"]], "Non-torch Functions": [[64, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[64, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[64, "leaf-modules"]], "Miscellanea": [[64, "miscellanea"]], "API Reference": [[64, "api-reference"], [52, "module-torch.export"], [2060, "module-torch.monitor"], [19, "api-reference"], [18, "api-reference"], [33, "module-torch.distributed.pipelining"], [12, "api-reference"], [2103, "api-reference"], [2097, "api-reference"], [2102, "api-reference"]], "python.control-flow": [[71, "python-control-flow"]], "dynamic_shape_if_guard": [[71, "dynamic-shape-if-guard"], [75, "dynamic-shape-if-guard"], [66, "dynamic-shape-if-guard"]], "static_for_loop": [[71, "static-for-loop"], [66, "static-for-loop"]], "static_if": [[71, "static-if"], [66, "static-if"]], "torch.escape-hatch": [[77, "torch-escape-hatch"]], "assume_constant_result": [[77, "assume-constant-result"], [66, "assume-constant-result"]], "torch.Tensor.acosh": [[99, "torch-tensor-acosh"]], "FXE0014:find-opschema-matched-symbolic-function": [[87, "fxe0014-find-opschema-matched-symbolic-function"]], "torch.export": [[52, "torch-export"]], "Existing frameworks": [[52, "existing-frameworks"]], "Exporting a PyTorch Model": [[52, "exporting-a-pytorch-model"]], "An Example": [[52, "an-example"]], "Non-Strict Export": [[52, "non-strict-export"]], "Expressing Dynamism": [[52, "expressing-dynamism"]], "Serialization": [[52, "serialization"], [11, "serialization"], [2123, "serialization"]], "Specializations": [[52, "specializations"]], "Input Tensor Shapes": [[52, "input-tensor-shapes"]], "Python Primitives": [[52, "python-primitives"]], "Python Containers": [[52, "python-containers"]], "Limitations of torch.export": [[52, "limitations-of-torch-export"]], "Data/Shape-Dependent Control Flow": [[52, "data-shape-dependent-control-flow"]], "Missing Fake/Meta/Abstract Kernels for Operators": [[52, "missing-fake-meta-abstract-kernels-for-operators"]], "Additional Links for Export Users": [[52, null]], "Deep Dive for PyTorch Developers": [[52, null], [2126, null]], "Patching Batch Norm": [[58, "patching-batch-norm"]], "What\u2019s happening?": [[58, "what-s-happening"]], "How to fix": [[58, "how-to-fix"]], "Option 1: Change the BatchNorm": [[58, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[58, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[58, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[58, "option-4-eval-mode"]], "FullyShardedDataParallel": [[55, "module-torch.distributed.fsdp"]], "torch.dynamic-shape": [[75, "torch-dynamic-shape"]], "dynamic_shape_constructor": [[75, "dynamic-shape-constructor"], [66, "dynamic-shape-constructor"]], "dynamic_shape_slicing": [[75, "dynamic-shape-slicing"], [66, "dynamic-shape-slicing"]], "dynamic_shape_view": [[75, "dynamic-shape-view"], [66, "dynamic-shape-view"]], "scalar_output": [[75, "scalar-output"], [66, "scalar-output"]], "torch.Tensor.acos": [[97, "torch-tensor-acos"]], "torch.__future__": [[62, "module-torch.__future__"]], "torch.mutation": [[79, "torch-mutation"]], "user_input_mutation": [[79, "user-input-mutation"], [66, "user-input-mutation"]], "ExportDB": [[66, "exportdb"]], "Tags": [[66, null]], "Supported": [[66, "supported"]], "autograd_function": [[66, "autograd-function"]], "class_method": [[66, "class-method"]], "decorator": [[66, "decorator"]], "pytree_flatten": [[66, "pytree-flatten"]], "specialized_attribute": [[66, "specialized-attribute"]], "Not Supported Yet": [[66, "not-supported-yet"]], "FXE0010:fx-pass": [[83, "fxe0010-fx-pass"]], "torch.futures": [[63, "torch-futures"]], "torch.export IR Specification": [[53, "torch-export-ir-specification"]], "Assumptions": [[53, "assumptions"], [2111, "assumptions"]], "What is Export IR": [[53, "what-is-export-ir"]], "ExportedProgram": [[53, "exportedprogram"]], "Graph": [[53, "graph"]], "Node": [[53, "node"]], "call_function": [[53, "call-function"]], "Metadata": [[53, "metadata"]], "placeholder": [[53, "placeholder"]], "output": [[53, "output"]], "get_attr": [[53, "get-attr"]], "References": [[53, "references"], [2044, "references"]], "SymInt": [[53, "symint"]], "FakeTensor": [[53, "faketensor"]], "Pytree-able Types": [[53, "pytree-able-types"]], "Generator": [[91, "generator"]], "torch.Tensor.acosh_": [[100, "torch-tensor-acosh"]], "FXE0013:op-level-debugging": [[86, "fxe0013-op-level-debugging"]], "torch.Tensor.abs_": [[94, "torch-tensor-abs"]], "torch.nn.functional.lp_pool2d": [[1676, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.embedding_bag": [[1646, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.gaussian_nll_loss": [[1651, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.cosine_embedding_loss": [[1635, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.dropout3d": [[1642, "torch-nn-functional-dropout3d"]], "torch.nn.functional.dropout": [[1639, "torch-nn-functional-dropout"]], "torch.nn.functional.glu": [[1653, "torch-nn-functional-glu"]], "torch.nn.functional.margin_ranking_loss": [[1678, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.interpolate": [[1665, "torch-nn-functional-interpolate"]], "torch.nn.functional.group_norm": [[1655, "torch-nn-functional-group-norm"]], "torch.nn.functional.log_softmax": [[1673, "torch-nn-functional-log-softmax"]], "torch.nn.functional.embedding": [[1645, "torch-nn-functional-embedding"]], "torch.nn.functional.conv_transpose3d": [[1634, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.hinge_embedding_loss": [[1662, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.fractional_max_pool2d": [[1649, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.fold": [[1648, "torch-nn-functional-fold"]], "torch.nn.functional.l1_loss": [[1667, "torch-nn-functional-l1-loss"]], "torch.nn.functional.elu": [[1643, "torch-nn-functional-elu"]], "torch.nn.functional.cross_entropy": [[1637, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.hardtanh_": [[1661, "torch-nn-functional-hardtanh"]], "torch.nn.functional.lp_pool1d": [[1675, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.dropout2d": [[1641, "torch-nn-functional-dropout2d"]], "torch.nn.functional.hardsigmoid": [[1658, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.dropout1d": [[1640, "torch-nn-functional-dropout1d"]], "torch.nn.functional.fractional_max_pool3d": [[1650, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.grid_sample": [[1654, "torch-nn-functional-grid-sample"]], "torch.nn.functional.hardshrink": [[1657, "torch-nn-functional-hardshrink"]], "torch.nn.functional.leaky_relu": [[1669, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.huber_loss": [[1663, "torch-nn-functional-huber-loss"]], "torch.nn.functional.kl_div": [[1666, "torch-nn-functional-kl-div"]], "torch.nn.functional.leaky_relu_": [[1670, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.max_pool1d": [[1679, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.feature_alpha_dropout": [[1647, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.max_pool2d": [[1680, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.gumbel_softmax": [[1656, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.elu_": [[1644, "torch-nn-functional-elu"]], "torch.nn.functional.ctc_loss": [[1638, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.lp_pool3d": [[1677, "torch-nn-functional-lp-pool3d"]], "torch.nn.functional.hardswish": [[1659, "torch-nn-functional-hardswish"]], "torch.nn.functional.conv_transpose1d": [[1632, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.hardtanh": [[1660, "torch-nn-functional-hardtanh"]], "torch.nn.functional.local_response_norm": [[1672, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.max_unpool1d": [[1682, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.conv_transpose2d": [[1633, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.gelu": [[1652, "torch-nn-functional-gelu"]], "torch.nn.functional.cosine_similarity": [[1636, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.linear": [[1671, "torch-nn-functional-linear"]], "torch.nn.functional.instance_norm": [[1664, "torch-nn-functional-instance-norm"]], "torch.nn.functional.logsigmoid": [[1674, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.layer_norm": [[1668, "torch-nn-functional-layer-norm"]], "torch.nn.functional.max_pool3d": [[1681, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1615, "torch-nn-functional-adaptive-avg-pool3d"]], "Softshrink": [[1586, "softshrink"]], "SDPBackend": [[1607, "sdpbackend"]], "torch.nn.attention.bias.causal_upper_left": [[1611, "torch-nn-attention-bias-causal-upper-left"]], "Softplus": [[1585, "softplus"]], "TransformerEncoder": [[1595, "transformerencoder"]], "torch.nn.functional.binary_cross_entropy": [[1626, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.conv3d": [[1631, "torch-nn-functional-conv3d"]], "TransformerDecoder": [[1593, "transformerdecoder"]], "torch.nn.functional.avg_pool3d": [[1623, "torch-nn-functional-avg-pool3d"]], "Unflatten": [[1599, "unflatten"]], "TripletMarginWithDistanceLoss": [[1598, "tripletmarginwithdistanceloss"]], "Upsample": [[1601, "upsample"]], "Softmax": [[1582, "softmax"]], "torch.nn.functional.affine_grid": [[1619, "torch-nn-functional-affine-grid"]], "torch.nn.attention.bias.causal_lower_right": [[1610, "torch-nn-attention-bias-causal-lower-right"]], "torch.nn.functional.avg_pool1d": [[1621, "torch-nn-functional-avg-pool1d"]], "Tanhshrink": [[1590, "tanhshrink"]], "Threshold": [[1591, "threshold"]], "torch.nn.functional.avg_pool2d": [[1622, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.conv2d": [[1630, "torch-nn-functional-conv2d"]], "torch.nn.functional.alpha_dropout": [[1620, "torch-nn-functional-alpha-dropout"]], "ZeroPad1d": [[1604, "zeropad1d"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1627, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.bilinear": [[1625, "torch-nn-functional-bilinear"]], "Unfold": [[1600, "unfold"]], "TransformerDecoderLayer": [[1594, "transformerdecoderlayer"]], "TransformerEncoderLayer": [[1596, "transformerencoderlayer"]], "UpsamplingBilinear2d": [[1602, "upsamplingbilinear2d"]], "Softsign": [[1587, "softsign"]], "torch.nn.functional.adaptive_avg_pool2d": [[1614, "torch-nn-functional-adaptive-avg-pool2d"]], "TripletMarginLoss": [[1597, "tripletmarginloss"]], "torch.nn.functional.adaptive_max_pool1d": [[1616, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.adaptive_max_pool3d": [[1618, "torch-nn-functional-adaptive-max-pool3d"]], "Softmin": [[1584, "softmin"]], "Tanh": [[1589, "tanh"]], "UpsamplingNearest2d": [[1603, "upsamplingnearest2d"]], "CausalVariant": [[1609, "causalvariant"]], "SyncBatchNorm": [[1588, "syncbatchnorm"]], "ZeroPad2d": [[1605, "zeropad2d"]], "ZeroPad3d": [[1606, "zeropad3d"]], "torch.nn.attention.sdpa_kernel": [[1612, "torch-nn-attention-sdpa-kernel"]], "torch.nn.functional.batch_norm": [[1624, "torch-nn-functional-batch-norm"]], "torch.nn.functional.celu": [[1628, "torch-nn-functional-celu"]], "torch.nn.functional.conv1d": [[1629, "torch-nn-functional-conv1d"]], "torch.nn.attention.bias.CausalBias": [[1608, "torch-nn-attention-bias-causalbias"]], "torch.nn.functional.adaptive_max_pool2d": [[1617, "torch-nn-functional-adaptive-max-pool2d"]], "SoftMarginLoss": [[1581, "softmarginloss"]], "Softmax2d": [[1583, "softmax2d"]], "torch.nn.functional.adaptive_avg_pool1d": [[1613, "torch-nn-functional-adaptive-avg-pool1d"]], "GraphInfo": [[1801, "graphinfo"]], "LRScheduler": [[1834, "lrscheduler"]], "torch.nn.utils.vector_to_parameters": [[1790, "torch-nn-utils-vector-to-parameters"]], "torch.optim.Optimizer.step": [[1821, "torch-optim-optimizer-step"]], "torch.optim.Optimizer.register_step_post_hook": [[1818, "torch-optim-optimizer-register-step-post-hook"]], "Adagrad": [[1806, "adagrad"]], "Adafactor": [[1805, "adafactor"]], "torch.nn.utils.weight_norm": [[1791, "torch-nn-utils-weight-norm"]], "ChainedScheduler": [[1828, "chainedscheduler"]], "torch.normal": [[1795, "torch-normal"]], "torch.optim.Optimizer.add_param_group": [[1812, "torch-optim-optimizer-add-param-group"]], "SGD": [[1826, "sgd"]], "torch.ones_like": [[1799, "torch-ones-like"]], "torch.nn.utils.rnn.unpad_sequence": [[1786, "torch-nn-utils-rnn-unpad-sequence"]], "Adadelta": [[1804, "adadelta"]], "torch.nn.utils.rnn.unpack_sequence": [[1785, "torch-nn-utils-rnn-unpack-sequence"]], "RMSprop": [[1824, "rmsprop"]], "ConstantLR": [[1829, "constantlr"]], "CosineAnnealingLR": [[1830, "cosineannealinglr"]], "LambdaLR": [[1835, "lambdalr"]], "torch.norm": [[1794, "torch-norm"]], "NAdam": [[1811, "nadam"]], "CyclicLR": [[1832, "cycliclr"]], "torch.optim.Optimizer.register_load_state_dict_pre_hook": [[1815, "torch-optim-optimizer-register-load-state-dict-pre-hook"]], "torch.not_equal": [[1796, "torch-not-equal"]], "torch.optim.Optimizer.register_state_dict_pre_hook": [[1817, "torch-optim-optimizer-register-state-dict-pre-hook"]], "torch.nn.utils.skip_init": [[1787, "torch-nn-utils-skip-init"]], "torch.nonzero": [[1793, "torch-nonzero"]], "torch.numel": [[1797, "torch-numel"]], "AdamW": [[1808, "adamw"]], "LBFGS": [[1810, "lbfgs"]], "ExponentialLR": [[1833, "exponentiallr"]], "ASGD": [[1803, "asgd"]], "torch.optim.Optimizer.load_state_dict": [[1813, "torch-optim-optimizer-load-state-dict"]], "JitScalarType": [[1800, "jitscalartype"]], "torch.optim.Optimizer.state_dict": [[1820, "torch-optim-optimizer-state-dict"]], "Rprop": [[1825, "rprop"]], "torch.optim.Optimizer.register_load_state_dict_post_hook": [[1814, "torch-optim-optimizer-register-load-state-dict-post-hook"]], "CosineAnnealingWarmRestarts": [[1831, "cosineannealingwarmrestarts"]], "VerificationOptions": [[1802, "verificationoptions"]], "no_grad": [[1792, "no-grad"]], "Adam": [[1807, "adam"]], "torch.nn.utils.stateless.functional_call": [[1789, "torch-nn-utils-stateless-functional-call"]], "torch.ones": [[1798, "torch-ones"]], "torch.optim.Optimizer.zero_grad": [[1822, "torch-optim-optimizer-zero-grad"]], "torch.nn.utils.spectral_norm": [[1788, "torch-nn-utils-spectral-norm"]], "torch.optim.Optimizer.register_state_dict_post_hook": [[1816, "torch-optim-optimizer-register-state-dict-post-hook"]], "Adamax": [[1809, "adamax"]], "SparseAdam": [[1827, "sparseadam"]], "torch.optim.Optimizer.register_step_pre_hook": [[1819, "torch-optim-optimizer-register-step-pre-hook"]], "RAdam": [[1823, "radam"]], "MaxPool1d": [[1541, "maxpool1d"]], "Mish": [[1547, "mish"]], "RNNCell": [[1566, "rnncell"], [770, "rnncell"]], "ReplicationPad3d": [[1575, "replicationpad3d"]], "ReLU6": [[1569, "relu6"], [763, "relu6"]], "ModuleDict": [[1549, "moduledict"]], "LeakyReLU": [[1534, "leakyrelu"], [760, "leakyrelu"]], "MultiheadAttention": [[1554, "multiheadattention"], [740, "multiheadattention"]], "ParameterDict": [[1558, "parameterdict"]], "RNN": [[1564, "rnn"]], "MultiLabelMarginLoss": [[1551, "multilabelmarginloss"]], "ReflectionPad3d": [[1572, "reflectionpad3d"]], "MaxUnpool1d": [[1544, "maxunpool1d"]], "LazyInstanceNorm1d": [[1530, "lazyinstancenorm1d"]], "PoissonNLLLoss": [[1562, "poissonnllloss"]], "LogSigmoid": [[1537, "logsigmoid"]], "SmoothL1Loss": [[1580, "smoothl1loss"]], "LazyLinear": [[1533, "lazylinear"]], "ReplicationPad2d": [[1574, "replicationpad2d"]], "ReLU": [[1568, "relu"]], "MaxPool2d": [[1542, "maxpool2d"]], "Linear": [[1535, "linear"], [769, "linear"], [738, "linear"], [761, "linear"], [737, "linear"]], "Sequential": [[1577, "sequential"]], "SELU": [[1576, "selu"]], "SiLU": [[1578, "silu"]], "LocalResponseNorm": [[1536, "localresponsenorm"]], "MultiLabelSoftMarginLoss": [[1552, "multilabelsoftmarginloss"]], "ReflectionPad1d": [[1570, "reflectionpad1d"]], "Sigmoid": [[1579, "sigmoid"], [764, "sigmoid"]], "MaxPool3d": [[1543, "maxpool3d"]], "PReLU": [[1556, "prelu"]], "RReLU": [[1567, "rrelu"]], "PairwiseDistance": [[1557, "pairwisedistance"]], "LogSoftmax": [[1538, "logsoftmax"]], "MarginRankingLoss": [[1540, "marginrankingloss"]], "PixelShuffle": [[1560, "pixelshuffle"]], "ParameterList": [[1559, "parameterlist"]], "MaxUnpool3d": [[1546, "maxunpool3d"]], "NLLLoss": [[1555, "nllloss"]], "MSELoss": [[1539, "mseloss"]], "MaxUnpool2d": [[1545, "maxunpool2d"]], "Module": [[1548, "module"]], "LazyInstanceNorm2d": [[1531, "lazyinstancenorm2d"]], "ModuleList": [[1550, "modulelist"]], "ReplicationPad1d": [[1573, "replicationpad1d"]], "RNNBase": [[1565, "rnnbase"]], "ReflectionPad2d": [[1571, "reflectionpad2d"]], "MultiMarginLoss": [[1553, "multimarginloss"]], "PixelUnshuffle": [[1561, "pixelunshuffle"]], "LazyInstanceNorm3d": [[1532, "lazyinstancenorm3d"]], "torch.mtia.synchronize": [[1432, "torch-mtia-synchronize"]], "CircularPad1d": [[1469, "circularpad1d"]], "torch.mtia.set_rng_state": [[1429, "torch-mtia-set-rng-state"]], "torch.mtia.set_stream": [[1430, "torch-mtia-set-stream"]], "Conv2d": [[1476, "conv2d"], [744, "conv2d"], [735, "conv2d"]], "torch.mv": [[1436, "torch-mv"]], "CircularPad3d": [[1471, "circularpad3d"]], "torch.nanmean": [[1439, "torch-nanmean"]], "torch.nansum": [[1442, "torch-nansum"]], "AdaptiveMaxPool1d": [[1453, "adaptivemaxpool1d"]], "BCEWithLogitsLoss": [[1461, "bcewithlogitsloss"]], "torch.ne": [[1445, "torch-ne"]], "Conv1d": [[1475, "conv1d"], [743, "conv1d"]], "torch.narrow": [[1443, "torch-narrow"]], "AdaptiveAvgPool3d": [[1451, "adaptiveavgpool3d"]], "CircularPad2d": [[1470, "circularpad2d"]], "ChannelShuffle": [[1468, "channelshuffle"]], "AvgPool2d": [[1458, "avgpool2d"]], "AdaptiveMaxPool2d": [[1454, "adaptivemaxpool2d"]], "torch.nextafter": [[1448, "torch-nextafter"]], "torch.mul": [[1433, "torch-mul"]], "AvgPool3d": [[1459, "avgpool3d"]], "AdaptiveMaxPool3d": [[1455, "adaptivemaxpool3d"]], "CELU": [[1466, "celu"]], "torch.nanmedian": [[1440, "torch-nanmedian"]], "ConstantPad2d": [[1473, "constantpad2d"]], "Bilinear": [[1465, "bilinear"]], "AdaptiveAvgPool2d": [[1450, "adaptiveavgpool2d"]], "CTCLoss": [[1467, "ctcloss"]], "AvgPool1d": [[1457, "avgpool1d"]], "AdaptiveAvgPool1d": [[1449, "adaptiveavgpool1d"]], "BCELoss": [[1460, "bceloss"]], "BatchNorm1d": [[1462, "batchnorm1d"]], "ConstantPad1d": [[1472, "constantpad1d"]], "ConvTranspose1d": [[1478, "convtranspose1d"], [746, "convtranspose1d"]], "BatchNorm3d": [[1464, "batchnorm3d"], [742, "batchnorm3d"]], "ConstantPad3d": [[1474, "constantpad3d"]], "torch.mtia.set_device": [[1428, "torch-mtia-set-device"]], "torch.multinomial": [[1434, "torch-multinomial"]], "AdaptiveLogSoftmaxWithLoss": [[1452, "adaptivelogsoftmaxwithloss"]], "Conv3d": [[1477, "conv3d"], [745, "conv3d"], [736, "conv3d"]], "torch.nan_to_num": [[1438, "torch-nan-to-num"]], "BatchNorm2d": [[1463, "batchnorm2d"], [741, "batchnorm2d"]], "torch.multiply": [[1435, "torch-multiply"]], "torch.mtia.stream": [[1431, "torch-mtia-stream"]], "torch.nanquantile": [[1441, "torch-nanquantile"]], "torch.narrow_copy": [[1444, "torch-narrow-copy"]], "torch.neg": [[1446, "torch-neg"]], "torch.negative": [[1447, "torch-negative"]], "AlphaDropout": [[1456, "alphadropout"]], "torch.mvlgamma": [[1437, "torch-mvlgamma"]], "Hardshrink": [[1503, "hardshrink"]], "CosineSimilarity": [[1482, "cosinesimilarity"]], "CrossEntropyLoss": [[1483, "crossentropyloss"]], "InstanceNorm1d": [[1510, "instancenorm1d"], [756, "instancenorm1d"]], "GRUCell": [[1500, "grucell"], [766, "grucell"]], "ConvTranspose2d": [[1479, "convtranspose2d"], [747, "convtranspose2d"]], "GRU": [[1499, "gru"], [765, "gru"]], "Fold": [[1494, "fold"]], "Embedding": [[1490, "embedding"], [750, "embedding"]], "DataParallel": [[1484, "dataparallel"]], "LSTM": [[1518, "lstm"], [767, "lstm"], [739, "lstm"]], "LazyConvTranspose1d": [[1527, "lazyconvtranspose1d"]], "L1Loss": [[1514, "l1loss"]], "Dropout2d": [[1487, "dropout2d"]], "Dropout1d": [[1486, "dropout1d"]], "HuberLoss": [[1508, "huberloss"]], "InstanceNorm2d": [[1511, "instancenorm2d"], [757, "instancenorm2d"]], "KLDivLoss": [[1513, "kldivloss"]], "LazyConvTranspose2d": [[1528, "lazyconvtranspose2d"]], "Dropout": [[1485, "dropout"]], "InstanceNorm3d": [[1512, "instancenorm3d"], [758, "instancenorm3d"]], "HingeEmbeddingLoss": [[1507, "hingeembeddingloss"]], "LPPool2d": [[1516, "lppool2d"]], "LazyConv2d": [[1525, "lazyconv2d"]], "GaussianNLLLoss": [[1501, "gaussiannllloss"]], "LazyConv3d": [[1526, "lazyconv3d"]], "GroupNorm": [[1502, "groupnorm"], [754, "groupnorm"]], "LPPool1d": [[1515, "lppool1d"]], "LPPool3d": [[1517, "lppool3d"]], "Hardswish": [[1505, "hardswish"], [755, "hardswish"]], "EmbeddingBag": [[1491, "embeddingbag"], [751, "embeddingbag"]], "ConvTranspose3d": [[1480, "convtranspose3d"], [748, "convtranspose3d"]], "LazyBatchNorm3d": [[1523, "lazybatchnorm3d"]], "Hardsigmoid": [[1504, "hardsigmoid"]], "FractionalMaxPool2d": [[1495, "fractionalmaxpool2d"]], "Flatten": [[1493, "flatten"]], "LazyConv1d": [[1524, "lazyconv1d"]], "LSTMCell": [[1519, "lstmcell"], [768, "lstmcell"]], "FractionalMaxPool3d": [[1496, "fractionalmaxpool3d"]], "GLU": [[1498, "glu"]], "Hardtanh": [[1506, "hardtanh"]], "LayerNorm": [[1520, "layernorm"], [759, "layernorm"]], "LazyBatchNorm2d": [[1522, "lazybatchnorm2d"]], "CosineEmbeddingLoss": [[1481, "cosineembeddingloss"]], "GELU": [[1497, "gelu"]], "LazyConvTranspose3d": [[1529, "lazyconvtranspose3d"]], "LazyBatchNorm1d": [[1521, "lazybatchnorm1d"]], "FeatureAlphaDropout": [[1492, "featurealphadropout"]], "Dropout3d": [[1488, "dropout3d"]], "ELU": [[1489, "elu"], [749, "elu"]], "torch.msort": [[1413, "torch-msort"]], "torch.mtia.default_stream": [[1420, "torch-mtia-default-stream"]], "torch.mtia.DeferredMtiaCallError": [[1414, "torch-mtia-deferredmtiacallerror"]], "torch.mps.get_rng_state": [[1403, "torch-mps-get-rng-state"]], "torch.mtia.is_initialized": [[1426, "torch-mtia-is-initialized"]], "torch.lt": [[1378, "torch-lt"]], "torch.lu_solve": [[1380, "torch-lu-solve"]], "torch.masked_select": [[1383, "torch-masked-select"]], "torch.mode": [[1395, "torch-mode"]], "torch.mps.set_per_process_memory_fraction": [[1410, "torch-mps-set-per-process-memory-fraction"]], "torch.median": [[1390, "torch-median"]], "torch.maximum": [[1388, "torch-maximum"]], "torch.mtia.memory_stats": [[1427, "torch-mtia-memory-stats"]], "torch.logsumexp": [[1377, "torch-logsumexp"]], "torch.matmul": [[1384, "torch-matmul"]], "torch.mps.profiler.profile": [[1405, "torch-mps-profiler-profile"]], "torch.mtia.get_rng_state": [[1423, "torch-mtia-get-rng-state"]], "torch.matrix_power": [[1386, "torch-matrix-power"]], "torch.mps.manual_seed": [[1404, "torch-mps-manual-seed"]], "torch.mps.device_count": [[1399, "torch-mps-device-count"]], "torch.mps.set_rng_state": [[1411, "torch-mps-set-rng-state"]], "torch.matrix_exp": [[1385, "torch-matrix-exp"]], "torch.mtia.device_count": [[1422, "torch-mtia-device-count"]], "torch.mtia.init": [[1424, "torch-mtia-init"]], "torch.max": [[1387, "torch-max"]], "torch.mps.profiler.start": [[1406, "torch-mps-profiler-start"]], "torch.mps.seed": [[1409, "torch-mps-seed"]], "torch.minimum": [[1393, "torch-minimum"]], "torch.mtia.current_device": [[1418, "torch-mtia-current-device"]], "torch.mean": [[1389, "torch-mean"]], "torch.min": [[1392, "torch-min"]], "torch.manual_seed": [[1382, "torch-manual-seed"]], "torch.lu_unpack": [[1381, "torch-lu-unpack"]], "torch.mps.synchronize": [[1412, "torch-mps-synchronize"]], "torch.mtia.current_stream": [[1419, "torch-mtia-current-stream"]], "torch.mps.recommended_max_memory": [[1408, "torch-mps-recommended-max-memory"]], "torch.lu": [[1379, "torch-lu"]], "torch.mps.profiler.stop": [[1407, "torch-mps-profiler-stop"]], "torch.mtia.is_available": [[1425, "torch-mtia-is-available"]], "torch.mps.driver_allocated_memory": [[1400, "torch-mps-driver-allocated-memory"]], "torch.mps.current_allocated_memory": [[1398, "torch-mps-current-allocated-memory"]], "torch.movedim": [[1397, "torch-movedim"]], "torch.mps.empty_cache": [[1401, "torch-mps-empty-cache"]], "torch.mm": [[1394, "torch-mm"]], "torch.moveaxis": [[1396, "torch-moveaxis"]], "torch.meshgrid": [[1391, "torch-meshgrid"]], "Gradcheck mechanics": [[2086, "gradcheck-mechanics"]], "Notations and background information": [[2086, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[2086, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[2086, "real-to-real-functions"]], "Default real input numerical evaluation": [[2086, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[2086, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[2086, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[2086, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[2086, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[2086, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[2086, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[2086, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[2086, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[2086, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[2086, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[2086, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[2086, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[2086, "gradgradcheck-implementation"]], "Extending torch.func with autograd.Function": [[2082, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[2082, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[2082, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[2082, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[2082, "limitations-and-gotchas"]], "torch.vmap() Support": [[2082, "torch-vmap-support"]], "Automatically generate a vmap rule": [[2082, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[2082, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[2082, "torch-func-jvp-support"]], "torch.zeros": [[2040, "torch-zeros"]], "torch.nn.attention.bias": [[2070, "module-torch.nn.attention.bias"]], "CausalBias": [[2070, "causalbias"]], "PyTorch Custom Operators Landing Page": [[2079, "pytorch-custom-operators-landing-page"]], "Multiprocessing package - torch.multiprocessing": [[2064, "module-torch.multiprocessing"]], "Strategy management": [[2064, "strategy-management"]], "Sharing CUDA tensors": [[2064, "sharing-cuda-tensors"]], "Sharing strategies": [[2064, "sharing-strategies"]], "File descriptor - file_descriptor": [[2064, "file-descriptor-file-descriptor"]], "File system - file_system": [[2064, "file-system-file-system"]], "Spawning subprocesses": [[2064, "spawning-subprocesses"]], "Frequently Asked Questions": [[2083, "frequently-asked-questions"], [2044, "frequently-asked-questions"], [7, "frequently-asked-questions"], [2099, "frequently-asked-questions"], [2136, "frequently-asked-questions"], [2104, "frequently-asked-questions"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[2083, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[2083, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[2083, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[2083, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[2083, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "torch.nested": [[2067, "module-torch.nested"]], "Construction": [[2067, "construction"], [2114, "construction"]], "size": [[2067, "size"]], "unbind": [[2067, "unbind"]], "Nested tensor constructor and conversion functions": [[2067, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[2067, "supported-operations"], [2114, "supported-operations"]], "torch.masked": [[2054, "torch-masked"]], "Motivation": [[2054, "motivation"], [2135, "motivation"], [2132, "motivation"]], "What is a MaskedTensor?": [[2054, "what-is-a-maskedtensor"]], "Supported Operators": [[2054, "supported-operators"]], "Unary Operators": [[2054, "unary-operators"]], "Binary Operators": [[2054, "binary-operators"]], "Reductions": [[2054, "reductions"]], "View and select functions": [[2054, "view-and-select-functions"]], "torch._logging": [[2053, "torch-logging"]], "CUDA semantics": [[2078, "cuda-semantics"]], "TensorFloat-32 (TF32) on Ampere (and later) devices": [[2078, "tensorfloat-32-tf32-on-ampere-and-later-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[2078, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[2078, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[2078, "asynchronous-execution"]], "CUDA streams": [[2078, "cuda-streams"]], "Stream semantics of backward passes": [[2078, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[2078, "bc-note-using-grads-on-the-default-stream"]], "Memory management": [[2078, "memory-management"], [2087, "memory-management"], [17, "memory-management"]], "Optimizing memory usage  with PYTORCH_CUDA_ALLOC_CONF": [[2078, "optimizing-memory-usage-with-pytorch-cuda-alloc-conf"]], "Using custom memory allocators for CUDA": [[2078, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[2078, "cublas-workspaces"]], "cuFFT plan cache": [[2078, "cufft-plan-cache"]], "Just-in-Time Compilation": [[2078, "just-in-time-compilation"]], "Best practices": [[2078, "best-practices"]], "Device-agnostic code": [[2078, "device-agnostic-code"]], "Use pinned memory buffers": [[2078, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[2078, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[2078, "cuda-graphs"]], "Why CUDA Graphs?": [[2078, "why-cuda-graphs"]], "PyTorch API": [[2078, "pytorch-api"]], "Constraints": [[2078, "constraints"], [35, "module-torch.distributions.constraints"]], "Non-constraints": [[2078, "non-constraints"]], "Whole-network capture": [[2078, "whole-network-capture"]], "Partial-network capture": [[2078, "partial-network-capture"]], "Usage with torch.cuda.amp": [[2078, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[2078, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[2078, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[2078, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[2078, "id5"]], "Graph memory management": [[2078, "graph-memory-management"]], "Sharing memory across captures": [[2078, "sharing-memory-across-captures"]], "torch.nn.attention": [[2069, "module-torch.nn.attention"]], "Utils": [[2069, "utils"]], "Submodules": [[2069, "submodules"]], "Broadcasting semantics": [[2076, "broadcasting-semantics"]], "General semantics": [[2076, "general-semantics"]], "In-place semantics": [[2076, "in-place-semantics"]], "Backwards compatibility": [[2076, "backwards-compatibility"]], "Pytorch 2.4: Getting Started on Intel GPU": [[2085, "pytorch-2-4-getting-started-on-intel-gpu"]], "Hardware Prerequisites": [[2085, "hardware-prerequisites"]], "Software Prerequisites": [[2085, "software-prerequisites"]], "Set up Environment": [[2085, "set-up-environment"]], "Build from source": [[2085, "build-from-source"]], "Check availability for Intel GPU": [[2085, "check-availability-for-intel-gpu"]], "Minimum Code Change": [[2085, "minimum-code-change"]], "Examples": [[2085, "examples"], [42, "examples"], [12, "examples"], [2131, "examples"]], "Inference Examples": [[2085, "inference-examples"]], "Inference with FP32": [[2085, "inference-with-fp32"]], "Inference with AMP": [[2085, "inference-with-amp"]], "Inference with torch.compile": [[2085, "inference-with-torch-compile"]], "Training Examples": [[2085, "training-examples"]], "Train with FP32": [[2085, "train-with-fp32"]], "Train with AMP": [[2085, "train-with-amp"]], "MPS backend": [[2090, "mps-backend"]], "torch.mps": [[2061, "module-torch.mps"]], "MPS Profiler": [[2061, "mps-profiler"]], "MPS Event": [[2061, "mps-event"]], "torch.utils.mobile_optimizer": [[2057, "torch-utils-mobile-optimizer"]], "HIP (ROCm) semantics": [[2087, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[2087, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[2087, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[2087, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[2087, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[2087, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[2087, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[2087, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[2087, "enabling-kernel-asserts"]], "TorchScript Language Reference": [[2046, "torchscript-language-reference"], [2047, "torchscript-language-reference"]], "Types": [[2046, "supported-type"], [2099, "types"]], "Unsupported Typing Constructs": [[2046, "unsupported-typing-constructs"], [2047, "unsupported-typing-constructs"]], "Default Types": [[2046, "default-types"]], "Optional Type Refinement": [[2046, "optional-type-refinement"]], "TorchScript Classes": [[2046, "id2"], [2044, "torchscript-classes"]], "TorchScript Enums": [[2046, "id4"]], "Named Tuples": [[2046, "named-tuples"]], "Iterables": [[2046, "iterables"]], "Expressions": [[2046, "expressions"], [2047, "expressions"]], "Literals": [[2046, "literals"], [2047, "literals"]], "List Construction": [[2046, "list-construction"]], "Tuple Construction": [[2046, "tuple-construction"]], "Dict Construction": [[2046, "dict-construction"]], "Variables": [[2046, "variables"], [2044, "variables"]], "Arithmetic Operators": [[2046, "arithmetic-operators"]], "Comparison Operators": [[2046, "comparison-operators"]], "Logical Operators": [[2046, "logical-operators"]], "Subscripts and Slicing": [[2046, "subscripts-and-slicing"]], "Function Calls": [[2046, "function-calls"]], "Method Calls": [[2046, "method-calls"]], "Ternary Expressions": [[2046, "ternary-expressions"]], "Casts": [[2046, "casts"]], "Accessing Module Parameters": [[2046, "accessing-module-parameters"]], "Statements": [[2046, "statements"]], "Simple Assignments": [[2046, "simple-assignments"]], "Pattern Matching Assignments": [[2046, "pattern-matching-assignments"]], "Print Statements": [[2046, "print-statements"]], "If Statements": [[2046, "if-statements"]], "While Loops": [[2046, "while-loops"]], "For loops with range": [[2046, "for-loops-with-range"]], "For loops over tuples": [[2046, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[2046, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[2046, "break-and-continue"]], "Return": [[2046, "return"]], "Variable Resolution": [[2046, "variable-resolution"]], "Use of Python Values": [[2046, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[2046, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[2046, "python-defined-constants"]], "Module Attributes": [[2046, "module-attributes"]], "Terminology": [[2047, "terminology"]], "Type System": [[2047, "id1"]], "TorchScript Types": [[2047, "torchscript-types"]], "Meta Types": [[2047, "meta-types"]], "Any Type": [[2047, "any-type"]], "Operators Supported for Any Type": [[2047, "operators-supported-for-any-type"]], "Design Notes": [[2047, "design-notes"], [2109, "design-notes"]], "Primitive Types": [[2047, "primitive-types"]], "Structural Types": [[2047, "structural-types"]], "Nominal Types": [[2047, "nominal-types"]], "Built-in Class": [[2047, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[2047, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[2047, "custom-class"]], "Enum Type": [[2047, "enum-type"]], "TorchScript Module Class": [[2047, "torchscript-module-class"]], "Module Instance Class": [[2047, "module-instance-class"]], "Type Annotation": [[2047, "type-annotation"]], "When to Annotate Types": [[2047, "when-to-annotate-types"]], "Annotate Function Signature": [[2047, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[2047, "annotate-variables-and-data-attributes"]], "Local Variables": [[2047, "local-variables"]], "Instance Data Attributes": [[2047, "instance-data-attributes"]], "Type Annotation APIs": [[2047, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[2047, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[2047, "type-annotation-appendix"]], "TorchScript Type System Definition": [[2047, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[2047, "arithmetic-conversions"]], "Atoms": [[2047, "atoms"]], "Identifiers": [[2047, "identifiers"]], "Parenthesized Forms": [[2047, "parenthesized-forms"]], "List and Dictionary Displays": [[2047, "list-and-dictionary-displays"]], "Primaries": [[2047, "primaries"]], "Attribute References": [[2047, "attribute-references"]], "Subscriptions": [[2047, "subscriptions"]], "Slicings": [[2047, "slicings"]], "Calls": [[2047, "calls"]], "Power Operator": [[2047, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[2047, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[2047, "binary-arithmetic-operations"]], "Shifting Operations": [[2047, "shifting-operations"]], "Binary Bitwise Operations": [[2047, "binary-bitwise-operations"]], "Comparisons": [[2047, "comparisons"], [2130, "comparisons"]], "Value Comparisons": [[2047, "value-comparisons"]], "Membership Test Operations": [[2047, "membership-test-operations"]], "Identity Comparisons": [[2047, "identity-comparisons"]], "Boolean Operations": [[2047, "boolean-operations"]], "Conditional Expressions": [[2047, "conditional-expressions"]], "Expression Lists": [[2047, "expression-lists"]], "Simple Statements": [[2047, "simple-statements"]], "Expression Statements": [[2047, "expression-statements"]], "Assignment Statements": [[2047, "assignment-statements"]], "Augmented Assignment Statements": [[2047, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[2047, "annotated-assignment-statements"]], "The raise Statement": [[2047, "the-raise-statement"]], "The assert Statement": [[2047, "the-assert-statement"]], "The return Statement": [[2047, "the-return-statement"]], "The del Statement": [[2047, "the-del-statement"]], "The pass Statement": [[2047, "the-pass-statement"]], "The print Statement": [[2047, "the-print-statement"]], "The break Statement": [[2047, "the-break-statement"]], "The continue Statement:": [[2047, "the-continue-statement"]], "Compound Statements": [[2047, "compound-statements"]], "The if Statement": [[2047, "the-if-statement"]], "Basic if/else Statement": [[2047, "basic-if-else-statement"]], "Ternary if/else Statement": [[2047, "ternary-if-else-statement"]], "The while Statement": [[2047, "the-while-statement"]], "The for-in Statement": [[2047, "the-for-in-statement"]], "The with Statement": [[2047, "the-with-statement"]], "The tuple Statement": [[2047, "the-tuple-statement"]], "The getattr Statement": [[2047, "the-getattr-statement"]], "The hasattr Statement": [[2047, "the-hasattr-statement"]], "The zip Statement": [[2047, "the-zip-statement"]], "The enumerate Statement": [[2047, "the-enumerate-statement"]], "Python Values": [[2047, "python-values"]], "Resolution Rules": [[2047, "resolution-rules"]], "Python Built-in Functions Support": [[2047, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[2047, "id5"]], "Python Built-in Values Support": [[2047, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[2047, "id6"]], "torch.* APIs": [[2047, "torch-apis"]], "Remote Procedure Calls": [[2047, "remote-procedure-calls"]], "Asynchronous Execution": [[2047, "asynchronous-execution"]], "Type Annotations": [[2047, "type-annotations"]], "Meta Programming": [[2047, "meta-programming"]], "Type Refinement": [[2047, "type-refinement"]], "torch.nn.init": [[2073, "torch-nn-init"]], "JIT Utils - torch.utils.jit": [[2050, "module-torch.utils.jit"]], "torch.utils.model_zoo": [[2058, "torch-utils-model-zoo"]], "Distributed Data Parallel": [[2080, "distributed-data-parallel"]], "Example": [[2080, "example"], [2081, "example"]], "Internal Design": [[2080, "internal-design"]], "Implementation": [[2080, "implementation"], [2111, "implementation"]], "ProcessGroup": [[2080, "processgroup"]], "TorchDynamo DDPOptimizer": [[2080, "id1"]], "torch.nn": [[2068, "module-torch.nn"], [2068, "id1"]], "Containers": [[2068, "containers"]], "Convolution Layers": [[2068, "convolution-layers"]], "Pooling layers": [[2068, "pooling-layers"]], "Padding Layers": [[2068, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[2068, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[2068, "non-linear-activations-other"]], "Normalization Layers": [[2068, "normalization-layers"]], "Recurrent Layers": [[2068, "recurrent-layers"]], "Transformer Layers": [[2068, "transformer-layers"]], "Linear Layers": [[2068, "linear-layers"]], "Dropout Layers": [[2068, "dropout-layers"]], "Sparse Layers": [[2068, "sparse-layers"]], "Distance Functions": [[2068, "distance-functions"]], "Loss Functions": [[2068, "loss-functions"]], "Vision Layers": [[2068, "vision-layers"]], "Shuffle Layers": [[2068, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[2068, "module-torch.nn.parallel"]], "Utilities": [[2068, "module-torch.nn.utils"], [2123, "utilities"]], "Quantized Functions": [[2068, "quantized-functions"]], "Lazy Modules Initialization": [[2068, "lazy-modules-initialization"]], "Aliases": [[2068, "aliases"]], "CPU threading and TorchScript inference": [[2077, "cpu-threading-and-torchscript-inference"]], "Build options": [[2077, "build-options"]], "Runtime API": [[2077, "runtime-api"]], "Tuning the number of threads": [[2077, "tuning-the-number-of-threads"]], "torch.library": [[2051, "module-torch.library"]], "Testing custom ops": [[2051, "testing-custom-ops"]], "Creating new custom ops in Python": [[2051, "creating-new-custom-ops-in-python"]], "Extending custom ops (created from Python or C++)": [[2051, "extending-custom-ops-created-from-python-or-c"]], "Low-level APIs": [[2051, "low-level-apis"]], "Python Language Reference Coverage": [[2048, "python-language-reference-coverage"]], "Features for large-scale deployments": [[2088, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[2088, "fleet-wide-operator-profiling"]], "API usage logging": [[2088, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[2088, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[2088, "build-environment-considerations"]], "Common extension points": [[2088, "common-extension-points"]], "TorchScript": [[2044, "torchscript"]], "Creating TorchScript Code": [[2044, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[2044, "mixing-tracing-and-scripting"]], "TorchScript Language": [[2044, "torchscript-language"]], "Built-in Functions and Modules": [[2044, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[2044, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[2044, "python-functions-and-modules"]], "Python Language Reference Comparison": [[2044, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[2044, "disable-jit-for-debugging"]], "Inspecting Code": [[2044, "inspecting-code"]], "Interpreting Graphs": [[2044, "interpreting-graphs"]], "Tracer": [[2044, "tracer"]], "Tracing Edge Cases": [[2044, "tracing-edge-cases"]], "Automatic Trace Checking": [[2044, "automatic-trace-checking"]], "Tracer Warnings": [[2044, "tracer-warnings"]], "Known Issues": [[2044, "known-issues"]], "Appendix": [[2044, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[2044, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[2044, "modules"], [2089, "modules"]], "Attributes": [[2044, "attributes"]], "Constants": [[2044, "constants"]], "Fusion Backends": [[2044, "fusion-backends"]], "TorchScript Unsupported PyTorch Constructs": [[2049, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[2049, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[2049, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[2049, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[2049, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[2049, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[2049, "pytorch-unsupported-modules-and-classes"]], "torch.monitor": [[2060, "torch-monitor"]], "FSDP Notes": [[2084, "fsdp-notes"]], "FSDP Prefetch Nuances": [[2084, "fsdp-prefetch-nuances"]], "Communication payload size": [[2084, "communication-payload-size"]], "FSDP buffers sizes": [[2084, "fsdp-buffers-sizes"]], "TorchScript Builtins": [[2045, "torchscript-builtins"]], "Supported Tensor Methods": [[2045, "supported-tensor-methods"]], "Supported PyTorch Functions": [[2045, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[2045, "torchscript-builtin-functions"]], "Python Built-in Functions": [[2045, "python-built-in-functions"]], "math Module": [[2045, "math-module"]], "torch.zeros_like": [[2041, "torch-zeros-like"]], "MPS Environment Variables": [[2062, "mps-environment-variables"]], "torch.nn.functional": [[2072, "torch-nn-functional"]], "Convolution functions": [[2072, "convolution-functions"]], "Pooling functions": [[2072, "pooling-functions"]], "Attention Mechanisms": [[2072, "attention-mechanisms"]], "Non-linear activation functions": [[2072, "non-linear-activation-functions"]], "Linear functions": [[2072, "linear-functions"]], "Dropout functions": [[2072, "dropout-functions"]], "Sparse functions": [[2072, "sparse-functions"]], "Distance functions": [[2072, "distance-functions"]], "Loss functions": [[2072, "loss-functions"]], "Vision functions": [[2072, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[2072, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[2072, "data-parallel"]], "torch.linalg": [[2052, "torch-linalg"]], "Matrix Properties": [[2052, "matrix-properties"]], "Decompositions": [[2052, "decompositions"]], "Solvers": [[2052, "solvers"]], "Inverses": [[2052, "inverses"]], "Matrix Functions": [[2052, "matrix-functions"]], "Matrix Products": [[2052, "matrix-products"]], "Tensor Operations": [[2052, "tensor-operations"]], "Misc": [[2052, "misc"]], "Experimental Functions": [[2052, "experimental-functions"]], "torch.hub": [[2042, "torch-hub"]], "Publishing models": [[2042, "publishing-models"]], "How to implement an entrypoint?": [[2042, "how-to-implement-an-entrypoint"]], "Important Notice": [[2042, "important-notice"]], "Loading models from Hub": [[2042, "loading-models-from-hub"]], "Running a loaded model:": [[2042, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[2042, "where-are-my-downloaded-models-saved"]], "Caching logic": [[2042, "caching-logic"]], "Known limitations:": [[2042, "known-limitations"]], "PyTorch documentation": [[2043, "pytorch-documentation"]], "Community": [[2043, null]], "Developer Notes": [[2043, null]], "Language Bindings": [[2043, null]], "Python API": [[2043, null], [2099, "module-torch.onnx"]], "Libraries": [[2043, null]], "Indices and tables": [[2043, "indices-and-tables"]], "torch.utils.module_tracker": [[2059, "module-torch.utils.module_tracker"]], "Automatic Mixed Precision examples": [[2074, "automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[2074, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[2074, "working-with-unscaled-gradients"]], "Gradient clipping": [[2074, "gradient-clipping"]], "Working with Scaled Gradients": [[2074, "working-with-scaled-gradients"]], "Gradient accumulation": [[2074, "gradient-accumulation"]], "Gradient penalty": [[2074, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[2074, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[2074, "working-with-multiple-gpus"]], "DataParallel in a single process": [[2074, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[2074, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[2074, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[2074, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[2074, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[2074, "functions-that-need-a-particular-dtype"]], "Meta device": [[2055, "meta-device"]], "Idioms for working with meta tensors": [[2055, "idioms-for-working-with-meta-tensors"]], "Extending PyTorch": [[2081, "extending-pytorch"]], "Adding new operators": [[2081, "adding-new-operators"]], "Extending torch.autograd": [[2081, "extending-torch-autograd"]], "When to use": [[2081, "when-to-use"]], "When not to use": [[2081, "when-not-to-use"]], "How to use": [[2081, "how-to-use"]], "Combined or separate forward() and setup_context()": [[2081, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[2081, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[2081, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[2081, "extending-torch-nn"]], "Adding a Module": [[2081, "adding-a-module"]], "Extending torch Python API": [[2081, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[2081, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[2081, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[2081, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[2081, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[2081, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[2081, "extending-torch-native-api"]], "__torch_dispatch__ calling convention": [[2081, "torch-dispatch-calling-convention"]], "Extending all torch API with Modes": [[2081, "extending-all-torch-api-with-modes"]], "Miscellaneous Environment Variables": [[2056, "miscellaneous-environment-variables"]], "torch.mtia": [[2063, "torch-mtia"]], "Named Tensors operator coverage": [[2065, "named-tensors-operator-coverage"]], "Supported Operations": [[2065, "id1"]], "Keeps input names": [[2065, "keeps-input-names"]], "Removes dimensions": [[2065, "removes-dimensions"]], "Unifies names from inputs": [[2065, "unifies-names-from-inputs"]], "Permutes dimensions": [[2065, "permutes-dimensions"]], "Contracts away dims": [[2065, "contracts-away-dims"]], "Factory functions": [[2065, "factory-functions"]], "out function and in-place variants": [[2065, "out-function-and-in-place-variants"]], "torch.nn.attention.flex_attention": [[2071, "module-torch.nn.attention.flex_attention"]], "BlockMask Utilities": [[2071, "blockmask-utilities"]], "BlockMask": [[2071, "blockmask"]], "Basics": [[2071, "basics"], [28, "basics"], [2109, "basics"]], "Details": [[2071, "details"], [2135, "details"]], "Named Tensors": [[2066, "named-tensors"]], "Creating named tensors": [[2066, "creating-named-tensors"]], "Named dimensions": [[2066, "named-dimensions"]], "Name propagation semantics": [[2066, "name-propagation-semantics"]], "match semantics": [[2066, "match-semantics"]], "Basic name inference rules": [[2066, "basic-name-inference-rules"]], "Explicit alignment by names": [[2066, "explicit-alignment-by-names"]], "Manipulating dimensions": [[2066, "manipulating-dimensions"]], "Autograd support": [[2066, "autograd-support"]], "Currently supported operations and subsystems": [[2066, "currently-supported-operations-and-subsystems"]], "Operators": [[2066, "operators"]], "Subsystems": [[2066, "subsystems"]], "Named tensor API reference": [[2066, "named-tensor-api-reference"]], "A Simple Custom Module": [[2089, "a-simple-custom-module"]], "Modules as Building Blocks": [[2089, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[2089, "neural-network-training-with-modules"]], "Module State": [[2089, "module-state"]], "Module Initialization": [[2089, "module-initialization"]], "Module Hooks": [[2089, "module-hooks"]], "Advanced Features": [[2089, "advanced-features"]], "Distributed Training": [[2089, "distributed-training"]], "Profiling Performance": [[2089, "profiling-performance"]], "Improving Performance with Quantization": [[2089, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[2089, "improving-memory-usage-with-pruning"]], "Parametrizations": [[2089, "parametrizations"]], "Transforming Modules with FX": [[2089, "transforming-modules-with-fx"]], "Autograd mechanics": [[2075, "autograd-mechanics"]], "How autograd encodes the history": [[2075, "how-autograd-encodes-the-history"]], "Saved tensors": [[2075, "saved-tensors"]], "Gradients for non-differentiable functions": [[2075, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[2075, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [2123, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[2075, "setting-requires-grad"]], "Grad Modes": [[2075, "grad-modes"]], "Default Mode (Grad Mode)": [[2075, "default-mode-grad-mode"]], "No-grad Mode": [[2075, "no-grad-mode"]], "Inference Mode": [[2075, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[2075, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[2075, "in-place-operations-with-autograd"]], "In-place correctness checks": [[2075, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[2075, "multithreaded-autograd"]], "Concurrency on CPU": [[2075, "concurrency-on-cpu"]], "Non-determinism": [[2075, "non-determinism"]], "Graph retaining": [[2075, "graph-retaining"]], "Thread Safety on Autograd Node": [[2075, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[2075, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[2075, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[2075, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[2075, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[2075, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[2075, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[2075, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[2075, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[2075, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[2075, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[2075, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[2075, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[2075, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[2075, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[2075, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[2075, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "torch.linalg.matmul": [[1340, "torch-linalg-matmul"]], "torch.log2": [[1366, "torch-log2"]], "torch.linalg.qr": [[1348, "torch-linalg-qr"]], "torch.linalg.matrix_rank": [[1344, "torch-linalg-matrix-rank"]], "torch.linalg.vander": [[1357, "torch-linalg-vander"]], "torch.linalg.inv_ex": [[1331, "torch-linalg-inv-ex"]], "torch.linspace": [[1360, "torch-linspace"]], "torch.linalg.svd": [[1353, "torch-linalg-svd"]], "torch.log": [[1363, "torch-log"]], "torch.linalg.vector_norm": [[1359, "torch-linalg-vector-norm"]], "torch.linalg.solve_triangular": [[1352, "torch-linalg-solve-triangular"]], "torch.linalg.norm": [[1346, "torch-linalg-norm"]], "torch.log1p": [[1365, "torch-log1p"]], "torch.logit": [[1375, "torch-logit"]], "torch.linalg.solve_ex": [[1351, "torch-linalg-solve-ex"]], "torch.logaddexp": [[1367, "torch-logaddexp"]], "torch.logical_not": [[1372, "torch-logical-not"]], "torch.linalg.multi_dot": [[1345, "torch-linalg-multi-dot"]], "torch.linalg.svdvals": [[1354, "torch-linalg-svdvals"]], "torch.linalg.lu": [[1336, "torch-linalg-lu"]], "torch.logical_xor": [[1374, "torch-logical-xor"]], "torch.load": [[1361, "torch-load"]], "torch.linalg.vecdot": [[1358, "torch-linalg-vecdot"]], "torch.linalg.ldl_solve": [[1334, "torch-linalg-ldl-solve"]], "torch.linalg.solve": [[1350, "torch-linalg-solve"]], "torch.linalg.lu_factor_ex": [[1338, "torch-linalg-lu-factor-ex"]], "torch.linalg.lu_factor": [[1337, "torch-linalg-lu-factor"]], "torch.logical_and": [[1371, "torch-logical-and"]], "torch.linalg.slogdet": [[1349, "torch-linalg-slogdet"]], "torch.linalg.tensorsolve": [[1356, "torch-linalg-tensorsolve"]], "torch.logcumsumexp": [[1369, "torch-logcumsumexp"]], "torch.linalg.matrix_exp": [[1341, "torch-linalg-matrix-exp"]], "torch.linalg.matrix_norm": [[1342, "torch-linalg-matrix-norm"]], "torch.linalg.inv": [[1330, "torch-linalg-inv"]], "torch.linalg.ldl_factor": [[1332, "torch-linalg-ldl-factor"]], "torch.linalg.matrix_power": [[1343, "torch-linalg-matrix-power"]], "torch.linalg.pinv": [[1347, "torch-linalg-pinv"]], "torch.linalg.lstsq": [[1335, "torch-linalg-lstsq"]], "torch.logaddexp2": [[1368, "torch-logaddexp2"]], "torch.lobpcg": [[1362, "torch-lobpcg"]], "torch.linalg.tensorinv": [[1355, "torch-linalg-tensorinv"]], "torch.logical_or": [[1373, "torch-logical-or"]], "torch.linalg.householder_product": [[1329, "torch-linalg-householder-product"]], "torch.linalg.ldl_factor_ex": [[1333, "torch-linalg-ldl-factor-ex"]], "torch.linalg.lu_solve": [[1339, "torch-linalg-lu-solve"]], "torch.log10": [[1364, "torch-log10"]], "torch.logdet": [[1370, "torch-logdet"]], "torch.linalg.eigh": [[1326, "torch-linalg-eigh"]], "torch.linalg.eigvals": [[1327, "torch-linalg-eigvals"]], "torch.linalg.eigvalsh": [[1328, "torch-linalg-eigvalsh"]], "torch.logspace": [[1376, "torch-logspace"]], "torch.isfinite": [[1279, "torch-isfinite"]], "torch.is_storage": [[1275, "torch-is-storage"]], "torch.linalg.cholesky_ex": [[1320, "torch-linalg-cholesky-ex"]], "torch.isin": [[1280, "torch-isin"]], "torch.isinf": [[1281, "torch-isinf"]], "strict_fusion": [[1304, "strict-fusion"]], "ScriptFunction": [[1288, "scriptfunction"]], "torch.linalg.det": [[1323, "torch-linalg-det"]], "torch.jit.script": [[1301, "torch-jit-script"]], "torch.jit.optimize_for_inference": [[1299, "torch-jit-optimize-for-inference"]], "torch.jit.freeze": [[1293, "torch-jit-freeze"]], "torch.linalg.diagonal": [[1324, "torch-linalg-diagonal"]], "torch.jit.enable_onednn_fusion": [[1291, "torch-jit-enable-onednn-fusion"]], "torch.jit.load": [[1297, "torch-jit-load"]], "Attribute": [[1287, "attribute"]], "torch.jit.onednn_fusion_enabled": [[1298, "torch-jit-onednn-fusion-enabled"]], "torch.jit.save": [[1300, "torch-jit-save"]], "torch.jit.fork": [[1292, "torch-jit-fork"]], "torch.linalg.eig": [[1325, "torch-linalg-eig"]], "torch.lerp": [[1315, "torch-lerp"]], "torch.jit.unused": [[1307, "torch-jit-unused"]], "torch.linalg.cross": [[1322, "torch-linalg-cross"]], "torch.less": [[1316, "torch-less"]], "torch.isreal": [[1285, "torch-isreal"]], "torch.jit.interface": [[1295, "torch-jit-interface"]], "torch.kthvalue": [[1311, "torch-kthvalue"]], "torch.jit.wait": [[1308, "torch-jit-wait"]], "torch.is_warn_always_enabled": [[1277, "torch-is-warn-always-enabled"]], "torch.jit.set_fusion_strategy": [[1303, "torch-jit-set-fusion-strategy"]], "torch.lcm": [[1312, "torch-lcm"]], "torch.is_tensor": [[1276, "torch-is-tensor"]], "ScriptModule": [[1289, "scriptmodule"]], "torch.kaiser_window": [[1309, "torch-kaiser-window"]], "torch.less_equal": [[1317, "torch-less-equal"]], "torch.linalg.cholesky": [[1319, "torch-linalg-cholesky"]], "torch.jit.script_if_tracing": [[1302, "torch-jit-script-if-tracing"]], "torch.isneginf": [[1283, "torch-isneginf"]], "torch.isnan": [[1282, "torch-isnan"]], "torch.jit.ignore": [[1294, "torch-jit-ignore"]], "torch.isposinf": [[1284, "torch-isposinf"]], "torch.jit.trace": [[1305, "torch-jit-trace"]], "torch.jit.trace_module": [[1306, "torch-jit-trace-module"]], "torch.isclose": [[1278, "torch-isclose"]], "torch.jit.isinstance": [[1296, "torch-jit-isinstance"]], "torch.istft": [[1286, "torch-istft"]], "torch.le": [[1314, "torch-le"]], "torch.lgamma": [[1318, "torch-lgamma"]], "torch.kron": [[1310, "torch-kron"]], "torch.jit.annotate": [[1290, "torch-jit-annotate"]], "torch.ldexp": [[1313, "torch-ldexp"]], "torch.linalg.cond": [[1321, "torch-linalg-cond"]], "torch.gather": [[1230, "torch-gather"]], "torch.igamma": [[1258, "torch-igamma"]], "torch.i0": [[1257, "torch-i0"]], "torch.get_num_threads": [[1241, "torch-get-num-threads"]], "torch.hamming_window": [[1247, "torch-hamming-window"]], "torch.get_deterministic_debug_mode": [[1237, "torch-get-deterministic-debug-mode"]], "torch.gt": [[1246, "torch-gt"]], "torch.ger": [[1234, "torch-ger"]], "torch.index_select": [[1264, "torch-index-select"]], "torch.hstack": [[1255, "torch-hstack"]], "torch.hypot": [[1256, "torch-hypot"]], "torch.greater": [[1244, "torch-greater"]], "torch.get_device_module": [[1238, "torch-get-device-module"]], "torch.histogram": [[1251, "torch-histogram"]], "torch.is_grad_enabled": [[1272, "torch-is-grad-enabled"]], "torch.hsplit": [[1253, "torch-hsplit"]], "torch.hspmm": [[1254, "torch-hspmm"]], "torch.fx.experimental.symbolic_shapes.parallel_or": [[1225, "torch-fx-experimental-symbolic-shapes-parallel-or"]], "torch.gcd": [[1231, "torch-gcd"]], "torch.is_conj": [[1269, "torch-is-conj"]], "torch.is_nonzero": [[1274, "torch-is-nonzero"]], "torch.ge": [[1232, "torch-ge"]], "torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings": [[1227, "torch-fx-experimental-symbolic-shapes-resolve-unbacked-bindings"]], "torch.histc": [[1250, "torch-histc"]], "torch.hann_window": [[1248, "torch-hann-window"]], "torch.index_reduce": [[1263, "torch-index-reduce"]], "torch.is_inference_mode_enabled": [[1273, "torch-is-inference-mode-enabled"]], "torch.get_float32_matmul_precision": [[1239, "torch-get-float32-matmul-precision"]], "torch.is_complex": [[1268, "torch-is-complex"]], "torch.inverse": [[1267, "torch-inverse"]], "torch.fx.experimental.symbolic_shapes.rebind_unbacked": [[1226, "torch-fx-experimental-symbolic-shapes-rebind-unbacked"]], "torch.histogramdd": [[1252, "torch-histogramdd"]], "torch.igammac": [[1259, "torch-igammac"]], "torch.imag": [[1260, "torch-imag"]], "torch.is_floating_point": [[1271, "torch-is-floating-point"]], "torch.gradient": [[1243, "torch-gradient"]], "torch.inner": [[1266, "torch-inner"]], "torch.fx.experimental.symbolic_shapes.parallel_and": [[1224, "torch-fx-experimental-symbolic-shapes-parallel-and"]], "torch.initial_seed": [[1265, "torch-initial-seed"]], "torch.geqrf": [[1233, "torch-geqrf"]], "torch.get_num_interop_threads": [[1240, "torch-get-num-interop-threads"]], "torch.index_add": [[1261, "torch-index-add"]], "torch.greater_equal": [[1245, "torch-greater-equal"]], "torch.get_default_device": [[1235, "torch-get-default-device"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1270, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.get_rng_state": [[1242, "torch-get-rng-state"]], "torch.fx.experimental.symbolic_shapes.sym_eq": [[1229, "torch-fx-experimental-symbolic-shapes-sym-eq"]], "torch.index_copy": [[1262, "torch-index-copy"]], "torch.heaviside": [[1249, "torch-heaviside"]], "torch.get_default_dtype": [[1236, "torch-get-default-dtype"]], "torch.fx.experimental.symbolic_shapes.statically_known_true": [[1228, "torch-fx-experimental-symbolic-shapes-statically-known-true"]], "CallMethodKey": [[1194, "callmethodkey"]], "torch.func.hessian": [[1180, "torch-func-hessian"]], "torch.func.functionalize": [[1177, "torch-func-functionalize"]], "SymbolicContext": [[1209, "symboliccontext"]], "torch.fx.experimental.symbolic_shapes.lru_cache": [[1223, "torch-fx-experimental-symbolic-shapes-lru-cache"]], "torch.func.jvp": [[1183, "torch-func-jvp"]], "torch.fx.experimental.symbolic_shapes.definitely_true": [[1216, "torch-fx-experimental-symbolic-shapes-definitely-true"]], "torch.func.functional_call": [[1176, "torch-func-functional-call"]], "torch.fx.experimental.symbolic_shapes.check_consistent": [[1211, "torch-fx-experimental-symbolic-shapes-check-consistent"]], "PropagateUnbackedSymInts": [[1201, "propagateunbackedsymints"]], "StrictMinMaxConstraint": [[1207, "strictminmaxconstraint"]], "torch.func.replace_all_batch_norm_modules_": [[1185, "torch-func-replace-all-batch-norm-modules"]], "torch.fx.experimental.symbolic_shapes.is_concrete_bool": [[1221, "torch-fx-experimental-symbolic-shapes-is-concrete-bool"]], "torch.fx.experimental.proxy_tensor.maybe_enable_thunkify": [[1193, "torch-fx-experimental-proxy-tensor-maybe-enable-thunkify"]], "DivideByKey": [[1198, "dividebykey"]], "torch.func.jacrev": [[1182, "torch-func-jacrev"]], "StatelessSymbolicContext": [[1206, "statelesssymboliccontext"]], "torch.frombuffer": [[1173, "torch-frombuffer"]], "DimConstraints": [[1196, "dimconstraints"]], "torch.func.linearize": [[1184, "torch-func-linearize"]], "ShapeEnv": [[1203, "shapeenv"]], "torch.fx.experimental.symbolic_shapes.is_concrete_int": [[1222, "torch-fx-experimental-symbolic-shapes-is-concrete-int"]], "torch.fx.experimental.proxy_tensor.get_proxy_mode": [[1189, "torch-fx-experimental-proxy-tensor-get-proxy-mode"]], "torch.fx.experimental.proxy_tensor.handle_sym_dispatch": [[1190, "torch-fx-experimental-proxy-tensor-handle-sym-dispatch"]], "torch.full_like": [[1175, "torch-full-like"]], "EqualityConstraint": [[1199, "equalityconstraint"]], "torch.fx.experimental.symbolic_shapes.hint_int": [[1219, "torch-fx-experimental-symbolic-shapes-hint-int"]], "torch.func.stack_module_state": [[1186, "torch-func-stack-module-state"]], "ConvertIntKey": [[1195, "convertintkey"]], "RelaxedUnspecConstraint": [[1202, "relaxedunspecconstraint"]], "torch.fx.experimental.symbolic_shapes.definitely_false": [[1215, "torch-fx-experimental-symbolic-shapes-definitely-false"]], "torch.full": [[1174, "torch-full"]], "torch.fx.experimental.symbolic_shapes.has_free_symbols": [[1218, "torch-fx-experimental-symbolic-shapes-has-free-symbols"]], "torch.func.grad_and_value": [[1179, "torch-func-grad-and-value"]], "torch.func.vmap": [[1188, "torch-func-vmap"]], "torch.fx.experimental.symbolic_shapes.constrain_range": [[1213, "torch-fx-experimental-symbolic-shapes-constrain-range"]], "torch.func.grad": [[1178, "torch-func-grad"]], "DimDynamic": [[1197, "dimdynamic"]], "ShapeEnvSettings": [[1204, "shapeenvsettings"]], "torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings": [[1212, "torch-fx-experimental-symbolic-shapes-compute-unbacked-bindings"]], "torch.fx.experimental.proxy_tensor.make_fx": [[1191, "torch-fx-experimental-proxy-tensor-make-fx"]], "torch.fx.experimental.symbolic_shapes.constrain_unify": [[1214, "torch-fx-experimental-symbolic-shapes-constrain-unify"]], "InnerTensorKey": [[1200, "innertensorkey"]], "torch.func.vjp": [[1187, "torch-func-vjp"]], "torch.func.jacfwd": [[1181, "torch-func-jacfwd"]], "torch.fx.experimental.proxy_tensor.maybe_disable_thunkify": [[1192, "torch-fx-experimental-proxy-tensor-maybe-disable-thunkify"]], "SubclassSymbolicContext": [[1208, "subclasssymboliccontext"]], "torch.fx.experimental.symbolic_shapes.guard_size_oblivious": [[1217, "torch-fx-experimental-symbolic-shapes-guard-size-oblivious"]], "torch.fx.experimental.symbolic_shapes.is_accessor_node": [[1220, "torch-fx-experimental-symbolic-shapes-is-accessor-node"]], "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr": [[1210, "torch-fx-experimental-symbolic-shapes-canonicalize-bool-expr"]], "StatefulSymbolicContext": [[1205, "statefulsymboliccontext"]], "torch.flatten": [[1158, "torch-flatten"]], "torch.float_power": [[1162, "torch-float-power"]], "torch.fft.irfftn": [[1152, "torch-fft-irfftn"]], "enable_grad": [[1123, "enable-grad"]], "torch.erf": [[1126, "torch-erf"]], "torch.frexp": [[1169, "torch-frexp"]], "torch.exp2": [[1130, "torch-exp2"]], "torch.frac": [[1168, "torch-frac"]], "torch.fft.fft": [[1135, "torch-fft-fft"]], "torch.fft.ihfft": [[1147, "torch-fft-ihfft"]], "torch.fft.ifftshift": [[1146, "torch-fft-ifftshift"]], "torch.fft.rfft": [[1153, "torch-fft-rfft"]], "torch.fake_quantize_per_tensor_affine": [[1134, "torch-fake-quantize-per-tensor-affine"]], "torch.empty_strided": [[1122, "torch-empty-strided"]], "torch.fmax": [[1165, "torch-fmax"]], "torch.from_dlpack": [[1170, "torch-from-dlpack"]], "torch.erfinv": [[1128, "torch-erfinv"]], "torch.fft.hfft2": [[1141, "torch-fft-hfft2"]], "torch.fix": [[1157, "torch-fix"]], "torch.fft.ifftn": [[1145, "torch-fft-ifftn"]], "torch.fft.fftfreq": [[1137, "torch-fft-fftfreq"]], "torch.fft.ihfft2": [[1148, "torch-fft-ihfft2"]], "torch.fft.rfftfreq": [[1155, "torch-fft-rfftfreq"]], "torch.erfc": [[1127, "torch-erfc"]], "torch.from_file": [[1171, "torch-from-file"]], "torch.exp": [[1129, "torch-exp"]], "torch.fft.fftn": [[1138, "torch-fft-fftn"]], "torch.expm1": [[1131, "torch-expm1"]], "torch.eye": [[1132, "torch-eye"]], "torch.flip": [[1159, "torch-flip"]], "torch.fft.fft2": [[1136, "torch-fft-fft2"]], "torch.fft.ifft2": [[1144, "torch-fft-ifft2"]], "torch.fft.rfft2": [[1154, "torch-fft-rfft2"]], "torch.flipud": [[1161, "torch-flipud"]], "torch.fft.rfftn": [[1156, "torch-fft-rfftn"]], "torch.fliplr": [[1160, "torch-fliplr"]], "torch.equal": [[1125, "torch-equal"]], "torch.fft.fftshift": [[1139, "torch-fft-fftshift"]], "torch.fft.ifft": [[1143, "torch-fft-ifft"]], "torch.floor_divide": [[1164, "torch-floor-divide"]], "torch.from_numpy": [[1172, "torch-from-numpy"]], "torch.fake_quantize_per_channel_affine": [[1133, "torch-fake-quantize-per-channel-affine"]], "torch.floor": [[1163, "torch-floor"]], "torch.eq": [[1124, "torch-eq"]], "torch.fmin": [[1166, "torch-fmin"]], "torch.fmod": [[1167, "torch-fmod"]], "torch.fft.ihfftn": [[1149, "torch-fft-ihfftn"]], "torch.fft.hfftn": [[1142, "torch-fft-hfftn"]], "torch.fft.irfft2": [[1151, "torch-fft-irfft2"]], "torch.fft.irfft": [[1150, "torch-fft-irfft"]], "torch.fft.hfft": [[1140, "torch-fft-hfft"]], "torch.cuda.memory_cached": [[1072, "torch-cuda-memory-cached"]], "torch.cuda.set_sync_debug_mode": [[1093, "torch-cuda-set-sync-debug-mode"]], "torch.diagonal": [[1109, "torch-diagonal"]], "torch.cuda.utilization": [[1097, "torch-cuda-utilization"]], "torch.empty": [[1120, "torch-empty"]], "torch.cuda.temperature": [[1096, "torch-cuda-temperature"]], "torch.deg2rad": [[1103, "torch-deg2rad"]], "torch.cummin": [[1099, "torch-cummin"]], "torch.cuda.nvtx.range": [[1079, "torch-cuda-nvtx-range"]], "torch.diff": [[1111, "torch-diff"]], "torch.cuda.seed_all": [[1087, "torch-cuda-seed-all"]], "torch.diag_embed": [[1107, "torch-diag-embed"]], "torch.cuda.memory_reserved": [[1073, "torch-cuda-memory-reserved"]], "torch.cuda.seed": [[1086, "torch-cuda-seed"]], "torch.cuda.set_device": [[1088, "torch-cuda-set-device"]], "torch.cumprod": [[1100, "torch-cumprod"]], "torch.cuda.stream": [[1094, "torch-cuda-stream"]], "torch.cuda.synchronize": [[1095, "torch-cuda-synchronize"]], "torch.empty_like": [[1121, "torch-empty-like"]], "torch.cuda.reset_max_memory_allocated": [[1083, "torch-cuda-reset-max-memory-allocated"]], "torch.det": [[1105, "torch-det"]], "torch.cuda.set_stream": [[1092, "torch-cuda-set-stream"]], "torch.digamma": [[1112, "torch-digamma"]], "torch.dsplit": [[1117, "torch-dsplit"]], "torch.cuda.set_rng_state_all": [[1091, "torch-cuda-set-rng-state-all"]], "torch.diagflat": [[1108, "torch-diagflat"]], "torch.cuda.nvtx.range_push": [[1081, "torch-cuda-nvtx-range-push"]], "torch.diagonal_scatter": [[1110, "torch-diagonal-scatter"]], "torch.cuda.reset_peak_memory_stats": [[1085, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.memory_usage": [[1077, "torch-cuda-memory-usage"]], "torch.cuda.memory_allocated": [[1071, "torch-cuda-memory-allocated"]], "torch.cummax": [[1098, "torch-cummax"]], "torch.dist": [[1113, "torch-dist"]], "torch.div": [[1114, "torch-div"]], "torch.cuda.memory_snapshot": [[1074, "torch-cuda-memory-snapshot"]], "torch.cuda.set_per_process_memory_fraction": [[1089, "torch-cuda-set-per-process-memory-fraction"]], "torch.cumsum": [[1101, "torch-cumsum"]], "torch.dequantize": [[1104, "torch-dequantize"]], "torch.cuda.memory_stats": [[1075, "torch-cuda-memory-stats"]], "torch.cuda.power_draw": [[1082, "torch-cuda-power-draw"]], "torch.cumulative_trapezoid": [[1102, "torch-cumulative-trapezoid"]], "torch.dot": [[1116, "torch-dot"]], "torch.dstack": [[1118, "torch-dstack"]], "torch.cuda.nvtx.range_pop": [[1080, "torch-cuda-nvtx-range-pop"]], "torch.cuda.memory_summary": [[1076, "torch-cuda-memory-summary"]], "torch.cuda.set_rng_state": [[1090, "torch-cuda-set-rng-state"]], "torch.divide": [[1115, "torch-divide"]], "torch.einsum": [[1119, "torch-einsum"]], "torch.diag": [[1106, "torch-diag"]], "torch.cuda.reset_max_memory_cached": [[1084, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.nvtx.mark": [[1078, "torch-cuda-nvtx-mark"]], "torch.cuda.max_memory_cached": [[1068, "torch-cuda-max-memory-cached"]], "torch.cuda.get_device_name": [[1047, "torch-cuda-get-device-name"]], "torch.cuda.get_device_capability": [[1046, "torch-cuda-get-device-capability"]], "torch.cuda.caching_allocator_alloc": [[1025, "torch-cuda-caching-allocator-alloc"]], "MemPool": [[1020, "mempool"]], "torch.cuda.default_stream": [[1039, "torch-cuda-default-stream"]], "torch.cuda.is_initialized": [[1060, "torch-cuda-is-initialized"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1062, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.max_memory_reserved": [[1069, "torch-cuda-max-memory-reserved"]], "torch.cuda.mem_get_info": [[1070, "torch-cuda-mem-get-info"]], "torch.cuda.device_count": [[1041, "torch-cuda-device-count"]], "torch.cuda.make_graphed_callables": [[1064, "torch-cuda-make-graphed-callables"]], "torch.cuda.cudart": [[1035, "torch-cuda-cudart"]], "torch.cuda.current_blas_handle": [[1036, "torch-cuda-current-blas-handle"]], "torch.cuda.get_rng_state_all": [[1051, "torch-cuda-get-rng-state-all"]], "torch.cuda.graph_pool_handle": [[1054, "torch-cuda-graph-pool-handle"]], "torch.cuda.get_gencode_flags": [[1049, "torch-cuda-get-gencode-flags"]], "torch.cuda.current_stream": [[1038, "torch-cuda-current-stream"]], "torch.cuda.init": [[1055, "torch-cuda-init"]], "torch.cuda.comm.broadcast": [[1030, "torch-cuda-comm-broadcast"]], "torch.cuda.manual_seed_all": [[1066, "torch-cuda-manual-seed-all"]], "torch.cuda.get_allocator_backend": [[1044, "torch-cuda-get-allocator-backend"]], "torch.cuda.caching_allocator_delete": [[1026, "torch-cuda-caching-allocator-delete"]], "torch.cuda.can_device_access_peer": [[1027, "torch-cuda-can-device-access-peer"]], "torch.cuda.list_gpu_processes": [[1063, "torch-cuda-list-gpu-processes"]], "torch.cuda.comm.broadcast_coalesced": [[1031, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.comm.reduce_add": [[1033, "torch-cuda-comm-reduce-add"]], "torch.cuda.get_arch_list": [[1045, "torch-cuda-get-arch-list"]], "torch.cuda.empty_cache": [[1043, "torch-cuda-empty-cache"]], "torch.cuda.comm.scatter": [[1034, "torch-cuda-comm-scatter"]], "torch.cuda.comm.gather": [[1032, "torch-cuda-comm-gather"]], "MemPoolContext": [[1021, "mempoolcontext"]], "torch.cuda.get_rng_state": [[1050, "torch-cuda-get-rng-state"]], "torch.cuda.get_sync_debug_mode": [[1052, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.current_device": [[1037, "torch-cuda-current-device"]], "torch.cuda.is_current_stream_capturing": [[1059, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.is_available": [[1058, "torch-cuda-is-available"]], "torch.cuda.initial_seed": [[1056, "torch-cuda-initial-seed"]], "torch.cuda.max_memory_allocated": [[1067, "torch-cuda-max-memory-allocated"]], "torch.cuda.OutOfMemoryError": [[1022, "torch-cuda-outofmemoryerror"]], "torch.cuda.get_device_properties": [[1048, "torch-cuda-get-device-properties"]], "graph": [[1053, "graph"]], "torch.cuda.jiterator._create_jit_fn": [[1061, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.change_current_allocator": [[1028, "torch-cuda-change-current-allocator"]], "torch.cuda.ipc_collect": [[1057, "torch-cuda-ipc-collect"]], "torch.cuda.manual_seed": [[1065, "torch-cuda-manual-seed"]], "torch.cuda.clock_rate": [[1029, "torch-cuda-clock-rate"]], "torch.compiler.assume_constant_result": [[986, "torch-compiler-assume-constant-result"]], "torch.chunk": [[977, "torch-chunk"]], "torch.column_stack": [[981, "torch-column-stack"]], "torch.compiler.allow_in_graph": [[985, "torch-compiler-allow-in-graph"], [2137, "torch-compiler-allow-in-graph"]], "CUDAPluggableAllocator": [[1017, "cudapluggableallocator"]], "torch.compiler.disable": [[989, "torch-compiler-disable"], [2137, "torch-compiler-disable"]], "torch.compiler.compile": [[987, "torch-compiler-compile"]], "torch.compiler.is_dynamo_compiling": [[991, "torch-compiler-is-dynamo-compiling"]], "torch.cartesian_prod": [[969, "torch-cartesian-prod"]], "torch.cholesky_inverse": [[975, "torch-cholesky-inverse"]], "torch.clamp": [[978, "torch-clamp"]], "torch.compiler.cudagraph_mark_step_begin": [[988, "torch-compiler-cudagraph-mark-step-begin"]], "torch.clone": [[980, "torch-clone"]], "torch.compiled_with_cxx11_abi": [[984, "torch-compiled-with-cxx11-abi"]], "torch.compile": [[983, "torch-compile"]], "torch.concatenate": [[996, "torch-concatenate"]], "torch.cosh": [[1003, "torch-cosh"]], "torch.conj": [[998, "torch-conj"]], "torch.count_nonzero": [[1004, "torch-count-nonzero"]], "torch.cos": [[1002, "torch-cos"]], "torch.cat": [[970, "torch-cat"]], "torch.ceil": [[972, "torch-ceil"]], "torch.cdist": [[971, "torch-cdist"]], "torch.cpu.current_stream": [[1009, "torch-cpu-current-stream"]], "torch.cpu.is_available": [[1011, "torch-cpu-is-available"]], "torch.cholesky_solve": [[976, "torch-cholesky-solve"]], "torch.clip": [[979, "torch-clip"]], "torch.concat": [[995, "torch-concat"]], "ExternalStream": [[1019, "externalstream"]], "torch.compiler.reset": [[993, "torch-compiler-reset"]], "torch.cholesky": [[974, "torch-cholesky"]], "torch.cpu.stream": [[1013, "torch-cpu-stream"]], "torch.corrcoef": [[1001, "torch-corrcoef"]], "torch.cpu.set_device": [[1012, "torch-cpu-set-device"]], "torch.complex": [[994, "torch-complex"]], "torch.cpu.device_count": [[1010, "torch-cpu-device-count"]], "torch.copysign": [[1000, "torch-copysign"]], "torch.conj_physical": [[999, "torch-conj-physical"]], "torch.combinations": [[982, "torch-combinations"]], "torch.cov": [[1005, "torch-cov"]], "torch.cross": [[1015, "torch-cross"]], "torch.chain_matmul": [[973, "torch-chain-matmul"]], "torch.compiler.is_compiling": [[990, "torch-compiler-is-compiling"]], "torch.compiler.list_backends": [[992, "torch-compiler-list-backends"]], "torch.cpu.current_device": [[1008, "torch-cpu-current-device"]], "torch.cpu.synchronize": [[1014, "torch-cpu-synchronize"]], "CUDAGraph": [[1016, "cudagraph"], [2130, "cudagraph"]], "TorchElastic Kubernetes": [[43, "torchelastic-kubernetes"]], "torch::deploy has been moved to pytorch/multipy": [[26, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "CUDA Environment Variables": [[20, "cuda-environment-variables"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Getting Started": [[7, "getting-started"], [2138, "getting-started"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [2109, "tutorials"], [2102, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "Generic Join Context Manager": [[29, "generic-join-context-manager"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[34, "tensor-parallelism-torch-distributed-tensor-parallel"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Custom Function utilities": [[1, "custom-function-utilities"]], "Numerical gradient checking": [[1, "module-torch.autograd.gradcheck"]], "Profiler": [[1, "profiler"]], "Debugging and anomaly detection": [[1, "debugging-and-anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Core Maintainers": [[9, "core-maintainers"], [10, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[9, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "Expiration Timers": [[50, "module-torch.distributed.elastic.timer"]], "Client Methods": [[50, "client-methods"]], "Server/Client Implementations": [[50, "server-client-implementations"]], "Writing a custom timer server/client": [[50, "writing-a-custom-timer-server-client"]], "Debug info logging": [[50, "module-torch.distributed.elastic.timer.debug_info_logging"]], "Multiprocessing": [[45, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[45, "starting-multiple-workers"]], "Process Context": [[45, "process-context"]], "Rendezvous": [[47, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[47, "registry"]], "Handler": [[47, "handler"]], "Dataclasses": [[47, "dataclasses"]], "Exceptions": [[47, "exceptions"]], "Implementations": [[47, "implementations"], [37, "implementations"]], "Dynamic Rendezvous": [[47, "dynamic-rendezvous"]], "C10d Backend": [[47, "c10d-backend"]], "Etcd Backend": [[47, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[47, "etcd-rendezvous-legacy"]], "Etcd Store": [[47, "etcd-store"]], "Etcd Server": [[47, "etcd-server"]], "Torch Distributed Elastic": [[31, "torch-distributed-elastic"]], "Get Started": [[31, "get-started"]], "Usage": [[31, null], [18, "usage"], [48, "usage"]], "Documentation": [[31, "documentation"]], "API": [[31, null]], "Advanced": [[31, null]], "Plugins": [[31, null]], "torch.cuda": [[17, "module-torch.cuda"]], "Communication collectives": [[17, "communication-collectives"]], "Graphs (beta)": [[17, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[17, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[17, "jiterator-beta"]], "TunableOp": [[17, "tunableop"], [19, "tunableop"]], "Stream Sanitizer (prototype)": [[17, "stream-sanitizer-prototype"]], "Subprocess Handling": [[49, "module-torch.distributed.elastic.multiprocessing.subprocess_handler"]], "Retrieve SubprocessHandler": [[49, "retrieve-subprocesshandler"]], "SubprocessHandler": [[49, "subprocesshandler"]], "Customization": [[39, "customization"]], "Launcher": [[39, "launcher"]], "Rendezvous Handler": [[39, "rendezvous-handler"]], "Metric Handler": [[39, "metric-handler"]], "Events Handler": [[39, "events-handler"]], "Debugging Environment Variables": [[25, "debugging-environment-variables"]], "torch.__config__": [[13, "module-torch.__config__"]], "torch.utils.data": [[23, "module-torch.utils.data"]], "Dataset Types": [[23, "dataset-types"]], "Map-style datasets": [[23, "map-style-datasets"]], "Iterable-style datasets": [[23, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[23, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[23, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[23, "automatic-batching-default"]], "Disable automatic batching": [[23, "disable-automatic-batching"]], "Working with collate_fn": [[23, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[23, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[23, "single-process-data-loading-default"]], "Multi-process data loading": [[23, "multi-process-data-loading"]], "Platform-specific behaviors": [[23, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[23, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[23, "memory-pinning"]], "Enabling TunableOp and Tuning Separately": [[19, "enabling-tunableop-and-tuning-separately"]], "File Input and Output": [[19, "file-input-and-output"]], "A Note on Tuning Behavior": [[19, "a-note-on-tuning-behavior"]], "Current Tunable Operators": [[19, "current-tunable-operators"]], "TunableGemm for ROCm": [[19, "tunablegemm-for-rocm"]], "Tuning Context": [[19, "tuning-context"]], "Control Plane": [[38, "module-torch.distributed.elastic.control_plane"]], "torch.utils.cpp_extension": [[14, "torch-utils-cpp-extension"]], "Distributed Optimizers": [[32, "distributed-optimizers"]], "Distributed communication package - torch.distributed": [[28, "distributed-communication-package-torch-distributed"]], "Backends": [[28, "backends"], [2109, "backends"]], "Backends that come with PyTorch": [[28, "backends-that-come-with-pytorch"]], "Which backend to use?": [[28, "which-backend-to-use"]], "Common environment variables": [[28, "common-environment-variables"]], "Choosing the network interface to use": [[28, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[28, "other-nccl-environment-variables"]], "Initialization": [[28, "initialization"]], "TCP initialization": [[28, "tcp-initialization"]], "Shared file-system initialization": [[28, "shared-file-system-initialization"]], "Environment variable initialization": [[28, "environment-variable-initialization"]], "Post-Initialization": [[28, "post-initialization"]], "Shutdown": [[28, "shutdown"]], "Reinitialization": [[28, "reinitialization"]], "Distributed Key-Value Store": [[28, "distributed-key-value-store"]], "Groups": [[28, "groups"]], "DeviceMesh": [[28, "devicemesh"]], "Point-to-point communication": [[28, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[28, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[28, "collective-functions"]], "Profiling Collective Communication": [[28, "profiling-collective-communication"]], "Multi-GPU collective functions": [[28, "multi-gpu-collective-functions"]], "Third-party backends": [[28, "third-party-backends"]], "Launch utility": [[28, "launch-utility"]], "Spawn utility": [[28, "spawn-utility"]], "Debugging torch.distributed applications": [[28, "debugging-torch-distributed-applications"]], "Python Breakpoint": [[28, "python-breakpoint"]], "Monitored Barrier": [[28, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[28, "torch-distributed-debug"]], "Logging": [[28, "logging"], [33, "logging"]], "CUDA Stream Sanitizer": [[18, "cuda-stream-sanitizer"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "Quickstart": [[46, "quickstart"]], "Elastic Agent": [[37, "module-torch.distributed.elastic.agent"]], "Server": [[37, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[37, "concepts"]], "Extending the Agent": [[37, "extending-the-agent"]], "Watchdog in the Agent": [[37, "watchdog-in-the-agent"]], "Health Check Server": [[37, "health-check-server"]], "torch.utils.dlpack": [[36, "torch-utils-dlpack"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "XPU Op-Specific Behavior (Experimental)": [[0, "xpu-op-specific-behavior-experimental"]], "XPU Ops that can autocast to float16": [[0, "xpu-ops-that-can-autocast-to-float16"]], "XPU Ops that can autocast to float32": [[0, "xpu-ops-that-can-autocast-to-float32"]], "XPU Ops that promote to the widest input type": [[0, "xpu-ops-that-promote-to-the-widest-input-type"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Autograd": [[11, "autograd"]], "Optimizers": [[11, "optimizers"]], "Pipeline Parallelism": [[33, "pipeline-parallelism"]], "Why Pipeline Parallel?": [[33, "why-pipeline-parallel"]], "What is torch.distributed.pipelining?": [[33, "what-is-torch-distributed-pipelining"]], "Step 1: build PipelineStage": [[33, "step-1-build-pipelinestage"]], "Step 2: use PipelineSchedule for execution": [[33, "step-2-use-pipelineschedule-for-execution"]], "Options for Splitting a Model": [[33, "options-for-splitting-a-model"]], "Option 1: splitting a model manually": [[33, "option-1-splitting-a-model-manually"]], "Option 2: splitting a model automatically": [[33, "option-2-splitting-a-model-automatically"]], "Hugging Face Examples": [[33, "hugging-face-examples"]], "Technical Deep Dive": [[33, "technical-deep-dive"]], "How does the pipeline API split a model?": [[33, "how-does-the-pipeline-api-split-a-model"]], "Implementing Your Own Schedule": [[33, "implementing-your-own-schedule"]], "Model Split APIs": [[33, "model-split-apis"]], "Microbatch Utilities": [[33, "module-torch.distributed.pipelining.microbatch"]], "Pipeline Stages": [[33, "module-torch.distributed.pipelining.stage"]], "Pipeline Schedules": [[33, "module-torch.distributed.pipelining.schedules"]], "Error Propagation": [[40, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[40, "methods-and-classes"]], "torchrun (Elastic Launch)": [[48, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[48, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[48, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[48, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[48, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[48, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[48, "note-on-rendezvous-backend"]], "Definitions": [[48, "definitions"]], "Environment Variables": [[48, "environment-variables"]], "Deployment": [[48, "deployment"]], "Failure Modes": [[48, "failure-modes"]], "Membership Changes": [[48, "membership-changes"]], "Important Notices": [[48, "important-notices"]], "Probability distributions - torch.distributions": [[35, "module-torch.distributions"]], "Score function": [[35, "score-function"]], "Pathwise derivative": [[35, "pathwise-derivative"]], "Distribution": [[35, "distribution"]], "ExponentialFamily": [[35, "exponentialfamily"]], "Bernoulli": [[35, "bernoulli"]], "Beta": [[35, "beta"]], "Binomial": [[35, "binomial"]], "Categorical": [[35, "categorical"]], "Cauchy": [[35, "cauchy"]], "Chi2": [[35, "chi2"]], "ContinuousBernoulli": [[35, "continuousbernoulli"]], "Dirichlet": [[35, "dirichlet"]], "Exponential": [[35, "exponential"]], "FisherSnedecor": [[35, "fishersnedecor"]], "Gamma": [[35, "gamma"]], "Geometric": [[35, "geometric"]], "Gumbel": [[35, "gumbel"]], "HalfCauchy": [[35, "halfcauchy"]], "HalfNormal": [[35, "halfnormal"]], "Independent": [[35, "independent"]], "InverseGamma": [[35, "inversegamma"]], "Kumaraswamy": [[35, "kumaraswamy"]], "LKJCholesky": [[35, "lkjcholesky"]], "Laplace": [[35, "laplace"]], "LogNormal": [[35, "lognormal"]], "LowRankMultivariateNormal": [[35, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[35, "mixturesamefamily"]], "Multinomial": [[35, "multinomial"]], "MultivariateNormal": [[35, "multivariatenormal"]], "NegativeBinomial": [[35, "negativebinomial"]], "Normal": [[35, "normal"]], "OneHotCategorical": [[35, "onehotcategorical"]], "Pareto": [[35, "pareto"]], "Poisson": [[35, "poisson"]], "RelaxedBernoulli": [[35, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[35, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[35, "relaxedonehotcategorical"]], "StudentT": [[35, "studentt"]], "TransformedDistribution": [[35, "transformeddistribution"]], "Uniform": [[35, "uniform"]], "VonMises": [[35, "vonmises"]], "Weibull": [[35, "weibull"]], "Wishart": [[35, "wishart"]], "KL Divergence": [[35, "module-torch.distributions.kl"]], "Transforms": [[35, "module-torch.distributions.transforms"]], "Constraint Registry": [[35, "module-torch.distributions.constraint_registry"]], "C++": [[15, "c"]], "TorchScript C++ API": [[15, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[15, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[15, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[15, "authoring-models-in-c"]], "Packaging for C++": [[15, "packaging-for-c"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[30, "distributed-checkpoint-torch-distributed-checkpoint"]], "torch.cpu": [[16, "module-torch.cpu"]], "Metrics": [[44, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[44, "metric-handlers"]], "Methods": [[44, "methods"]], "Events": [[41, "module-torch.distributed.elastic.events"]], "API Methods": [[41, "api-methods"]], "Event Objects": [[41, "event-objects"]], "torch.utils.deterministic": [[27, "module-torch.utils.deterministic"]], "DDP Communication Hooks": [[24, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[24, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[24, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[24, "default-communication-hooks"]], "PowerSGD Communication Hook": [[24, "powersgd-communication-hook"]], "PowerSGD State": [[24, "powersgd-state"]], "PowerSGD Hooks": [[24, "powersgd-hooks"]], "Debugging Communication Hooks": [[24, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[24, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[24, "acknowledgements"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "AArch64 CPU": [[10, "aarch64-cpu"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "Control Flow - Cond": [[12, "control-flow-cond"]], "Invariants of torch.ops.higher_order.cond": [[12, "invariants-of-torch-ops-higher-order-cond"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "torch.autograd.functional.jacobian": [[921, "torch-autograd-functional-jacobian"]], "torch.autograd.grad": [[925, "torch-autograd-grad"]], "torch.autograd.profiler.profile.key_averages": [[943, "torch-autograd-profiler-profile-key-averages"]], "torch.blackman_window": [[961, "torch-blackman-window"]], "torch.bitwise_and": [[955, "torch-bitwise-and"]], "torch.autograd.profiler.parse_nvprof_trace": [[941, "torch-autograd-profiler-parse-nvprof-trace"]], "torch.bitwise_xor": [[960, "torch-bitwise-xor"]], "inference_mode": [[926, "inference-mode"]], "torch.autograd.gradcheck.gradgradcheck": [[931, "torch-autograd-gradcheck-gradgradcheck"]], "torch.autograd.graph.Node.register_hook": [[935, "torch-autograd-graph-node-register-hook"]], "StringTable": [[950, "stringtable"]], "torch.autograd.function.once_differentiable": [[918, "torch-autograd-function-once-differentiable"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[944, "torch-autograd-profiler-profile-self-cpu-time-total"]], "Interval": [[947, "interval"]], "record_function": [[946, "record-function"]], "torch.bincount": [[954, "torch-bincount"]], "torch.bartlett_window": [[952, "torch-bartlett-window"]], "torch.broadcast_tensors": [[965, "torch-broadcast-tensors"]], "torch.block_diag": [[962, "torch-block-diag"]], "EnforceUnique": [[938, "enforceunique"]], "torch.broadcast_shapes": [[964, "torch-broadcast-shapes"]], "torch.autograd.graph.increment_version": [[937, "torch-autograd-graph-increment-version"]], "torch.bucketize": [[967, "torch-bucketize"]], "torch.autograd.gradcheck.GradcheckError": [[929, "torch-autograd-gradcheck-gradcheckerror"]], "torch.autograd.graph.Node.register_prehook": [[936, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.profiler.profile.total_average": [[945, "torch-autograd-profiler-profile-total-average"]], "torch.bitwise_or": [[958, "torch-bitwise-or"]], "torch.baddbmm": [[951, "torch-baddbmm"]], "torch.can_cast": [[968, "torch-can-cast"]], "torch.autograd.graph.Node.next_functions": [[934, "torch-autograd-graph-node-next-functions"]], "MemRecordsAcc": [[949, "memrecordsacc"]], "torch.autograd.functional.vjp": [[924, "torch-autograd-functional-vjp"]], "torch.autograd.functional.hvp": [[920, "torch-autograd-functional-hvp"]], "KinetoStepTracker": [[939, "kinetosteptracker"]], "torch.broadcast_to": [[966, "torch-broadcast-to"]], "torch.bitwise_right_shift": [[959, "torch-bitwise-right-shift"]], "set_multithreading_enabled": [[928, "set-multithreading-enabled"]], "torch.autograd.graph.Node.name": [[933, "torch-autograd-graph-node-name"]], "torch.autograd.functional.jvp": [[922, "torch-autograd-functional-jvp"]], "torch.autograd.profiler.load_nvprof": [[940, "torch-autograd-profiler-load-nvprof"]], "Kernel": [[948, "kernel"]], "torch.bmm": [[963, "torch-bmm"]], "torch.autograd.graph.Node.metadata": [[932, "torch-autograd-graph-node-metadata"]], "torch.autograd.gradcheck.gradcheck": [[930, "torch-autograd-gradcheck-gradcheck"]], "torch.autograd.functional.hessian": [[919, "torch-autograd-functional-hessian"]], "torch.bernoulli": [[953, "torch-bernoulli"]], "torch.bitwise_not": [[957, "torch-bitwise-not"]], "torch.autograd.profiler.profile.export_chrome_trace": [[942, "torch-autograd-profiler-profile-export-chrome-trace"]], "set_grad_enabled": [[927, "set-grad-enabled"]], "torch.autograd.functional.vhp": [[923, "torch-autograd-functional-vhp"]], "torch.bitwise_left_shift": [[956, "torch-bitwise-left-shift"]], "torch.arcsin": [[879, "torch-arcsin"]], "torch.arctan2": [[882, "torch-arctan2"]], "torch.atleast_3d": [[899, "torch-atleast-3d"]], "BackwardCFunction": [[911, "backwardcfunction"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[915, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.autograd.forward_ad.enter_dual_level": [[907, "torch-autograd-forward-ad-enter-dual-level"]], "torch.asarray": [[891, "torch-asarray"]], "torch.asin": [[892, "torch-asin"]], "torch.arctan": [[881, "torch-arctan"]], "quantize_dynamic": [[869, "quantize-dynamic"]], "torch.atanh": [[896, "torch-atanh"]], "torch.autograd.backward": [[904, "torch-autograd-backward"]], "prepare_qat_fx": [[873, "prepare-qat-fx"]], "torch.arccos": [[877, "torch-arccos"]], "torch.argmin": [[886, "torch-argmin"]], "quantize": [[868, "quantize"]], "torch.arcsinh": [[880, "torch-arcsinh"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[913, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.atleast_2d": [[898, "torch-atleast-2d"]], "torch.arctanh": [[883, "torch-arctanh"]], "torch.autograd.forward_ad.make_dual": [[909, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.Function.vmap": [[903, "torch-autograd-function-vmap"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[912, "torch-autograd-function-functionctx-mark-dirty"]], "torch.arange": [[876, "torch-arange"]], "torch.argmax": [[885, "torch-argmax"]], "torch.atleast_1d": [[897, "torch-atleast-1d"]], "torch.autograd.Function.jvp": [[902, "torch-autograd-function-jvp"]], "torch.atan2": [[895, "torch-atan2"]], "torch.are_deterministic_algorithms_enabled": [[884, "torch-are-deterministic-algorithms-enabled"]], "torch.as_strided": [[889, "torch-as-strided"]], "prepare_fx": [[872, "prepare-fx"]], "torch.argwhere": [[888, "torch-argwhere"]], "torch.autograd.Function.forward": [[901, "torch-autograd-function-forward"]], "torch.autograd.forward_ad.unpack_dual": [[910, "torch-autograd-forward-ad-unpack-dual"]], "dual_level": [[906, "dual-level"]], "torch.asinh": [[893, "torch-asinh"]], "InplaceFunction": [[916, "inplacefunction"]], "torch.arccosh": [[878, "torch-arccosh"]], "convert_fx": [[870, "convert-fx"]], "quantize_qat": [[874, "quantize-qat"]], "torch.as_tensor": [[890, "torch-as-tensor"]], "torch.autograd.Function.backward": [[900, "torch-autograd-function-backward"]], "torch.atan": [[894, "torch-atan"]], "fuse_fx": [[871, "fuse-fx"]], "swap_module": [[875, "swap-module"]], "NestedIOFunction": [[917, "nestediofunction"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[914, "torch-autograd-function-functionctx-save-for-backward"]], "torch.autograd.forward_ad.exit_dual_level": [[908, "torch-autograd-forward-ad-exit-dual-level"]], "torch.argsort": [[887, "torch-argsort"]], "UnpackedDualTensor": [[905, "unpackeddualtensor"]], "get_default_qconfig_mapping": [[867, "get-default-qconfig-mapping"]], "torch.testing": [[2121, "module-torch.testing"]], "TorchInductor GPU Profiling": [[2139, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[2139, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[2139, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[2139, "benchmark-individual-triton-kernel"]], "Reproducibility": [[2093, "reproducibility"]], "Controlling sources of randomness": [[2093, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[2093, "pytorch-random-number-generator"]], "Python": [[2093, "python"]], "Random number generators in other libraries": [[2093, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[2093, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[2093, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[2093, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[2093, "cuda-rnn-and-lstm"]], "Filling uninitialized memory": [[2093, "filling-uninitialized-memory"]], "DataLoader": [[2093, "dataloader"]], "Fake tensor": [[2135, "fake-tensor"]], "Related work": [[2135, "related-work"]], "Overall architecture": [[2135, "overall-architecture"], [2132, "overall-architecture"]], "API: the important bits": [[2135, "api-the-important-bits"]], "About the tensor subclass": [[2135, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[2135, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[2135, "how-does-the-converter-work"]], "Performance characteristics": [[2135, "performance-characteristics"]], "Fake tensor of fake tensor?": [[2135, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[2135, "interaction-with-dynamic-shapes"]], "Other resources": [[2135, "other-resources"]], "TorchScript-based ONNX Exporter": [[2099, "torchscript-based-onnx-exporter"], [2096, "torchscript-based-onnx-exporter"]], "Example: AlexNet from PyTorch to ONNX": [[2099, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[2099, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[2099, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[2099, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[2099, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[2099, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Limitations": [[2099, "limitations"], [2130, "limitations"], [2137, "limitations"]], "Differences in Operator Implementations": [[2099, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[2099, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[2099, "reads-gets"]], "Writes / Sets": [[2099, "writes-sets"]], "Adding support for operators": [[2099, "adding-support-for-operators"]], "ONNX exporter internals": [[2099, "onnx-exporter-internals"]], "ATen operators": [[2099, "aten-operators"]], "List of supported operators": [[2099, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[2099, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[2099, "torch-autograd-functions"]], "Static Symbolic Method": [[2099, "static-symbolic-method"]], "Inline Autograd Function": [[2099, "inline-autograd-function"]], "Custom operators": [[2099, "custom-operators"]], "ONNX-script functions": [[2099, "onnx-script-functions"]], "C++ Operators": [[2099, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[2099, "discovering-all-unconvertible-aten-ops-at-once"]], "Classes": [[2099, "classes"]], "Distributed RPC Framework": [[2109, "distributed-rpc-framework"]], "RPC": [[2109, "rpc"]], "TensorPipe Backend": [[2109, "tensorpipe-backend"]], "RRef": [[2109, "rref"]], "More Information about RRef": [[2109, null]], "RemoteModule": [[2109, "remotemodule"]], "Distributed Autograd Framework": [[2109, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[2109, null]], "Distributed Optimizer": [[2109, "distributed-optimizer"], [2110, "distributed-optimizer"]], "torch.profiler": [[2103, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[2103, "intel-instrumentation-and-tracing-technology-apis"]], "Quantization Accuracy Debugging": [[2105, "quantization-accuracy-debugging"], [2104, "quantization-accuracy-debugging"]], "Data insensitive error": [[2105, "data-insensitive-error"]], "General tips": [[2105, "general-tips"]], "Int8 quantization tips": [[2105, "int8-quantization-tips"]], "Data sensitive error": [[2105, "data-sensitive-error"]], "Implementation error": [[2105, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[2105, "numerical-debugging-tooling-prototype"]], "Quantization Backend Configuration": [[2106, "quantization-backend-configuration"], [2104, "quantization-backend-configuration"]], "Default values for native configurations": [[2106, "default-values-for-native-configurations"]], "IRs": [[2140, "irs"]], "Core Aten IR": [[2140, "core-aten-ir"]], "Prims IR": [[2140, "prims-ir"]], "torch.compiler API reference": [[2128, "torch-compiler-api-reference"]], "Remote Reference Protocol": [[2111, "remote-reference-protocol"]], "Background": [[2111, "background"], [2130, "background"], [2110, "background"]], "RRef Lifetime": [[2111, "rref-lifetime"]], "Design Reasoning": [[2111, "design-reasoning"]], "Protocol Scenarios": [[2111, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[2111, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[2111, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[2111, "owner-share-rref-with-user"]], "User Share RRef with User": [[2111, "user-share-rref-with-user"]], "TorchDynamo-based ONNX Exporter": [[2097, "torchdynamo-based-onnx-exporter"], [2096, "torchdynamo-based-onnx-exporter"]], "Dependencies": [[2097, "dependencies"]], "A simple example": [[2097, "a-simple-example"]], "Inspecting the ONNX model using GUI": [[2097, "inspecting-the-onnx-model-using-gui"]], "Diagnosing issues with SARIF": [[2097, "diagnosing-issues-with-sarif"]], "ONNX Diagnostic SARIF Rules": [[2097, null]], "Custom Backends": [[2131, "custom-backends"]], "Registering Custom Backends": [[2131, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[2131, "custom-backends-after-aotautograd"]], "Debugging Backend": [[2131, "debugging-backend"]], "Speedy Backend": [[2131, "speedy-backend"]], "Composable Backends": [[2131, "composable-backends"]], "torch.ao.ns._numeric_suite_fx": [[2125, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[2125, "torch-ao-ns-fx-utils"]], "Best Practices for Backends": [[2129, "best-practices-for-backends"]], "x86 CPU": [[2129, "x86-cpu"]], "torch.compiler": [[2126, "torch-compiler"]], "Getting Started for PyTorch Users": [[2126, null]], "HowTo for PyTorch Backend Vendors": [[2126, null]], "CUDAGraph Trees": [[2130, "cudagraph-trees"]], "PyTorch CUDAGraph Integration": [[2130, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[2130, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[2130, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[2130, "cudagraph-trees-integration"]], "Input Mutation Support": [[2130, "input-mutation-support"]], "Dynamic Shape Support": [[2130, "dynamic-shape-support"]], "NCCL Support": [[2130, "nccl-support"]], "Reasons for Skipping CUDAGraph": [[2130, "reasons-for-skipping-cudagraph"]], "torch.sparse": [[2114, "torch-sparse"]], "Why and when to use sparsity": [[2114, "why-and-when-to-use-sparsity"]], "Functionality overview": [[2114, "functionality-overview"]], "Operator overview": [[2114, "operator-overview"]], "Sparse Semi-Structured Tensors": [[2114, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[2114, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[2114, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[2114, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[2114, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[2114, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[2114, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[2114, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[2114, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[2114, "sparse-csr-tensor"]], "Construction of CSR tensors": [[2114, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[2114, "csr-tensor-operations"]], "Sparse CSC Tensor": [[2114, "sparse-csc-tensor"]], "Construction of CSC tensors": [[2114, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[2114, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[2114, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[2114, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[2114, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[2114, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[2114, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[2114, "linear-algebra-operations"]], "Tensor methods and sparse": [[2114, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[2114, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[2114, "other-functions"]], "Zero-preserving unary functions": [[2114, "zero-preserving-unary-functions"]], "Threading Environment Variables": [[2122, "threading-environment-variables"]], "Dynamo Overview": [[2134, "dynamo-overview"]], "Dynamo Internals": [[2134, "dynamo-internals"]], "What is a guard?": [[2134, "what-is-a-guard"]], "What is Dynamo doing?": [[2134, "what-is-dynamo-doing"]], "How to inspect artifacts generated by Dynamo?": [[2134, "how-to-inspect-artifacts-generated-by-dynamo"]], "torch.package": [[2102, "torch-package"]], "Packaging your first model": [[2102, "packaging-your-first-model"]], "How do I\u2026": [[2102, "how-do-i"]], "See what is inside a package?": [[2102, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[2102, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[2102, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[2102, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[2102, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[2102, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[2102, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[2102, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[2102, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[2102, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[2102, "re-export-an-imported-object"]], "Package a TorchScript module?": [[2102, "package-a-torchscript-module"]], "Explanation": [[2102, "explanation"]], "torch.package Format Overview": [[2102, "torch-package-format-overview"]], "Framework files": [[2102, "framework-files"]], "User files": [[2102, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[2102, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[2102, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[2102, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[2102, "dependency-management"]], "intern": [[2102, "intern"]], "extern": [[2102, "extern"]], "mock": [[2102, "mock"]], "Refactoring": [[2102, "refactoring"]], "Patterns": [[2102, "patterns"]], "torch.package sharp edges": [[2102, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[2102, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[2102, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[2102, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[2102, "mangling"]], "torch.Tensor": [[2120, "torch-tensor"]], "Data types": [[2120, "data-types"]], "Initializing and basic operations": [[2120, "initializing-and-basic-operations"]], "Tensor class reference": [[2120, "tensor-class-reference"]], "PyTorch 2.0 NNModule Support": [[2141, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[2141, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[2141, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[2141, "state-dict-hooks"]], "torch.signal": [[2112, "module-torch.signal"]], "torch.signal.windows": [[2112, "module-torch.signal.windows"]], "torch.random": [[2108, "module-torch.random"]], "ONNX supported TorchScript operators": [[2100, "onnx-supported-torchscript-operators"]], "Supported operators": [[2100, "supported-operators"]], "ONNX support for TorchScript operators": [[2100, "id1"]], "Unsupported operators": [[2100, "unsupported-operators"], [2100, "id2"]], "Does torch.compile support training?": [[2136, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[2136, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[2136, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[2136, "why-is-my-code-crashing"]], "Why is compilation slow?": [[2136, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[2136, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[2136, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[2136, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[2136, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[2136, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[2136, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[2136, "why-am-i-getting-ooms"]], "Does torch.func work with torch.compile (for grad and vmap transforms)?": [[2136, "does-torch-func-work-with-torch-compile-for-grad-and-vmap-transforms"]], "Calling torch.func transform inside of a function handled with torch.compile": [[2136, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Compiling torch.func.grad with torch.compile": [[2136, "compiling-torch-func-grad-with-torch-compile"]], "Compiling torch.vmap with torch.compile": [[2136, "compiling-torch-vmap-with-torch-compile"]], "Compiling functions besides the ones which are supported (escape hatch)": [[2136, "compiling-functions-besides-the-ones-which-are-supported-escape-hatch"]], "Does NumPy work with torch.compile?": [[2136, "does-numpy-work-with-torch-compile"]], "Which NumPy features does torch.compile support?": [[2136, "which-numpy-features-does-torch-compile-support"]], "Can I compile NumPy code using torch.compile?": [[2136, "can-i-compile-numpy-code-using-torch-compile"]], "Can I execute NumPy code on CUDA and compute gradients via torch.compile?": [[2136, "can-i-execute-numpy-code-on-cuda-and-compute-gradients-via-torch-compile"]], "How do I debug NumPy code under torch.compile?": [[2136, "how-do-i-debug-numpy-code-under-torch-compile"]], "I torch.compile some NumPy code and I did not see any speed-up.": [[2136, "i-torch-compile-some-numpy-code-and-i-did-not-see-any-speed-up"]], "Which API to use for fine grain tracing?": [[2136, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[2136, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[2136, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[2136, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "torch.ao.ns._numeric_suite": [[2124, "torch-ao-ns-numeric-suite"]], "TorchDynamo APIs for fine-grained tracing": [[2137, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[2137, "id1"]], "torch._dynamo.disallow_in_graph": [[2137, "torch-dynamo-disallow-in-graph"]], "Numerical accuracy": [[2092, "numerical-accuracy"]], "Batched computations or slice computations": [[2092, "batched-computations-or-slice-computations"]], "Extremal values": [[2092, "extremal-values"]], "Linear algebra (torch.linalg)": [[2092, "linear-algebra-torch-linalg"]], "Non-finite values": [[2092, "non-finite-values"]], "Extremal values in linalg": [[2092, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere (and later) devices": [[2092, "tensorfloat-32-tf32-on-nvidia-ampere-and-later-devices"]], "Reduced Precision Reduction for FP16 and BF16 GEMMs": [[2092, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[2092, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Serialization semantics": [[2094, "serialization-semantics"]], "Table of Contents": [[2094, "table-of-contents"]], "Saving and loading tensors": [[2094, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[2094, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[2094, "saving-and-loading-torch-nn-modules"]], "Serialized file format for torch.save": [[2094, "serialized-file-format-for-torch-save"]], "Serializing torch.nn.Modules and loading them in C++": [[2094, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[2094, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[2094, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[2094, "torch-full-always-inferring-a-float-dtype"]], "Utility functions": [[2094, "utility-functions"], [2107, "utility-functions"]], "torch.special": [[2115, "torch-special"]], "torch.Size": [[2113, "torch-size"]], "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models": [[2127, "aotinductor-ahead-of-time-compilation-for-torch-export-ed-models"]], "Model Compilation": [[2127, "model-compilation"]], "Inference in C++": [[2127, "inference-in-c"]], "Multiprocessing best practices": [[2091, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[2091, "cuda-in-multiprocessing"]], "Best practices and tips": [[2091, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[2091, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[2091, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[2091, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[2091, "hogwild"]], "CPU in multiprocessing": [[2091, "cpu-in-multiprocessing"]], "CPU oversubscription": [[2091, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[2091, "avoid-cpu-oversubscription"]], "Dynamo Deep-Dive": [[2133, "dynamo-deep-dive"]], "A Gentle Introduction to Dynamo": [[2133, "a-gentle-introduction-to-dynamo"]], "PEP 523: Adding a frame evaluation API to CPython": [[2133, "pep-523-adding-a-frame-evaluation-api-to-cpython"]], "Implementing CPython in Python": [[2133, "implementing-cpython-in-python"]], "Generating the Output Graph": [[2133, "generating-the-output-graph"]], "Making Dynamo Sound: Guards": [[2133, "making-dynamo-sound-guards"]], "Symbolic Shapes": [[2133, "symbolic-shapes"]], "Static by default": [[2133, "static-by-default"]], "0, 1 are always specialized": [[2133, "are-always-specialized"]], "Duck shaping": [[2133, "duck-shaping"]], "Guards on symbolic ints": [[2133, "guards-on-symbolic-ints"]], "Making Dynamo Complete: Graph Breaks": [[2133, "making-dynamo-complete-graph-breaks"]], "Conclusion": [[2133, "conclusion"]], "Footnotes": [[2133, "footnotes"]], "Quantization API Reference": [[2107, "quantization-api-reference"], [2104, "quantization-api-reference"]], "torch.ao.quantization": [[2107, "torch-ao-quantization"]], "Top level APIs": [[2107, "top-level-apis"]], "Preparing model for quantization": [[2107, "preparing-model-for-quantization"]], "torch.ao.quantization.quantize_fx": [[2107, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[2107, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[2107, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[2107, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[2107, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[2107, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.export_utils": [[2107, "torch-ao-quantization-pt2e-export-utils"]], "PT2 Export (pt2e) Numeric Debugger": [[2107, "pt2-export-pt2e-numeric-debugger"]], "torch (quantization related functions)": [[2107, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[2107, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[2107, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[2107, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[2107, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[2107, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[2107, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[2107, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2107, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[2107, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2107, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[2107, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[2107, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[2107, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[2107, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[2107, "quantized-dtypes-and-quantization-schemes"]], "Windows FAQ": [[2095, "windows-faq"]], "Building from source": [[2095, "building-from-source"]], "Include optional components": [[2095, "include-optional-components"]], "Speeding CUDA build for Windows": [[2095, "speeding-cuda-build-for-windows"]], "One key install script": [[2095, "one-key-install-script"]], "Extension": [[2095, "extension"]], "CFFI Extension": [[2095, "cffi-extension"]], "Cpp Extension": [[2095, "cpp-extension"]], "Installation": [[2095, "installation"]], "Package not found in win-32 channel.": [[2095, "package-not-found-in-win-32-channel"]], "Import error": [[2095, "import-error"]], "Usage (multiprocessing)": [[2095, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[2095, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[2095, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[2095, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[2095, "cuda-ipc-operations"]], "torch.optim": [[2101, "module-torch.optim"]], "How to use an optimizer": [[2101, "how-to-use-an-optimizer"]], "Constructing it": [[2101, "constructing-it"]], "Per-parameter options": [[2101, "per-parameter-options"]], "Taking an optimization step": [[2101, "taking-an-optimization-step"]], "optimizer.step()": [[2101, "optimizer-step"]], "optimizer.step(closure)": [[2101, "optimizer-step-closure"]], "Base class": [[2101, "base-class"]], "Algorithms": [[2101, "algorithms"]], "How to adjust learning rate": [[2101, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[2101, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[2101, "constructing-averaged-models"]], "Custom averaging strategies": [[2101, "custom-averaging-strategies"]], "SWA learning rate schedules": [[2101, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[2101, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[2101, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[2101, "putting-it-all-together-ema"]], "torch": [[2123, "module-torch"]], "Tensors": [[2123, "tensors"]], "Creation Ops": [[2123, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[2123, "indexing-slicing-joining-mutating-ops"]], "Accelerators": [[2123, "accelerators"]], "Generators": [[2123, "generators"]], "Random sampling": [[2123, "random-sampling"]], "In-place random sampling": [[2123, "in-place-random-sampling"]], "Quasi-random sampling": [[2123, "quasi-random-sampling"]], "Parallelism": [[2123, "parallelism"]], "Math operations": [[2123, "math-operations"]], "Pointwise Ops": [[2123, "pointwise-ops"]], "Reduction Ops": [[2123, "reduction-ops"]], "Comparison Ops": [[2123, "comparison-ops"]], "Spectral Ops": [[2123, "spectral-ops"]], "Other Operations": [[2123, "other-operations"]], "BLAS and LAPACK Operations": [[2123, "blas-and-lapack-operations"]], "Foreach Operations": [[2123, "foreach-operations"]], "Symbolic Numbers": [[2123, "symbolic-numbers"]], "Export Path": [[2123, "export-path"]], "Control Flow": [[2123, "control-flow"]], "Optimizations": [[2123, "optimizations"]], "Operator Tags": [[2123, "operator-tags"]], "ONNX Backend for TorchDynamo": [[2098, "onnx-backend-for-torchdynamo"]], "torch.onnx": [[2096, "torch-onnx"]], "Contributing / Developing": [[2096, "contributing-developing"]], "Tensor Views": [[2118, "tensor-views"]], "Quantization": [[2104, "module-torch.ao.quantization"]], "Introduction to Quantization": [[2104, "introduction-to-quantization"]], "Quantization API Summary": [[2104, "quantization-api-summary"]], "Eager Mode Quantization": [[2104, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[2104, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[2104, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[2104, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[2104, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype - maintenance mode) FX Graph Mode Quantization": [[2104, "prototype-maintenance-mode-fx-graph-mode-quantization"]], "(Prototype) PyTorch 2 Export Quantization": [[2104, "prototype-pytorch-2-export-quantization"]], "Quantization Stack": [[2104, "quantization-stack"]], "Quantized Model": [[2104, "quantized-model"]], "Quantized Tensor": [[2104, "quantized-tensor"]], "Quantize and Dequantize": [[2104, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[2104, "quantized-operators-modules"]], "Quantized Engine": [[2104, "quantized-engine"]], "Quantization Flow": [[2104, "quantization-flow"]], "Observer and FakeQuantize": [[2104, "observer-and-fakequantize"]], "QConfig": [[2104, "qconfig"], [852, "qconfig"]], "General Quantization Flow": [[2104, "general-quantization-flow"]], "Quantization Support Matrix": [[2104, "quantization-support-matrix"]], "Quantization Mode Support": [[2104, "quantization-mode-support"]], "Quantization Flow Support": [[2104, "quantization-flow-support"]], "Backend/Hardware Support": [[2104, "backend-hardware-support"]], "Note for native CPU backends": [[2104, "note-for-native-cpu-backends"]], "Operator Support": [[2104, "operator-support"]], "Quantization Customizations": [[2104, "quantization-customizations"]], "Quantization Custom Module API": [[2104, "quantization-custom-module-api"]], "Best Practices": [[2104, "best-practices"]], "Common Errors": [[2104, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[2104, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[2104, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[2104, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[2104, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "Tensor Attributes": [[2117, "tensor-attributes"]], "torch.dtype": [[2117, "torch-dtype"]], "torch.device": [[2117, "torch-device"]], "torch.layout": [[2117, "torch-layout"]], "torch.memory_format": [[2117, "torch-memory-format"]], "torch.Storage": [[2116, "torch-storage"]], "Using a pretrained model": [[2138, "using-a-pretrained-model"]], "Next Steps": [[2138, "next-steps"]], "torch.utils.tensorboard": [[2119, "module-torch.utils.tensorboard"]], "Distributed Autograd Design": [[2110, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[2110, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[2110, "distributed-autograd-context"]], "Distributed Backward Pass": [[2110, "distributed-backward-pass"]], "Computing dependencies": [[2110, "computing-dependencies"]], "FAST mode algorithm": [[2110, "fast-mode-algorithm"]], "SMART mode algorithm": [[2110, "smart-mode-algorithm"]], "Simple end to end example": [[2110, "simple-end-to-end-example"]], "Dynamic shapes": [[2132, "dynamic-shapes"]], "Abridged public API": [[2132, "abridged-public-api"]], "The Guard Model": [[2132, "the-guard-model"]], "Abridged internal API": [[2132, "abridged-internal-api"]], "DimDynamic policy": [[2132, "dimdynamic-policy"]], "Unbacked SymInts": [[2132, "unbacked-symints"]], "default_dynamic_qconfig": [[855, "default-dynamic-qconfig"]], "default_float_qparams_observer": [[839, "default-float-qparams-observer"]], "default_dynamic_quant_observer": [[838, "default-dynamic-quant-observer"]], "float16_dynamic_qconfig": [[861, "float16-dynamic-qconfig"]], "load_observer_state_dict": [[846, "load-observer-state-dict"]], "generate_numeric_debug_handle": [[827, "generate-numeric-debug-handle"]], "NoopObserver": [[832, "noopobserver"]], "default_qconfig": [[859, "default-qconfig"]], "prepare_qat": [[849, "prepare-qat"]], "default_qat_qconfig_v2": [[858, "default-qat-qconfig-v2"]], "get_observer_state_dict": [[845, "get-observer-state-dict"]], "QConfigMapping": [[865, "qconfigmapping"]], "propagate_qconfig": [[850, "propagate-qconfig"]], "default_qat_qconfig": [[857, "default-qat-qconfig"]], "enable_fake_quant": [[820, "enable-fake-quant"]], "PerChannelMinMaxObserver": [[834, "perchannelminmaxobserver"]], "default_placeholder_observer": [[843, "default-placeholder-observer"]], "per_channel_dynamic_qconfig": [[864, "per-channel-dynamic-qconfig"]], "disable_fake_quant": [[818, "disable-fake-quant"]], "default_histogram_observer": [[840, "default-histogram-observer"]], "MovingAverageMinMaxObserver": [[830, "movingaverageminmaxobserver"]], "FuseCustomConfig": [[824, "fusecustomconfig"]], "default_debug_observer": [[837, "default-debug-observer"]], "default_weight_fake_quant": [[817, "default-weight-fake-quant"]], "prepare": [[847, "prepare"]], "prepare_for_propagation_comparison": [[848, "prepare-for-propagation-comparison"]], "default_activation_only_qconfig": [[853, "default-activation-only-qconfig"]], "StandaloneModuleConfigEntry": [[826, "standalonemoduleconfigentry"]], "default_per_channel_weight_observer": [[842, "default-per-channel-weight-observer"]], "PlaceholderObserver": [[835, "placeholderobserver"]], "float_qparams_weight_only_qconfig": [[863, "float-qparams-weight-only-qconfig"]], "RecordingObserver": [[836, "recordingobserver"]], "ObserverBase": [[833, "observerbase"]], "ConvertCustomConfig": [[823, "convertcustomconfig"]], "fuse_modules": [[822, "fuse-modules"]], "disable_observer": [[819, "disable-observer"]], "default_debug_qconfig": [[854, "default-debug-qconfig"]], "MovingAveragePerChannelMinMaxObserver": [[831, "movingaverageperchannelminmaxobserver"]], "HistogramObserver": [[828, "histogramobserver"]], "default_weight_only_qconfig": [[860, "default-weight-only-qconfig"]], "MinMaxObserver": [[829, "minmaxobserver"]], "PrepareCustomConfig": [[825, "preparecustomconfig"]], "default_per_channel_weight_fake_quant": [[816, "default-per-channel-weight-fake-quant"]], "default_weight_observer": [[844, "default-weight-observer"]], "model_is_exported": [[851, "model-is-exported"]], "float16_static_qconfig": [[862, "float16-static-qconfig"]], "default_observer": [[841, "default-observer"]], "enable_observer": [[821, "enable-observer"]], "get_default_qat_qconfig_mapping": [[866, "get-default-qat-qconfig-mapping"]], "default_per_channel_qconfig": [[856, "default-per-channel-qconfig"]], "QuantStub": [[795, "quantstub"]], "FakeQuantize": [[807, "fakequantize"]], "default_histogram_fake_quant": [[815, "default-histogram-fake-quant"]], "add_quant_dequant": [[797, "add-quant-dequant"]], "default_fake_quant": [[811, "default-fake-quant"]], "linear": [[786, "linear"]], "adaptive_avg_pool2d": [[771, "adaptive-avg-pool2d"]], "FakeQuantizeBase": [[808, "fakequantizebase"]], "DTypeWithConstraints": [[801, "dtypewithconstraints"]], "upsample_nearest": [[792, "upsample-nearest"]], "default_eval_fn": [[805, "default-eval-fn"]], "ObservationType": [[802, "observationtype"]], "DeQuantStub": [[793, "dequantstub"]], "NUMERIC_DEBUG_HANDLE_KEY": [[794, "numeric-debug-handle-key"]], "upsample": [[790, "upsample"]], "hardswish": [[782, "hardswish"]], "default_fused_wt_fake_quant": [[814, "default-fused-wt-fake-quant"]], "threshold": [[789, "threshold"]], "extract_results_from_loggers": [[806, "extract-results-from-loggers"]], "conv3d": [[779, "conv3d"]], "clamp": [[776, "clamp"]], "avg_pool3d": [[774, "avg-pool3d"]], "default_fused_per_channel_wt_fake_quant": [[813, "default-fused-per-channel-wt-fake-quant"]], "BackendConfig": [[798, "backendconfig"]], "hardtanh": [[783, "hardtanh"]], "max_pool1d": [[787, "max-pool1d"]], "celu": [[775, "celu"]], "conv2d": [[778, "conv2d"]], "FusedMovingAvgObsFakeQuantize": [[810, "fusedmovingavgobsfakequantize"]], "default_fused_act_fake_quant": [[812, "default-fused-act-fake-quant"]], "BackendPatternConfig": [[799, "backendpatternconfig"]], "conv1d": [[777, "conv1d"]], "avg_pool2d": [[773, "avg-pool2d"]], "DTypeConfig": [[800, "dtypeconfig"]], "QuantWrapper": [[796, "quantwrapper"]], "elu": [[780, "elu"]], "upsample_bilinear": [[791, "upsample-bilinear"]], "max_pool2d": [[788, "max-pool2d"]], "convert": [[804, "convert"]], "FixedQParamsFakeQuantize": [[809, "fixedqparamsfakequantize"]], "adaptive_avg_pool3d": [[772, "adaptive-avg-pool3d"]], "leaky_relu": [[785, "leaky-relu"]], "hardsigmoid": [[781, "hardsigmoid"]], "interpolate": [[784, "interpolate"]], "compare_results": [[803, "compare-results"]], "ConvBn2d": [[718, "convbn2d"], [708, "convbn2d"]], "FXFloatFunctional": [[752, "fxfloatfunctional"]], "ConvBnReLU1d": [[720, "convbnrelu1d"], [710, "convbnrelu1d"]], "LinearReLU": [[734, "linearrelu"], [725, "linearrelu"], [733, "linearrelu"], [716, "linearrelu"]], "freeze_bn_stats": [[726, "freeze-bn-stats"]], "BNReLU3d": [[729, "bnrelu3d"], [706, "bnrelu3d"]], "ConvBnReLU3d": [[722, "convbnrelu3d"], [712, "convbnrelu3d"]], "QFunctional": [[762, "qfunctional"]], "ConvBn1d": [[717, "convbn1d"], [707, "convbn1d"]], "ConvReLU3d": [[724, "convrelu3d"], [732, "convrelu3d"], [715, "convrelu3d"]], "ConvReLU2d": [[723, "convrelu2d"], [714, "convrelu2d"], [731, "convrelu2d"]], "FloatFunctional": [[753, "floatfunctional"]], "ConvBn3d": [[719, "convbn3d"], [709, "convbn3d"]], "BNReLU2d": [[728, "bnrelu2d"], [705, "bnrelu2d"]], "ConvBnReLU2d": [[721, "convbnrelu2d"], [711, "convbnrelu2d"]], "ConvReLU1d": [[730, "convrelu1d"], [713, "convrelu1d"]], "update_bn_stats": [[727, "update-bn-stats"]], "torch.addbmm": [[691, "torch-addbmm"]], "torch._foreach_tan_": [[681, "torch-foreach-tan"]], "torch.acosh": [[689, "torch-acosh"]], "torch._foreach_log_": [[665, "torch-foreach-log"]], "torch._logging.set_logs": [[685, "torch-logging-set-logs"]], "torch._foreach_trunc": [[682, "torch-foreach-trunc"]], "torch._foreach_zero_": [[684, "torch-foreach-zero"]], "torch.amax": [[700, "torch-amax"]], "torch.any": [[704, "torch-any"]], "torch.addcdiv": [[692, "torch-addcdiv"]], "torch._foreach_sqrt": [[678, "torch-foreach-sqrt"]], "torch._foreach_sqrt_": [[679, "torch-foreach-sqrt"]], "torch.abs": [[686, "torch-abs"]], "torch._foreach_reciprocal_": [[669, "torch-foreach-reciprocal"]], "torch.addr": [[696, "torch-addr"]], "torch.addmm": [[694, "torch-addmm"]], "torch.angle": [[703, "torch-angle"]], "torch.allclose": [[699, "torch-allclose"]], "torch._foreach_sin_": [[675, "torch-foreach-sin"]], "torch._foreach_trunc_": [[683, "torch-foreach-trunc"]], "torch.absolute": [[687, "torch-absolute"]], "torch.adjoint": [[697, "torch-adjoint"]], "torch._foreach_reciprocal": [[668, "torch-foreach-reciprocal"]], "torch._foreach_sinh": [[676, "torch-foreach-sinh"]], "torch._foreach_neg": [[666, "torch-foreach-neg"]], "torch.addcmul": [[693, "torch-addcmul"]], "torch._foreach_sinh_": [[677, "torch-foreach-sinh"]], "torch.all": [[698, "torch-all"]], "torch._foreach_sin": [[674, "torch-foreach-sin"]], "torch._foreach_neg_": [[667, "torch-foreach-neg"]], "torch._foreach_sigmoid_": [[673, "torch-foreach-sigmoid"]], "torch._foreach_tan": [[680, "torch-foreach-tan"]], "torch._foreach_log2_": [[664, "torch-foreach-log2"]], "torch._foreach_round_": [[671, "torch-foreach-round"]], "torch.addmv": [[695, "torch-addmv"]], "torch._foreach_round": [[670, "torch-foreach-round"]], "torch.add": [[690, "torch-add"]], "torch.aminmax": [[702, "torch-aminmax"]], "torch._foreach_log2": [[663, "torch-foreach-log2"]], "torch.amin": [[701, "torch-amin"]], "torch.acos": [[688, "torch-acos"]], "torch._foreach_sigmoid": [[672, "torch-foreach-sigmoid"]], "torch.Tensor.where": [[624, "torch-tensor-where"]], "torch._foreach_log": [[658, "torch-foreach-log"]], "torch.Tensor.untyped_storage": [[617, "torch-tensor-untyped-storage"]], "torch.Tensor.vsplit": [[623, "torch-tensor-vsplit"]], "torch._foreach_floor_": [[653, "torch-foreach-floor"]], "torch._foreach_expm1_": [[651, "torch-foreach-expm1"]], "torch._foreach_lgamma_": [[657, "torch-foreach-lgamma"]], "torch._foreach_lgamma": [[656, "torch-foreach-lgamma"]], "torch._foreach_asin": [[634, "torch-foreach-asin"]], "torch._foreach_atan": [[636, "torch-foreach-atan"]], "torch._assert": [[629, "torch-assert"]], "torch._foreach_cosh_": [[643, "torch-foreach-cosh"]], "torch._foreach_erfc_": [[647, "torch-foreach-erfc"]], "torch._foreach_log1p": [[661, "torch-foreach-log1p"]], "torch.Tensor.vdot": [[620, "torch-tensor-vdot"]], "torch.Tensor.unique": [[613, "torch-tensor-unique"]], "torch._foreach_cos": [[640, "torch-foreach-cos"]], "torch._foreach_expm1": [[650, "torch-foreach-expm1"]], "torch.Tensor.uniform_": [[612, "torch-tensor-uniform"]], "torch._foreach_frac_": [[655, "torch-foreach-frac"]], "torch.Tensor.unsqueeze": [[615, "torch-tensor-unsqueeze"]], "torch.Tensor.xlogy": [[625, "torch-tensor-xlogy"]], "torch._foreach_log10_": [[660, "torch-foreach-log10"]], "torch._foreach_atan_": [[637, "torch-foreach-atan"]], "torch._foreach_acos": [[632, "torch-foreach-acos"]], "torch._foreach_frac": [[654, "torch-foreach-frac"]], "torch._foreach_cos_": [[641, "torch-foreach-cos"]], "torch.Tensor.zero_": [[628, "torch-tensor-zero"]], "torch._foreach_abs": [[630, "torch-foreach-abs"]], "torch.Tensor.xlogy_": [[626, "torch-tensor-xlogy"]], "torch._foreach_erf": [[644, "torch-foreach-erf"]], "torch.Tensor.unsqueeze_": [[616, "torch-tensor-unsqueeze"]], "torch._foreach_exp_": [[649, "torch-foreach-exp"]], "torch._foreach_erfc": [[646, "torch-foreach-erfc"]], "torch.Tensor.var": [[619, "torch-tensor-var"]], "torch.Tensor.view_as": [[622, "torch-tensor-view-as"]], "torch._foreach_erf_": [[645, "torch-foreach-erf"]], "torch._foreach_exp": [[648, "torch-foreach-exp"]], "torch._foreach_log10": [[659, "torch-foreach-log10"]], "torch._foreach_floor": [[652, "torch-foreach-floor"]], "torch._foreach_acos_": [[633, "torch-foreach-acos"]], "torch._foreach_ceil_": [[639, "torch-foreach-ceil"]], "torch._foreach_abs_": [[631, "torch-foreach-abs"]], "torch.Tensor.unique_consecutive": [[614, "torch-tensor-unique-consecutive"]], "torch.Tensor.view": [[621, "torch-tensor-view"]], "torch.Tensor.values": [[618, "torch-tensor-values"]], "torch._foreach_log1p_": [[662, "torch-foreach-log1p"]], "torch._foreach_asin_": [[635, "torch-foreach-asin"]], "torch._foreach_ceil": [[638, "torch-foreach-ceil"]], "torch._foreach_cosh": [[642, "torch-foreach-cosh"]], "torch.Tensor.xpu": [[627, "torch-tensor-xpu"]], "torch.Tensor.storage_offset": [[562, "torch-tensor-storage-offset"]], "torch.Tensor.type": [[607, "torch-tensor-type"]], "torch.Tensor.unflatten": [[610, "torch-tensor-unflatten"]], "torch.Tensor.tensor_split": [[582, "torch-tensor-tensor-split"]], "torch.Tensor.triangular_solve": [[598, "torch-tensor-triangular-solve"]], "torch.Tensor.to_sparse_bsc": [[588, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.take_along_dim": [[577, "torch-tensor-take-along-dim"]], "torch.Tensor.sum": [[569, "torch-tensor-sum"]], "torch.Tensor.true_divide": [[603, "torch-tensor-true-divide"]], "torch.Tensor.unbind": [[609, "torch-tensor-unbind"]], "torch.Tensor.svd": [[571, "torch-tensor-svd"]], "torch.Tensor.to_sparse_coo": [[590, "torch-tensor-to-sparse-coo"]], "torch.Tensor.to_dense": [[585, "torch-tensor-to-dense"]], "torch.Tensor.triu": [[601, "torch-tensor-triu"]], "torch.Tensor.tril_": [[600, "torch-tensor-tril"]], "torch.Tensor.to_sparse_bsr": [[589, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.to_sparse_csc": [[591, "torch-tensor-to-sparse-csc"]], "torch.Tensor.transpose": [[596, "torch-tensor-transpose"]], "torch.Tensor.to": [[584, "torch-tensor-to"]], "torch.Tensor.trace": [[595, "torch-tensor-trace"]], "torch.Tensor.topk": [[594, "torch-tensor-topk"]], "torch.Tensor.transpose_": [[597, "torch-tensor-transpose"]], "torch.Tensor.tanh": [[580, "torch-tensor-tanh"]], "torch.Tensor.to_sparse": [[587, "torch-tensor-to-sparse"]], "torch.Tensor.t": [[574, "torch-tensor-t"]], "torch.Tensor.sub_": [[566, "torch-tensor-sub"]], "torch.Tensor.stride": [[564, "torch-tensor-stride"]], "torch.Tensor.unfold": [[611, "torch-tensor-unfold"]], "torch.Tensor.subtract": [[567, "torch-tensor-subtract"]], "torch.Tensor.sum_to_size": [[570, "torch-tensor-sum-to-size"]], "torch.Tensor.tolist": [[593, "torch-tensor-tolist"]], "torch.Tensor.tan": [[578, "torch-tensor-tan"]], "torch.Tensor.tril": [[599, "torch-tensor-tril"]], "torch.Tensor.swapaxes": [[572, "torch-tensor-swapaxes"]], "torch.Tensor.to_sparse_csr": [[592, "torch-tensor-to-sparse-csr"]], "torch.Tensor.t_": [[575, "torch-tensor-t"]], "torch.Tensor.true_divide_": [[604, "torch-tensor-true-divide"]], "torch.Tensor.sub": [[565, "torch-tensor-sub"]], "torch.Tensor.to_mkldnn": [[586, "torch-tensor-to-mkldnn"]], "torch.Tensor.type_as": [[608, "torch-tensor-type-as"]], "torch.Tensor.storage": [[561, "torch-tensor-storage"]], "torch.Tensor.trunc_": [[606, "torch-tensor-trunc"]], "torch.Tensor.swapdims": [[573, "torch-tensor-swapdims"]], "torch.Tensor.subtract_": [[568, "torch-tensor-subtract"]], "torch.Tensor.take": [[576, "torch-tensor-take"]], "torch.Tensor.triu_": [[602, "torch-tensor-triu"]], "torch.Tensor.tile": [[583, "torch-tensor-tile"]], "torch.Tensor.storage_type": [[563, "torch-tensor-storage-type"]], "torch.Tensor.tanh_": [[581, "torch-tensor-tanh"]], "torch.Tensor.tan_": [[579, "torch-tensor-tan"]], "torch.Tensor.trunc": [[605, "torch-tensor-trunc"]], "torch.Tensor.set_": [[524, "torch-tensor-set"]], "torch.Tensor.std": [[559, "torch-tensor-std"]], "torch.Tensor.sinh_": [[540, "torch-tensor-sinh"]], "torch.Tensor.signbit": [[534, "torch-tensor-signbit"]], "torch.Tensor.sgn_": [[526, "torch-tensor-sgn"]], "torch.Tensor.sspaddmm": [[558, "torch-tensor-sspaddmm"]], "torch.Tensor.share_memory_": [[528, "torch-tensor-share-memory"]], "torch.Tensor.sparse_dim": [[547, "torch-tensor-sparse-dim"]], "torch.Tensor.round_": [[512, "torch-tensor-round"]], "torch.Tensor.shape": [[527, "torch-tensor-shape"]], "torch.Tensor.row_indices": [[513, "torch-tensor-row-indices"]], "torch.Tensor.sign": [[532, "torch-tensor-sign"]], "torch.Tensor.rot90": [[510, "torch-tensor-rot90"]], "torch.Tensor.sin": [[535, "torch-tensor-sin"]], "torch.Tensor.rsqrt": [[514, "torch-tensor-rsqrt"]], "torch.Tensor.short": [[529, "torch-tensor-short"]], "torch.Tensor.softmax": [[545, "torch-tensor-softmax"]], "torch.Tensor.sparse_resize_": [[549, "torch-tensor-sparse-resize"]], "torch.Tensor.sqrt": [[552, "torch-tensor-sqrt"]], "torch.Tensor.rsqrt_": [[515, "torch-tensor-rsqrt"]], "torch.Tensor.sqrt_": [[553, "torch-tensor-sqrt"]], "torch.Tensor.scatter_reduce_": [[521, "torch-tensor-scatter-reduce"]], "torch.Tensor.sin_": [[536, "torch-tensor-sin"]], "torch.Tensor.sort": [[546, "torch-tensor-sort"]], "torch.Tensor.square_": [[555, "torch-tensor-square"]], "torch.Tensor.slogdet": [[543, "torch-tensor-slogdet"]], "torch.Tensor.scatter_reduce": [[520, "torch-tensor-scatter-reduce"]], "torch.Tensor.smm": [[544, "torch-tensor-smm"]], "torch.Tensor.split": [[551, "torch-tensor-split"]], "torch.Tensor.squeeze_": [[557, "torch-tensor-squeeze"]], "torch.Tensor.sigmoid": [[530, "torch-tensor-sigmoid"]], "torch.Tensor.sinh": [[539, "torch-tensor-sinh"]], "torch.Tensor.squeeze": [[556, "torch-tensor-squeeze"]], "torch.Tensor.scatter_add": [[518, "torch-tensor-scatter-add"]], "torch.Tensor.round": [[511, "torch-tensor-round"]], "torch.Tensor.sign_": [[533, "torch-tensor-sign"]], "torch.Tensor.scatter_": [[517, "torch-tensor-scatter"]], "torch.Tensor.square": [[554, "torch-tensor-square"]], "torch.Tensor.select_scatter": [[523, "torch-tensor-select-scatter"]], "torch.Tensor.sparse_resize_and_clear_": [[550, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.stft": [[560, "torch-tensor-stft"]], "torch.Tensor.sigmoid_": [[531, "torch-tensor-sigmoid"]], "torch.Tensor.scatter": [[516, "torch-tensor-scatter"]], "torch.Tensor.scatter_add_": [[519, "torch-tensor-scatter-add"]], "torch.Tensor.sinc": [[537, "torch-tensor-sinc"]], "torch.Tensor.size": [[541, "torch-tensor-size"]], "torch.Tensor.sinc_": [[538, "torch-tensor-sinc"]], "torch.Tensor.slice_scatter": [[542, "torch-tensor-slice-scatter"]], "torch.Tensor.sparse_mask": [[548, "torch-tensor-sparse-mask"]], "torch.Tensor.sgn": [[525, "torch-tensor-sgn"]], "torch.Tensor.select": [[522, "torch-tensor-select"]], "torch.Tensor.q_per_channel_axis": [[476, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.outer": [[465, "torch-tensor-outer"]], "torch.Tensor.ormqr": [[464, "torch-tensor-ormqr"]], "torch.Tensor.positive": [[471, "torch-tensor-positive"]], "torch.Tensor.polygamma_": [[470, "torch-tensor-polygamma"]], "torch.Tensor.qscheme": [[482, "torch-tensor-qscheme"]], "torch.Tensor.permute": [[466, "torch-tensor-permute"]], "torch.Tensor.polygamma": [[469, "torch-tensor-polygamma"]], "torch.Tensor.rad2deg": [[484, "torch-tensor-rad2deg"]], "torch.Tensor.prod": [[474, "torch-tensor-prod"]], "torch.Tensor.requires_grad": [[499, "torch-tensor-requires-grad"]], "torch.Tensor.requires_grad_": [[500, "torch-tensor-requires-grad"]], "torch.Tensor.reshape": [[501, "torch-tensor-reshape"]], "torch.Tensor.numpy": [[462, "torch-tensor-numpy"]], "torch.Tensor.quantile": [[483, "torch-tensor-quantile"]], "torch.Tensor.resolve_neg": [[506, "torch-tensor-resolve-neg"]], "torch.Tensor.roll": [[509, "torch-tensor-roll"]], "torch.Tensor.register_post_accumulate_grad_hook": [[492, "torch-tensor-register-post-accumulate-grad-hook"]], "torch.Tensor.pow_": [[473, "torch-tensor-pow"]], "torch.Tensor.orgqr": [[463, "torch-tensor-orgqr"]], "torch.Tensor.repeat": [[497, "torch-tensor-repeat"]], "torch.Tensor.q_scale": [[479, "torch-tensor-q-scale"]], "torch.Tensor.retains_grad": [[508, "torch-tensor-retains-grad"]], "torch.Tensor.reshape_as": [[502, "torch-tensor-reshape-as"]], "torch.Tensor.not_equal_": [[460, "torch-tensor-not-equal"]], "torch.Tensor.retain_grad": [[507, "torch-tensor-retain-grad"]], "torch.Tensor.resolve_conj": [[505, "torch-tensor-resolve-conj"]], "torch.Tensor.register_hook": [[491, "torch-tensor-register-hook"]], "torch.Tensor.pin_memory": [[467, "torch-tensor-pin-memory"]], "torch.Tensor.ravel": [[486, "torch-tensor-ravel"]], "torch.Tensor.pinverse": [[468, "torch-tensor-pinverse"]], "torch.Tensor.q_zero_point": [[480, "torch-tensor-q-zero-point"]], "torch.Tensor.resize_": [[503, "torch-tensor-resize"]], "torch.Tensor.reciprocal_": [[489, "torch-tensor-reciprocal"]], "torch.Tensor.repeat_interleave": [[498, "torch-tensor-repeat-interleave"]], "torch.Tensor.remainder_": [[494, "torch-tensor-remainder"]], "torch.Tensor.random_": [[485, "torch-tensor-random"]], "torch.Tensor.resize_as_": [[504, "torch-tensor-resize-as"]], "torch.Tensor.real": [[487, "torch-tensor-real"]], "torch.Tensor.pow": [[472, "torch-tensor-pow"]], "torch.Tensor.put_": [[475, "torch-tensor-put"]], "torch.Tensor.qr": [[481, "torch-tensor-qr"]], "torch.Tensor.q_per_channel_zero_points": [[478, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.reciprocal": [[488, "torch-tensor-reciprocal"]], "torch.Tensor.renorm_": [[496, "torch-tensor-renorm"]], "torch.Tensor.remainder": [[493, "torch-tensor-remainder"]], "torch.Tensor.q_per_channel_scales": [[477, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.not_equal": [[459, "torch-tensor-not-equal"]], "torch.Tensor.numel": [[461, "torch-tensor-numel"]], "torch.Tensor.renorm": [[495, "torch-tensor-renorm"]], "torch.Tensor.record_stream": [[490, "torch-tensor-record-stream"]], "torch.Tensor.narrow": [[437, "torch-tensor-narrow"]], "torch.Tensor.nonzero": [[456, "torch-tensor-nonzero"]], "torch.Tensor.narrow_copy": [[438, "torch-tensor-narrow-copy"]], "torch.Tensor.nextafter_": [[455, "torch-tensor-nextafter"]], "torch.Tensor.mul": [[423, "torch-tensor-mul"]], "torch.Tensor.mode": [[418, "torch-tensor-mode"]], "torch.Tensor.nan_to_num_": [[432, "torch-tensor-nan-to-num"]], "torch.Tensor.norm": [[457, "torch-tensor-norm"]], "torch.Tensor.mul_": [[424, "torch-tensor-mul"]], "torch.Tensor.neg_": [[445, "torch-tensor-neg"]], "torch.Tensor.multiply_": [[427, "torch-tensor-multiply"]], "torch.Tensor.negative_": [[447, "torch-tensor-negative"]], "torch.Tensor.movedim": [[421, "torch-tensor-movedim"]], "torch.Tensor.nelement": [[448, "torch-tensor-nelement"]], "torch.Tensor.ne": [[442, "torch-tensor-ne"]], "torch.Tensor.mm": [[417, "torch-tensor-mm"]], "torch.Tensor.mv": [[428, "torch-tensor-mv"]], "torch.Tensor.nbytes": [[439, "torch-tensor-nbytes"]], "torch.Tensor.median": [[414, "torch-tensor-median"]], "torch.Tensor.moveaxis": [[420, "torch-tensor-moveaxis"]], "torch.Tensor.mvlgamma": [[429, "torch-tensor-mvlgamma"]], "torch.Tensor.new_zeros": [[453, "torch-tensor-new-zeros"]], "torch.Tensor.mean": [[413, "torch-tensor-mean"]], "torch.Tensor.min": [[415, "torch-tensor-min"]], "torch.Tensor.msort": [[422, "torch-tensor-msort"]], "torch.Tensor.neg": [[444, "torch-tensor-neg"]], "torch.Tensor.maximum": [[412, "torch-tensor-maximum"]], "torch.Tensor.nanmean": [[433, "torch-tensor-nanmean"]], "torch.Tensor.nansum": [[436, "torch-tensor-nansum"]], "torch.Tensor.nan_to_num": [[431, "torch-tensor-nan-to-num"]], "torch.Tensor.ndim": [[440, "torch-tensor-ndim"]], "torch.Tensor.multinomial": [[425, "torch-tensor-multinomial"]], "torch.Tensor.nanmedian": [[434, "torch-tensor-nanmedian"]], "torch.Tensor.new_full": [[450, "torch-tensor-new-full"]], "torch.Tensor.normal_": [[458, "torch-tensor-normal"]], "torch.Tensor.nextafter": [[454, "torch-tensor-nextafter"]], "torch.Tensor.ndimension": [[441, "torch-tensor-ndimension"]], "torch.Tensor.nanquantile": [[435, "torch-tensor-nanquantile"]], "torch.Tensor.matrix_power": [[410, "torch-tensor-matrix-power"]], "torch.Tensor.multiply": [[426, "torch-tensor-multiply"]], "torch.Tensor.minimum": [[416, "torch-tensor-minimum"]], "torch.Tensor.max": [[411, "torch-tensor-max"]], "torch.Tensor.new_empty": [[449, "torch-tensor-new-empty"]], "torch.Tensor.matmul": [[408, "torch-tensor-matmul"]], "torch.Tensor.new_ones": [[451, "torch-tensor-new-ones"]], "torch.Tensor.new_tensor": [[452, "torch-tensor-new-tensor"]], "torch.Tensor.matrix_exp": [[409, "torch-tensor-matrix-exp"]], "torch.Tensor.mvlgamma_": [[430, "torch-tensor-mvlgamma"]], "torch.Tensor.module_load": [[419, "torch-tensor-module-load"]], "torch.Tensor.ne_": [[443, "torch-tensor-ne"]], "torch.Tensor.negative": [[446, "torch-tensor-negative"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.amp)": [[0, "torch.amp.custom_bwd"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.amp)": [[0, "torch.amp.custom_fwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "is_autocast_available() (in module torch.amp.autocast_mode)": [[0, "torch.amp.autocast_mode.is_autocast_available"]], "module": [[0, "module-torch.amp"], [0, "module-torch.amp.autocast_mode"], [0, "module-torch.amp.grad_scaler"], [0, "module-torch.cpu.amp"], [0, "module-torch.cpu.amp.autocast_mode"], [0, "module-torch.cpu.amp.grad_scaler"], [0, "module-torch.cuda.amp"], [0, "module-torch.cuda.amp.autocast_mode"], [0, "module-torch.cuda.amp.common"], [0, "module-torch.cuda.amp.grad_scaler"], [1, "module-torch.autograd"], [1, "module-torch.autograd.anomaly_mode"], [1, "module-torch.autograd.forward_ad"], [1, "module-torch.autograd.function"], [1, "module-torch.autograd.functional"], [1, "module-torch.autograd.grad_mode"], [1, "module-torch.autograd.gradcheck"], [1, "module-torch.autograd.graph"], [1, "module-torch.autograd.profiler"], [1, "module-torch.autograd.profiler_legacy"], [1, "module-torch.autograd.profiler_util"], [1, "module-torch.autograd.variable"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.cudnn.rnn"], [2, "module-torch.backends.mha"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.nnpack"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xeon.run_cpu"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [13, "module-torch.__config__"], [16, "module-torch.cpu"], [17, "module-torch.cuda"], [17, "module-torch.cuda.comm"], [17, "module-torch.cuda.error"], [17, "module-torch.cuda.graphs"], [17, "module-torch.cuda.jiterator"], [17, "module-torch.cuda.memory"], [17, "module-torch.cuda.nccl"], [17, "module-torch.cuda.nvtx"], [17, "module-torch.cuda.profiler"], [17, "module-torch.cuda.random"], [17, "module-torch.cuda.sparse"], [17, "module-torch.cuda.streams"], [18, "module-torch.cuda._sanitizer"], [19, "module-torch.cuda.tunable"], [23, "module-torch.utils.data"], [23, "module-torch.utils.data.datapipes"], [23, "module-torch.utils.data.datapipes.dataframe"], [23, "module-torch.utils.data.datapipes.iter"], [23, "module-torch.utils.data.datapipes.map"], [23, "module-torch.utils.data.datapipes.utils"], [27, "module-torch.utils.deterministic"], [28, "module-torch.distributed"], [28, "module-torch.distributed.algorithms"], [28, "module-torch.distributed.algorithms.ddp_comm_hooks"], [28, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"], [28, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"], [28, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"], [28, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"], [28, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"], [28, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"], [28, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"], [28, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"], [28, "module-torch.distributed.algorithms.join"], [28, "module-torch.distributed.algorithms.model_averaging"], [28, "module-torch.distributed.algorithms.model_averaging.averagers"], [28, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"], [28, "module-torch.distributed.algorithms.model_averaging.utils"], [28, "module-torch.distributed.argparse_util"], [28, "module-torch.distributed.c10d_logger"], [28, "module-torch.distributed.checkpoint.api"], [28, "module-torch.distributed.checkpoint.default_planner"], [28, "module-torch.distributed.checkpoint.filesystem"], [28, "module-torch.distributed.checkpoint.metadata"], [28, "module-torch.distributed.checkpoint.optimizer"], [28, "module-torch.distributed.checkpoint.planner"], [28, "module-torch.distributed.checkpoint.planner_helpers"], [28, "module-torch.distributed.checkpoint.resharding"], [28, "module-torch.distributed.checkpoint.state_dict"], [28, "module-torch.distributed.checkpoint.state_dict_loader"], [28, "module-torch.distributed.checkpoint.state_dict_saver"], [28, "module-torch.distributed.checkpoint.stateful"], [28, "module-torch.distributed.checkpoint.storage"], [28, "module-torch.distributed.checkpoint.utils"], [28, "module-torch.distributed.collective_utils"], [28, "module-torch.distributed.constants"], [28, "module-torch.distributed.device_mesh"], [28, "module-torch.distributed.distributed_c10d"], [28, "module-torch.distributed.elastic"], [28, "module-torch.distributed.elastic.agent.server.api"], [28, "module-torch.distributed.elastic.agent.server.local_elastic_agent"], [28, "module-torch.distributed.elastic.events.api"], [28, "module-torch.distributed.elastic.events.handlers"], [28, "module-torch.distributed.elastic.metrics.api"], [28, "module-torch.distributed.elastic.multiprocessing.api"], [28, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"], [28, "module-torch.distributed.elastic.multiprocessing.errors.handlers"], [28, "module-torch.distributed.elastic.multiprocessing.redirects"], [28, "module-torch.distributed.elastic.multiprocessing.tail_log"], [28, "module-torch.distributed.elastic.rendezvous.api"], [28, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"], [28, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"], [28, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"], [28, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"], [28, "module-torch.distributed.elastic.rendezvous.etcd_server"], [28, "module-torch.distributed.elastic.rendezvous.etcd_store"], [28, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"], [28, "module-torch.distributed.elastic.rendezvous.utils"], [28, "module-torch.distributed.elastic.timer.api"], [28, "module-torch.distributed.elastic.timer.file_based_local_timer"], [28, "module-torch.distributed.elastic.timer.local_timer"], [28, "module-torch.distributed.elastic.utils"], [28, "module-torch.distributed.elastic.utils.api"], [28, "module-torch.distributed.elastic.utils.data"], [28, "module-torch.distributed.elastic.utils.data.cycling_iterator"], [28, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"], [28, "module-torch.distributed.elastic.utils.distributed"], [28, "module-torch.distributed.elastic.utils.log_level"], [28, "module-torch.distributed.elastic.utils.logging"], [28, "module-torch.distributed.elastic.utils.store"], [28, "module-torch.distributed.fsdp.api"], [28, "module-torch.distributed.fsdp.fully_sharded_data_parallel"], [28, "module-torch.distributed.fsdp.sharded_grad_scaler"], [28, "module-torch.distributed.fsdp.wrap"], [28, "module-torch.distributed.launch"], [28, "module-torch.distributed.launcher"], [28, "module-torch.distributed.launcher.api"], [28, "module-torch.distributed.logging_handlers"], [28, "module-torch.distributed.nn"], [28, "module-torch.distributed.nn.api"], [28, "module-torch.distributed.nn.api.remote_module"], [28, "module-torch.distributed.nn.functional"], [28, "module-torch.distributed.nn.jit"], [28, "module-torch.distributed.nn.jit.instantiator"], [28, "module-torch.distributed.nn.jit.templates"], [28, "module-torch.distributed.nn.jit.templates.remote_module_template"], [28, "module-torch.distributed.optim.apply_optimizer_in_backward"], [28, "module-torch.distributed.optim.functional_adadelta"], [28, "module-torch.distributed.optim.functional_adagrad"], [28, "module-torch.distributed.optim.functional_adam"], [28, "module-torch.distributed.optim.functional_adamax"], [28, "module-torch.distributed.optim.functional_adamw"], [28, "module-torch.distributed.optim.functional_rmsprop"], [28, "module-torch.distributed.optim.functional_rprop"], [28, "module-torch.distributed.optim.functional_sgd"], [28, "module-torch.distributed.optim.named_optimizer"], [28, "module-torch.distributed.optim.optimizer"], [28, "module-torch.distributed.optim.post_localSGD_optimizer"], [28, "module-torch.distributed.optim.utils"], [28, "module-torch.distributed.optim.zero_redundancy_optimizer"], [28, "module-torch.distributed.remote_device"], [28, "module-torch.distributed.rendezvous"], [28, "module-torch.distributed.rpc.api"], [28, "module-torch.distributed.rpc.backend_registry"], [28, "module-torch.distributed.rpc.constants"], [28, "module-torch.distributed.rpc.functions"], [28, "module-torch.distributed.rpc.internal"], [28, "module-torch.distributed.rpc.options"], [28, "module-torch.distributed.rpc.rref_proxy"], [28, "module-torch.distributed.rpc.server_process_global_profiler"], [28, "module-torch.distributed.tensor"], [28, "module-torch.distributed.tensor.parallel.api"], [28, "module-torch.distributed.tensor.parallel.ddp"], [28, "module-torch.distributed.tensor.parallel.fsdp"], [28, "module-torch.distributed.tensor.parallel.input_reshard"], [28, "module-torch.distributed.tensor.parallel.loss"], [28, "module-torch.distributed.tensor.parallel.style"], [28, "module-torch.distributed.utils"], [30, "module-torch.distributed.checkpoint"], [30, "module-torch.distributed.checkpoint.format_utils"], [30, "module-torch.distributed.checkpoint.logger"], [30, "module-torch.distributed.checkpoint.logging_handlers"], [30, "module-torch.distributed.checkpoint.staging"], [32, "module-torch.distributed.optim"], [33, "module-torch.distributed.pipelining"], [33, "module-torch.distributed.pipelining.microbatch"], [33, "module-torch.distributed.pipelining.schedules"], [33, "module-torch.distributed.pipelining.stage"], [34, "module-torch.distributed.tensor.parallel"], [35, "module-torch.distributions"], [35, "module-torch.distributions.bernoulli"], [35, "module-torch.distributions.beta"], [35, "module-torch.distributions.binomial"], [35, "module-torch.distributions.categorical"], [35, "module-torch.distributions.cauchy"], [35, "module-torch.distributions.chi2"], [35, "module-torch.distributions.constraint_registry"], [35, "module-torch.distributions.constraints"], [35, "module-torch.distributions.continuous_bernoulli"], [35, "module-torch.distributions.dirichlet"], [35, "module-torch.distributions.distribution"], [35, "module-torch.distributions.exp_family"], [35, "module-torch.distributions.exponential"], [35, "module-torch.distributions.fishersnedecor"], [35, "module-torch.distributions.gamma"], [35, "module-torch.distributions.geometric"], [35, "module-torch.distributions.gumbel"], [35, "module-torch.distributions.half_cauchy"], [35, "module-torch.distributions.half_normal"], [35, "module-torch.distributions.independent"], [35, "module-torch.distributions.inverse_gamma"], [35, "module-torch.distributions.kl"], [35, "module-torch.distributions.kumaraswamy"], [35, "module-torch.distributions.laplace"], [35, "module-torch.distributions.lkj_cholesky"], [35, "module-torch.distributions.log_normal"], [35, "module-torch.distributions.logistic_normal"], [35, "module-torch.distributions.lowrank_multivariate_normal"], [35, "module-torch.distributions.mixture_same_family"], [35, "module-torch.distributions.multinomial"], [35, "module-torch.distributions.multivariate_normal"], [35, "module-torch.distributions.negative_binomial"], [35, "module-torch.distributions.normal"], [35, "module-torch.distributions.one_hot_categorical"], [35, "module-torch.distributions.pareto"], [35, "module-torch.distributions.poisson"], [35, "module-torch.distributions.relaxed_bernoulli"], [35, "module-torch.distributions.relaxed_categorical"], [35, "module-torch.distributions.studentT"], [35, "module-torch.distributions.transformed_distribution"], [35, "module-torch.distributions.transforms"], [35, "module-torch.distributions.uniform"], [35, "module-torch.distributions.utils"], [35, "module-torch.distributions.von_mises"], [35, "module-torch.distributions.weibull"], [35, "module-torch.distributions.wishart"], [37, "module-torch.distributed.elastic.agent"], [37, "module-torch.distributed.elastic.agent.server"], [37, "module-torch.distributed.elastic.agent.server.health_check_server"], [38, "module-torch.distributed.elastic.control_plane"], [40, "module-torch.distributed.elastic.multiprocessing.errors"], [41, "module-torch.distributed.elastic.events"], [44, "module-torch.distributed.elastic.metrics"], [45, "module-torch.distributed.elastic.multiprocessing"], [47, "module-torch.distributed.elastic.rendezvous"], [47, "module-torch.distributed.elastic.rendezvous.registry"], [48, "module-torch.distributed.run"], [49, "module-torch.distributed.elastic.multiprocessing.subprocess_handler"], [49, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.handlers"], [49, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler"], [50, "module-torch.distributed.elastic.timer"], [50, "module-torch.distributed.elastic.timer.debug_info_logging"], [52, "module-torch.export"], [52, "module-torch.export.custom_obj"], [52, "module-torch.export.dynamic_shapes"], [52, "module-torch.export.experimental"], [52, "module-torch.export.exported_program"], [52, "module-torch.export.graph_signature"], [52, "module-torch.export.unflatten"], [54, "module-torch.fft"], [55, "module-torch.distributed.fsdp"], [57, "module-torch.func"], [62, "module-torch.__future__"], [63, "module-torch.futures"], [64, "module-torch.fx"], [64, "module-torch.fx.annotate"], [64, "module-torch.fx.config"], [64, "module-torch.fx.experimental"], [64, "module-torch.fx.experimental.accelerator_partitioner"], [64, "module-torch.fx.experimental.const_fold"], [64, "module-torch.fx.experimental.debug"], [64, "module-torch.fx.experimental.graph_gradual_typechecker"], [64, "module-torch.fx.experimental.merge_matmul"], [64, "module-torch.fx.experimental.meta_tracer"], [64, "module-torch.fx.experimental.migrate_gradual_types"], [64, "module-torch.fx.experimental.migrate_gradual_types.constraint"], [64, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"], [64, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"], [64, "module-torch.fx.experimental.migrate_gradual_types.operation"], [64, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"], [64, "module-torch.fx.experimental.migrate_gradual_types.util"], [64, "module-torch.fx.experimental.migrate_gradual_types.z3_types"], [64, "module-torch.fx.experimental.normalize"], [64, "module-torch.fx.experimental.optimization"], [64, "module-torch.fx.experimental.partitioner_utils"], [64, "module-torch.fx.experimental.recording"], [64, "module-torch.fx.experimental.refinement_types"], [64, "module-torch.fx.experimental.rewriter"], [64, "module-torch.fx.experimental.schema_type_annotation"], [64, "module-torch.fx.experimental.sym_node"], [64, "module-torch.fx.experimental.unification"], [64, "module-torch.fx.experimental.unification.core"], [64, "module-torch.fx.experimental.unification.dispatch"], [64, "module-torch.fx.experimental.unification.match"], [64, "module-torch.fx.experimental.unification.more"], [64, "module-torch.fx.experimental.unification.multipledispatch"], [64, "module-torch.fx.experimental.unification.multipledispatch.conflict"], [64, "module-torch.fx.experimental.unification.multipledispatch.core"], [64, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"], [64, "module-torch.fx.experimental.unification.multipledispatch.utils"], [64, "module-torch.fx.experimental.unification.multipledispatch.variadic"], [64, "module-torch.fx.experimental.unification.unification_tools"], [64, "module-torch.fx.experimental.unification.utils"], [64, "module-torch.fx.experimental.unification.variable"], [64, "module-torch.fx.experimental.unify_refinements"], [64, "module-torch.fx.experimental.validator"], [64, "module-torch.fx.graph"], [64, "module-torch.fx.graph_module"], [64, "module-torch.fx.immutable_collections"], [64, "module-torch.fx.interpreter"], [64, "module-torch.fx.node"], [64, "module-torch.fx.operator_schemas"], [64, "module-torch.fx.passes"], [64, "module-torch.fx.passes.annotate_getitem_nodes"], [64, "module-torch.fx.passes.backends"], [64, "module-torch.fx.passes.backends.cudagraphs"], [64, "module-torch.fx.passes.dialect"], [64, "module-torch.fx.passes.dialect.common"], [64, "module-torch.fx.passes.dialect.common.cse_pass"], [64, "module-torch.fx.passes.fake_tensor_prop"], [64, "module-torch.fx.passes.graph_drawer"], [64, "module-torch.fx.passes.graph_manipulation"], [64, "module-torch.fx.passes.graph_transform_observer"], [64, "module-torch.fx.passes.infra"], [64, "module-torch.fx.passes.infra.partitioner"], [64, "module-torch.fx.passes.infra.pass_base"], [64, "module-torch.fx.passes.infra.pass_manager"], [64, "module-torch.fx.passes.net_min_base"], [64, "module-torch.fx.passes.operator_support"], [64, "module-torch.fx.passes.param_fetch"], [64, "module-torch.fx.passes.pass_manager"], [64, "module-torch.fx.passes.reinplace"], [64, "module-torch.fx.passes.runtime_assert"], [64, "module-torch.fx.passes.shape_prop"], [64, "module-torch.fx.passes.split_module"], [64, "module-torch.fx.passes.split_utils"], [64, "module-torch.fx.passes.splitter_base"], [64, "module-torch.fx.passes.tests"], [64, "module-torch.fx.passes.tests.test_pass_manager"], [64, "module-torch.fx.passes.tools_common"], [64, "module-torch.fx.passes.utils"], [64, "module-torch.fx.passes.utils.common"], [64, "module-torch.fx.passes.utils.fuser_utils"], [64, "module-torch.fx.passes.utils.matcher_utils"], [64, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"], [64, "module-torch.fx.passes.utils.source_matcher_utils"], [64, "module-torch.fx.proxy"], [64, "module-torch.fx.subgraph_rewriter"], [64, "module-torch.fx.tensor_type"], [64, "module-torch.fx.traceback"], [65, "module-torch.fx.experimental.proxy_tensor"], [65, "module-torch.fx.experimental.symbolic_shapes"], [2042, "module-torch.hub"], [2044, "module-torch.jit"], [2044, "module-torch.jit.annotations"], [2044, "module-torch.jit.frontend"], [2044, "module-torch.jit.generate_bytecode"], [2044, "module-torch.jit.mobile"], [2044, "module-torch.jit.quantized"], [2045, "module-torch.jit.supported_ops"], [2049, "module-torch.jit.unsupported_tensor_ops"], [2050, "module-torch.utils.jit"], [2051, "module-torch.library"], [2052, "module-torch.linalg"], [2053, "module-torch._logging"], [2054, "module-torch.masked"], [2054, "module-torch.masked.maskedtensor"], [2054, "module-torch.masked.maskedtensor.binary"], [2054, "module-torch.masked.maskedtensor.core"], [2054, "module-torch.masked.maskedtensor.creation"], [2054, "module-torch.masked.maskedtensor.passthrough"], [2054, "module-torch.masked.maskedtensor.reductions"], [2054, "module-torch.masked.maskedtensor.unary"], [2058, "module-torch.utils.model_zoo"], [2059, "module-torch.utils.module_tracker"], [2060, "module-torch.monitor"], [2061, "module-torch.mps"], [2061, "module-torch.mps.event"], [2061, "module-torch.mps.profiler"], [2063, "module-torch.mtia"], [2064, "module-torch.multiprocessing"], [2064, "module-torch.multiprocessing.pool"], [2064, "module-torch.multiprocessing.queue"], [2064, "module-torch.multiprocessing.reductions"], [2064, "module-torch.multiprocessing.spawn"], [2067, "module-torch.nested"], [2068, "module-torch.nn"], [2068, "module-torch.nn.backends"], [2068, "module-torch.nn.backends.thnn"], [2068, "module-torch.nn.common_types"], [2068, "module-torch.nn.cpp"], [2068, "module-torch.nn.functional"], [2068, "module-torch.nn.grad"], [2068, "module-torch.nn.init"], [2068, "module-torch.nn.modules"], [2068, "module-torch.nn.modules.activation"], [2068, "module-torch.nn.modules.adaptive"], [2068, "module-torch.nn.modules.batchnorm"], [2068, "module-torch.nn.modules.channelshuffle"], [2068, "module-torch.nn.modules.container"], [2068, "module-torch.nn.modules.conv"], [2068, "module-torch.nn.modules.distance"], [2068, "module-torch.nn.modules.dropout"], [2068, "module-torch.nn.modules.flatten"], [2068, "module-torch.nn.modules.fold"], [2068, "module-torch.nn.modules.instancenorm"], [2068, "module-torch.nn.modules.lazy"], [2068, "module-torch.nn.modules.linear"], [2068, "module-torch.nn.modules.loss"], [2068, "module-torch.nn.modules.module"], [2068, "module-torch.nn.modules.normalization"], [2068, "module-torch.nn.modules.padding"], [2068, "module-torch.nn.modules.pixelshuffle"], [2068, "module-torch.nn.modules.pooling"], [2068, "module-torch.nn.modules.rnn"], [2068, "module-torch.nn.modules.sparse"], [2068, "module-torch.nn.modules.transformer"], [2068, "module-torch.nn.modules.upsampling"], [2068, "module-torch.nn.modules.utils"], [2068, "module-torch.nn.parallel"], [2068, "module-torch.nn.parallel.comm"], [2068, "module-torch.nn.parallel.distributed"], [2068, "module-torch.nn.parallel.parallel_apply"], [2068, "module-torch.nn.parallel.replicate"], [2068, "module-torch.nn.parallel.scatter_gather"], [2068, "module-torch.nn.parameter"], [2068, "module-torch.nn.utils"], [2068, "module-torch.nn.utils.clip_grad"], [2068, "module-torch.nn.utils.convert_parameters"], [2068, "module-torch.nn.utils.fusion"], [2068, "module-torch.nn.utils.init"], [2068, "module-torch.nn.utils.memory_format"], [2068, "module-torch.nn.utils.parametrizations"], [2068, "module-torch.nn.utils.parametrize"], [2068, "module-torch.nn.utils.prune"], [2068, "module-torch.nn.utils.rnn"], [2068, "module-torch.nn.utils.stateless"], [2069, "module-torch.nn.attention"], [2070, "module-torch.nn.attention.bias"], [2071, "module-torch.nn.attention.flex_attention"], [2096, "module-torch.onnx.errors"], [2096, "module-torch.onnx.operators"], [2096, "module-torch.onnx.symbolic_caffe2"], [2096, "module-torch.onnx.symbolic_helper"], [2096, "module-torch.onnx.symbolic_opset10"], [2096, "module-torch.onnx.symbolic_opset11"], [2096, "module-torch.onnx.symbolic_opset12"], [2096, "module-torch.onnx.symbolic_opset13"], [2096, "module-torch.onnx.symbolic_opset14"], [2096, "module-torch.onnx.symbolic_opset15"], [2096, "module-torch.onnx.symbolic_opset16"], [2096, "module-torch.onnx.symbolic_opset17"], [2096, "module-torch.onnx.symbolic_opset18"], [2096, "module-torch.onnx.symbolic_opset19"], [2096, "module-torch.onnx.symbolic_opset20"], [2096, "module-torch.onnx.symbolic_opset7"], [2096, "module-torch.onnx.symbolic_opset8"], [2096, "module-torch.onnx.symbolic_opset9"], [2096, "module-torch.onnx.utils"], [2096, "module-torch.onnx.verification"], [2099, "module-torch.onnx"], [2101, "module-torch.optim"], [2101, "module-torch.optim.adadelta"], [2101, "module-torch.optim.adagrad"], [2101, "module-torch.optim.adam"], [2101, "module-torch.optim.adamax"], [2101, "module-torch.optim.adamw"], [2101, "module-torch.optim.asgd"], [2101, "module-torch.optim.lbfgs"], [2101, "module-torch.optim.lr_scheduler"], [2101, "module-torch.optim.nadam"], [2101, "module-torch.optim.optimizer"], [2101, "module-torch.optim.radam"], [2101, "module-torch.optim.rmsprop"], [2101, "module-torch.optim.rprop"], [2101, "module-torch.optim.sgd"], [2101, "module-torch.optim.sparse_adam"], [2101, "module-torch.optim.swa_utils"], [2102, "module-torch.package"], [2102, "module-torch.package.analyze"], [2102, "module-torch.package.analyze.find_first_use_of_broken_modules"], [2102, "module-torch.package.analyze.is_from_package"], [2102, "module-torch.package.analyze.trace_dependencies"], [2102, "module-torch.package.file_structure_representation"], [2102, "module-torch.package.find_file_dependencies"], [2102, "module-torch.package.glob_group"], [2102, "module-torch.package.importer"], [2102, "module-torch.package.package_exporter"], [2102, "module-torch.package.package_importer"], [2103, "module-torch.profiler"], [2103, "module-torch.profiler.itt"], [2103, "module-torch.profiler.profiler"], [2103, "module-torch.profiler.python_tracer"], [2104, "module-torch.ao"], [2104, "module-torch.ao.nn"], [2104, "module-torch.ao.nn.intrinsic.modules.fused"], [2104, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"], [2104, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"], [2104, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"], [2104, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2104, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"], [2104, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"], [2104, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"], [2104, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"], [2104, "module-torch.ao.nn.qat.dynamic.modules.linear"], [2104, "module-torch.ao.nn.qat.modules.conv"], [2104, "module-torch.ao.nn.qat.modules.embedding_ops"], [2104, "module-torch.ao.nn.qat.modules.linear"], [2104, "module-torch.ao.nn.quantizable"], [2104, "module-torch.ao.nn.quantizable.modules"], [2104, "module-torch.ao.nn.quantizable.modules.activation"], [2104, "module-torch.ao.nn.quantizable.modules.rnn"], [2104, "module-torch.ao.nn.quantized"], [2104, "module-torch.ao.nn.quantized.dynamic.modules.conv"], [2104, "module-torch.ao.nn.quantized.dynamic.modules.linear"], [2104, "module-torch.ao.nn.quantized.dynamic.modules.rnn"], [2104, "module-torch.ao.nn.quantized.modules.activation"], [2104, "module-torch.ao.nn.quantized.modules.batchnorm"], [2104, "module-torch.ao.nn.quantized.modules.conv"], [2104, "module-torch.ao.nn.quantized.modules.dropout"], [2104, "module-torch.ao.nn.quantized.modules.embedding_ops"], [2104, "module-torch.ao.nn.quantized.modules.functional_modules"], [2104, "module-torch.ao.nn.quantized.modules.linear"], [2104, "module-torch.ao.nn.quantized.modules.normalization"], [2104, "module-torch.ao.nn.quantized.modules.rnn"], [2104, "module-torch.ao.nn.quantized.modules.utils"], [2104, "module-torch.ao.nn.quantized.reference"], [2104, "module-torch.ao.nn.quantized.reference.modules"], [2104, "module-torch.ao.nn.quantized.reference.modules.conv"], [2104, "module-torch.ao.nn.quantized.reference.modules.linear"], [2104, "module-torch.ao.nn.quantized.reference.modules.rnn"], [2104, "module-torch.ao.nn.quantized.reference.modules.sparse"], [2104, "module-torch.ao.nn.quantized.reference.modules.utils"], [2104, "module-torch.ao.nn.sparse"], [2104, "module-torch.ao.nn.sparse.quantized"], [2104, "module-torch.ao.nn.sparse.quantized.dynamic"], [2104, "module-torch.ao.nn.sparse.quantized.dynamic.linear"], [2104, "module-torch.ao.nn.sparse.quantized.linear"], [2104, "module-torch.ao.nn.sparse.quantized.utils"], [2104, "module-torch.ao.ns"], [2104, "module-torch.ao.ns.fx"], [2104, "module-torch.ao.ns.fx.graph_matcher"], [2104, "module-torch.ao.ns.fx.graph_passes"], [2104, "module-torch.ao.ns.fx.mappings"], [2104, "module-torch.ao.ns.fx.n_shadows_utils"], [2104, "module-torch.ao.ns.fx.ns_types"], [2104, "module-torch.ao.ns.fx.pattern_utils"], [2104, "module-torch.ao.ns.fx.qconfig_multi_mapping"], [2104, "module-torch.ao.ns.fx.utils"], [2104, "module-torch.ao.ns.fx.weight_utils"], [2104, "module-torch.ao.pruning"], [2104, "module-torch.ao.pruning.scheduler"], [2104, "module-torch.ao.pruning.scheduler.base_scheduler"], [2104, "module-torch.ao.pruning.scheduler.cubic_scheduler"], [2104, "module-torch.ao.pruning.scheduler.lambda_scheduler"], [2104, "module-torch.ao.pruning.sparsifier"], [2104, "module-torch.ao.pruning.sparsifier.base_sparsifier"], [2104, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"], [2104, "module-torch.ao.pruning.sparsifier.utils"], [2104, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"], [2104, "module-torch.ao.quantization"], [2104, "module-torch.ao.quantization.backend_config"], [2104, "module-torch.ao.quantization.backend_config.backend_config"], [2104, "module-torch.ao.quantization.backend_config.executorch"], [2104, "module-torch.ao.quantization.backend_config.fbgemm"], [2104, "module-torch.ao.quantization.backend_config.native"], [2104, "module-torch.ao.quantization.backend_config.observation_type"], [2104, "module-torch.ao.quantization.backend_config.onednn"], [2104, "module-torch.ao.quantization.backend_config.qnnpack"], [2104, "module-torch.ao.quantization.backend_config.tensorrt"], [2104, "module-torch.ao.quantization.backend_config.utils"], [2104, "module-torch.ao.quantization.backend_config.x86"], [2104, "module-torch.ao.quantization.fake_quantize"], [2104, "module-torch.ao.quantization.fuse_modules"], [2104, "module-torch.ao.quantization.fuser_method_mappings"], [2104, "module-torch.ao.quantization.fx"], [2104, "module-torch.ao.quantization.fx.convert"], [2104, "module-torch.ao.quantization.fx.custom_config"], [2104, "module-torch.ao.quantization.fx.fuse"], [2104, "module-torch.ao.quantization.fx.fuse_handler"], [2104, "module-torch.ao.quantization.fx.graph_module"], [2104, "module-torch.ao.quantization.fx.lower_to_fbgemm"], [2104, "module-torch.ao.quantization.fx.lower_to_qnnpack"], [2104, "module-torch.ao.quantization.fx.lstm_utils"], [2104, "module-torch.ao.quantization.fx.match_utils"], [2104, "module-torch.ao.quantization.fx.pattern_utils"], [2104, "module-torch.ao.quantization.fx.prepare"], [2104, "module-torch.ao.quantization.fx.qconfig_mapping_utils"], [2104, "module-torch.ao.quantization.fx.quantize_handler"], [2104, "module-torch.ao.quantization.fx.tracer"], [2104, "module-torch.ao.quantization.fx.utils"], [2104, "module-torch.ao.quantization.observer"], [2104, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"], [2104, "module-torch.ao.quantization.pt2e.export_utils"], [2104, "module-torch.ao.quantization.pt2e.graph_utils"], [2104, "module-torch.ao.quantization.pt2e.port_metadata_pass"], [2104, "module-torch.ao.quantization.pt2e.prepare"], [2104, "module-torch.ao.quantization.pt2e.qat_utils"], [2104, "module-torch.ao.quantization.pt2e.representation.rewrite"], [2104, "module-torch.ao.quantization.pt2e.utils"], [2104, "module-torch.ao.quantization.qconfig"], [2104, "module-torch.ao.quantization.qconfig_mapping"], [2104, "module-torch.ao.quantization.quant_type"], [2104, "module-torch.ao.quantization.quantization_mappings"], [2104, "module-torch.ao.quantization.quantize_fx"], [2104, "module-torch.ao.quantization.quantize_jit"], [2104, "module-torch.ao.quantization.quantize_pt2e"], [2104, "module-torch.ao.quantization.quantizer.composable_quantizer"], [2104, "module-torch.ao.quantization.quantizer.embedding_quantizer"], [2104, "module-torch.ao.quantization.quantizer.quantizer"], [2104, "module-torch.ao.quantization.quantizer.utils"], [2104, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"], [2104, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"], [2104, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"], [2104, "module-torch.ao.quantization.stubs"], [2104, "module-torch.ao.quantization.utils"], [2104, "module-torch.nn.intrinsic.modules.fused"], [2104, "module-torch.nn.intrinsic.qat.modules.conv_fused"], [2104, "module-torch.nn.intrinsic.qat.modules.linear_fused"], [2104, "module-torch.nn.intrinsic.qat.modules.linear_relu"], [2104, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2104, "module-torch.nn.intrinsic.quantized.modules.bn_relu"], [2104, "module-torch.nn.intrinsic.quantized.modules.conv_relu"], [2104, "module-torch.nn.intrinsic.quantized.modules.linear_relu"], [2104, "module-torch.nn.qat.dynamic.modules.linear"], [2104, "module-torch.nn.qat.modules.conv"], [2104, "module-torch.nn.qat.modules.embedding_ops"], [2104, "module-torch.nn.qat.modules.linear"], [2104, "module-torch.nn.quantizable.modules.activation"], [2104, "module-torch.nn.quantizable.modules.rnn"], [2104, "module-torch.nn.quantized.dynamic.modules.conv"], [2104, "module-torch.nn.quantized.dynamic.modules.linear"], [2104, "module-torch.nn.quantized.dynamic.modules.rnn"], [2104, "module-torch.nn.quantized.functional"], [2104, "module-torch.nn.quantized.modules.activation"], [2104, "module-torch.nn.quantized.modules.batchnorm"], [2104, "module-torch.nn.quantized.modules.conv"], [2104, "module-torch.nn.quantized.modules.dropout"], [2104, "module-torch.nn.quantized.modules.embedding_ops"], [2104, "module-torch.nn.quantized.modules.functional_modules"], [2104, "module-torch.nn.quantized.modules.linear"], [2104, "module-torch.nn.quantized.modules.normalization"], [2104, "module-torch.nn.quantized.modules.rnn"], [2104, "module-torch.nn.quantized.modules.utils"], [2104, "module-torch.quantization.fake_quantize"], [2104, "module-torch.quantization.fuse_modules"], [2104, "module-torch.quantization.fuser_method_mappings"], [2104, "module-torch.quantization.fx.convert"], [2104, "module-torch.quantization.fx.fuse"], [2104, "module-torch.quantization.fx.fusion_patterns"], [2104, "module-torch.quantization.fx.graph_module"], [2104, "module-torch.quantization.fx.match_utils"], [2104, "module-torch.quantization.fx.pattern_utils"], [2104, "module-torch.quantization.fx.prepare"], [2104, "module-torch.quantization.fx.quantization_patterns"], [2104, "module-torch.quantization.fx.quantization_types"], [2104, "module-torch.quantization.fx.utils"], [2104, "module-torch.quantization.observer"], [2104, "module-torch.quantization.qconfig"], [2104, "module-torch.quantization.quant_type"], [2104, "module-torch.quantization.quantization_mappings"], [2104, "module-torch.quantization.quantize"], [2104, "module-torch.quantization.quantize_fx"], [2104, "module-torch.quantization.quantize_jit"], [2104, "module-torch.quantization.stubs"], [2104, "module-torch.quantization.utils"], [2107, "module-torch.ao.nn.intrinsic"], [2107, "module-torch.ao.nn.intrinsic.modules"], [2107, "module-torch.ao.nn.intrinsic.qat"], [2107, "module-torch.ao.nn.intrinsic.qat.modules"], [2107, "module-torch.ao.nn.intrinsic.quantized"], [2107, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [2107, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [2107, "module-torch.ao.nn.intrinsic.quantized.modules"], [2107, "module-torch.ao.nn.qat"], [2107, "module-torch.ao.nn.qat.dynamic"], [2107, "module-torch.ao.nn.qat.dynamic.modules"], [2107, "module-torch.ao.nn.qat.modules"], [2107, "module-torch.ao.nn.quantized.dynamic"], [2107, "module-torch.ao.nn.quantized.dynamic.modules"], [2107, "module-torch.ao.nn.quantized.functional"], [2107, "module-torch.ao.nn.quantized.modules"], [2107, "module-torch.ao.quantization.pt2e"], [2107, "module-torch.ao.quantization.pt2e.representation"], [2107, "module-torch.ao.quantization.quantizer"], [2107, "module-torch.nn.intrinsic"], [2107, "module-torch.nn.intrinsic.modules"], [2107, "module-torch.nn.intrinsic.qat"], [2107, "module-torch.nn.intrinsic.qat.modules"], [2107, "module-torch.nn.intrinsic.quantized"], [2107, "module-torch.nn.intrinsic.quantized.dynamic"], [2107, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [2107, "module-torch.nn.intrinsic.quantized.modules"], [2107, "module-torch.nn.qat"], [2107, "module-torch.nn.qat.dynamic"], [2107, "module-torch.nn.qat.dynamic.modules"], [2107, "module-torch.nn.qat.modules"], [2107, "module-torch.nn.quantizable"], [2107, "module-torch.nn.quantizable.modules"], [2107, "module-torch.nn.quantized"], [2107, "module-torch.nn.quantized.dynamic"], [2107, "module-torch.nn.quantized.dynamic.modules"], [2107, "module-torch.nn.quantized.modules"], [2107, "module-torch.quantization"], [2107, "module-torch.quantization.fx"], [2108, "module-torch.random"], [2109, "module-torch.distributed.autograd"], [2109, "module-torch.distributed.rpc"], [2112, "module-torch.signal"], [2112, "module-torch.signal.windows"], [2114, "module-torch.sparse"], [2115, "module-torch.special"], [2119, "module-torch.utils.tensorboard"], [2121, "module-torch.testing"], [2123, "module-torch"], [2123, "module-torch.contrib"], [2123, "module-torch.functional"], [2123, "module-torch.quasirandom"], [2123, "module-torch.return_types"], [2123, "module-torch.serialization"], [2123, "module-torch.signal.windows.windows"], [2123, "module-torch.sparse.semi_structured"], [2123, "module-torch.storage"], [2123, "module-torch.torch_version"], [2123, "module-torch.types"], [2123, "module-torch.utils.backcompat"], [2123, "module-torch.utils.hipify"], [2123, "module-torch.utils.model_dump"], [2123, "module-torch.utils.viz"], [2123, "module-torch.version"], [2124, "module-torch.ao.ns._numeric_suite"], [2125, "module-torch.ao.ns._numeric_suite_fx"], [2128, "module-torch.compiler"], [2146, "module-torch.overrides"], [2151, "module-torch.utils"], [2151, "module-torch.utils.backend_registration"], [2151, "module-torch.utils.benchmark.examples.blas_compare_setup"], [2151, "module-torch.utils.benchmark.examples.compare"], [2151, "module-torch.utils.benchmark.examples.fuzzer"], [2151, "module-torch.utils.benchmark.examples.op_benchmark"], [2151, "module-torch.utils.benchmark.examples.simple_timeit"], [2151, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"], [2151, "module-torch.utils.benchmark.op_fuzzers.binary"], [2151, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"], [2151, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"], [2151, "module-torch.utils.benchmark.op_fuzzers.spectral"], [2151, "module-torch.utils.benchmark.op_fuzzers.unary"], [2151, "module-torch.utils.benchmark.utils.common"], [2151, "module-torch.utils.benchmark.utils.compare"], [2151, "module-torch.utils.benchmark.utils.compile"], [2151, "module-torch.utils.benchmark.utils.cpp_jit"], [2151, "module-torch.utils.benchmark.utils.fuzzer"], [2151, "module-torch.utils.benchmark.utils.sparse_fuzzer"], [2151, "module-torch.utils.benchmark.utils.timer"], [2151, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"], [2151, "module-torch.utils.bundled_inputs"], [2151, "module-torch.utils.checkpoint"], [2151, "module-torch.utils.collect_env"], [2151, "module-torch.utils.cpp_backtrace"], [2151, "module-torch.utils.cpp_extension"], [2151, "module-torch.utils.data.backward_compatibility"], [2151, "module-torch.utils.data.dataloader"], [2151, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"], [2151, "module-torch.utils.data.datapipes.dataframe.dataframes"], [2151, "module-torch.utils.data.datapipes.dataframe.datapipes"], [2151, "module-torch.utils.data.datapipes.dataframe.structures"], [2151, "module-torch.utils.data.datapipes.datapipe"], [2151, "module-torch.utils.data.datapipes.gen_pyi"], [2151, "module-torch.utils.data.datapipes.iter.callable"], [2151, "module-torch.utils.data.datapipes.iter.combinatorics"], [2151, "module-torch.utils.data.datapipes.iter.combining"], [2151, "module-torch.utils.data.datapipes.iter.filelister"], [2151, "module-torch.utils.data.datapipes.iter.fileopener"], [2151, "module-torch.utils.data.datapipes.iter.grouping"], [2151, "module-torch.utils.data.datapipes.iter.routeddecoder"], [2151, "module-torch.utils.data.datapipes.iter.selecting"], [2151, "module-torch.utils.data.datapipes.iter.sharding"], [2151, "module-torch.utils.data.datapipes.iter.streamreader"], [2151, "module-torch.utils.data.datapipes.iter.utils"], [2151, "module-torch.utils.data.datapipes.map.callable"], [2151, "module-torch.utils.data.datapipes.map.combinatorics"], [2151, "module-torch.utils.data.datapipes.map.combining"], [2151, "module-torch.utils.data.datapipes.map.grouping"], [2151, "module-torch.utils.data.datapipes.map.utils"], [2151, "module-torch.utils.data.datapipes.utils.common"], [2151, "module-torch.utils.data.datapipes.utils.decoder"], [2151, "module-torch.utils.data.datapipes.utils.snapshot"], [2151, "module-torch.utils.data.dataset"], [2151, "module-torch.utils.data.distributed"], [2151, "module-torch.utils.data.graph"], [2151, "module-torch.utils.data.graph_settings"], [2151, "module-torch.utils.data.sampler"], [2151, "module-torch.utils.dlpack"], [2151, "module-torch.utils.file_baton"], [2151, "module-torch.utils.flop_counter"], [2151, "module-torch.utils.hipify.constants"], [2151, "module-torch.utils.hipify.cuda_to_hip_mappings"], [2151, "module-torch.utils.hipify.hipify_python"], [2151, "module-torch.utils.hipify.version"], [2151, "module-torch.utils.hooks"], [2151, "module-torch.utils.jit.log_extract"], [2151, "module-torch.utils.mkldnn"], [2151, "module-torch.utils.mobile_optimizer"], [2151, "module-torch.utils.show_pickle"], [2151, "module-torch.utils.tensorboard.summary"], [2151, "module-torch.utils.tensorboard.writer"], [2151, "module-torch.utils.throughput_benchmark"], [2151, "module-torch.utils.weak"], [2152, "module-torch.xpu"], [2152, "module-torch.xpu.random"], [2152, "module-torch.xpu.streams"]], "torch.amp": [[0, "module-torch.amp"]], "torch.amp.autocast_mode": [[0, "module-torch.amp.autocast_mode"]], "torch.amp.grad_scaler": [[0, "module-torch.amp.grad_scaler"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cpu.amp.autocast_mode": [[0, "module-torch.cpu.amp.autocast_mode"]], "torch.cpu.amp.grad_scaler": [[0, "module-torch.cpu.amp.grad_scaler"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "torch.cuda.amp.autocast_mode": [[0, "module-torch.cuda.amp.autocast_mode"]], "torch.cuda.amp.common": [[0, "module-torch.cuda.amp.common"]], "torch.cuda.amp.grad_scaler": [[0, "module-torch.cuda.amp.grad_scaler"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "gradientedge (class in torch.autograd.graph)": [[1, "torch.autograd.graph.GradientEdge"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "get_gradient_edge() (in module torch.autograd.graph)": [[1, "torch.autograd.graph.get_gradient_edge"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "torch.autograd.anomaly_mode": [[1, "module-torch.autograd.anomaly_mode"]], "torch.autograd.forward_ad": [[1, "module-torch.autograd.forward_ad"]], "torch.autograd.function": [[1, "module-torch.autograd.function"]], "torch.autograd.functional": [[1, "module-torch.autograd.functional"]], "torch.autograd.grad_mode": [[1, "module-torch.autograd.grad_mode"]], "torch.autograd.gradcheck": [[1, "module-torch.autograd.gradcheck"]], "torch.autograd.graph": [[1, "module-torch.autograd.graph"]], "torch.autograd.profiler": [[1, "module-torch.autograd.profiler"]], "torch.autograd.profiler_legacy": [[1, "module-torch.autograd.profiler_legacy"]], "torch.autograd.profiler_util": [[1, "module-torch.autograd.profiler_util"]], "torch.autograd.variable": [[1, "module-torch.autograd.variable"]], "sdpaparams (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPAParams"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "can_use_cudnn_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_cudnn_attention"]], "can_use_efficient_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_efficient_attention"]], "can_use_flash_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_flash_attention"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cudnn_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cudnn_sdp_enabled"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_cudnn_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_cudnn_sdp"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.flags"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.get_fastpath_enabled"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "is_flash_attention_available() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_flash_attention_available"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_blas_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_blas_library"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "set_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.set_fastpath_enabled"]], "set_flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.set_flags"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.cudnn.rnn": [[2, "module-torch.backends.cudnn.rnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xeon.run_cpu": [[2, "module-torch.backends.xeon.run_cpu"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "compare (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Compare"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "adaptive_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.adaptive_autorange"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "colorize() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.colorize"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "extend_results() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.extend_results"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "highlight_warnings() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.highlight_warnings"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "print() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.print"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "trim_significant_figures() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.trim_significant_figures"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpointpolicy (class in torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.CheckpointPolicy"]], "selectivecheckpointcontext (class in torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.SelectiveCheckpointContext"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "create_selective_checkpoint_contexts() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.create_selective_checkpoint_contexts"]], "set_checkpoint_debug_enabled() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.set_checkpoint_debug_enabled"]], "cond() (in module torch._higher_order_ops.cond)": [[12, "torch._higher_order_ops.cond.cond"]], "parallel_info() (in module torch.__config__)": [[13, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[13, "torch.__config__.show"]], "torch.__config__": [[13, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[16, "module-torch.cpu"]], "torch.cuda": [[17, "module-torch.cuda"]], "torch.cuda.comm": [[17, "module-torch.cuda.comm"]], "torch.cuda.error": [[17, "module-torch.cuda.error"]], "torch.cuda.graphs": [[17, "module-torch.cuda.graphs"]], "torch.cuda.jiterator": [[17, "module-torch.cuda.jiterator"]], "torch.cuda.memory": [[17, "module-torch.cuda.memory"]], "torch.cuda.nccl": [[17, "module-torch.cuda.nccl"]], "torch.cuda.nvtx": [[17, "module-torch.cuda.nvtx"]], "torch.cuda.profiler": [[17, "module-torch.cuda.profiler"]], "torch.cuda.random": [[17, "module-torch.cuda.random"]], "torch.cuda.sparse": [[17, "module-torch.cuda.sparse"]], "torch.cuda.streams": [[17, "module-torch.cuda.streams"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[18, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[18, "module-torch.cuda._sanitizer"]], "enable() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.enable"]], "get_filename() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.get_filename"]], "get_max_tuning_duration() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.get_max_tuning_duration"]], "get_max_tuning_iterations() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.get_max_tuning_iterations"]], "get_results() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.get_results"]], "get_validators() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.get_validators"]], "is_enabled() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.is_enabled"]], "read_file() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.read_file"]], "set_filename() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.set_filename"]], "set_max_tuning_duration() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.set_max_tuning_duration"]], "set_max_tuning_iterations() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.set_max_tuning_iterations"]], "torch.cuda.tunable": [[19, "module-torch.cuda.tunable"]], "tuning_enable() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.tuning_enable"]], "tuning_is_enabled() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.tuning_is_enabled"]], "write_file() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.write_file"]], "write_file_on_exit() (in module torch.cuda.tunable)": [[19, "torch.cuda.tunable.write_file_on_exit"]], "batchsampler (class in torch.utils.data)": [[23, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[23, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[23, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[23, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[23, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[23, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[23, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[23, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[23, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[23, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[23, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[23, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[23, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[23, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[23, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[23, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[23, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[23, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[23, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[23, "torch.utils.data.random_split"]], "torch.utils.data": [[23, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[23, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[23, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[23, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[23, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[23, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[24, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[24, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[24, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[24, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[24, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[24, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[24, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[24, "torch.distributed.GradBucket.set_buffer"]], "fill_uninitialized_memory (in module torch.utils.deterministic)": [[27, "torch.utils.deterministic.fill_uninitialized_memory"]], "torch.utils.deterministic": [[27, "module-torch.utils.deterministic"]], "backend (class in torch.distributed)": [[28, "torch.distributed.Backend"]], "devicemesh (class in torch.distributed.device_mesh)": [[28, "torch.distributed.device_mesh.DeviceMesh"]], "distbackenderror (class in torch.distributed)": [[28, "torch.distributed.DistBackendError"]], "disterror (class in torch.distributed)": [[28, "torch.distributed.DistError"]], "distnetworkerror (class in torch.distributed)": [[28, "torch.distributed.DistNetworkError"]], "diststoreerror (class in torch.distributed)": [[28, "torch.distributed.DistStoreError"]], "filestore (class in torch.distributed)": [[28, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[28, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[28, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[28, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[28, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[28, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[28, "torch.distributed.TCPStore"]], "work (class in torch.distributed)": [[28, "torch.distributed.Work"]], "add() (in module torch.distributed.store)": [[28, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[28, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[28, "torch.distributed.all_gather_into_tensor"]], "all_gather_object() (in module torch.distributed)": [[28, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[28, "torch.distributed.all_reduce"]], "all_to_all() (in module torch.distributed)": [[28, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[28, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[28, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[28, "torch.distributed.batch_isend_irecv"]], "breakpoint() (in module torch.distributed)": [[28, "torch.distributed.breakpoint"]], "broadcast() (in module torch.distributed)": [[28, "torch.distributed.broadcast"]], "broadcast_object_list() (in module torch.distributed)": [[28, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[28, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[28, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[28, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[28, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[28, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[28, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[28, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[28, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[28, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[28, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[28, "torch.distributed.get_world_size"]], "init_device_mesh() (in module torch.distributed.device_mesh)": [[28, "torch.distributed.device_mesh.init_device_mesh"]], "init_process_group() (in module torch.distributed)": [[28, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[28, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[28, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[28, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[28, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[28, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[28, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[28, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[28, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[28, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[28, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[28, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[28, "torch.distributed.recv"]], "recv_object_list() (in module torch.distributed)": [[28, "torch.distributed.recv_object_list"]], "reduce() (in module torch.distributed)": [[28, "torch.distributed.reduce"]], "reduce_op (class in torch.distributed)": [[28, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[28, "torch.distributed.reduce_scatter"]], "reduce_scatter_tensor() (in module torch.distributed)": [[28, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[28, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[28, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[28, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[28, "torch.distributed.send"]], "send_object_list() (in module torch.distributed)": [[28, "torch.distributed.send_object_list"]], "set() (in module torch.distributed.store)": [[28, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[28, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[28, "module-torch.distributed"]], "torch.distributed.algorithms": [[28, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[28, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook": [[28, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[28, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[28, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks": [[28, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks": [[28, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.post_localsgd_hook": [[28, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook": [[28, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks": [[28, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"]], "torch.distributed.algorithms.join": [[28, "module-torch.distributed.algorithms.join"]], "torch.distributed.algorithms.model_averaging": [[28, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.algorithms.model_averaging.averagers": [[28, "module-torch.distributed.algorithms.model_averaging.averagers"]], "torch.distributed.algorithms.model_averaging.hierarchical_model_averager": [[28, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"]], "torch.distributed.algorithms.model_averaging.utils": [[28, "module-torch.distributed.algorithms.model_averaging.utils"]], "torch.distributed.argparse_util": [[28, "module-torch.distributed.argparse_util"]], "torch.distributed.c10d_logger": [[28, "module-torch.distributed.c10d_logger"]], "torch.distributed.checkpoint.api": [[28, "module-torch.distributed.checkpoint.api"]], "torch.distributed.checkpoint.default_planner": [[28, "module-torch.distributed.checkpoint.default_planner"]], "torch.distributed.checkpoint.filesystem": [[28, "module-torch.distributed.checkpoint.filesystem"]], "torch.distributed.checkpoint.metadata": [[28, "module-torch.distributed.checkpoint.metadata"]], "torch.distributed.checkpoint.optimizer": [[28, "module-torch.distributed.checkpoint.optimizer"]], "torch.distributed.checkpoint.planner": [[28, "module-torch.distributed.checkpoint.planner"]], "torch.distributed.checkpoint.planner_helpers": [[28, "module-torch.distributed.checkpoint.planner_helpers"]], "torch.distributed.checkpoint.resharding": [[28, "module-torch.distributed.checkpoint.resharding"]], "torch.distributed.checkpoint.state_dict": [[28, "module-torch.distributed.checkpoint.state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[28, "module-torch.distributed.checkpoint.state_dict_loader"]], "torch.distributed.checkpoint.state_dict_saver": [[28, "module-torch.distributed.checkpoint.state_dict_saver"]], "torch.distributed.checkpoint.stateful": [[28, "module-torch.distributed.checkpoint.stateful"]], "torch.distributed.checkpoint.storage": [[28, "module-torch.distributed.checkpoint.storage"]], "torch.distributed.checkpoint.utils": [[28, "module-torch.distributed.checkpoint.utils"]], "torch.distributed.collective_utils": [[28, "module-torch.distributed.collective_utils"]], "torch.distributed.constants": [[28, "module-torch.distributed.constants"]], "torch.distributed.device_mesh": [[28, "module-torch.distributed.device_mesh"]], "torch.distributed.distributed_c10d": [[28, "module-torch.distributed.distributed_c10d"]], "torch.distributed.elastic": [[28, "module-torch.distributed.elastic"]], "torch.distributed.elastic.agent.server.api": [[28, "module-torch.distributed.elastic.agent.server.api"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[28, "module-torch.distributed.elastic.agent.server.local_elastic_agent"]], "torch.distributed.elastic.events.api": [[28, "module-torch.distributed.elastic.events.api"]], "torch.distributed.elastic.events.handlers": [[28, "module-torch.distributed.elastic.events.handlers"]], "torch.distributed.elastic.metrics.api": [[28, "module-torch.distributed.elastic.metrics.api"]], "torch.distributed.elastic.multiprocessing.api": [[28, "module-torch.distributed.elastic.multiprocessing.api"]], "torch.distributed.elastic.multiprocessing.errors.error_handler": [[28, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"]], "torch.distributed.elastic.multiprocessing.errors.handlers": [[28, "module-torch.distributed.elastic.multiprocessing.errors.handlers"]], "torch.distributed.elastic.multiprocessing.redirects": [[28, "module-torch.distributed.elastic.multiprocessing.redirects"]], "torch.distributed.elastic.multiprocessing.tail_log": [[28, "module-torch.distributed.elastic.multiprocessing.tail_log"]], "torch.distributed.elastic.rendezvous.api": [[28, "module-torch.distributed.elastic.rendezvous.api"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[28, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[28, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[28, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[28, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.etcd_server": [[28, "module-torch.distributed.elastic.rendezvous.etcd_server"]], "torch.distributed.elastic.rendezvous.etcd_store": [[28, "module-torch.distributed.elastic.rendezvous.etcd_store"]], "torch.distributed.elastic.rendezvous.static_tcp_rendezvous": [[28, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"]], "torch.distributed.elastic.rendezvous.utils": [[28, "module-torch.distributed.elastic.rendezvous.utils"]], "torch.distributed.elastic.timer.api": [[28, "module-torch.distributed.elastic.timer.api"]], "torch.distributed.elastic.timer.file_based_local_timer": [[28, "module-torch.distributed.elastic.timer.file_based_local_timer"]], "torch.distributed.elastic.timer.local_timer": [[28, "module-torch.distributed.elastic.timer.local_timer"]], "torch.distributed.elastic.utils": [[28, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.api": [[28, "module-torch.distributed.elastic.utils.api"]], "torch.distributed.elastic.utils.data": [[28, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.elastic.utils.data.cycling_iterator": [[28, "module-torch.distributed.elastic.utils.data.cycling_iterator"]], "torch.distributed.elastic.utils.data.elastic_distributed_sampler": [[28, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"]], "torch.distributed.elastic.utils.distributed": [[28, "module-torch.distributed.elastic.utils.distributed"]], "torch.distributed.elastic.utils.log_level": [[28, "module-torch.distributed.elastic.utils.log_level"]], "torch.distributed.elastic.utils.logging": [[28, "module-torch.distributed.elastic.utils.logging"]], "torch.distributed.elastic.utils.store": [[28, "module-torch.distributed.elastic.utils.store"]], "torch.distributed.fsdp.api": [[28, "module-torch.distributed.fsdp.api"]], "torch.distributed.fsdp.fully_sharded_data_parallel": [[28, "module-torch.distributed.fsdp.fully_sharded_data_parallel"]], "torch.distributed.fsdp.sharded_grad_scaler": [[28, "module-torch.distributed.fsdp.sharded_grad_scaler"]], "torch.distributed.fsdp.wrap": [[28, "module-torch.distributed.fsdp.wrap"]], "torch.distributed.launch": [[28, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[28, "module-torch.distributed.launcher"]], "torch.distributed.launcher.api": [[28, "module-torch.distributed.launcher.api"]], "torch.distributed.logging_handlers": [[28, "module-torch.distributed.logging_handlers"]], "torch.distributed.nn": [[28, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[28, "module-torch.distributed.nn.api"]], "torch.distributed.nn.api.remote_module": [[28, "module-torch.distributed.nn.api.remote_module"]], "torch.distributed.nn.functional": [[28, "module-torch.distributed.nn.functional"]], "torch.distributed.nn.jit": [[28, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.instantiator": [[28, "module-torch.distributed.nn.jit.instantiator"]], "torch.distributed.nn.jit.templates": [[28, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.nn.jit.templates.remote_module_template": [[28, "module-torch.distributed.nn.jit.templates.remote_module_template"]], "torch.distributed.optim.apply_optimizer_in_backward": [[28, "module-torch.distributed.optim.apply_optimizer_in_backward"]], "torch.distributed.optim.functional_adadelta": [[28, "module-torch.distributed.optim.functional_adadelta"]], "torch.distributed.optim.functional_adagrad": [[28, "module-torch.distributed.optim.functional_adagrad"]], "torch.distributed.optim.functional_adam": [[28, "module-torch.distributed.optim.functional_adam"]], "torch.distributed.optim.functional_adamax": [[28, "module-torch.distributed.optim.functional_adamax"]], "torch.distributed.optim.functional_adamw": [[28, "module-torch.distributed.optim.functional_adamw"]], "torch.distributed.optim.functional_rmsprop": [[28, "module-torch.distributed.optim.functional_rmsprop"]], "torch.distributed.optim.functional_rprop": [[28, "module-torch.distributed.optim.functional_rprop"]], "torch.distributed.optim.functional_sgd": [[28, "module-torch.distributed.optim.functional_sgd"]], "torch.distributed.optim.named_optimizer": [[28, "module-torch.distributed.optim.named_optimizer"]], "torch.distributed.optim.optimizer": [[28, "module-torch.distributed.optim.optimizer"]], "torch.distributed.optim.post_localsgd_optimizer": [[28, "module-torch.distributed.optim.post_localSGD_optimizer"]], "torch.distributed.optim.utils": [[28, "module-torch.distributed.optim.utils"]], "torch.distributed.optim.zero_redundancy_optimizer": [[28, "module-torch.distributed.optim.zero_redundancy_optimizer"]], "torch.distributed.remote_device": [[28, "module-torch.distributed.remote_device"]], "torch.distributed.rendezvous": [[28, "module-torch.distributed.rendezvous"]], "torch.distributed.rpc.api": [[28, "module-torch.distributed.rpc.api"]], "torch.distributed.rpc.backend_registry": [[28, "module-torch.distributed.rpc.backend_registry"]], "torch.distributed.rpc.constants": [[28, "module-torch.distributed.rpc.constants"]], "torch.distributed.rpc.functions": [[28, "module-torch.distributed.rpc.functions"]], "torch.distributed.rpc.internal": [[28, "module-torch.distributed.rpc.internal"]], "torch.distributed.rpc.options": [[28, "module-torch.distributed.rpc.options"]], "torch.distributed.rpc.rref_proxy": [[28, "module-torch.distributed.rpc.rref_proxy"]], "torch.distributed.rpc.server_process_global_profiler": [[28, "module-torch.distributed.rpc.server_process_global_profiler"]], "torch.distributed.tensor": [[28, "module-torch.distributed.tensor"]], "torch.distributed.tensor.parallel.api": [[28, "module-torch.distributed.tensor.parallel.api"]], "torch.distributed.tensor.parallel.ddp": [[28, "module-torch.distributed.tensor.parallel.ddp"]], "torch.distributed.tensor.parallel.fsdp": [[28, "module-torch.distributed.tensor.parallel.fsdp"]], "torch.distributed.tensor.parallel.input_reshard": [[28, "module-torch.distributed.tensor.parallel.input_reshard"]], "torch.distributed.tensor.parallel.loss": [[28, "module-torch.distributed.tensor.parallel.loss"]], "torch.distributed.tensor.parallel.style": [[28, "module-torch.distributed.tensor.parallel.style"]], "torch.distributed.utils": [[28, "module-torch.distributed.utils"]], "wait() (in module torch.distributed.store)": [[28, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[29, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[29, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[29, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[29, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[29, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[29, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[29, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[29, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[29, "torch.distributed.algorithms.JoinHook.post_hook"]], "asyncstager (class in torch.distributed.checkpoint.staging)": [[30, "torch.distributed.checkpoint.staging.AsyncStager"]], "blockingasyncstager (class in torch.distributed.checkpoint.staging)": [[30, "torch.distributed.checkpoint.staging.BlockingAsyncStager"]], "broadcastingtorchsavereader (class in torch.distributed.checkpoint.format_utils)": [[30, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.DefaultSavePlanner"]], "dynamicmetaloadplanner (class in torch.distributed.checkpoint.format_utils)": [[30, "torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.SavePlanner"]], "statedictoptions (class in torch.distributed.checkpoint.state_dict)": [[30, "torch.distributed.checkpoint.state_dict.StateDictOptions"]], "stateful (class in torch.distributed.checkpoint.stateful)": [[30, "torch.distributed.checkpoint.stateful.Stateful"]], "storagereader (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[30, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint.planner)": [[30, "torch.distributed.checkpoint.planner.WriteItem"]], "async_save() (in module torch.distributed.checkpoint.state_dict_saver)": [[30, "torch.distributed.checkpoint.state_dict_saver.async_save"]], "checkpoint_id (torch.distributed.checkpoint.filesystemreader property)": [[30, "torch.distributed.checkpoint.FileSystemReader.checkpoint_id"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[30, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[30, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[30, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[30, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[30, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "dcp_to_torch_save() (in module torch.distributed.checkpoint.format_utils)": [[30, "torch.distributed.checkpoint.format_utils.dcp_to_torch_save"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[30, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[30, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[30, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "get_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[30, "torch.distributed.checkpoint.state_dict.get_model_state_dict"]], "get_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[30, "torch.distributed.checkpoint.state_dict.get_optimizer_state_dict"]], "get_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[30, "torch.distributed.checkpoint.state_dict.get_state_dict"]], "load() (in module torch.distributed.checkpoint.state_dict_loader)": [[30, "torch.distributed.checkpoint.state_dict_loader.load"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[30, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint.state_dict_loader)": [[30, "torch.distributed.checkpoint.state_dict_loader.load_state_dict"]], "load_state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[30, "torch.distributed.checkpoint.stateful.Stateful.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[30, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[30, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[30, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[30, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[30, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[30, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[30, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[30, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[30, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_data() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[30, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[30, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "read_metadata() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[30, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.read_metadata"]], "reset() (torch.distributed.checkpoint.storagereader method)": [[30, "torch.distributed.checkpoint.StorageReader.reset"]], "reset() (torch.distributed.checkpoint.storagewriter method)": [[30, "torch.distributed.checkpoint.StorageWriter.reset"]], "reset() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[30, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.reset"]], "resolve_bytes() (torch.distributed.checkpoint.loadplanner method)": [[30, "torch.distributed.checkpoint.LoadPlanner.resolve_bytes"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[30, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[30, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save() (in module torch.distributed.checkpoint.state_dict_saver)": [[30, "torch.distributed.checkpoint.state_dict_saver.save"]], "save_state_dict() (in module torch.distributed.checkpoint.state_dict_saver)": [[30, "torch.distributed.checkpoint.state_dict_saver.save_state_dict"]], "set_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[30, "torch.distributed.checkpoint.state_dict.set_model_state_dict"]], "set_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[30, "torch.distributed.checkpoint.state_dict.set_optimizer_state_dict"]], "set_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[30, "torch.distributed.checkpoint.state_dict.set_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[30, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[30, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.format_utils.dynamicmetaloadplanner method)": [[30, "torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[30, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_reader() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[30, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[30, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "should_synchronize_after_execute (torch.distributed.checkpoint.staging.asyncstager property)": [[30, "torch.distributed.checkpoint.staging.AsyncStager.should_synchronize_after_execute"]], "stage() (torch.distributed.checkpoint.filesystemwriter method)": [[30, "torch.distributed.checkpoint.FileSystemWriter.stage"]], "stage() (torch.distributed.checkpoint.staging.asyncstager method)": [[30, "torch.distributed.checkpoint.staging.AsyncStager.stage"]], "stage() (torch.distributed.checkpoint.staging.blockingasyncstager method)": [[30, "torch.distributed.checkpoint.staging.BlockingAsyncStager.stage"]], "state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[30, "torch.distributed.checkpoint.stateful.Stateful.state_dict"]], "storage_meta() (torch.distributed.checkpoint.storagewriter method)": [[30, "torch.distributed.checkpoint.StorageWriter.storage_meta"]], "synchronize_staging() (torch.distributed.checkpoint.staging.asyncstager method)": [[30, "torch.distributed.checkpoint.staging.AsyncStager.synchronize_staging"]], "synchronize_staging() (torch.distributed.checkpoint.staging.blockingasyncstager method)": [[30, "torch.distributed.checkpoint.staging.BlockingAsyncStager.synchronize_staging"]], "tensor_storage_size() (torch.distributed.checkpoint.planner.writeitem method)": [[30, "torch.distributed.checkpoint.planner.WriteItem.tensor_storage_size"]], "torch.distributed.checkpoint": [[30, "module-torch.distributed.checkpoint"]], "torch.distributed.checkpoint.format_utils": [[30, "module-torch.distributed.checkpoint.format_utils"]], "torch.distributed.checkpoint.logger": [[30, "module-torch.distributed.checkpoint.logger"]], "torch.distributed.checkpoint.logging_handlers": [[30, "module-torch.distributed.checkpoint.logging_handlers"]], "torch.distributed.checkpoint.staging": [[30, "module-torch.distributed.checkpoint.staging"]], "torch_save_to_dcp() (in module torch.distributed.checkpoint.format_utils)": [[30, "torch.distributed.checkpoint.format_utils.torch_save_to_dcp"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[30, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[30, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "validate_checkpoint_id() (torch.distributed.checkpoint.storagereader class method)": [[30, "torch.distributed.checkpoint.StorageReader.validate_checkpoint_id"]], "validate_checkpoint_id() (torch.distributed.checkpoint.storagewriter class method)": [[30, "torch.distributed.checkpoint.StorageWriter.validate_checkpoint_id"]], "validate_checkpoint_id() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader class method)": [[30, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.validate_checkpoint_id"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[30, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[32, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[32, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[32, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[32, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[32, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_device (torch.distributed.optim.zeroredundancyoptimizer property)": [[32, "torch.distributed.optim.ZeroRedundancyOptimizer.join_device"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[32, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "join_process_group (torch.distributed.optim.zeroredundancyoptimizer property)": [[32, "torch.distributed.optim.ZeroRedundancyOptimizer.join_process_group"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[32, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[32, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[32, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[32, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[32, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[32, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[32, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[32, "module-torch.distributed.optim"]], "pipe (class in torch.distributed.pipelining)": [[33, "torch.distributed.pipelining.Pipe"]], "pipelineschedulemulti (class in torch.distributed.pipelining.schedules)": [[33, "torch.distributed.pipelining.schedules.PipelineScheduleMulti"]], "pipelineschedulesingle (class in torch.distributed.pipelining.schedules)": [[33, "torch.distributed.pipelining.schedules.PipelineScheduleSingle"]], "pipelinestage (class in torch.distributed.pipelining.stage)": [[33, "torch.distributed.pipelining.stage.PipelineStage"]], "schedule1f1b (class in torch.distributed.pipelining.schedules)": [[33, "torch.distributed.pipelining.schedules.Schedule1F1B"]], "scheduleflexibleinterleaved1f1b (class in torch.distributed.pipelining.schedules)": [[33, "torch.distributed.pipelining.schedules.ScheduleFlexibleInterleaved1F1B"]], "schedulegpipe (class in torch.distributed.pipelining.schedules)": [[33, "torch.distributed.pipelining.schedules.ScheduleGPipe"]], "scheduleinterleaved1f1b (class in torch.distributed.pipelining.schedules)": [[33, "torch.distributed.pipelining.schedules.ScheduleInterleaved1F1B"]], "scheduleloopedbfs (class in torch.distributed.pipelining.schedules)": [[33, "torch.distributed.pipelining.schedules.ScheduleLoopedBFS"]], "splitpoint (class in torch.distributed.pipelining)": [[33, "torch.distributed.pipelining.SplitPoint"]], "tensorchunkspec (class in torch.distributed.pipelining.microbatch)": [[33, "torch.distributed.pipelining.microbatch.TensorChunkSpec"]], "build_stage() (in module torch.distributed.pipelining.stage)": [[33, "torch.distributed.pipelining.stage.build_stage"]], "merge_chunks() (in module torch.distributed.pipelining.microbatch)": [[33, "torch.distributed.pipelining.microbatch.merge_chunks"]], "pipe_split() (in module torch.distributed.pipelining)": [[33, "torch.distributed.pipelining.pipe_split"]], "pipeline() (in module torch.distributed.pipelining)": [[33, "torch.distributed.pipelining.pipeline"]], "split_args_kwargs_into_chunks() (in module torch.distributed.pipelining.microbatch)": [[33, "torch.distributed.pipelining.microbatch.split_args_kwargs_into_chunks"]], "step() (torch.distributed.pipelining.schedules.pipelineschedulemulti method)": [[33, "torch.distributed.pipelining.schedules.PipelineScheduleMulti.step"]], "step() (torch.distributed.pipelining.schedules.pipelineschedulesingle method)": [[33, "torch.distributed.pipelining.schedules.PipelineScheduleSingle.step"]], "torch.distributed.pipelining": [[33, "module-torch.distributed.pipelining"]], "torch.distributed.pipelining.microbatch": [[33, "module-torch.distributed.pipelining.microbatch"]], "torch.distributed.pipelining.schedules": [[33, "module-torch.distributed.pipelining.schedules"]], "torch.distributed.pipelining.stage": [[33, "module-torch.distributed.pipelining.stage"]], "colwiseparallel (class in torch.distributed.tensor.parallel)": [[34, "torch.distributed.tensor.parallel.ColwiseParallel"]], "preparemoduleinput (class in torch.distributed.tensor.parallel)": [[34, "torch.distributed.tensor.parallel.PrepareModuleInput"]], "preparemoduleoutput (class in torch.distributed.tensor.parallel)": [[34, "torch.distributed.tensor.parallel.PrepareModuleOutput"]], "rowwiseparallel (class in torch.distributed.tensor.parallel)": [[34, "torch.distributed.tensor.parallel.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel)": [[34, "torch.distributed.tensor.parallel.SequenceParallel"]], "loss_parallel() (in module torch.distributed.tensor.parallel)": [[34, "torch.distributed.tensor.parallel.loss_parallel"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[34, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[34, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[35, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[35, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[35, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[35, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[35, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[35, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[35, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[35, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[35, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[35, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[35, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[35, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[35, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[35, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[35, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[35, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[35, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[35, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.IndependentTransform"]], "inversegamma (class in torch.distributions.inverse_gamma)": [[35, "torch.distributions.inverse_gamma.InverseGamma"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[35, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[35, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[35, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[35, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[35, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[35, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[35, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[35, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[35, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[35, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[35, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[35, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[35, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[35, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[35, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[35, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[35, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[35, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[35, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[35, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[35, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[35, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[35, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[35, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[35, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[35, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[35, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[35, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[35, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[35, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[35, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[35, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[35, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.inverse_gamma.inversegamma attribute)": [[35, "torch.distributions.inverse_gamma.InverseGamma.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[35, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[35, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[35, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[35, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[35, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[35, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[35, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[35, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[35, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[35, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[35, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[35, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[35, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[35, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[35, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[35, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[35, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[35, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[35, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[35, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[35, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[35, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[35, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[35, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[35, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[35, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration (torch.distributions.inverse_gamma.inversegamma property)": [[35, "torch.distributions.inverse_gamma.InverseGamma.concentration"]], "concentration0 (torch.distributions.beta.beta property)": [[35, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[35, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[35, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[35, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[35, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[35, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[35, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[35, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[35, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[35, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[35, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[35, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[35, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[35, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[35, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[35, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[35, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[35, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.inverse_gamma.inversegamma method)": [[35, "torch.distributions.inverse_gamma.InverseGamma.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[35, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[35, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[35, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[35, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[35, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[35, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[35, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[35, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[35, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[35, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[35, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[35, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[35, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[35, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[35, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[35, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[35, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[35, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[35, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[35, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[35, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[35, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[35, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[35, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[35, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[35, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[35, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[35, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[35, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.inverse_gamma.inversegamma method)": [[35, "torch.distributions.inverse_gamma.InverseGamma.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[35, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[35, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[35, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[35, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[35, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[35, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[35, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[35, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[35, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[35, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[35, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[35, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[35, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[35, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[35, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[35, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[35, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[35, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[35, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[35, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[35, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[35, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[35, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[35, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[35, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[35, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[35, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[35, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[35, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.inverse_gamma.inversegamma attribute)": [[35, "torch.distributions.inverse_gamma.InverseGamma.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[35, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[35, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[35, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[35, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[35, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[35, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[35, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[35, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[35, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[35, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[35, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[35, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[35, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[35, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[35, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[35, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[35, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[35, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[35, "torch.distributions.transforms.Transform.inverse_shape"]], "is_dependent() (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.is_dependent"]], "kl_divergence() (in module torch.distributions.kl)": [[35, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[35, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[35, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[35, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[35, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[35, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[35, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[35, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[35, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[35, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[35, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[35, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[35, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[35, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[35, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[35, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[35, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[35, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[35, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[35, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[35, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[35, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[35, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[35, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[35, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[35, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[35, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[35, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[35, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[35, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[35, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[35, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[35, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[35, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[35, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[35, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[35, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[35, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[35, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[35, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[35, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[35, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[35, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[35, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[35, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[35, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[35, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[35, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.inverse_gamma.inversegamma property)": [[35, "torch.distributions.inverse_gamma.InverseGamma.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[35, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[35, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[35, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[35, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[35, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[35, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[35, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[35, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[35, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[35, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[35, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[35, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[35, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[35, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[35, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[35, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[35, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[35, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[35, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[35, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[35, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[35, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[35, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[35, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[35, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[35, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.inverse_gamma.inversegamma property)": [[35, "torch.distributions.inverse_gamma.InverseGamma.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[35, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[35, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[35, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[35, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[35, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[35, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[35, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[35, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[35, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[35, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[35, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[35, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[35, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[35, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[35, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[35, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[35, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[35, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[35, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[35, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[35, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[35, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[35, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[35, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[35, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "rate (torch.distributions.inverse_gamma.inversegamma property)": [[35, "torch.distributions.inverse_gamma.InverseGamma.rate"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[35, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[35, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[35, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[35, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[35, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[35, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[35, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[35, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[35, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[35, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[35, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[35, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[35, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[35, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[35, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[35, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[35, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[35, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[35, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[35, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[35, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[35, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[35, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[35, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[35, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[35, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[35, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[35, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[35, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[35, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[35, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[35, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[35, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[35, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[35, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[35, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[35, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[35, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[35, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[35, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[35, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[35, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[35, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[35, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[35, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[35, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[35, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[35, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[35, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[35, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[35, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[35, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.inverse_gamma.inversegamma attribute)": [[35, "torch.distributions.inverse_gamma.InverseGamma.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[35, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[35, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[35, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[35, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[35, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[35, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[35, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[35, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[35, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[35, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[35, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[35, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[35, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[35, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[35, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[35, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[35, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[35, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[35, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[35, "module-torch.distributions"]], "torch.distributions.bernoulli": [[35, "module-torch.distributions.bernoulli"]], "torch.distributions.beta": [[35, "module-torch.distributions.beta"]], "torch.distributions.binomial": [[35, "module-torch.distributions.binomial"]], "torch.distributions.categorical": [[35, "module-torch.distributions.categorical"]], "torch.distributions.cauchy": [[35, "module-torch.distributions.cauchy"]], "torch.distributions.chi2": [[35, "module-torch.distributions.chi2"]], "torch.distributions.constraint_registry": [[35, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[35, "module-torch.distributions.constraints"]], "torch.distributions.continuous_bernoulli": [[35, "module-torch.distributions.continuous_bernoulli"]], "torch.distributions.dirichlet": [[35, "module-torch.distributions.dirichlet"]], "torch.distributions.distribution": [[35, "module-torch.distributions.distribution"]], "torch.distributions.exp_family": [[35, "module-torch.distributions.exp_family"]], "torch.distributions.exponential": [[35, "module-torch.distributions.exponential"]], "torch.distributions.fishersnedecor": [[35, "module-torch.distributions.fishersnedecor"]], "torch.distributions.gamma": [[35, "module-torch.distributions.gamma"]], "torch.distributions.geometric": [[35, "module-torch.distributions.geometric"]], "torch.distributions.gumbel": [[35, "module-torch.distributions.gumbel"]], "torch.distributions.half_cauchy": [[35, "module-torch.distributions.half_cauchy"]], "torch.distributions.half_normal": [[35, "module-torch.distributions.half_normal"]], "torch.distributions.independent": [[35, "module-torch.distributions.independent"]], "torch.distributions.inverse_gamma": [[35, "module-torch.distributions.inverse_gamma"]], "torch.distributions.kl": [[35, "module-torch.distributions.kl"]], "torch.distributions.kumaraswamy": [[35, "module-torch.distributions.kumaraswamy"]], "torch.distributions.laplace": [[35, "module-torch.distributions.laplace"]], "torch.distributions.lkj_cholesky": [[35, "module-torch.distributions.lkj_cholesky"]], "torch.distributions.log_normal": [[35, "module-torch.distributions.log_normal"]], "torch.distributions.logistic_normal": [[35, "module-torch.distributions.logistic_normal"]], "torch.distributions.lowrank_multivariate_normal": [[35, "module-torch.distributions.lowrank_multivariate_normal"]], "torch.distributions.mixture_same_family": [[35, "module-torch.distributions.mixture_same_family"]], "torch.distributions.multinomial": [[35, "module-torch.distributions.multinomial"]], "torch.distributions.multivariate_normal": [[35, "module-torch.distributions.multivariate_normal"]], "torch.distributions.negative_binomial": [[35, "module-torch.distributions.negative_binomial"]], "torch.distributions.normal": [[35, "module-torch.distributions.normal"]], "torch.distributions.one_hot_categorical": [[35, "module-torch.distributions.one_hot_categorical"]], "torch.distributions.pareto": [[35, "module-torch.distributions.pareto"]], "torch.distributions.poisson": [[35, "module-torch.distributions.poisson"]], "torch.distributions.relaxed_bernoulli": [[35, "module-torch.distributions.relaxed_bernoulli"]], "torch.distributions.relaxed_categorical": [[35, "module-torch.distributions.relaxed_categorical"]], "torch.distributions.studentt": [[35, "module-torch.distributions.studentT"]], "torch.distributions.transformed_distribution": [[35, "module-torch.distributions.transformed_distribution"]], "torch.distributions.transforms": [[35, "module-torch.distributions.transforms"]], "torch.distributions.uniform": [[35, "module-torch.distributions.uniform"]], "torch.distributions.utils": [[35, "module-torch.distributions.utils"]], "torch.distributions.von_mises": [[35, "module-torch.distributions.von_mises"]], "torch.distributions.weibull": [[35, "module-torch.distributions.weibull"]], "torch.distributions.wishart": [[35, "module-torch.distributions.wishart"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[35, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[35, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[35, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[35, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[35, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[35, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[35, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[35, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[35, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[35, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[35, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[35, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[35, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[35, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[35, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[35, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[35, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.inverse_gamma.inversegamma property)": [[35, "torch.distributions.inverse_gamma.InverseGamma.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[35, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[35, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[35, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[35, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[35, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[35, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[35, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[35, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[35, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[35, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[35, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[35, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[35, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[35, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[35, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[35, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[35, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[36, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[36, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[37, "torch.distributed.elastic.agent.server.ElasticAgent"]], "healthcheckserver (class in torch.distributed.elastic.agent.server.health_check_server)": [[37, "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[37, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[37, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[37, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[37, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[37, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[37, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[37, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "create_healthcheck_server() (in module torch.distributed.elastic.agent.server.health_check_server)": [[37, "torch.distributed.elastic.agent.server.health_check_server.create_healthcheck_server"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[37, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[37, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[37, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[37, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "start() (torch.distributed.elastic.agent.server.health_check_server.healthcheckserver method)": [[37, "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer.start"]], "stop() (torch.distributed.elastic.agent.server.health_check_server.healthcheckserver method)": [[37, "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer.stop"]], "torch.distributed.elastic.agent": [[37, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[37, "module-torch.distributed.elastic.agent.server"]], "torch.distributed.elastic.agent.server.health_check_server": [[37, "module-torch.distributed.elastic.agent.server.health_check_server"]], "torch.distributed.elastic.control_plane": [[38, "module-torch.distributed.elastic.control_plane"]], "worker_main() (in module torch.distributed.elastic.control_plane)": [[38, "torch.distributed.elastic.control_plane.worker_main"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[40, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[40, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[40, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[40, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[40, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[41, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[41, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[41, "torch.distributed.elastic.events.api.EventSource"]], "construct_and_record_rdzv_event() (in module torch.distributed.elastic.events)": [[41, "torch.distributed.elastic.events.construct_and_record_rdzv_event"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[41, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[41, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[41, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[44, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[44, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[44, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[44, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[44, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[44, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[44, "module-torch.distributed.elastic.metrics"]], "defaultlogsspecs (class in torch.distributed.elastic.multiprocessing.api)": [[45, "torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs"]], "logsdest (class in torch.distributed.elastic.multiprocessing.api)": [[45, "torch.distributed.elastic.multiprocessing.api.LogsDest"]], "logsspecs (class in torch.distributed.elastic.multiprocessing.api)": [[45, "torch.distributed.elastic.multiprocessing.api.LogsSpecs"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[45, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[45, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[45, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[45, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "reify() (torch.distributed.elastic.multiprocessing.api.defaultlogsspecs method)": [[45, "torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs.reify"]], "reify() (torch.distributed.elastic.multiprocessing.api.logsspecs method)": [[45, "torch.distributed.elastic.multiprocessing.api.LogsSpecs.reify"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[45, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[45, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[47, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[47, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[47, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[47, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[47, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous.api)": [[47, "torch.distributed.elastic.rendezvous.api.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous.api)": [[47, "torch.distributed.elastic.rendezvous.api.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous.api)": [[47, "torch.distributed.elastic.rendezvous.api.RendezvousError"]], "rendezvousgracefulexiterror (class in torch.distributed.elastic.rendezvous.api)": [[47, "torch.distributed.elastic.rendezvous.api.RendezvousGracefulExitError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousinfo (class in torch.distributed.elastic.rendezvous)": [[47, "torch.distributed.elastic.rendezvous.RendezvousInfo"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[47, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous.api)": [[47, "torch.distributed.elastic.rendezvous.api.RendezvousStateError"]], "rendezvousstoreinfo (class in torch.distributed.elastic.rendezvous.api)": [[47, "torch.distributed.elastic.rendezvous.api.RendezvousStoreInfo"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous.api)": [[47, "torch.distributed.elastic.rendezvous.api.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[47, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "build() (torch.distributed.elastic.rendezvous.api.rendezvousstoreinfo static method)": [[47, "torch.distributed.elastic.rendezvous.api.RendezvousStoreInfo.build"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[47, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[47, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[47, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[47, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[47, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[47, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[47, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[47, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[47, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[47, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[47, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[47, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[47, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[47, "module-torch.distributed.elastic.rendezvous.registry"]], "use_agent_store (torch.distributed.elastic.rendezvous.rendezvoushandler property)": [[47, "torch.distributed.elastic.rendezvous.RendezvousHandler.use_agent_store"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[47, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[48, "module-torch.distributed.run"]], "subprocesshandler (class in torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler)": [[49, "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler.SubprocessHandler"]], "get_subprocess_handler() (in module torch.distributed.elastic.multiprocessing.subprocess_handler.handlers)": [[49, "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers.get_subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler": [[49, "module-torch.distributed.elastic.multiprocessing.subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers": [[49, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.handlers"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler": [[49, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[50, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[50, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[50, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[50, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[50, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[50, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[50, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[50, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[50, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[50, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[50, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[50, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "log_debug_info_for_expired_timers() (in module torch.distributed.elastic.timer.debug_info_logging)": [[50, "torch.distributed.elastic.timer.debug_info_logging.log_debug_info_for_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[50, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[50, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[50, "module-torch.distributed.elastic.timer"]], "torch.distributed.elastic.timer.debug_info_logging": [[50, "module-torch.distributed.elastic.timer.debug_info_logging"]], "constraint (in module torch.export)": [[52, "torch.export.Constraint"]], "customobjargument (class in torch.export.graph_signature)": [[52, "torch.export.graph_signature.CustomObjArgument"]], "dim() (in module torch.export.dynamic_shapes)": [[52, "torch.export.dynamic_shapes.Dim"]], "exportbackwardsignature (class in torch.export)": [[52, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[52, "torch.export.ExportGraphSignature"]], "exportgraphsignature (class in torch.export.graph_signature)": [[52, "torch.export.graph_signature.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[52, "torch.export.ExportedProgram"]], "flatargsadapter (class in torch.export.unflatten)": [[52, "torch.export.unflatten.FlatArgsAdapter"]], "inputkind (class in torch.export.graph_signature)": [[52, "torch.export.graph_signature.InputKind"]], "inputspec (class in torch.export.graph_signature)": [[52, "torch.export.graph_signature.InputSpec"]], "interpretermodule (class in torch.export.unflatten)": [[52, "torch.export.unflatten.InterpreterModule"]], "modulecallentry (class in torch.export)": [[52, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[52, "torch.export.ModuleCallSignature"]], "outputkind (class in torch.export.graph_signature)": [[52, "torch.export.graph_signature.OutputKind"]], "outputspec (class in torch.export.graph_signature)": [[52, "torch.export.graph_signature.OutputSpec"]], "shapescollection (class in torch.export.dynamic_shapes)": [[52, "torch.export.dynamic_shapes.ShapesCollection"]], "adapt() (torch.export.unflatten.flatargsadapter method)": [[52, "torch.export.unflatten.FlatArgsAdapter.adapt"]], "buffers() (torch.export.exportedprogram method)": [[52, "torch.export.ExportedProgram.buffers"]], "dims() (in module torch.export)": [[52, "torch.export.dims"]], "dynamic_dim() (in module torch.export.dynamic_shapes)": [[52, "torch.export.dynamic_shapes.dynamic_dim"]], "dynamic_shapes() (torch.export.dynamic_shapes.shapescollection method)": [[52, "torch.export.dynamic_shapes.ShapesCollection.dynamic_shapes"]], "export() (in module torch.export)": [[52, "torch.export.export"]], "get_replace_hook() (torch.export.graph_signature.exportgraphsignature method)": [[52, "torch.export.graph_signature.ExportGraphSignature.get_replace_hook"]], "load() (in module torch.export)": [[52, "torch.export.load"]], "module() (torch.export.exportedprogram method)": [[52, "torch.export.ExportedProgram.module"]], "named_buffers() (torch.export.exportedprogram method)": [[52, "torch.export.ExportedProgram.named_buffers"]], "named_parameters() (torch.export.exportedprogram method)": [[52, "torch.export.ExportedProgram.named_parameters"]], "parameters() (torch.export.exportedprogram method)": [[52, "torch.export.ExportedProgram.parameters"]], "refine_dynamic_shapes_from_suggested_fixes() (in module torch.export.dynamic_shapes)": [[52, "torch.export.dynamic_shapes.refine_dynamic_shapes_from_suggested_fixes"]], "register_dataclass() (in module torch.export)": [[52, "torch.export.register_dataclass"]], "replace_all_uses() (torch.export.graph_signature.exportgraphsignature method)": [[52, "torch.export.graph_signature.ExportGraphSignature.replace_all_uses"]], "run_decompositions() (torch.export.exportedprogram method)": [[52, "torch.export.ExportedProgram.run_decompositions"]], "save() (in module torch.export)": [[52, "torch.export.save"]], "torch.export": [[52, "module-torch.export"]], "torch.export.custom_obj": [[52, "module-torch.export.custom_obj"]], "torch.export.dynamic_shapes": [[52, "module-torch.export.dynamic_shapes"]], "torch.export.experimental": [[52, "module-torch.export.experimental"]], "torch.export.exported_program": [[52, "module-torch.export.exported_program"]], "torch.export.graph_signature": [[52, "module-torch.export.graph_signature"]], "torch.export.unflatten": [[52, "module-torch.export.unflatten"]], "unflatten() (in module torch.export.unflatten)": [[52, "torch.export.unflatten.unflatten"]], "torch.fft": [[54, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[55, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "check_is_root() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.check_is_root"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[55, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[55, "module-torch.distributed.fsdp"]], "torch.func": [[57, "module-torch.func"]], "get_overwrite_module_params_on_conversion() (in module torch.__future__)": [[62, "torch.__future__.get_overwrite_module_params_on_conversion"]], "get_swap_module_params_on_conversion() (in module torch.__future__)": [[62, "torch.__future__.get_swap_module_params_on_conversion"]], "set_overwrite_module_params_on_conversion() (in module torch.__future__)": [[62, "torch.__future__.set_overwrite_module_params_on_conversion"]], "set_swap_module_params_on_conversion() (in module torch.__future__)": [[62, "torch.__future__.set_swap_module_params_on_conversion"]], "torch.__future__": [[62, "module-torch.__future__"]], "future (class in torch.futures)": [[63, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[63, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[63, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[63, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[63, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[63, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[63, "torch.futures.Future.then"]], "torch.futures": [[63, "module-torch.futures"]], "value() (torch.futures.future method)": [[63, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[63, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[63, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[64, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[64, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[64, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[64, "torch.fx.Node"]], "proxy (class in torch.fx)": [[64, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[64, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[64, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[64, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[64, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[64, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[64, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[64, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[64, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[64, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[64, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[64, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[64, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[64, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[64, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[64, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[64, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[64, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[64, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[64, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.fetch_attr"]], "find_nodes() (torch.fx.graph method)": [[64, "torch.fx.Graph.find_nodes"]], "format_node() (torch.fx.node method)": [[64, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[64, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[64, "torch.fx.Transformer.get_attr"]], "get_fresh_qualname() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.get_fresh_qualname"]], "getattr() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[64, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[64, "torch.fx.Graph.graph_copy"]], "insert_arg() (torch.fx.node method)": [[64, "torch.fx.Node.insert_arg"]], "inserting_after() (torch.fx.graph method)": [[64, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[64, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[64, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[64, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[64, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[64, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[64, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[64, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[64, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[64, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[64, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[64, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[64, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[64, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[64, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[64, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[64, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[64, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[64, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[64, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[64, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[64, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[64, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[64, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[64, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[64, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[64, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[64, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[64, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[64, "module-torch.fx"]], "torch.fx.annotate": [[64, "module-torch.fx.annotate"]], "torch.fx.config": [[64, "module-torch.fx.config"]], "torch.fx.experimental": [[64, "module-torch.fx.experimental"]], "torch.fx.experimental.accelerator_partitioner": [[64, "module-torch.fx.experimental.accelerator_partitioner"]], "torch.fx.experimental.const_fold": [[64, "module-torch.fx.experimental.const_fold"]], "torch.fx.experimental.debug": [[64, "module-torch.fx.experimental.debug"]], "torch.fx.experimental.graph_gradual_typechecker": [[64, "module-torch.fx.experimental.graph_gradual_typechecker"]], "torch.fx.experimental.merge_matmul": [[64, "module-torch.fx.experimental.merge_matmul"]], "torch.fx.experimental.meta_tracer": [[64, "module-torch.fx.experimental.meta_tracer"]], "torch.fx.experimental.migrate_gradual_types": [[64, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.migrate_gradual_types.constraint": [[64, "module-torch.fx.experimental.migrate_gradual_types.constraint"]], "torch.fx.experimental.migrate_gradual_types.constraint_generator": [[64, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"]], "torch.fx.experimental.migrate_gradual_types.constraint_transformation": [[64, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"]], "torch.fx.experimental.migrate_gradual_types.operation": [[64, "module-torch.fx.experimental.migrate_gradual_types.operation"]], "torch.fx.experimental.migrate_gradual_types.transform_to_z3": [[64, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"]], "torch.fx.experimental.migrate_gradual_types.util": [[64, "module-torch.fx.experimental.migrate_gradual_types.util"]], "torch.fx.experimental.migrate_gradual_types.z3_types": [[64, "module-torch.fx.experimental.migrate_gradual_types.z3_types"]], "torch.fx.experimental.normalize": [[64, "module-torch.fx.experimental.normalize"]], "torch.fx.experimental.optimization": [[64, "module-torch.fx.experimental.optimization"]], "torch.fx.experimental.partitioner_utils": [[64, "module-torch.fx.experimental.partitioner_utils"]], "torch.fx.experimental.recording": [[64, "module-torch.fx.experimental.recording"]], "torch.fx.experimental.refinement_types": [[64, "module-torch.fx.experimental.refinement_types"]], "torch.fx.experimental.rewriter": [[64, "module-torch.fx.experimental.rewriter"]], "torch.fx.experimental.schema_type_annotation": [[64, "module-torch.fx.experimental.schema_type_annotation"]], "torch.fx.experimental.sym_node": [[64, "module-torch.fx.experimental.sym_node"]], "torch.fx.experimental.unification": [[64, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.core": [[64, "module-torch.fx.experimental.unification.core"]], "torch.fx.experimental.unification.dispatch": [[64, "module-torch.fx.experimental.unification.dispatch"]], "torch.fx.experimental.unification.match": [[64, "module-torch.fx.experimental.unification.match"]], "torch.fx.experimental.unification.more": [[64, "module-torch.fx.experimental.unification.more"]], "torch.fx.experimental.unification.multipledispatch": [[64, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.experimental.unification.multipledispatch.conflict": [[64, "module-torch.fx.experimental.unification.multipledispatch.conflict"]], "torch.fx.experimental.unification.multipledispatch.core": [[64, "module-torch.fx.experimental.unification.multipledispatch.core"]], "torch.fx.experimental.unification.multipledispatch.dispatcher": [[64, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"]], "torch.fx.experimental.unification.multipledispatch.utils": [[64, "module-torch.fx.experimental.unification.multipledispatch.utils"]], "torch.fx.experimental.unification.multipledispatch.variadic": [[64, "module-torch.fx.experimental.unification.multipledispatch.variadic"]], "torch.fx.experimental.unification.unification_tools": [[64, "module-torch.fx.experimental.unification.unification_tools"]], "torch.fx.experimental.unification.utils": [[64, "module-torch.fx.experimental.unification.utils"]], "torch.fx.experimental.unification.variable": [[64, "module-torch.fx.experimental.unification.variable"]], "torch.fx.experimental.unify_refinements": [[64, "module-torch.fx.experimental.unify_refinements"]], "torch.fx.experimental.validator": [[64, "module-torch.fx.experimental.validator"]], "torch.fx.graph": [[64, "module-torch.fx.graph"]], "torch.fx.graph_module": [[64, "module-torch.fx.graph_module"]], "torch.fx.immutable_collections": [[64, "module-torch.fx.immutable_collections"]], "torch.fx.interpreter": [[64, "module-torch.fx.interpreter"]], "torch.fx.node": [[64, "module-torch.fx.node"]], "torch.fx.operator_schemas": [[64, "module-torch.fx.operator_schemas"]], "torch.fx.passes": [[64, "module-torch.fx.passes"]], "torch.fx.passes.annotate_getitem_nodes": [[64, "module-torch.fx.passes.annotate_getitem_nodes"]], "torch.fx.passes.backends": [[64, "module-torch.fx.passes.backends"]], "torch.fx.passes.backends.cudagraphs": [[64, "module-torch.fx.passes.backends.cudagraphs"]], "torch.fx.passes.dialect": [[64, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[64, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.dialect.common.cse_pass": [[64, "module-torch.fx.passes.dialect.common.cse_pass"]], "torch.fx.passes.fake_tensor_prop": [[64, "module-torch.fx.passes.fake_tensor_prop"]], "torch.fx.passes.graph_drawer": [[64, "module-torch.fx.passes.graph_drawer"]], "torch.fx.passes.graph_manipulation": [[64, "module-torch.fx.passes.graph_manipulation"]], "torch.fx.passes.graph_transform_observer": [[64, "module-torch.fx.passes.graph_transform_observer"]], "torch.fx.passes.infra": [[64, "module-torch.fx.passes.infra"]], "torch.fx.passes.infra.partitioner": [[64, "module-torch.fx.passes.infra.partitioner"]], "torch.fx.passes.infra.pass_base": [[64, "module-torch.fx.passes.infra.pass_base"]], "torch.fx.passes.infra.pass_manager": [[64, "module-torch.fx.passes.infra.pass_manager"]], "torch.fx.passes.net_min_base": [[64, "module-torch.fx.passes.net_min_base"]], "torch.fx.passes.operator_support": [[64, "module-torch.fx.passes.operator_support"]], "torch.fx.passes.param_fetch": [[64, "module-torch.fx.passes.param_fetch"]], "torch.fx.passes.pass_manager": [[64, "module-torch.fx.passes.pass_manager"]], "torch.fx.passes.reinplace": [[64, "module-torch.fx.passes.reinplace"]], "torch.fx.passes.runtime_assert": [[64, "module-torch.fx.passes.runtime_assert"]], "torch.fx.passes.shape_prop": [[64, "module-torch.fx.passes.shape_prop"]], "torch.fx.passes.split_module": [[64, "module-torch.fx.passes.split_module"]], "torch.fx.passes.split_utils": [[64, "module-torch.fx.passes.split_utils"]], "torch.fx.passes.splitter_base": [[64, "module-torch.fx.passes.splitter_base"]], "torch.fx.passes.tests": [[64, "module-torch.fx.passes.tests"]], "torch.fx.passes.tests.test_pass_manager": [[64, "module-torch.fx.passes.tests.test_pass_manager"]], "torch.fx.passes.tools_common": [[64, "module-torch.fx.passes.tools_common"]], "torch.fx.passes.utils": [[64, "module-torch.fx.passes.utils"]], "torch.fx.passes.utils.common": [[64, "module-torch.fx.passes.utils.common"]], "torch.fx.passes.utils.fuser_utils": [[64, "module-torch.fx.passes.utils.fuser_utils"]], "torch.fx.passes.utils.matcher_utils": [[64, "module-torch.fx.passes.utils.matcher_utils"]], "torch.fx.passes.utils.matcher_with_name_node_map_utils": [[64, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"]], "torch.fx.passes.utils.source_matcher_utils": [[64, "module-torch.fx.passes.utils.source_matcher_utils"]], "torch.fx.proxy": [[64, "module-torch.fx.proxy"]], "torch.fx.subgraph_rewriter": [[64, "module-torch.fx.subgraph_rewriter"]], "torch.fx.tensor_type": [[64, "module-torch.fx.tensor_type"]], "torch.fx.traceback": [[64, "module-torch.fx.traceback"]], "trace() (torch.fx.tracer method)": [[64, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[64, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[64, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[64, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[64, "torch.fx.wrap"]], "torch.fx.experimental.proxy_tensor": [[65, "module-torch.fx.experimental.proxy_tensor"]], "torch.fx.experimental.symbolic_shapes": [[65, "module-torch.fx.experimental.symbolic_shapes"]], "event (class in torch)": [[90, "torch.Event"]], "elapsed_time() (torch.event method)": [[90, "torch.Event.elapsed_time"]], "query() (torch.event method)": [[90, "torch.Event.query"]], "record() (torch.event method)": [[90, "torch.Event.record"]], "synchronize() (torch.event method)": [[90, "torch.Event.synchronize"]], "wait() (torch.event method)": [[90, "torch.Event.wait"]], "generator (class in torch)": [[91, "torch.Generator"]], "clone_state() (torch.generator method)": [[91, "torch.Generator.clone_state"]], "device (torch.generator attribute)": [[91, "torch.Generator.device"]], "get_state() (torch.generator method)": [[91, "torch.Generator.get_state"]], "graphsafe_get_state() (torch.generator method)": [[91, "torch.Generator.graphsafe_get_state"]], "graphsafe_set_state() (torch.generator method)": [[91, "torch.Generator.graphsafe_set_state"]], "initial_seed() (torch.generator method)": [[91, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[91, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[91, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[91, "torch.Generator.set_state"]], "stream (class in torch)": [[92, "torch.Stream"]], "query() (torch.stream method)": [[92, "torch.Stream.query"]], "record_event() (torch.stream method)": [[92, "torch.Stream.record_event"]], "synchronize() (torch.stream method)": [[92, "torch.Stream.synchronize"]], "wait_event() (torch.stream method)": [[92, "torch.Stream.wait_event"]], "wait_stream() (torch.stream method)": [[92, "torch.Stream.wait_stream"]], "abs() (torch.tensor method)": [[93, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[94, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[95, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[96, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[97, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[98, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[99, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[100, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[101, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[102, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[103, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[104, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[105, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[106, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[107, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[108, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[109, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[110, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[111, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[112, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[113, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[114, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[115, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[116, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[117, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[118, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[119, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[120, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[121, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[122, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[123, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[124, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[125, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[126, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[127, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[128, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[129, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[130, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[131, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[132, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[133, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[134, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[135, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[136, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[137, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[138, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[139, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[140, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[141, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[142, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[143, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[144, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[145, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[146, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[147, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[148, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[149, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[150, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[151, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[152, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[153, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[154, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[155, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[156, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[157, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[158, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[159, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[160, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[161, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[162, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[163, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[164, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[165, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[166, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[167, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[168, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[169, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[170, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[171, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[172, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[173, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[174, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[175, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[176, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[177, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[178, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[179, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[180, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[181, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[182, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[183, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[184, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[185, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[186, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[187, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[188, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[189, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[190, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[191, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[192, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[193, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[194, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[195, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[196, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[197, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[198, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[199, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[200, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[201, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[202, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[203, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[204, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[205, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[206, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[207, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[208, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[209, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[210, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[211, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[212, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[213, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[214, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[215, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[216, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[217, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[218, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[219, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[220, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[221, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[222, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[223, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[224, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[225, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[226, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[227, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[228, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[229, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[230, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[231, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[232, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[233, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[234, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[235, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[236, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[237, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[238, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[239, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[240, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[241, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[242, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[243, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[244, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[245, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[246, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[247, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[248, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[249, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[250, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[251, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[252, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[253, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[254, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[255, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[256, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[257, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[258, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[259, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[260, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[261, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[262, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[263, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[264, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[265, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[266, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[267, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[268, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[269, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[270, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[271, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[272, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[273, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[274, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[275, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[276, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[277, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[278, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[279, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[280, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[281, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[282, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[283, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[284, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[285, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[286, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[287, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[288, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[289, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[290, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[291, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[292, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[293, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[294, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[295, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[296, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[297, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[298, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[299, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[300, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[301, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[302, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[303, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[304, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[305, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[306, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[307, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[308, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[309, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[310, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[311, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[312, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[313, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[314, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[315, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[316, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[317, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[318, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[319, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[320, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[321, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[322, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[323, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[324, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[325, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[326, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[327, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[328, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[329, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[330, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[331, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[332, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[333, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[334, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[335, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[336, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[337, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[338, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[339, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[340, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[341, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[342, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[343, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[344, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[345, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[346, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[347, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[348, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[349, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[350, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[351, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[352, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[353, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[354, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[355, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[356, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[357, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[358, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[359, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[360, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[361, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[362, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[363, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[364, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[365, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[366, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[367, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[368, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[369, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[370, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[371, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[372, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[373, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[374, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[375, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[376, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[377, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[378, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[379, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[380, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[381, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[382, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[383, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[384, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[385, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[386, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[387, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[388, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[389, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[390, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[391, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[392, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[393, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[394, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[395, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[396, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[397, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[398, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[399, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[400, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[401, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[402, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[403, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[404, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[405, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[406, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[407, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[408, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[409, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[410, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[411, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[412, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[413, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[414, "torch.Tensor.median"]], "min() (torch.tensor method)": [[415, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[416, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[417, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[418, "torch.Tensor.mode"]], "module_load() (torch.tensor method)": [[419, "torch.Tensor.module_load"]], "moveaxis() (torch.tensor method)": [[420, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[421, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[422, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[423, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[424, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[425, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[426, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[427, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[428, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[429, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[430, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[431, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[432, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[433, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[434, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[435, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[436, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[437, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[438, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[439, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[440, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[441, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[442, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[443, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[444, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[445, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[446, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[447, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[448, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[449, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[450, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[451, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[452, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[453, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[454, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[455, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[456, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[457, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[458, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[459, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[460, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[461, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[462, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[463, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[464, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[465, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[466, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[467, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[468, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[469, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[470, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[471, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[472, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[473, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[474, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[475, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[476, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[477, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[478, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[479, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[480, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[481, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[482, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[483, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[484, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[485, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[486, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[487, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[488, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[489, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[490, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[491, "torch.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (torch.tensor method)": [[492, "torch.Tensor.register_post_accumulate_grad_hook"]], "remainder() (torch.tensor method)": [[493, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[494, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[495, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[496, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[497, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[498, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[499, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[500, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[501, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[502, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[503, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[504, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[505, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[506, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[507, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[508, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[509, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[510, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[511, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[512, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[513, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[514, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[515, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[516, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[517, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[518, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[519, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[520, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[521, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[522, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[523, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[524, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[525, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[526, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[527, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[528, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[529, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[530, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[531, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[532, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[533, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[534, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[535, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[536, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[537, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[538, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[539, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[540, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[541, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[542, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[543, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[544, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[545, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[546, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[547, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[548, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[549, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[550, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[551, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[552, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[553, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[554, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[555, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[556, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[557, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[558, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[559, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[560, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[561, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[562, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[563, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[564, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[565, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[566, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[567, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[568, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[569, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[570, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[571, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[572, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[573, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[574, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[575, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[576, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[577, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[578, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[579, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[580, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[581, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[582, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[583, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[584, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[585, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[586, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[587, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[588, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[589, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[590, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[591, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[592, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[593, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[594, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[595, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[596, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[597, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[598, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[599, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[600, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[601, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[602, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[603, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[604, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[605, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[606, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[607, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[608, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[609, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[610, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[611, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[612, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[613, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[614, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[615, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[616, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[617, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[618, "torch.Tensor.values"]], "var() (torch.tensor method)": [[619, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[620, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[621, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[622, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[623, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[624, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[625, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[626, "torch.Tensor.xlogy_"]], "xpu() (torch.tensor method)": [[627, "torch.Tensor.xpu"]], "zero_() (torch.tensor method)": [[628, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[629, "torch._assert"]], "_foreach_abs() (in module torch)": [[630, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[631, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[632, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[633, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[634, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[635, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[636, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[637, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[638, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[639, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[640, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[641, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[642, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[643, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[644, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[645, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[646, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[647, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[648, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[649, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[650, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[651, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[652, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[653, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[654, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[655, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[656, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[657, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[658, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[659, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[660, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[661, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[662, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[663, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[664, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[665, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[666, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[667, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[668, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[669, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[670, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[671, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[672, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[673, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[674, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[675, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[676, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[677, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[678, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[679, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[680, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[681, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[682, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[683, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[684, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[685, "torch._logging.set_logs"]], "abs() (in module torch)": [[686, "torch.abs"]], "absolute() (in module torch)": [[687, "torch.absolute"]], "acos() (in module torch)": [[688, "torch.acos"]], "acosh() (in module torch)": [[689, "torch.acosh"]], "add() (in module torch)": [[690, "torch.add"]], "addbmm() (in module torch)": [[691, "torch.addbmm"]], "addcdiv() (in module torch)": [[692, "torch.addcdiv"]], "addcmul() (in module torch)": [[693, "torch.addcmul"]], "addmm() (in module torch)": [[694, "torch.addmm"]], "addmv() (in module torch)": [[695, "torch.addmv"]], "addr() (in module torch)": [[696, "torch.addr"]], "adjoint() (in module torch)": [[697, "torch.adjoint"]], "all() (in module torch)": [[698, "torch.all"]], "allclose() (in module torch)": [[699, "torch.allclose"]], "amax() (in module torch)": [[700, "torch.amax"]], "amin() (in module torch)": [[701, "torch.amin"]], "aminmax() (in module torch)": [[702, "torch.aminmax"]], "angle() (in module torch)": [[703, "torch.angle"]], "any() (in module torch)": [[704, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[706, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[707, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[708, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[709, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[710, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[711, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[712, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[713, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[714, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[715, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[716, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[717, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[718, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[719, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[720, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[721, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[722, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[723, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[724, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[725, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[726, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[727, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[728, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[729, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[730, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[731, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[732, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[733, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[734, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[735, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[736, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[737, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[737, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[738, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[739, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[740, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[740, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[740, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[743, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[744, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[745, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[750, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[751, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[756, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[757, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[758, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[759, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[760, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[761, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[761, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[761, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[762, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[763, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[764, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[765, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[766, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[767, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[768, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[769, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[769, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[769, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[770, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[784, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[785, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[786, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[787, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[788, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[789, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[790, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[791, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[792, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[793, "torch.ao.quantization.DeQuantStub"]], "numeric_debug_handle_key (in module torch.ao.quantization)": [[794, "torch.ao.quantization.NUMERIC_DEBUG_HANDLE_KEY"]], "quantstub (class in torch.ao.quantization)": [[795, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[796, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[797, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[798, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[798, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[798, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[798, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[798, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[798, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[798, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[799, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[800, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[800, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[800, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[801, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[802, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[802, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[802, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[802, "torch.ao.quantization.backend_config.ObservationType"]], "compare_results (class in torch.ao.quantization)": [[803, "torch.ao.quantization.compare_results"]], "convert (class in torch.ao.quantization)": [[804, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[805, "torch.ao.quantization.default_eval_fn"]], "extract_results_from_loggers (class in torch.ao.quantization)": [[806, "torch.ao.quantization.extract_results_from_loggers"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[808, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[809, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "extra_repr() (torch.ao.quantization.fake_quantize.fixedqparamsfakequantize method)": [[809, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.extra_repr"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[810, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[811, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[812, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[813, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[814, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[815, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[816, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[817, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[818, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[819, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[820, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[821, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization.fuse_modules)": [[822, "torch.ao.quantization.fuse_modules.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[823, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[823, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[823, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[823, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[823, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[824, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[824, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[824, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[824, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[825, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[826, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "generate_numeric_debug_handle (class in torch.ao.quantization)": [[827, "torch.ao.quantization.generate_numeric_debug_handle"]], "histogramobserver (class in torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[829, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[829, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[829, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[833, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[833, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[833, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[834, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[834, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[835, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[836, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[837, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[838, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[839, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[840, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[841, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[842, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[843, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[844, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[845, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[846, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[847, "torch.ao.quantization.prepare"]], "prepare_for_propagation_comparison (class in torch.ao.quantization)": [[848, "torch.ao.quantization.prepare_for_propagation_comparison"]], "prepare_qat (class in torch.ao.quantization)": [[849, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[850, "torch.ao.quantization.propagate_qconfig_"]], "model_is_exported (class in torch.ao.quantization.pt2e.export_utils)": [[851, "torch.ao.quantization.pt2e.export_utils.model_is_exported"]], "qconfig (class in torch.ao.quantization.qconfig)": [[852, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[853, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[854, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[855, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[856, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[857, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[858, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[859, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[860, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[861, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[862, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[863, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[864, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[865, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[865, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[865, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[865, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[865, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[865, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[865, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[865, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[866, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[867, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[868, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[869, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[870, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[871, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[872, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[873, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[874, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[875, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[876, "torch.arange"]], "arccos() (in module torch)": [[877, "torch.arccos"]], "arccosh() (in module torch)": [[878, "torch.arccosh"]], "arcsin() (in module torch)": [[879, "torch.arcsin"]], "arcsinh() (in module torch)": [[880, "torch.arcsinh"]], "arctan() (in module torch)": [[881, "torch.arctan"]], "arctan2() (in module torch)": [[882, "torch.arctan2"]], "arctanh() (in module torch)": [[883, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[884, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[885, "torch.argmax"]], "argmin() (in module torch)": [[886, "torch.argmin"]], "argsort() (in module torch)": [[887, "torch.argsort"]], "argwhere() (in module torch)": [[888, "torch.argwhere"]], "as_strided() (in module torch)": [[889, "torch.as_strided"]], "as_tensor() (in module torch)": [[890, "torch.as_tensor"]], "asarray() (in module torch)": [[891, "torch.asarray"]], "asin() (in module torch)": [[892, "torch.asin"]], "asinh() (in module torch)": [[893, "torch.asinh"]], "atan() (in module torch)": [[894, "torch.atan"]], "atan2() (in module torch)": [[895, "torch.atan2"]], "atanh() (in module torch)": [[896, "torch.atanh"]], "atleast_1d() (in module torch)": [[897, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[898, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[899, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[900, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[901, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[902, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[903, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[904, "torch.autograd.backward"]], "unpackeddualtensor (class in torch.autograd.forward_ad)": [[905, "torch.autograd.forward_ad.UnpackedDualTensor"]], "count() (torch.autograd.forward_ad.unpackeddualtensor method)": [[905, "torch.autograd.forward_ad.UnpackedDualTensor.count"]], "index() (torch.autograd.forward_ad.unpackeddualtensor method)": [[905, "torch.autograd.forward_ad.UnpackedDualTensor.index"]], "primal (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[905, "torch.autograd.forward_ad.UnpackedDualTensor.primal"]], "tangent (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[905, "torch.autograd.forward_ad.UnpackedDualTensor.tangent"]], "dual_level (class in torch.autograd.forward_ad)": [[906, "torch.autograd.forward_ad.dual_level"]], "enter_dual_level() (in module torch.autograd.forward_ad)": [[907, "torch.autograd.forward_ad.enter_dual_level"]], "exit_dual_level() (in module torch.autograd.forward_ad)": [[908, "torch.autograd.forward_ad.exit_dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[909, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[910, "torch.autograd.forward_ad.unpack_dual"]], "backwardcfunction (class in torch.autograd.function)": [[911, "torch.autograd.function.BackwardCFunction"]], "apply() (torch.autograd.function.backwardcfunction method)": [[911, "torch.autograd.function.BackwardCFunction.apply"]], "apply_jvp() (torch.autograd.function.backwardcfunction method)": [[911, "torch.autograd.function.BackwardCFunction.apply_jvp"]], "mark_dirty() (torch.autograd.function.backwardcfunction method)": [[911, "torch.autograd.function.BackwardCFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.backwardcfunction method)": [[911, "torch.autograd.function.BackwardCFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.backwardcfunction method)": [[911, "torch.autograd.function.BackwardCFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.backwardcfunction method)": [[911, "torch.autograd.function.BackwardCFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.backwardcfunction method)": [[911, "torch.autograd.function.BackwardCFunction.set_materialize_grads"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[912, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[913, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[914, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[915, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "inplacefunction (class in torch.autograd.function)": [[916, "torch.autograd.function.InplaceFunction"]], "backward() (torch.autograd.function.inplacefunction static method)": [[916, "torch.autograd.function.InplaceFunction.backward"]], "forward() (torch.autograd.function.inplacefunction static method)": [[916, "torch.autograd.function.InplaceFunction.forward"]], "jvp() (torch.autograd.function.inplacefunction static method)": [[916, "torch.autograd.function.InplaceFunction.jvp"]], "mark_dirty() (torch.autograd.function.inplacefunction method)": [[916, "torch.autograd.function.InplaceFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.inplacefunction method)": [[916, "torch.autograd.function.InplaceFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.inplacefunction method)": [[916, "torch.autograd.function.InplaceFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.inplacefunction method)": [[916, "torch.autograd.function.InplaceFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.inplacefunction method)": [[916, "torch.autograd.function.InplaceFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.inplacefunction static method)": [[916, "torch.autograd.function.InplaceFunction.setup_context"]], "vjp() (torch.autograd.function.inplacefunction static method)": [[916, "torch.autograd.function.InplaceFunction.vjp"]], "vmap() (torch.autograd.function.inplacefunction static method)": [[916, "torch.autograd.function.InplaceFunction.vmap"]], "nestediofunction (class in torch.autograd.function)": [[917, "torch.autograd.function.NestedIOFunction"]], "backward() (torch.autograd.function.nestediofunction method)": [[917, "torch.autograd.function.NestedIOFunction.backward"]], "backward_extended() (torch.autograd.function.nestediofunction method)": [[917, "torch.autograd.function.NestedIOFunction.backward_extended"]], "forward() (torch.autograd.function.nestediofunction method)": [[917, "torch.autograd.function.NestedIOFunction.forward"]], "forward_extended() (torch.autograd.function.nestediofunction method)": [[917, "torch.autograd.function.NestedIOFunction.forward_extended"]], "jvp() (torch.autograd.function.nestediofunction static method)": [[917, "torch.autograd.function.NestedIOFunction.jvp"]], "mark_dirty() (torch.autograd.function.nestediofunction method)": [[917, "torch.autograd.function.NestedIOFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.nestediofunction method)": [[917, "torch.autograd.function.NestedIOFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.nestediofunction method)": [[917, "torch.autograd.function.NestedIOFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.nestediofunction method)": [[917, "torch.autograd.function.NestedIOFunction.save_for_forward"]], "saved_tensors (torch.autograd.function.nestediofunction property)": [[917, "torch.autograd.function.NestedIOFunction.saved_tensors"]], "set_materialize_grads() (torch.autograd.function.nestediofunction method)": [[917, "torch.autograd.function.NestedIOFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.nestediofunction static method)": [[917, "torch.autograd.function.NestedIOFunction.setup_context"]], "vjp() (torch.autograd.function.nestediofunction static method)": [[917, "torch.autograd.function.NestedIOFunction.vjp"]], "vmap() (torch.autograd.function.nestediofunction static method)": [[917, "torch.autograd.function.NestedIOFunction.vmap"]], "once_differentiable() (in module torch.autograd.function)": [[918, "torch.autograd.function.once_differentiable"]], "hessian() (in module torch.autograd.functional)": [[919, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[920, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[921, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[922, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[923, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[924, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[925, "torch.autograd.grad"]], "clone() (torch.autograd.grad_mode.inference_mode method)": [[926, "torch.autograd.grad_mode.inference_mode.clone"]], "inference_mode (class in torch.autograd.grad_mode)": [[926, "torch.autograd.grad_mode.inference_mode"]], "clone() (torch.autograd.grad_mode.set_grad_enabled method)": [[927, "torch.autograd.grad_mode.set_grad_enabled.clone"]], "set_grad_enabled (class in torch.autograd.grad_mode)": [[927, "torch.autograd.grad_mode.set_grad_enabled"]], "clone() (torch.autograd.grad_mode.set_multithreading_enabled method)": [[928, "torch.autograd.grad_mode.set_multithreading_enabled.clone"]], "set_multithreading_enabled (class in torch.autograd.grad_mode)": [[928, "torch.autograd.grad_mode.set_multithreading_enabled"]], "gradcheckerror": [[929, "torch.autograd.gradcheck.GradcheckError"]], "gradcheck() (in module torch.autograd.gradcheck)": [[930, "torch.autograd.gradcheck.gradcheck"]], "gradgradcheck() (in module torch.autograd.gradcheck)": [[931, "torch.autograd.gradcheck.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[932, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[933, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[934, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[935, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[936, "torch.autograd.graph.Node.register_prehook"]], "increment_version() (in module torch.autograd.graph)": [[937, "torch.autograd.graph.increment_version"]], "enforceunique (class in torch.autograd.profiler)": [[938, "torch.autograd.profiler.EnforceUnique"]], "see() (torch.autograd.profiler.enforceunique method)": [[938, "torch.autograd.profiler.EnforceUnique.see"]], "kinetosteptracker (class in torch.autograd.profiler)": [[939, "torch.autograd.profiler.KinetoStepTracker"]], "current_step() (torch.autograd.profiler.kinetosteptracker class method)": [[939, "torch.autograd.profiler.KinetoStepTracker.current_step"]], "erase_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[939, "torch.autograd.profiler.KinetoStepTracker.erase_step_count"]], "increment_step() (torch.autograd.profiler.kinetosteptracker class method)": [[939, "torch.autograd.profiler.KinetoStepTracker.increment_step"]], "init_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[939, "torch.autograd.profiler.KinetoStepTracker.init_step_count"]], "load_nvprof() (in module torch.autograd.profiler)": [[940, "torch.autograd.profiler.load_nvprof"]], "parse_nvprof_trace() (in module torch.autograd.profiler)": [[941, "torch.autograd.profiler.parse_nvprof_trace"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[942, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[943, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[944, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[945, "torch.autograd.profiler.profile.total_average"]], "record_function (class in torch.autograd.profiler)": [[946, "torch.autograd.profiler.record_function"]], "interval (class in torch.autograd.profiler_util)": [[947, "torch.autograd.profiler_util.Interval"]], "elapsed_us() (torch.autograd.profiler_util.interval method)": [[947, "torch.autograd.profiler_util.Interval.elapsed_us"]], "kernel (class in torch.autograd.profiler_util)": [[948, "torch.autograd.profiler_util.Kernel"]], "count() (torch.autograd.profiler_util.kernel method)": [[948, "torch.autograd.profiler_util.Kernel.count"]], "device (torch.autograd.profiler_util.kernel attribute)": [[948, "torch.autograd.profiler_util.Kernel.device"]], "duration (torch.autograd.profiler_util.kernel attribute)": [[948, "torch.autograd.profiler_util.Kernel.duration"]], "index() (torch.autograd.profiler_util.kernel method)": [[948, "torch.autograd.profiler_util.Kernel.index"]], "name (torch.autograd.profiler_util.kernel attribute)": [[948, "torch.autograd.profiler_util.Kernel.name"]], "memrecordsacc (class in torch.autograd.profiler_util)": [[949, "torch.autograd.profiler_util.MemRecordsAcc"]], "in_interval() (torch.autograd.profiler_util.memrecordsacc method)": [[949, "torch.autograd.profiler_util.MemRecordsAcc.in_interval"]], "stringtable (class in torch.autograd.profiler_util)": [[950, "torch.autograd.profiler_util.StringTable"]], "clear() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.clear"]], "copy() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.copy"]], "default_factory (torch.autograd.profiler_util.stringtable attribute)": [[950, "torch.autograd.profiler_util.StringTable.default_factory"]], "fromkeys() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.fromkeys"]], "get() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.get"]], "items() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.items"]], "keys() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.keys"]], "pop() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.pop"]], "popitem() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.popitem"]], "setdefault() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.setdefault"]], "update() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.update"]], "values() (torch.autograd.profiler_util.stringtable method)": [[950, "torch.autograd.profiler_util.StringTable.values"]], "baddbmm() (in module torch)": [[951, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[952, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[953, "torch.bernoulli"]], "bincount() (in module torch)": [[954, "torch.bincount"]], "bitwise_and() (in module torch)": [[955, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[956, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[957, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[958, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[959, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[960, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[961, "torch.blackman_window"]], "block_diag() (in module torch)": [[962, "torch.block_diag"]], "bmm() (in module torch)": [[963, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[964, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[965, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[966, "torch.broadcast_to"]], "bucketize() (in module torch)": [[967, "torch.bucketize"]], "can_cast() (in module torch)": [[968, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[969, "torch.cartesian_prod"]], "cat() (in module torch)": [[970, "torch.cat"]], "cdist() (in module torch)": [[971, "torch.cdist"]], "ceil() (in module torch)": [[972, "torch.ceil"]], "chain_matmul() (in module torch)": [[973, "torch.chain_matmul"]], "cholesky() (in module torch)": [[974, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[975, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[976, "torch.cholesky_solve"]], "chunk() (in module torch)": [[977, "torch.chunk"]], "clamp() (in module torch)": [[978, "torch.clamp"]], "clip() (in module torch)": [[979, "torch.clip"]], "clone() (in module torch)": [[980, "torch.clone"]], "column_stack() (in module torch)": [[981, "torch.column_stack"]], "combinations() (in module torch)": [[982, "torch.combinations"]], "compile() (in module torch)": [[983, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[984, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[985, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[986, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[987, "torch.compiler.compile"]], "cudagraph_mark_step_begin() (in module torch.compiler)": [[988, "torch.compiler.cudagraph_mark_step_begin"]], "disable() (in module torch.compiler)": [[989, "torch.compiler.disable"]], "is_compiling() (in module torch.compiler)": [[990, "torch.compiler.is_compiling"]], "is_dynamo_compiling() (in module torch.compiler)": [[991, "torch.compiler.is_dynamo_compiling"]], "list_backends() (in module torch.compiler)": [[992, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[993, "torch.compiler.reset"]], "complex() (in module torch)": [[994, "torch.complex"]], "concat() (in module torch)": [[995, "torch.concat"]], "concatenate() (in module torch)": [[996, "torch.concatenate"]], "cond() (in module torch)": [[997, "torch.cond"]], "conj() (in module torch)": [[998, "torch.conj"]], "conj_physical() (in module torch)": [[999, "torch.conj_physical"]], "copysign() (in module torch)": [[1000, "torch.copysign"]], "corrcoef() (in module torch)": [[1001, "torch.corrcoef"]], "cos() (in module torch)": [[1002, "torch.cos"]], "cosh() (in module torch)": [[1003, "torch.cosh"]], "count_nonzero() (in module torch)": [[1004, "torch.count_nonzero"]], "cov() (in module torch)": [[1005, "torch.cov"]], "stream (class in torch.cpu)": [[1006, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[1007, "torch.cpu.StreamContext"]], "current_device() (in module torch.cpu)": [[1008, "torch.cpu.current_device"]], "current_stream() (in module torch.cpu)": [[1009, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[1010, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[1011, "torch.cpu.is_available"]], "set_device() (in module torch.cpu)": [[1012, "torch.cpu.set_device"]], "stream() (in module torch.cpu)": [[1013, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[1014, "torch.cpu.synchronize"]], "cross() (in module torch)": [[1015, "torch.cross"]], "cudagraph (class in torch.cuda)": [[1016, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[1016, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[1016, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[1016, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[1016, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[1016, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[1016, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[1016, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[1017, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[1018, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[1018, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[1018, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[1018, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[1018, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[1018, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[1018, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[1018, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[1019, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[1019, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[1019, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[1019, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[1019, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[1019, "torch.cuda.ExternalStream.wait_stream"]], "mempool (class in torch.cuda)": [[1020, "torch.cuda.MemPool"]], "allocator (torch.cuda.mempool property)": [[1020, "torch.cuda.MemPool.allocator"]], "id (torch.cuda.mempool property)": [[1020, "torch.cuda.MemPool.id"]], "mempoolcontext (class in torch.cuda)": [[1021, "torch.cuda.MemPoolContext"]], "active_pool() (torch.cuda.mempoolcontext static method)": [[1021, "torch.cuda.MemPoolContext.active_pool"]], "outofmemoryerror": [[1022, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[1023, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[1023, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[1023, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[1023, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[1023, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[1023, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[1024, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[1025, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[1026, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[1027, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[1028, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[1029, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[1030, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[1031, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[1032, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[1033, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[1034, "torch.cuda.comm.scatter"]], "cudart() (in module torch.cuda)": [[1035, "torch.cuda.cudart"]], "current_blas_handle() (in module torch.cuda)": [[1036, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[1037, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[1038, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[1039, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[1040, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[1041, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[1042, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[1043, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[1044, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[1045, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[1046, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1047, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1048, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1049, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1050, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1051, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1052, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1053, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1054, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1055, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1056, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1057, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1058, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1059, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1060, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1061, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1062, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1063, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1064, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1065, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1066, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1067, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1068, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1069, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1070, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1071, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1072, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1073, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1074, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1075, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1076, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1077, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1078, "torch.cuda.nvtx.mark"]], "range() (in module torch.cuda.nvtx)": [[1079, "torch.cuda.nvtx.range"]], "range_pop() (in module torch.cuda.nvtx)": [[1080, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1081, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1082, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1083, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1084, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1085, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1086, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1087, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1088, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1089, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1090, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1091, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1092, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1093, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1094, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1095, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1096, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1097, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1098, "torch.cummax"]], "cummin() (in module torch)": [[1099, "torch.cummin"]], "cumprod() (in module torch)": [[1100, "torch.cumprod"]], "cumsum() (in module torch)": [[1101, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1102, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1103, "torch.deg2rad"]], "dequantize() (in module torch)": [[1104, "torch.dequantize"]], "det() (in module torch)": [[1105, "torch.det"]], "diag() (in module torch)": [[1106, "torch.diag"]], "diag_embed() (in module torch)": [[1107, "torch.diag_embed"]], "diagflat() (in module torch)": [[1108, "torch.diagflat"]], "diagonal() (in module torch)": [[1109, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1110, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1111, "torch.diff"]], "digamma() (in module torch)": [[1112, "torch.digamma"]], "dist() (in module torch)": [[1113, "torch.dist"]], "div() (in module torch)": [[1114, "torch.div"]], "divide() (in module torch)": [[1115, "torch.divide"]], "dot() (in module torch)": [[1116, "torch.dot"]], "dsplit() (in module torch)": [[1117, "torch.dsplit"]], "dstack() (in module torch)": [[1118, "torch.dstack"]], "einsum() (in module torch)": [[1119, "torch.einsum"]], "empty() (in module torch)": [[1120, "torch.empty"]], "empty_like() (in module torch)": [[1121, "torch.empty_like"]], "empty_strided() (in module torch)": [[1122, "torch.empty_strided"]], "enable_grad (class in torch)": [[1123, "torch.enable_grad"]], "eq() (in module torch)": [[1124, "torch.eq"]], "equal() (in module torch)": [[1125, "torch.equal"]], "erf() (in module torch)": [[1126, "torch.erf"]], "erfc() (in module torch)": [[1127, "torch.erfc"]], "erfinv() (in module torch)": [[1128, "torch.erfinv"]], "exp() (in module torch)": [[1129, "torch.exp"]], "exp2() (in module torch)": [[1130, "torch.exp2"]], "expm1() (in module torch)": [[1131, "torch.expm1"]], "eye() (in module torch)": [[1132, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1133, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1134, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1135, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1136, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1137, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1138, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1139, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1140, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1141, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1142, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1143, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1144, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1145, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1146, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1147, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1148, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1149, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1150, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1151, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1152, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1153, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1154, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1155, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1156, "torch.fft.rfftn"]], "fix() (in module torch)": [[1157, "torch.fix"]], "flatten() (in module torch)": [[1158, "torch.flatten"]], "flip() (in module torch)": [[1159, "torch.flip"]], "fliplr() (in module torch)": [[1160, "torch.fliplr"]], "flipud() (in module torch)": [[1161, "torch.flipud"]], "float_power() (in module torch)": [[1162, "torch.float_power"]], "floor() (in module torch)": [[1163, "torch.floor"]], "floor_divide() (in module torch)": [[1164, "torch.floor_divide"]], "fmax() (in module torch)": [[1165, "torch.fmax"]], "fmin() (in module torch)": [[1166, "torch.fmin"]], "fmod() (in module torch)": [[1167, "torch.fmod"]], "frac() (in module torch)": [[1168, "torch.frac"]], "frexp() (in module torch)": [[1169, "torch.frexp"]], "from_dlpack() (in module torch)": [[1170, "torch.from_dlpack"]], "from_file() (in module torch)": [[1171, "torch.from_file"]], "from_numpy() (in module torch)": [[1172, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1173, "torch.frombuffer"]], "full() (in module torch)": [[1174, "torch.full"]], "full_like() (in module torch)": [[1175, "torch.full_like"]], "functional_call() (in module torch.func)": [[1176, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1177, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1178, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1179, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1180, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1181, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1182, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1183, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1184, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1185, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1186, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1187, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1188, "torch.func.vmap"]], "get_proxy_mode() (in module torch.fx.experimental.proxy_tensor)": [[1189, "torch.fx.experimental.proxy_tensor.get_proxy_mode"]], "handle_sym_dispatch() (in module torch.fx.experimental.proxy_tensor)": [[1190, "torch.fx.experimental.proxy_tensor.handle_sym_dispatch"]], "make_fx() (in module torch.fx.experimental.proxy_tensor)": [[1191, "torch.fx.experimental.proxy_tensor.make_fx"]], "maybe_disable_thunkify() (in module torch.fx.experimental.proxy_tensor)": [[1192, "torch.fx.experimental.proxy_tensor.maybe_disable_thunkify"]], "maybe_enable_thunkify() (in module torch.fx.experimental.proxy_tensor)": [[1193, "torch.fx.experimental.proxy_tensor.maybe_enable_thunkify"]], "callmethodkey (class in torch.fx.experimental.symbolic_shapes)": [[1194, "torch.fx.experimental.symbolic_shapes.CallMethodKey"]], "get() (torch.fx.experimental.symbolic_shapes.callmethodkey method)": [[1194, "torch.fx.experimental.symbolic_shapes.CallMethodKey.get"]], "convertintkey (class in torch.fx.experimental.symbolic_shapes)": [[1195, "torch.fx.experimental.symbolic_shapes.ConvertIntKey"]], "get() (torch.fx.experimental.symbolic_shapes.convertintkey method)": [[1195, "torch.fx.experimental.symbolic_shapes.ConvertIntKey.get"]], "dimconstraints (class in torch.fx.experimental.symbolic_shapes)": [[1196, "torch.fx.experimental.symbolic_shapes.DimConstraints"]], "add() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1196, "torch.fx.experimental.symbolic_shapes.DimConstraints.add"]], "add_equality() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1196, "torch.fx.experimental.symbolic_shapes.DimConstraints.add_equality"]], "forced_specializations() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1196, "torch.fx.experimental.symbolic_shapes.DimConstraints.forced_specializations"]], "prettify_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1196, "torch.fx.experimental.symbolic_shapes.DimConstraints.prettify_results"]], "remove_redundant_dynamic_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1196, "torch.fx.experimental.symbolic_shapes.DimConstraints.remove_redundant_dynamic_results"]], "rewrite_with_congruences() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1196, "torch.fx.experimental.symbolic_shapes.DimConstraints.rewrite_with_congruences"]], "solve() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1196, "torch.fx.experimental.symbolic_shapes.DimConstraints.solve"]], "dimdynamic (class in torch.fx.experimental.symbolic_shapes)": [[1197, "torch.fx.experimental.symbolic_shapes.DimDynamic"]], "dividebykey (class in torch.fx.experimental.symbolic_shapes)": [[1198, "torch.fx.experimental.symbolic_shapes.DivideByKey"]], "get() (torch.fx.experimental.symbolic_shapes.dividebykey method)": [[1198, "torch.fx.experimental.symbolic_shapes.DivideByKey.get"]], "equalityconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1199, "torch.fx.experimental.symbolic_shapes.EqualityConstraint"]], "innertensorkey (class in torch.fx.experimental.symbolic_shapes)": [[1200, "torch.fx.experimental.symbolic_shapes.InnerTensorKey"]], "get() (torch.fx.experimental.symbolic_shapes.innertensorkey method)": [[1200, "torch.fx.experimental.symbolic_shapes.InnerTensorKey.get"]], "propagateunbackedsymints (class in torch.fx.experimental.symbolic_shapes)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts"]], "boxed_run() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.boxed_run"]], "call_function() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.call_function"]], "call_method() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.call_method"]], "call_module() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.call_module"]], "fetch_args_kwargs_from_env() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.fetch_attr"]], "get_attr() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.get_attr"]], "map_nodes_to_values() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.map_nodes_to_values"]], "output() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.output"]], "placeholder() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.placeholder"]], "run() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.run"]], "run_node() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1201, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.run_node"]], "relaxedunspecconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1202, "torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint"]], "shapeenv (class in torch.fx.experimental.symbolic_shapes)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv"]], "add_var_to_val() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.add_var_to_val"]], "bind_symbols() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.bind_symbols"]], "bound_sympy() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.bound_sympy"]], "check_equal() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.check_equal"]], "cleanup() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.cleanup"]], "create_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbol"]], "create_symbolic_sizes_strides_storage_offset() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbolic_sizes_strides_storage_offset"]], "create_symboolnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symboolnode"]], "create_symfloatnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symfloatnode"]], "create_symintnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symintnode"]], "create_unbacked_symbool() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symbool"]], "create_unbacked_symfloat() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symfloat"]], "create_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symint"]], "create_unspecified_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symbol"]], "create_unspecified_symint_and_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symint_and_symbol"]], "defer_runtime_assert() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.defer_runtime_assert"]], "evaluate_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_expression"]], "evaluate_guards_for_args() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_for_args"]], "evaluate_symexpr() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_symexpr"]], "format_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.format_guards"]], "freeze() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.freeze"]], "freeze_runtime_asserts() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.freeze_runtime_asserts"]], "get_axioms() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_axioms"]], "get_implications() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_implications"]], "get_nontrivial_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_nontrivial_guards"]], "get_pruned_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_pruned_guards"]], "ignore_fresh_unbacked_symbols() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.ignore_fresh_unbacked_symbols"]], "is_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.is_unbacked_symint"]], "produce_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards"]], "produce_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards_expression"]], "replace() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.replace"]], "set_unbacked_var_to_val() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.set_unbacked_var_to_val"]], "simplify() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.simplify"]], "size_hint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.size_hint"]], "suppress_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1203, "torch.fx.experimental.symbolic_shapes.ShapeEnv.suppress_guards"]], "shapeenvsettings (class in torch.fx.experimental.symbolic_shapes)": [[1204, "torch.fx.experimental.symbolic_shapes.ShapeEnvSettings"]], "statefulsymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1205, "torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext"]], "statelesssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1206, "torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext"]], "strictminmaxconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1207, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint"]], "render() (torch.fx.experimental.symbolic_shapes.strictminmaxconstraint method)": [[1207, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.render"]], "subclasssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1208, "torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext"]], "symboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1209, "torch.fx.experimental.symbolic_shapes.SymbolicContext"]], "canonicalize_bool_expr() (in module torch.fx.experimental.symbolic_shapes)": [[1210, "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr"]], "check_consistent() (in module torch.fx.experimental.symbolic_shapes)": [[1211, "torch.fx.experimental.symbolic_shapes.check_consistent"]], "compute_unbacked_bindings() (in module torch.fx.experimental.symbolic_shapes)": [[1212, "torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings"]], "constrain_range() (in module torch.fx.experimental.symbolic_shapes)": [[1213, "torch.fx.experimental.symbolic_shapes.constrain_range"]], "constrain_unify() (in module torch.fx.experimental.symbolic_shapes)": [[1214, "torch.fx.experimental.symbolic_shapes.constrain_unify"]], "definitely_false() (in module torch.fx.experimental.symbolic_shapes)": [[1215, "torch.fx.experimental.symbolic_shapes.definitely_false"]], "definitely_true() (in module torch.fx.experimental.symbolic_shapes)": [[1216, "torch.fx.experimental.symbolic_shapes.definitely_true"]], "guard_size_oblivious() (in module torch.fx.experimental.symbolic_shapes)": [[1217, "torch.fx.experimental.symbolic_shapes.guard_size_oblivious"]], "has_free_symbols() (in module torch.fx.experimental.symbolic_shapes)": [[1218, "torch.fx.experimental.symbolic_shapes.has_free_symbols"]], "hint_int() (in module torch.fx.experimental.symbolic_shapes)": [[1219, "torch.fx.experimental.symbolic_shapes.hint_int"]], "is_accessor_node() (in module torch.fx.experimental.symbolic_shapes)": [[1220, "torch.fx.experimental.symbolic_shapes.is_accessor_node"]], "is_concrete_bool() (in module torch.fx.experimental.symbolic_shapes)": [[1221, "torch.fx.experimental.symbolic_shapes.is_concrete_bool"]], "is_concrete_int() (in module torch.fx.experimental.symbolic_shapes)": [[1222, "torch.fx.experimental.symbolic_shapes.is_concrete_int"]], "lru_cache() (in module torch.fx.experimental.symbolic_shapes)": [[1223, "torch.fx.experimental.symbolic_shapes.lru_cache"]], "parallel_and() (in module torch.fx.experimental.symbolic_shapes)": [[1224, "torch.fx.experimental.symbolic_shapes.parallel_and"]], "parallel_or() (in module torch.fx.experimental.symbolic_shapes)": [[1225, "torch.fx.experimental.symbolic_shapes.parallel_or"]], "rebind_unbacked() (in module torch.fx.experimental.symbolic_shapes)": [[1226, "torch.fx.experimental.symbolic_shapes.rebind_unbacked"]], "resolve_unbacked_bindings() (in module torch.fx.experimental.symbolic_shapes)": [[1227, "torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings"]], "statically_known_true() (in module torch.fx.experimental.symbolic_shapes)": [[1228, "torch.fx.experimental.symbolic_shapes.statically_known_true"]], "sym_eq() (in module torch.fx.experimental.symbolic_shapes)": [[1229, "torch.fx.experimental.symbolic_shapes.sym_eq"]], "gather() (in module torch)": [[1230, "torch.gather"]], "gcd() (in module torch)": [[1231, "torch.gcd"]], "ge() (in module torch)": [[1232, "torch.ge"]], "geqrf() (in module torch)": [[1233, "torch.geqrf"]], "ger() (in module torch)": [[1234, "torch.ger"]], "get_default_device() (in module torch)": [[1235, "torch.get_default_device"]], "get_default_dtype() (in module torch)": [[1236, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1237, "torch.get_deterministic_debug_mode"]], "get_device_module() (in module torch)": [[1238, "torch.get_device_module"]], "get_float32_matmul_precision() (in module torch)": [[1239, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1240, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1241, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1242, "torch.get_rng_state"]], "gradient() (in module torch)": [[1243, "torch.gradient"]], "greater() (in module torch)": [[1244, "torch.greater"]], "greater_equal() (in module torch)": [[1245, "torch.greater_equal"]], "gt() (in module torch)": [[1246, "torch.gt"]], "hamming_window() (in module torch)": [[1247, "torch.hamming_window"]], "hann_window() (in module torch)": [[1248, "torch.hann_window"]], "heaviside() (in module torch)": [[1249, "torch.heaviside"]], "histc() (in module torch)": [[1250, "torch.histc"]], "histogram() (in module torch)": [[1251, "torch.histogram"]], "histogramdd() (in module torch)": [[1252, "torch.histogramdd"]], "hsplit() (in module torch)": [[1253, "torch.hsplit"]], "hspmm() (in module torch)": [[1254, "torch.hspmm"]], "hstack() (in module torch)": [[1255, "torch.hstack"]], "hypot() (in module torch)": [[1256, "torch.hypot"]], "i0() (in module torch)": [[1257, "torch.i0"]], "igamma() (in module torch)": [[1258, "torch.igamma"]], "igammac() (in module torch)": [[1259, "torch.igammac"]], "imag() (in module torch)": [[1260, "torch.imag"]], "index_add() (in module torch)": [[1261, "torch.index_add"]], "index_copy() (in module torch)": [[1262, "torch.index_copy"]], "index_reduce() (in module torch)": [[1263, "torch.index_reduce"]], "index_select() (in module torch)": [[1264, "torch.index_select"]], "initial_seed() (in module torch)": [[1265, "torch.initial_seed"]], "inner() (in module torch)": [[1266, "torch.inner"]], "inverse() (in module torch)": [[1267, "torch.inverse"]], "is_complex() (in module torch)": [[1268, "torch.is_complex"]], "is_conj() (in module torch)": [[1269, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1270, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1271, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1272, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1273, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1274, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1275, "torch.is_storage"]], "is_tensor() (in module torch)": [[1276, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1277, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1278, "torch.isclose"]], "isfinite() (in module torch)": [[1279, "torch.isfinite"]], "isin() (in module torch)": [[1280, "torch.isin"]], "isinf() (in module torch)": [[1281, "torch.isinf"]], "isnan() (in module torch)": [[1282, "torch.isnan"]], "isneginf() (in module torch)": [[1283, "torch.isneginf"]], "isposinf() (in module torch)": [[1284, "torch.isposinf"]], "isreal() (in module torch)": [[1285, "torch.isreal"]], "istft() (in module torch)": [[1286, "torch.istft"]], "attribute (class in torch.jit)": [[1287, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1287, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1287, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1287, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1287, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1288, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1288, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1288, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1288, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1289, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1289, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1289, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1289, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1289, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.modules"]], "mtia() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.mtia"]], "named_buffers() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_load_state_dict_pre_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.set_extra_state"]], "set_submodule() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.set_submodule"]], "share_memory() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1289, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1290, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1291, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1292, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1293, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1294, "torch.jit.ignore"]], "interface() (in module torch.jit)": [[1295, "torch.jit.interface"]], "isinstance() (in module torch.jit)": [[1296, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1297, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1298, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1299, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1300, "torch.jit.save"]], "script() (in module torch.jit)": [[1301, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1302, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1303, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1304, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1305, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1306, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1307, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1308, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1309, "torch.kaiser_window"]], "kron() (in module torch)": [[1310, "torch.kron"]], "kthvalue() (in module torch)": [[1311, "torch.kthvalue"]], "lcm() (in module torch)": [[1312, "torch.lcm"]], "ldexp() (in module torch)": [[1313, "torch.ldexp"]], "le() (in module torch)": [[1314, "torch.le"]], "lerp() (in module torch)": [[1315, "torch.lerp"]], "less() (in module torch)": [[1316, "torch.less"]], "less_equal() (in module torch)": [[1317, "torch.less_equal"]], "lgamma() (in module torch)": [[1318, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1319, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1320, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1321, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1322, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1323, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1324, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1325, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1326, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1327, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1328, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1329, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1330, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1331, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1332, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1333, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1334, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1335, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1336, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1337, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1338, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1339, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1340, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1341, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1342, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1343, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1344, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1345, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1346, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1347, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1348, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1349, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1350, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1351, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1352, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1353, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1354, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1355, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1356, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1357, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1358, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1359, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1360, "torch.linspace"]], "load() (in module torch)": [[1361, "torch.load"]], "lobpcg() (in module torch)": [[1362, "torch.lobpcg"]], "log() (in module torch)": [[1363, "torch.log"]], "log10() (in module torch)": [[1364, "torch.log10"]], "log1p() (in module torch)": [[1365, "torch.log1p"]], "log2() (in module torch)": [[1366, "torch.log2"]], "logaddexp() (in module torch)": [[1367, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1368, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1369, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1370, "torch.logdet"]], "logical_and() (in module torch)": [[1371, "torch.logical_and"]], "logical_not() (in module torch)": [[1372, "torch.logical_not"]], "logical_or() (in module torch)": [[1373, "torch.logical_or"]], "logical_xor() (in module torch)": [[1374, "torch.logical_xor"]], "logit() (in module torch)": [[1375, "torch.logit"]], "logspace() (in module torch)": [[1376, "torch.logspace"]], "logsumexp() (in module torch)": [[1377, "torch.logsumexp"]], "lt() (in module torch)": [[1378, "torch.lt"]], "lu() (in module torch)": [[1379, "torch.lu"]], "lu_solve() (in module torch)": [[1380, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1381, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1382, "torch.manual_seed"]], "masked_select() (in module torch)": [[1383, "torch.masked_select"]], "matmul() (in module torch)": [[1384, "torch.matmul"]], "matrix_exp() (in module torch)": [[1385, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1386, "torch.matrix_power"]], "max() (in module torch)": [[1387, "torch.max"]], "maximum() (in module torch)": [[1388, "torch.maximum"]], "mean() (in module torch)": [[1389, "torch.mean"]], "median() (in module torch)": [[1390, "torch.median"]], "meshgrid() (in module torch)": [[1391, "torch.meshgrid"]], "min() (in module torch)": [[1392, "torch.min"]], "minimum() (in module torch)": [[1393, "torch.minimum"]], "mm() (in module torch)": [[1394, "torch.mm"]], "mode() (in module torch)": [[1395, "torch.mode"]], "moveaxis() (in module torch)": [[1396, "torch.moveaxis"]], "movedim() (in module torch)": [[1397, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1398, "torch.mps.current_allocated_memory"]], "device_count() (in module torch.mps)": [[1399, "torch.mps.device_count"]], "driver_allocated_memory() (in module torch.mps)": [[1400, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1401, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1402, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1402, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1402, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1402, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1402, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1402, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1403, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1404, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1405, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1406, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1407, "torch.mps.profiler.stop"]], "recommended_max_memory() (in module torch.mps)": [[1408, "torch.mps.recommended_max_memory"]], "seed() (in module torch.mps)": [[1409, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1410, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1411, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1412, "torch.mps.synchronize"]], "msort() (in module torch)": [[1413, "torch.msort"]], "deferredmtiacallerror": [[1414, "torch.mtia.DeferredMtiaCallError"]], "event (class in torch.mtia)": [[1415, "torch.mtia.Event"]], "elapsed_time() (torch.mtia.event method)": [[1415, "torch.mtia.Event.elapsed_time"]], "query() (torch.mtia.event method)": [[1415, "torch.mtia.Event.query"]], "record() (torch.mtia.event method)": [[1415, "torch.mtia.Event.record"]], "synchronize() (torch.mtia.event method)": [[1415, "torch.mtia.Event.synchronize"]], "wait() (torch.mtia.event method)": [[1415, "torch.mtia.Event.wait"]], "stream (class in torch.mtia)": [[1416, "torch.mtia.Stream"]], "query() (torch.mtia.stream method)": [[1416, "torch.mtia.Stream.query"]], "record_event() (torch.mtia.stream method)": [[1416, "torch.mtia.Stream.record_event"]], "synchronize() (torch.mtia.stream method)": [[1416, "torch.mtia.Stream.synchronize"]], "wait_event() (torch.mtia.stream method)": [[1416, "torch.mtia.Stream.wait_event"]], "wait_stream() (torch.mtia.stream method)": [[1416, "torch.mtia.Stream.wait_stream"]], "streamcontext (class in torch.mtia)": [[1417, "torch.mtia.StreamContext"]], "current_device() (in module torch.mtia)": [[1418, "torch.mtia.current_device"]], "current_stream() (in module torch.mtia)": [[1419, "torch.mtia.current_stream"]], "default_stream() (in module torch.mtia)": [[1420, "torch.mtia.default_stream"]], "device (class in torch.mtia)": [[1421, "torch.mtia.device"]], "device_count() (in module torch.mtia)": [[1422, "torch.mtia.device_count"]], "get_rng_state() (in module torch.mtia)": [[1423, "torch.mtia.get_rng_state"]], "init() (in module torch.mtia)": [[1424, "torch.mtia.init"]], "is_available() (in module torch.mtia)": [[1425, "torch.mtia.is_available"]], "is_initialized() (in module torch.mtia)": [[1426, "torch.mtia.is_initialized"]], "memory_stats() (in module torch.mtia)": [[1427, "torch.mtia.memory_stats"]], "set_device() (in module torch.mtia)": [[1428, "torch.mtia.set_device"]], "set_rng_state() (in module torch.mtia)": [[1429, "torch.mtia.set_rng_state"]], "set_stream() (in module torch.mtia)": [[1430, "torch.mtia.set_stream"]], "stream() (in module torch.mtia)": [[1431, "torch.mtia.stream"]], "synchronize() (in module torch.mtia)": [[1432, "torch.mtia.synchronize"]], "mul() (in module torch)": [[1433, "torch.mul"]], "multinomial() (in module torch)": [[1434, "torch.multinomial"]], "multiply() (in module torch)": [[1435, "torch.multiply"]], "mv() (in module torch)": [[1436, "torch.mv"]], "mvlgamma() (in module torch)": [[1437, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1438, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1439, "torch.nanmean"]], "nanmedian() (in module torch)": [[1440, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1441, "torch.nanquantile"]], "nansum() (in module torch)": [[1442, "torch.nansum"]], "narrow() (in module torch)": [[1443, "torch.narrow"]], "narrow_copy() (in module torch)": [[1444, "torch.narrow_copy"]], "ne() (in module torch)": [[1445, "torch.ne"]], "neg() (in module torch)": [[1446, "torch.neg"]], "negative() (in module torch)": [[1447, "torch.negative"]], "nextafter() (in module torch)": [[1448, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1449, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1450, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1451, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1452, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1452, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1452, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1453, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1454, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1455, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1456, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1457, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1458, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1459, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1460, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1461, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1462, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1463, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1464, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1465, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1466, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1467, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1468, "torch.nn.ChannelShuffle"]], "circularpad1d (class in torch.nn)": [[1469, "torch.nn.CircularPad1d"]], "circularpad2d (class in torch.nn)": [[1470, "torch.nn.CircularPad2d"]], "circularpad3d (class in torch.nn)": [[1471, "torch.nn.CircularPad3d"]], "constantpad1d (class in torch.nn)": [[1472, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1473, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1474, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1475, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1476, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1477, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1478, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1479, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1480, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1481, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1482, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1483, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1484, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1485, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1486, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1487, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1488, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1489, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1490, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1490, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1491, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1491, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1491, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1492, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1493, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1494, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1495, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1496, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1497, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1498, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1499, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1500, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1501, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1502, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1503, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1504, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1505, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1506, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1507, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1508, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1509, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1510, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1511, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1512, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1513, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1514, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1515, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1516, "torch.nn.LPPool2d"]], "lppool3d (class in torch.nn)": [[1517, "torch.nn.LPPool3d"]], "lstm (class in torch.nn)": [[1518, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1519, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1520, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1521, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1521, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1522, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1522, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1523, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1523, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1524, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1524, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1525, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1525, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1526, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1526, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1527, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1527, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1528, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1528, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1529, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1529, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1530, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1530, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1531, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1531, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1532, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1532, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1533, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1533, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1534, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1535, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1536, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1537, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1538, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1539, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1540, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1541, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1542, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1543, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1544, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1545, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1546, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1547, "torch.nn.Mish"]], "module (class in torch.nn)": [[1548, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1548, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1548, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1548, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1548, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1548, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1548, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1548, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1548, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1548, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1548, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1548, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1548, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1548, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1548, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1548, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1548, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1548, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1548, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1548, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1548, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1548, "torch.nn.Module.modules"]], "mtia() (torch.nn.module method)": [[1548, "torch.nn.Module.mtia"]], "named_buffers() (torch.nn.module method)": [[1548, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1548, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1548, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1548, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1548, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1548, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1548, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1548, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1548, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1548, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1548, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1548, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.nn.module method)": [[1548, "torch.nn.Module.register_load_state_dict_pre_hook"]], "register_module() (torch.nn.module method)": [[1548, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1548, "torch.nn.Module.register_parameter"]], "register_state_dict_post_hook() (torch.nn.module method)": [[1548, "torch.nn.Module.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1548, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1548, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1548, "torch.nn.Module.set_extra_state"]], "set_submodule() (torch.nn.module method)": [[1548, "torch.nn.Module.set_submodule"]], "share_memory() (torch.nn.module method)": [[1548, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1548, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1548, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1548, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1548, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1548, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1548, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1548, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1549, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1549, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1549, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1549, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1549, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1549, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1549, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1550, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1550, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1550, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1550, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1551, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1552, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1553, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1554, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1554, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1554, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1555, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1556, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1557, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1558, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1558, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1559, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1559, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1559, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1560, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1561, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1562, "torch.nn.PoissonNLLLoss"]], "rmsnorm (class in torch.nn)": [[1563, "torch.nn.RMSNorm"]], "extra_repr() (torch.nn.rmsnorm method)": [[1563, "torch.nn.RMSNorm.extra_repr"]], "forward() (torch.nn.rmsnorm method)": [[1563, "torch.nn.RMSNorm.forward"]], "reset_parameters() (torch.nn.rmsnorm method)": [[1563, "torch.nn.RMSNorm.reset_parameters"]], "rnn (class in torch.nn)": [[1564, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1565, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1565, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1566, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1567, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1568, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1569, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1570, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1571, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1572, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1573, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1574, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1575, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1576, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1577, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1577, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1578, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1579, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1580, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1581, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1582, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1583, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1584, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1585, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1586, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1587, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1588, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1588, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1589, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1590, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1591, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1592, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1592, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1592, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1593, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1593, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1594, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1594, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1595, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1595, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1596, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1596, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1597, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1598, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1599, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1600, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1601, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1602, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1603, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1604, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1605, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1606, "torch.nn.ZeroPad3d"]], "sdpbackend (class in torch.nn.attention)": [[1607, "torch.nn.attention.SDPBackend"]], "name (torch.nn.attention.sdpbackend property)": [[1607, "torch.nn.attention.SDPBackend.name"]], "causalbias (class in torch.nn.attention.bias)": [[1608, "torch.nn.attention.bias.CausalBias"]], "causalvariant (class in torch.nn.attention.bias)": [[1609, "torch.nn.attention.bias.CausalVariant"]], "causal_lower_right() (in module torch.nn.attention.bias)": [[1610, "torch.nn.attention.bias.causal_lower_right"]], "causal_upper_left() (in module torch.nn.attention.bias)": [[1611, "torch.nn.attention.bias.causal_upper_left"]], "sdpa_kernel() (in module torch.nn.attention)": [[1612, "torch.nn.attention.sdpa_kernel"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1613, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1614, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1615, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1616, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1617, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1618, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1619, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1620, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1621, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1622, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1623, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1624, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1625, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1626, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1627, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1628, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1629, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1630, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1631, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1632, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1633, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1634, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1635, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1636, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1637, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1638, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1639, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1640, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1641, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1642, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1643, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1644, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1645, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1646, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1647, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1648, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1649, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1650, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1651, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1652, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1653, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1654, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1655, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1656, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1657, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1658, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1659, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1660, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1661, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1662, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1663, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1664, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1665, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1666, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1667, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1668, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1669, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1670, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1671, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1672, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1673, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1674, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1675, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1676, "torch.nn.functional.lp_pool2d"]], "lp_pool3d() (in module torch.nn.functional)": [[1677, "torch.nn.functional.lp_pool3d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1678, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1679, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1680, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1681, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1682, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1683, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1684, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1685, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1686, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1687, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1688, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1689, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1690, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1691, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1692, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1693, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1694, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1695, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1696, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1697, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1698, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1699, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1700, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1701, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1702, "torch.nn.functional.relu_"]], "rms_norm() (in module torch.nn.functional)": [[1703, "torch.nn.functional.rms_norm"]], "rrelu() (in module torch.nn.functional)": [[1704, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1705, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1706, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1707, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1708, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1709, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1710, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1711, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1712, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1713, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1714, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1715, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1716, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1717, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1718, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1719, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1720, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1721, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1722, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1723, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1724, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1725, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1726, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1727, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1728, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1728, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1728, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1729, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1730, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1731, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1732, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1733, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1734, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1735, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1736, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "rmsnorm (class in torch.nn.modules.normalization)": [[1737, "torch.nn.modules.normalization.RMSNorm"]], "extra_repr() (torch.nn.modules.normalization.rmsnorm method)": [[1737, "torch.nn.modules.normalization.RMSNorm.extra_repr"]], "forward() (torch.nn.modules.normalization.rmsnorm method)": [[1737, "torch.nn.modules.normalization.RMSNorm.forward"]], "reset_parameters() (torch.nn.modules.normalization.rmsnorm method)": [[1737, "torch.nn.modules.normalization.RMSNorm.reset_parameters"]], "distributeddataparallel (class in torch.nn.parallel)": [[1738, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1738, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1738, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1738, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1738, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "buffer (class in torch.nn.parameter)": [[1739, "torch.nn.parameter.Buffer"]], "parameter (class in torch.nn.parameter)": [[1740, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1741, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1742, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1742, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm() (in module torch.nn.utils)": [[1743, "torch.nn.utils.clip_grad_norm"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1744, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1745, "torch.nn.utils.clip_grad_value_"]], "convert_conv2d_weight_memory_format() (in module torch.nn.utils)": [[1746, "torch.nn.utils.convert_conv2d_weight_memory_format"]], "convert_conv3d_weight_memory_format() (in module torch.nn.utils)": [[1747, "torch.nn.utils.convert_conv3d_weight_memory_format"]], "fuse_conv_bn_eval() (in module torch.nn.utils)": [[1748, "torch.nn.utils.fuse_conv_bn_eval"]], "fuse_conv_bn_weights() (in module torch.nn.utils)": [[1749, "torch.nn.utils.fuse_conv_bn_weights"]], "fuse_linear_bn_eval() (in module torch.nn.utils)": [[1750, "torch.nn.utils.fuse_linear_bn_eval"]], "fuse_linear_bn_weights() (in module torch.nn.utils)": [[1751, "torch.nn.utils.fuse_linear_bn_weights"]], "parameters_to_vector() (in module torch.nn.utils)": [[1752, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1753, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1754, "torch.nn.utils.parametrizations.spectral_norm"]], "weight_norm() (in module torch.nn.utils.parametrizations)": [[1755, "torch.nn.utils.parametrizations.weight_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1756, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1756, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1757, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1758, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1759, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1760, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1761, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1761, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1761, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1761, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1761, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1761, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1762, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1762, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1762, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1762, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1762, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1763, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1763, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1763, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1763, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1763, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1764, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1764, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1764, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1764, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1764, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1765, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1765, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1765, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1765, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1765, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1765, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1766, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1766, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1766, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1766, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1766, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1766, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1766, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1767, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1767, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1767, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1767, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1767, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1767, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1768, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1768, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1768, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1768, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1768, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1769, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1770, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1771, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1772, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1773, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1774, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1775, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1776, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1777, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1778, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1779, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1780, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1780, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1780, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1780, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1780, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1780, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1780, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1780, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1780, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1780, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1781, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1782, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1783, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1784, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1785, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1786, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1787, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1788, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1789, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1790, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1791, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1792, "torch.no_grad"]], "nonzero() (in module torch)": [[1793, "torch.nonzero"]], "norm() (in module torch)": [[1794, "torch.norm"]], "normal() (in module torch)": [[1795, "torch.normal"]], "not_equal() (in module torch)": [[1796, "torch.not_equal"]], "numel() (in module torch)": [[1797, "torch.numel"]], "ones() (in module torch)": [[1798, "torch.ones"]], "ones_like() (in module torch)": [[1799, "torch.ones_like"]], "jitscalartype (class in torch.onnx)": [[1800, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1800, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1800, "torch.onnx.JitScalarType.from_dtype"]], "from_onnx_type() (torch.onnx.jitscalartype class method)": [[1800, "torch.onnx.JitScalarType.from_onnx_type"]], "from_value() (torch.onnx.jitscalartype class method)": [[1800, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1800, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1800, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1800, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1800, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1801, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1801, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1802, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1803, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1803, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1804, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1804, "torch.optim.Adadelta.zero_grad"]], "adafactor (class in torch.optim)": [[1805, "torch.optim.Adafactor"]], "add_param_group() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.add_param_group"]], "load_state_dict() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.register_step_pre_hook"]], "state_dict() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.state_dict"]], "step() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.step"]], "zero_grad() (torch.optim.adafactor method)": [[1805, "torch.optim.Adafactor.zero_grad"]], "adagrad (class in torch.optim)": [[1806, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1806, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1807, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1807, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1807, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1807, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1807, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1807, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1807, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1807, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1807, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1807, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1807, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1807, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1808, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1808, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1809, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1809, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1810, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1810, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1811, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1811, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1812, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1813, "torch.optim.Optimizer.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.optimizer method)": [[1814, "torch.optim.Optimizer.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.optimizer method)": [[1815, "torch.optim.Optimizer.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.optimizer method)": [[1816, "torch.optim.Optimizer.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.optimizer method)": [[1817, "torch.optim.Optimizer.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.optimizer method)": [[1818, "torch.optim.Optimizer.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.optimizer method)": [[1819, "torch.optim.Optimizer.register_step_pre_hook"]], "state_dict() (torch.optim.optimizer method)": [[1820, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1821, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1822, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1823, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1823, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1824, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1824, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1825, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1825, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1826, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1826, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1827, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1827, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1828, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1828, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1828, "torch.optim.lr_scheduler.ChainedScheduler.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1828, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1828, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1828, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "step() (torch.optim.lr_scheduler.chainedscheduler method)": [[1828, "torch.optim.lr_scheduler.ChainedScheduler.step"]], "constantlr (class in torch.optim.lr_scheduler)": [[1829, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1829, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.constantlr method)": [[1829, "torch.optim.lr_scheduler.ConstantLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1829, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1829, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1829, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "step() (torch.optim.lr_scheduler.constantlr method)": [[1829, "torch.optim.lr_scheduler.ConstantLR.step"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1830, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1830, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1830, "torch.optim.lr_scheduler.CosineAnnealingLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1830, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1830, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1830, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1830, "torch.optim.lr_scheduler.CosineAnnealingLR.step"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1831, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1831, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1831, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1831, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1831, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1831, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1831, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1832, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1832, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1832, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cycliclr method)": [[1832, "torch.optim.lr_scheduler.CyclicLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1832, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "scale_fn() (torch.optim.lr_scheduler.cycliclr method)": [[1832, "torch.optim.lr_scheduler.CyclicLR.scale_fn"]], "step() (torch.optim.lr_scheduler.cycliclr method)": [[1832, "torch.optim.lr_scheduler.CyclicLR.step"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1833, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1833, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1833, "torch.optim.lr_scheduler.ExponentialLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1833, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1833, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1833, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "step() (torch.optim.lr_scheduler.exponentiallr method)": [[1833, "torch.optim.lr_scheduler.ExponentialLR.step"]], "lrscheduler (class in torch.optim.lr_scheduler)": [[1834, "torch.optim.lr_scheduler.LRScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.lrscheduler method)": [[1834, "torch.optim.lr_scheduler.LRScheduler.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.lrscheduler method)": [[1834, "torch.optim.lr_scheduler.LRScheduler.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lrscheduler method)": [[1834, "torch.optim.lr_scheduler.LRScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lrscheduler method)": [[1834, "torch.optim.lr_scheduler.LRScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lrscheduler method)": [[1834, "torch.optim.lr_scheduler.LRScheduler.state_dict"]], "step() (torch.optim.lr_scheduler.lrscheduler method)": [[1834, "torch.optim.lr_scheduler.LRScheduler.step"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1835, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1835, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1835, "torch.optim.lr_scheduler.LambdaLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1835, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1835, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1835, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "step() (torch.optim.lr_scheduler.lambdalr method)": [[1835, "torch.optim.lr_scheduler.LambdaLR.step"]], "linearlr (class in torch.optim.lr_scheduler)": [[1836, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1836, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.linearlr method)": [[1836, "torch.optim.lr_scheduler.LinearLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1836, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1836, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1836, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "step() (torch.optim.lr_scheduler.linearlr method)": [[1836, "torch.optim.lr_scheduler.LinearLR.step"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1837, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1837, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1837, "torch.optim.lr_scheduler.MultiStepLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1837, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1837, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1837, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "step() (torch.optim.lr_scheduler.multisteplr method)": [[1837, "torch.optim.lr_scheduler.MultiStepLR.step"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1838, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1838, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1838, "torch.optim.lr_scheduler.MultiplicativeLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1838, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1838, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1838, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "step() (torch.optim.lr_scheduler.multiplicativelr method)": [[1838, "torch.optim.lr_scheduler.MultiplicativeLR.step"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1839, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1839, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1839, "torch.optim.lr_scheduler.OneCycleLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1839, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1839, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1839, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "step() (torch.optim.lr_scheduler.onecyclelr method)": [[1839, "torch.optim.lr_scheduler.OneCycleLR.step"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1840, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1840, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1840, "torch.optim.lr_scheduler.PolynomialLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1840, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1840, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1840, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "step() (torch.optim.lr_scheduler.polynomiallr method)": [[1840, "torch.optim.lr_scheduler.PolynomialLR.step"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1841, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "get_last_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1841, "torch.optim.lr_scheduler.ReduceLROnPlateau.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1841, "torch.optim.lr_scheduler.ReduceLROnPlateau.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.reducelronplateau method)": [[1841, "torch.optim.lr_scheduler.ReduceLROnPlateau.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1841, "torch.optim.lr_scheduler.ReduceLROnPlateau.print_lr"]], "step() (torch.optim.lr_scheduler.reducelronplateau method)": [[1841, "torch.optim.lr_scheduler.ReduceLROnPlateau.step"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1842, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1842, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1842, "torch.optim.lr_scheduler.SequentialLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1842, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1842, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1842, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "step() (torch.optim.lr_scheduler.sequentiallr method)": [[1842, "torch.optim.lr_scheduler.SequentialLR.step"]], "steplr (class in torch.optim.lr_scheduler)": [[1843, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1843, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.steplr method)": [[1843, "torch.optim.lr_scheduler.StepLR.get_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1843, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1843, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1843, "torch.optim.lr_scheduler.StepLR.state_dict"]], "step() (torch.optim.lr_scheduler.steplr method)": [[1843, "torch.optim.lr_scheduler.StepLR.step"]], "orgqr() (in module torch)": [[1844, "torch.orgqr"]], "ormqr() (in module torch)": [[1845, "torch.ormqr"]], "outer() (in module torch)": [[1846, "torch.outer"]], "pca_lowrank() (in module torch)": [[1847, "torch.pca_lowrank"]], "permute() (in module torch)": [[1848, "torch.permute"]], "pinverse() (in module torch)": [[1849, "torch.pinverse"]], "poisson() (in module torch)": [[1850, "torch.poisson"]], "polar() (in module torch)": [[1851, "torch.polar"]], "polygamma() (in module torch)": [[1852, "torch.polygamma"]], "positive() (in module torch)": [[1853, "torch.positive"]], "pow() (in module torch)": [[1854, "torch.pow"]], "prod() (in module torch)": [[1855, "torch.prod"]], "promote_types() (in module torch)": [[1856, "torch.promote_types"]], "qr() (in module torch)": [[1857, "torch.qr"]], "quantile() (in module torch)": [[1858, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1859, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1860, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1861, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1862, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1863, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1864, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1864, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1864, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1864, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1864, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1865, "torch.rad2deg"]], "rand() (in module torch)": [[1866, "torch.rand"]], "rand_like() (in module torch)": [[1867, "torch.rand_like"]], "randint() (in module torch)": [[1868, "torch.randint"]], "randint_like() (in module torch)": [[1869, "torch.randint_like"]], "randn() (in module torch)": [[1870, "torch.randn"]], "randn_like() (in module torch)": [[1871, "torch.randn_like"]], "randperm() (in module torch)": [[1872, "torch.randperm"]], "range() (in module torch)": [[1873, "torch.range"]], "ravel() (in module torch)": [[1874, "torch.ravel"]], "real() (in module torch)": [[1875, "torch.real"]], "reciprocal() (in module torch)": [[1876, "torch.reciprocal"]], "remainder() (in module torch)": [[1877, "torch.remainder"]], "renorm() (in module torch)": [[1878, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1879, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1880, "torch.reshape"]], "resolve_conj() (in module torch)": [[1881, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1882, "torch.resolve_neg"]], "result_type() (in module torch)": [[1883, "torch.result_type"]], "roll() (in module torch)": [[1884, "torch.roll"]], "rot90() (in module torch)": [[1885, "torch.rot90"]], "round() (in module torch)": [[1886, "torch.round"]], "row_stack() (in module torch)": [[1887, "torch.row_stack"]], "rsqrt() (in module torch)": [[1888, "torch.rsqrt"]], "save() (in module torch)": [[1889, "torch.save"]], "scatter() (in module torch)": [[1890, "torch.scatter"]], "scatter_add() (in module torch)": [[1891, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1892, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1893, "torch.searchsorted"]], "seed() (in module torch)": [[1894, "torch.seed"]], "select() (in module torch)": [[1895, "torch.select"]], "select_scatter() (in module torch)": [[1896, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1897, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1898, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1899, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1900, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1901, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1902, "torch.set_flush_denormal"]], "set_num_interop_threads() (in module torch)": [[1903, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1904, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1905, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1906, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1907, "torch.set_warn_always"]], "sgn() (in module torch)": [[1908, "torch.sgn"]], "sigmoid() (in module torch)": [[1909, "torch.sigmoid"]], "sign() (in module torch)": [[1910, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1911, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1912, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1913, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1914, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1915, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1916, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1917, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1918, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1919, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1920, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1921, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1922, "torch.signbit"]], "sin() (in module torch)": [[1923, "torch.sin"]], "sinc() (in module torch)": [[1924, "torch.sinc"]], "sinh() (in module torch)": [[1925, "torch.sinh"]], "slice_scatter() (in module torch)": [[1926, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1927, "torch.slogdet"]], "smm() (in module torch)": [[1928, "torch.smm"]], "softmax() (in module torch)": [[1929, "torch.softmax"]], "sort() (in module torch)": [[1930, "torch.sort"]], "addmm() (in module torch.sparse)": [[1931, "torch.sparse.addmm"]], "as_sparse_gradcheck() (in module torch.sparse)": [[1932, "torch.sparse.as_sparse_gradcheck"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1933, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1933, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1933, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1933, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1934, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1935, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1936, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1937, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1938, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1939, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1940, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1941, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1942, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1943, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1944, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1945, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1946, "torch.split"]], "sqrt() (in module torch)": [[1947, "torch.sqrt"]], "square() (in module torch)": [[1948, "torch.square"]], "squeeze() (in module torch)": [[1949, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1950, "torch.sspaddmm"]], "stack() (in module torch)": [[1951, "torch.stack"]], "std() (in module torch)": [[1952, "torch.std"]], "std_mean() (in module torch)": [[1953, "torch.std_mean"]], "stft() (in module torch)": [[1954, "torch.stft"]], "sub() (in module torch)": [[1955, "torch.sub"]], "subtract() (in module torch)": [[1956, "torch.subtract"]], "sum() (in module torch)": [[1957, "torch.sum"]], "svd() (in module torch)": [[1958, "torch.svd"]], "svd_lowrank() (in module torch)": [[1959, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1960, "torch.swapaxes"]], "swapdims() (in module torch)": [[1961, "torch.swapdims"]], "sym_float() (in module torch)": [[1962, "torch.sym_float"]], "sym_int() (in module torch)": [[1963, "torch.sym_int"]], "sym_ite() (in module torch)": [[1964, "torch.sym_ite"]], "sym_max() (in module torch)": [[1965, "torch.sym_max"]], "sym_min() (in module torch)": [[1966, "torch.sym_min"]], "sym_not() (in module torch)": [[1967, "torch.sym_not"]], "t() (in module torch)": [[1968, "torch.t"]], "take() (in module torch)": [[1969, "torch.take"]], "take_along_dim() (in module torch)": [[1970, "torch.take_along_dim"]], "tan() (in module torch)": [[1971, "torch.tan"]], "tanh() (in module torch)": [[1972, "torch.tanh"]], "tensor() (in module torch)": [[1973, "torch.tensor"]], "tensor_split() (in module torch)": [[1974, "torch.tensor_split"]], "tensordot() (in module torch)": [[1975, "torch.tensordot"]], "tile() (in module torch)": [[1976, "torch.tile"]], "topk() (in module torch)": [[1977, "torch.topk"]], "trace() (in module torch)": [[1978, "torch.trace"]], "transpose() (in module torch)": [[1979, "torch.transpose"]], "trapezoid() (in module torch)": [[1980, "torch.trapezoid"]], "trapz() (in module torch)": [[1981, "torch.trapz"]], "triangular_solve() (in module torch)": [[1982, "torch.triangular_solve"]], "tril() (in module torch)": [[1983, "torch.tril"]], "tril_indices() (in module torch)": [[1984, "torch.tril_indices"]], "triu() (in module torch)": [[1985, "torch.triu"]], "triu_indices() (in module torch)": [[1986, "torch.triu_indices"]], "true_divide() (in module torch)": [[1987, "torch.true_divide"]], "trunc() (in module torch)": [[1988, "torch.trunc"]], "unbind() (in module torch)": [[1989, "torch.unbind"]], "unflatten() (in module torch)": [[1990, "torch.unflatten"]], "unique() (in module torch)": [[1991, "torch.unique"]], "unique_consecutive() (in module torch)": [[1992, "torch.unique_consecutive"]], "unravel_index() (in module torch)": [[1993, "torch.unravel_index"]], "unsqueeze() (in module torch)": [[1994, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1995, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1996, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1997, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1998, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1999, "torch.utils.set_module"]], "swap_tensors() (in module torch.utils)": [[2000, "torch.utils.swap_tensors"]], "vander() (in module torch)": [[2001, "torch.vander"]], "var() (in module torch)": [[2002, "torch.var"]], "var_mean() (in module torch)": [[2003, "torch.var_mean"]], "vdot() (in module torch)": [[2004, "torch.vdot"]], "view_as_complex() (in module torch)": [[2005, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[2006, "torch.view_as_real"]], "vmap() (in module torch)": [[2007, "torch.vmap"]], "vsplit() (in module torch)": [[2008, "torch.vsplit"]], "vstack() (in module torch)": [[2009, "torch.vstack"]], "where() (in module torch)": [[2010, "torch.where"]], "xlogy() (in module torch)": [[2011, "torch.xlogy"]], "event (class in torch.xpu)": [[2012, "torch.xpu.Event"]], "elapsed_time() (torch.xpu.event method)": [[2012, "torch.xpu.Event.elapsed_time"]], "query() (torch.xpu.event method)": [[2012, "torch.xpu.Event.query"]], "record() (torch.xpu.event method)": [[2012, "torch.xpu.Event.record"]], "synchronize() (torch.xpu.event method)": [[2012, "torch.xpu.Event.synchronize"]], "wait() (torch.xpu.event method)": [[2012, "torch.xpu.Event.wait"]], "stream (class in torch.xpu)": [[2013, "torch.xpu.Stream"]], "query() (torch.xpu.stream method)": [[2013, "torch.xpu.Stream.query"]], "record_event() (torch.xpu.stream method)": [[2013, "torch.xpu.Stream.record_event"]], "synchronize() (torch.xpu.stream method)": [[2013, "torch.xpu.Stream.synchronize"]], "wait_event() (torch.xpu.stream method)": [[2013, "torch.xpu.Stream.wait_event"]], "wait_stream() (torch.xpu.stream method)": [[2013, "torch.xpu.Stream.wait_stream"]], "streamcontext (class in torch.xpu)": [[2014, "torch.xpu.StreamContext"]], "current_device() (in module torch.xpu)": [[2015, "torch.xpu.current_device"]], "current_stream() (in module torch.xpu)": [[2016, "torch.xpu.current_stream"]], "device (class in torch.xpu)": [[2017, "torch.xpu.device"]], "device_count() (in module torch.xpu)": [[2018, "torch.xpu.device_count"]], "device_of (class in torch.xpu)": [[2019, "torch.xpu.device_of"]], "empty_cache() (in module torch.xpu)": [[2020, "torch.xpu.empty_cache"]], "get_device_capability() (in module torch.xpu)": [[2021, "torch.xpu.get_device_capability"]], "get_device_name() (in module torch.xpu)": [[2022, "torch.xpu.get_device_name"]], "get_device_properties() (in module torch.xpu)": [[2023, "torch.xpu.get_device_properties"]], "get_rng_state() (in module torch.xpu)": [[2024, "torch.xpu.get_rng_state"]], "get_rng_state_all() (in module torch.xpu)": [[2025, "torch.xpu.get_rng_state_all"]], "init() (in module torch.xpu)": [[2026, "torch.xpu.init"]], "initial_seed() (in module torch.xpu)": [[2027, "torch.xpu.initial_seed"]], "is_available() (in module torch.xpu)": [[2028, "torch.xpu.is_available"]], "is_initialized() (in module torch.xpu)": [[2029, "torch.xpu.is_initialized"]], "manual_seed() (in module torch.xpu)": [[2030, "torch.xpu.manual_seed"]], "manual_seed_all() (in module torch.xpu)": [[2031, "torch.xpu.manual_seed_all"]], "seed() (in module torch.xpu)": [[2032, "torch.xpu.seed"]], "seed_all() (in module torch.xpu)": [[2033, "torch.xpu.seed_all"]], "set_device() (in module torch.xpu)": [[2034, "torch.xpu.set_device"]], "set_rng_state() (in module torch.xpu)": [[2035, "torch.xpu.set_rng_state"]], "set_rng_state_all() (in module torch.xpu)": [[2036, "torch.xpu.set_rng_state_all"]], "set_stream() (in module torch.xpu)": [[2037, "torch.xpu.set_stream"]], "stream() (in module torch.xpu)": [[2038, "torch.xpu.stream"]], "synchronize() (in module torch.xpu)": [[2039, "torch.xpu.synchronize"]], "zeros() (in module torch)": [[2040, "torch.zeros"]], "zeros_like() (in module torch)": [[2041, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[2042, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[2042, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[2042, "torch.hub.help"]], "list() (in module torch.hub)": [[2042, "torch.hub.list"]], "load() (in module torch.hub)": [[2042, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[2042, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[2042, "torch.hub.set_dir"]], "torch.hub": [[2042, "module-torch.hub"]], "pytorch_jit": [[2044, "envvar-PYTORCH_JIT"]], "environment variable": [[2044, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[2044, "torch.jit.export"]], "torch.jit": [[2044, "module-torch.jit"]], "torch.jit.annotations": [[2044, "module-torch.jit.annotations"]], "torch.jit.frontend": [[2044, "module-torch.jit.frontend"]], "torch.jit.generate_bytecode": [[2044, "module-torch.jit.generate_bytecode"]], "torch.jit.mobile": [[2044, "module-torch.jit.mobile"]], "torch.jit.quantized": [[2044, "module-torch.jit.quantized"]], "torch.jit.supported_ops": [[2045, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[2046, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[2046, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[2049, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[2050, "module-torch.utils.jit"]], "customopdef (class in torch._library.custom_ops)": [[2051, "torch._library.custom_ops.CustomOpDef"]], "library (class in torch.library)": [[2051, "torch.library.Library"]], "custom_op() (in module torch.library)": [[2051, "torch.library.custom_op"]], "define() (in module torch.library)": [[2051, "torch.library.define"]], "define() (torch.library.library method)": [[2051, "torch.library.Library.define"]], "fallback() (torch.library.library method)": [[2051, "torch.library.Library.fallback"]], "fallthrough_kernel() (in module torch.library)": [[2051, "torch.library.fallthrough_kernel"]], "get_ctx() (in module torch.library)": [[2051, "torch.library.get_ctx"]], "impl() (in module torch.library)": [[2051, "torch.library.impl"]], "impl() (torch.library.library method)": [[2051, "torch.library.Library.impl"]], "impl_abstract() (in module torch.library)": [[2051, "torch.library.impl_abstract"]], "infer_schema() (in module torch.library)": [[2051, "torch.library.infer_schema"]], "opcheck() (in module torch.library)": [[2051, "torch.library.opcheck"]], "register_autograd() (in module torch.library)": [[2051, "torch.library.register_autograd"]], "register_fake() (in module torch.library)": [[2051, "torch.library.register_fake"]], "register_kernel() (in module torch.library)": [[2051, "torch.library.register_kernel"]], "register_torch_dispatch() (in module torch.library)": [[2051, "torch.library.register_torch_dispatch"]], "register_vmap() (in module torch.library)": [[2051, "torch.library.register_vmap"]], "set_kernel_enabled() (torch._library.custom_ops.customopdef method)": [[2051, "torch._library.custom_ops.CustomOpDef.set_kernel_enabled"]], "torch.library": [[2051, "module-torch.library"]], "torch.linalg": [[2052, "module-torch.linalg"]], "torch._logging": [[2053, "module-torch._logging"]], "torch.masked": [[2054, "module-torch.masked"]], "torch.masked.maskedtensor": [[2054, "module-torch.masked.maskedtensor"]], "torch.masked.maskedtensor.binary": [[2054, "module-torch.masked.maskedtensor.binary"]], "torch.masked.maskedtensor.core": [[2054, "module-torch.masked.maskedtensor.core"]], "torch.masked.maskedtensor.creation": [[2054, "module-torch.masked.maskedtensor.creation"]], "torch.masked.maskedtensor.passthrough": [[2054, "module-torch.masked.maskedtensor.passthrough"]], "torch.masked.maskedtensor.reductions": [[2054, "module-torch.masked.maskedtensor.reductions"]], "torch.masked.maskedtensor.unary": [[2054, "module-torch.masked.maskedtensor.unary"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[2057, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[2058, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[2058, "module-torch.utils.model_zoo"]], "moduletracker (class in torch.utils.module_tracker)": [[2059, "torch.utils.module_tracker.ModuleTracker"]], "torch.utils.module_tracker": [[2059, "module-torch.utils.module_tracker"]], "aggregation (class in torch.monitor)": [[2060, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[2060, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[2060, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[2060, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[2060, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[2060, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[2060, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[2060, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[2060, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[2060, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[2060, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[2060, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[2060, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[2060, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[2060, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[2060, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[2060, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[2060, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[2060, "torch.monitor.Event.timestamp"]], "torch.monitor": [[2060, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[2060, "torch.monitor.unregister_event_handler"]], "torch.mps": [[2061, "module-torch.mps"]], "torch.mps.event": [[2061, "module-torch.mps.event"]], "torch.mps.profiler": [[2061, "module-torch.mps.profiler"]], "torch.mtia": [[2063, "module-torch.mtia"]], "spawncontext (class in torch.multiprocessing)": [[2064, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[2064, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[2064, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[2064, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[2064, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing.spawn)": [[2064, "torch.multiprocessing.spawn.spawn"]], "torch.multiprocessing": [[2064, "module-torch.multiprocessing"]], "torch.multiprocessing.pool": [[2064, "module-torch.multiprocessing.pool"]], "torch.multiprocessing.queue": [[2064, "module-torch.multiprocessing.queue"]], "torch.multiprocessing.reductions": [[2064, "module-torch.multiprocessing.reductions"]], "torch.multiprocessing.spawn": [[2064, "module-torch.multiprocessing.spawn"]], "align_as() (torch.tensor method)": [[2066, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[2066, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[2066, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[2066, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[2066, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[2066, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[2067, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[2067, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[2067, "torch.nested.to_padded_tensor"]], "torch.nested": [[2067, "module-torch.nested"]], "torch.nn": [[2068, "module-torch.nn"]], "torch.nn.backends": [[2068, "module-torch.nn.backends"]], "torch.nn.backends.thnn": [[2068, "module-torch.nn.backends.thnn"]], "torch.nn.common_types": [[2068, "module-torch.nn.common_types"]], "torch.nn.cpp": [[2068, "module-torch.nn.cpp"]], "torch.nn.functional": [[2068, "module-torch.nn.functional"]], "torch.nn.grad": [[2068, "module-torch.nn.grad"]], "torch.nn.init": [[2068, "module-torch.nn.init"]], "torch.nn.modules": [[2068, "module-torch.nn.modules"]], "torch.nn.modules.activation": [[2068, "module-torch.nn.modules.activation"]], "torch.nn.modules.adaptive": [[2068, "module-torch.nn.modules.adaptive"]], "torch.nn.modules.batchnorm": [[2068, "module-torch.nn.modules.batchnorm"]], "torch.nn.modules.channelshuffle": [[2068, "module-torch.nn.modules.channelshuffle"]], "torch.nn.modules.container": [[2068, "module-torch.nn.modules.container"]], "torch.nn.modules.conv": [[2068, "module-torch.nn.modules.conv"]], "torch.nn.modules.distance": [[2068, "module-torch.nn.modules.distance"]], "torch.nn.modules.dropout": [[2068, "module-torch.nn.modules.dropout"]], "torch.nn.modules.flatten": [[2068, "module-torch.nn.modules.flatten"]], "torch.nn.modules.fold": [[2068, "module-torch.nn.modules.fold"]], "torch.nn.modules.instancenorm": [[2068, "module-torch.nn.modules.instancenorm"]], "torch.nn.modules.lazy": [[2068, "module-torch.nn.modules.lazy"]], "torch.nn.modules.linear": [[2068, "module-torch.nn.modules.linear"]], "torch.nn.modules.loss": [[2068, "module-torch.nn.modules.loss"]], "torch.nn.modules.module": [[2068, "module-torch.nn.modules.module"]], "torch.nn.modules.normalization": [[2068, "module-torch.nn.modules.normalization"]], "torch.nn.modules.padding": [[2068, "module-torch.nn.modules.padding"]], "torch.nn.modules.pixelshuffle": [[2068, "module-torch.nn.modules.pixelshuffle"]], "torch.nn.modules.pooling": [[2068, "module-torch.nn.modules.pooling"]], "torch.nn.modules.rnn": [[2068, "module-torch.nn.modules.rnn"]], "torch.nn.modules.sparse": [[2068, "module-torch.nn.modules.sparse"]], "torch.nn.modules.transformer": [[2068, "module-torch.nn.modules.transformer"]], "torch.nn.modules.upsampling": [[2068, "module-torch.nn.modules.upsampling"]], "torch.nn.modules.utils": [[2068, "module-torch.nn.modules.utils"]], "torch.nn.parallel": [[2068, "module-torch.nn.parallel"]], "torch.nn.parallel.comm": [[2068, "module-torch.nn.parallel.comm"]], "torch.nn.parallel.distributed": [[2068, "module-torch.nn.parallel.distributed"]], "torch.nn.parallel.parallel_apply": [[2068, "module-torch.nn.parallel.parallel_apply"]], "torch.nn.parallel.replicate": [[2068, "module-torch.nn.parallel.replicate"]], "torch.nn.parallel.scatter_gather": [[2068, "module-torch.nn.parallel.scatter_gather"]], "torch.nn.parameter": [[2068, "module-torch.nn.parameter"]], "torch.nn.utils": [[2068, "module-torch.nn.utils"]], "torch.nn.utils.clip_grad": [[2068, "module-torch.nn.utils.clip_grad"]], "torch.nn.utils.convert_parameters": [[2068, "module-torch.nn.utils.convert_parameters"]], "torch.nn.utils.fusion": [[2068, "module-torch.nn.utils.fusion"]], "torch.nn.utils.init": [[2068, "module-torch.nn.utils.init"]], "torch.nn.utils.memory_format": [[2068, "module-torch.nn.utils.memory_format"]], "torch.nn.utils.parametrizations": [[2068, "module-torch.nn.utils.parametrizations"]], "torch.nn.utils.parametrize": [[2068, "module-torch.nn.utils.parametrize"]], "torch.nn.utils.prune": [[2068, "module-torch.nn.utils.prune"]], "torch.nn.utils.rnn": [[2068, "module-torch.nn.utils.rnn"]], "torch.nn.utils.stateless": [[2068, "module-torch.nn.utils.stateless"]], "torch.nn.attention": [[2069, "module-torch.nn.attention"]], "torch.nn.attention.bias": [[2070, "module-torch.nn.attention.bias"]], "block_size (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.BLOCK_SIZE"]], "blockmask (class in torch.nn.attention.flex_attention)": [[2071, "torch.nn.attention.flex_attention.BlockMask"]], "and_masks() (in module torch.nn.attention.flex_attention)": [[2071, "torch.nn.attention.flex_attention.and_masks"]], "as_tuple() (torch.nn.attention.flex_attention.blockmask method)": [[2071, "torch.nn.attention.flex_attention.BlockMask.as_tuple"]], "create_block_mask() (in module torch.nn.attention.flex_attention)": [[2071, "torch.nn.attention.flex_attention.create_block_mask"]], "create_mask() (in module torch.nn.attention.flex_attention)": [[2071, "torch.nn.attention.flex_attention.create_mask"]], "flex_attention() (in module torch.nn.attention.flex_attention)": [[2071, "torch.nn.attention.flex_attention.flex_attention"]], "from_kv_blocks() (torch.nn.attention.flex_attention.blockmask class method)": [[2071, "torch.nn.attention.flex_attention.BlockMask.from_kv_blocks"]], "full_kv_indices (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.full_kv_indices"]], "full_kv_num_blocks (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.full_kv_num_blocks"]], "full_q_indices (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.full_q_indices"]], "full_q_num_blocks (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.full_q_num_blocks"]], "kv_indices (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.kv_indices"]], "kv_num_blocks (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.kv_num_blocks"]], "mask_mod (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.mask_mod"]], "noop_mask() (in module torch.nn.attention.flex_attention)": [[2071, "torch.nn.attention.flex_attention.noop_mask"]], "numel() (torch.nn.attention.flex_attention.blockmask method)": [[2071, "torch.nn.attention.flex_attention.BlockMask.numel"]], "or_masks() (in module torch.nn.attention.flex_attention)": [[2071, "torch.nn.attention.flex_attention.or_masks"]], "q_indices (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.q_indices"]], "q_num_blocks (torch.nn.attention.flex_attention.blockmask attribute)": [[2071, "torch.nn.attention.flex_attention.BlockMask.q_num_blocks"]], "shape (torch.nn.attention.flex_attention.blockmask property)": [[2071, "torch.nn.attention.flex_attention.BlockMask.shape"]], "sparsity() (torch.nn.attention.flex_attention.blockmask method)": [[2071, "torch.nn.attention.flex_attention.BlockMask.sparsity"]], "to() (torch.nn.attention.flex_attention.blockmask method)": [[2071, "torch.nn.attention.flex_attention.BlockMask.to"]], "to_dense() (torch.nn.attention.flex_attention.blockmask method)": [[2071, "torch.nn.attention.flex_attention.BlockMask.to_dense"]], "to_string() (torch.nn.attention.flex_attention.blockmask method)": [[2071, "torch.nn.attention.flex_attention.BlockMask.to_string"]], "torch.nn.attention.flex_attention": [[2071, "module-torch.nn.attention.flex_attention"]], "calculate_gain() (in module torch.nn.init)": [[2073, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[2073, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[2073, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[2073, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[2073, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[2073, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[2073, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[2073, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[2073, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[2073, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[2073, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[2073, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[2073, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[2073, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[2073, "torch.nn.init.zeros_"]], "add_safe_globals() (in module torch.serialization)": [[2094, "torch.serialization.add_safe_globals"]], "clear_safe_globals() (in module torch.serialization)": [[2094, "torch.serialization.clear_safe_globals"]], "get_default_load_endianness() (in module torch.serialization)": [[2094, "torch.serialization.get_default_load_endianness"]], "get_default_mmap_options() (in module torch.serialization)": [[2094, "torch.serialization.get_default_mmap_options"]], "get_safe_globals() (in module torch.serialization)": [[2094, "torch.serialization.get_safe_globals"]], "register_package() (in module torch.serialization)": [[2094, "torch.serialization.register_package"]], "safe_globals (class in torch.serialization)": [[2094, "torch.serialization.safe_globals"]], "set_default_load_endianness() (in module torch.serialization)": [[2094, "torch.serialization.set_default_load_endianness"]], "set_default_mmap_options() (in module torch.serialization)": [[2094, "torch.serialization.set_default_mmap_options"]], "torch.onnx.errors": [[2096, "module-torch.onnx.errors"]], "torch.onnx.operators": [[2096, "module-torch.onnx.operators"]], "torch.onnx.symbolic_caffe2": [[2096, "module-torch.onnx.symbolic_caffe2"]], "torch.onnx.symbolic_helper": [[2096, "module-torch.onnx.symbolic_helper"]], "torch.onnx.symbolic_opset10": [[2096, "module-torch.onnx.symbolic_opset10"]], "torch.onnx.symbolic_opset11": [[2096, "module-torch.onnx.symbolic_opset11"]], "torch.onnx.symbolic_opset12": [[2096, "module-torch.onnx.symbolic_opset12"]], "torch.onnx.symbolic_opset13": [[2096, "module-torch.onnx.symbolic_opset13"]], "torch.onnx.symbolic_opset14": [[2096, "module-torch.onnx.symbolic_opset14"]], "torch.onnx.symbolic_opset15": [[2096, "module-torch.onnx.symbolic_opset15"]], "torch.onnx.symbolic_opset16": [[2096, "module-torch.onnx.symbolic_opset16"]], "torch.onnx.symbolic_opset17": [[2096, "module-torch.onnx.symbolic_opset17"]], "torch.onnx.symbolic_opset18": [[2096, "module-torch.onnx.symbolic_opset18"]], "torch.onnx.symbolic_opset19": [[2096, "module-torch.onnx.symbolic_opset19"]], "torch.onnx.symbolic_opset20": [[2096, "module-torch.onnx.symbolic_opset20"]], "torch.onnx.symbolic_opset7": [[2096, "module-torch.onnx.symbolic_opset7"]], "torch.onnx.symbolic_opset8": [[2096, "module-torch.onnx.symbolic_opset8"]], "torch.onnx.symbolic_opset9": [[2096, "module-torch.onnx.symbolic_opset9"]], "torch.onnx.utils": [[2096, "module-torch.onnx.utils"]], "torch.onnx.verification": [[2096, "module-torch.onnx.verification"]], "diagnosticoptions (class in torch.onnx)": [[2097, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[2097, "torch.onnx.ExportOptions"]], "invalidexportoptionserror (class in torch.onnx)": [[2097, "torch.onnx.InvalidExportOptionsError"]], "onnxprogram (class in torch.onnx)": [[2097, "torch.onnx.ONNXProgram"]], "onnxprogramserializer (class in torch.onnx)": [[2097, "torch.onnx.ONNXProgramSerializer"]], "onnxruntimeoptions (class in torch.onnx)": [[2097, "torch.onnx.ONNXRuntimeOptions"]], "onnxexportererror (class in torch.onnx)": [[2097, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[2097, "torch.onnx.OnnxRegistry"]], "adapt_torch_inputs_to_onnx() (torch.onnx.onnxprogram method)": [[2097, "torch.onnx.ONNXProgram.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.onnxprogram method)": [[2097, "torch.onnx.ONNXProgram.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.onnxprogram property)": [[2097, "torch.onnx.ONNXProgram.diagnostic_context"]], "dynamo_export() (in module torch.onnx)": [[2097, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[2097, "torch.onnx.enable_fake_mode"]], "fake_context (torch.onnx.onnxprogram property)": [[2097, "torch.onnx.ONNXProgram.fake_context"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[2097, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[2097, "torch.onnx.OnnxRegistry.is_registered_op"]], "model_proto (torch.onnx.onnxprogram property)": [[2097, "torch.onnx.ONNXProgram.model_proto"]], "model_signature (torch.onnx.onnxprogram property)": [[2097, "torch.onnx.ONNXProgram.model_signature"]], "opset_version (torch.onnx.onnxregistry property)": [[2097, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[2097, "torch.onnx.OnnxRegistry.register_op"]], "save() (torch.onnx.onnxprogram method)": [[2097, "torch.onnx.ONNXProgram.save"]], "save_diagnostics() (torch.onnx.onnxprogram method)": [[2097, "torch.onnx.ONNXProgram.save_diagnostics"]], "serialize() (torch.onnx.onnxprogramserializer method)": [[2097, "torch.onnx.ONNXProgramSerializer.serialize"]], "is_onnxrt_backend_supported() (in module torch.onnx)": [[2098, "torch.onnx.is_onnxrt_backend_supported"]], "disable_log() (in module torch.onnx)": [[2099, "torch.onnx.disable_log"]], "enable_log() (in module torch.onnx)": [[2099, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[2099, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[2099, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[2099, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[2099, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[2099, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[2099, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[2099, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[2099, "torch.onnx.unregister_custom_op_symbolic"]], "optimizer (class in torch.optim)": [[2101, "torch.optim.Optimizer"]], "torch.optim": [[2101, "module-torch.optim"]], "torch.optim.adadelta": [[2101, "module-torch.optim.adadelta"]], "torch.optim.adagrad": [[2101, "module-torch.optim.adagrad"]], "torch.optim.adam": [[2101, "module-torch.optim.adam"]], "torch.optim.adamax": [[2101, "module-torch.optim.adamax"]], "torch.optim.adamw": [[2101, "module-torch.optim.adamw"]], "torch.optim.asgd": [[2101, "module-torch.optim.asgd"]], "torch.optim.lbfgs": [[2101, "module-torch.optim.lbfgs"]], "torch.optim.lr_scheduler": [[2101, "module-torch.optim.lr_scheduler"]], "torch.optim.nadam": [[2101, "module-torch.optim.nadam"]], "torch.optim.optimizer": [[2101, "module-torch.optim.optimizer"]], "torch.optim.radam": [[2101, "module-torch.optim.radam"]], "torch.optim.rmsprop": [[2101, "module-torch.optim.rmsprop"]], "torch.optim.rprop": [[2101, "module-torch.optim.rprop"]], "torch.optim.sgd": [[2101, "module-torch.optim.sgd"]], "torch.optim.sparse_adam": [[2101, "module-torch.optim.sparse_adam"]], "torch.optim.swa_utils": [[2101, "module-torch.optim.swa_utils"]], "directory (class in torch.package)": [[2102, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[2102, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[2102, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[2102, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[2102, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[2102, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[2102, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[2102, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[2102, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[2102, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[2102, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[2102, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[2102, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[2102, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[2102, "torch.package.PackageExporter.save_text"]], "torch.package": [[2102, "module-torch.package"]], "torch.package.analyze": [[2102, "module-torch.package.analyze"]], "torch.package.analyze.find_first_use_of_broken_modules": [[2102, "module-torch.package.analyze.find_first_use_of_broken_modules"]], "torch.package.analyze.is_from_package": [[2102, "module-torch.package.analyze.is_from_package"]], "torch.package.analyze.trace_dependencies": [[2102, "module-torch.package.analyze.trace_dependencies"]], "torch.package.file_structure_representation": [[2102, "module-torch.package.file_structure_representation"]], "torch.package.find_file_dependencies": [[2102, "module-torch.package.find_file_dependencies"]], "torch.package.glob_group": [[2102, "module-torch.package.glob_group"]], "torch.package.importer": [[2102, "module-torch.package.importer"]], "torch.package.package_exporter": [[2102, "module-torch.package.package_exporter"]], "torch.package.package_importer": [[2102, "module-torch.package.package_importer"]], "profileraction (class in torch.profiler)": [[2103, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[2103, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[2103, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[2103, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[2103, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[2103, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[2103, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[2103, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[2103, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[2103, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[2103, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[2103, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[2103, "torch.profiler.ProfilerActivity.name"]], "preset_metadata_json() (torch.profiler._kinetoprofile method)": [[2103, "torch.profiler._KinetoProfile.preset_metadata_json"]], "profile (class in torch.profiler)": [[2103, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[2103, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[2103, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[2103, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[2103, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[2103, "torch.profiler.tensorboard_trace_handler"]], "toggle_collection_dynamic() (torch.profiler._kinetoprofile method)": [[2103, "torch.profiler._KinetoProfile.toggle_collection_dynamic"]], "torch.profiler": [[2103, "module-torch.profiler"]], "torch.profiler.itt": [[2103, "module-torch.profiler.itt"]], "torch.profiler.profiler": [[2103, "module-torch.profiler.profiler"]], "torch.profiler.python_tracer": [[2103, "module-torch.profiler.python_tracer"]], "torch.ao": [[2104, "module-torch.ao"]], "torch.ao.nn": [[2104, "module-torch.ao.nn"]], "torch.ao.nn.intrinsic.modules.fused": [[2104, "module-torch.ao.nn.intrinsic.modules.fused"]], "torch.ao.nn.intrinsic.qat.modules.conv_fused": [[2104, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_fused": [[2104, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_relu": [[2104, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2104, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules.bn_relu": [[2104, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"]], "torch.ao.nn.intrinsic.quantized.modules.conv_add": [[2104, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"]], "torch.ao.nn.intrinsic.quantized.modules.conv_relu": [[2104, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"]], "torch.ao.nn.intrinsic.quantized.modules.linear_relu": [[2104, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"]], "torch.ao.nn.qat.dynamic.modules.linear": [[2104, "module-torch.ao.nn.qat.dynamic.modules.linear"]], "torch.ao.nn.qat.modules.conv": [[2104, "module-torch.ao.nn.qat.modules.conv"]], "torch.ao.nn.qat.modules.embedding_ops": [[2104, "module-torch.ao.nn.qat.modules.embedding_ops"]], "torch.ao.nn.qat.modules.linear": [[2104, "module-torch.ao.nn.qat.modules.linear"]], "torch.ao.nn.quantizable": [[2104, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[2104, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantizable.modules.activation": [[2104, "module-torch.ao.nn.quantizable.modules.activation"]], "torch.ao.nn.quantizable.modules.rnn": [[2104, "module-torch.ao.nn.quantizable.modules.rnn"]], "torch.ao.nn.quantized": [[2104, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.dynamic.modules.conv": [[2104, "module-torch.ao.nn.quantized.dynamic.modules.conv"]], "torch.ao.nn.quantized.dynamic.modules.linear": [[2104, "module-torch.ao.nn.quantized.dynamic.modules.linear"]], "torch.ao.nn.quantized.dynamic.modules.rnn": [[2104, "module-torch.ao.nn.quantized.dynamic.modules.rnn"]], "torch.ao.nn.quantized.modules.activation": [[2104, "module-torch.ao.nn.quantized.modules.activation"]], "torch.ao.nn.quantized.modules.batchnorm": [[2104, "module-torch.ao.nn.quantized.modules.batchnorm"]], "torch.ao.nn.quantized.modules.conv": [[2104, "module-torch.ao.nn.quantized.modules.conv"]], "torch.ao.nn.quantized.modules.dropout": [[2104, "module-torch.ao.nn.quantized.modules.dropout"]], "torch.ao.nn.quantized.modules.embedding_ops": [[2104, "module-torch.ao.nn.quantized.modules.embedding_ops"]], "torch.ao.nn.quantized.modules.functional_modules": [[2104, "module-torch.ao.nn.quantized.modules.functional_modules"]], "torch.ao.nn.quantized.modules.linear": [[2104, "module-torch.ao.nn.quantized.modules.linear"]], "torch.ao.nn.quantized.modules.normalization": [[2104, "module-torch.ao.nn.quantized.modules.normalization"]], "torch.ao.nn.quantized.modules.rnn": [[2104, "module-torch.ao.nn.quantized.modules.rnn"]], "torch.ao.nn.quantized.modules.utils": [[2104, "module-torch.ao.nn.quantized.modules.utils"]], "torch.ao.nn.quantized.reference": [[2104, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[2104, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.quantized.reference.modules.conv": [[2104, "module-torch.ao.nn.quantized.reference.modules.conv"]], "torch.ao.nn.quantized.reference.modules.linear": [[2104, "module-torch.ao.nn.quantized.reference.modules.linear"]], "torch.ao.nn.quantized.reference.modules.rnn": [[2104, "module-torch.ao.nn.quantized.reference.modules.rnn"]], "torch.ao.nn.quantized.reference.modules.sparse": [[2104, "module-torch.ao.nn.quantized.reference.modules.sparse"]], "torch.ao.nn.quantized.reference.modules.utils": [[2104, "module-torch.ao.nn.quantized.reference.modules.utils"]], "torch.ao.nn.sparse": [[2104, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[2104, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[2104, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.nn.sparse.quantized.dynamic.linear": [[2104, "module-torch.ao.nn.sparse.quantized.dynamic.linear"]], "torch.ao.nn.sparse.quantized.linear": [[2104, "module-torch.ao.nn.sparse.quantized.linear"]], "torch.ao.nn.sparse.quantized.utils": [[2104, "module-torch.ao.nn.sparse.quantized.utils"]], "torch.ao.ns": [[2104, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[2104, "module-torch.ao.ns.fx"]], "torch.ao.ns.fx.graph_matcher": [[2104, "module-torch.ao.ns.fx.graph_matcher"]], "torch.ao.ns.fx.graph_passes": [[2104, "module-torch.ao.ns.fx.graph_passes"]], "torch.ao.ns.fx.mappings": [[2104, "module-torch.ao.ns.fx.mappings"]], "torch.ao.ns.fx.n_shadows_utils": [[2104, "module-torch.ao.ns.fx.n_shadows_utils"]], "torch.ao.ns.fx.ns_types": [[2104, "module-torch.ao.ns.fx.ns_types"]], "torch.ao.ns.fx.pattern_utils": [[2104, "module-torch.ao.ns.fx.pattern_utils"]], "torch.ao.ns.fx.qconfig_multi_mapping": [[2104, "module-torch.ao.ns.fx.qconfig_multi_mapping"]], "torch.ao.ns.fx.utils": [[2104, "module-torch.ao.ns.fx.utils"]], "torch.ao.ns.fx.weight_utils": [[2104, "module-torch.ao.ns.fx.weight_utils"]], "torch.ao.pruning": [[2104, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[2104, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.scheduler.base_scheduler": [[2104, "module-torch.ao.pruning.scheduler.base_scheduler"]], "torch.ao.pruning.scheduler.cubic_scheduler": [[2104, "module-torch.ao.pruning.scheduler.cubic_scheduler"]], "torch.ao.pruning.scheduler.lambda_scheduler": [[2104, "module-torch.ao.pruning.scheduler.lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2104, "module-torch.ao.pruning.sparsifier"]], "torch.ao.pruning.sparsifier.base_sparsifier": [[2104, "module-torch.ao.pruning.sparsifier.base_sparsifier"]], "torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier": [[2104, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"]], "torch.ao.pruning.sparsifier.utils": [[2104, "module-torch.ao.pruning.sparsifier.utils"]], "torch.ao.pruning.sparsifier.weight_norm_sparsifier": [[2104, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"]], "torch.ao.quantization": [[2104, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[2104, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.backend_config.backend_config": [[2104, "module-torch.ao.quantization.backend_config.backend_config"]], "torch.ao.quantization.backend_config.executorch": [[2104, "module-torch.ao.quantization.backend_config.executorch"]], "torch.ao.quantization.backend_config.fbgemm": [[2104, "module-torch.ao.quantization.backend_config.fbgemm"]], "torch.ao.quantization.backend_config.native": [[2104, "module-torch.ao.quantization.backend_config.native"]], "torch.ao.quantization.backend_config.observation_type": [[2104, "module-torch.ao.quantization.backend_config.observation_type"]], "torch.ao.quantization.backend_config.onednn": [[2104, "module-torch.ao.quantization.backend_config.onednn"]], "torch.ao.quantization.backend_config.qnnpack": [[2104, "module-torch.ao.quantization.backend_config.qnnpack"]], "torch.ao.quantization.backend_config.tensorrt": [[2104, "module-torch.ao.quantization.backend_config.tensorrt"]], "torch.ao.quantization.backend_config.utils": [[2104, "module-torch.ao.quantization.backend_config.utils"]], "torch.ao.quantization.backend_config.x86": [[2104, "module-torch.ao.quantization.backend_config.x86"]], "torch.ao.quantization.fake_quantize": [[2104, "module-torch.ao.quantization.fake_quantize"]], "torch.ao.quantization.fuse_modules": [[2104, "module-torch.ao.quantization.fuse_modules"]], "torch.ao.quantization.fuser_method_mappings": [[2104, "module-torch.ao.quantization.fuser_method_mappings"]], "torch.ao.quantization.fx": [[2104, "module-torch.ao.quantization.fx"]], "torch.ao.quantization.fx.convert": [[2104, "module-torch.ao.quantization.fx.convert"]], "torch.ao.quantization.fx.custom_config": [[2104, "module-torch.ao.quantization.fx.custom_config"]], "torch.ao.quantization.fx.fuse": [[2104, "module-torch.ao.quantization.fx.fuse"]], "torch.ao.quantization.fx.fuse_handler": [[2104, "module-torch.ao.quantization.fx.fuse_handler"]], "torch.ao.quantization.fx.graph_module": [[2104, "module-torch.ao.quantization.fx.graph_module"]], "torch.ao.quantization.fx.lower_to_fbgemm": [[2104, "module-torch.ao.quantization.fx.lower_to_fbgemm"]], "torch.ao.quantization.fx.lower_to_qnnpack": [[2104, "module-torch.ao.quantization.fx.lower_to_qnnpack"]], "torch.ao.quantization.fx.lstm_utils": [[2104, "module-torch.ao.quantization.fx.lstm_utils"]], "torch.ao.quantization.fx.match_utils": [[2104, "module-torch.ao.quantization.fx.match_utils"]], "torch.ao.quantization.fx.pattern_utils": [[2104, "module-torch.ao.quantization.fx.pattern_utils"]], "torch.ao.quantization.fx.prepare": [[2104, "module-torch.ao.quantization.fx.prepare"]], "torch.ao.quantization.fx.qconfig_mapping_utils": [[2104, "module-torch.ao.quantization.fx.qconfig_mapping_utils"]], "torch.ao.quantization.fx.quantize_handler": [[2104, "module-torch.ao.quantization.fx.quantize_handler"]], "torch.ao.quantization.fx.tracer": [[2104, "module-torch.ao.quantization.fx.tracer"]], "torch.ao.quantization.fx.utils": [[2104, "module-torch.ao.quantization.fx.utils"]], "torch.ao.quantization.observer": [[2104, "module-torch.ao.quantization.observer"]], "torch.ao.quantization.pt2e.duplicate_dq_pass": [[2104, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"]], "torch.ao.quantization.pt2e.export_utils": [[2104, "module-torch.ao.quantization.pt2e.export_utils"]], "torch.ao.quantization.pt2e.graph_utils": [[2104, "module-torch.ao.quantization.pt2e.graph_utils"]], "torch.ao.quantization.pt2e.port_metadata_pass": [[2104, "module-torch.ao.quantization.pt2e.port_metadata_pass"]], "torch.ao.quantization.pt2e.prepare": [[2104, "module-torch.ao.quantization.pt2e.prepare"]], "torch.ao.quantization.pt2e.qat_utils": [[2104, "module-torch.ao.quantization.pt2e.qat_utils"]], "torch.ao.quantization.pt2e.representation.rewrite": [[2104, "module-torch.ao.quantization.pt2e.representation.rewrite"]], "torch.ao.quantization.pt2e.utils": [[2104, "module-torch.ao.quantization.pt2e.utils"]], "torch.ao.quantization.qconfig": [[2104, "module-torch.ao.quantization.qconfig"]], "torch.ao.quantization.qconfig_mapping": [[2104, "module-torch.ao.quantization.qconfig_mapping"]], "torch.ao.quantization.quant_type": [[2104, "module-torch.ao.quantization.quant_type"]], "torch.ao.quantization.quantization_mappings": [[2104, "module-torch.ao.quantization.quantization_mappings"]], "torch.ao.quantization.quantize_fx": [[2104, "module-torch.ao.quantization.quantize_fx"]], "torch.ao.quantization.quantize_jit": [[2104, "module-torch.ao.quantization.quantize_jit"]], "torch.ao.quantization.quantize_pt2e": [[2104, "module-torch.ao.quantization.quantize_pt2e"]], "torch.ao.quantization.quantizer.composable_quantizer": [[2104, "module-torch.ao.quantization.quantizer.composable_quantizer"]], "torch.ao.quantization.quantizer.embedding_quantizer": [[2104, "module-torch.ao.quantization.quantizer.embedding_quantizer"]], "torch.ao.quantization.quantizer.quantizer": [[2104, "module-torch.ao.quantization.quantizer.quantizer"]], "torch.ao.quantization.quantizer.utils": [[2104, "module-torch.ao.quantization.quantizer.utils"]], "torch.ao.quantization.quantizer.x86_inductor_quantizer": [[2104, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer": [[2104, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer_utils": [[2104, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"]], "torch.ao.quantization.stubs": [[2104, "module-torch.ao.quantization.stubs"]], "torch.ao.quantization.utils": [[2104, "module-torch.ao.quantization.utils"]], "torch.nn.intrinsic.modules.fused": [[2104, "module-torch.nn.intrinsic.modules.fused"]], "torch.nn.intrinsic.qat.modules.conv_fused": [[2104, "module-torch.nn.intrinsic.qat.modules.conv_fused"]], "torch.nn.intrinsic.qat.modules.linear_fused": [[2104, "module-torch.nn.intrinsic.qat.modules.linear_fused"]], "torch.nn.intrinsic.qat.modules.linear_relu": [[2104, "module-torch.nn.intrinsic.qat.modules.linear_relu"]], "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2104, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.nn.intrinsic.quantized.modules.bn_relu": [[2104, "module-torch.nn.intrinsic.quantized.modules.bn_relu"]], "torch.nn.intrinsic.quantized.modules.conv_relu": [[2104, "module-torch.nn.intrinsic.quantized.modules.conv_relu"]], "torch.nn.intrinsic.quantized.modules.linear_relu": [[2104, "module-torch.nn.intrinsic.quantized.modules.linear_relu"]], "torch.nn.qat.dynamic.modules.linear": [[2104, "module-torch.nn.qat.dynamic.modules.linear"]], "torch.nn.qat.modules.conv": [[2104, "module-torch.nn.qat.modules.conv"]], "torch.nn.qat.modules.embedding_ops": [[2104, "module-torch.nn.qat.modules.embedding_ops"]], "torch.nn.qat.modules.linear": [[2104, "module-torch.nn.qat.modules.linear"]], "torch.nn.quantizable.modules.activation": [[2104, "module-torch.nn.quantizable.modules.activation"]], "torch.nn.quantizable.modules.rnn": [[2104, "module-torch.nn.quantizable.modules.rnn"]], "torch.nn.quantized.dynamic.modules.conv": [[2104, "module-torch.nn.quantized.dynamic.modules.conv"]], "torch.nn.quantized.dynamic.modules.linear": [[2104, "module-torch.nn.quantized.dynamic.modules.linear"]], "torch.nn.quantized.dynamic.modules.rnn": [[2104, "module-torch.nn.quantized.dynamic.modules.rnn"]], "torch.nn.quantized.functional": [[2104, "module-torch.nn.quantized.functional"]], "torch.nn.quantized.modules.activation": [[2104, "module-torch.nn.quantized.modules.activation"]], "torch.nn.quantized.modules.batchnorm": [[2104, "module-torch.nn.quantized.modules.batchnorm"]], "torch.nn.quantized.modules.conv": [[2104, "module-torch.nn.quantized.modules.conv"]], "torch.nn.quantized.modules.dropout": [[2104, "module-torch.nn.quantized.modules.dropout"]], "torch.nn.quantized.modules.embedding_ops": [[2104, "module-torch.nn.quantized.modules.embedding_ops"]], "torch.nn.quantized.modules.functional_modules": [[2104, "module-torch.nn.quantized.modules.functional_modules"]], "torch.nn.quantized.modules.linear": [[2104, "module-torch.nn.quantized.modules.linear"]], "torch.nn.quantized.modules.normalization": [[2104, "module-torch.nn.quantized.modules.normalization"]], "torch.nn.quantized.modules.rnn": [[2104, "module-torch.nn.quantized.modules.rnn"]], "torch.nn.quantized.modules.utils": [[2104, "module-torch.nn.quantized.modules.utils"]], "torch.quantization.fake_quantize": [[2104, "module-torch.quantization.fake_quantize"]], "torch.quantization.fuse_modules": [[2104, "module-torch.quantization.fuse_modules"]], "torch.quantization.fuser_method_mappings": [[2104, "module-torch.quantization.fuser_method_mappings"]], "torch.quantization.fx.convert": [[2104, "module-torch.quantization.fx.convert"]], "torch.quantization.fx.fuse": [[2104, "module-torch.quantization.fx.fuse"]], "torch.quantization.fx.fusion_patterns": [[2104, "module-torch.quantization.fx.fusion_patterns"]], "torch.quantization.fx.graph_module": [[2104, "module-torch.quantization.fx.graph_module"]], "torch.quantization.fx.match_utils": [[2104, "module-torch.quantization.fx.match_utils"]], "torch.quantization.fx.pattern_utils": [[2104, "module-torch.quantization.fx.pattern_utils"]], "torch.quantization.fx.prepare": [[2104, "module-torch.quantization.fx.prepare"]], "torch.quantization.fx.quantization_patterns": [[2104, "module-torch.quantization.fx.quantization_patterns"]], "torch.quantization.fx.quantization_types": [[2104, "module-torch.quantization.fx.quantization_types"]], "torch.quantization.fx.utils": [[2104, "module-torch.quantization.fx.utils"]], "torch.quantization.observer": [[2104, "module-torch.quantization.observer"]], "torch.quantization.qconfig": [[2104, "module-torch.quantization.qconfig"]], "torch.quantization.quant_type": [[2104, "module-torch.quantization.quant_type"]], "torch.quantization.quantization_mappings": [[2104, "module-torch.quantization.quantization_mappings"]], "torch.quantization.quantize": [[2104, "module-torch.quantization.quantize"]], "torch.quantization.quantize_fx": [[2104, "module-torch.quantization.quantize_fx"]], "torch.quantization.quantize_jit": [[2104, "module-torch.quantization.quantize_jit"]], "torch.quantization.stubs": [[2104, "module-torch.quantization.stubs"]], "torch.quantization.utils": [[2104, "module-torch.quantization.utils"]], "torch.ao.nn.intrinsic": [[2107, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[2107, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[2107, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[2107, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[2107, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2107, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2107, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[2107, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[2107, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2107, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[2107, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[2107, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[2107, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[2107, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[2107, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[2107, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[2107, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.representation": [[2107, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[2107, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[2107, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[2107, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[2107, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[2107, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[2107, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[2107, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2107, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[2107, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[2107, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[2107, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[2107, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[2107, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[2107, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[2107, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[2107, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[2107, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[2107, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[2107, "module-torch.nn.quantized.modules"]], "torch.quantization": [[2107, "module-torch.quantization"]], "torch.quantization.fx": [[2107, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[2108, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[2108, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[2108, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[2108, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[2108, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[2108, "torch.random.set_rng_state"]], "torch.random": [[2108, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[2109, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[2109, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[2109, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[2109, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[2109, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[2109, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[2109, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[2109, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[2109, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2109, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2109, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[2109, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2109, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[2109, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[2109, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[2109, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2109, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[2109, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[2109, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2109, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[2109, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2109, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[2109, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[2109, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[2109, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2109, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2109, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2109, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[2109, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[2109, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[2109, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[2109, "module-torch.distributed.rpc"]], "torch.signal": [[2112, "module-torch.signal"]], "torch.signal.windows": [[2112, "module-torch.signal.windows"]], "size (class in torch)": [[2113, "torch.Size"]], "count() (torch.size method)": [[2113, "torch.Size.count"]], "index() (torch.size method)": [[2113, "torch.Size.index"]], "numel() (torch.size method)": [[2113, "torch.Size.numel"]], "torch.sparse": [[2114, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[2115, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[2115, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[2115, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[2115, "torch.special.digamma"]], "entr() (in module torch.special)": [[2115, "torch.special.entr"]], "erf() (in module torch.special)": [[2115, "torch.special.erf"]], "erfc() (in module torch.special)": [[2115, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[2115, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[2115, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[2115, "torch.special.exp2"]], "expit() (in module torch.special)": [[2115, "torch.special.expit"]], "expm1() (in module torch.special)": [[2115, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[2115, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[2115, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[2115, "torch.special.gammaln"]], "i0() (in module torch.special)": [[2115, "torch.special.i0"]], "i0e() (in module torch.special)": [[2115, "torch.special.i0e"]], "i1() (in module torch.special)": [[2115, "torch.special.i1"]], "i1e() (in module torch.special)": [[2115, "torch.special.i1e"]], "log1p() (in module torch.special)": [[2115, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[2115, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[2115, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[2115, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[2115, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[2115, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[2115, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[2115, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[2115, "torch.special.polygamma"]], "psi() (in module torch.special)": [[2115, "torch.special.psi"]], "round() (in module torch.special)": [[2115, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[2115, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[2115, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[2115, "torch.special.sinc"]], "softmax() (in module torch.special)": [[2115, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[2115, "torch.special.spherical_bessel_j0"]], "torch.special": [[2115, "module-torch.special"]], "xlog1py() (in module torch.special)": [[2115, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[2115, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[2115, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[2116, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[2116, "torch.BoolStorage"]], "bytestorage (class in torch)": [[2116, "torch.ByteStorage"]], "charstorage (class in torch)": [[2116, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[2116, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[2116, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[2116, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[2116, "torch.FloatStorage"]], "halfstorage (class in torch)": [[2116, "torch.HalfStorage"]], "intstorage (class in torch)": [[2116, "torch.IntStorage"]], "longstorage (class in torch)": [[2116, "torch.LongStorage"]], "qint32storage (class in torch)": [[2116, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[2116, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[2116, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[2116, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[2116, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[2116, "torch.ShortStorage"]], "typedstorage (class in torch)": [[2116, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[2116, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[2116, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[2116, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[2116, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[2116, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[2116, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[2116, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[2116, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[2116, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[2116, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[2116, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[2116, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[2116, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[2116, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[2116, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[2116, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[2116, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[2116, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[2116, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[2116, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[2116, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[2116, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[2116, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[2116, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[2116, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[2116, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[2116, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[2116, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[2116, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[2116, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[2116, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[2116, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[2116, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[2116, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.element_size"]], "filename (torch.typedstorage property)": [[2116, "torch.TypedStorage.filename"]], "filename (torch.untypedstorage property)": [[2116, "torch.UntypedStorage.filename"]], "fill_() (torch.typedstorage method)": [[2116, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[2116, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.float"]], "float8_e4m3fn() (torch.typedstorage method)": [[2116, "torch.TypedStorage.float8_e4m3fn"]], "float8_e4m3fn() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.float8_e4m3fn"]], "float8_e4m3fnuz() (torch.typedstorage method)": [[2116, "torch.TypedStorage.float8_e4m3fnuz"]], "float8_e4m3fnuz() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.float8_e4m3fnuz"]], "float8_e5m2() (torch.typedstorage method)": [[2116, "torch.TypedStorage.float8_e5m2"]], "float8_e5m2() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.float8_e5m2"]], "float8_e5m2fnuz() (torch.typedstorage method)": [[2116, "torch.TypedStorage.float8_e5m2fnuz"]], "float8_e5m2fnuz() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.float8_e5m2fnuz"]], "from_buffer() (torch.typedstorage class method)": [[2116, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[2116, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[2116, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[2116, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[2116, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[2116, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[2116, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[2116, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[2116, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[2116, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[2116, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[2116, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[2116, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[2116, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[2116, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[2116, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[2116, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[2116, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[2116, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[2116, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[2116, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.pin_memory"]], "resizable() (torch.typedstorage method)": [[2116, "torch.TypedStorage.resizable"]], "resizable() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.resizable"]], "resize_() (torch.typedstorage method)": [[2116, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[2116, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[2116, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[2116, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.size"]], "to() (torch.typedstorage method)": [[2116, "torch.TypedStorage.to"]], "to() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.to"]], "tolist() (torch.typedstorage method)": [[2116, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[2116, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[2116, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[2116, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[2117, "torch.device"]], "dtype (class in torch)": [[2117, "torch.dtype"]], "layout (class in torch)": [[2117, "torch.layout"]], "memory_format (class in torch)": [[2117, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[2119, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[2119, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[2120, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[2120, "torch.Tensor.T"]], "tensor (class in torch)": [[2120, "torch.Tensor"]], "__init__() (torch.tensor method)": [[2120, "torch.Tensor.__init__"]], "mh (torch.tensor attribute)": [[2120, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[2120, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[2121, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[2121, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[2121, "torch.testing.make_tensor"]], "torch.testing": [[2121, "module-torch.testing"]], "symbool (class in torch)": [[2123, "torch.SymBool"]], "symfloat (class in torch)": [[2123, "torch.SymFloat"]], "symint (class in torch)": [[2123, "torch.SymInt"]], "tag (class in torch)": [[2123, "torch.Tag"]], "as_integer_ratio() (torch.symfloat method)": [[2123, "torch.SymFloat.as_integer_ratio"]], "as_integer_ratio() (torch.symint method)": [[2123, "torch.SymInt.as_integer_ratio"]], "default_generator (torch.torch attribute)": [[2123, "torch.torch.default_generator"]], "is_integer() (torch.symfloat method)": [[2123, "torch.SymFloat.is_integer"]], "name (torch.tag property)": [[2123, "torch.Tag.name"]], "torch": [[2123, "module-torch"]], "torch.contrib": [[2123, "module-torch.contrib"]], "torch.functional": [[2123, "module-torch.functional"]], "torch.quasirandom": [[2123, "module-torch.quasirandom"]], "torch.return_types": [[2123, "module-torch.return_types"]], "torch.serialization": [[2123, "module-torch.serialization"]], "torch.signal.windows.windows": [[2123, "module-torch.signal.windows.windows"]], "torch.sparse.semi_structured": [[2123, "module-torch.sparse.semi_structured"]], "torch.storage": [[2123, "module-torch.storage"]], "torch.torch_version": [[2123, "module-torch.torch_version"]], "torch.types": [[2123, "module-torch.types"]], "torch.utils.backcompat": [[2123, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[2123, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[2123, "module-torch.utils.model_dump"]], "torch.utils.viz": [[2123, "module-torch.utils.viz"]], "torch.version": [[2123, "module-torch.version"]], "logger (class in torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[2124, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[2124, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2124, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[2124, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[2124, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[2124, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[2124, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[2124, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[2124, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2124, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[2124, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[2124, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[2125, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[2125, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[2125, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[2125, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[2125, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[2125, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2125, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[2125, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[2128, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[2146, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[2146, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[2146, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[2146, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[2146, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[2146, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[2146, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[2146, "torch.overrides.resolve_name"]], "torch.overrides": [[2146, "module-torch.overrides"]], "wrap_torch_function() (in module torch.overrides)": [[2146, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[2147, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[2147, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[2147, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[2150, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[2150, "torch.torch.iinfo"]], "torch.utils": [[2151, "module-torch.utils"]], "torch.utils.backend_registration": [[2151, "module-torch.utils.backend_registration"]], "torch.utils.benchmark.examples.blas_compare_setup": [[2151, "module-torch.utils.benchmark.examples.blas_compare_setup"]], "torch.utils.benchmark.examples.compare": [[2151, "module-torch.utils.benchmark.examples.compare"]], "torch.utils.benchmark.examples.fuzzer": [[2151, "module-torch.utils.benchmark.examples.fuzzer"]], "torch.utils.benchmark.examples.op_benchmark": [[2151, "module-torch.utils.benchmark.examples.op_benchmark"]], "torch.utils.benchmark.examples.simple_timeit": [[2151, "module-torch.utils.benchmark.examples.simple_timeit"]], "torch.utils.benchmark.examples.spectral_ops_fuzz_test": [[2151, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers.binary": [[2151, "module-torch.utils.benchmark.op_fuzzers.binary"]], "torch.utils.benchmark.op_fuzzers.sparse_binary": [[2151, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"]], "torch.utils.benchmark.op_fuzzers.sparse_unary": [[2151, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"]], "torch.utils.benchmark.op_fuzzers.spectral": [[2151, "module-torch.utils.benchmark.op_fuzzers.spectral"]], "torch.utils.benchmark.op_fuzzers.unary": [[2151, "module-torch.utils.benchmark.op_fuzzers.unary"]], "torch.utils.benchmark.utils.common": [[2151, "module-torch.utils.benchmark.utils.common"]], "torch.utils.benchmark.utils.compare": [[2151, "module-torch.utils.benchmark.utils.compare"]], "torch.utils.benchmark.utils.compile": [[2151, "module-torch.utils.benchmark.utils.compile"]], "torch.utils.benchmark.utils.cpp_jit": [[2151, "module-torch.utils.benchmark.utils.cpp_jit"]], "torch.utils.benchmark.utils.fuzzer": [[2151, "module-torch.utils.benchmark.utils.fuzzer"]], "torch.utils.benchmark.utils.sparse_fuzzer": [[2151, "module-torch.utils.benchmark.utils.sparse_fuzzer"]], "torch.utils.benchmark.utils.timer": [[2151, "module-torch.utils.benchmark.utils.timer"]], "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface": [[2151, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"]], "torch.utils.bundled_inputs": [[2151, "module-torch.utils.bundled_inputs"]], "torch.utils.checkpoint": [[2151, "module-torch.utils.checkpoint"]], "torch.utils.collect_env": [[2151, "module-torch.utils.collect_env"]], "torch.utils.cpp_backtrace": [[2151, "module-torch.utils.cpp_backtrace"]], "torch.utils.cpp_extension": [[2151, "module-torch.utils.cpp_extension"]], "torch.utils.data.backward_compatibility": [[2151, "module-torch.utils.data.backward_compatibility"]], "torch.utils.data.dataloader": [[2151, "module-torch.utils.data.dataloader"]], "torch.utils.data.datapipes.dataframe.dataframe_wrapper": [[2151, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"]], "torch.utils.data.datapipes.dataframe.dataframes": [[2151, "module-torch.utils.data.datapipes.dataframe.dataframes"]], "torch.utils.data.datapipes.dataframe.datapipes": [[2151, "module-torch.utils.data.datapipes.dataframe.datapipes"]], "torch.utils.data.datapipes.dataframe.structures": [[2151, "module-torch.utils.data.datapipes.dataframe.structures"]], "torch.utils.data.datapipes.datapipe": [[2151, "module-torch.utils.data.datapipes.datapipe"]], "torch.utils.data.datapipes.gen_pyi": [[2151, "module-torch.utils.data.datapipes.gen_pyi"]], "torch.utils.data.datapipes.iter.callable": [[2151, "module-torch.utils.data.datapipes.iter.callable"]], "torch.utils.data.datapipes.iter.combinatorics": [[2151, "module-torch.utils.data.datapipes.iter.combinatorics"]], "torch.utils.data.datapipes.iter.combining": [[2151, "module-torch.utils.data.datapipes.iter.combining"]], "torch.utils.data.datapipes.iter.filelister": [[2151, "module-torch.utils.data.datapipes.iter.filelister"]], "torch.utils.data.datapipes.iter.fileopener": [[2151, "module-torch.utils.data.datapipes.iter.fileopener"]], "torch.utils.data.datapipes.iter.grouping": [[2151, "module-torch.utils.data.datapipes.iter.grouping"]], "torch.utils.data.datapipes.iter.routeddecoder": [[2151, "module-torch.utils.data.datapipes.iter.routeddecoder"]], "torch.utils.data.datapipes.iter.selecting": [[2151, "module-torch.utils.data.datapipes.iter.selecting"]], "torch.utils.data.datapipes.iter.sharding": [[2151, "module-torch.utils.data.datapipes.iter.sharding"]], "torch.utils.data.datapipes.iter.streamreader": [[2151, "module-torch.utils.data.datapipes.iter.streamreader"]], "torch.utils.data.datapipes.iter.utils": [[2151, "module-torch.utils.data.datapipes.iter.utils"]], "torch.utils.data.datapipes.map.callable": [[2151, "module-torch.utils.data.datapipes.map.callable"]], "torch.utils.data.datapipes.map.combinatorics": [[2151, "module-torch.utils.data.datapipes.map.combinatorics"]], "torch.utils.data.datapipes.map.combining": [[2151, "module-torch.utils.data.datapipes.map.combining"]], "torch.utils.data.datapipes.map.grouping": [[2151, "module-torch.utils.data.datapipes.map.grouping"]], "torch.utils.data.datapipes.map.utils": [[2151, "module-torch.utils.data.datapipes.map.utils"]], "torch.utils.data.datapipes.utils.common": [[2151, "module-torch.utils.data.datapipes.utils.common"]], "torch.utils.data.datapipes.utils.decoder": [[2151, "module-torch.utils.data.datapipes.utils.decoder"]], "torch.utils.data.datapipes.utils.snapshot": [[2151, "module-torch.utils.data.datapipes.utils.snapshot"]], "torch.utils.data.dataset": [[2151, "module-torch.utils.data.dataset"]], "torch.utils.data.distributed": [[2151, "module-torch.utils.data.distributed"]], "torch.utils.data.graph": [[2151, "module-torch.utils.data.graph"]], "torch.utils.data.graph_settings": [[2151, "module-torch.utils.data.graph_settings"]], "torch.utils.data.sampler": [[2151, "module-torch.utils.data.sampler"]], "torch.utils.dlpack": [[2151, "module-torch.utils.dlpack"]], "torch.utils.file_baton": [[2151, "module-torch.utils.file_baton"]], "torch.utils.flop_counter": [[2151, "module-torch.utils.flop_counter"]], "torch.utils.hipify.constants": [[2151, "module-torch.utils.hipify.constants"]], "torch.utils.hipify.cuda_to_hip_mappings": [[2151, "module-torch.utils.hipify.cuda_to_hip_mappings"]], "torch.utils.hipify.hipify_python": [[2151, "module-torch.utils.hipify.hipify_python"]], "torch.utils.hipify.version": [[2151, "module-torch.utils.hipify.version"]], "torch.utils.hooks": [[2151, "module-torch.utils.hooks"]], "torch.utils.jit.log_extract": [[2151, "module-torch.utils.jit.log_extract"]], "torch.utils.mkldnn": [[2151, "module-torch.utils.mkldnn"]], "torch.utils.mobile_optimizer": [[2151, "module-torch.utils.mobile_optimizer"]], "torch.utils.show_pickle": [[2151, "module-torch.utils.show_pickle"]], "torch.utils.tensorboard.summary": [[2151, "module-torch.utils.tensorboard.summary"]], "torch.utils.tensorboard.writer": [[2151, "module-torch.utils.tensorboard.writer"]], "torch.utils.throughput_benchmark": [[2151, "module-torch.utils.throughput_benchmark"]], "torch.utils.weak": [[2151, "module-torch.utils.weak"]], "torch.xpu": [[2152, "module-torch.xpu"]], "torch.xpu.random": [[2152, "module-torch.xpu.random"]], "torch.xpu.streams": [[2152, "module-torch.xpu.streams"]]}})