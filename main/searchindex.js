Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "cond", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cuda_environment_variables", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "debugging_environment_variables", "deploy", "deterministic", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.pipelining", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/subprocess_handler", "elastic/timer", "elastic/train_script", "export", "export.ir_spec", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "future_mod", "futures", "fx", "fx.experimental", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/python.object-model", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.dynamic-value", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/exportdb/torch.mutation", "generated/exportdb/torch.operator", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.module_load", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.register_post_accumulate_grad_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.pt2e.export_utils.model_is_exported", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.UnpackedDualTensor", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.enter_dual_level", "generated/torch.autograd.forward_ad.exit_dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.BackwardCFunction", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.function.InplaceFunction", "generated/torch.autograd.function.NestedIOFunction", "generated/torch.autograd.function.once_differentiable", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.grad_mode.inference_mode", "generated/torch.autograd.grad_mode.set_grad_enabled", "generated/torch.autograd.grad_mode.set_multithreading_enabled", "generated/torch.autograd.gradcheck.GradcheckError", "generated/torch.autograd.gradcheck.gradcheck", "generated/torch.autograd.gradcheck.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.graph.increment_version", "generated/torch.autograd.profiler.EnforceUnique", "generated/torch.autograd.profiler.KinetoStepTracker", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.parse_nvprof_trace", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.profiler.record_function", "generated/torch.autograd.profiler_util.Interval", "generated/torch.autograd.profiler_util.Kernel", "generated/torch.autograd.profiler_util.MemRecordsAcc", "generated/torch.autograd.profiler_util.StringTable", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.cudagraph_mark_step_begin", "generated/torch.compiler.disable", "generated/torch.compiler.is_compiling", "generated/torch.compiler.is_dynamo_compiling", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.cond", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_device", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.set_device", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_file", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.fx.experimental.symbolic_shapes.CallMethodKey", "generated/torch.fx.experimental.symbolic_shapes.ConvertIntKey", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic", "generated/torch.fx.experimental.symbolic_shapes.DivideByKey", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint", "generated/torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnvSettings", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "generated/torch.fx.experimental.symbolic_shapes.check_consistent", "generated/torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings", "generated/torch.fx.experimental.symbolic_shapes.constrain_range", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify", "generated/torch.fx.experimental.symbolic_shapes.definitely_false", "generated/torch.fx.experimental.symbolic_shapes.definitely_true", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols", "generated/torch.fx.experimental.symbolic_shapes.hint_int", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int", "generated/torch.fx.experimental.symbolic_shapes.lru_cache", "generated/torch.fx.experimental.symbolic_shapes.parallel_and", "generated/torch.fx.experimental.symbolic_shapes.parallel_or", "generated/torch.fx.experimental.symbolic_shapes.rebind_unbacked", "generated/torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true", "generated/torch.fx.experimental.symbolic_shapes.sym_eq", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_device", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_device_module", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.interface", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.device_count", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mtia.DeferredMtiaCallError", "generated/torch.mtia.Event", "generated/torch.mtia.Stream", "generated/torch.mtia.StreamContext", "generated/torch.mtia.current_device", "generated/torch.mtia.current_stream", "generated/torch.mtia.default_stream", "generated/torch.mtia.device", "generated/torch.mtia.device_count", "generated/torch.mtia.init", "generated/torch.mtia.is_available", "generated/torch.mtia.is_initialized", "generated/torch.mtia.set_stream", "generated/torch.mtia.stream", "generated/torch.mtia.synchronize", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.CircularPad1d", "generated/torch.nn.CircularPad2d", "generated/torch.nn.CircularPad3d", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LPPool3d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RMSNorm", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.attention.SDPBackend", "generated/torch.nn.attention.bias.CausalBias", "generated/torch.nn.attention.bias.CausalVariant", "generated/torch.nn.attention.bias.causal_lower_right", "generated/torch.nn.attention.bias.causal_upper_left", "generated/torch.nn.attention.sdpa_kernel", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.lp_pool3d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rms_norm", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.modules.normalization.RMSNorm", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.convert_conv2d_weight_memory_format", "generated/torch.nn.utils.convert_conv3d_weight_memory_format", "generated/torch.nn.utils.fuse_conv_bn_eval", "generated/torch.nn.utils.fuse_conv_bn_weights", "generated/torch.nn.utils.fuse_linear_bn_eval", "generated/torch.nn.utils.fuse_linear_bn_weights", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrizations.weight_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.as_sparse_gradcheck", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_ite", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unravel_index", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.utils.swap_tensors", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.xpu.Event", "generated/torch.xpu.Stream", "generated/torch.xpu.StreamContext", "generated/torch.xpu.current_device", "generated/torch.xpu.current_stream", "generated/torch.xpu.device", "generated/torch.xpu.device_count", "generated/torch.xpu.device_of", "generated/torch.xpu.empty_cache", "generated/torch.xpu.get_device_capability", "generated/torch.xpu.get_device_name", "generated/torch.xpu.get_device_properties", "generated/torch.xpu.get_rng_state", "generated/torch.xpu.get_rng_state_all", "generated/torch.xpu.init", "generated/torch.xpu.initial_seed", "generated/torch.xpu.is_available", "generated/torch.xpu.is_initialized", "generated/torch.xpu.manual_seed", "generated/torch.xpu.manual_seed_all", "generated/torch.xpu.seed", "generated/torch.xpu.seed_all", "generated/torch.xpu.set_device", "generated/torch.xpu.set_rng_state", "generated/torch.xpu.set_rng_state_all", "generated/torch.xpu.set_stream", "generated/torch.xpu.stream", "generated/torch.xpu.synchronize", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "meta", "miscellaneous_environment_variables", "mobile_optimizer", "model_zoo", "module_tracker", "monitor", "mps", "mtia", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.attention", "nn.attention.bias", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/fsdp", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_dynamo", "onnx_dynamo_onnxruntime_backend", "onnx_torchscript", "onnx_torchscript_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "size", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "threading_environment_variables", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_aot_inductor", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_dynamic_shapes", "torch.compiler_dynamo_deepdive", "torch.compiler_dynamo_overview", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "torch_environment_variables", "type_info", "utils", "xpu"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "cond.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cuda_environment_variables.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "debugging_environment_variables.rst", "deploy.rst", "deterministic.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.pipelining.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/subprocess_handler.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "export.ir_spec.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "future_mod.rst", "futures.rst", "fx.rst", "fx.experimental.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/python.object-model.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.dynamic-value.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/exportdb/torch.mutation.rst", "generated/exportdb/torch.operator.rst", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.module_load.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.register_post_accumulate_grad_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.pt2e.export_utils.model_is_exported.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.UnpackedDualTensor.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.enter_dual_level.rst", "generated/torch.autograd.forward_ad.exit_dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.BackwardCFunction.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.function.InplaceFunction.rst", "generated/torch.autograd.function.NestedIOFunction.rst", "generated/torch.autograd.function.once_differentiable.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.grad_mode.inference_mode.rst", "generated/torch.autograd.grad_mode.set_grad_enabled.rst", "generated/torch.autograd.grad_mode.set_multithreading_enabled.rst", "generated/torch.autograd.gradcheck.GradcheckError.rst", "generated/torch.autograd.gradcheck.gradcheck.rst", "generated/torch.autograd.gradcheck.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.graph.increment_version.rst", "generated/torch.autograd.profiler.EnforceUnique.rst", "generated/torch.autograd.profiler.KinetoStepTracker.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.parse_nvprof_trace.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.profiler.record_function.rst", "generated/torch.autograd.profiler_util.Interval.rst", "generated/torch.autograd.profiler_util.Kernel.rst", "generated/torch.autograd.profiler_util.MemRecordsAcc.rst", "generated/torch.autograd.profiler_util.StringTable.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.cudagraph_mark_step_begin.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.is_compiling.rst", "generated/torch.compiler.is_dynamo_compiling.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.cond.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_device.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.set_device.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_file.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.fx.experimental.symbolic_shapes.CallMethodKey.rst", "generated/torch.fx.experimental.symbolic_shapes.ConvertIntKey.rst", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints.rst", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic.rst", "generated/torch.fx.experimental.symbolic_shapes.DivideByKey.rst", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.rst", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv.rst", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnvSettings.rst", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr.rst", "generated/torch.fx.experimental.symbolic_shapes.check_consistent.rst", "generated/torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_range.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_false.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_true.rst", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious.rst", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols.rst", "generated/torch.fx.experimental.symbolic_shapes.hint_int.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int.rst", "generated/torch.fx.experimental.symbolic_shapes.lru_cache.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_and.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_or.rst", "generated/torch.fx.experimental.symbolic_shapes.rebind_unbacked.rst", "generated/torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings.rst", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true.rst", "generated/torch.fx.experimental.symbolic_shapes.sym_eq.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_device.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_device_module.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.interface.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.device_count.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mtia.DeferredMtiaCallError.rst", "generated/torch.mtia.Event.rst", "generated/torch.mtia.Stream.rst", "generated/torch.mtia.StreamContext.rst", "generated/torch.mtia.current_device.rst", "generated/torch.mtia.current_stream.rst", "generated/torch.mtia.default_stream.rst", "generated/torch.mtia.device.rst", "generated/torch.mtia.device_count.rst", "generated/torch.mtia.init.rst", "generated/torch.mtia.is_available.rst", "generated/torch.mtia.is_initialized.rst", "generated/torch.mtia.set_stream.rst", "generated/torch.mtia.stream.rst", "generated/torch.mtia.synchronize.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.CircularPad1d.rst", "generated/torch.nn.CircularPad2d.rst", "generated/torch.nn.CircularPad3d.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LPPool3d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RMSNorm.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.attention.SDPBackend.rst", "generated/torch.nn.attention.bias.CausalBias.rst", "generated/torch.nn.attention.bias.CausalVariant.rst", "generated/torch.nn.attention.bias.causal_lower_right.rst", "generated/torch.nn.attention.bias.causal_upper_left.rst", "generated/torch.nn.attention.sdpa_kernel.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.lp_pool3d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rms_norm.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.modules.normalization.RMSNorm.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.convert_conv2d_weight_memory_format.rst", "generated/torch.nn.utils.convert_conv3d_weight_memory_format.rst", "generated/torch.nn.utils.fuse_conv_bn_eval.rst", "generated/torch.nn.utils.fuse_conv_bn_weights.rst", "generated/torch.nn.utils.fuse_linear_bn_eval.rst", "generated/torch.nn.utils.fuse_linear_bn_weights.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrizations.weight_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.as_sparse_gradcheck.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_ite.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unravel_index.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.utils.swap_tensors.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.xpu.Event.rst", "generated/torch.xpu.Stream.rst", "generated/torch.xpu.StreamContext.rst", "generated/torch.xpu.current_device.rst", "generated/torch.xpu.current_stream.rst", "generated/torch.xpu.device.rst", "generated/torch.xpu.device_count.rst", "generated/torch.xpu.device_of.rst", "generated/torch.xpu.empty_cache.rst", "generated/torch.xpu.get_device_capability.rst", "generated/torch.xpu.get_device_name.rst", "generated/torch.xpu.get_device_properties.rst", "generated/torch.xpu.get_rng_state.rst", "generated/torch.xpu.get_rng_state_all.rst", "generated/torch.xpu.init.rst", "generated/torch.xpu.initial_seed.rst", "generated/torch.xpu.is_available.rst", "generated/torch.xpu.is_initialized.rst", "generated/torch.xpu.manual_seed.rst", "generated/torch.xpu.manual_seed_all.rst", "generated/torch.xpu.seed.rst", "generated/torch.xpu.seed_all.rst", "generated/torch.xpu.set_device.rst", "generated/torch.xpu.set_rng_state.rst", "generated/torch.xpu.set_rng_state_all.rst", "generated/torch.xpu.set_stream.rst", "generated/torch.xpu.stream.rst", "generated/torch.xpu.synchronize.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "meta.rst", "miscellaneous_environment_variables.rst", "mobile_optimizer.rst", "model_zoo.rst", "module_tracker.rst", "monitor.rst", "mps.rst", "mtia.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.attention.rst", "nn.attention.bias.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/fsdp.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_dynamo.rst", "onnx_dynamo_onnxruntime_backend.rst", "onnx_torchscript.rst", "onnx_torchscript_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "size.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "threading_environment_variables.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_aot_inductor.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_dynamo_deepdive.rst", "torch.compiler_dynamo_overview.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "torch_environment_variables.rst", "type_info.rst", "utils.rst", "xpu.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "Control Flow - Cond", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "CUDA Environment Variables", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "Debugging Environment Variables", "torch::deploy has been moved to pytorch/multipy", "torch.utils.deterministic", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Pipeline Parallelism", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Subprocess Handling", "Expiration Timers", "Train script", "torch.export", "torch.export IR Specification", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.__future__", "torch.futures", "torch.fx", "torch.fx.experimental", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "python.object-model", "torch.cond", "torch.dynamic-shape", "torch.dynamic-value", "torch.escape-hatch", "torch.map", "torch.mutation", "torch.operator", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.module_load", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "model_is_exported", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "UnpackedDualTensor", "dual_level", "torch.autograd.forward_ad.enter_dual_level", "torch.autograd.forward_ad.exit_dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "BackwardCFunction", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "InplaceFunction", "NestedIOFunction", "torch.autograd.function.once_differentiable", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "inference_mode", "set_grad_enabled", "set_multithreading_enabled", "torch.autograd.gradcheck.GradcheckError", "torch.autograd.gradcheck.gradcheck", "torch.autograd.gradcheck.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.graph.increment_version", "EnforceUnique", "KinetoStepTracker", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.parse_nvprof_trace", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "record_function", "Interval", "Kernel", "MemRecordsAcc", "StringTable", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.cudagraph_mark_step_begin", "torch.compiler.disable", "torch.compiler.is_compiling", "torch.compiler.is_dynamo_compiling", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.cond", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_device", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.set_device", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_file", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "CallMethodKey", "ConvertIntKey", "DimConstraints", "DimDynamic", "DivideByKey", "EqualityConstraint", "PropagateUnbackedSymInts", "RelaxedUnspecConstraint", "ShapeEnv", "ShapeEnvSettings", "StatefulSymbolicContext", "StatelessSymbolicContext", "StrictMinMaxConstraint", "SubclassSymbolicContext", "SymbolicContext", "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "torch.fx.experimental.symbolic_shapes.check_consistent", "torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings", "torch.fx.experimental.symbolic_shapes.constrain_range", "torch.fx.experimental.symbolic_shapes.constrain_unify", "torch.fx.experimental.symbolic_shapes.definitely_false", "torch.fx.experimental.symbolic_shapes.definitely_true", "torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "torch.fx.experimental.symbolic_shapes.has_free_symbols", "torch.fx.experimental.symbolic_shapes.hint_int", "torch.fx.experimental.symbolic_shapes.is_concrete_bool", "torch.fx.experimental.symbolic_shapes.is_concrete_int", "torch.fx.experimental.symbolic_shapes.lru_cache", "torch.fx.experimental.symbolic_shapes.parallel_and", "torch.fx.experimental.symbolic_shapes.parallel_or", "torch.fx.experimental.symbolic_shapes.rebind_unbacked", "torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings", "torch.fx.experimental.symbolic_shapes.statically_known_true", "torch.fx.experimental.symbolic_shapes.sym_eq", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_device", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_device_module", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.interface", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.device_count", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mtia.DeferredMtiaCallError", "Event", "Stream", "StreamContext", "torch.mtia.current_device", "torch.mtia.current_stream", "torch.mtia.default_stream", "device", "torch.mtia.device_count", "torch.mtia.init", "torch.mtia.is_available", "torch.mtia.is_initialized", "torch.mtia.set_stream", "torch.mtia.stream", "torch.mtia.synchronize", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "CircularPad1d", "CircularPad2d", "CircularPad3d", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LPPool3d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RMSNorm", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "SDPBackend", "torch.nn.attention.bias.CausalBias", "CausalVariant", "torch.nn.attention.bias.causal_lower_right", "torch.nn.attention.bias.causal_upper_left", "torch.nn.attention.sdpa_kernel", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.lp_pool3d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rms_norm", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "RMSNorm", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.convert_conv2d_weight_memory_format", "torch.nn.utils.convert_conv3d_weight_memory_format", "torch.nn.utils.fuse_conv_bn_eval", "torch.nn.utils.fuse_conv_bn_weights", "torch.nn.utils.fuse_linear_bn_eval", "torch.nn.utils.fuse_linear_bn_weights", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "torch.nn.utils.parametrizations.weight_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_ite", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unravel_index", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.utils.swap_tensors", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "Event", "Stream", "StreamContext", "torch.xpu.current_device", "torch.xpu.current_stream", "device", "torch.xpu.device_count", "device_of", "torch.xpu.empty_cache", "torch.xpu.get_device_capability", "torch.xpu.get_device_name", "torch.xpu.get_device_properties", "torch.xpu.get_rng_state", "torch.xpu.get_rng_state_all", "torch.xpu.init", "torch.xpu.initial_seed", "torch.xpu.is_available", "torch.xpu.is_initialized", "torch.xpu.manual_seed", "torch.xpu.manual_seed_all", "torch.xpu.seed", "torch.xpu.seed_all", "torch.xpu.set_device", "torch.xpu.set_rng_state", "torch.xpu.set_rng_state_all", "torch.xpu.set_stream", "torch.xpu.stream", "torch.xpu.synchronize", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "Meta device", "Miscellaneous Environment Variables", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.utils.module_tracker", "torch.monitor", "torch.mps", "torch.mtia", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.attention", "torch.nn.attention.bias", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "FSDP Notes", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "TorchDynamo-based ONNX Exporter", "ONNX Backend for TorchDynamo", "TorchScript-based ONNX Exporter", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.Size", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "Threading Environment Variables", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "Dynamic shapes", "Dynamo Deep-Dive", "Dynamo Overview", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Torch Environment Variables", "Type Info", "torch.utils", "torch.xpu"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 14, 15, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 38, 43, 45, 46, 48, 49, 50, 51, 53, 57, 61, 62, 63, 64, 74, 75, 150, 486, 603, 680, 689, 735, 738, 739, 740, 745, 746, 748, 756, 757, 760, 764, 788, 789, 799, 800, 814, 824, 842, 859, 894, 910, 912, 913, 914, 929, 940, 952, 957, 960, 979, 995, 1016, 1062, 1106, 1126, 1163, 1175, 1194, 1223, 1231, 1232, 1266, 1269, 1276, 1277, 1281, 1283, 1285, 1300, 1317, 1342, 1374, 1453, 1454, 1455, 1458, 1474, 1475, 1483, 1488, 1493, 1494, 1519, 1520, 1521, 1523, 1529, 1530, 1533, 1539, 1541, 1552, 1567, 1568, 1569, 1570, 1571, 1601, 1602, 1681, 1700, 1713, 1720, 1721, 1735, 1755, 1763, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1805, 1808, 1813, 1849, 1859, 1906, 1907, 1908, 1909, 1910, 1911, 1920, 1950, 1952, 1962, 1973, 2008, 2010, 2012, 2013, 2017, 2019, 2020, 2023, 2026, 2029, 2030, 2031, 2032, 2042, 2043, 2044, 2045, 2048, 2051, 2052, 2054, 2059, 2061, 2063, 2064, 2065, 2067, 2068, 2070, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2106, 2107, 2108, 2110, 2112], "conveni": [0, 3, 7, 14, 27, 42, 45, 46, 47, 53, 59, 1175, 1184, 1327, 1703, 1867, 1962, 1964, 1973, 2008, 2012, 2021, 2038, 2039, 2042, 2044, 2050, 2051, 2064, 2071, 2093, 2095, 2096, 2097, 2102], "method": [0, 3, 7, 9, 14, 15, 18, 22, 27, 28, 29, 31, 34, 35, 36, 37, 43, 45, 50, 53, 60, 61, 62, 64, 66, 72, 73, 80, 88, 221, 222, 323, 415, 486, 487, 488, 497, 498, 499, 520, 614, 793, 797, 799, 815, 816, 817, 838, 842, 855, 875, 876, 877, 893, 894, 901, 902, 903, 904, 905, 906, 907, 925, 926, 940, 1042, 1157, 1176, 1182, 1223, 1267, 1269, 1270, 1272, 1273, 1274, 1280, 1281, 1285, 1286, 1287, 1315, 1333, 1334, 1341, 1342, 1416, 1419, 1427, 1435, 1437, 1438, 1464, 1465, 1480, 1523, 1524, 1525, 1529, 1533, 1534, 1540, 1542, 1552, 1629, 1703, 1713, 1717, 1728, 1730, 1733, 1735, 1737, 1740, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1757, 1762, 1778, 1779, 1780, 1782, 1792, 1824, 1905, 1920, 1924, 1962, 2008, 2009, 2010, 2013, 2014, 2017, 2021, 2023, 2026, 2029, 2030, 2031, 2037, 2038, 2039, 2042, 2044, 2045, 2046, 2048, 2051, 2053, 2056, 2059, 2063, 2064, 2067, 2069, 2072, 2074, 2079, 2080, 2082, 2083, 2086, 2089, 2094, 2096, 2097, 2099, 2106, 2108, 2109], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 14, 15, 22, 23, 27, 31, 32, 33, 34, 36, 38, 43, 45, 46, 48, 49, 50, 51, 53, 55, 56, 58, 62, 86, 153, 223, 254, 400, 402, 486, 680, 693, 695, 696, 699, 735, 758, 760, 781, 820, 821, 833, 878, 896, 900, 909, 911, 932, 942, 951, 957, 964, 965, 966, 973, 991, 995, 1009, 1011, 1020, 1022, 1085, 1086, 1089, 1093, 1111, 1122, 1123, 1125, 1128, 1129, 1131, 1132, 1134, 1135, 1136, 1138, 1139, 1141, 1143, 1168, 1169, 1170, 1174, 1175, 1182, 1183, 1212, 1226, 1227, 1228, 1229, 1258, 1259, 1261, 1262, 1265, 1266, 1267, 1270, 1283, 1289, 1290, 1291, 1294, 1299, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1337, 1338, 1339, 1341, 1342, 1347, 1350, 1357, 1358, 1359, 1360, 1364, 1367, 1369, 1370, 1371, 1372, 1375, 1409, 1414, 1415, 1417, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1600, 1602, 1612, 1613, 1620, 1625, 1627, 1628, 1646, 1647, 1665, 1667, 1668, 1671, 1672, 1674, 1681, 1684, 1712, 1713, 1715, 1716, 1720, 1721, 1727, 1755, 1756, 1757, 1758, 1767, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1797, 1798, 1799, 1811, 1821, 1823, 1824, 1844, 1845, 1880, 1886, 1887, 1892, 1896, 1901, 1902, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1918, 1919, 1920, 1923, 1924, 1939, 1948, 1949, 1950, 1951, 1952, 1957, 1958, 1968, 1969, 1970, 1971, 1972, 1973, 1979, 2010, 2011, 2013, 2014, 2019, 2020, 2021, 2024, 2029, 2032, 2037, 2038, 2039, 2040, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2054, 2055, 2056, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2070, 2072, 2074, 2077, 2078, 2080, 2082, 2088, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2103, 2106, 2108, 2109, 2110], "some": [0, 1, 3, 7, 8, 9, 14, 21, 22, 23, 27, 29, 33, 34, 36, 38, 46, 48, 50, 51, 53, 56, 58, 59, 61, 62, 85, 87, 477, 486, 496, 567, 689, 748, 916, 936, 973, 1006, 1040, 1058, 1062, 1065, 1106, 1127, 1129, 1137, 1138, 1139, 1154, 1164, 1175, 1181, 1184, 1196, 1197, 1266, 1267, 1269, 1270, 1280, 1283, 1285, 1315, 1333, 1339, 1364, 1371, 1374, 1427, 1431, 1435, 1436, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1482, 1485, 1486, 1487, 1488, 1489, 1493, 1514, 1515, 1523, 1526, 1527, 1528, 1530, 1537, 1539, 1540, 1555, 1556, 1572, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1641, 1646, 1665, 1668, 1673, 1681, 1703, 1713, 1714, 1715, 1716, 1727, 1761, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 1823, 1843, 1867, 1873, 1887, 1924, 1964, 1973, 2008, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2029, 2030, 2031, 2038, 2039, 2042, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2061, 2063, 2064, 2066, 2067, 2068, 2070, 2072, 2073, 2074, 2077, 2082, 2089, 2095, 2096, 2097, 2098, 2100, 2101, 2104, 2105, 2106, 2107, 2108], "oper": [0, 2, 4, 5, 7, 8, 11, 12, 15, 18, 22, 26, 29, 32, 33, 34, 35, 42, 43, 45, 46, 51, 54, 59, 61, 62, 63, 64, 79, 80, 82, 83, 84, 85, 86, 254, 313, 321, 335, 352, 402, 445, 446, 447, 448, 449, 486, 488, 493, 496, 499, 513, 515, 517, 589, 680, 686, 689, 741, 742, 743, 747, 748, 757, 758, 768, 769, 779, 785, 792, 793, 795, 796, 799, 823, 826, 860, 862, 863, 866, 890, 892, 901, 902, 904, 906, 907, 916, 927, 941, 942, 944, 946, 949, 951, 953, 955, 960, 963, 970, 973, 983, 987, 989, 1009, 1011, 1039, 1048, 1080, 1085, 1086, 1087, 1088, 1101, 1106, 1107, 1108, 1109, 1119, 1124, 1142, 1154, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1175, 1178, 1217, 1221, 1227, 1228, 1269, 1280, 1281, 1285, 1286, 1289, 1299, 1312, 1322, 1325, 1326, 1339, 1340, 1349, 1356, 1364, 1369, 1374, 1385, 1386, 1414, 1417, 1431, 1436, 1441, 1442, 1443, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1477, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1487, 1489, 1495, 1509, 1514, 1519, 1520, 1521, 1523, 1536, 1538, 1542, 1543, 1544, 1551, 1566, 1567, 1569, 1571, 1575, 1597, 1598, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1614, 1615, 1616, 1617, 1621, 1622, 1624, 1625, 1629, 1633, 1640, 1646, 1648, 1655, 1656, 1666, 1668, 1672, 1681, 1687, 1688, 1699, 1700, 1701, 1702, 1712, 1713, 1715, 1716, 1757, 1763, 1768, 1772, 1773, 1791, 1797, 1807, 1811, 1820, 1821, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1843, 1849, 1866, 1867, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1898, 1900, 1901, 1902, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1923, 1939, 1957, 1961, 1962, 1964, 1973, 1976, 2006, 2007, 2009, 2010, 2014, 2017, 2021, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2051, 2052, 2053, 2054, 2055, 2058, 2059, 2063, 2066, 2068, 2070, 2071, 2072, 2073, 2076, 2078, 2080, 2081, 2084, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2107, 2108], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 20, 22, 26, 28, 29, 31, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 48, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 72, 73, 74, 75, 82, 83, 84, 86, 88, 97, 119, 150, 154, 173, 191, 208, 319, 321, 335, 342, 343, 406, 415, 435, 448, 458, 486, 487, 488, 496, 499, 513, 517, 520, 544, 557, 583, 584, 585, 587, 588, 617, 680, 686, 689, 712, 713, 714, 715, 716, 717, 720, 729, 730, 731, 732, 733, 735, 748, 757, 760, 768, 769, 772, 773, 774, 779, 781, 785, 786, 787, 790, 793, 794, 795, 796, 799, 802, 807, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 831, 832, 833, 834, 837, 855, 859, 860, 862, 863, 866, 879, 880, 881, 890, 891, 892, 894, 896, 897, 898, 899, 900, 901, 903, 904, 906, 907, 909, 910, 911, 912, 915, 916, 917, 918, 920, 921, 925, 926, 929, 933, 936, 941, 942, 943, 951, 953, 954, 961, 963, 973, 976, 981, 983, 987, 988, 991, 993, 1006, 1008, 1009, 1011, 1013, 1014, 1016, 1019, 1029, 1030, 1033, 1034, 1040, 1044, 1048, 1050, 1051, 1052, 1054, 1056, 1057, 1062, 1063, 1073, 1075, 1076, 1082, 1087, 1088, 1089, 1098, 1106, 1107, 1108, 1109, 1119, 1120, 1121, 1124, 1126, 1134, 1136, 1140, 1142, 1149, 1151, 1154, 1158, 1161, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1178, 1182, 1183, 1184, 1185, 1190, 1193, 1194, 1197, 1198, 1200, 1209, 1213, 1214, 1220, 1221, 1223, 1227, 1228, 1229, 1230, 1244, 1256, 1266, 1267, 1269, 1270, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1289, 1291, 1293, 1301, 1305, 1306, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1322, 1323, 1324, 1326, 1327, 1333, 1334, 1335, 1339, 1340, 1341, 1342, 1347, 1350, 1356, 1359, 1360, 1363, 1364, 1369, 1370, 1371, 1374, 1381, 1382, 1409, 1414, 1416, 1417, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1482, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1509, 1510, 1511, 1516, 1517, 1518, 1519, 1520, 1523, 1525, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1555, 1557, 1560, 1563, 1571, 1572, 1573, 1574, 1576, 1579, 1580, 1581, 1582, 1583, 1584, 1587, 1594, 1596, 1597, 1598, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1624, 1625, 1629, 1631, 1638, 1640, 1641, 1648, 1654, 1655, 1656, 1666, 1668, 1674, 1681, 1685, 1687, 1688, 1696, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1727, 1728, 1729, 1730, 1731, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1755, 1756, 1757, 1761, 1762, 1763, 1765, 1766, 1768, 1769, 1772, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1821, 1823, 1824, 1825, 1828, 1829, 1830, 1832, 1834, 1836, 1838, 1839, 1845, 1852, 1855, 1860, 1861, 1863, 1864, 1865, 1867, 1869, 1870, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1896, 1899, 1900, 1902, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1920, 1923, 1924, 1925, 1939, 1943, 1946, 1950, 1952, 1957, 1960, 1961, 1962, 1964, 1970, 1973, 1978, 1979, 1985, 1986, 1987, 1988, 1996, 1998, 2005, 2006, 2008, 2009, 2010, 2011, 2013, 2014, 2015, 2017, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2036, 2037, 2038, 2041, 2043, 2045, 2046, 2047, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2066, 2068, 2070, 2071, 2072, 2073, 2074, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2102, 2103, 2104, 2105, 2107, 2109, 2114], "float": [0, 1, 3, 11, 22, 23, 26, 27, 31, 34, 36, 39, 48, 50, 51, 53, 60, 62, 153, 154, 219, 313, 315, 317, 321, 333, 400, 475, 481, 499, 685, 687, 692, 694, 698, 732, 735, 738, 739, 740, 744, 745, 746, 748, 755, 756, 761, 762, 763, 764, 765, 770, 771, 772, 773, 774, 775, 777, 779, 780, 781, 785, 792, 793, 794, 799, 817, 819, 830, 838, 839, 853, 858, 859, 862, 863, 866, 881, 920, 921, 942, 943, 951, 958, 961, 965, 966, 984, 990, 991, 995, 1005, 1076, 1089, 1100, 1101, 1107, 1108, 1109, 1111, 1124, 1142, 1151, 1152, 1153, 1154, 1156, 1182, 1184, 1212, 1216, 1226, 1227, 1228, 1231, 1232, 1251, 1258, 1259, 1261, 1262, 1263, 1264, 1267, 1269, 1285, 1286, 1289, 1293, 1295, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1347, 1356, 1358, 1360, 1369, 1389, 1408, 1409, 1413, 1415, 1416, 1417, 1420, 1423, 1427, 1431, 1437, 1438, 1439, 1441, 1444, 1445, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1470, 1471, 1476, 1477, 1478, 1481, 1482, 1483, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1509, 1511, 1515, 1523, 1528, 1529, 1531, 1532, 1537, 1538, 1542, 1545, 1546, 1547, 1548, 1549, 1555, 1560, 1561, 1563, 1566, 1567, 1569, 1571, 1572, 1573, 1576, 1577, 1578, 1611, 1612, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1626, 1631, 1640, 1666, 1668, 1673, 1681, 1700, 1712, 1713, 1718, 1719, 1723, 1725, 1728, 1738, 1739, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1757, 1758, 1762, 1768, 1769, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1817, 1820, 1824, 1825, 1826, 1827, 1839, 1843, 1844, 1864, 1865, 1868, 1871, 1880, 1881, 1883, 1884, 1886, 1921, 1924, 1928, 1946, 1948, 1961, 2010, 2011, 2012, 2013, 2014, 2017, 2020, 2026, 2029, 2030, 2032, 2033, 2037, 2038, 2042, 2044, 2046, 2051, 2054, 2059, 2061, 2062, 2064, 2066, 2067, 2068, 2072, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2087, 2095, 2099, 2101, 2103, 2107, 2112], "datatyp": [0, 62, 881, 1266, 1269, 1523, 1715, 1716, 1867, 2054, 2061, 2077], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 22, 23, 28, 29, 31, 32, 34, 35, 36, 38, 42, 43, 45, 46, 50, 51, 53, 54, 56, 58, 59, 61, 62, 97, 98, 113, 129, 130, 133, 145, 146, 149, 150, 159, 160, 165, 166, 196, 197, 198, 207, 234, 239, 243, 244, 245, 255, 274, 275, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 303, 304, 307, 308, 309, 310, 313, 315, 321, 324, 344, 352, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 378, 379, 394, 395, 408, 412, 415, 438, 439, 450, 451, 455, 456, 487, 488, 498, 520, 561, 562, 563, 564, 580, 583, 616, 617, 618, 621, 622, 680, 685, 694, 738, 739, 740, 741, 742, 743, 760, 814, 826, 862, 866, 872, 879, 880, 885, 891, 894, 896, 897, 898, 906, 915, 916, 917, 918, 920, 921, 925, 926, 945, 946, 948, 949, 950, 952, 957, 973, 980, 990, 1005, 1006, 1009, 1011, 1013, 1020, 1030, 1040, 1051, 1094, 1100, 1101, 1102, 1103, 1110, 1111, 1112, 1126, 1133, 1151, 1152, 1153, 1154, 1157, 1164, 1165, 1166, 1167, 1170, 1174, 1183, 1184, 1186, 1210, 1211, 1212, 1224, 1225, 1226, 1235, 1236, 1238, 1239, 1244, 1246, 1258, 1267, 1269, 1273, 1281, 1290, 1292, 1293, 1294, 1296, 1297, 1302, 1306, 1320, 1322, 1325, 1326, 1339, 1347, 1348, 1349, 1351, 1353, 1354, 1357, 1358, 1364, 1367, 1368, 1372, 1373, 1377, 1381, 1408, 1410, 1420, 1423, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1459, 1469, 1474, 1476, 1488, 1523, 1524, 1533, 1552, 1567, 1571, 1575, 1584, 1604, 1605, 1606, 1631, 1640, 1681, 1700, 1703, 1713, 1718, 1719, 1720, 1721, 1744, 1766, 1770, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1802, 1803, 1809, 1811, 1839, 1843, 1859, 1864, 1867, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1921, 1922, 1939, 1945, 1949, 1951, 1957, 1970, 1971, 1976, 1977, 1979, 1986, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2023, 2025, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2052, 2053, 2054, 2056, 2059, 2061, 2063, 2067, 2068, 2072, 2073, 2074, 2078, 2079, 2082, 2083, 2084, 2090, 2093, 2095, 2096, 2097, 2099, 2100, 2103, 2106, 2107, 2108, 2109], "lower": [0, 1, 8, 12, 23, 27, 34, 50, 51, 64, 72, 73, 74, 75, 793, 795, 860, 952, 957, 964, 965, 966, 968, 1120, 1121, 1178, 1184, 1188, 1230, 1231, 1299, 1306, 1308, 1316, 1317, 1324, 1327, 1332, 1370, 1409, 1416, 1427, 1542, 1583, 1584, 1585, 1604, 1605, 1606, 1679, 1680, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 1807, 1822, 1824, 1844, 1859, 1867, 1904, 1948, 1949, 1950, 2010, 2011, 2013, 2021, 2033, 2037, 2039, 2051, 2056, 2062, 2067, 2078, 2084, 2103, 2108], "point": [0, 1, 7, 8, 9, 11, 22, 23, 26, 28, 29, 31, 32, 36, 42, 45, 46, 51, 53, 62, 88, 153, 154, 321, 333, 339, 481, 486, 499, 698, 738, 739, 740, 741, 742, 743, 744, 749, 750, 751, 752, 753, 754, 755, 756, 759, 761, 762, 763, 764, 765, 775, 777, 779, 780, 781, 785, 795, 799, 819, 820, 821, 822, 825, 830, 853, 862, 863, 866, 881, 910, 912, 913, 914, 920, 921, 942, 943, 951, 973, 990, 991, 995, 1054, 1056, 1065, 1070, 1071, 1107, 1108, 1109, 1152, 1153, 1154, 1216, 1223, 1227, 1228, 1232, 1251, 1266, 1269, 1285, 1286, 1293, 1295, 1316, 1317, 1340, 1342, 1347, 1356, 1369, 1416, 1423, 1432, 1433, 1434, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1469, 1516, 1517, 1518, 1523, 1575, 1576, 1594, 1620, 1629, 1640, 1681, 1700, 1713, 1720, 1721, 1768, 1777, 1808, 1824, 1825, 1826, 1830, 1839, 1852, 1864, 1865, 1871, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1961, 1962, 2009, 2010, 2012, 2013, 2014, 2017, 2026, 2033, 2037, 2038, 2039, 2042, 2043, 2047, 2048, 2051, 2054, 2065, 2066, 2067, 2068, 2070, 2072, 2073, 2077, 2080, 2082, 2083, 2084, 2087, 2094, 2096, 2097, 2099, 2101, 2104, 2107, 2110, 2112], "lower_precision_fp": 0, "half": [0, 1, 10, 23, 34, 617, 984, 1120, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1269, 1332, 1338, 1450, 1451, 1452, 1453, 1454, 1455, 1470, 1471, 1473, 1523, 1624, 1625, 1628, 1720, 1721, 1774, 1799, 1852, 1920, 2030, 2051, 2054, 2059, 2077, 2079, 2080, 2083], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 22, 23, 27, 29, 32, 33, 34, 43, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 64, 66, 336, 486, 589, 617, 760, 793, 842, 861, 879, 901, 904, 906, 920, 921, 940, 942, 951, 975, 983, 987, 1048, 1049, 1058, 1101, 1106, 1107, 1127, 1149, 1152, 1153, 1160, 1164, 1167, 1168, 1169, 1175, 1186, 1194, 1197, 1209, 1227, 1228, 1267, 1269, 1270, 1277, 1280, 1285, 1289, 1316, 1317, 1328, 1341, 1427, 1435, 1466, 1469, 1485, 1486, 1487, 1523, 1524, 1525, 1533, 1534, 1552, 1575, 1582, 1623, 1641, 1699, 1703, 1713, 1714, 1715, 1716, 1728, 1754, 1772, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1817, 1832, 1836, 1855, 1863, 1864, 1867, 1924, 1936, 1962, 1973, 2006, 2008, 2009, 2010, 2012, 2013, 2017, 2020, 2021, 2029, 2030, 2031, 2038, 2039, 2042, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2065, 2066, 2067, 2070, 2072, 2073, 2076, 2077, 2079, 2080, 2084, 2086, 2088, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2105, 2106, 2107, 2108, 2109, 2110], "linear": [0, 2, 9, 23, 27, 28, 31, 32, 33, 34, 50, 51, 53, 55, 57, 59, 62, 64, 431, 472, 473, 474, 475, 476, 479, 711, 720, 728, 729, 765, 792, 793, 794, 796, 814, 855, 859, 860, 862, 863, 911, 966, 1011, 1106, 1163, 1165, 1173, 1175, 1223, 1269, 1273, 1281, 1295, 1301, 1306, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1330, 1332, 1360, 1416, 1435, 1441, 1464, 1472, 1473, 1481, 1508, 1523, 1525, 1539, 1541, 1542, 1543, 1551, 1553, 1560, 1563, 1567, 1569, 1571, 1574, 1576, 1618, 1627, 1628, 1640, 1675, 1684, 1689, 1700, 1703, 1713, 1724, 1725, 1727, 1728, 1729, 1733, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1761, 1762, 1765, 1802, 1805, 1813, 1824, 1961, 1973, 1979, 2009, 2011, 2012, 2018, 2021, 2023, 2025, 2032, 2037, 2042, 2043, 2044, 2046, 2047, 2051, 2056, 2059, 2061, 2062, 2063, 2065, 2067, 2068, 2069, 2070, 2072, 2090, 2096, 2106, 2108], "layer": [0, 8, 23, 27, 29, 31, 32, 33, 53, 56, 734, 735, 760, 842, 859, 929, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1461, 1462, 1463, 1467, 1474, 1475, 1477, 1485, 1486, 1487, 1493, 1494, 1495, 1508, 1510, 1516, 1517, 1518, 1529, 1530, 1538, 1539, 1541, 1552, 1563, 1567, 1568, 1569, 1570, 1571, 1643, 1678, 1712, 1713, 1720, 1721, 1727, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 2009, 2037, 2042, 2044, 2046, 2047, 2050, 2051, 2056, 2059, 2061, 2063, 2065, 2067, 2068, 2070, 2077, 2088], "convolut": [0, 1, 2, 50, 738, 739, 740, 741, 742, 743, 772, 773, 774, 973, 1279, 1450, 1451, 1452, 1453, 1454, 1455, 1461, 1462, 1463, 1467, 1499, 1500, 1501, 1502, 1503, 1504, 1535, 1536, 1542, 1572, 1573, 1575, 1604, 1605, 1606, 1607, 1608, 1609, 1628, 1629, 1720, 1721, 1722, 1723, 1867, 2009, 2011, 2023, 2037, 2041, 2042, 2048, 2051, 2062, 2066, 2067, 2070, 2103], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 45, 46, 48, 50, 51, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 69, 70, 73, 81, 84, 85, 86, 87, 88, 97, 150, 233, 254, 319, 321, 335, 336, 339, 377, 402, 448, 471, 481, 486, 499, 513, 517, 544, 580, 589, 617, 680, 689, 690, 691, 697, 735, 756, 760, 761, 763, 764, 765, 779, 782, 783, 785, 786, 787, 792, 793, 794, 795, 796, 799, 814, 815, 816, 817, 819, 820, 821, 822, 825, 840, 855, 859, 860, 861, 862, 863, 866, 875, 876, 887, 888, 889, 891, 894, 901, 904, 906, 907, 909, 910, 911, 912, 913, 914, 916, 920, 921, 927, 929, 940, 942, 951, 952, 954, 955, 957, 960, 973, 980, 984, 987, 990, 991, 994, 995, 1008, 1009, 1011, 1012, 1014, 1019, 1031, 1042, 1048, 1051, 1052, 1062, 1066, 1073, 1080, 1089, 1094, 1098, 1101, 1106, 1107, 1108, 1109, 1122, 1123, 1124, 1125, 1127, 1129, 1134, 1136, 1142, 1145, 1147, 1148, 1152, 1153, 1154, 1158, 1163, 1164, 1169, 1171, 1173, 1174, 1175, 1178, 1181, 1182, 1183, 1184, 1188, 1190, 1193, 1194, 1197, 1206, 1213, 1223, 1227, 1228, 1230, 1232, 1246, 1258, 1259, 1261, 1262, 1265, 1266, 1267, 1269, 1270, 1273, 1276, 1277, 1280, 1283, 1285, 1286, 1291, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1322, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1336, 1339, 1340, 1341, 1342, 1351, 1352, 1353, 1354, 1356, 1357, 1359, 1361, 1362, 1364, 1367, 1370, 1371, 1372, 1375, 1377, 1382, 1396, 1409, 1413, 1414, 1415, 1416, 1417, 1427, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1444, 1445, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1469, 1474, 1475, 1476, 1477, 1482, 1485, 1486, 1487, 1488, 1489, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1537, 1539, 1541, 1552, 1555, 1556, 1557, 1563, 1567, 1569, 1571, 1572, 1573, 1575, 1576, 1582, 1584, 1585, 1586, 1594, 1600, 1601, 1602, 1612, 1613, 1620, 1621, 1622, 1623, 1629, 1640, 1641, 1665, 1668, 1670, 1673, 1681, 1699, 1700, 1701, 1702, 1703, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1726, 1727, 1728, 1731, 1733, 1740, 1754, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1769, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1801, 1804, 1805, 1817, 1823, 1824, 1830, 1839, 1842, 1843, 1850, 1852, 1863, 1864, 1867, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1916, 1919, 1920, 1923, 1924, 1934, 1936, 1940, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1957, 1961, 1962, 1964, 1967, 1968, 1969, 1973, 1978, 1979, 1980, 1996, 1998, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2019, 2020, 2021, 2023, 2025, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2112], "much": [0, 4, 7, 9, 15, 22, 23, 50, 150, 894, 910, 915, 1062, 1183, 1305, 1306, 1333, 1342, 1466, 1713, 1744, 1805, 2010, 2039, 2042, 2047, 2048, 2051, 2056, 2064, 2065, 2072, 2073, 2077, 2095, 2096, 2099], "faster": [0, 2, 8, 11, 22, 23, 27, 910, 920, 921, 1163, 1199, 1299, 1300, 1305, 1306, 1310, 1315, 1323, 1325, 1327, 1330, 1333, 1335, 1339, 1342, 1540, 1557, 1670, 1681, 1687, 1713, 1718, 1719, 1727, 1780, 1781, 1792, 1793, 1867, 1906, 1907, 1908, 1910, 1911, 2021, 2023, 2039, 2042, 2048, 2063, 2067, 2077, 2082, 2089, 2097, 2099, 2104], "reduct": [0, 2, 11, 27, 33, 53, 321, 513, 517, 973, 1315, 1347, 1416, 1435, 1436, 1442, 1456, 1458, 1466, 1476, 1482, 1483, 1488, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1573, 1601, 1602, 1610, 1612, 1613, 1621, 1626, 1637, 1638, 1641, 1642, 1653, 1661, 1662, 1663, 1664, 1665, 1673, 1685, 1686, 1697, 1698, 1713, 1824, 1901, 2011, 2030, 2043, 2048, 2064, 2067, 2102, 2108], "often": [0, 2, 4, 7, 8, 14, 22, 27, 32, 34, 46, 53, 56, 62, 150, 894, 915, 1188, 1197, 1285, 1316, 1317, 1326, 1375, 1465, 1485, 1486, 1487, 1594, 1602, 1620, 1629, 1703, 1727, 1807, 2013, 2021, 2039, 2042, 2046, 2050, 2051, 2053, 2054, 2055, 2059, 2064, 2072, 2082, 2096, 2098, 2099, 2106, 2108], "requir": [0, 1, 5, 8, 9, 11, 14, 15, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 44, 45, 50, 51, 53, 56, 58, 61, 62, 119, 150, 221, 335, 458, 486, 488, 496, 513, 515, 517, 560, 793, 795, 823, 826, 881, 890, 894, 901, 903, 906, 907, 909, 910, 911, 912, 913, 914, 915, 973, 1006, 1061, 1106, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1147, 1148, 1171, 1175, 1210, 1266, 1283, 1309, 1340, 1342, 1356, 1458, 1465, 1466, 1567, 1568, 1569, 1570, 1571, 1573, 1621, 1681, 1703, 1713, 1714, 1731, 1733, 1735, 1783, 1811, 1908, 1920, 1961, 1973, 2008, 2010, 2013, 2015, 2017, 2020, 2023, 2029, 2031, 2032, 2038, 2039, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2055, 2056, 2059, 2060, 2061, 2064, 2065, 2067, 2068, 2072, 2073, 2074, 2077, 2080, 2082, 2084, 2088, 2089, 2090, 2093, 2094, 2096, 2097, 2098, 2099, 2104, 2106, 2109], "dynam": [0, 12, 14, 15, 22, 51, 63, 64, 65, 66, 69, 70, 72, 75, 76, 680, 729, 733, 760, 761, 762, 763, 764, 765, 794, 799, 815, 824, 826, 829, 845, 851, 852, 853, 854, 859, 860, 973, 1178, 1179, 1181, 1183, 1190, 1277, 1283, 1285, 1341, 1727, 2012, 2013, 2014, 2037, 2042, 2051, 2054, 2058, 2059, 2061, 2063, 2064, 2068, 2089, 2090, 2096, 2097, 2099, 2105, 2108], "rang": [0, 1, 3, 11, 22, 27, 28, 31, 32, 34, 36, 45, 46, 49, 50, 51, 57, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 88, 301, 481, 684, 761, 763, 765, 795, 819, 820, 821, 822, 823, 825, 826, 827, 886, 943, 968, 978, 1067, 1068, 1076, 1106, 1156, 1173, 1182, 1188, 1194, 1230, 1231, 1232, 1336, 1347, 1362, 1371, 1389, 1416, 1427, 1458, 1468, 1470, 1471, 1475, 1481, 1494, 1513, 1525, 1530, 1534, 1539, 1541, 1557, 1558, 1559, 1563, 1624, 1625, 1629, 1687, 1713, 1719, 1795, 1796, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1824, 1903, 1959, 1960, 2010, 2011, 2013, 2039, 2041, 2042, 2046, 2051, 2053, 2054, 2061, 2062, 2063, 2066, 2067, 2070, 2071, 2078, 2080, 2082, 2083, 2084, 2086, 2094, 2095, 2097, 2106, 2108], "tri": [0, 2, 3, 7, 22, 34, 38, 62, 87, 580, 1269, 1523, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 2012, 2013, 2042, 2046, 2061, 2064, 2096, 2098, 2099, 2101], "match": [0, 1, 3, 12, 27, 29, 31, 34, 45, 50, 53, 62, 64, 72, 73, 84, 150, 313, 315, 321, 473, 474, 499, 500, 580, 583, 693, 699, 779, 793, 794, 795, 855, 879, 894, 915, 920, 921, 987, 1005, 1008, 1020, 1021, 1022, 1051, 1098, 1106, 1163, 1175, 1184, 1246, 1269, 1283, 1285, 1302, 1341, 1363, 1457, 1466, 1523, 1529, 1576, 1601, 1602, 1640, 1667, 1674, 1681, 1700, 1713, 1733, 1763, 1769, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1825, 1859, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1941, 1957, 1973, 1978, 2010, 2013, 2017, 2020, 2030, 2032, 2039, 2040, 2042, 2044, 2051, 2056, 2059, 2061, 2063, 2064, 2065, 2067, 2068, 2069, 2072, 2080, 2084, 2087, 2096, 2099, 2107, 2108], "each": [0, 1, 2, 5, 9, 14, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 38, 43, 46, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 80, 81, 83, 86, 97, 119, 153, 154, 398, 402, 493, 513, 515, 517, 545, 607, 617, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 686, 693, 695, 696, 699, 735, 760, 792, 840, 842, 860, 862, 863, 866, 878, 887, 888, 889, 890, 892, 893, 894, 901, 903, 906, 907, 915, 941, 944, 953, 957, 961, 962, 964, 967, 971, 973, 975, 978, 995, 1017, 1018, 1022, 1051, 1054, 1056, 1062, 1064, 1069, 1072, 1078, 1083, 1084, 1085, 1086, 1089, 1090, 1101, 1104, 1106, 1123, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1147, 1148, 1150, 1155, 1160, 1165, 1166, 1170, 1174, 1175, 1182, 1184, 1210, 1223, 1229, 1231, 1232, 1233, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1269, 1285, 1286, 1291, 1323, 1341, 1342, 1357, 1359, 1367, 1369, 1370, 1371, 1372, 1375, 1377, 1385, 1386, 1409, 1415, 1417, 1427, 1432, 1435, 1436, 1440, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1474, 1475, 1477, 1482, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1503, 1504, 1508, 1510, 1514, 1515, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1537, 1539, 1541, 1552, 1555, 1556, 1558, 1563, 1566, 1572, 1573, 1575, 1584, 1599, 1601, 1602, 1607, 1608, 1609, 1612, 1613, 1615, 1616, 1617, 1620, 1621, 1622, 1626, 1629, 1639, 1641, 1665, 1666, 1668, 1670, 1673, 1681, 1694, 1703, 1713, 1720, 1721, 1754, 1755, 1757, 1767, 1768, 1769, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1816, 1820, 1821, 1824, 1831, 1839, 1844, 1845, 1850, 1854, 1859, 1867, 1871, 1882, 1888, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1923, 1924, 1940, 1942, 1943, 1946, 1957, 1958, 1959, 1967, 1973, 1974, 2002, 2008, 2012, 2013, 2017, 2019, 2030, 2031, 2032, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2053, 2054, 2055, 2056, 2059, 2061, 2063, 2065, 2066, 2067, 2072, 2073, 2074, 2077, 2078, 2080, 2082, 2083, 2084, 2087, 2088, 2089, 2092, 2093, 2095, 2097, 2099, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2108, 2110], "its": [0, 1, 4, 5, 7, 8, 9, 12, 14, 15, 18, 22, 23, 25, 27, 28, 29, 31, 33, 34, 36, 37, 45, 46, 48, 51, 53, 60, 61, 62, 64, 66, 81, 82, 83, 150, 258, 458, 487, 488, 504, 513, 515, 517, 583, 584, 585, 617, 680, 823, 826, 875, 876, 877, 879, 880, 881, 894, 899, 900, 917, 918, 925, 926, 965, 966, 973, 983, 984, 991, 995, 1012, 1040, 1042, 1051, 1066, 1089, 1093, 1096, 1106, 1109, 1154, 1160, 1164, 1165, 1166, 1169, 1174, 1184, 1231, 1232, 1236, 1249, 1269, 1280, 1305, 1306, 1310, 1315, 1322, 1324, 1327, 1328, 1333, 1339, 1364, 1374, 1392, 1396, 1435, 1437, 1438, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1485, 1486, 1487, 1523, 1524, 1533, 1555, 1563, 1571, 1629, 1640, 1668, 1674, 1703, 1708, 1709, 1714, 1715, 1716, 1720, 1721, 1722, 1724, 1728, 1729, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1755, 1761, 1765, 1769, 1775, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1814, 1839, 1843, 1847, 1848, 1864, 1865, 1888, 1898, 1925, 1945, 1946, 1948, 1956, 1966, 1971, 1980, 2010, 2012, 2013, 2017, 2023, 2025, 2026, 2029, 2038, 2039, 2040, 2042, 2043, 2044, 2046, 2047, 2048, 2051, 2053, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2072, 2073, 2074, 2077, 2080, 2081, 2083, 2087, 2088, 2089, 2090, 2093, 2095, 2096, 2097, 2098, 2099, 2102, 2104, 2110, 2111], "appropri": [0, 7, 8, 9, 27, 28, 29, 34, 53, 61, 62, 63, 486, 896, 927, 995, 1051, 1197, 1285, 1867, 2013, 2014, 2031, 2042, 2048, 2053, 2056, 2059, 2065, 2067, 2070, 2072, 2073, 2074, 2079, 2096, 2099, 2104, 2109], "ordinarili": [0, 1194, 2038], "train": [0, 1, 12, 15, 22, 23, 27, 28, 29, 30, 31, 36, 43, 44, 45, 46, 53, 56, 57, 62, 712, 713, 714, 715, 716, 717, 718, 719, 720, 730, 731, 732, 733, 799, 801, 838, 839, 856, 857, 858, 860, 862, 863, 864, 916, 978, 987, 1050, 1051, 1054, 1056, 1063, 1173, 1269, 1274, 1281, 1284, 1285, 1427, 1431, 1437, 1438, 1439, 1458, 1459, 1460, 1465, 1466, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1523, 1529, 1530, 1542, 1563, 1571, 1595, 1599, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1679, 1680, 1681, 1713, 1728, 1731, 1733, 1762, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 2008, 2010, 2011, 2017, 2023, 2026, 2037, 2039, 2042, 2043, 2046, 2052, 2054, 2056, 2058, 2061, 2063, 2064, 2065, 2066, 2070, 2072, 2074, 2082, 2089, 2092, 2093, 2094, 2096, 2097, 2101, 2102, 2103, 2105, 2108], "gradscal": [0, 2038, 2042], "togeth": [0, 3, 9, 22, 27, 32, 33, 34, 54, 59, 62, 760, 1048, 1106, 1163, 1165, 1169, 1173, 1174, 1209, 1213, 1309, 1474, 1493, 1539, 1640, 1713, 1718, 1946, 2023, 2038, 2044, 2045, 2046, 2047, 2050, 2051, 2067, 2072, 2073, 2074, 2077, 2082, 2094, 2096, 2098, 2099, 2104], "shown": [0, 12, 23, 37, 46, 50, 1048, 1058, 1495, 1733, 1775, 1805, 1871, 2010, 2013, 2038, 2042, 2044, 2046, 2051, 2059, 2065, 2067, 2077, 2090, 2094, 2096, 2097, 2100], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 14, 18, 19, 22, 23, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 57, 58, 59, 61, 64, 66, 72, 73, 88, 191, 208, 233, 242, 254, 260, 289, 311, 313, 315, 317, 321, 335, 352, 401, 402, 415, 445, 446, 447, 448, 449, 471, 481, 483, 486, 487, 488, 493, 496, 499, 513, 515, 517, 523, 537, 544, 558, 560, 580, 581, 583, 584, 585, 586, 587, 588, 589, 607, 617, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 720, 728, 729, 734, 738, 739, 740, 741, 742, 743, 745, 746, 748, 756, 757, 758, 760, 761, 762, 763, 764, 765, 772, 773, 774, 785, 792, 793, 794, 796, 797, 810, 811, 812, 813, 814, 815, 816, 817, 824, 838, 855, 860, 861, 862, 863, 866, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 896, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 916, 917, 923, 925, 926, 927, 929, 936, 941, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 971, 972, 973, 978, 980, 981, 984, 987, 988, 989, 990, 991, 992, 993, 994, 995, 1005, 1048, 1049, 1054, 1056, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1166, 1171, 1173, 1175, 1182, 1183, 1184, 1194, 1197, 1210, 1211, 1212, 1216, 1223, 1226, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1240, 1244, 1246, 1254, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1392, 1408, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1587, 1594, 1596, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1615, 1616, 1617, 1620, 1621, 1622, 1624, 1625, 1629, 1631, 1665, 1667, 1668, 1671, 1672, 1681, 1700, 1703, 1712, 1713, 1720, 1721, 1727, 1728, 1729, 1731, 1733, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1812, 1814, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1859, 1861, 1862, 1863, 1864, 1865, 1868, 1871, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1896, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1921, 1923, 1924, 1926, 1927, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1964, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2014, 2017, 2019, 2020, 2024, 2025, 2026, 2030, 2031, 2032, 2037, 2039, 2040, 2041, 2042, 2046, 2047, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2058, 2060, 2063, 2064, 2065, 2066, 2067, 2068, 2072, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2090, 2093, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2105, 2106, 2107, 2108, 2109], "recip": [0, 3, 31, 1523, 1713, 1735, 2038, 2051, 2098], "howev": [0, 2, 3, 4, 5, 7, 9, 14, 15, 22, 23, 27, 31, 34, 36, 42, 45, 50, 51, 53, 54, 55, 57, 58, 61, 62, 64, 69, 73, 81, 84, 85, 86, 258, 481, 545, 896, 909, 1008, 1030, 1051, 1094, 1096, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1163, 1164, 1168, 1169, 1171, 1174, 1175, 1183, 1194, 1269, 1272, 1273, 1280, 1282, 1309, 1324, 1325, 1327, 1341, 1342, 1359, 1435, 1437, 1438, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1466, 1523, 1604, 1605, 1606, 1629, 1703, 1713, 1754, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1906, 1907, 1908, 1909, 1910, 1911, 1973, 1978, 1986, 2009, 2013, 2032, 2038, 2039, 2042, 2044, 2049, 2051, 2053, 2055, 2056, 2057, 2058, 2061, 2064, 2065, 2072, 2074, 2077, 2083, 2093, 2095, 2096, 2097, 2098, 2099, 2100], "modular": [0, 2038, 2059], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 21, 22, 23, 27, 29, 31, 34, 35, 36, 38, 42, 44, 45, 46, 50, 53, 54, 58, 61, 62, 63, 84, 196, 221, 254, 313, 321, 458, 486, 515, 517, 556, 603, 617, 680, 689, 815, 816, 817, 862, 893, 901, 904, 906, 907, 909, 911, 915, 920, 933, 944, 955, 967, 973, 988, 989, 991, 993, 1006, 1008, 1009, 1017, 1030, 1040, 1041, 1042, 1048, 1049, 1051, 1062, 1064, 1069, 1083, 1084, 1106, 1145, 1149, 1154, 1157, 1160, 1167, 1168, 1170, 1183, 1184, 1189, 1194, 1196, 1197, 1198, 1208, 1232, 1266, 1269, 1272, 1273, 1279, 1280, 1282, 1283, 1285, 1291, 1300, 1301, 1305, 1306, 1307, 1309, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1325, 1327, 1328, 1331, 1332, 1333, 1339, 1341, 1342, 1347, 1364, 1374, 1389, 1427, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1488, 1493, 1519, 1520, 1521, 1523, 1530, 1539, 1569, 1571, 1576, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1621, 1629, 1631, 1640, 1646, 1668, 1681, 1699, 1700, 1701, 1702, 1703, 1713, 1727, 1730, 1731, 1733, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1799, 1823, 1843, 1846, 1867, 1873, 1891, 1904, 1920, 1924, 1948, 1961, 1978, 1986, 2008, 2009, 2010, 2012, 2013, 2017, 2019, 2020, 2021, 2023, 2026, 2031, 2038, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2051, 2054, 2055, 2056, 2057, 2059, 2061, 2063, 2064, 2066, 2067, 2068, 2070, 2072, 2074, 2077, 2079, 2086, 2090, 2093, 2095, 2096, 2098, 2099, 2102, 2106, 2108, 2109, 2110], "separ": [0, 1, 3, 9, 11, 14, 19, 22, 27, 29, 31, 45, 46, 53, 54, 56, 59, 61, 62, 735, 760, 891, 906, 1106, 1123, 1125, 1131, 1132, 1135, 1136, 1141, 1143, 1163, 1178, 1280, 1315, 1330, 1477, 1485, 1486, 1487, 1529, 1531, 1648, 1769, 1836, 2008, 2011, 2013, 2017, 2019, 2038, 2039, 2041, 2042, 2045, 2047, 2056, 2059, 2063, 2064, 2073, 2077, 2078, 2082, 2093, 2106, 2108], "desir": [0, 1, 3, 22, 27, 33, 34, 53, 62, 88, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 240, 254, 267, 297, 325, 393, 445, 446, 447, 448, 449, 497, 499, 500, 520, 525, 544, 545, 546, 560, 580, 583, 603, 604, 617, 793, 866, 880, 942, 951, 970, 1052, 1053, 1077, 1078, 1087, 1088, 1107, 1108, 1109, 1119, 1124, 1142, 1158, 1160, 1161, 1162, 1227, 1228, 1269, 1289, 1340, 1356, 1362, 1369, 1384, 1390, 1414, 1416, 1417, 1435, 1436, 1523, 1574, 1602, 1648, 1687, 1688, 1703, 1754, 1768, 1772, 1773, 1814, 1821, 1824, 1825, 1826, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1923, 1939, 1950, 1952, 1996, 1997, 2001, 2002, 2006, 2007, 2030, 2031, 2032, 2038, 2039, 2042, 2045, 2049, 2051, 2056, 2065, 2071, 2072, 2078, 2079, 2080, 2108], "As": [0, 1, 8, 19, 23, 27, 29, 34, 50, 51, 53, 56, 57, 62, 254, 486, 955, 1106, 1273, 1301, 1305, 1306, 1316, 1317, 1328, 1333, 1427, 1461, 1462, 1463, 1467, 1488, 1523, 1555, 1699, 1720, 1721, 1767, 1773, 2007, 2010, 2012, 2013, 2020, 2032, 2039, 2042, 2044, 2046, 2047, 2051, 2054, 2056, 2057, 2058, 2059, 2061, 2064, 2065, 2071, 2072, 2073, 2074, 2076, 2077, 2089, 2092, 2094, 2096, 2099, 2100, 2101, 2108], "section": [0, 1, 7, 22, 32, 34, 36, 37, 51, 57, 62, 86, 119, 1062, 1106, 1223, 1459, 1474, 1493, 1521, 1539, 1612, 1757, 1940, 2010, 2011, 2012, 2013, 2014, 2029, 2031, 2032, 2038, 2039, 2042, 2043, 2044, 2045, 2048, 2049, 2051, 2053, 2066, 2073, 2082, 2094, 2096, 2097, 2099, 2100, 2101, 2102, 2106, 2108], "infer": [0, 1, 2, 3, 5, 11, 12, 15, 29, 34, 45, 53, 580, 617, 862, 863, 866, 880, 881, 916, 978, 987, 1022, 1160, 1161, 1183, 1232, 1253, 1267, 1270, 1279, 1284, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1529, 1576, 1640, 1667, 1703, 1766, 1794, 1805, 1839, 1846, 1864, 1865, 1906, 1907, 1908, 1909, 1910, 1911, 1939, 1956, 2009, 2010, 2012, 2013, 2017, 2030, 2032, 2042, 2051, 2061, 2066, 2067, 2068, 2070, 2077, 2089, 2092, 2093, 2095, 2096, 2099, 2101, 2105], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 22, 23, 27, 28, 29, 31, 33, 34, 35, 36, 43, 45, 46, 50, 51, 53, 57, 58, 61, 62, 82, 83, 84, 119, 254, 311, 321, 323, 335, 352, 445, 446, 447, 448, 449, 458, 481, 486, 488, 513, 515, 517, 557, 583, 584, 585, 587, 588, 614, 617, 680, 695, 696, 735, 738, 739, 740, 741, 743, 772, 773, 774, 779, 785, 786, 787, 791, 793, 801, 814, 817, 820, 821, 824, 828, 843, 850, 859, 879, 896, 898, 901, 904, 905, 906, 907, 909, 911, 920, 927, 929, 942, 943, 951, 973, 981, 987, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1008, 1009, 1011, 1018, 1020, 1022, 1040, 1048, 1049, 1051, 1073, 1103, 1107, 1109, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1152, 1153, 1157, 1158, 1159, 1164, 1175, 1182, 1184, 1196, 1197, 1222, 1223, 1227, 1228, 1232, 1240, 1245, 1250, 1258, 1267, 1269, 1272, 1273, 1281, 1285, 1286, 1289, 1300, 1305, 1306, 1308, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1328, 1330, 1331, 1333, 1334, 1341, 1342, 1359, 1364, 1427, 1453, 1454, 1455, 1458, 1459, 1465, 1466, 1469, 1493, 1495, 1523, 1526, 1528, 1529, 1531, 1540, 1563, 1571, 1575, 1576, 1587, 1612, 1621, 1623, 1629, 1640, 1668, 1681, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1713, 1715, 1716, 1720, 1721, 1734, 1754, 1755, 1756, 1768, 1776, 1779, 1783, 1794, 1797, 1801, 1804, 1805, 1807, 1811, 1823, 1832, 1836, 1838, 1840, 1863, 1867, 1869, 1872, 1873, 1898, 1901, 1905, 1915, 1920, 1924, 1939, 1950, 1952, 1957, 1958, 1961, 1962, 1964, 1970, 1971, 1972, 1973, 1978, 1998, 2008, 2011, 2012, 2013, 2017, 2019, 2020, 2021, 2023, 2024, 2026, 2028, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2070, 2071, 2072, 2073, 2074, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2089, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2106, 2107, 2108, 2110], "For": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 22, 23, 24, 27, 28, 29, 32, 33, 34, 36, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 79, 80, 81, 196, 254, 289, 313, 315, 321, 335, 352, 415, 471, 481, 486, 493, 499, 513, 515, 517, 583, 589, 603, 617, 686, 687, 688, 689, 690, 693, 699, 734, 738, 739, 740, 741, 742, 743, 760, 792, 793, 794, 814, 859, 860, 893, 906, 907, 920, 927, 941, 945, 947, 948, 950, 953, 962, 973, 978, 1040, 1054, 1056, 1062, 1087, 1088, 1089, 1106, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1150, 1158, 1173, 1175, 1183, 1184, 1188, 1198, 1210, 1223, 1232, 1246, 1269, 1280, 1281, 1283, 1285, 1286, 1299, 1301, 1305, 1306, 1309, 1310, 1312, 1313, 1314, 1315, 1317, 1326, 1327, 1329, 1330, 1333, 1342, 1349, 1357, 1364, 1370, 1374, 1427, 1431, 1435, 1436, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1465, 1466, 1468, 1469, 1474, 1476, 1483, 1488, 1493, 1495, 1523, 1526, 1527, 1528, 1529, 1537, 1538, 1539, 1545, 1546, 1547, 1548, 1549, 1550, 1555, 1560, 1574, 1575, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1602, 1604, 1605, 1606, 1615, 1616, 1617, 1622, 1629, 1640, 1666, 1668, 1681, 1689, 1703, 1712, 1713, 1731, 1754, 1755, 1756, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1836, 1852, 1861, 1864, 1872, 1898, 1899, 1909, 1915, 1924, 1940, 1942, 1946, 1954, 1957, 1962, 1964, 1971, 1972, 1973, 2008, 2009, 2010, 2013, 2015, 2017, 2019, 2020, 2022, 2023, 2026, 2030, 2031, 2032, 2033, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2053, 2054, 2055, 2056, 2060, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2071, 2072, 2073, 2074, 2077, 2079, 2080, 2081, 2082, 2083, 2084, 2089, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2102, 2104, 2105, 2107, 2108, 2109], "api": [0, 2, 3, 5, 8, 9, 14, 19, 23, 27, 28, 29, 33, 36, 37, 38, 42, 43, 44, 45, 46, 53, 54, 57, 61, 63, 64, 69, 73, 74, 75, 233, 800, 824, 862, 896, 897, 898, 899, 900, 912, 917, 918, 962, 978, 1006, 1040, 1041, 1042, 1048, 1049, 1051, 1079, 1110, 1150, 1164, 1167, 1168, 1170, 1175, 1182, 1194, 1280, 1281, 1283, 1389, 1405, 1713, 1763, 1765, 1766, 1774, 1852, 1863, 1954, 1964, 1973, 1992, 2003, 2008, 2019, 2020, 2021, 2023, 2027, 2029, 2030, 2032, 2039, 2043, 2056, 2058, 2068, 2072, 2073, 2077, 2080, 2082, 2086, 2089, 2090, 2097, 2101, 2109], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 18, 22, 23, 27, 29, 31, 32, 33, 34, 35, 36, 42, 45, 50, 51, 53, 57, 58, 59, 61, 62, 64, 72, 73, 87, 154, 218, 221, 222, 254, 323, 513, 515, 517, 523, 543, 614, 741, 742, 743, 760, 800, 814, 862, 881, 890, 891, 897, 898, 901, 904, 906, 907, 916, 929, 942, 951, 965, 966, 973, 979, 1005, 1048, 1051, 1062, 1087, 1088, 1106, 1110, 1126, 1157, 1164, 1170, 1174, 1175, 1184, 1194, 1201, 1202, 1210, 1213, 1222, 1227, 1228, 1232, 1269, 1272, 1273, 1276, 1279, 1283, 1285, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1337, 1338, 1371, 1377, 1392, 1415, 1427, 1435, 1437, 1438, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1466, 1469, 1474, 1488, 1493, 1523, 1530, 1539, 1553, 1555, 1563, 1572, 1573, 1575, 1607, 1608, 1609, 1629, 1667, 1684, 1703, 1713, 1731, 1733, 1743, 1745, 1747, 1748, 1749, 1750, 1766, 1780, 1781, 1795, 1801, 1805, 1808, 1811, 1836, 1843, 1855, 1865, 1879, 1880, 1897, 1901, 1915, 1924, 1934, 1936, 1939, 1945, 1946, 1957, 1958, 1973, 1976, 2008, 2009, 2010, 2012, 2013, 2017, 2019, 2020, 2023, 2025, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2071, 2072, 2073, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2088, 2089, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2102, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111], "arg": [0, 1, 3, 4, 5, 14, 22, 23, 27, 29, 31, 32, 34, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 53, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 580, 603, 680, 732, 747, 749, 751, 752, 753, 754, 760, 762, 763, 824, 862, 891, 893, 901, 902, 903, 906, 907, 936, 977, 1051, 1066, 1163, 1167, 1168, 1169, 1175, 1182, 1184, 1204, 1205, 1269, 1272, 1359, 1435, 1436, 1456, 1458, 1482, 1484, 1489, 1512, 1514, 1515, 1523, 1526, 1527, 1528, 1530, 1537, 1552, 1554, 1555, 1556, 1558, 1562, 1563, 1564, 1565, 1572, 1601, 1602, 1612, 1641, 1665, 1673, 1703, 1713, 1735, 1740, 1754, 1761, 1763, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1925, 1958, 1970, 1973, 2008, 2011, 2013, 2014, 2017, 2029, 2031, 2039, 2042, 2043, 2044, 2045, 2053, 2059, 2061, 2064, 2065, 2072, 2073, 2074, 2079, 2088, 2094, 2096, 2097, 2098, 2099, 2107, 2108, 2109], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 97, 150, 153, 154, 155, 170, 172, 173, 175, 178, 179, 180, 190, 191, 195, 196, 206, 208, 209, 218, 223, 233, 240, 254, 255, 258, 267, 286, 290, 297, 311, 313, 315, 319, 321, 323, 325, 328, 329, 330, 331, 332, 333, 335, 336, 338, 340, 341, 342, 343, 352, 393, 400, 402, 406, 415, 448, 458, 471, 472, 481, 483, 486, 487, 488, 493, 495, 496, 497, 498, 499, 500, 503, 504, 513, 515, 517, 520, 524, 525, 537, 543, 544, 545, 557, 560, 580, 581, 583, 584, 585, 587, 588, 589, 603, 604, 607, 614, 617, 618, 620, 624, 680, 681, 683, 684, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 723, 724, 725, 726, 727, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 763, 764, 765, 768, 769, 772, 773, 774, 775, 776, 777, 778, 779, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 799, 801, 802, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 824, 826, 827, 833, 838, 839, 840, 858, 859, 860, 862, 863, 866, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 925, 926, 927, 928, 929, 933, 934, 936, 938, 940, 941, 942, 943, 944, 946, 949, 951, 953, 954, 957, 958, 959, 961, 962, 963, 964, 965, 966, 967, 968, 970, 971, 972, 973, 975, 976, 978, 980, 981, 983, 987, 988, 989, 990, 991, 992, 993, 994, 995, 1001, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1020, 1022, 1025, 1026, 1027, 1029, 1033, 1034, 1037, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1093, 1094, 1095, 1096, 1097, 1098, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1178, 1179, 1181, 1182, 1183, 1184, 1186, 1188, 1190, 1191, 1193, 1194, 1196, 1197, 1198, 1200, 1201, 1202, 1204, 1205, 1208, 1210, 1212, 1213, 1214, 1216, 1218, 1222, 1223, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1240, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1289, 1290, 1291, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1383, 1390, 1392, 1396, 1398, 1399, 1400, 1403, 1405, 1406, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1552, 1553, 1555, 1556, 1557, 1559, 1560, 1563, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1594, 1597, 1598, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1638, 1640, 1641, 1646, 1647, 1648, 1650, 1651, 1652, 1654, 1655, 1656, 1665, 1666, 1668, 1670, 1671, 1672, 1673, 1674, 1681, 1684, 1687, 1688, 1696, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1755, 1756, 1757, 1758, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1769, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1830, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1852, 1854, 1855, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1918, 1919, 1920, 1923, 1924, 1925, 1926, 1927, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1956, 1957, 1958, 1959, 1961, 1964, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1978, 1979, 1980, 1982, 1983, 1985, 1987, 1988, 1990, 1992, 1994, 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2063, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2114], "equival": [0, 1, 3, 5, 11, 12, 22, 23, 24, 31, 34, 38, 45, 46, 50, 57, 58, 62, 82, 155, 170, 172, 175, 178, 179, 180, 240, 255, 267, 297, 319, 325, 393, 448, 458, 486, 498, 500, 513, 525, 604, 610, 617, 618, 620, 692, 744, 748, 755, 757, 759, 785, 786, 787, 877, 890, 891, 906, 907, 954, 956, 959, 961, 964, 971, 972, 987, 1094, 1098, 1101, 1104, 1105, 1106, 1108, 1123, 1125, 1128, 1131, 1132, 1135, 1136, 1138, 1141, 1143, 1162, 1164, 1167, 1169, 1175, 1184, 1197, 1206, 1233, 1235, 1246, 1268, 1269, 1280, 1285, 1286, 1289, 1301, 1322, 1326, 1334, 1339, 1371, 1376, 1392, 1414, 1427, 1437, 1438, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1465, 1466, 1477, 1483, 1485, 1486, 1487, 1488, 1493, 1495, 1523, 1539, 1555, 1563, 1575, 1577, 1584, 1585, 1586, 1638, 1648, 1670, 1681, 1700, 1701, 1702, 1713, 1773, 1794, 1830, 1833, 1836, 1837, 1861, 1867, 1874, 1896, 1903, 1916, 1926, 1927, 1934, 1939, 1958, 1973, 1974, 1975, 2007, 2010, 2012, 2013, 2021, 2039, 2059, 2061, 2064, 2068, 2077, 2078, 2080, 2083, 2084, 2094, 2097, 2109, 2112], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 22, 23, 24, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 50, 51, 53, 56, 57, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 258, 311, 321, 458, 583, 617, 685, 686, 687, 689, 693, 695, 696, 699, 729, 738, 739, 740, 772, 773, 774, 779, 785, 786, 787, 792, 793, 794, 795, 801, 817, 833, 860, 862, 863, 893, 896, 901, 904, 906, 907, 920, 921, 941, 942, 946, 949, 951, 953, 965, 966, 973, 987, 990, 1005, 1048, 1049, 1051, 1069, 1101, 1103, 1106, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1151, 1152, 1153, 1154, 1156, 1157, 1159, 1170, 1174, 1227, 1228, 1240, 1266, 1273, 1281, 1285, 1289, 1290, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1360, 1364, 1368, 1373, 1374, 1406, 1408, 1450, 1451, 1452, 1453, 1454, 1455, 1462, 1465, 1466, 1469, 1489, 1510, 1528, 1529, 1563, 1571, 1573, 1575, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1621, 1623, 1629, 1640, 1646, 1681, 1699, 1700, 1702, 1713, 1720, 1721, 1768, 1773, 1779, 1780, 1781, 1783, 1793, 1811, 1823, 1842, 1843, 1864, 1867, 1868, 1897, 1898, 1901, 1904, 1921, 1924, 1948, 1950, 1952, 1962, 1964, 1970, 1971, 1972, 2007, 2008, 2009, 2010, 2012, 2014, 2015, 2017, 2023, 2026, 2029, 2033, 2039, 2040, 2041, 2042, 2044, 2049, 2051, 2053, 2054, 2056, 2057, 2058, 2059, 2060, 2063, 2064, 2065, 2066, 2070, 2071, 2072, 2076, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2098, 2100, 2101, 2107, 2108, 2109, 2114], "now": [0, 1, 12, 27, 32, 35, 42, 46, 48, 50, 53, 58, 62, 496, 901, 905, 906, 907, 915, 929, 987, 1020, 1048, 1070, 1071, 1157, 1158, 1216, 1266, 1267, 1273, 1285, 1319, 1520, 1540, 1576, 1703, 1717, 1733, 1744, 1765, 1783, 1864, 1915, 1920, 1964, 2010, 2020, 2030, 2031, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2051, 2052, 2056, 2061, 2064, 2067, 2073, 2074, 2077, 2093, 2095, 2096, 2098, 2099, 2100, 2102, 2107, 2108, 2109, 2110], "new": [0, 1, 5, 8, 14, 18, 22, 25, 27, 29, 34, 36, 45, 46, 50, 53, 54, 57, 58, 59, 60, 61, 62, 86, 88, 221, 254, 311, 415, 448, 483, 486, 487, 496, 499, 544, 580, 583, 617, 680, 684, 760, 791, 814, 819, 855, 880, 882, 883, 884, 885, 886, 897, 899, 906, 907, 916, 925, 926, 940, 956, 957, 960, 962, 971, 975, 978, 990, 992, 993, 1009, 1011, 1090, 1094, 1116, 1120, 1121, 1147, 1148, 1150, 1164, 1173, 1175, 1182, 1184, 1192, 1206, 1208, 1240, 1244, 1258, 1259, 1262, 1265, 1269, 1276, 1281, 1283, 1343, 1344, 1345, 1346, 1363, 1418, 1421, 1437, 1438, 1439, 1474, 1485, 1486, 1487, 1523, 1524, 1529, 1533, 1563, 1574, 1576, 1640, 1705, 1710, 1711, 1713, 1722, 1723, 1724, 1725, 1728, 1733, 1735, 1739, 1740, 1741, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1758, 1762, 1765, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1807, 1831, 1841, 1842, 1846, 1847, 1848, 1854, 1855, 1859, 1864, 1865, 1874, 1876, 1887, 1889, 1891, 1913, 1914, 1917, 1935, 1937, 1938, 1954, 1956, 1960, 1971, 1972, 1973, 1979, 2008, 2009, 2010, 2012, 2013, 2020, 2021, 2023, 2029, 2030, 2031, 2032, 2033, 2039, 2042, 2044, 2045, 2049, 2050, 2051, 2052, 2053, 2055, 2056, 2057, 2059, 2061, 2063, 2064, 2066, 2067, 2070, 2074, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2088, 2093, 2095, 2096, 2097, 2099, 2107, 2108], "version": [0, 1, 2, 5, 8, 12, 14, 21, 23, 27, 29, 34, 46, 50, 53, 56, 57, 62, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 121, 123, 125, 127, 130, 131, 133, 141, 143, 146, 147, 149, 152, 158, 160, 162, 164, 166, 168, 177, 186, 194, 198, 201, 203, 213, 215, 231, 236, 238, 244, 247, 249, 251, 253, 257, 262, 269, 271, 273, 277, 279, 283, 285, 292, 294, 296, 304, 306, 308, 310, 312, 314, 316, 318, 356, 358, 360, 362, 364, 366, 368, 371, 373, 375, 376, 383, 385, 387, 389, 391, 395, 399, 401, 420, 423, 426, 428, 439, 441, 443, 451, 456, 466, 469, 485, 490, 492, 508, 511, 512, 513, 514, 516, 522, 527, 529, 532, 534, 536, 549, 551, 553, 556, 562, 564, 571, 575, 577, 593, 596, 598, 600, 602, 612, 622, 735, 736, 737, 749, 750, 751, 752, 753, 754, 775, 776, 777, 778, 780, 784, 785, 804, 805, 806, 839, 848, 856, 857, 859, 916, 927, 987, 1051, 1163, 1188, 1190, 1199, 1227, 1266, 1269, 1272, 1273, 1277, 1280, 1299, 1306, 1310, 1312, 1313, 1317, 1318, 1330, 1331, 1364, 1418, 1436, 1493, 1523, 1524, 1539, 1576, 1594, 1619, 1629, 1636, 1645, 1677, 1680, 1695, 1696, 1700, 1704, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1762, 1763, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1856, 1857, 1858, 1915, 1918, 1919, 1920, 1924, 1945, 1959, 1961, 1968, 1969, 2008, 2030, 2031, 2039, 2040, 2042, 2044, 2045, 2047, 2048, 2049, 2050, 2051, 2052, 2055, 2057, 2059, 2061, 2063, 2064, 2066, 2070, 2077, 2084, 2086, 2090, 2095, 2099, 2100, 2106, 2108, 2110], "1": [0, 1, 2, 3, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 45, 49, 50, 51, 53, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 136, 151, 152, 173, 191, 205, 208, 225, 227, 228, 229, 233, 242, 254, 258, 263, 286, 289, 311, 312, 313, 315, 317, 321, 352, 377, 401, 402, 445, 447, 448, 454, 471, 481, 483, 487, 488, 493, 496, 499, 513, 515, 517, 537, 538, 542, 544, 554, 555, 556, 558, 560, 561, 562, 563, 564, 581, 583, 584, 585, 587, 588, 607, 608, 615, 617, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 712, 713, 714, 715, 716, 717, 718, 719, 723, 724, 725, 726, 727, 730, 731, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 751, 752, 753, 756, 757, 758, 760, 770, 772, 773, 774, 775, 778, 782, 783, 785, 796, 808, 809, 819, 820, 821, 822, 825, 827, 856, 862, 863, 866, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 895, 896, 901, 902, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 916, 917, 925, 926, 929, 936, 938, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 971, 972, 974, 984, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1000, 1005, 1017, 1048, 1049, 1064, 1069, 1076, 1080, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1184, 1188, 1194, 1210, 1211, 1212, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1240, 1241, 1244, 1246, 1254, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1273, 1275, 1280, 1281, 1285, 1286, 1289, 1290, 1291, 1293, 1294, 1295, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1315, 1316, 1317, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1347, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1389, 1392, 1408, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1562, 1563, 1566, 1567, 1569, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1594, 1596, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1631, 1633, 1635, 1636, 1637, 1638, 1639, 1647, 1649, 1654, 1655, 1656, 1662, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1674, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1688, 1689, 1691, 1696, 1697, 1698, 1699, 1700, 1703, 1712, 1713, 1720, 1721, 1727, 1728, 1729, 1733, 1738, 1739, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1814, 1816, 1817, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1859, 1862, 1863, 1864, 1865, 1866, 1868, 1871, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 2011, 2012, 2013, 2014, 2017, 2020, 2021, 2022, 2023, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2048, 2049, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2069, 2072, 2073, 2074, 2076, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2086, 2088, 2090, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2106, 2107, 2108, 2109, 2112], "10": [0, 1, 3, 12, 21, 22, 23, 27, 28, 32, 34, 35, 45, 48, 50, 64, 69, 72, 73, 313, 321, 335, 471, 513, 560, 581, 583, 584, 585, 685, 686, 697, 734, 745, 746, 760, 761, 762, 763, 765, 941, 953, 963, 966, 967, 971, 987, 995, 1085, 1086, 1087, 1088, 1089, 1104, 1106, 1123, 1125, 1128, 1129, 1131, 1132, 1135, 1136, 1138, 1139, 1141, 1143, 1149, 1157, 1158, 1211, 1223, 1233, 1258, 1274, 1280, 1281, 1287, 1292, 1295, 1322, 1324, 1325, 1340, 1342, 1344, 1349, 1351, 1352, 1353, 1354, 1356, 1364, 1409, 1425, 1426, 1427, 1429, 1430, 1436, 1439, 1442, 1443, 1449, 1452, 1455, 1465, 1466, 1474, 1475, 1476, 1477, 1487, 1493, 1494, 1495, 1520, 1524, 1525, 1530, 1533, 1534, 1539, 1541, 1563, 1567, 1568, 1569, 1570, 1571, 1575, 1581, 1606, 1609, 1613, 1620, 1621, 1631, 1703, 1713, 1720, 1721, 1744, 1752, 1766, 1769, 1775, 1779, 1799, 1805, 1807, 1825, 1826, 1834, 1859, 1867, 1871, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1896, 1912, 1924, 1925, 1936, 1940, 1941, 1944, 1946, 1959, 1961, 1974, 2008, 2010, 2011, 2012, 2013, 2014, 2017, 2020, 2022, 2039, 2042, 2043, 2044, 2047, 2051, 2054, 2055, 2056, 2057, 2059, 2060, 2061, 2062, 2067, 2076, 2077, 2078, 2080, 2082, 2083, 2084, 2090, 2093, 2094, 2096, 2097, 2099, 2101, 2106, 2108, 2112], "autocast_mod": 0, "is_autocast_avail": 0, "device_typ": [0, 1, 27, 2011, 2017, 2038, 2071], "sourc": [0, 1, 2, 3, 4, 5, 9, 13, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 47, 48, 50, 51, 53, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 150, 196, 209, 233, 312, 313, 321, 340, 351, 396, 401, 402, 415, 416, 417, 453, 471, 487, 488, 513, 515, 517, 520, 524, 547, 556, 557, 559, 586, 603, 606, 609, 610, 624, 680, 695, 696, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 836, 837, 838, 839, 840, 841, 842, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 887, 888, 889, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 936, 937, 939, 940, 952, 954, 955, 959, 961, 963, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1106, 1110, 1157, 1160, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1215, 1217, 1218, 1219, 1222, 1241, 1242, 1243, 1245, 1250, 1255, 1256, 1257, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1341, 1342, 1362, 1371, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1587, 1589, 1590, 1594, 1595, 1599, 1601, 1602, 1603, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1626, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1650, 1651, 1652, 1653, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1673, 1675, 1676, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1691, 1692, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1830, 1855, 1860, 1863, 1864, 1865, 1866, 1867, 1871, 1872, 1873, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1898, 1899, 1905, 1912, 1920, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1941, 1959, 1961, 1962, 1963, 1964, 1965, 1966, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2008, 2010, 2011, 2012, 2017, 2019, 2020, 2023, 2024, 2025, 2026, 2029, 2031, 2032, 2037, 2046, 2049, 2050, 2054, 2056, 2059, 2061, 2063, 2065, 2066, 2067, 2071, 2072, 2073, 2079, 2082, 2084, 2086, 2087, 2088, 2096, 2097, 2099, 2100, 2108, 2109, 2110], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 119, 153, 155, 170, 172, 175, 178, 179, 180, 190, 191, 195, 196, 206, 208, 209, 216, 218, 219, 221, 232, 233, 240, 242, 254, 260, 267, 289, 297, 311, 319, 323, 325, 326, 328, 329, 330, 331, 333, 337, 339, 341, 352, 377, 393, 415, 435, 445, 446, 447, 448, 449, 458, 472, 473, 474, 475, 476, 478, 483, 487, 488, 496, 497, 498, 513, 515, 523, 525, 537, 543, 544, 556, 557, 558, 559, 560, 580, 581, 582, 583, 589, 603, 604, 607, 609, 613, 614, 617, 684, 692, 693, 695, 696, 697, 698, 699, 735, 766, 767, 770, 771, 775, 776, 777, 778, 781, 784, 791, 792, 793, 794, 814, 815, 816, 817, 836, 840, 841, 842, 855, 856, 857, 858, 860, 861, 862, 863, 864, 865, 866, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 925, 926, 929, 933, 934, 935, 937, 938, 939, 940, 942, 943, 944, 951, 952, 954, 957, 959, 961, 962, 963, 964, 966, 967, 968, 970, 972, 973, 974, 975, 976, 978, 980, 981, 982, 987, 988, 989, 991, 992, 993, 995, 998, 999, 1000, 1001, 1003, 1005, 1006, 1008, 1009, 1011, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1100, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1180, 1182, 1184, 1191, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1208, 1212, 1213, 1215, 1217, 1218, 1219, 1220, 1221, 1222, 1226, 1227, 1228, 1230, 1231, 1232, 1236, 1240, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1266, 1267, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1294, 1295, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1349, 1350, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1378, 1379, 1380, 1382, 1383, 1389, 1397, 1398, 1399, 1401, 1403, 1404, 1406, 1409, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1423, 1427, 1428, 1429, 1430, 1435, 1436, 1456, 1457, 1458, 1459, 1466, 1470, 1471, 1482, 1488, 1489, 1513, 1514, 1515, 1516, 1517, 1518, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1533, 1534, 1537, 1538, 1539, 1552, 1555, 1556, 1557, 1558, 1559, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1599, 1601, 1602, 1603, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1675, 1676, 1678, 1679, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1694, 1696, 1697, 1698, 1699, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1814, 1816, 1819, 1820, 1821, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1852, 1854, 1859, 1860, 1861, 1862, 1868, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1896, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1919, 1920, 1923, 1924, 1925, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1943, 1944, 1945, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1963, 1964, 1967, 1969, 1971, 1972, 1973, 1976, 1978, 1979, 1981, 1982, 1984, 1987, 1988, 1989, 1990, 1991, 1993, 1994, 1995, 2004, 2006, 2007, 2008, 2010, 2014, 2017, 2023, 2024, 2025, 2026, 2029, 2031, 2032, 2037, 2038, 2039, 2041, 2042, 2044, 2045, 2048, 2049, 2050, 2051, 2054, 2055, 2056, 2057, 2059, 2060, 2061, 2063, 2064, 2065, 2066, 2067, 2071, 2072, 2073, 2076, 2077, 2078, 2079, 2080, 2081, 2083, 2084, 2086, 2087, 2088, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2106, 2107, 2108, 2109, 2110, 2112], "bool": [0, 1, 2, 3, 5, 12, 14, 22, 23, 26, 27, 28, 29, 31, 33, 34, 36, 39, 45, 48, 50, 51, 53, 60, 61, 62, 150, 196, 209, 245, 260, 319, 321, 328, 329, 330, 331, 333, 334, 339, 341, 401, 402, 415, 445, 446, 447, 448, 449, 458, 471, 496, 517, 581, 603, 680, 693, 694, 695, 696, 697, 699, 735, 758, 779, 780, 785, 794, 814, 841, 866, 874, 875, 876, 877, 881, 894, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 929, 942, 945, 947, 948, 950, 951, 957, 958, 964, 965, 966, 972, 973, 974, 980, 981, 987, 1001, 1008, 1009, 1011, 1015, 1045, 1051, 1063, 1107, 1108, 1109, 1112, 1119, 1124, 1142, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1168, 1169, 1170, 1174, 1177, 1178, 1182, 1184, 1198, 1199, 1201, 1202, 1208, 1210, 1227, 1228, 1231, 1232, 1250, 1254, 1257, 1258, 1260, 1266, 1269, 1273, 1276, 1277, 1285, 1286, 1289, 1291, 1299, 1300, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1322, 1324, 1326, 1327, 1330, 1331, 1332, 1333, 1339, 1340, 1341, 1342, 1351, 1352, 1353, 1354, 1356, 1357, 1359, 1361, 1367, 1369, 1370, 1372, 1375, 1382, 1385, 1386, 1403, 1409, 1414, 1415, 1416, 1417, 1418, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1470, 1471, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1514, 1515, 1516, 1517, 1518, 1523, 1526, 1527, 1528, 1529, 1530, 1532, 1537, 1538, 1541, 1542, 1543, 1544, 1551, 1555, 1556, 1563, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1584, 1585, 1586, 1594, 1601, 1602, 1612, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1626, 1629, 1631, 1633, 1640, 1641, 1665, 1673, 1681, 1700, 1706, 1712, 1713, 1714, 1718, 1719, 1722, 1723, 1725, 1727, 1730, 1732, 1733, 1734, 1755, 1756, 1757, 1758, 1760, 1763, 1768, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1813, 1819, 1821, 1823, 1824, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1859, 1864, 1868, 1873, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1896, 1906, 1907, 1908, 1909, 1910, 1911, 1918, 1919, 1920, 1923, 1924, 1933, 1939, 1943, 1948, 1957, 1958, 1961, 1962, 1964, 1967, 1968, 1969, 1978, 1979, 1994, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2017, 2024, 2026, 2029, 2030, 2031, 2032, 2049, 2056, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2071, 2072, 2077, 2079, 2080, 2082, 2083, 2084, 2086, 2088, 2095, 2099, 2103, 2107, 2109], "indic": [0, 1, 2, 3, 12, 22, 23, 27, 28, 29, 33, 34, 45, 50, 51, 80, 83, 84, 191, 208, 313, 315, 317, 318, 319, 321, 471, 513, 515, 517, 544, 572, 573, 583, 614, 695, 696, 735, 745, 746, 799, 824, 875, 876, 877, 878, 879, 901, 903, 906, 920, 921, 957, 964, 965, 966, 978, 979, 980, 981, 987, 1001, 1006, 1008, 1009, 1011, 1045, 1051, 1085, 1086, 1109, 1165, 1166, 1168, 1169, 1170, 1174, 1175, 1184, 1210, 1223, 1244, 1267, 1269, 1274, 1283, 1286, 1287, 1291, 1300, 1311, 1313, 1324, 1327, 1341, 1349, 1357, 1359, 1361, 1367, 1370, 1372, 1375, 1382, 1409, 1415, 1419, 1427, 1428, 1429, 1430, 1458, 1465, 1466, 1470, 1471, 1517, 1518, 1519, 1520, 1521, 1526, 1528, 1529, 1591, 1592, 1593, 1612, 1620, 1621, 1624, 1625, 1641, 1657, 1658, 1659, 1667, 1681, 1696, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1747, 1748, 1767, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1803, 1805, 1824, 1859, 1896, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1935, 1936, 1940, 1943, 1949, 1950, 1951, 1952, 1957, 1958, 1959, 1961, 1962, 1964, 1973, 1976, 1978, 1979, 1994, 2010, 2011, 2013, 2017, 2030, 2031, 2044, 2053, 2056, 2061, 2062, 2072, 2077, 2081, 2082, 2084, 2100, 2103, 2108], "avail": [0, 1, 2, 5, 8, 9, 14, 15, 19, 22, 27, 29, 32, 36, 45, 46, 51, 82, 83, 1001, 1028, 1030, 1031, 1042, 1045, 1052, 1053, 1073, 1074, 1076, 1106, 1200, 1276, 1333, 1334, 1359, 1379, 1401, 1403, 1567, 1576, 1582, 1640, 1681, 1700, 1813, 1867, 1920, 1925, 1961, 1964, 1984, 1986, 1994, 1996, 1997, 1998, 1999, 2008, 2009, 2010, 2012, 2013, 2017, 2020, 2029, 2039, 2042, 2044, 2049, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2066, 2067, 2068, 2072, 2088, 2089, 2097, 2101, 2108, 2109], "paramet": [0, 1, 2, 3, 5, 11, 12, 14, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 43, 45, 48, 50, 51, 53, 55, 57, 60, 61, 62, 64, 88, 150, 155, 170, 172, 173, 175, 178, 179, 180, 195, 196, 206, 209, 233, 240, 254, 255, 260, 267, 297, 313, 315, 317, 319, 321, 325, 331, 393, 400, 402, 415, 445, 446, 447, 448, 449, 458, 471, 493, 496, 497, 498, 499, 500, 513, 515, 517, 520, 525, 537, 544, 545, 546, 560, 566, 583, 584, 585, 587, 588, 603, 604, 607, 617, 618, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 750, 755, 756, 758, 759, 760, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 791, 793, 795, 797, 799, 800, 801, 814, 819, 820, 821, 822, 823, 824, 825, 826, 827, 838, 839, 840, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 894, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 930, 932, 933, 936, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 970, 971, 972, 973, 975, 976, 979, 982, 984, 987, 988, 989, 990, 991, 992, 993, 994, 995, 999, 1004, 1005, 1006, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1027, 1029, 1033, 1034, 1035, 1037, 1040, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1182, 1184, 1191, 1193, 1202, 1208, 1210, 1211, 1212, 1213, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1240, 1244, 1246, 1248, 1249, 1251, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1276, 1277, 1280, 1281, 1282, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1392, 1396, 1398, 1399, 1400, 1405, 1406, 1408, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1555, 1556, 1557, 1559, 1560, 1561, 1563, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1624, 1625, 1626, 1628, 1629, 1631, 1633, 1640, 1641, 1648, 1654, 1655, 1656, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1681, 1687, 1688, 1696, 1700, 1701, 1702, 1703, 1706, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1814, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1894, 1896, 1897, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1928, 1929, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1978, 1979, 1980, 1982, 1983, 1985, 1987, 1988, 1989, 1990, 1996, 1997, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2013, 2015, 2017, 2021, 2023, 2024, 2029, 2031, 2032, 2033, 2037, 2038, 2039, 2042, 2043, 2044, 2047, 2049, 2050, 2051, 2053, 2055, 2056, 2059, 2061, 2064, 2065, 2066, 2067, 2071, 2072, 2073, 2077, 2078, 2079, 2082, 2084, 2087, 2088, 2090, 2099, 2107, 2109, 2110], "str": [0, 1, 2, 3, 5, 14, 22, 23, 27, 29, 31, 32, 33, 34, 36, 39, 43, 45, 48, 50, 51, 53, 62, 321, 513, 517, 603, 779, 785, 792, 793, 794, 815, 816, 817, 855, 909, 911, 923, 930, 932, 936, 961, 973, 982, 998, 1006, 1018, 1019, 1020, 1022, 1031, 1032, 1034, 1035, 1036, 1040, 1048, 1049, 1050, 1062, 1063, 1065, 1066, 1068, 1080, 1101, 1106, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1158, 1163, 1164, 1168, 1173, 1175, 1176, 1182, 1184, 1219, 1267, 1268, 1269, 1270, 1272, 1273, 1276, 1279, 1315, 1328, 1333, 1334, 1341, 1342, 1371, 1385, 1386, 1416, 1435, 1436, 1442, 1450, 1451, 1452, 1456, 1458, 1466, 1472, 1476, 1482, 1483, 1488, 1489, 1499, 1500, 1501, 1514, 1515, 1523, 1524, 1526, 1527, 1528, 1530, 1533, 1537, 1538, 1541, 1552, 1555, 1556, 1567, 1569, 1571, 1572, 1573, 1574, 1576, 1601, 1602, 1612, 1613, 1621, 1626, 1629, 1640, 1641, 1665, 1668, 1673, 1700, 1712, 1713, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1762, 1763, 1765, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 1807, 1824, 1855, 1859, 1866, 1867, 1901, 1920, 1963, 1964, 1973, 1983, 1987, 1988, 1989, 2000, 2008, 2010, 2011, 2012, 2013, 2014, 2017, 2023, 2024, 2026, 2029, 2031, 2037, 2039, 2056, 2059, 2061, 2062, 2063, 2064, 2065, 2066, 2071, 2072, 2079, 2082, 2084, 2087, 2088, 2096, 2103, 2107, 2109, 2110], "devic": [0, 1, 2, 5, 8, 14, 16, 18, 19, 22, 23, 27, 28, 29, 31, 32, 33, 46, 48, 51, 53, 57, 60, 61, 62, 64, 69, 73, 74, 75, 88, 196, 206, 209, 289, 313, 321, 335, 445, 446, 447, 448, 449, 515, 517, 580, 686, 689, 723, 724, 725, 726, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 749, 750, 751, 752, 753, 754, 755, 866, 878, 880, 881, 909, 911, 938, 941, 942, 944, 951, 953, 978, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1029, 1033, 1034, 1035, 1037, 1038, 1046, 1048, 1049, 1050, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1082, 1083, 1084, 1107, 1108, 1109, 1119, 1124, 1142, 1158, 1161, 1162, 1182, 1215, 1218, 1227, 1228, 1269, 1273, 1277, 1280, 1283, 1289, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1316, 1317, 1318, 1324, 1327, 1328, 1330, 1331, 1333, 1334, 1340, 1341, 1356, 1359, 1362, 1364, 1370, 1374, 1379, 1382, 1383, 1389, 1390, 1391, 1396, 1397, 1398, 1399, 1401, 1403, 1407, 1427, 1437, 1438, 1439, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1465, 1466, 1474, 1475, 1477, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1523, 1529, 1531, 1538, 1539, 1540, 1541, 1563, 1567, 1569, 1571, 1583, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1621, 1640, 1646, 1681, 1696, 1700, 1701, 1702, 1703, 1712, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1754, 1761, 1767, 1769, 1772, 1773, 1783, 1823, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1860, 1863, 1867, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1901, 1902, 1906, 1907, 1908, 1909, 1910, 1911, 1924, 1939, 1941, 1950, 1952, 1961, 1962, 1964, 1978, 1979, 1980, 1981, 1982, 1984, 1985, 1987, 1988, 1989, 1990, 1991, 2000, 2001, 2002, 2005, 2006, 2007, 2009, 2010, 2011, 2012, 2013, 2015, 2017, 2023, 2030, 2032, 2038, 2043, 2044, 2045, 2046, 2047, 2049, 2051, 2052, 2053, 2055, 2056, 2059, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2071, 2072, 2077, 2079, 2083, 2084, 2090, 2093, 2096, 2097, 2098, 2099, 2101, 2103, 2105, 2106, 2108, 2110], "possibl": [0, 2, 9, 14, 15, 18, 27, 29, 34, 50, 57, 58, 62, 497, 498, 580, 617, 859, 880, 881, 967, 973, 1015, 1107, 1108, 1109, 1154, 1167, 1183, 1194, 1196, 1197, 1269, 1283, 1310, 1323, 1326, 1327, 1330, 1335, 1341, 1436, 1442, 1523, 1529, 1620, 1621, 1640, 1674, 1700, 1733, 1734, 1843, 1846, 1861, 1912, 1920, 1939, 2010, 2012, 2013, 2017, 2025, 2029, 2030, 2037, 2039, 2041, 2042, 2043, 2044, 2047, 2048, 2053, 2054, 2055, 2057, 2064, 2067, 2072, 2074, 2080, 2084, 2089, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2104, 2108], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 18, 19, 22, 23, 24, 26, 28, 29, 31, 32, 34, 36, 37, 39, 42, 43, 45, 46, 50, 51, 53, 55, 58, 60, 61, 62, 64, 66, 69, 73, 75, 88, 101, 102, 103, 104, 119, 150, 154, 235, 236, 237, 238, 254, 259, 260, 272, 273, 299, 311, 313, 315, 316, 317, 318, 319, 321, 323, 326, 352, 399, 400, 415, 419, 420, 422, 423, 471, 481, 483, 499, 513, 515, 517, 537, 544, 560, 583, 584, 585, 587, 588, 599, 600, 680, 681, 684, 687, 688, 691, 695, 696, 697, 735, 756, 764, 770, 771, 779, 784, 785, 787, 793, 795, 796, 799, 802, 819, 820, 821, 822, 825, 826, 827, 855, 860, 866, 875, 876, 877, 881, 886, 890, 892, 894, 895, 899, 900, 901, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 929, 938, 940, 942, 943, 944, 949, 951, 957, 961, 965, 966, 968, 979, 990, 991, 994, 1009, 1039, 1048, 1049, 1062, 1076, 1085, 1086, 1089, 1097, 1098, 1107, 1108, 1109, 1111, 1120, 1121, 1123, 1125, 1127, 1128, 1129, 1134, 1136, 1137, 1138, 1139, 1140, 1149, 1154, 1161, 1163, 1164, 1165, 1166, 1170, 1171, 1173, 1174, 1177, 1178, 1179, 1182, 1183, 1184, 1186, 1188, 1192, 1194, 1196, 1197, 1198, 1200, 1201, 1202, 1210, 1212, 1217, 1219, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1240, 1254, 1259, 1260, 1261, 1262, 1265, 1266, 1267, 1269, 1270, 1272, 1276, 1277, 1285, 1288, 1290, 1291, 1294, 1298, 1299, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1312, 1313, 1314, 1315, 1319, 1322, 1324, 1326, 1327, 1329, 1333, 1334, 1339, 1340, 1341, 1342, 1345, 1350, 1356, 1358, 1359, 1362, 1367, 1369, 1370, 1372, 1375, 1389, 1392, 1409, 1413, 1414, 1415, 1416, 1419, 1420, 1423, 1427, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1464, 1465, 1466, 1467, 1469, 1476, 1477, 1478, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1508, 1509, 1510, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1537, 1538, 1552, 1555, 1557, 1558, 1559, 1560, 1561, 1563, 1566, 1567, 1569, 1571, 1572, 1573, 1575, 1576, 1584, 1585, 1586, 1601, 1602, 1604, 1605, 1606, 1611, 1612, 1621, 1622, 1626, 1629, 1631, 1640, 1641, 1642, 1654, 1655, 1656, 1665, 1666, 1667, 1668, 1670, 1673, 1681, 1694, 1695, 1700, 1702, 1703, 1705, 1707, 1710, 1711, 1712, 1713, 1719, 1727, 1728, 1730, 1731, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1747, 1748, 1754, 1757, 1758, 1761, 1763, 1767, 1768, 1772, 1773, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 1813, 1817, 1820, 1824, 1826, 1827, 1839, 1841, 1843, 1844, 1845, 1850, 1851, 1852, 1859, 1862, 1871, 1874, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1896, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1920, 1924, 1925, 1936, 1940, 1943, 1946, 1949, 1950, 1951, 1952, 1954, 1957, 1958, 1960, 1976, 2006, 2007, 2008, 2009, 2010, 2011, 2014, 2017, 2020, 2021, 2024, 2026, 2029, 2032, 2037, 2038, 2039, 2041, 2042, 2044, 2045, 2046, 2048, 2049, 2051, 2053, 2055, 2056, 2059, 2061, 2062, 2063, 2064, 2066, 2067, 2070, 2071, 2072, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2088, 2093, 2095, 2096, 2097, 2099, 2102, 2103, 2107, 2108], "xpu": [0, 1, 1218, 1269, 1523, 1978, 1979, 1980, 1983, 1985, 2009, 2017, 2066, 2080], "so": [0, 1, 2, 3, 7, 9, 14, 17, 22, 23, 26, 27, 28, 29, 31, 32, 34, 35, 37, 38, 45, 46, 49, 50, 51, 53, 56, 57, 58, 61, 62, 64, 74, 75, 335, 458, 486, 496, 680, 860, 896, 901, 904, 906, 909, 910, 915, 927, 970, 973, 978, 1007, 1030, 1094, 1096, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1157, 1160, 1163, 1167, 1168, 1170, 1171, 1181, 1182, 1184, 1195, 1197, 1208, 1256, 1266, 1269, 1272, 1273, 1279, 1281, 1283, 1325, 1327, 1337, 1342, 1347, 1359, 1381, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1466, 1469, 1476, 1523, 1540, 1557, 1559, 1575, 1585, 1586, 1594, 1604, 1605, 1606, 1629, 1687, 1688, 1703, 1713, 1767, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1888, 1903, 1915, 1920, 1924, 1945, 1957, 1962, 1967, 1986, 2010, 2012, 2013, 2019, 2021, 2023, 2025, 2026, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2061, 2063, 2064, 2065, 2067, 2071, 2072, 2077, 2078, 2080, 2082, 2083, 2086, 2090, 2093, 2095, 2096, 2098, 2099, 2100, 2102, 2104, 2106, 2107, 2108, 2110, 2114], "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 14, 15, 18, 19, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 64, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 150, 191, 196, 208, 209, 221, 233, 255, 290, 311, 313, 315, 319, 321, 398, 400, 401, 402, 448, 458, 483, 486, 487, 488, 493, 495, 498, 499, 513, 515, 517, 537, 544, 583, 603, 617, 618, 680, 684, 687, 688, 689, 690, 694, 695, 696, 697, 735, 748, 757, 760, 766, 767, 768, 769, 772, 773, 774, 779, 780, 782, 783, 785, 786, 787, 792, 793, 794, 795, 799, 802, 815, 817, 819, 820, 821, 822, 825, 827, 837, 838, 855, 860, 865, 878, 879, 881, 885, 886, 890, 891, 893, 894, 896, 899, 900, 906, 907, 909, 910, 912, 913, 914, 915, 920, 921, 925, 926, 929, 932, 934, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 958, 959, 972, 976, 979, 984, 987, 991, 995, 1008, 1014, 1021, 1037, 1048, 1049, 1051, 1052, 1053, 1062, 1076, 1077, 1078, 1083, 1089, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1106, 1107, 1111, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1154, 1156, 1157, 1159, 1160, 1161, 1164, 1167, 1170, 1173, 1174, 1175, 1179, 1181, 1182, 1188, 1189, 1193, 1208, 1212, 1213, 1222, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1236, 1240, 1244, 1245, 1246, 1266, 1269, 1272, 1274, 1277, 1280, 1281, 1283, 1285, 1286, 1289, 1290, 1294, 1295, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1319, 1322, 1324, 1325, 1326, 1327, 1328, 1329, 1332, 1333, 1334, 1336, 1339, 1341, 1342, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1370, 1378, 1380, 1383, 1384, 1385, 1386, 1389, 1390, 1409, 1415, 1418, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1465, 1466, 1467, 1469, 1470, 1471, 1474, 1475, 1476, 1477, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1513, 1514, 1515, 1516, 1517, 1518, 1523, 1526, 1528, 1530, 1537, 1538, 1539, 1540, 1541, 1542, 1552, 1553, 1555, 1563, 1566, 1567, 1572, 1573, 1575, 1576, 1582, 1584, 1585, 1586, 1594, 1597, 1598, 1612, 1613, 1620, 1621, 1622, 1624, 1625, 1628, 1629, 1631, 1640, 1641, 1647, 1654, 1655, 1656, 1668, 1681, 1684, 1700, 1703, 1705, 1706, 1707, 1710, 1711, 1712, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1727, 1728, 1729, 1731, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1747, 1748, 1751, 1757, 1761, 1762, 1765, 1767, 1768, 1769, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1814, 1817, 1820, 1823, 1828, 1829, 1830, 1832, 1834, 1836, 1841, 1843, 1845, 1847, 1848, 1850, 1852, 1855, 1862, 1863, 1864, 1865, 1867, 1871, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1898, 1899, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1918, 1919, 1920, 1924, 1925, 1935, 1941, 1942, 1943, 1945, 1946, 1949, 1950, 1951, 1952, 1959, 1960, 1961, 1964, 1967, 1968, 1969, 1971, 1973, 1976, 1978, 1990, 1996, 1997, 2001, 2002, 2008, 2010, 2011, 2012, 2014, 2015, 2017, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2028, 2029, 2030, 2031, 2032, 2033, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2063, 2064, 2065, 2066, 2067, 2070, 2071, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2087, 2089, 2090, 2092, 2093, 2094, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2105, 2106, 2107, 2108, 2110, 2112], "same": [0, 1, 3, 7, 11, 12, 14, 15, 17, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 42, 43, 45, 46, 48, 49, 50, 51, 53, 56, 58, 61, 62, 64, 72, 73, 139, 153, 195, 221, 255, 311, 313, 315, 319, 321, 339, 445, 446, 447, 448, 449, 471, 483, 486, 497, 498, 500, 513, 515, 517, 520, 544, 580, 617, 618, 686, 689, 693, 695, 696, 697, 699, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 745, 746, 756, 758, 761, 762, 763, 764, 765, 779, 785, 788, 789, 793, 794, 796, 800, 802, 814, 819, 822, 824, 825, 860, 862, 879, 880, 881, 893, 899, 901, 903, 906, 907, 909, 910, 911, 912, 913, 914, 920, 921, 941, 943, 944, 953, 955, 957, 960, 965, 966, 967, 973, 976, 984, 987, 1005, 1006, 1008, 1019, 1021, 1040, 1051, 1089, 1094, 1096, 1097, 1103, 1106, 1108, 1109, 1112, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1154, 1159, 1160, 1162, 1163, 1164, 1167, 1168, 1169, 1170, 1173, 1174, 1175, 1192, 1210, 1213, 1223, 1231, 1232, 1240, 1244, 1260, 1266, 1269, 1275, 1280, 1281, 1285, 1286, 1290, 1291, 1299, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1337, 1357, 1361, 1363, 1364, 1367, 1369, 1370, 1371, 1372, 1375, 1414, 1417, 1418, 1419, 1425, 1426, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1469, 1472, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1495, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1531, 1532, 1537, 1538, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1575, 1576, 1579, 1580, 1581, 1594, 1600, 1601, 1602, 1604, 1605, 1606, 1612, 1621, 1629, 1631, 1640, 1641, 1681, 1700, 1708, 1709, 1712, 1713, 1720, 1721, 1727, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1754, 1758, 1763, 1768, 1769, 1773, 1776, 1807, 1811, 1816, 1817, 1820, 1821, 1833, 1835, 1837, 1841, 1843, 1845, 1846, 1850, 1852, 1859, 1862, 1863, 1867, 1874, 1879, 1897, 1906, 1907, 1908, 1910, 1911, 1917, 1918, 1919, 1923, 1924, 1935, 1946, 1957, 1958, 1959, 1960, 1961, 1968, 1969, 1970, 1973, 1978, 2007, 2008, 2010, 2012, 2013, 2017, 2021, 2026, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2054, 2055, 2056, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2070, 2072, 2073, 2074, 2077, 2079, 2080, 2081, 2082, 2083, 2084, 2087, 2088, 2092, 2093, 2094, 2095, 2096, 2098, 2099, 2104, 2106, 2107, 2108, 2109], "attribut": [0, 1, 11, 12, 22, 23, 27, 28, 35, 51, 62, 64, 66, 71, 80, 85, 150, 290, 495, 496, 727, 738, 739, 740, 741, 742, 743, 745, 746, 756, 764, 791, 801, 802, 815, 816, 817, 838, 839, 840, 859, 860, 890, 894, 899, 901, 904, 906, 907, 1157, 1182, 1266, 1268, 1269, 1270, 1272, 1273, 1275, 1280, 1281, 1342, 1459, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1523, 1567, 1713, 1714, 1733, 1734, 1755, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1920, 1961, 1962, 1965, 2009, 2011, 2014, 2017, 2025, 2032, 2038, 2039, 2042, 2044, 2045, 2051, 2056, 2061, 2064, 2067, 2072, 2083, 2084, 2099, 2107, 2109, 2112], "thu": [0, 1, 11, 22, 27, 32, 34, 46, 51, 53, 62, 785, 822, 825, 855, 1106, 1127, 1333, 1364, 1462, 1576, 1700, 1713, 1780, 1781, 1791, 1793, 1909, 2010, 2013, 2020, 2023, 2039, 2041, 2044, 2046, 2048, 2050, 2051, 2061, 2067, 2072, 2077, 2081, 2083, 2084], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 21, 22, 23, 27, 31, 32, 33, 34, 36, 37, 42, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 66, 74, 75, 82, 83, 150, 254, 335, 448, 486, 488, 499, 680, 689, 734, 735, 748, 757, 781, 890, 891, 892, 893, 894, 901, 903, 904, 906, 907, 909, 910, 911, 915, 916, 927, 955, 973, 1006, 1029, 1040, 1042, 1051, 1052, 1073, 1106, 1163, 1164, 1167, 1168, 1169, 1170, 1175, 1179, 1182, 1183, 1184, 1193, 1197, 1269, 1273, 1274, 1282, 1285, 1286, 1287, 1315, 1333, 1341, 1364, 1371, 1374, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1493, 1519, 1520, 1521, 1523, 1528, 1529, 1530, 1539, 1558, 1567, 1569, 1571, 1576, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1640, 1646, 1681, 1699, 1700, 1703, 1713, 1728, 1755, 1763, 1765, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1805, 1823, 1846, 1855, 1863, 1906, 1907, 1908, 1910, 1911, 1915, 1962, 1964, 1973, 1985, 1996, 1998, 2008, 2010, 2012, 2013, 2015, 2017, 2020, 2021, 2023, 2025, 2026, 2029, 2030, 2032, 2037, 2038, 2039, 2040, 2042, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2073, 2074, 2077, 2080, 2081, 2082, 2083, 2084, 2086, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2114], "obtain": [0, 3, 22, 27, 34, 38, 61, 62, 88, 496, 1213, 1389, 1442, 1530, 1613, 1713, 1784, 1790, 1813, 1830, 1925, 2013, 2029, 2030, 2041, 2055, 2061, 2063, 2066, 2067, 2106], "tensor": [0, 2, 5, 7, 8, 12, 14, 17, 18, 22, 23, 26, 27, 28, 29, 31, 32, 34, 35, 51, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 88, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 720, 732, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 750, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 794, 798, 799, 800, 801, 802, 819, 820, 821, 822, 824, 825, 827, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 920, 921, 923, 925, 926, 927, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 978, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 1005, 1018, 1019, 1020, 1021, 1022, 1029, 1037, 1038, 1044, 1048, 1051, 1054, 1058, 1070, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1182, 1184, 1189, 1192, 1193, 1206, 1210, 1211, 1212, 1213, 1214, 1215, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1251, 1254, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1272, 1273, 1275, 1276, 1277, 1280, 1281, 1283, 1285, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1383, 1392, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1427, 1431, 1432, 1435, 1436, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1474, 1475, 1476, 1482, 1488, 1489, 1493, 1494, 1510, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1538, 1539, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1556, 1557, 1558, 1559, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1590, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1865, 1868, 1871, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1985, 1990, 1991, 2006, 2007, 2009, 2010, 2012, 2013, 2017, 2020, 2033, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2049, 2051, 2052, 2053, 2054, 2055, 2057, 2059, 2062, 2063, 2064, 2065, 2066, 2068, 2071, 2072, 2073, 2076, 2078, 2079, 2082, 2084, 2087, 2088, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2103, 2106, 2107, 2108, 2109, 2110], "class": [0, 1, 2, 3, 12, 15, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 42, 43, 45, 47, 48, 50, 51, 53, 58, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 557, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 836, 837, 838, 839, 840, 841, 842, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 895, 896, 901, 902, 903, 904, 905, 906, 907, 916, 917, 918, 928, 929, 936, 937, 938, 939, 940, 996, 997, 1006, 1007, 1008, 1009, 1011, 1012, 1027, 1029, 1040, 1081, 1110, 1173, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1267, 1268, 1269, 1272, 1274, 1275, 1276, 1280, 1281, 1284, 1285, 1286, 1287, 1382, 1394, 1395, 1396, 1400, 1406, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1602, 1612, 1620, 1665, 1667, 1681, 1703, 1712, 1713, 1714, 1715, 1716, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1754, 1761, 1766, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1830, 1899, 1962, 1978, 1979, 1980, 1983, 1985, 2009, 2011, 2014, 2017, 2020, 2025, 2026, 2029, 2031, 2033, 2034, 2038, 2039, 2042, 2044, 2045, 2046, 2047, 2051, 2053, 2056, 2059, 2065, 2066, 2067, 2069, 2070, 2072, 2073, 2076, 2077, 2079, 2080, 2082, 2084, 2086, 2087, 2088, 2090, 2094, 2095, 2096, 2097, 2099, 2104, 2106, 2107, 2108, 2109, 2110, 2112], "dtype": [0, 1, 5, 11, 12, 18, 20, 22, 23, 27, 29, 50, 51, 53, 60, 62, 64, 72, 73, 85, 153, 154, 191, 208, 212, 213, 214, 215, 242, 311, 313, 315, 317, 319, 321, 401, 402, 409, 429, 432, 445, 446, 447, 448, 449, 453, 458, 470, 481, 483, 513, 515, 565, 580, 581, 603, 617, 687, 689, 692, 693, 697, 699, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 760, 761, 764, 765, 772, 773, 774, 794, 795, 799, 819, 820, 821, 822, 823, 824, 825, 826, 827, 842, 859, 860, 862, 863, 866, 880, 881, 901, 902, 904, 906, 907, 909, 911, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 958, 965, 966, 984, 987, 988, 989, 995, 1005, 1021, 1087, 1088, 1107, 1108, 1109, 1119, 1123, 1124, 1125, 1131, 1132, 1142, 1149, 1154, 1156, 1158, 1159, 1160, 1161, 1162, 1182, 1216, 1227, 1228, 1240, 1269, 1273, 1283, 1289, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1351, 1352, 1353, 1354, 1356, 1359, 1360, 1364, 1368, 1369, 1370, 1373, 1374, 1409, 1413, 1414, 1415, 1417, 1427, 1436, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1465, 1466, 1469, 1474, 1475, 1477, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1523, 1529, 1530, 1531, 1538, 1539, 1540, 1541, 1545, 1546, 1547, 1548, 1549, 1563, 1567, 1569, 1571, 1575, 1576, 1577, 1578, 1583, 1584, 1585, 1586, 1596, 1612, 1613, 1640, 1646, 1648, 1681, 1687, 1688, 1703, 1712, 1715, 1716, 1720, 1721, 1730, 1733, 1734, 1754, 1768, 1772, 1773, 1774, 1776, 1811, 1817, 1821, 1822, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1849, 1852, 1864, 1865, 1867, 1868, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1895, 1898, 1900, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1923, 1924, 1936, 1939, 1950, 1952, 1957, 1961, 1962, 1964, 1971, 1972, 1976, 2006, 2007, 2009, 2010, 2011, 2012, 2013, 2015, 2017, 2020, 2031, 2032, 2042, 2044, 2051, 2054, 2059, 2061, 2062, 2067, 2068, 2069, 2077, 2078, 2079, 2082, 2083, 2084, 2097, 2098, 2099, 2103, 2108, 2112], "none": [0, 1, 2, 3, 5, 12, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 38, 42, 43, 45, 48, 50, 51, 53, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 88, 112, 114, 115, 116, 118, 134, 135, 138, 150, 153, 154, 156, 173, 185, 186, 187, 188, 204, 205, 207, 209, 212, 213, 214, 215, 229, 233, 235, 236, 237, 238, 258, 286, 290, 301, 335, 351, 354, 377, 407, 409, 410, 411, 414, 421, 427, 428, 429, 430, 431, 432, 445, 446, 447, 448, 449, 453, 454, 470, 479, 481, 487, 488, 494, 503, 513, 520, 537, 538, 552, 553, 555, 556, 565, 580, 581, 583, 588, 590, 603, 608, 609, 610, 615, 626, 628, 630, 632, 634, 636, 638, 640, 642, 644, 646, 648, 650, 652, 655, 657, 659, 660, 662, 664, 666, 668, 670, 672, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 749, 750, 751, 752, 753, 754, 755, 766, 767, 768, 769, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 793, 794, 795, 797, 799, 814, 817, 819, 820, 821, 822, 825, 826, 838, 839, 840, 858, 859, 860, 861, 862, 863, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 879, 880, 881, 882, 883, 884, 885, 886, 890, 891, 892, 893, 894, 896, 898, 899, 900, 901, 904, 905, 906, 907, 910, 912, 913, 914, 915, 920, 921, 925, 926, 936, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 957, 960, 962, 963, 964, 965, 966, 968, 969, 971, 973, 979, 984, 985, 986, 989, 990, 992, 993, 994, 995, 999, 1004, 1005, 1006, 1008, 1009, 1011, 1012, 1013, 1017, 1018, 1020, 1021, 1022, 1025, 1026, 1027, 1033, 1034, 1040, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1076, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1098, 1099, 1101, 1102, 1103, 1105, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1161, 1162, 1163, 1164, 1165, 1169, 1172, 1173, 1175, 1178, 1182, 1184, 1186, 1187, 1189, 1193, 1194, 1200, 1210, 1211, 1212, 1213, 1214, 1218, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1246, 1247, 1263, 1264, 1266, 1268, 1269, 1273, 1277, 1279, 1280, 1281, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1392, 1396, 1398, 1399, 1400, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1465, 1466, 1468, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1537, 1538, 1539, 1540, 1541, 1555, 1556, 1557, 1558, 1559, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1577, 1578, 1589, 1590, 1594, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1637, 1639, 1640, 1641, 1642, 1643, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1670, 1673, 1678, 1681, 1685, 1686, 1687, 1688, 1696, 1697, 1698, 1700, 1701, 1702, 1705, 1706, 1707, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1727, 1728, 1729, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1754, 1756, 1757, 1759, 1762, 1763, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1816, 1817, 1818, 1820, 1821, 1823, 1824, 1827, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1844, 1845, 1850, 1852, 1853, 1854, 1859, 1871, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1895, 1896, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1936, 1937, 1938, 1939, 1941, 1943, 1946, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1957, 1958, 1962, 1964, 1967, 1968, 1969, 1970, 1973, 1975, 1976, 1977, 1978, 1979, 1980, 1982, 1983, 1987, 1988, 1989, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2014, 2017, 2023, 2024, 2026, 2029, 2030, 2031, 2032, 2037, 2039, 2042, 2044, 2045, 2051, 2053, 2056, 2059, 2061, 2064, 2065, 2066, 2067, 2069, 2071, 2072, 2078, 2079, 2080, 2082, 2084, 2087, 2088, 2094, 2096, 2097, 2099, 2103, 2108, 2109, 2110], "enabl": [0, 1, 2, 3, 5, 8, 12, 18, 19, 20, 22, 23, 27, 28, 29, 31, 33, 34, 36, 46, 50, 53, 60, 79, 85, 87, 488, 503, 504, 680, 760, 812, 813, 901, 904, 906, 916, 917, 918, 927, 973, 987, 1006, 1051, 1106, 1110, 1252, 1253, 1271, 1278, 1385, 1386, 1474, 1493, 1539, 1540, 1570, 1587, 1681, 1713, 1730, 1731, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1766, 1793, 1868, 1871, 1899, 1961, 2013, 2019, 2020, 2023, 2027, 2028, 2032, 2038, 2039, 2040, 2041, 2042, 2044, 2047, 2050, 2052, 2054, 2055, 2059, 2061, 2065, 2066, 2071, 2072, 2073, 2077, 2086, 2088, 2089, 2090, 2092, 2094, 2096, 2097, 2098, 2099, 2102, 2106, 2108, 2109, 2110], "true": [0, 1, 2, 3, 5, 12, 14, 22, 23, 26, 27, 28, 29, 31, 33, 34, 36, 48, 50, 53, 58, 59, 61, 62, 64, 72, 73, 150, 196, 209, 260, 319, 321, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 396, 400, 402, 415, 448, 458, 460, 471, 477, 487, 488, 495, 496, 499, 504, 516, 517, 556, 567, 580, 581, 590, 594, 603, 609, 617, 680, 687, 692, 693, 694, 695, 696, 697, 699, 718, 719, 720, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 743, 746, 749, 754, 756, 760, 761, 764, 765, 768, 769, 779, 785, 786, 797, 814, 826, 841, 860, 874, 876, 877, 881, 890, 893, 894, 896, 901, 902, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 923, 925, 926, 936, 942, 945, 948, 950, 951, 957, 958, 964, 972, 973, 976, 979, 981, 987, 988, 1008, 1046, 1101, 1107, 1108, 1109, 1110, 1111, 1112, 1128, 1129, 1135, 1136, 1158, 1160, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1174, 1175, 1182, 1184, 1194, 1196, 1197, 1201, 1202, 1205, 1208, 1210, 1212, 1226, 1227, 1228, 1231, 1232, 1243, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1269, 1273, 1274, 1276, 1279, 1285, 1286, 1287, 1289, 1291, 1294, 1299, 1300, 1311, 1312, 1313, 1316, 1317, 1318, 1319, 1322, 1324, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1335, 1336, 1339, 1341, 1342, 1351, 1352, 1353, 1354, 1357, 1358, 1359, 1361, 1363, 1367, 1369, 1370, 1371, 1372, 1375, 1382, 1403, 1409, 1414, 1417, 1420, 1423, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1470, 1471, 1474, 1475, 1476, 1477, 1482, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1532, 1537, 1538, 1539, 1540, 1541, 1555, 1556, 1563, 1567, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1586, 1594, 1596, 1597, 1598, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1624, 1625, 1629, 1631, 1633, 1639, 1640, 1641, 1654, 1655, 1656, 1665, 1673, 1681, 1700, 1701, 1703, 1706, 1712, 1713, 1714, 1716, 1718, 1722, 1723, 1725, 1727, 1728, 1729, 1732, 1733, 1734, 1746, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1811, 1813, 1821, 1823, 1824, 1828, 1829, 1830, 1847, 1848, 1855, 1858, 1859, 1867, 1868, 1871, 1873, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1896, 1898, 1899, 1901, 1909, 1918, 1919, 1920, 1923, 1924, 1939, 1943, 1948, 1957, 1958, 1961, 1962, 1964, 1967, 1968, 1969, 1973, 1976, 2008, 2011, 2012, 2013, 2017, 2020, 2021, 2022, 2024, 2025, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2054, 2055, 2056, 2059, 2060, 2061, 2064, 2065, 2066, 2067, 2068, 2069, 2071, 2072, 2073, 2076, 2077, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2095, 2096, 2097, 2099, 2100, 2101, 2103, 2104, 2106, 2107, 2108, 2109], "cache_en": [0, 1051], "instanc": [0, 2, 3, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 42, 45, 46, 48, 50, 53, 58, 62, 139, 617, 680, 734, 748, 757, 793, 796, 824, 826, 842, 859, 1006, 1106, 1157, 1267, 1269, 1281, 1285, 1342, 1465, 1466, 1469, 1485, 1486, 1487, 1495, 1523, 1533, 1568, 1570, 1571, 1575, 1584, 1585, 1586, 1639, 1713, 1728, 1740, 1754, 1762, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1909, 1940, 2010, 2012, 2014, 2019, 2023, 2025, 2029, 2031, 2038, 2039, 2042, 2043, 2044, 2046, 2047, 2051, 2055, 2059, 2064, 2067, 2072, 2073, 2074, 2077, 2079, 2084, 2093, 2107, 2109], "serv": [0, 7, 8, 15, 27, 87, 2020, 2059, 2063, 2072, 2073, 2094, 2099, 2103], "context": [0, 2, 5, 22, 27, 29, 31, 33, 36, 45, 46, 50, 53, 62, 64, 150, 792, 890, 891, 892, 894, 896, 906, 907, 915, 916, 917, 918, 920, 936, 979, 997, 1003, 1012, 1027, 1029, 1040, 1046, 1051, 1058, 1066, 1079, 1081, 1110, 1165, 1169, 1174, 1184, 1189, 1269, 1385, 1396, 1400, 1405, 1406, 1523, 1582, 1587, 1681, 1703, 1713, 1714, 1731, 1733, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1899, 1980, 1983, 1985, 2003, 2004, 2009, 2013, 2014, 2021, 2025, 2029, 2038, 2039, 2042, 2044, 2049, 2050, 2053, 2059, 2061, 2064, 2066, 2071, 2072, 2074, 2077, 2080, 2086, 2095, 2096, 2098, 2099, 2106, 2110], "manag": [0, 1, 2, 5, 7, 19, 27, 29, 31, 33, 34, 36, 43, 45, 46, 48, 50, 53, 62, 64, 88, 486, 896, 916, 917, 918, 936, 979, 997, 1003, 1006, 1009, 1012, 1013, 1014, 1016, 1027, 1029, 1030, 1031, 1040, 1041, 1051, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1066, 1070, 1071, 1072, 1079, 1081, 1110, 1165, 1169, 1174, 1184, 1385, 1396, 1400, 1405, 1406, 1540, 1582, 1587, 1681, 1713, 1730, 1731, 1733, 1766, 1899, 1980, 1983, 1985, 2003, 2004, 2009, 2013, 2014, 2021, 2025, 2039, 2044, 2046, 2047, 2050, 2059, 2061, 2065, 2066, 2071, 2072, 2073, 2077, 2080, 2086, 2095, 2098, 2099, 2111], "decor": [0, 1, 34, 38, 42, 46, 62, 75, 901, 904, 906, 916, 936, 975, 979, 1066, 1110, 1274, 1275, 1281, 1287, 1766, 1898, 1899, 2010, 2012, 2013, 2017, 2038, 2039, 2044, 2065, 2072, 2094, 2096, 2097, 2099, 2100, 2109], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 22, 23, 27, 28, 29, 32, 34, 36, 37, 45, 46, 50, 53, 54, 56, 57, 58, 59, 62, 64, 66, 150, 513, 680, 735, 793, 797, 799, 824, 894, 898, 899, 915, 958, 972, 976, 987, 1048, 1051, 1076, 1106, 1168, 1184, 1189, 1269, 1274, 1287, 1325, 1347, 1389, 1418, 1432, 1433, 1434, 1458, 1459, 1476, 1516, 1517, 1518, 1523, 1526, 1529, 1552, 1567, 1713, 1719, 1767, 1776, 1792, 1807, 1901, 1961, 2008, 2012, 2013, 2020, 2021, 2030, 2031, 2032, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2056, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2069, 2072, 2077, 2080, 2081, 2082, 2084, 2095, 2096, 2097, 2098, 2099, 2104, 2107, 2108, 2111], "region": [0, 3, 5, 34, 42, 768, 769, 973, 1432, 1433, 1434, 1470, 1471, 1481, 1483, 1516, 1517, 1518, 1597, 1598, 1624, 1625, 1655, 1656, 2010, 2029, 2038, 2042, 2085, 2098, 2099], "your": [0, 1, 2, 4, 7, 8, 9, 11, 14, 15, 17, 22, 26, 27, 31, 32, 33, 34, 37, 38, 42, 44, 45, 46, 48, 49, 50, 53, 57, 58, 61, 62, 486, 894, 901, 904, 906, 909, 910, 915, 916, 973, 976, 1179, 1183, 1184, 1269, 1273, 1274, 1279, 1282, 1285, 1286, 1287, 1523, 1530, 1571, 1713, 1730, 1733, 1766, 1794, 1868, 1957, 1962, 1964, 2010, 2012, 2013, 2017, 2019, 2021, 2029, 2030, 2031, 2033, 2038, 2039, 2040, 2042, 2044, 2045, 2046, 2049, 2050, 2051, 2052, 2054, 2055, 2057, 2061, 2063, 2065, 2068, 2071, 2073, 2077, 2082, 2083, 2086, 2089, 2090, 2092, 2093, 2094, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2105, 2106, 2108, 2109, 2110, 2114], "script": [0, 2, 4, 18, 22, 27, 30, 32, 36, 38, 44, 46, 48, 50, 1270, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1282, 1284, 1285, 1287, 2008, 2009, 2012, 2013, 2023, 2041, 2050, 2052, 2056, 2058, 2059, 2064, 2067, 2072, 2089, 2092, 2094, 2096, 2101, 2102, 2105], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 14, 15, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 64, 150, 486, 488, 680, 792, 798, 817, 819, 820, 821, 822, 825, 858, 862, 863, 864, 894, 915, 916, 920, 921, 936, 973, 1050, 1051, 1164, 1169, 1175, 1182, 1193, 1209, 1269, 1270, 1272, 1273, 1275, 1277, 1279, 1281, 1283, 1285, 1286, 1306, 1315, 1341, 1342, 1370, 1437, 1438, 1439, 1459, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1523, 1538, 1552, 1563, 1681, 1703, 1706, 1712, 1713, 1720, 1721, 1722, 1723, 1724, 1725, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1867, 1870, 1903, 1950, 1952, 1961, 1973, 2009, 2010, 2013, 2017, 2023, 2025, 2026, 2027, 2029, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2059, 2061, 2063, 2064, 2065, 2067, 2070, 2071, 2072, 2073, 2074, 2077, 2082, 2086, 2087, 2088, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2106, 2107, 2108, 2110], "In": [0, 2, 3, 4, 5, 7, 9, 15, 18, 22, 27, 29, 31, 32, 33, 34, 38, 45, 46, 48, 50, 51, 53, 55, 56, 57, 58, 61, 62, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 121, 123, 125, 127, 130, 131, 133, 141, 143, 146, 147, 149, 152, 154, 158, 160, 162, 164, 166, 168, 177, 186, 194, 198, 201, 203, 213, 215, 221, 231, 236, 238, 244, 247, 249, 251, 253, 257, 258, 262, 269, 271, 273, 277, 279, 283, 285, 292, 294, 296, 304, 306, 308, 310, 356, 358, 360, 362, 364, 366, 368, 371, 373, 375, 376, 383, 385, 387, 389, 391, 395, 420, 423, 426, 428, 439, 441, 443, 451, 456, 466, 469, 485, 486, 490, 492, 508, 511, 522, 527, 529, 532, 534, 536, 549, 551, 553, 562, 564, 571, 575, 577, 593, 596, 598, 600, 602, 612, 622, 680, 760, 800, 824, 855, 901, 904, 906, 907, 940, 949, 957, 988, 989, 1005, 1051, 1062, 1075, 1076, 1080, 1081, 1106, 1127, 1129, 1137, 1138, 1139, 1154, 1165, 1169, 1172, 1174, 1179, 1181, 1183, 1194, 1266, 1267, 1269, 1279, 1282, 1283, 1285, 1301, 1310, 1315, 1316, 1317, 1325, 1328, 1333, 1338, 1342, 1347, 1350, 1359, 1364, 1370, 1371, 1406, 1414, 1432, 1433, 1434, 1436, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1461, 1462, 1463, 1467, 1469, 1474, 1483, 1493, 1508, 1516, 1517, 1518, 1523, 1529, 1567, 1569, 1571, 1575, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1619, 1629, 1636, 1638, 1645, 1674, 1677, 1680, 1681, 1695, 1713, 1720, 1721, 1727, 1733, 1734, 1766, 1794, 1805, 1807, 1843, 1859, 1861, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1920, 1924, 1925, 1948, 1961, 1962, 1964, 1970, 1971, 2008, 2009, 2010, 2012, 2013, 2017, 2019, 2020, 2021, 2029, 2030, 2031, 2032, 2037, 2038, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2053, 2054, 2055, 2056, 2061, 2063, 2064, 2066, 2067, 2068, 2069, 2072, 2073, 2074, 2077, 2082, 2084, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2105, 2106, 2107, 2108, 2110], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 19, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 79, 80, 81, 83, 85, 86, 88, 150, 154, 190, 242, 254, 313, 315, 321, 323, 328, 335, 415, 486, 499, 513, 515, 517, 537, 545, 560, 607, 614, 617, 680, 687, 688, 735, 741, 742, 743, 756, 760, 765, 779, 785, 787, 789, 792, 796, 815, 817, 823, 826, 855, 862, 863, 865, 879, 880, 881, 890, 892, 893, 894, 899, 901, 902, 904, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 928, 929, 930, 932, 933, 940, 944, 960, 970, 973, 988, 989, 991, 1006, 1008, 1009, 1011, 1018, 1019, 1020, 1021, 1022, 1040, 1041, 1048, 1049, 1051, 1063, 1065, 1066, 1076, 1080, 1081, 1091, 1104, 1106, 1107, 1108, 1109, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1146, 1149, 1157, 1160, 1163, 1164, 1167, 1168, 1169, 1171, 1173, 1175, 1178, 1179, 1181, 1182, 1183, 1184, 1188, 1190, 1193, 1194, 1200, 1210, 1213, 1223, 1231, 1232, 1233, 1266, 1267, 1269, 1272, 1273, 1275, 1277, 1280, 1281, 1283, 1285, 1286, 1287, 1288, 1299, 1300, 1305, 1306, 1311, 1313, 1315, 1318, 1319, 1323, 1326, 1328, 1331, 1332, 1339, 1341, 1342, 1359, 1361, 1364, 1370, 1382, 1389, 1409, 1418, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1470, 1471, 1474, 1482, 1486, 1487, 1490, 1491, 1492, 1493, 1495, 1505, 1506, 1507, 1508, 1510, 1511, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1538, 1539, 1541, 1543, 1552, 1555, 1557, 1558, 1559, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1577, 1578, 1582, 1583, 1586, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1604, 1605, 1606, 1607, 1608, 1609, 1614, 1620, 1621, 1623, 1624, 1625, 1629, 1640, 1647, 1648, 1650, 1651, 1652, 1654, 1655, 1656, 1681, 1685, 1700, 1702, 1703, 1706, 1712, 1713, 1717, 1718, 1719, 1720, 1721, 1726, 1727, 1731, 1733, 1740, 1757, 1764, 1766, 1768, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1823, 1828, 1829, 1830, 1849, 1851, 1855, 1863, 1864, 1866, 1874, 1880, 1901, 1904, 1905, 1909, 1912, 1917, 1920, 1924, 1939, 1940, 1956, 1957, 1958, 1959, 1961, 1964, 1971, 1972, 1973, 1974, 1979, 2007, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2019, 2020, 2021, 2023, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2065, 2066, 2067, 2068, 2069, 2070, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112], "chosen": [0, 58, 1094, 1291, 1460, 1681, 1871, 1896, 1943, 2032, 2038, 2042, 2044, 2053, 2061, 2067, 2108], "improv": [0, 1, 3, 9, 14, 20, 23, 27, 29, 50, 53, 62, 760, 804, 805, 806, 909, 911, 915, 991, 1223, 1460, 1474, 1493, 1539, 1570, 1681, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 2009, 2010, 2038, 2043, 2044, 2045, 2054, 2055, 2059, 2067, 2068, 2072, 2102, 2104, 2106, 2108, 2110, 2111], "perform": [0, 1, 2, 3, 4, 5, 11, 14, 20, 21, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 45, 46, 50, 53, 57, 61, 62, 81, 119, 206, 209, 458, 486, 580, 603, 617, 686, 687, 688, 689, 690, 691, 760, 781, 804, 805, 806, 848, 859, 862, 901, 904, 906, 909, 911, 912, 915, 916, 920, 941, 953, 973, 988, 989, 1013, 1062, 1087, 1088, 1101, 1126, 1149, 1151, 1163, 1164, 1167, 1179, 1198, 1234, 1269, 1279, 1280, 1285, 1313, 1315, 1318, 1322, 1325, 1326, 1330, 1331, 1339, 1340, 1342, 1347, 1356, 1369, 1374, 1385, 1386, 1411, 1414, 1417, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1462, 1465, 1466, 1474, 1493, 1523, 1529, 1531, 1539, 1552, 1567, 1570, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1648, 1666, 1681, 1687, 1688, 1703, 1713, 1715, 1716, 1728, 1733, 1754, 1761, 1763, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1807, 1813, 1821, 1849, 1863, 1867, 1894, 1900, 1901, 1902, 1903, 1923, 1925, 1961, 2009, 2010, 2013, 2017, 2021, 2026, 2027, 2029, 2030, 2031, 2033, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2052, 2053, 2054, 2055, 2061, 2063, 2064, 2066, 2067, 2068, 2070, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2089, 2092, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2104, 2109, 2110, 2111], "while": [0, 2, 3, 5, 7, 8, 11, 14, 22, 23, 27, 28, 29, 32, 34, 48, 50, 51, 53, 58, 61, 62, 85, 695, 696, 735, 855, 885, 893, 906, 907, 1009, 1081, 1164, 1178, 1232, 1269, 1272, 1285, 1286, 1342, 1406, 1415, 1427, 1443, 1483, 1485, 1486, 1487, 1493, 1523, 1529, 1542, 1555, 1563, 1567, 1571, 1648, 1706, 1713, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1768, 1859, 1867, 1966, 2014, 2017, 2019, 2020, 2031, 2032, 2038, 2039, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2055, 2056, 2061, 2063, 2065, 2067, 2070, 2072, 2074, 2077, 2078, 2079, 2081, 2082, 2083, 2096, 2098, 2099, 2100, 2102, 2108, 2111], "maintain": [0, 7, 8, 22, 23, 27, 34, 50, 53, 57, 62, 929, 939, 1182, 1186, 1431, 1462, 1467, 1622, 1713, 1754, 1768, 2009, 2032, 2038, 2039, 2042, 2044, 2051, 2059, 2095, 2098], "accuraci": [0, 23, 973, 1184, 1333, 1681, 1867, 2009, 2026, 2038, 2051, 2082, 2087, 2099], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 19, 21, 22, 24, 27, 28, 29, 32, 34, 37, 45, 46, 49, 50, 53, 58, 59, 60, 61, 62, 89, 93, 95, 97, 99, 101, 103, 105, 107, 109, 112, 113, 114, 115, 116, 117, 118, 120, 122, 124, 126, 128, 129, 132, 134, 135, 136, 137, 138, 140, 142, 144, 145, 148, 150, 151, 153, 154, 155, 156, 157, 159, 161, 163, 165, 167, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 193, 197, 199, 200, 202, 204, 205, 207, 210, 211, 212, 214, 217, 218, 220, 224, 225, 226, 227, 228, 229, 230, 234, 235, 237, 239, 240, 241, 243, 245, 246, 248, 250, 252, 255, 256, 261, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 278, 280, 281, 282, 284, 287, 288, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 305, 307, 309, 313, 321, 322, 323, 324, 325, 327, 328, 334, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 359, 361, 363, 365, 367, 369, 370, 372, 374, 378, 379, 380, 381, 382, 384, 386, 388, 390, 392, 393, 394, 396, 397, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 424, 425, 427, 429, 430, 431, 432, 433, 434, 438, 440, 442, 450, 452, 453, 455, 457, 459, 460, 461, 462, 464, 465, 467, 468, 470, 477, 479, 480, 482, 484, 486, 487, 488, 489, 491, 493, 494, 495, 497, 498, 499, 501, 502, 505, 506, 507, 510, 515, 517, 518, 519, 521, 523, 524, 525, 526, 528, 530, 531, 533, 535, 538, 539, 540, 542, 543, 547, 548, 550, 552, 554, 555, 556, 561, 563, 565, 567, 568, 569, 570, 572, 573, 574, 576, 578, 579, 590, 591, 592, 594, 595, 597, 599, 601, 605, 606, 609, 610, 611, 614, 615, 616, 618, 619, 620, 621, 680, 693, 695, 696, 699, 730, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 743, 745, 746, 748, 756, 757, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772, 773, 774, 779, 780, 781, 782, 783, 784, 785, 793, 840, 860, 861, 862, 863, 866, 875, 876, 877, 880, 891, 893, 894, 895, 896, 899, 900, 901, 903, 904, 906, 907, 911, 915, 916, 917, 920, 925, 926, 928, 933, 942, 944, 951, 953, 956, 970, 973, 977, 978, 993, 1006, 1008, 1009, 1011, 1013, 1014, 1016, 1030, 1031, 1040, 1041, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1070, 1071, 1072, 1101, 1104, 1106, 1107, 1109, 1110, 1119, 1124, 1142, 1145, 1158, 1161, 1166, 1167, 1168, 1170, 1178, 1182, 1184, 1188, 1196, 1198, 1213, 1222, 1223, 1227, 1228, 1232, 1233, 1241, 1242, 1243, 1269, 1273, 1281, 1285, 1286, 1288, 1289, 1291, 1299, 1301, 1306, 1309, 1310, 1312, 1315, 1317, 1324, 1326, 1327, 1330, 1335, 1339, 1340, 1342, 1348, 1350, 1356, 1357, 1359, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1385, 1386, 1392, 1414, 1416, 1417, 1427, 1435, 1436, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1465, 1466, 1468, 1474, 1476, 1482, 1483, 1488, 1489, 1493, 1514, 1515, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1535, 1536, 1537, 1539, 1551, 1553, 1555, 1556, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1582, 1583, 1588, 1589, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1698, 1699, 1700, 1701, 1702, 1713, 1714, 1727, 1728, 1729, 1733, 1739, 1748, 1757, 1762, 1765, 1766, 1767, 1768, 1772, 1811, 1821, 1822, 1832, 1834, 1836, 1838, 1839, 1843, 1846, 1849, 1855, 1864, 1867, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1899, 1900, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1918, 1919, 1920, 1923, 1934, 1936, 1939, 1945, 1946, 1950, 1952, 1957, 1961, 1964, 1968, 1969, 1974, 1976, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2017, 2018, 2019, 2020, 2022, 2024, 2027, 2029, 2030, 2031, 2032, 2033, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2048, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2059, 2060, 2061, 2065, 2066, 2067, 2068, 2071, 2072, 2073, 2077, 2078, 2079, 2080, 2081, 2083, 2084, 2086, 2089, 2091, 2094, 2095, 2096, 2097, 2100, 2101, 2102, 2106, 2107, 2108, 2109, 2110, 2112], "detail": [0, 1, 2, 3, 7, 8, 11, 13, 14, 15, 17, 18, 22, 27, 28, 29, 32, 34, 36, 46, 51, 53, 59, 62, 79, 80, 81, 150, 323, 495, 524, 614, 680, 735, 738, 739, 740, 741, 742, 743, 760, 766, 767, 768, 771, 772, 773, 774, 779, 780, 782, 783, 784, 785, 793, 860, 861, 862, 863, 874, 891, 893, 894, 895, 896, 899, 900, 901, 904, 906, 907, 920, 956, 977, 978, 993, 1011, 1013, 1014, 1016, 1030, 1031, 1040, 1051, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1070, 1071, 1072, 1089, 1106, 1145, 1168, 1182, 1213, 1217, 1219, 1223, 1250, 1257, 1269, 1273, 1285, 1306, 1309, 1327, 1334, 1342, 1348, 1350, 1370, 1409, 1427, 1431, 1441, 1453, 1454, 1455, 1459, 1465, 1466, 1467, 1468, 1470, 1471, 1474, 1493, 1523, 1529, 1535, 1536, 1539, 1551, 1572, 1582, 1588, 1589, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1630, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1669, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1698, 1699, 1703, 1708, 1709, 1713, 1714, 1757, 1767, 1775, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1794, 1799, 1811, 1823, 1855, 1866, 1891, 1900, 1946, 1957, 1961, 1964, 2008, 2010, 2011, 2012, 2013, 2017, 2020, 2024, 2027, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2054, 2055, 2056, 2061, 2064, 2065, 2066, 2067, 2069, 2071, 2072, 2073, 2074, 2077, 2079, 2081, 2082, 2083, 2084, 2086, 2090, 2096, 2105, 2108, 2109, 2110], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 58, 59, 60, 61, 62, 63, 82, 84, 85, 97, 150, 191, 208, 260, 313, 321, 415, 448, 486, 487, 488, 497, 498, 513, 515, 517, 544, 560, 580, 617, 680, 686, 689, 735, 768, 769, 779, 785, 791, 793, 824, 840, 859, 866, 878, 881, 894, 901, 909, 910, 911, 912, 913, 914, 915, 916, 920, 921, 925, 926, 927, 929, 936, 941, 944, 953, 961, 964, 965, 966, 972, 973, 981, 988, 989, 993, 1008, 1010, 1020, 1022, 1044, 1050, 1051, 1063, 1089, 1106, 1145, 1149, 1154, 1160, 1164, 1165, 1170, 1173, 1174, 1175, 1184, 1185, 1193, 1194, 1197, 1198, 1206, 1209, 1223, 1258, 1259, 1261, 1262, 1265, 1269, 1270, 1272, 1281, 1282, 1283, 1285, 1286, 1290, 1291, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1339, 1340, 1341, 1342, 1350, 1356, 1359, 1364, 1370, 1371, 1374, 1409, 1414, 1415, 1416, 1427, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1465, 1466, 1469, 1472, 1474, 1475, 1477, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1510, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1537, 1538, 1539, 1551, 1552, 1555, 1556, 1557, 1558, 1560, 1563, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1582, 1584, 1594, 1596, 1597, 1598, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1621, 1627, 1629, 1638, 1640, 1641, 1665, 1668, 1670, 1673, 1674, 1681, 1689, 1700, 1701, 1702, 1703, 1712, 1713, 1714, 1715, 1716, 1720, 1721, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1757, 1762, 1766, 1767, 1768, 1769, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1811, 1813, 1820, 1823, 1824, 1846, 1852, 1859, 1864, 1867, 1873, 1891, 1897, 1901, 1903, 1904, 1905, 1909, 1915, 1920, 1924, 1934, 1939, 1941, 1946, 1950, 1952, 1961, 1962, 1973, 1976, 1978, 2008, 2009, 2010, 2012, 2017, 2019, 2023, 2026, 2029, 2030, 2031, 2037, 2040, 2041, 2042, 2043, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2059, 2063, 2064, 2065, 2066, 2071, 2072, 2073, 2074, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2090, 2094, 2095, 2096, 2097, 2098, 2100, 2102, 2104, 2106, 2107, 2108, 2110], "enter": [0, 27, 896, 897, 898, 916, 2044, 2096], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 43, 44, 45, 46, 49, 50, 51, 53, 58, 61, 62, 88, 150, 254, 486, 499, 545, 617, 697, 758, 781, 792, 793, 794, 800, 810, 811, 812, 813, 815, 816, 817, 818, 823, 824, 826, 855, 866, 890, 891, 892, 894, 901, 904, 906, 907, 909, 915, 920, 921, 929, 949, 955, 959, 960, 988, 1008, 1044, 1051, 1062, 1107, 1108, 1109, 1122, 1123, 1125, 1126, 1127, 1129, 1133, 1137, 1138, 1139, 1154, 1163, 1164, 1171, 1172, 1173, 1175, 1176, 1181, 1182, 1184, 1188, 1194, 1232, 1268, 1269, 1273, 1276, 1280, 1281, 1283, 1285, 1291, 1299, 1301, 1305, 1306, 1310, 1315, 1316, 1317, 1322, 1323, 1326, 1330, 1333, 1339, 1341, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1435, 1436, 1440, 1441, 1450, 1451, 1452, 1459, 1460, 1464, 1468, 1469, 1472, 1473, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1488, 1489, 1509, 1510, 1512, 1513, 1514, 1522, 1523, 1531, 1533, 1534, 1537, 1542, 1543, 1544, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1573, 1574, 1575, 1600, 1604, 1605, 1606, 1646, 1666, 1667, 1681, 1703, 1713, 1720, 1721, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1755, 1756, 1758, 1761, 1763, 1768, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1799, 1839, 1855, 1869, 1871, 1924, 1973, 1978, 1987, 2008, 2010, 2011, 2012, 2017, 2020, 2021, 2023, 2024, 2026, 2029, 2030, 2031, 2032, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2055, 2056, 2058, 2059, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2072, 2073, 2074, 2077, 2079, 2082, 2084, 2087, 2088, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2101, 2103, 2104, 2106, 2107, 2108, 2109, 2110], "should": [0, 1, 3, 4, 5, 9, 14, 15, 18, 19, 22, 23, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 43, 44, 45, 46, 48, 50, 51, 53, 57, 58, 61, 62, 64, 69, 70, 73, 84, 119, 150, 154, 313, 321, 398, 402, 415, 445, 446, 447, 448, 449, 487, 488, 496, 513, 515, 517, 583, 584, 585, 587, 588, 686, 689, 690, 735, 760, 772, 773, 774, 793, 796, 800, 817, 824, 838, 839, 855, 856, 857, 860, 866, 890, 891, 892, 893, 894, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 915, 925, 926, 941, 942, 943, 944, 951, 964, 979, 980, 995, 1008, 1011, 1021, 1022, 1040, 1042, 1051, 1097, 1107, 1108, 1109, 1119, 1124, 1127, 1128, 1129, 1137, 1138, 1139, 1142, 1157, 1160, 1161, 1162, 1164, 1165, 1169, 1173, 1174, 1175, 1182, 1183, 1188, 1190, 1227, 1228, 1231, 1232, 1266, 1267, 1269, 1270, 1274, 1279, 1281, 1282, 1285, 1286, 1287, 1289, 1314, 1339, 1340, 1341, 1347, 1356, 1359, 1360, 1361, 1382, 1427, 1435, 1436, 1440, 1456, 1458, 1459, 1461, 1462, 1463, 1466, 1467, 1488, 1493, 1515, 1523, 1529, 1530, 1531, 1546, 1551, 1572, 1576, 1594, 1600, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1621, 1629, 1681, 1703, 1705, 1706, 1707, 1710, 1711, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1754, 1755, 1756, 1759, 1761, 1772, 1773, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1823, 1825, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1846, 1862, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1906, 1907, 1908, 1909, 1910, 1911, 1924, 1939, 1948, 1973, 1978, 1979, 2006, 2007, 2008, 2009, 2010, 2012, 2013, 2017, 2019, 2020, 2021, 2024, 2026, 2029, 2031, 2032, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2053, 2054, 2055, 2057, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2072, 2074, 2077, 2081, 2082, 2084, 2090, 2092, 2094, 2096, 2097, 2098, 2099, 2101, 2102, 2104, 2106, 2107, 2108, 2109], "call": [0, 1, 2, 3, 8, 11, 14, 15, 18, 19, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 73, 80, 86, 150, 290, 323, 335, 458, 486, 487, 488, 556, 580, 614, 617, 680, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 781, 790, 797, 824, 858, 862, 863, 894, 901, 902, 903, 904, 905, 906, 907, 909, 911, 912, 915, 916, 925, 926, 927, 929, 936, 940, 956, 973, 978, 979, 983, 1006, 1009, 1011, 1040, 1042, 1052, 1053, 1062, 1070, 1071, 1073, 1074, 1104, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1158, 1163, 1164, 1175, 1176, 1182, 1193, 1213, 1233, 1254, 1266, 1269, 1272, 1274, 1280, 1281, 1282, 1289, 1325, 1333, 1337, 1339, 1341, 1342, 1371, 1431, 1437, 1438, 1439, 1459, 1460, 1461, 1462, 1463, 1465, 1467, 1469, 1508, 1519, 1520, 1521, 1523, 1530, 1531, 1552, 1563, 1575, 1607, 1608, 1609, 1615, 1616, 1617, 1622, 1640, 1681, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1720, 1721, 1730, 1733, 1740, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1756, 1762, 1763, 1765, 1766, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1863, 1869, 1870, 1899, 1918, 1919, 1920, 1941, 1957, 1961, 1962, 1964, 1968, 1969, 1973, 1974, 1979, 1996, 1997, 1998, 1999, 2008, 2010, 2014, 2017, 2021, 2026, 2029, 2031, 2032, 2033, 2038, 2039, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2057, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2087, 2089, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2104, 2106, 2107, 2108, 2109, 2110, 2112], "model": [0, 1, 2, 3, 4, 5, 8, 9, 12, 23, 27, 28, 29, 31, 33, 34, 44, 46, 49, 51, 53, 54, 55, 56, 57, 58, 59, 62, 64, 82, 83, 792, 793, 794, 797, 798, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 824, 825, 826, 836, 837, 838, 839, 841, 855, 858, 859, 860, 861, 862, 863, 864, 916, 929, 973, 1052, 1073, 1163, 1164, 1165, 1173, 1175, 1269, 1273, 1274, 1279, 1281, 1285, 1287, 1341, 1427, 1459, 1476, 1487, 1488, 1523, 1529, 1552, 1563, 1567, 1569, 1570, 1571, 1628, 1713, 1714, 1720, 1721, 1726, 1728, 1731, 1744, 1763, 1764, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 1807, 1920, 1973, 1996, 1998, 2009, 2010, 2012, 2013, 2014, 2021, 2023, 2024, 2032, 2039, 2041, 2042, 2043, 2044, 2047, 2049, 2051, 2052, 2053, 2054, 2055, 2056, 2058, 2061, 2066, 2068, 2072, 2073, 2075, 2077, 2078, 2082, 2087, 2088, 2089, 2092, 2093, 2094, 2096, 2098, 2099, 2100, 2104, 2106, 2108], "": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 41, 42, 43, 45, 46, 47, 50, 51, 53, 55, 57, 58, 61, 62, 80, 81, 86, 87, 88, 463, 481, 493, 496, 513, 544, 558, 581, 624, 680, 689, 693, 694, 695, 696, 699, 735, 760, 793, 794, 795, 801, 815, 816, 817, 820, 823, 826, 855, 862, 863, 876, 878, 879, 880, 881, 900, 901, 902, 903, 906, 910, 911, 913, 921, 940, 957, 959, 972, 981, 987, 988, 989, 990, 995, 1004, 1006, 1008, 1012, 1027, 1031, 1040, 1042, 1047, 1048, 1051, 1052, 1053, 1073, 1074, 1075, 1081, 1098, 1101, 1103, 1104, 1106, 1120, 1121, 1123, 1124, 1125, 1128, 1129, 1131, 1132, 1135, 1136, 1138, 1139, 1140, 1141, 1143, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1154, 1160, 1161, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1173, 1175, 1178, 1182, 1184, 1213, 1223, 1231, 1232, 1233, 1256, 1258, 1266, 1267, 1269, 1273, 1280, 1281, 1285, 1300, 1301, 1311, 1312, 1313, 1315, 1318, 1322, 1324, 1326, 1327, 1331, 1332, 1333, 1334, 1339, 1341, 1342, 1357, 1364, 1369, 1371, 1374, 1376, 1377, 1382, 1385, 1386, 1389, 1396, 1400, 1404, 1406, 1413, 1414, 1417, 1419, 1425, 1426, 1427, 1435, 1436, 1437, 1438, 1439, 1442, 1459, 1465, 1476, 1523, 1524, 1529, 1533, 1540, 1552, 1555, 1557, 1563, 1567, 1569, 1571, 1577, 1578, 1601, 1602, 1613, 1626, 1629, 1640, 1641, 1646, 1681, 1687, 1700, 1703, 1713, 1714, 1720, 1721, 1733, 1744, 1757, 1761, 1768, 1769, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1807, 1811, 1813, 1817, 1824, 1839, 1842, 1843, 1846, 1847, 1848, 1850, 1852, 1859, 1866, 1867, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1918, 1919, 1920, 1923, 1924, 1925, 1926, 1927, 1936, 1940, 1942, 1948, 1964, 1968, 1969, 1970, 1973, 1974, 1978, 1980, 1983, 1992, 1995, 1996, 1997, 1998, 1999, 2004, 2008, 2010, 2011, 2012, 2013, 2014, 2017, 2019, 2020, 2024, 2026, 2027, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2056, 2057, 2058, 2059, 2061, 2062, 2063, 2065, 2066, 2067, 2069, 2070, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2088, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109], "wrap": [0, 1, 15, 22, 23, 27, 31, 38, 48, 53, 57, 58, 60, 62, 64, 260, 790, 791, 1009, 1081, 1164, 1184, 1269, 1285, 1406, 1459, 1523, 1563, 1707, 1713, 1731, 1757, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 2004, 2010, 2011, 2013, 2017, 2020, 2038, 2039, 2042, 2043, 2044, 2045, 2051, 2057, 2061, 2065, 2066, 2067, 2072, 2073, 2086, 2088, 2094, 2096, 2097, 2099, 2108, 2109], "forward": [0, 5, 7, 8, 12, 14, 23, 27, 28, 29, 31, 32, 34, 50, 51, 53, 54, 55, 57, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 150, 221, 222, 680, 735, 748, 757, 760, 800, 815, 816, 817, 820, 824, 862, 863, 890, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 911, 912, 915, 916, 917, 918, 920, 980, 981, 987, 1051, 1098, 1110, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1164, 1166, 1167, 1168, 1170, 1173, 1269, 1272, 1273, 1274, 1276, 1280, 1281, 1285, 1286, 1287, 1431, 1435, 1437, 1438, 1439, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1474, 1493, 1508, 1519, 1520, 1521, 1523, 1524, 1525, 1529, 1530, 1533, 1534, 1538, 1539, 1540, 1552, 1567, 1568, 1569, 1570, 1571, 1615, 1616, 1617, 1622, 1668, 1681, 1703, 1706, 1707, 1712, 1713, 1731, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751, 1762, 1765, 1766, 1830, 1897, 1961, 2009, 2010, 2012, 2013, 2017, 2019, 2023, 2025, 2029, 2031, 2037, 2038, 2039, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2051, 2054, 2056, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2072, 2086, 2087, 2088, 2089, 2090, 2093, 2094, 2096, 2097, 2099, 2102, 2103, 2104, 2106, 2107, 2108], "pass": [0, 1, 3, 5, 6, 7, 14, 19, 22, 23, 27, 28, 29, 31, 33, 34, 36, 37, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 57, 58, 61, 62, 64, 72, 73, 79, 86, 150, 254, 415, 448, 488, 513, 515, 517, 544, 560, 680, 793, 794, 823, 826, 860, 862, 881, 890, 891, 892, 893, 894, 901, 904, 906, 907, 915, 957, 973, 980, 981, 982, 1006, 1040, 1051, 1066, 1096, 1127, 1128, 1129, 1137, 1138, 1139, 1145, 1158, 1160, 1163, 1164, 1168, 1169, 1170, 1173, 1174, 1182, 1184, 1194, 1201, 1202, 1206, 1232, 1267, 1269, 1270, 1273, 1275, 1279, 1281, 1285, 1286, 1314, 1330, 1332, 1341, 1389, 1427, 1428, 1429, 1430, 1437, 1438, 1439, 1459, 1465, 1466, 1470, 1471, 1523, 1528, 1529, 1538, 1552, 1568, 1569, 1570, 1571, 1576, 1594, 1624, 1625, 1629, 1640, 1641, 1668, 1681, 1703, 1706, 1707, 1712, 1713, 1731, 1733, 1735, 1740, 1754, 1757, 1761, 1763, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1855, 1859, 1863, 1924, 2008, 2010, 2014, 2017, 2021, 2023, 2025, 2026, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2041, 2043, 2044, 2045, 2047, 2048, 2050, 2051, 2054, 2056, 2059, 2061, 2063, 2064, 2065, 2066, 2072, 2074, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2088, 2089, 2094, 2095, 2096, 2097, 2098, 2099, 2105, 2106, 2108, 2109], "e": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 22, 23, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 49, 50, 51, 53, 56, 58, 60, 61, 62, 63, 64, 72, 73, 150, 258, 335, 377, 486, 580, 617, 735, 748, 757, 760, 793, 794, 815, 817, 841, 855, 859, 860, 862, 863, 881, 890, 894, 901, 903, 906, 907, 916, 920, 921, 940, 952, 954, 957, 987, 1037, 1051, 1077, 1106, 1116, 1157, 1164, 1169, 1173, 1178, 1184, 1190, 1192, 1197, 1200, 1218, 1220, 1248, 1249, 1251, 1254, 1266, 1269, 1276, 1277, 1285, 1305, 1306, 1321, 1333, 1341, 1342, 1343, 1345, 1347, 1364, 1375, 1383, 1390, 1435, 1436, 1437, 1438, 1439, 1442, 1450, 1451, 1452, 1458, 1459, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1474, 1477, 1482, 1485, 1486, 1487, 1488, 1489, 1493, 1495, 1496, 1497, 1498, 1514, 1523, 1524, 1529, 1530, 1532, 1533, 1537, 1539, 1555, 1563, 1567, 1571, 1572, 1573, 1575, 1604, 1605, 1606, 1613, 1620, 1621, 1629, 1640, 1673, 1681, 1700, 1702, 1703, 1713, 1714, 1715, 1716, 1720, 1721, 1728, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1754, 1755, 1761, 1765, 1768, 1780, 1781, 1793, 1816, 1827, 1845, 1852, 1859, 1863, 1867, 1869, 1874, 1909, 1920, 1924, 1990, 2001, 2008, 2010, 2012, 2013, 2014, 2017, 2020, 2021, 2023, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2049, 2050, 2051, 2054, 2056, 2059, 2061, 2063, 2064, 2066, 2067, 2072, 2073, 2074, 2077, 2078, 2080, 2081, 2082, 2084, 2093, 2095, 2096, 2098, 2099, 2106, 2108, 2109, 2112], "network": [0, 1, 7, 8, 15, 31, 32, 34, 45, 842, 1051, 1269, 1285, 1286, 1431, 1437, 1438, 1439, 1442, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1476, 1488, 1493, 1523, 1530, 1535, 1536, 1542, 1551, 1553, 1563, 1567, 1569, 1571, 1594, 1628, 1629, 1684, 1703, 1728, 1731, 1757, 1762, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 2010, 2012, 2013, 2037, 2038, 2044, 2054, 2055, 2058, 2061, 2063, 2067, 2072, 2073, 2074, 2095], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 14, 15, 22, 23, 27, 29, 32, 42, 45, 46, 50, 51, 53, 62, 81, 83, 321, 488, 517, 583, 768, 769, 860, 862, 975, 1062, 1134, 1136, 1231, 1267, 1269, 1270, 1299, 1378, 1380, 1432, 1433, 1434, 1440, 1442, 1459, 1468, 1476, 1510, 1519, 1520, 1521, 1523, 1529, 1567, 1568, 1569, 1570, 1571, 1574, 1584, 1596, 1597, 1598, 1613, 1626, 1646, 1713, 1720, 1721, 1755, 1756, 1758, 1887, 1949, 1950, 1951, 1952, 2008, 2010, 2012, 2013, 2017, 2020, 2023, 2026, 2029, 2039, 2041, 2042, 2046, 2047, 2050, 2051, 2056, 2058, 2059, 2061, 2063, 2066, 2067, 2072, 2074, 2082, 2086, 2089, 2090, 2092, 2094, 2097, 2098, 2099, 2100, 2104, 2105, 2106, 2108, 2109, 2110], "loss": [0, 1, 23, 27, 28, 31, 33, 34, 53, 1165, 1266, 1305, 1306, 1315, 1333, 1427, 1435, 1436, 1442, 1456, 1458, 1465, 1476, 1482, 1483, 1488, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1573, 1601, 1602, 1612, 1613, 1626, 1638, 1641, 1665, 1673, 1685, 1697, 1698, 1713, 1755, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1794, 1798, 1867, 2008, 2009, 2026, 2031, 2039, 2042, 2043, 2046, 2048, 2051, 2063, 2067, 2068, 2072, 2073, 2082], "comput": [0, 3, 5, 7, 8, 11, 14, 17, 22, 23, 27, 29, 33, 34, 36, 38, 50, 51, 53, 54, 55, 57, 150, 290, 486, 487, 495, 680, 681, 683, 697, 698, 760, 768, 769, 800, 802, 819, 820, 821, 822, 824, 825, 890, 894, 896, 897, 899, 901, 902, 903, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 925, 926, 945, 946, 947, 948, 949, 950, 961, 963, 964, 965, 966, 972, 989, 991, 1005, 1048, 1051, 1083, 1089, 1098, 1100, 1103, 1106, 1110, 1111, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1149, 1151, 1152, 1153, 1155, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1184, 1211, 1212, 1213, 1223, 1226, 1229, 1230, 1231, 1232, 1246, 1269, 1272, 1281, 1289, 1290, 1292, 1294, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1368, 1369, 1370, 1373, 1414, 1416, 1420, 1427, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1453, 1454, 1455, 1457, 1458, 1460, 1465, 1466, 1474, 1477, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1529, 1530, 1532, 1537, 1538, 1539, 1557, 1559, 1563, 1572, 1573, 1576, 1596, 1597, 1598, 1611, 1612, 1620, 1621, 1628, 1629, 1631, 1638, 1640, 1641, 1648, 1654, 1655, 1656, 1657, 1658, 1659, 1665, 1670, 1673, 1681, 1685, 1687, 1688, 1697, 1698, 1703, 1706, 1712, 1713, 1714, 1718, 1720, 1721, 1722, 1724, 1727, 1729, 1731, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1747, 1748, 1755, 1761, 1765, 1766, 1768, 1778, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1817, 1823, 1824, 1828, 1829, 1843, 1844, 1867, 1874, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1897, 1900, 1901, 1902, 1903, 1920, 1924, 1925, 1941, 1946, 1970, 1973, 2009, 2010, 2013, 2017, 2020, 2021, 2026, 2030, 2031, 2033, 2038, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2052, 2058, 2059, 2061, 2063, 2067, 2070, 2072, 2077, 2078, 2083, 2087, 2090, 2092, 2093, 2095, 2096, 2097, 2098, 2101, 2107, 2110, 2111], "backward": [0, 1, 5, 9, 27, 28, 29, 31, 32, 33, 34, 46, 50, 53, 57, 58, 62, 64, 290, 335, 487, 488, 496, 503, 504, 513, 515, 517, 581, 680, 686, 689, 760, 815, 816, 817, 891, 899, 900, 901, 902, 903, 904, 905, 906, 907, 910, 912, 915, 918, 920, 925, 926, 936, 939, 941, 953, 978, 1051, 1110, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1163, 1164, 1182, 1269, 1342, 1350, 1364, 1374, 1435, 1436, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1465, 1474, 1475, 1476, 1489, 1493, 1494, 1510, 1514, 1515, 1523, 1529, 1530, 1537, 1539, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1601, 1602, 1612, 1613, 1629, 1640, 1665, 1668, 1704, 1708, 1709, 1713, 1733, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1811, 1823, 1897, 1901, 1905, 1924, 1961, 2008, 2009, 2011, 2013, 2017, 2019, 2025, 2031, 2032, 2037, 2038, 2043, 2044, 2045, 2046, 2047, 2050, 2051, 2053, 2054, 2059, 2063, 2064, 2066, 2067, 2072, 2077, 2078, 2083, 2089, 2090, 2093, 2094, 2099, 2102, 2104, 2106, 2107, 2108], "under": [0, 1, 3, 4, 5, 9, 22, 27, 32, 33, 45, 50, 53, 54, 56, 58, 61, 81, 916, 920, 932, 958, 1183, 1269, 1442, 1523, 1594, 1620, 1621, 1727, 1730, 1733, 1775, 1844, 2017, 2022, 2029, 2038, 2039, 2042, 2043, 2045, 2047, 2048, 2053, 2059, 2064, 2065, 2067, 2070, 2071, 2074, 2078, 2082, 2086, 2088, 2095, 2097, 2098, 2103, 2106, 2108], "recommend": [0, 1, 5, 22, 23, 27, 29, 33, 34, 36, 45, 46, 53, 57, 61, 62, 64, 84, 85, 87, 448, 894, 983, 988, 989, 1127, 1128, 1129, 1137, 1138, 1139, 1256, 1272, 1315, 1342, 1389, 1427, 1459, 1641, 1713, 1830, 1957, 1962, 2008, 2010, 2017, 2024, 2029, 2031, 2037, 2038, 2039, 2041, 2042, 2044, 2045, 2051, 2053, 2054, 2056, 2059, 2061, 2064, 2067, 2083, 2100], "correspond": [0, 1, 7, 18, 19, 22, 23, 27, 29, 31, 33, 34, 45, 50, 53, 60, 62, 82, 415, 473, 474, 513, 515, 517, 544, 545, 680, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 735, 793, 797, 836, 838, 858, 859, 860, 865, 881, 890, 892, 893, 894, 901, 903, 906, 907, 909, 911, 920, 940, 990, 1051, 1072, 1101, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1181, 1184, 1223, 1232, 1258, 1269, 1286, 1300, 1305, 1306, 1311, 1314, 1333, 1340, 1342, 1356, 1371, 1409, 1436, 1459, 1465, 1493, 1523, 1529, 1546, 1570, 1620, 1629, 1667, 1713, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1762, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1799, 1816, 1817, 1827, 1850, 1859, 1864, 1874, 1909, 1918, 1919, 1924, 1956, 1959, 1960, 1968, 1969, 2008, 2010, 2011, 2013, 2017, 2026, 2030, 2031, 2038, 2039, 2042, 2043, 2044, 2045, 2047, 2048, 2050, 2051, 2055, 2059, 2061, 2064, 2066, 2067, 2072, 2073, 2077, 2078, 2079, 2082, 2084, 2087, 2088, 2096, 2100, 2105, 2106, 2108], "creat": [0, 1, 3, 5, 6, 7, 9, 14, 22, 23, 27, 29, 31, 32, 33, 34, 36, 37, 43, 45, 46, 48, 49, 50, 51, 53, 61, 62, 64, 84, 85, 87, 88, 150, 222, 254, 335, 486, 580, 581, 583, 584, 585, 587, 588, 680, 732, 738, 739, 740, 745, 746, 756, 764, 792, 793, 794, 814, 815, 816, 817, 819, 824, 855, 879, 880, 881, 894, 899, 915, 916, 917, 918, 940, 952, 954, 965, 966, 970, 971, 973, 990, 1016, 1048, 1049, 1058, 1094, 1109, 1158, 1159, 1160, 1161, 1184, 1185, 1186, 1187, 1190, 1266, 1269, 1272, 1282, 1288, 1293, 1299, 1300, 1306, 1308, 1327, 1340, 1356, 1371, 1409, 1435, 1456, 1465, 1466, 1469, 1483, 1489, 1514, 1515, 1523, 1526, 1527, 1528, 1552, 1555, 1556, 1563, 1572, 1573, 1575, 1583, 1585, 1586, 1713, 1733, 1754, 1761, 1766, 1774, 1775, 1794, 1862, 1863, 1892, 1904, 1909, 1939, 1946, 2009, 2013, 2014, 2023, 2029, 2038, 2039, 2042, 2043, 2044, 2045, 2047, 2048, 2051, 2052, 2053, 2056, 2061, 2063, 2064, 2065, 2066, 2067, 2072, 2073, 2074, 2077, 2079, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2107, 2108, 2110, 2112], "optim": [0, 1, 2, 7, 8, 14, 15, 23, 27, 28, 29, 34, 51, 53, 62, 819, 920, 929, 933, 973, 976, 1106, 1173, 1184, 1269, 1273, 1279, 1281, 1285, 1286, 1325, 1342, 1437, 1438, 1439, 1458, 1465, 1485, 1486, 1487, 1523, 1526, 1527, 1528, 1529, 1556, 1563, 1571, 1681, 1703, 1713, 1720, 1721, 1727, 1733, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 2009, 2010, 2012, 2023, 2031, 2037, 2041, 2043, 2044, 2046, 2048, 2051, 2053, 2061, 2066, 2067, 2077, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2108, 2111, 2114], "default": [0, 2, 3, 5, 9, 11, 12, 14, 18, 19, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 42, 43, 44, 45, 46, 49, 50, 51, 53, 56, 57, 58, 59, 60, 62, 64, 68, 69, 72, 73, 74, 75, 77, 81, 84, 85, 87, 150, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 240, 267, 290, 297, 325, 331, 393, 415, 445, 446, 447, 448, 449, 458, 496, 499, 500, 520, 525, 580, 581, 583, 680, 694, 697, 712, 713, 714, 715, 716, 717, 720, 730, 731, 732, 733, 735, 755, 758, 760, 768, 769, 770, 772, 773, 774, 779, 785, 793, 798, 803, 808, 809, 814, 817, 819, 820, 821, 822, 825, 828, 829, 830, 831, 832, 833, 834, 835, 842, 843, 844, 845, 846, 847, 849, 850, 855, 856, 857, 859, 866, 880, 881, 894, 896, 897, 898, 901, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 940, 942, 951, 957, 961, 964, 965, 966, 970, 973, 995, 1005, 1008, 1011, 1013, 1017, 1020, 1021, 1022, 1025, 1026, 1033, 1034, 1037, 1048, 1050, 1051, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1076, 1077, 1080, 1082, 1083, 1084, 1087, 1088, 1089, 1094, 1095, 1096, 1097, 1098, 1101, 1106, 1107, 1108, 1109, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1174, 1175, 1178, 1179, 1213, 1215, 1216, 1222, 1223, 1227, 1228, 1231, 1232, 1245, 1258, 1260, 1266, 1269, 1270, 1273, 1281, 1285, 1286, 1289, 1290, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1356, 1359, 1361, 1367, 1369, 1370, 1371, 1375, 1382, 1383, 1390, 1398, 1399, 1413, 1414, 1416, 1417, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1551, 1555, 1556, 1560, 1561, 1563, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1626, 1628, 1629, 1631, 1633, 1640, 1641, 1648, 1654, 1655, 1656, 1665, 1666, 1668, 1673, 1681, 1687, 1688, 1696, 1700, 1706, 1712, 1713, 1714, 1715, 1716, 1718, 1719, 1722, 1723, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1755, 1756, 1758, 1760, 1761, 1762, 1763, 1765, 1767, 1768, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1813, 1821, 1823, 1824, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1842, 1845, 1851, 1852, 1855, 1859, 1863, 1864, 1865, 1866, 1867, 1871, 1873, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1917, 1918, 1919, 1920, 1923, 1924, 1925, 1939, 1940, 1946, 1948, 1950, 1952, 1957, 1958, 1961, 1962, 1967, 1968, 1969, 1973, 1978, 1979, 1982, 1987, 1988, 1990, 2001, 2005, 2006, 2007, 2008, 2009, 2010, 2013, 2017, 2019, 2022, 2023, 2024, 2029, 2032, 2037, 2038, 2041, 2043, 2044, 2045, 2046, 2047, 2049, 2051, 2054, 2055, 2056, 2057, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2071, 2072, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2087, 2089, 2094, 2095, 2098, 2099, 2102, 2104, 2105, 2107, 2108, 2110, 2112], "net": [0, 6, 15, 36, 56, 62, 1269, 1285, 1286, 1459, 1523, 1713, 1744, 1798, 2012, 2013, 2038, 2039, 2042, 2051, 2082], "sgd": [0, 22, 23, 31, 488, 929, 1465, 1703, 1713, 1799, 1805, 1807, 2038, 2042, 2043, 2051, 2053, 2063, 2072, 2073], "target": [0, 14, 31, 33, 50, 51, 53, 57, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 499, 735, 766, 767, 792, 797, 860, 862, 863, 958, 1165, 1182, 1269, 1279, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1435, 1436, 1442, 1456, 1458, 1470, 1471, 1476, 1482, 1483, 1488, 1489, 1514, 1515, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1537, 1555, 1556, 1567, 1576, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1601, 1602, 1610, 1612, 1613, 1624, 1625, 1626, 1637, 1638, 1641, 1642, 1653, 1661, 1662, 1663, 1664, 1665, 1673, 1681, 1685, 1686, 1713, 1793, 1961, 2011, 2013, 2038, 2039, 2042, 2053, 2059, 2061, 2063, 2064, 2067, 2068, 2072, 2082, 2087, 2090, 2094, 2095, 2097, 2107, 2108], "data": [0, 1, 2, 3, 7, 11, 12, 18, 20, 23, 27, 29, 31, 32, 34, 35, 36, 39, 42, 45, 48, 51, 53, 57, 60, 62, 64, 65, 69, 73, 139, 150, 195, 196, 326, 329, 333, 336, 341, 445, 448, 481, 493, 497, 499, 617, 738, 739, 740, 760, 772, 773, 774, 781, 792, 793, 794, 798, 819, 820, 821, 822, 823, 825, 827, 866, 880, 881, 891, 894, 906, 927, 942, 951, 957, 1009, 1087, 1088, 1107, 1108, 1109, 1119, 1120, 1121, 1124, 1126, 1127, 1129, 1137, 1138, 1139, 1142, 1145, 1146, 1147, 1148, 1157, 1158, 1160, 1161, 1162, 1164, 1173, 1182, 1190, 1194, 1198, 1200, 1227, 1228, 1230, 1248, 1251, 1277, 1281, 1285, 1289, 1340, 1341, 1342, 1356, 1361, 1369, 1371, 1385, 1386, 1414, 1416, 1417, 1440, 1442, 1450, 1451, 1452, 1459, 1474, 1477, 1485, 1486, 1487, 1493, 1495, 1510, 1530, 1539, 1540, 1576, 1594, 1599, 1600, 1604, 1605, 1606, 1639, 1646, 1648, 1687, 1688, 1713, 1714, 1715, 1716, 1720, 1721, 1754, 1755, 1756, 1757, 1759, 1768, 1772, 1773, 1774, 1775, 1799, 1805, 1813, 1821, 1824, 1825, 1826, 1830, 1832, 1833, 1835, 1836, 1837, 1838, 1839, 1846, 1859, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1900, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1923, 1924, 1939, 1948, 1950, 1952, 1960, 1961, 1962, 2006, 2007, 2009, 2010, 2011, 2014, 2017, 2020, 2021, 2023, 2026, 2029, 2032, 2038, 2039, 2040, 2042, 2044, 2045, 2050, 2053, 2055, 2056, 2057, 2058, 2059, 2062, 2063, 2064, 2065, 2067, 2070, 2072, 2074, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2086, 2087, 2088, 2092, 2095, 2096, 2098, 2099, 2101, 2106, 2110], "zero_grad": [0, 1, 31, 1269, 1523, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1798, 2038, 2042, 2046, 2051, 2053, 2063], "output": [0, 1, 4, 5, 7, 12, 18, 22, 23, 27, 29, 31, 32, 33, 34, 36, 42, 43, 50, 57, 58, 59, 62, 64, 73, 80, 139, 313, 321, 445, 446, 447, 449, 513, 517, 566, 617, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 720, 728, 729, 734, 735, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 772, 773, 774, 775, 777, 779, 780, 781, 782, 783, 785, 786, 787, 792, 793, 794, 796, 799, 802, 814, 817, 859, 862, 863, 864, 866, 875, 876, 879, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 901, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 941, 943, 944, 945, 946, 947, 948, 949, 950, 953, 957, 960, 961, 962, 963, 964, 965, 966, 968, 971, 987, 989, 990, 992, 993, 1005, 1018, 1020, 1021, 1022, 1048, 1049, 1051, 1061, 1062, 1085, 1086, 1087, 1088, 1090, 1093, 1094, 1096, 1098, 1101, 1103, 1105, 1106, 1107, 1108, 1109, 1111, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1161, 1162, 1164, 1165, 1166, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1182, 1184, 1193, 1210, 1211, 1212, 1213, 1223, 1226, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1244, 1246, 1263, 1264, 1266, 1269, 1273, 1281, 1285, 1286, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1392, 1408, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1620, 1621, 1623, 1624, 1625, 1626, 1629, 1631, 1640, 1641, 1646, 1648, 1654, 1655, 1656, 1665, 1666, 1670, 1671, 1672, 1673, 1681, 1696, 1700, 1701, 1702, 1706, 1712, 1713, 1728, 1729, 1730, 1731, 1734, 1755, 1757, 1758, 1762, 1765, 1767, 1768, 1769, 1772, 1773, 1775, 1776, 1794, 1798, 1811, 1812, 1820, 1821, 1824, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1844, 1845, 1847, 1848, 1852, 1854, 1859, 1867, 1871, 1874, 1876, 1888, 1889, 1891, 1896, 1901, 1902, 1904, 1905, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1936, 1937, 1938, 1943, 1946, 1948, 1949, 1951, 1954, 1956, 1957, 1958, 1959, 1961, 1967, 1968, 1969, 1970, 1973, 1975, 1976, 2006, 2007, 2008, 2010, 2011, 2013, 2017, 2019, 2021, 2023, 2030, 2031, 2032, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2051, 2054, 2055, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2069, 2073, 2077, 2078, 2080, 2081, 2082, 2084, 2087, 2088, 2090, 2093, 2094, 2095, 2097, 2098, 2099, 2101, 2102, 2107, 2108], "loss_fn": [0, 31, 32, 1793, 2038, 2042, 2043, 2053, 2063], "exit": [0, 1, 2, 4, 18, 27, 36, 45, 53, 61, 62, 896, 898, 1587, 1713, 2013, 2029, 2039, 2044, 2053, 2061, 2074, 2079], "befor": [0, 1, 3, 6, 7, 14, 18, 19, 22, 23, 27, 28, 29, 31, 32, 33, 34, 37, 42, 44, 45, 46, 48, 50, 51, 53, 62, 97, 150, 415, 486, 747, 760, 788, 789, 790, 894, 901, 902, 904, 906, 929, 971, 983, 1008, 1087, 1088, 1089, 1098, 1106, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1147, 1148, 1151, 1160, 1163, 1182, 1269, 1281, 1283, 1306, 1322, 1326, 1339, 1369, 1382, 1414, 1417, 1459, 1465, 1466, 1469, 1474, 1523, 1524, 1525, 1563, 1567, 1575, 1629, 1648, 1687, 1688, 1703, 1706, 1707, 1708, 1709, 1713, 1720, 1721, 1728, 1762, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1807, 1821, 1824, 1850, 1859, 1869, 1870, 1900, 1903, 1906, 1907, 1908, 1910, 1911, 1920, 1923, 1946, 1957, 1978, 2010, 2012, 2013, 2017, 2021, 2029, 2038, 2039, 2042, 2043, 2044, 2047, 2048, 2050, 2051, 2054, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2067, 2072, 2073, 2074, 2077, 2078, 2082, 2084, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2104], "step": [0, 1, 2, 4, 9, 11, 14, 22, 23, 27, 28, 29, 31, 32, 34, 46, 50, 53, 57, 62, 79, 538, 607, 686, 768, 769, 858, 866, 896, 899, 900, 929, 944, 968, 1229, 1317, 1340, 1341, 1342, 1356, 1359, 1371, 1470, 1471, 1493, 1597, 1598, 1624, 1625, 1713, 1754, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1830, 1839, 1867, 1892, 1964, 2010, 2011, 2017, 2031, 2038, 2039, 2042, 2043, 2044, 2046, 2051, 2053, 2055, 2057, 2059, 2061, 2064, 2066, 2067, 2072, 2073, 2077, 2082, 2090, 2099, 2102, 2103, 2106, 2108], "usag": [0, 1, 4, 7, 9, 12, 15, 22, 27, 29, 31, 32, 33, 34, 35, 36, 39, 42, 43, 45, 48, 53, 62, 64, 65, 748, 757, 792, 793, 794, 810, 811, 812, 813, 815, 816, 817, 855, 859, 891, 906, 973, 1054, 1075, 1079, 1106, 1157, 1163, 1167, 1168, 1169, 1196, 1283, 1342, 1405, 1713, 2003, 2009, 2010, 2013, 2017, 2025, 2026, 2031, 2038, 2039, 2044, 2046, 2047, 2059, 2061, 2066, 2074, 2082, 2083, 2086, 2087, 2088, 2095, 2098, 2099, 2100, 2108], "along": [0, 14, 18, 22, 27, 32, 34, 38, 45, 50, 64, 70, 313, 315, 317, 321, 493, 513, 515, 517, 686, 697, 819, 876, 877, 960, 967, 994, 1005, 1020, 1022, 1089, 1097, 1098, 1105, 1106, 1122, 1127, 1130, 1134, 1137, 1140, 1146, 1175, 1210, 1235, 1244, 1246, 1291, 1302, 1338, 1392, 1414, 1418, 1419, 1428, 1429, 1430, 1436, 1457, 1470, 1471, 1513, 1516, 1517, 1518, 1557, 1559, 1594, 1602, 1611, 1624, 1625, 1628, 1631, 1648, 1654, 1655, 1656, 1666, 1687, 1688, 1739, 1741, 1748, 1749, 1758, 1767, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1805, 1824, 1844, 1845, 1850, 1861, 1896, 1900, 1903, 1904, 1912, 1917, 1936, 1940, 1943, 1946, 1955, 1970, 1973, 1975, 2008, 2012, 2017, 2032, 2040, 2044, 2046, 2050, 2051, 2059, 2064, 2067, 2078], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 19, 21, 22, 23, 24, 27, 28, 29, 32, 33, 34, 35, 36, 37, 41, 44, 45, 46, 48, 51, 53, 56, 57, 58, 59, 60, 62, 81, 83, 85, 86, 150, 254, 255, 313, 321, 486, 487, 488, 493, 495, 498, 513, 515, 517, 524, 545, 618, 680, 735, 771, 780, 784, 793, 855, 860, 861, 862, 874, 887, 888, 889, 891, 893, 894, 895, 901, 904, 906, 907, 909, 911, 915, 916, 917, 920, 921, 925, 926, 927, 928, 929, 944, 952, 955, 957, 963, 964, 965, 966, 973, 978, 987, 1008, 1009, 1011, 1013, 1014, 1030, 1049, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1070, 1071, 1072, 1076, 1084, 1089, 1095, 1104, 1106, 1110, 1122, 1123, 1125, 1127, 1146, 1147, 1148, 1149, 1160, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1179, 1196, 1197, 1198, 1217, 1219, 1223, 1232, 1233, 1250, 1254, 1256, 1257, 1269, 1283, 1286, 1299, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1339, 1342, 1345, 1348, 1350, 1360, 1361, 1385, 1386, 1389, 1409, 1415, 1427, 1431, 1436, 1441, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1465, 1466, 1467, 1483, 1493, 1519, 1520, 1521, 1523, 1529, 1535, 1536, 1537, 1539, 1551, 1563, 1571, 1582, 1594, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1618, 1620, 1621, 1629, 1632, 1633, 1634, 1635, 1640, 1644, 1648, 1649, 1660, 1667, 1674, 1675, 1676, 1679, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1699, 1700, 1701, 1702, 1703, 1708, 1709, 1713, 1714, 1720, 1721, 1727, 1730, 1731, 1766, 1767, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1811, 1822, 1823, 1849, 1855, 1859, 1867, 1899, 1900, 1924, 1946, 1948, 1957, 1961, 1964, 1973, 1974, 2008, 2009, 2010, 2012, 2013, 2017, 2019, 2020, 2022, 2024, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2037, 2039, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2054, 2056, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2073, 2074, 2076, 2077, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2090, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2106, 2108, 2109, 2110, 2111, 2112], "complex": [0, 1, 3, 7, 8, 22, 23, 26, 27, 33, 36, 62, 311, 329, 483, 499, 685, 692, 920, 921, 965, 966, 988, 989, 1101, 1107, 1108, 1109, 1127, 1149, 1154, 1182, 1223, 1240, 1248, 1259, 1261, 1262, 1265, 1266, 1269, 1290, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1319, 1322, 1324, 1326, 1327, 1328, 1329, 1333, 1334, 1338, 1339, 1340, 1342, 1350, 1356, 1368, 1369, 1373, 1408, 1450, 1451, 1452, 1489, 1523, 1604, 1605, 1606, 1727, 1768, 1779, 1817, 1830, 1836, 1837, 1843, 1864, 1874, 1920, 1921, 1924, 1961, 1970, 1971, 1972, 2008, 2009, 2011, 2013, 2014, 2024, 2053, 2059, 2062, 2079, 2080, 2083, 2084, 2096, 2099, 2100, 2101], "scenario": [0, 22, 27, 45, 1436, 1774, 1962, 2042, 2048, 2053, 2059, 2061, 2066, 2072, 2099, 2100], "g": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 22, 23, 27, 29, 31, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 49, 50, 53, 56, 58, 60, 61, 62, 63, 64, 72, 73, 486, 580, 617, 748, 757, 760, 793, 794, 815, 817, 841, 855, 860, 862, 863, 890, 901, 903, 906, 907, 916, 920, 921, 954, 987, 1051, 1106, 1157, 1164, 1168, 1169, 1190, 1192, 1197, 1200, 1218, 1220, 1223, 1266, 1269, 1276, 1277, 1285, 1341, 1442, 1443, 1459, 1461, 1462, 1463, 1467, 1469, 1474, 1482, 1488, 1493, 1494, 1523, 1524, 1533, 1539, 1555, 1613, 1629, 1713, 1714, 1715, 1716, 1720, 1721, 1729, 1765, 1768, 1778, 1779, 1780, 1781, 1784, 1790, 1791, 1792, 1793, 1845, 1852, 1863, 1867, 1869, 1887, 1909, 1920, 2008, 2010, 2012, 2013, 2014, 2017, 2020, 2021, 2029, 2038, 2039, 2042, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2054, 2055, 2059, 2061, 2063, 2064, 2066, 2067, 2072, 2077, 2080, 2081, 2082, 2094, 2095, 2098, 2099, 2106, 2108, 2109], "penalti": [0, 781, 1062, 1777, 1778, 1779, 1780, 1782, 1784, 1790, 1791, 1793, 2068, 2104], "multipl": [0, 1, 2, 3, 5, 22, 23, 27, 28, 29, 32, 34, 35, 38, 45, 46, 48, 50, 53, 58, 61, 62, 79, 191, 208, 315, 513, 686, 688, 689, 695, 696, 760, 842, 875, 876, 879, 915, 927, 928, 929, 961, 963, 973, 991, 995, 1020, 1021, 1022, 1048, 1104, 1106, 1109, 1160, 1163, 1168, 1169, 1170, 1171, 1174, 1175, 1213, 1219, 1233, 1234, 1283, 1286, 1291, 1292, 1307, 1308, 1309, 1325, 1330, 1335, 1336, 1364, 1367, 1372, 1374, 1435, 1436, 1453, 1454, 1455, 1456, 1458, 1466, 1469, 1474, 1482, 1488, 1489, 1511, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1575, 1601, 1602, 1612, 1621, 1641, 1665, 1673, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1792, 1796, 1800, 1801, 1802, 1803, 1804, 1809, 1811, 1867, 1894, 1901, 1902, 1906, 1907, 1908, 1910, 1911, 1940, 1941, 1948, 1956, 1961, 1973, 1974, 2008, 2009, 2012, 2013, 2017, 2029, 2030, 2031, 2032, 2039, 2041, 2043, 2045, 2047, 2048, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2061, 2063, 2064, 2066, 2067, 2068, 2072, 2073, 2074, 2077, 2079, 2088, 2089, 2092, 2093, 2096, 2098, 2099, 2107], "custom": [0, 3, 5, 14, 15, 22, 27, 28, 29, 30, 31, 32, 33, 36, 38, 41, 42, 44, 50, 51, 53, 63, 64, 66, 80, 82, 83, 84, 85, 87, 499, 793, 797, 814, 815, 816, 817, 838, 840, 860, 861, 862, 863, 891, 901, 904, 906, 927, 973, 975, 1016, 1081, 1178, 1269, 1523, 1567, 1571, 1572, 1573, 1698, 1735, 1744, 1761, 1799, 1962, 1964, 2009, 2014, 2019, 2029, 2030, 2039, 2050, 2055, 2056, 2057, 2059, 2070, 2071, 2087, 2089, 2096, 2098, 2100, 2106], "autograd": [0, 4, 5, 7, 8, 12, 27, 31, 34, 50, 53, 54, 57, 64, 139, 335, 445, 446, 447, 448, 449, 486, 488, 496, 680, 689, 866, 880, 881, 895, 896, 901, 906, 907, 916, 917, 918, 928, 929, 936, 937, 938, 939, 940, 942, 951, 970, 975, 987, 1051, 1107, 1108, 1109, 1119, 1124, 1142, 1160, 1161, 1162, 1163, 1164, 1173, 1175, 1227, 1228, 1269, 1289, 1309, 1340, 1356, 1364, 1374, 1476, 1523, 1529, 1571, 1631, 1646, 1713, 1772, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1870, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1898, 1906, 1907, 1908, 1909, 1910, 1911, 1939, 1973, 2006, 2007, 2009, 2011, 2015, 2017, 2020, 2022, 2032, 2037, 2042, 2043, 2046, 2047, 2048, 2050, 2051, 2066, 2083, 2084, 2089, 2099, 2100, 2104, 2106, 2108, 2109], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 28, 29, 31, 35, 36, 38, 42, 43, 45, 46, 50, 51, 53, 56, 58, 60, 61, 64, 67, 72, 73, 76, 78, 80, 81, 83, 84, 87, 88, 119, 150, 195, 258, 260, 289, 298, 321, 486, 487, 488, 493, 496, 517, 541, 556, 680, 689, 693, 694, 698, 699, 748, 757, 758, 760, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 790, 791, 792, 793, 797, 798, 800, 814, 815, 816, 817, 824, 826, 838, 842, 855, 858, 860, 862, 863, 864, 878, 879, 894, 896, 897, 898, 899, 900, 901, 906, 907, 915, 916, 917, 918, 920, 921, 925, 926, 927, 929, 933, 936, 939, 942, 951, 953, 961, 963, 967, 970, 973, 975, 976, 977, 979, 980, 981, 983, 987, 988, 989, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1009, 1011, 1013, 1016, 1033, 1034, 1037, 1042, 1043, 1048, 1049, 1051, 1052, 1053, 1054, 1056, 1061, 1062, 1070, 1071, 1073, 1074, 1075, 1079, 1089, 1094, 1096, 1097, 1104, 1106, 1110, 1122, 1123, 1125, 1145, 1149, 1152, 1153, 1154, 1157, 1160, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1182, 1184, 1193, 1208, 1213, 1214, 1223, 1227, 1228, 1229, 1231, 1233, 1241, 1242, 1243, 1256, 1266, 1267, 1268, 1269, 1270, 1272, 1274, 1275, 1280, 1281, 1282, 1283, 1285, 1287, 1289, 1290, 1291, 1293, 1298, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1321, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1345, 1347, 1356, 1359, 1360, 1364, 1367, 1370, 1372, 1374, 1375, 1376, 1405, 1411, 1414, 1415, 1431, 1435, 1436, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1456, 1460, 1464, 1467, 1472, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1482, 1488, 1490, 1491, 1492, 1493, 1494, 1509, 1512, 1513, 1515, 1522, 1523, 1528, 1529, 1531, 1539, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1559, 1560, 1561, 1562, 1564, 1565, 1567, 1569, 1571, 1572, 1573, 1575, 1577, 1579, 1580, 1581, 1583, 1585, 1586, 1587, 1704, 1708, 1709, 1713, 1720, 1721, 1727, 1728, 1733, 1744, 1754, 1755, 1756, 1758, 1761, 1762, 1763, 1765, 1766, 1768, 1769, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1795, 1798, 1799, 1801, 1804, 1805, 1806, 1811, 1812, 1813, 1817, 1823, 1830, 1834, 1839, 1852, 1861, 1862, 1863, 1865, 1866, 1872, 1874, 1882, 1886, 1887, 1892, 1895, 1897, 1898, 1899, 1900, 1901, 1903, 1909, 1916, 1920, 1925, 1926, 1927, 1936, 1940, 1942, 1946, 1956, 1957, 1958, 1961, 1962, 1966, 1970, 1971, 1972, 1973, 1974, 1987, 1988, 1990, 1993, 1996, 1997, 1998, 1999, 2000, 2003, 2007, 2008, 2009, 2014, 2017, 2019, 2021, 2024, 2025, 2026, 2029, 2031, 2034, 2037, 2040, 2042, 2043, 2044, 2046, 2050, 2051, 2053, 2054, 2059, 2063, 2064, 2065, 2066, 2067, 2069, 2071, 2072, 2073, 2074, 2076, 2079, 2080, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2103, 2104, 2105, 2106, 2107, 2108, 2111], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 22, 23, 27, 28, 29, 31, 32, 33, 46, 50, 51, 53, 54, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 298, 415, 541, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 792, 793, 814, 841, 855, 860, 861, 862, 863, 865, 973, 1048, 1051, 1106, 1163, 1172, 1173, 1267, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1285, 1286, 1287, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1703, 1712, 1713, 1714, 1715, 1716, 1730, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1754, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1895, 1920, 1961, 1962, 2008, 2009, 2010, 2011, 2015, 2021, 2025, 2031, 2032, 2038, 2043, 2046, 2047, 2051, 2053, 2054, 2055, 2058, 2059, 2061, 2063, 2064, 2065, 2067, 2069, 2072, 2082, 2084, 2088, 2090, 2094, 2098, 2099, 2106, 2107, 2108], "modul": [0, 1, 3, 5, 6, 8, 11, 12, 14, 18, 19, 23, 27, 29, 31, 32, 33, 37, 39, 42, 45, 46, 50, 51, 53, 54, 56, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 415, 487, 488, 680, 686, 689, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 745, 746, 747, 756, 761, 762, 763, 764, 765, 788, 789, 790, 791, 792, 793, 797, 799, 800, 802, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 838, 839, 840, 841, 855, 858, 859, 860, 861, 862, 863, 865, 916, 925, 926, 929, 941, 953, 973, 1051, 1163, 1172, 1173, 1175, 1182, 1218, 1267, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1285, 1286, 1287, 1341, 1364, 1374, 1427, 1431, 1437, 1438, 1439, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1475, 1477, 1485, 1486, 1487, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1524, 1525, 1533, 1534, 1538, 1540, 1552, 1557, 1563, 1567, 1568, 1570, 1571, 1620, 1621, 1681, 1696, 1703, 1712, 1713, 1714, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1757, 1761, 1762, 1763, 1765, 1794, 1855, 1899, 1962, 1964, 1965, 1973, 2008, 2009, 2014, 2017, 2019, 2021, 2023, 2025, 2026, 2029, 2031, 2032, 2034, 2036, 2037, 2041, 2042, 2043, 2046, 2047, 2050, 2052, 2053, 2055, 2057, 2058, 2059, 2061, 2063, 2065, 2066, 2069, 2070, 2072, 2075, 2077, 2078, 2082, 2086, 2087, 2088, 2090, 2094, 2096, 2097, 2098, 2099, 2102, 2106, 2107, 2108, 2109], "def": [0, 1, 12, 22, 23, 27, 28, 29, 32, 34, 36, 37, 38, 42, 43, 46, 48, 49, 50, 51, 53, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 398, 792, 793, 862, 863, 891, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 916, 973, 978, 980, 981, 987, 1110, 1163, 1164, 1165, 1167, 1168, 1169, 1171, 1173, 1174, 1175, 1267, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1280, 1281, 1284, 1285, 1286, 1287, 1523, 1524, 1525, 1533, 1534, 1539, 1573, 1681, 1703, 1713, 1733, 1766, 1899, 1973, 2008, 2010, 2012, 2013, 2017, 2025, 2031, 2038, 2039, 2041, 2043, 2044, 2045, 2046, 2051, 2053, 2055, 2056, 2057, 2059, 2060, 2061, 2063, 2064, 2065, 2066, 2067, 2072, 2073, 2074, 2090, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2106, 2107, 2108, 2109], "self": [0, 1, 9, 12, 18, 22, 23, 27, 29, 32, 36, 37, 42, 48, 50, 51, 53, 58, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 97, 139, 150, 153, 154, 155, 170, 172, 175, 178, 179, 180, 190, 191, 195, 196, 208, 216, 218, 232, 233, 240, 254, 255, 258, 259, 267, 286, 290, 297, 311, 313, 315, 317, 319, 321, 323, 325, 326, 328, 329, 330, 331, 333, 341, 377, 393, 398, 400, 401, 402, 415, 454, 471, 481, 483, 497, 498, 499, 500, 513, 515, 517, 520, 523, 525, 537, 543, 544, 545, 546, 558, 560, 580, 581, 583, 584, 585, 587, 588, 604, 607, 608, 614, 617, 618, 620, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 862, 863, 934, 936, 980, 981, 1163, 1164, 1173, 1182, 1184, 1240, 1267, 1268, 1269, 1272, 1273, 1274, 1275, 1276, 1280, 1281, 1285, 1286, 1287, 1427, 1431, 1467, 1522, 1523, 1524, 1525, 1529, 1533, 1534, 1551, 1553, 1563, 1569, 1571, 1660, 1681, 1684, 1703, 1730, 1731, 1733, 1739, 1741, 1754, 1763, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1820, 1841, 2010, 2011, 2012, 2013, 2017, 2026, 2030, 2031, 2037, 2039, 2040, 2041, 2044, 2046, 2051, 2056, 2059, 2061, 2063, 2064, 2065, 2067, 2072, 2079, 2090, 2094, 2096, 2097, 2103, 2106, 2107, 2108], "produc": [0, 7, 14, 22, 27, 29, 35, 37, 39, 42, 48, 50, 51, 58, 59, 61, 62, 79, 88, 486, 732, 738, 739, 740, 745, 746, 756, 764, 792, 793, 944, 964, 1044, 1137, 1138, 1139, 1157, 1168, 1169, 1175, 1184, 1188, 1193, 1194, 1223, 1281, 1285, 1286, 1289, 1305, 1306, 1309, 1316, 1317, 1328, 1333, 1367, 1370, 1371, 1372, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1499, 1500, 1501, 1502, 1503, 1504, 1529, 1613, 1621, 1629, 1640, 1700, 1701, 1702, 1768, 1794, 1823, 1830, 1839, 1924, 1961, 1973, 2010, 2012, 2013, 2021, 2029, 2030, 2038, 2039, 2040, 2042, 2044, 2047, 2049, 2050, 2051, 2054, 2055, 2056, 2057, 2059, 2061, 2077, 2081, 2090, 2094, 2095, 2104, 2108], "after": [0, 1, 7, 9, 12, 14, 22, 23, 27, 28, 29, 31, 33, 45, 48, 53, 61, 62, 64, 69, 70, 260, 486, 488, 680, 760, 790, 858, 860, 862, 863, 894, 896, 901, 902, 906, 973, 983, 1006, 1008, 1044, 1051, 1105, 1164, 1192, 1193, 1254, 1269, 1273, 1325, 1341, 1364, 1382, 1423, 1459, 1474, 1508, 1523, 1526, 1567, 1569, 1571, 1594, 1629, 1703, 1706, 1713, 1733, 1735, 1739, 1741, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1798, 1799, 1805, 1807, 1863, 1920, 1946, 1962, 1964, 1975, 1978, 2008, 2012, 2013, 2025, 2026, 2029, 2037, 2038, 2039, 2042, 2043, 2044, 2046, 2047, 2048, 2050, 2051, 2053, 2054, 2061, 2063, 2064, 2066, 2067, 2072, 2073, 2074, 2075, 2078, 2079, 2080, 2082, 2090, 2093, 2096, 2097, 2099, 2100, 2102, 2104, 2106, 2107, 2108], "disabl": [0, 2, 5, 19, 28, 34, 53, 62, 810, 811, 916, 917, 918, 973, 1051, 1106, 1110, 1163, 1269, 1271, 1285, 1286, 1523, 1529, 1563, 1571, 1681, 1713, 1714, 1763, 1766, 1868, 1871, 1899, 2009, 2012, 2019, 2038, 2041, 2042, 2043, 2044, 2049, 2054, 2055, 2061, 2065, 2071, 2077, 2084, 2098, 2102, 2105, 2106, 2108, 2110], "them": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 22, 27, 29, 32, 36, 37, 42, 45, 48, 50, 53, 57, 58, 61, 62, 150, 221, 254, 486, 734, 894, 901, 904, 906, 911, 955, 1051, 1091, 1094, 1106, 1182, 1184, 1195, 1291, 1300, 1311, 1325, 1337, 1341, 1369, 1417, 1443, 1465, 1523, 1557, 1559, 1687, 1740, 1755, 1758, 1795, 1903, 1905, 1923, 1957, 1962, 1964, 2008, 2012, 2013, 2017, 2020, 2022, 2023, 2026, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2042, 2044, 2045, 2046, 2047, 2049, 2050, 2051, 2055, 2057, 2063, 2065, 2066, 2067, 2068, 2072, 2073, 2074, 2077, 2078, 2082, 2083, 2087, 2090, 2095, 2096, 2097, 2098, 2099, 2104, 2105, 2106, 2107, 2108], "differ": [0, 1, 2, 3, 5, 8, 14, 18, 22, 27, 29, 31, 32, 33, 34, 36, 37, 38, 42, 43, 45, 46, 49, 50, 51, 53, 54, 57, 58, 59, 60, 62, 196, 486, 493, 617, 680, 686, 689, 695, 696, 735, 760, 793, 796, 797, 822, 824, 825, 862, 863, 866, 880, 881, 920, 921, 941, 953, 954, 995, 1089, 1094, 1096, 1098, 1106, 1146, 1147, 1148, 1152, 1153, 1160, 1163, 1168, 1169, 1175, 1184, 1186, 1189, 1223, 1244, 1269, 1275, 1280, 1285, 1299, 1305, 1306, 1316, 1317, 1325, 1328, 1333, 1337, 1364, 1374, 1427, 1436, 1437, 1438, 1439, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1474, 1475, 1483, 1485, 1486, 1487, 1488, 1493, 1494, 1510, 1523, 1526, 1529, 1545, 1546, 1548, 1549, 1550, 1552, 1555, 1563, 1569, 1571, 1573, 1576, 1579, 1580, 1581, 1582, 1594, 1602, 1620, 1629, 1638, 1640, 1642, 1654, 1655, 1656, 1681, 1703, 1713, 1715, 1716, 1727, 1763, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1807, 1813, 1823, 1845, 1879, 1918, 1919, 1924, 1946, 1957, 1958, 1961, 1966, 1968, 1969, 1973, 2008, 2010, 2012, 2013, 2015, 2017, 2019, 2020, 2029, 2030, 2032, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2048, 2051, 2053, 2054, 2055, 2057, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2072, 2074, 2077, 2079, 2080, 2082, 2083, 2084, 2088, 2089, 2090, 2092, 2096, 2097, 2098, 2100, 2101, 2102, 2104, 2105, 2106, 2108], "caus": [0, 1, 2, 3, 5, 11, 14, 18, 22, 26, 27, 29, 31, 38, 44, 45, 46, 50, 58, 62, 84, 556, 617, 878, 881, 894, 976, 1160, 1187, 1196, 1197, 1281, 1285, 1305, 1306, 1333, 1389, 1640, 1641, 1700, 1703, 1713, 1767, 1776, 1863, 1864, 1873, 1920, 1961, 2010, 2013, 2029, 2040, 2042, 2044, 2046, 2053, 2055, 2057, 2061, 2064, 2067, 2068, 2074, 2077, 2080, 2093, 2096, 2098, 2100], "mismatch": [0, 27, 62, 85, 87, 881, 1270, 1775, 1776, 2012, 2038, 2043, 2044, 2046, 2061, 2084], "error": [0, 1, 5, 8, 14, 17, 18, 19, 22, 23, 24, 27, 28, 29, 30, 34, 43, 45, 46, 50, 53, 56, 58, 61, 62, 64, 65, 82, 83, 84, 85, 87, 190, 221, 313, 315, 321, 323, 328, 488, 545, 556, 614, 617, 680, 819, 866, 879, 881, 901, 904, 906, 909, 910, 911, 912, 913, 914, 915, 919, 927, 928, 973, 1006, 1016, 1040, 1051, 1062, 1076, 1080, 1104, 1163, 1167, 1168, 1170, 1175, 1182, 1184, 1193, 1197, 1200, 1233, 1269, 1274, 1284, 1299, 1300, 1309, 1311, 1313, 1316, 1317, 1318, 1328, 1331, 1341, 1359, 1389, 1409, 1435, 1436, 1472, 1483, 1489, 1514, 1523, 1553, 1555, 1582, 1627, 1638, 1661, 1681, 1684, 1685, 1713, 1715, 1716, 1718, 1763, 1768, 1775, 1776, 1819, 1859, 1866, 1909, 1915, 1920, 1961, 1964, 1973, 1974, 2008, 2009, 2010, 2012, 2013, 2017, 2019, 2020, 2029, 2030, 2031, 2032, 2038, 2039, 2042, 2044, 2045, 2048, 2049, 2055, 2059, 2061, 2064, 2070, 2072, 2078, 2083, 2084, 2087, 2088, 2093, 2095, 2096, 2098, 2099, 2110, 2111], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 20, 22, 23, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 42, 43, 44, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 72, 73, 74, 75, 82, 83, 84, 85, 87, 97, 150, 154, 195, 206, 209, 254, 315, 319, 321, 445, 446, 447, 448, 449, 458, 471, 481, 486, 496, 499, 517, 520, 537, 545, 580, 581, 583, 584, 585, 587, 588, 603, 607, 617, 680, 686, 689, 690, 691, 693, 695, 696, 697, 699, 735, 756, 760, 764, 779, 781, 785, 794, 795, 817, 820, 821, 822, 825, 855, 859, 862, 866, 875, 876, 877, 878, 879, 880, 881, 890, 892, 893, 894, 901, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 929, 940, 941, 942, 944, 951, 953, 954, 955, 957, 961, 963, 964, 967, 968, 973, 975, 978, 984, 988, 989, 990, 994, 995, 1005, 1008, 1009, 1011, 1013, 1016, 1018, 1020, 1022, 1029, 1040, 1046, 1051, 1052, 1066, 1073, 1076, 1087, 1088, 1089, 1093, 1094, 1095, 1096, 1097, 1106, 1107, 1108, 1109, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1149, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1174, 1175, 1179, 1182, 1183, 1184, 1192, 1194, 1196, 1197, 1200, 1210, 1218, 1223, 1227, 1228, 1230, 1231, 1232, 1233, 1244, 1246, 1260, 1266, 1269, 1272, 1273, 1274, 1277, 1279, 1281, 1282, 1285, 1286, 1289, 1290, 1291, 1295, 1299, 1300, 1305, 1306, 1308, 1309, 1311, 1312, 1313, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1332, 1333, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1352, 1356, 1357, 1359, 1361, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1389, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1427, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1470, 1471, 1474, 1475, 1476, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1510, 1514, 1515, 1516, 1517, 1518, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1555, 1556, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1579, 1580, 1581, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1624, 1625, 1629, 1631, 1633, 1640, 1641, 1646, 1648, 1650, 1651, 1652, 1654, 1655, 1656, 1665, 1666, 1667, 1670, 1673, 1674, 1681, 1687, 1688, 1699, 1700, 1706, 1712, 1713, 1714, 1718, 1719, 1722, 1723, 1725, 1727, 1728, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1754, 1755, 1756, 1758, 1761, 1762, 1763, 1765, 1766, 1767, 1768, 1772, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1811, 1812, 1817, 1821, 1823, 1824, 1828, 1829, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1844, 1845, 1850, 1852, 1855, 1859, 1861, 1863, 1866, 1867, 1871, 1873, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1896, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1918, 1919, 1920, 1923, 1924, 1936, 1939, 1940, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1957, 1958, 1961, 1964, 1967, 1968, 1969, 1973, 1979, 1985, 1996, 1998, 2006, 2007, 2008, 2010, 2013, 2015, 2017, 2021, 2022, 2023, 2024, 2025, 2026, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2042, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2053, 2054, 2055, 2056, 2057, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2106, 2107, 2108, 2109, 2110, 2111], "cast": [0, 3, 6, 23, 43, 53, 86, 335, 603, 604, 958, 1087, 1088, 1269, 1322, 1326, 1339, 1369, 1414, 1417, 1523, 1648, 1687, 1688, 1768, 1821, 1900, 1903, 1909, 1923, 1928, 1929, 2010, 2038, 2054, 2061, 2078, 2079, 2080, 2099], "back": [0, 1, 2, 14, 19, 22, 23, 27, 29, 34, 45, 50, 53, 58, 62, 64, 69, 73, 486, 735, 837, 920, 970, 973, 1126, 1158, 1164, 1270, 1283, 1335, 1341, 1570, 1718, 1719, 1720, 1721, 1905, 2008, 2010, 2013, 2039, 2044, 2045, 2047, 2053, 2054, 2055, 2061, 2063, 2064, 2067, 2072, 2077, 2079, 2093, 2096, 2099, 2101, 2106, 2109], "from": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 42, 43, 45, 48, 49, 50, 51, 53, 54, 56, 58, 59, 61, 64, 66, 67, 69, 70, 72, 73, 76, 79, 80, 81, 84, 88, 153, 154, 173, 196, 221, 222, 233, 258, 286, 313, 315, 319, 321, 377, 402, 448, 454, 471, 473, 474, 481, 486, 487, 488, 493, 499, 513, 515, 517, 544, 546, 560, 580, 607, 608, 610, 617, 680, 712, 713, 714, 715, 716, 717, 720, 728, 729, 732, 735, 738, 739, 740, 741, 742, 743, 745, 746, 756, 760, 764, 772, 773, 774, 781, 788, 789, 792, 793, 794, 797, 800, 815, 816, 817, 824, 826, 840, 855, 859, 861, 862, 863, 865, 866, 880, 881, 892, 901, 903, 905, 906, 907, 909, 910, 911, 912, 913, 914, 920, 921, 925, 926, 940, 942, 943, 951, 952, 957, 970, 1007, 1008, 1011, 1020, 1021, 1022, 1040, 1044, 1062, 1090, 1106, 1107, 1108, 1109, 1126, 1128, 1129, 1134, 1135, 1136, 1140, 1141, 1142, 1143, 1146, 1147, 1148, 1157, 1159, 1160, 1161, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1177, 1182, 1183, 1184, 1189, 1198, 1206, 1227, 1228, 1232, 1246, 1266, 1267, 1269, 1270, 1272, 1274, 1275, 1276, 1277, 1280, 1281, 1293, 1309, 1313, 1322, 1325, 1326, 1339, 1340, 1341, 1342, 1356, 1360, 1361, 1374, 1380, 1382, 1385, 1386, 1387, 1389, 1409, 1418, 1419, 1427, 1431, 1437, 1438, 1439, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1474, 1475, 1476, 1477, 1483, 1485, 1486, 1487, 1488, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1523, 1524, 1525, 1529, 1533, 1534, 1538, 1539, 1541, 1542, 1563, 1568, 1569, 1571, 1573, 1575, 1576, 1583, 1587, 1594, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1626, 1629, 1631, 1638, 1640, 1654, 1655, 1656, 1668, 1699, 1703, 1712, 1713, 1718, 1720, 1721, 1729, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1748, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1765, 1769, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1813, 1816, 1824, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1845, 1846, 1849, 1851, 1852, 1859, 1871, 1879, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1920, 1921, 1925, 1936, 1939, 1948, 1950, 1952, 1957, 1958, 1961, 1963, 1967, 1976, 1978, 1979, 2009, 2010, 2011, 2012, 2013, 2015, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2029, 2031, 2032, 2033, 2037, 2039, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2058, 2059, 2063, 2065, 2066, 2067, 2068, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2105, 2106, 2107, 2108, 2109, 2110], "alreadi": [0, 1, 3, 11, 22, 23, 27, 28, 33, 45, 46, 53, 61, 62, 195, 206, 209, 463, 486, 524, 580, 603, 604, 792, 840, 855, 859, 880, 927, 929, 1016, 1042, 1181, 1184, 1269, 1279, 1341, 1523, 1707, 1713, 1754, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1955, 1957, 1964, 1992, 2008, 2010, 2020, 2024, 2030, 2031, 2038, 2039, 2042, 2044, 2047, 2048, 2053, 2061, 2063, 2064, 2067, 2073, 2074, 2077, 2079, 2081, 2093, 2096, 2097, 2098], "incur": [0, 5, 23, 27, 29, 53, 963, 2032, 2053, 2072], "addit": [0, 1, 3, 5, 7, 9, 14, 15, 22, 27, 28, 29, 34, 39, 45, 46, 51, 53, 61, 62, 64, 73, 335, 513, 607, 749, 751, 752, 753, 754, 758, 760, 781, 795, 814, 860, 1062, 1266, 1269, 1273, 1279, 1284, 1427, 1438, 1439, 1440, 1453, 1454, 1455, 1466, 1473, 1474, 1476, 1483, 1486, 1487, 1495, 1502, 1503, 1504, 1508, 1509, 1510, 1511, 1513, 1519, 1520, 1521, 1523, 1529, 1531, 1557, 1559, 1563, 1567, 1569, 1571, 1573, 1600, 1607, 1608, 1609, 1646, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1867, 1957, 1958, 1961, 1971, 2010, 2012, 2013, 2019, 2026, 2030, 2031, 2032, 2039, 2041, 2042, 2044, 2045, 2047, 2050, 2053, 2054, 2057, 2059, 2061, 2066, 2067, 2068, 2070, 2072, 2073, 2074, 2077, 2081, 2084, 2093, 2095, 2099, 2104, 2105, 2108, 2110], "overhead": [0, 1, 3, 4, 8, 23, 27, 53, 781, 973, 978, 1062, 1281, 1713, 1720, 1721, 2039, 2041, 2042, 2043, 2049, 2050, 2053, 2065, 2066, 2073, 2077, 2083, 2093, 2098, 2099, 2101, 2102], "here": [0, 1, 7, 8, 9, 12, 15, 18, 22, 23, 27, 28, 29, 32, 33, 34, 44, 46, 50, 51, 55, 56, 57, 58, 61, 62, 85, 87, 580, 793, 794, 906, 907, 993, 1014, 1106, 1123, 1125, 1126, 1131, 1132, 1133, 1135, 1136, 1141, 1143, 1163, 1173, 1267, 1281, 1437, 1438, 1439, 1453, 1454, 1455, 1485, 1486, 1487, 1531, 1563, 1629, 1631, 1720, 1721, 1730, 1791, 1794, 1805, 1867, 1891, 2008, 2010, 2012, 2013, 2015, 2017, 2028, 2030, 2031, 2032, 2038, 2039, 2042, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2056, 2057, 2061, 2063, 2064, 2065, 2067, 2070, 2077, 2081, 2082, 2084, 2090, 2093, 2095, 2096, 2098, 2099, 2100, 2101, 2102, 2105, 2106, 2108], "assum": [0, 11, 12, 19, 22, 27, 29, 33, 34, 36, 38, 45, 46, 50, 51, 53, 56, 59, 62, 817, 987, 1089, 1124, 1127, 1129, 1137, 1138, 1139, 1142, 1184, 1188, 1194, 1260, 1266, 1267, 1270, 1285, 1305, 1306, 1308, 1315, 1324, 1327, 1330, 1332, 1342, 1442, 1515, 1576, 1613, 1681, 1713, 1730, 1733, 1758, 1795, 1796, 1801, 1802, 1803, 1806, 1808, 1809, 1813, 1925, 1946, 1948, 1964, 2008, 2010, 2012, 2013, 2017, 2030, 2039, 2042, 2044, 2045, 2048, 2050, 2053, 2054, 2061, 2063, 2064, 2065, 2072, 2073, 2074, 2077, 2090, 2095, 2096, 2097, 2104], "a_float32": 0, "rand": [0, 1, 11, 18, 34, 50, 62, 335, 693, 699, 909, 910, 911, 912, 913, 914, 978, 995, 1048, 1049, 1123, 1125, 1128, 1129, 1131, 1132, 1135, 1136, 1138, 1139, 1141, 1143, 1165, 1275, 1276, 1281, 1285, 1286, 1287, 1343, 1344, 1346, 1435, 1488, 1567, 1568, 1569, 1570, 1571, 1601, 1620, 1621, 1681, 1713, 1733, 1766, 1816, 1827, 1828, 1829, 1833, 2010, 2011, 2012, 2013, 2015, 2025, 2030, 2031, 2044, 2059, 2061, 2062, 2065, 2067, 2072, 2073, 2077, 2078, 2081, 2082, 2086, 2103, 2106], "8": [0, 1, 14, 19, 21, 22, 23, 27, 33, 34, 36, 50, 64, 69, 313, 315, 317, 321, 401, 402, 471, 513, 517, 560, 607, 617, 685, 686, 697, 698, 745, 746, 761, 763, 765, 773, 774, 820, 821, 822, 825, 912, 944, 952, 963, 966, 967, 971, 973, 1048, 1049, 1085, 1089, 1104, 1109, 1122, 1138, 1139, 1145, 1146, 1149, 1156, 1223, 1232, 1233, 1293, 1322, 1325, 1326, 1327, 1335, 1337, 1340, 1341, 1418, 1419, 1424, 1425, 1426, 1428, 1429, 1430, 1443, 1444, 1445, 1446, 1457, 1493, 1519, 1520, 1526, 1528, 1530, 1537, 1539, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1563, 1567, 1568, 1569, 1570, 1571, 1575, 1583, 1605, 1608, 1611, 1668, 1673, 1679, 1680, 1681, 1720, 1721, 1768, 1769, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1799, 1807, 1812, 1816, 1820, 1840, 1850, 1851, 1852, 1859, 1867, 1871, 1878, 1881, 1886, 1892, 1896, 1904, 1906, 1907, 1912, 1920, 1924, 1935, 1940, 1941, 1942, 1944, 1946, 1955, 1959, 1961, 1967, 1974, 2010, 2014, 2020, 2042, 2044, 2047, 2056, 2059, 2061, 2062, 2064, 2065, 2066, 2067, 2070, 2072, 2077, 2078, 2080, 2081, 2083, 2090, 2096, 2097, 2108], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 32, 1273, 1325, 1364, 1533, 1534, 1823, 1924, 1961, 2011, 2012, 2025, 2030, 2038, 2041, 2044, 2054, 2062, 2077, 2102, 2103], "list": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 18, 19, 22, 23, 27, 28, 29, 31, 32, 34, 36, 45, 48, 50, 51, 53, 58, 61, 62, 64, 65, 69, 70, 72, 73, 83, 184, 241, 302, 445, 447, 449, 578, 583, 584, 585, 589, 619, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 792, 793, 798, 814, 815, 816, 817, 838, 855, 862, 880, 887, 888, 889, 955, 956, 959, 963, 967, 972, 973, 975, 982, 987, 1032, 1038, 1091, 1104, 1106, 1107, 1146, 1161, 1173, 1182, 1184, 1193, 1209, 1223, 1233, 1269, 1273, 1275, 1276, 1281, 1283, 1285, 1286, 1369, 1371, 1417, 1459, 1465, 1495, 1523, 1525, 1534, 1538, 1552, 1563, 1574, 1587, 1620, 1696, 1712, 1713, 1714, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1768, 1772, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1826, 1828, 1829, 1832, 1836, 1851, 1887, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1918, 1919, 1923, 1939, 1940, 1941, 1957, 1958, 1961, 1962, 1964, 1968, 1969, 1974, 1991, 2006, 2008, 2010, 2011, 2014, 2015, 2019, 2023, 2026, 2030, 2031, 2032, 2044, 2049, 2051, 2054, 2055, 2056, 2058, 2059, 2062, 2063, 2064, 2065, 2066, 2067, 2072, 2073, 2077, 2079, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2089, 2094, 2095, 2096, 2097, 2098, 2100, 2102, 2106, 2107, 2108, 2109, 2110], "No": [0, 9, 12, 29, 49, 51, 61, 64, 73, 74, 75, 901, 905, 906, 907, 1713, 1720, 1721, 1766, 2012, 2042, 2061, 2070, 2081, 2084, 2093], "manual": [0, 22, 27, 33, 43, 45, 46, 49, 53, 62, 486, 797, 838, 879, 915, 978, 1184, 1232, 1273, 1435, 1436, 1458, 1527, 1528, 1530, 1552, 1571, 1601, 1602, 1612, 1665, 1733, 1754, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 2010, 2013, 2021, 2029, 2038, 2042, 2044, 2045, 2046, 2048, 2051, 2057, 2061, 2067, 2068, 2082, 2095, 2105, 2106], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 14, 19, 22, 23, 27, 28, 29, 30, 31, 32, 36, 37, 38, 45, 46, 53, 61, 62, 487, 488, 840, 891, 901, 905, 906, 907, 925, 926, 975, 990, 1008, 1023, 1050, 1063, 1106, 1152, 1153, 1175, 1178, 1269, 1300, 1459, 1523, 1571, 1573, 1629, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1843, 1888, 1925, 1973, 2008, 2026, 2029, 2031, 2042, 2044, 2045, 2046, 2048, 2053, 2058, 2059, 2061, 2064, 2067, 2072, 2074, 2084, 2086, 2093, 2096, 2098, 2100, 2104], "f_float16": 0, "g_float32": 0, "epoch": [0, 22, 38, 49, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 2026, 2038, 2053, 2063, 2082], "eval": [0, 62, 814, 861, 862, 1173, 1269, 1273, 1279, 1285, 1437, 1438, 1439, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1523, 1529, 1563, 1571, 1722, 1724, 1728, 2013, 2023, 2051, 2058, 2061, 2067, 2088, 2095, 2096, 2109], "jit": [0, 2, 11, 14, 50, 1048, 1049, 1081, 1220, 1267, 1268, 1269, 1284, 1406, 1774, 1775, 1869, 1870, 2009, 2012, 2015, 2023, 2031, 2041, 2050, 2056, 2058, 2061, 2067, 2072, 2082, 2094, 2095, 2096, 2097, 2099, 2101], "trace": [0, 1, 5, 12, 15, 18, 22, 23, 24, 27, 32, 38, 50, 51, 64, 67, 68, 69, 70, 71, 74, 75, 79, 486, 680, 841, 930, 932, 933, 936, 973, 980, 981, 987, 1106, 1179, 1183, 1188, 1272, 1281, 1282, 1286, 1342, 1385, 1386, 1387, 1776, 1963, 2009, 2011, 2012, 2013, 2015, 2017, 2019, 2039, 2042, 2047, 2056, 2058, 2059, 2062, 2064, 2082, 2089, 2094, 2095, 2096, 2098, 2101, 2102, 2104, 2108, 2110, 2111], "testmodel": 0, "__init__": [0, 1, 12, 22, 23, 27, 32, 34, 50, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 862, 863, 1173, 1267, 1270, 1272, 1275, 1276, 1281, 1285, 1286, 1287, 1523, 1524, 1525, 1533, 1534, 1538, 1681, 1703, 1712, 2010, 2012, 2013, 2026, 2039, 2044, 2046, 2051, 2056, 2059, 2061, 2064, 2067, 2082, 2090, 2094, 2095, 2106, 2107, 2108], "input_s": [0, 734, 760, 761, 765, 1474, 1475, 1493, 1494, 1539, 1540, 1541, 2011], "num_class": [0, 1667, 2011, 2101], "super": [0, 9, 12, 22, 23, 27, 29, 32, 50, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 862, 863, 1173, 1267, 1272, 1275, 1276, 1281, 1285, 1286, 1287, 1523, 1524, 1525, 1533, 1534, 1535, 1536, 1681, 1703, 1805, 2010, 2012, 2013, 2014, 2039, 2044, 2051, 2056, 2059, 2061, 2064, 2067, 2090, 2094, 2106, 2107, 2108], "fc1": [0, 23, 1703, 2059, 2065, 2090], "x": [0, 1, 3, 11, 12, 14, 22, 23, 27, 32, 34, 36, 42, 50, 51, 53, 55, 56, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 173, 254, 258, 286, 289, 311, 313, 315, 317, 321, 352, 377, 448, 483, 486, 493, 499, 558, 560, 583, 607, 608, 617, 692, 758, 760, 770, 779, 780, 784, 785, 796, 799, 802, 820, 821, 862, 863, 879, 885, 887, 888, 889, 896, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 916, 917, 936, 955, 956, 957, 960, 961, 966, 973, 980, 981, 987, 988, 991, 994, 995, 1048, 1049, 1089, 1096, 1100, 1101, 1106, 1110, 1120, 1121, 1122, 1123, 1125, 1126, 1131, 1132, 1134, 1136, 1140, 1141, 1143, 1146, 1147, 1148, 1156, 1163, 1165, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1194, 1208, 1209, 1223, 1240, 1244, 1256, 1274, 1275, 1276, 1280, 1281, 1284, 1285, 1286, 1287, 1291, 1301, 1314, 1315, 1319, 1322, 1326, 1330, 1332, 1335, 1336, 1337, 1338, 1339, 1342, 1347, 1348, 1349, 1357, 1360, 1363, 1364, 1371, 1413, 1414, 1418, 1419, 1425, 1426, 1435, 1436, 1437, 1438, 1439, 1441, 1456, 1458, 1464, 1470, 1471, 1472, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1509, 1512, 1513, 1514, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1533, 1534, 1538, 1539, 1541, 1542, 1543, 1544, 1551, 1553, 1554, 1555, 1556, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1572, 1573, 1576, 1603, 1627, 1629, 1633, 1634, 1640, 1644, 1648, 1660, 1665, 1670, 1674, 1676, 1682, 1683, 1684, 1688, 1689, 1691, 1692, 1693, 1700, 1703, 1712, 1728, 1731, 1733, 1754, 1755, 1756, 1757, 1758, 1763, 1766, 1767, 1768, 1775, 1778, 1799, 1813, 1814, 1825, 1827, 1841, 1844, 1845, 1847, 1848, 1850, 1851, 1855, 1859, 1896, 1898, 1901, 1915, 1917, 1918, 1919, 1920, 1926, 1927, 1934, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1958, 1960, 1967, 1968, 1969, 1971, 1972, 1973, 1976, 2008, 2010, 2011, 2012, 2013, 2014, 2017, 2029, 2030, 2031, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2048, 2049, 2051, 2052, 2057, 2059, 2060, 2061, 2064, 2067, 2072, 2076, 2077, 2078, 2080, 2082, 2083, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2106, 2108], "2": [0, 1, 3, 5, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 31, 33, 34, 35, 36, 38, 43, 45, 46, 50, 51, 53, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 173, 191, 208, 225, 233, 234, 254, 260, 286, 313, 315, 317, 321, 335, 377, 401, 402, 445, 446, 447, 448, 449, 481, 487, 488, 493, 496, 499, 513, 515, 517, 544, 558, 560, 580, 581, 583, 584, 585, 587, 588, 589, 607, 617, 680, 681, 683, 684, 685, 686, 689, 690, 691, 692, 693, 695, 697, 698, 699, 734, 738, 739, 740, 741, 742, 743, 745, 746, 755, 758, 760, 762, 793, 796, 820, 866, 875, 876, 877, 878, 879, 880, 881, 885, 887, 888, 889, 891, 901, 904, 906, 907, 909, 910, 911, 912, 913, 914, 916, 917, 925, 926, 929, 936, 938, 940, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 959, 960, 961, 963, 964, 965, 966, 967, 971, 972, 980, 984, 988, 989, 990, 991, 994, 995, 1005, 1080, 1085, 1089, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1116, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1163, 1164, 1165, 1168, 1169, 1170, 1174, 1175, 1178, 1184, 1194, 1210, 1211, 1212, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1244, 1246, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1272, 1273, 1279, 1281, 1283, 1285, 1289, 1290, 1291, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1346, 1347, 1348, 1349, 1356, 1358, 1359, 1360, 1361, 1363, 1364, 1367, 1368, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1389, 1392, 1408, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1426, 1431, 1432, 1433, 1434, 1435, 1436, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1472, 1473, 1474, 1476, 1478, 1479, 1480, 1481, 1483, 1490, 1491, 1492, 1493, 1494, 1495, 1509, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1528, 1529, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1553, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1594, 1596, 1601, 1602, 1613, 1620, 1621, 1627, 1629, 1631, 1633, 1640, 1646, 1654, 1655, 1656, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1681, 1697, 1703, 1712, 1713, 1717, 1718, 1720, 1721, 1727, 1728, 1733, 1745, 1746, 1747, 1748, 1750, 1751, 1754, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1812, 1813, 1814, 1816, 1817, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1834, 1836, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1855, 1859, 1861, 1862, 1864, 1865, 1866, 1867, 1871, 1876, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1934, 1935, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1964, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 2006, 2007, 2011, 2012, 2013, 2014, 2017, 2020, 2021, 2023, 2025, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2047, 2048, 2049, 2051, 2052, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2069, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2088, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2106, 2107], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 22, 23, 27, 29, 31, 32, 33, 34, 35, 36, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 61, 62, 64, 74, 75, 86, 486, 496, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 745, 746, 756, 761, 762, 763, 764, 765, 779, 785, 788, 789, 791, 793, 794, 838, 858, 860, 862, 863, 866, 894, 896, 901, 902, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 929, 942, 951, 973, 1002, 1062, 1106, 1124, 1126, 1127, 1128, 1129, 1136, 1141, 1142, 1143, 1157, 1167, 1168, 1170, 1175, 1178, 1179, 1181, 1182, 1183, 1184, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1206, 1223, 1227, 1228, 1244, 1267, 1269, 1272, 1273, 1281, 1283, 1285, 1325, 1328, 1333, 1341, 1342, 1361, 1409, 1427, 1432, 1433, 1434, 1435, 1436, 1470, 1488, 1523, 1576, 1629, 1631, 1640, 1700, 1707, 1713, 1720, 1721, 1727, 1730, 1739, 1741, 1744, 1748, 1749, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1796, 1802, 1807, 1824, 1867, 1957, 1962, 1973, 2008, 2009, 2010, 2012, 2013, 2015, 2017, 2020, 2021, 2022, 2023, 2029, 2030, 2031, 2032, 2039, 2042, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2053, 2054, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2067, 2068, 2070, 2072, 2073, 2074, 2077, 2080, 2082, 2083, 2087, 2088, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2108], "suggest": [0, 9, 23, 50, 54, 82, 83, 85, 87, 1456, 2008, 2015, 2038, 2039, 2046, 2077, 2102, 2108], "issu": [0, 2, 3, 5, 9, 10, 11, 14, 21, 22, 27, 29, 34, 35, 50, 53, 54, 56, 58, 62, 64, 84, 85, 909, 915, 929, 973, 975, 976, 1157, 1169, 1171, 1175, 1191, 1315, 1359, 1371, 1488, 1493, 1519, 1520, 1521, 1539, 1576, 1640, 1641, 1765, 1863, 1973, 2008, 2009, 2013, 2015, 2020, 2025, 2029, 2030, 2031, 2032, 2038, 2039, 2042, 2044, 2047, 2053, 2054, 2055, 2056, 2057, 2061, 2064, 2067, 2068, 2072, 2077, 2078, 2079, 2080, 2083, 2093, 2096, 2097, 2099, 2100, 2108, 2110, 2111], "http": [0, 2, 3, 4, 7, 9, 11, 12, 14, 15, 23, 25, 27, 32, 34, 36, 45, 46, 53, 150, 680, 730, 731, 732, 733, 745, 746, 756, 761, 762, 763, 764, 765, 792, 793, 894, 929, 973, 987, 1106, 1164, 1191, 1198, 1342, 1371, 1442, 1493, 1519, 1520, 1521, 1543, 1567, 1570, 1573, 1729, 1765, 1813, 1830, 1863, 1867, 1887, 1961, 1964, 2008, 2014, 2017, 2024, 2027, 2039, 2040, 2048, 2049, 2051, 2055, 2057, 2061, 2064, 2080, 2082, 2083, 2097, 2101, 2102, 2107, 2112], "github": [0, 7, 9, 14, 25, 27, 41, 50, 53, 54, 58, 150, 792, 793, 894, 915, 929, 1164, 1191, 1198, 1371, 1519, 1520, 1521, 1567, 1765, 1799, 1863, 1964, 2008, 2015, 2020, 2048, 2055, 2061, 2067, 2077, 2078, 2080, 2083, 2096, 2097, 2099, 2102, 2107], "com": [0, 7, 14, 25, 27, 44, 46, 53, 150, 792, 793, 894, 929, 1164, 1191, 1198, 1371, 1519, 1520, 1521, 1567, 1765, 1863, 1961, 1964, 2008, 2017, 2024, 2027, 2048, 2049, 2055, 2057, 2061, 2080, 2083, 2097, 2102, 2107], "pytorch": [0, 1, 2, 3, 4, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 38, 45, 46, 51, 53, 54, 57, 59, 62, 63, 64, 82, 83, 84, 85, 86, 87, 150, 513, 583, 680, 698, 730, 731, 732, 733, 745, 746, 756, 760, 761, 762, 763, 764, 765, 792, 793, 810, 811, 812, 813, 881, 894, 927, 929, 958, 963, 964, 973, 974, 987, 1030, 1031, 1042, 1047, 1106, 1151, 1157, 1164, 1165, 1169, 1174, 1175, 1198, 1214, 1255, 1256, 1280, 1300, 1306, 1311, 1313, 1314, 1315, 1318, 1331, 1340, 1356, 1359, 1360, 1371, 1404, 1435, 1436, 1442, 1474, 1488, 1519, 1520, 1521, 1567, 1584, 1585, 1586, 1602, 1681, 1713, 1720, 1721, 1754, 1762, 1763, 1765, 1768, 1776, 1823, 1855, 1863, 1864, 1865, 1873, 1920, 1924, 1948, 1961, 1964, 1973, 1986, 1992, 1995, 2008, 2012, 2013, 2017, 2019, 2020, 2024, 2026, 2031, 2032, 2033, 2040, 2041, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2057, 2058, 2059, 2063, 2064, 2066, 2068, 2069, 2072, 2073, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2090, 2092, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2106, 2107, 2109, 2110, 2111, 2112], "75956": 0, "_c": [0, 22, 23, 27, 61, 909, 915, 1268, 1281, 1774, 2011, 2013, 2026, 2042, 2050, 2054, 2057, 2061, 2072], "_jit_set_autocast_mod": 0, "fals": [0, 1, 2, 3, 5, 12, 14, 22, 23, 27, 28, 29, 31, 33, 34, 36, 50, 53, 56, 60, 62, 64, 69, 72, 73, 74, 75, 112, 113, 114, 115, 116, 118, 134, 135, 136, 150, 181, 182, 183, 196, 209, 260, 301, 318, 319, 321, 328, 332, 335, 336, 338, 342, 343, 344, 351, 354, 392, 396, 407, 409, 410, 411, 414, 415, 421, 429, 430, 431, 432, 445, 446, 447, 448, 449, 453, 458, 460, 470, 471, 479, 495, 496, 504, 517, 542, 555, 556, 565, 580, 594, 603, 609, 610, 615, 617, 680, 693, 694, 695, 696, 697, 699, 712, 713, 714, 715, 716, 717, 734, 735, 745, 746, 751, 752, 753, 755, 758, 760, 768, 769, 776, 778, 779, 780, 782, 783, 785, 797, 799, 814, 819, 820, 821, 822, 824, 825, 826, 838, 839, 841, 858, 859, 864, 866, 875, 876, 877, 881, 894, 896, 901, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 933, 942, 945, 948, 950, 951, 957, 958, 964, 965, 966, 972, 973, 987, 988, 1008, 1046, 1051, 1063, 1106, 1107, 1108, 1109, 1111, 1112, 1119, 1123, 1124, 1125, 1126, 1131, 1132, 1137, 1138, 1139, 1141, 1142, 1143, 1158, 1160, 1161, 1162, 1163, 1165, 1166, 1168, 1169, 1170, 1172, 1174, 1178, 1184, 1193, 1196, 1197, 1204, 1208, 1210, 1212, 1226, 1227, 1228, 1231, 1232, 1254, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1269, 1274, 1276, 1277, 1285, 1286, 1287, 1289, 1291, 1294, 1299, 1300, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1322, 1324, 1326, 1327, 1330, 1331, 1332, 1333, 1334, 1339, 1340, 1341, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1361, 1363, 1367, 1369, 1370, 1372, 1375, 1382, 1385, 1386, 1409, 1414, 1415, 1416, 1417, 1420, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1456, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1470, 1471, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1508, 1509, 1510, 1514, 1515, 1516, 1517, 1518, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1532, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1551, 1553, 1555, 1556, 1563, 1566, 1567, 1568, 1569, 1571, 1572, 1573, 1576, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1624, 1625, 1626, 1629, 1631, 1633, 1634, 1635, 1640, 1641, 1644, 1650, 1651, 1652, 1654, 1655, 1656, 1660, 1665, 1669, 1673, 1675, 1676, 1679, 1680, 1681, 1682, 1684, 1694, 1697, 1698, 1700, 1706, 1713, 1715, 1717, 1718, 1722, 1723, 1725, 1727, 1730, 1732, 1733, 1734, 1746, 1755, 1756, 1757, 1758, 1760, 1763, 1766, 1767, 1768, 1772, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1811, 1821, 1823, 1824, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1847, 1848, 1855, 1859, 1867, 1868, 1871, 1873, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1896, 1906, 1907, 1908, 1909, 1910, 1911, 1918, 1919, 1920, 1923, 1924, 1939, 1943, 1948, 1957, 1961, 1962, 1964, 1967, 1968, 1969, 1976, 1978, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2017, 2019, 2020, 2023, 2024, 2029, 2031, 2032, 2038, 2039, 2042, 2043, 2044, 2046, 2047, 2051, 2054, 2055, 2056, 2059, 2060, 2061, 2064, 2065, 2066, 2068, 2071, 2072, 2077, 2078, 2079, 2081, 2082, 2084, 2086, 2088, 2093, 2095, 2096, 2097, 2099, 2103, 2104, 2107, 2108, 2109], "randn": [0, 1, 11, 12, 27, 32, 33, 34, 50, 55, 57, 58, 59, 62, 64, 66, 71, 72, 73, 289, 311, 483, 544, 580, 584, 585, 586, 587, 588, 589, 617, 683, 684, 685, 686, 687, 688, 689, 690, 695, 696, 699, 720, 728, 729, 734, 738, 739, 740, 741, 742, 743, 756, 758, 760, 761, 762, 763, 764, 765, 772, 773, 774, 862, 863, 875, 876, 877, 879, 882, 883, 884, 885, 886, 936, 941, 953, 960, 962, 963, 964, 965, 966, 968, 990, 991, 992, 993, 994, 1005, 1085, 1086, 1087, 1093, 1094, 1095, 1096, 1100, 1106, 1120, 1121, 1150, 1158, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1173, 1174, 1175, 1240, 1244, 1246, 1281, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1323, 1324, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1345, 1349, 1350, 1357, 1359, 1360, 1361, 1363, 1364, 1367, 1369, 1370, 1372, 1374, 1376, 1377, 1392, 1408, 1411, 1421, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1521, 1522, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1550, 1551, 1553, 1554, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1572, 1574, 1575, 1579, 1580, 1581, 1583, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1624, 1625, 1631, 1665, 1671, 1672, 1712, 1771, 1814, 1819, 1820, 1821, 1823, 1824, 1837, 1841, 1842, 1854, 1889, 1891, 1896, 1902, 1905, 1913, 1914, 1917, 1923, 1924, 1934, 1937, 1938, 1941, 1945, 1948, 1949, 1951, 1954, 1956, 1961, 1971, 1972, 1973, 1976, 2011, 2012, 2013, 2015, 2017, 2021, 2030, 2031, 2032, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2049, 2051, 2055, 2056, 2059, 2060, 2061, 2062, 2064, 2067, 2072, 2077, 2078, 2080, 2082, 2086, 2088, 2090, 2093, 2094, 2096, 2097, 2099, 2101, 2103, 2106, 2108], "freez": [0, 53, 1184, 1269, 1279, 1465, 1466, 1523, 2039], "_": [0, 1, 3, 11, 22, 23, 27, 28, 31, 38, 59, 62, 681, 683, 684, 698, 866, 882, 883, 884, 885, 886, 896, 901, 905, 906, 907, 917, 943, 962, 978, 989, 990, 992, 993, 995, 1150, 1155, 1170, 1174, 1236, 1290, 1298, 1349, 1357, 1437, 1438, 1439, 1485, 1486, 1487, 1539, 1563, 1713, 1728, 1762, 1791, 1793, 1813, 1836, 1839, 1842, 1854, 1874, 1876, 1882, 1889, 1891, 1913, 1924, 1937, 1938, 2017, 2039, 2042, 2045, 2046, 2051, 2057, 2063, 2064, 2066, 2078, 2094, 2097, 2102, 2106, 2108], "3": [0, 1, 3, 4, 6, 9, 11, 12, 18, 20, 22, 23, 24, 27, 29, 31, 32, 34, 35, 36, 38, 43, 45, 50, 53, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 191, 208, 233, 254, 260, 289, 313, 315, 317, 321, 401, 402, 445, 446, 447, 448, 449, 471, 487, 488, 493, 496, 499, 513, 515, 517, 523, 537, 544, 558, 560, 581, 583, 584, 585, 587, 588, 607, 617, 680, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 697, 698, 699, 734, 738, 739, 740, 741, 742, 743, 746, 748, 757, 760, 761, 762, 763, 765, 772, 773, 774, 785, 793, 824, 862, 863, 866, 876, 877, 879, 880, 881, 888, 889, 909, 910, 911, 912, 913, 914, 916, 936, 941, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 959, 960, 961, 963, 964, 965, 966, 967, 971, 972, 984, 988, 989, 994, 995, 1005, 1048, 1049, 1051, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1119, 1122, 1127, 1130, 1134, 1140, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1163, 1165, 1170, 1171, 1173, 1175, 1210, 1211, 1212, 1223, 1226, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1244, 1246, 1254, 1256, 1258, 1260, 1269, 1273, 1276, 1279, 1281, 1285, 1286, 1290, 1291, 1292, 1293, 1294, 1295, 1299, 1301, 1302, 1303, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1347, 1350, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1392, 1408, 1409, 1411, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1432, 1433, 1434, 1435, 1436, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1458, 1465, 1466, 1469, 1470, 1471, 1472, 1474, 1475, 1477, 1479, 1480, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1526, 1528, 1530, 1535, 1536, 1538, 1539, 1541, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1557, 1558, 1559, 1563, 1571, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1594, 1596, 1601, 1602, 1605, 1606, 1608, 1609, 1612, 1620, 1621, 1624, 1625, 1627, 1629, 1633, 1634, 1640, 1648, 1665, 1667, 1668, 1671, 1672, 1679, 1680, 1687, 1688, 1700, 1712, 1713, 1720, 1721, 1728, 1743, 1745, 1747, 1748, 1749, 1750, 1754, 1756, 1757, 1758, 1759, 1762, 1766, 1767, 1768, 1769, 1771, 1772, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1802, 1805, 1806, 1808, 1812, 1814, 1816, 1820, 1821, 1823, 1824, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1836, 1838, 1839, 1840, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1852, 1855, 1859, 1864, 1865, 1871, 1874, 1876, 1878, 1880, 1881, 1882, 1886, 1887, 1888, 1896, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1917, 1923, 1924, 1926, 1927, 1934, 1935, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1967, 1970, 1973, 1974, 1975, 1976, 2006, 2007, 2010, 2011, 2012, 2013, 2014, 2017, 2020, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2051, 2052, 2056, 2057, 2059, 2061, 2063, 2064, 2066, 2067, 2069, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2090, 2093, 2096, 2097, 2099, 2101, 2102, 2103, 2105, 2106, 2107, 2108], "bug": [0, 14, 18, 27, 50, 62, 1167, 1168, 1170, 1359, 2038, 2053, 2077, 2099, 2108], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 119, 150, 154, 195, 196, 206, 209, 221, 222, 223, 255, 260, 289, 290, 313, 321, 323, 335, 337, 340, 352, 415, 445, 446, 447, 448, 449, 458, 486, 487, 488, 493, 495, 496, 497, 498, 499, 500, 503, 504, 513, 515, 517, 524, 556, 566, 583, 584, 585, 587, 588, 589, 603, 604, 614, 617, 618, 680, 684, 686, 689, 693, 694, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 735, 736, 737, 744, 748, 749, 750, 751, 752, 753, 754, 755, 757, 759, 760, 775, 776, 777, 778, 779, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 802, 810, 811, 812, 813, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 855, 860, 862, 863, 875, 876, 877, 878, 879, 886, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 925, 926, 927, 929, 933, 940, 941, 944, 946, 949, 953, 954, 957, 961, 963, 964, 967, 968, 970, 973, 975, 976, 977, 978, 979, 983, 988, 989, 991, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1011, 1012, 1013, 1016, 1027, 1029, 1032, 1033, 1034, 1036, 1037, 1040, 1041, 1042, 1043, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1058, 1061, 1062, 1063, 1070, 1071, 1073, 1074, 1075, 1079, 1080, 1081, 1087, 1088, 1089, 1094, 1096, 1097, 1101, 1104, 1105, 1106, 1110, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1154, 1157, 1160, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1178, 1179, 1182, 1183, 1184, 1186, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1197, 1198, 1206, 1208, 1211, 1213, 1214, 1223, 1227, 1233, 1235, 1256, 1266, 1267, 1269, 1270, 1272, 1274, 1275, 1277, 1279, 1280, 1281, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1324, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1345, 1347, 1350, 1359, 1360, 1364, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1382, 1385, 1386, 1396, 1400, 1405, 1406, 1411, 1414, 1415, 1416, 1417, 1419, 1427, 1431, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1470, 1471, 1474, 1475, 1477, 1482, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1508, 1510, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1529, 1530, 1533, 1535, 1538, 1539, 1540, 1552, 1555, 1557, 1560, 1563, 1569, 1570, 1571, 1572, 1575, 1576, 1577, 1578, 1582, 1583, 1584, 1585, 1586, 1587, 1594, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1624, 1625, 1629, 1631, 1633, 1638, 1640, 1646, 1648, 1654, 1655, 1656, 1666, 1668, 1670, 1681, 1687, 1688, 1696, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1717, 1720, 1721, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1754, 1755, 1756, 1757, 1758, 1761, 1762, 1763, 1765, 1766, 1768, 1769, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1802, 1803, 1805, 1807, 1809, 1811, 1812, 1813, 1817, 1821, 1823, 1830, 1834, 1836, 1839, 1843, 1845, 1852, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1871, 1872, 1873, 1874, 1879, 1892, 1897, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1916, 1918, 1919, 1920, 1923, 1924, 1925, 1926, 1927, 1934, 1936, 1940, 1942, 1946, 1948, 1956, 1957, 1958, 1960, 1961, 1962, 1964, 1966, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1978, 1979, 1980, 1983, 1985, 1987, 1988, 1990, 1992, 1993, 1996, 1997, 1998, 1999, 2000, 2003, 2004, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2019, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2034, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2114], "what": [0, 1, 3, 5, 7, 8, 9, 27, 29, 34, 38, 42, 43, 50, 53, 55, 57, 58, 62, 64, 893, 906, 907, 1168, 1183, 1184, 1193, 1194, 1285, 1286, 1359, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1517, 1518, 1552, 1575, 1654, 1655, 1656, 1681, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1807, 1824, 2008, 2009, 2010, 2012, 2013, 2017, 2021, 2030, 2042, 2044, 2045, 2047, 2048, 2051, 2053, 2061, 2063, 2066, 2067, 2072, 2073, 2077, 2093, 2094, 2095, 2096, 2098, 2100, 2101, 2108, 2110], "observ": [0, 23, 29, 36, 45, 486, 756, 789, 790, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 808, 809, 811, 813, 815, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 842, 860, 862, 863, 865, 928, 991, 995, 1200, 1283, 1371, 1435, 1436, 1437, 1438, 1439, 1456, 1458, 1482, 1485, 1486, 1487, 1488, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1563, 1572, 1601, 1602, 1612, 1641, 1665, 1673, 2038, 2039, 2042, 2050, 2053, 2066, 2068, 2088, 2092, 2093, 2099, 2106, 2108, 2110], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 15, 23, 27, 29, 32, 34, 37, 40, 41, 45, 46, 50, 53, 54, 55, 56, 57, 58, 59, 62, 64, 74, 75, 81, 86, 254, 255, 498, 513, 618, 689, 730, 731, 732, 733, 734, 735, 741, 742, 743, 745, 746, 756, 761, 762, 763, 764, 765, 862, 863, 893, 896, 899, 900, 906, 907, 909, 911, 912, 915, 929, 955, 987, 1089, 1163, 1167, 1168, 1169, 1170, 1171, 1175, 1266, 1269, 1333, 1364, 1374, 1442, 1453, 1488, 1523, 1629, 1640, 1641, 1646, 1668, 1681, 1699, 1713, 1762, 1763, 1765, 1779, 1780, 1781, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1837, 1863, 1865, 1872, 1909, 1973, 2015, 2017, 2020, 2025, 2030, 2031, 2032, 2033, 2038, 2039, 2044, 2045, 2047, 2049, 2054, 2055, 2056, 2057, 2061, 2063, 2064, 2065, 2067, 2070, 2071, 2072, 2073, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2090, 2094, 2097, 2098, 2099, 2105, 2108, 2111], "file": [0, 1, 3, 6, 7, 9, 11, 14, 18, 19, 22, 29, 32, 36, 38, 43, 45, 48, 50, 51, 56, 58, 62, 909, 915, 916, 930, 932, 1007, 1044, 1158, 1167, 1168, 1170, 1171, 1269, 1277, 1280, 1341, 1775, 1855, 1899, 2008, 2010, 2013, 2014, 2015, 2021, 2024, 2030, 2031, 2032, 2039, 2042, 2044, 2050, 2053, 2055, 2057, 2059, 2061, 2066, 2070, 2073, 2077, 2079, 2082, 2090, 2094, 2095, 2096, 2099, 2101, 2102, 2105, 2106, 2108, 2110, 2111], "subregion": 0, "nest": [0, 1, 5, 12, 14, 29, 43, 50, 53, 62, 64, 67, 72, 73, 589, 793, 815, 817, 896, 911, 987, 1067, 1068, 1165, 1175, 1269, 1272, 1285, 1523, 1529, 1570, 1571, 1720, 1721, 1776, 1973, 2009, 2045, 2047, 2059, 2061, 2066, 2072, 2106], "local": [0, 5, 27, 29, 31, 32, 33, 36, 43, 45, 46, 48, 49, 53, 62, 916, 917, 918, 1048, 1110, 1164, 1269, 1342, 1461, 1462, 1463, 1467, 1469, 1511, 1523, 1575, 1623, 1647, 1699, 1713, 1714, 1766, 1899, 2008, 2009, 2012, 2029, 2038, 2042, 2043, 2046, 2056, 2061, 2064, 2065, 2069, 2072, 2073, 2074, 2082, 2096, 2097, 2099, 2108, 2110], "want": [0, 1, 7, 8, 9, 14, 22, 27, 32, 33, 34, 42, 50, 53, 55, 56, 57, 58, 61, 62, 64, 448, 486, 496, 499, 781, 791, 838, 1044, 1163, 1164, 1183, 1184, 1282, 1285, 1286, 1371, 1470, 1471, 1576, 1624, 1625, 1640, 1700, 1713, 1714, 1763, 1766, 1780, 1781, 1793, 1794, 1855, 1964, 2008, 2017, 2020, 2038, 2039, 2041, 2042, 2044, 2045, 2047, 2048, 2051, 2061, 2063, 2064, 2067, 2077, 2082, 2083, 2087, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2107], "forc": [0, 1, 14, 18, 19, 53, 458, 881, 973, 1044, 1179, 1272, 1284, 1288, 1873, 1909, 2008, 2010, 2013, 2017, 2038, 2042, 2082, 2086, 2093, 2096, 2097], "particular": [0, 1, 3, 7, 22, 29, 32, 36, 42, 45, 46, 50, 51, 62, 64, 69, 73, 88, 486, 560, 680, 862, 863, 1080, 1175, 1178, 1269, 1364, 1459, 1523, 1973, 2010, 2012, 2020, 2025, 2032, 2042, 2044, 2046, 2047, 2050, 2051, 2054, 2059, 2061, 2063, 2077, 2079, 2086, 2093, 2096, 2098, 2099, 2100, 2108, 2109, 2110], "give": [0, 3, 4, 7, 9, 12, 18, 22, 23, 29, 31, 32, 44, 50, 53, 62, 920, 921, 995, 1124, 1126, 1127, 1129, 1133, 1142, 1167, 1168, 1169, 1184, 1270, 1283, 1284, 1299, 1306, 1450, 1451, 1452, 1528, 1575, 1576, 1727, 1767, 1780, 1781, 1793, 1920, 1961, 2008, 2010, 2029, 2031, 2037, 2039, 2042, 2044, 2045, 2047, 2048, 2049, 2051, 2055, 2061, 2063, 2065, 2077, 2093, 2095, 2096, 2098, 2105, 2108, 2109], "explicit": [0, 8, 12, 27, 50, 53, 57, 62, 1040, 1183, 1223, 1256, 1641, 1863, 1941, 2008, 2009, 2013, 2014, 2030, 2038, 2042, 2044, 2047, 2064, 2080, 2081, 2103], "control": [0, 1, 2, 14, 22, 23, 27, 28, 29, 34, 36, 41, 44, 45, 51, 64, 70, 73, 755, 799, 859, 862, 877, 881, 896, 942, 951, 987, 1093, 1094, 1095, 1096, 1097, 1179, 1227, 1228, 1281, 1282, 1283, 1285, 1300, 1306, 1308, 1311, 1313, 1316, 1318, 1322, 1328, 1331, 1333, 1339, 1359, 1427, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1509, 1517, 1518, 1575, 1681, 1713, 1811, 1867, 1868, 1881, 1896, 1899, 1904, 1920, 1924, 1943, 1949, 1950, 1951, 1952, 2009, 2010, 2019, 2039, 2041, 2042, 2043, 2051, 2053, 2054, 2056, 2058, 2059, 2061, 2063, 2066, 2067, 2074, 2077, 2093, 2094, 2095, 2096, 2099, 2111], "execut": [0, 1, 2, 3, 4, 5, 7, 14, 15, 22, 27, 29, 31, 36, 37, 39, 46, 50, 51, 53, 58, 61, 62, 81, 487, 488, 901, 925, 926, 973, 980, 1011, 1022, 1084, 1164, 1182, 1269, 1270, 1272, 1285, 1286, 1341, 1385, 1386, 1459, 1523, 1529, 1567, 1568, 1569, 1570, 1571, 1706, 1713, 1869, 1979, 2009, 2010, 2012, 2014, 2023, 2025, 2038, 2040, 2041, 2046, 2047, 2050, 2051, 2053, 2055, 2057, 2059, 2061, 2066, 2067, 2072, 2073, 2077, 2090, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2104, 2107, 2108, 2111], "surround": [0, 62, 790, 2012, 2038, 2042], "ensur": [0, 1, 4, 6, 7, 9, 22, 27, 28, 29, 31, 33, 36, 45, 46, 49, 50, 53, 61, 62, 88, 481, 486, 735, 819, 901, 902, 904, 906, 983, 1164, 1182, 1193, 1269, 1431, 1436, 1516, 1523, 1526, 1567, 1629, 1654, 1655, 1656, 1681, 1713, 1720, 1721, 1870, 2008, 2010, 2012, 2020, 2024, 2029, 2038, 2039, 2042, 2044, 2045, 2048, 2053, 2055, 2056, 2064, 2067, 2068, 2072, 2073, 2079, 2093, 2098, 2099, 2108], "necessari": [0, 1, 3, 9, 14, 22, 27, 29, 33, 36, 45, 46, 50, 53, 60, 61, 88, 191, 208, 486, 560, 589, 901, 905, 906, 907, 1164, 1184, 1244, 1281, 1529, 1755, 1756, 2010, 2013, 2017, 2031, 2037, 2039, 2040, 2042, 2043, 2049, 2051, 2054, 2057, 2064, 2067, 2072, 2073, 2074, 2080, 2090, 2096, 2099, 2108], "becaus": [0, 1, 3, 4, 5, 7, 8, 14, 22, 23, 27, 29, 31, 34, 38, 50, 51, 53, 57, 58, 61, 62, 64, 72, 73, 486, 496, 911, 920, 921, 1127, 1128, 1129, 1137, 1138, 1139, 1165, 1169, 1174, 1175, 1183, 1184, 1190, 1194, 1200, 1266, 1270, 1273, 1277, 1316, 1317, 1341, 1359, 1437, 1438, 1439, 1459, 1563, 1703, 1713, 1714, 1797, 1839, 1864, 1867, 1920, 1973, 2009, 2010, 2013, 2015, 2021, 2029, 2030, 2031, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2054, 2055, 2059, 2061, 2064, 2067, 2068, 2072, 2074, 2077, 2082, 2084, 2088, 2090, 2093, 2095, 2096, 2098, 2099, 2100, 2101, 2102, 2106, 2108, 2109, 2110], "wa": [0, 1, 3, 7, 18, 23, 27, 43, 44, 45, 46, 50, 51, 53, 61, 62, 335, 486, 496, 680, 785, 792, 841, 855, 927, 963, 974, 1008, 1009, 1032, 1036, 1051, 1064, 1084, 1126, 1175, 1182, 1266, 1276, 1285, 1300, 1311, 1313, 1317, 1341, 1359, 1382, 1409, 1493, 1519, 1520, 1521, 1553, 1576, 1594, 1629, 1684, 1700, 1713, 1714, 1757, 1799, 1805, 1918, 1919, 1957, 1958, 1968, 1969, 1973, 1978, 2008, 2010, 2012, 2013, 2014, 2017, 2019, 2020, 2026, 2029, 2038, 2039, 2040, 2042, 2044, 2045, 2046, 2047, 2050, 2052, 2059, 2061, 2063, 2065, 2067, 2071, 2072, 2077, 2079, 2084, 2090, 2095, 2096, 2098, 2099, 2106, 2107, 2108, 2110], "f_float32": 0, "re": [0, 1, 4, 5, 7, 14, 22, 27, 31, 33, 35, 42, 45, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 488, 953, 1006, 1040, 1157, 1206, 1269, 1273, 1523, 1687, 1714, 1757, 1836, 1850, 1903, 2010, 2013, 2017, 2020, 2029, 2038, 2039, 2042, 2044, 2045, 2048, 2053, 2067, 2073, 2074, 2078, 2093, 2095, 2097, 2098, 2099, 2107, 2108, 2109], "again": [0, 18, 22, 27, 31, 36, 50, 56, 1184, 1409, 2039, 2044, 2045, 2051, 2093, 2096, 2098, 2102], "regardless": [0, 3, 22, 27, 44, 50, 53, 989, 1188, 1269, 1273, 1279, 1523, 1706, 1957, 2038, 2042, 2056, 2072, 2084, 2096, 2099], "g_float16": 0, "state": [0, 1, 2, 5, 9, 22, 27, 29, 31, 32, 34, 36, 38, 45, 49, 50, 51, 53, 60, 62, 88, 415, 680, 748, 760, 836, 983, 1037, 1038, 1042, 1047, 1051, 1061, 1077, 1078, 1164, 1173, 1182, 1222, 1269, 1272, 1285, 1342, 1383, 1390, 1404, 1474, 1475, 1493, 1494, 1523, 1539, 1541, 1571, 1587, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1830, 1872, 1899, 1964, 1990, 1991, 1992, 1995, 2001, 2002, 2009, 2017, 2023, 2038, 2039, 2042, 2043, 2044, 2049, 2053, 2056, 2059, 2061, 2063, 2071, 2087, 2093, 2095, 2096, 2097, 2098, 2099, 2104], "thread": [0, 1, 3, 22, 27, 29, 36, 48, 53, 61, 916, 917, 918, 1006, 1008, 1040, 1110, 1220, 1221, 1382, 1459, 1766, 1869, 1870, 1963, 1978, 2009, 2010, 2022, 2026, 2038, 2042, 2047, 2050, 2053, 2072, 2074, 2079, 2086, 2097, 2099, 2111], "must": [0, 3, 5, 6, 9, 12, 14, 22, 27, 29, 31, 32, 33, 34, 35, 36, 43, 46, 48, 50, 51, 53, 56, 58, 61, 62, 64, 72, 73, 88, 97, 139, 153, 154, 196, 260, 313, 315, 321, 398, 400, 402, 486, 513, 544, 545, 566, 583, 584, 585, 587, 588, 617, 686, 687, 688, 689, 690, 691, 697, 748, 757, 772, 773, 774, 793, 815, 817, 860, 861, 879, 885, 890, 891, 892, 893, 896, 901, 905, 906, 907, 910, 912, 913, 914, 920, 921, 941, 943, 945, 946, 947, 948, 949, 950, 953, 957, 960, 984, 987, 995, 1008, 1018, 1019, 1020, 1022, 1048, 1049, 1051, 1094, 1096, 1097, 1098, 1100, 1103, 1104, 1106, 1127, 1128, 1129, 1134, 1136, 1137, 1138, 1139, 1140, 1147, 1148, 1157, 1158, 1160, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1183, 1188, 1193, 1194, 1195, 1210, 1211, 1223, 1232, 1233, 1236, 1246, 1266, 1269, 1280, 1285, 1292, 1295, 1324, 1325, 1326, 1327, 1333, 1335, 1336, 1339, 1340, 1342, 1356, 1360, 1362, 1363, 1364, 1369, 1370, 1377, 1409, 1415, 1418, 1419, 1423, 1436, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1465, 1466, 1469, 1470, 1471, 1476, 1477, 1483, 1516, 1523, 1526, 1527, 1529, 1555, 1561, 1576, 1602, 1611, 1613, 1621, 1640, 1654, 1655, 1656, 1674, 1681, 1713, 1722, 1724, 1744, 1754, 1755, 1761, 1763, 1768, 1783, 1803, 1805, 1812, 1813, 1816, 1817, 1820, 1828, 1829, 1850, 1859, 1862, 1870, 1886, 1897, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1920, 1925, 1936, 1940, 1941, 1945, 1950, 1952, 1956, 1959, 1961, 1964, 1970, 1971, 1973, 1974, 1976, 1978, 2010, 2011, 2012, 2013, 2017, 2020, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2049, 2053, 2056, 2057, 2059, 2061, 2063, 2064, 2065, 2067, 2071, 2072, 2073, 2074, 2077, 2078, 2079, 2082, 2084, 2093, 2094, 2095, 2099, 2100, 2107, 2108, 2109], "invok": [0, 2, 8, 15, 18, 22, 27, 43, 45, 46, 61, 62, 909, 911, 1048, 1049, 1269, 1272, 1279, 1459, 1523, 1705, 1707, 1710, 1711, 1765, 1799, 1805, 2010, 2013, 2014, 2023, 2038, 2041, 2042, 2043, 2044, 2045, 2050, 2051, 2064, 2072, 2073, 2090, 2093, 2098, 2099, 2100], "affect": [0, 1, 2, 7, 9, 18, 21, 35, 50, 53, 221, 222, 785, 916, 917, 918, 1009, 1011, 1110, 1157, 1158, 1185, 1193, 1269, 1385, 1386, 1493, 1523, 1539, 1576, 1700, 1714, 1720, 1721, 1766, 1863, 1866, 1867, 2038, 2039, 2042, 2047, 2048, 2051, 2054, 2055, 2079, 2104, 2106], "dataparallel": [0, 27, 1696, 1713, 1757, 2009, 2039, 2046, 2053, 2072], "parallel": [0, 13, 14, 22, 23, 27, 28, 29, 31, 45, 46, 53, 1220, 1221, 1272, 1459, 1529, 1563, 1629, 1681, 1713, 1869, 1870, 2009, 2013, 2038, 2039, 2041, 2053, 2057, 2072, 2074, 2085, 2092, 2099, 2111], "distributeddataparallel": [0, 22, 23, 27, 28, 29, 31, 46, 53, 680, 1459, 1563, 2053, 2065, 2072, 2099], "than": [0, 3, 4, 5, 6, 8, 9, 11, 14, 22, 23, 27, 28, 29, 34, 35, 36, 38, 42, 45, 46, 48, 50, 53, 58, 62, 64, 65, 73, 150, 254, 486, 499, 545, 617, 680, 779, 785, 894, 910, 911, 928, 933, 944, 955, 962, 963, 967, 968, 981, 1020, 1058, 1062, 1076, 1094, 1095, 1146, 1147, 1148, 1150, 1154, 1160, 1171, 1197, 1212, 1226, 1230, 1244, 1254, 1266, 1267, 1270, 1281, 1290, 1291, 1294, 1299, 1300, 1306, 1310, 1315, 1323, 1324, 1326, 1327, 1330, 1335, 1341, 1345, 1358, 1361, 1367, 1370, 1372, 1375, 1389, 1409, 1419, 1435, 1436, 1450, 1451, 1452, 1459, 1465, 1466, 1483, 1493, 1515, 1529, 1537, 1546, 1555, 1561, 1571, 1572, 1573, 1594, 1604, 1605, 1606, 1620, 1621, 1629, 1640, 1667, 1681, 1697, 1699, 1700, 1703, 1713, 1720, 1721, 1727, 1728, 1730, 1731, 1757, 1762, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1805, 1807, 1821, 1822, 1843, 1844, 1867, 1871, 1905, 1906, 1907, 1908, 1910, 1911, 1942, 1950, 1952, 1961, 2008, 2010, 2012, 2013, 2015, 2021, 2031, 2032, 2033, 2037, 2039, 2040, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2054, 2055, 2056, 2061, 2063, 2064, 2065, 2067, 2068, 2072, 2077, 2078, 2080, 2082, 2083, 2084, 2093, 2094, 2096, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2106, 2108, 2110], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 38, 42, 45, 48, 49, 50, 51, 53, 57, 58, 59, 61, 62, 64, 69, 72, 73, 82, 83, 84, 85, 87, 150, 221, 254, 352, 402, 486, 513, 520, 545, 560, 697, 748, 757, 793, 855, 856, 857, 881, 887, 893, 894, 896, 899, 901, 902, 906, 907, 911, 916, 917, 929, 944, 955, 957, 967, 971, 975, 987, 1004, 1009, 1011, 1016, 1018, 1022, 1049, 1073, 1084, 1095, 1106, 1110, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1140, 1142, 1145, 1149, 1152, 1153, 1154, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1184, 1223, 1232, 1233, 1248, 1251, 1254, 1273, 1279, 1283, 1289, 1290, 1300, 1301, 1311, 1314, 1315, 1317, 1322, 1326, 1328, 1330, 1333, 1339, 1340, 1356, 1364, 1368, 1373, 1409, 1415, 1427, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1450, 1453, 1454, 1455, 1466, 1470, 1471, 1476, 1485, 1486, 1487, 1489, 1490, 1491, 1492, 1502, 1503, 1504, 1514, 1523, 1527, 1529, 1563, 1571, 1576, 1594, 1604, 1607, 1608, 1609, 1624, 1625, 1626, 1631, 1667, 1681, 1699, 1703, 1713, 1714, 1728, 1729, 1730, 1734, 1744, 1755, 1765, 1766, 1767, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1801, 1803, 1804, 1805, 1825, 1826, 1843, 1859, 1867, 1871, 1874, 1915, 1924, 1940, 1945, 1946, 1948, 1956, 1957, 1959, 1960, 1961, 1964, 1973, 1979, 1998, 2009, 2010, 2013, 2017, 2019, 2023, 2026, 2029, 2030, 2031, 2032, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2050, 2051, 2053, 2055, 2056, 2057, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2072, 2074, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2105, 2107, 2108, 2110], "gpu": [0, 1, 2, 3, 4, 7, 14, 17, 19, 20, 22, 23, 29, 36, 46, 48, 53, 61, 196, 209, 289, 332, 603, 760, 973, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1028, 1029, 1030, 1037, 1043, 1044, 1050, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1083, 1084, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1154, 1269, 1279, 1316, 1341, 1370, 1378, 1380, 1381, 1385, 1386, 1427, 1459, 1474, 1493, 1523, 1539, 1540, 1563, 1696, 1713, 1754, 1924, 1990, 1993, 1996, 1997, 1998, 1999, 2001, 2009, 2010, 2023, 2027, 2042, 2044, 2047, 2049, 2051, 2052, 2054, 2055, 2057, 2067, 2072, 2077, 2079, 2080, 2083, 2086, 2089, 2090, 2093, 2097, 2098, 2101, 2105, 2106, 2108, 2110, 2114], "per": [0, 11, 14, 19, 22, 23, 27, 28, 29, 31, 32, 33, 35, 36, 38, 44, 46, 48, 53, 54, 59, 472, 473, 474, 734, 735, 801, 808, 819, 822, 825, 833, 846, 854, 893, 906, 907, 909, 911, 929, 973, 1012, 1089, 1120, 1165, 1175, 1342, 1396, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1456, 1458, 1459, 1466, 1477, 1482, 1485, 1486, 1487, 1488, 1489, 1495, 1514, 1515, 1523, 1526, 1527, 1528, 1529, 1530, 1537, 1538, 1555, 1556, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1601, 1602, 1612, 1641, 1665, 1673, 1712, 1713, 1729, 1765, 1769, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 1813, 1825, 1871, 1873, 1925, 1942, 1946, 1964, 1973, 1980, 2026, 2031, 2033, 2041, 2042, 2043, 2045, 2047, 2050, 2065, 2067, 2068, 2070, 2073, 2077, 2082, 2095, 2096, 2099, 2108, 2110], "process": [0, 1, 3, 11, 14, 19, 23, 27, 28, 29, 31, 32, 34, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 53, 62, 79, 80, 81, 84, 86, 1008, 1044, 1050, 1076, 1158, 1182, 1196, 1197, 1269, 1280, 1342, 1380, 1389, 1435, 1436, 1456, 1458, 1465, 1466, 1482, 1489, 1514, 1515, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1563, 1567, 1569, 1571, 1572, 1601, 1602, 1612, 1641, 1665, 1673, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1802, 1808, 1837, 1873, 1887, 1964, 2008, 2009, 2010, 2017, 2026, 2029, 2030, 2031, 2039, 2041, 2042, 2043, 2044, 2047, 2050, 2051, 2053, 2055, 2057, 2059, 2061, 2064, 2065, 2066, 2067, 2070, 2072, 2074, 2077, 2079, 2087, 2090, 2092, 2095, 2096, 2099, 2106, 2108, 2111], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 14, 15, 17, 27, 28, 29, 31, 32, 34, 35, 36, 45, 46, 48, 49, 50, 53, 54, 58, 62, 64, 72, 73, 81, 119, 150, 352, 445, 446, 447, 448, 449, 486, 587, 588, 821, 862, 863, 894, 901, 915, 973, 1006, 1008, 1009, 1011, 1040, 1051, 1052, 1073, 1107, 1109, 1126, 1146, 1147, 1148, 1158, 1164, 1188, 1195, 1269, 1273, 1281, 1282, 1305, 1306, 1333, 1334, 1342, 1382, 1459, 1520, 1523, 1540, 1557, 1668, 1681, 1687, 1713, 1775, 1805, 1832, 1836, 1838, 1869, 1872, 1936, 1939, 1964, 1966, 1978, 1979, 1996, 1998, 2008, 2009, 2010, 2013, 2014, 2017, 2027, 2029, 2030, 2031, 2032, 2035, 2037, 2039, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2051, 2053, 2056, 2057, 2061, 2064, 2065, 2067, 2070, 2071, 2072, 2073, 2083, 2086, 2090, 2094, 2095, 2096, 2097, 2100, 2101, 2104, 2105, 2108, 2109, 2110], "hpu": [0, 2079], "option": [0, 1, 2, 3, 5, 14, 22, 27, 29, 31, 32, 33, 34, 36, 39, 43, 44, 45, 48, 49, 50, 53, 62, 64, 71, 81, 83, 88, 150, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 240, 267, 297, 325, 331, 393, 445, 446, 447, 448, 449, 487, 499, 500, 513, 520, 525, 537, 560, 580, 581, 583, 584, 585, 587, 588, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 735, 758, 779, 780, 785, 792, 794, 799, 818, 855, 860, 863, 866, 877, 879, 880, 881, 882, 883, 884, 885, 886, 893, 894, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 924, 925, 926, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 957, 960, 962, 963, 964, 965, 966, 968, 970, 971, 972, 973, 979, 982, 989, 990, 992, 993, 994, 995, 999, 1004, 1005, 1006, 1008, 1009, 1011, 1013, 1017, 1018, 1020, 1021, 1022, 1025, 1026, 1033, 1034, 1037, 1040, 1048, 1049, 1050, 1051, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1103, 1105, 1106, 1107, 1108, 1109, 1111, 1116, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1182, 1184, 1210, 1211, 1212, 1213, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1244, 1246, 1258, 1260, 1263, 1264, 1266, 1267, 1269, 1270, 1273, 1276, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1382, 1383, 1385, 1386, 1390, 1392, 1398, 1399, 1408, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1476, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1514, 1515, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1537, 1538, 1542, 1543, 1544, 1551, 1555, 1556, 1563, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1576, 1577, 1578, 1594, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1620, 1621, 1624, 1625, 1626, 1629, 1631, 1640, 1641, 1648, 1654, 1655, 1656, 1665, 1666, 1668, 1673, 1681, 1687, 1688, 1700, 1712, 1713, 1714, 1722, 1723, 1725, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1762, 1763, 1765, 1767, 1768, 1769, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1798, 1811, 1812, 1813, 1816, 1820, 1821, 1823, 1824, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1844, 1845, 1852, 1854, 1859, 1871, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1936, 1937, 1938, 1939, 1940, 1943, 1945, 1948, 1949, 1950, 1951, 1952, 1954, 1957, 1958, 1961, 1967, 1968, 1969, 1970, 1975, 1976, 1978, 1979, 1982, 1987, 1988, 1990, 2001, 2005, 2006, 2007, 2008, 2010, 2011, 2013, 2015, 2017, 2019, 2023, 2024, 2026, 2032, 2037, 2042, 2044, 2045, 2046, 2047, 2050, 2051, 2055, 2056, 2059, 2061, 2064, 2066, 2067, 2072, 2077, 2078, 2079, 2080, 2082, 2084, 2088, 2089, 2090, 2099, 2105, 2107, 2108, 2110], "whether": [0, 1, 2, 5, 7, 14, 19, 22, 23, 27, 28, 29, 33, 34, 36, 44, 45, 53, 60, 62, 87, 319, 321, 471, 517, 617, 680, 693, 695, 696, 699, 799, 824, 875, 876, 881, 890, 901, 902, 905, 906, 907, 909, 911, 916, 917, 918, 920, 921, 927, 942, 951, 964, 965, 966, 972, 974, 976, 979, 980, 981, 1047, 1063, 1158, 1163, 1175, 1178, 1181, 1227, 1228, 1266, 1269, 1277, 1278, 1286, 1291, 1299, 1300, 1306, 1308, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1324, 1326, 1327, 1330, 1331, 1332, 1333, 1341, 1357, 1359, 1367, 1369, 1370, 1372, 1375, 1404, 1409, 1414, 1415, 1416, 1417, 1442, 1482, 1488, 1523, 1532, 1537, 1573, 1591, 1592, 1593, 1613, 1641, 1673, 1706, 1713, 1727, 1730, 1733, 1746, 1760, 1763, 1768, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1799, 1811, 1821, 1824, 1868, 1918, 1919, 1920, 1923, 1924, 1943, 1948, 1957, 1958, 1961, 1962, 1968, 1969, 1973, 1995, 2008, 2013, 2019, 2020, 2024, 2032, 2038, 2042, 2044, 2047, 2049, 2059, 2061, 2065, 2067, 2072, 2077, 2079, 2081, 2082, 2088, 2096, 2097, 2099, 2100, 2106, 2108], "torch_dtyp": 0, "It": [0, 1, 2, 3, 4, 5, 7, 8, 12, 17, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 50, 51, 53, 55, 57, 58, 59, 61, 62, 64, 84, 150, 196, 415, 473, 474, 513, 515, 517, 544, 557, 890, 891, 892, 893, 894, 901, 902, 906, 907, 917, 918, 927, 936, 973, 975, 979, 981, 983, 987, 988, 989, 1022, 1027, 1033, 1034, 1052, 1053, 1073, 1074, 1082, 1129, 1159, 1164, 1167, 1175, 1179, 1184, 1186, 1193, 1197, 1210, 1231, 1266, 1269, 1270, 1275, 1276, 1280, 1302, 1306, 1310, 1313, 1315, 1317, 1318, 1323, 1327, 1328, 1330, 1331, 1333, 1335, 1338, 1339, 1341, 1342, 1350, 1400, 1427, 1436, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1459, 1469, 1517, 1518, 1519, 1520, 1521, 1523, 1530, 1552, 1555, 1575, 1577, 1631, 1641, 1687, 1705, 1706, 1707, 1710, 1711, 1713, 1728, 1730, 1733, 1754, 1757, 1766, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1811, 1830, 1843, 1859, 1874, 1881, 1903, 1956, 1973, 1983, 1987, 1988, 1996, 1997, 1998, 1999, 2005, 2008, 2012, 2013, 2017, 2025, 2026, 2029, 2031, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2067, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2081, 2086, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2102, 2107, 2108, 2110], "given": [0, 1, 2, 3, 7, 9, 14, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 43, 45, 48, 50, 53, 59, 61, 62, 150, 219, 313, 315, 317, 321, 326, 377, 398, 402, 472, 473, 474, 475, 476, 478, 513, 515, 517, 584, 585, 604, 607, 680, 693, 695, 696, 698, 699, 735, 760, 779, 785, 792, 793, 794, 795, 799, 800, 802, 820, 824, 837, 840, 855, 859, 866, 877, 890, 892, 894, 899, 901, 902, 904, 906, 907, 909, 911, 912, 913, 914, 921, 927, 929, 939, 940, 943, 944, 947, 955, 959, 960, 965, 966, 967, 972, 973, 989, 991, 994, 995, 997, 999, 1003, 1005, 1008, 1009, 1011, 1012, 1013, 1017, 1025, 1026, 1029, 1033, 1034, 1050, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1066, 1069, 1070, 1071, 1072, 1081, 1082, 1083, 1084, 1091, 1093, 1098, 1106, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1146, 1163, 1173, 1174, 1181, 1184, 1186, 1187, 1188, 1189, 1195, 1218, 1236, 1266, 1269, 1277, 1285, 1286, 1291, 1295, 1305, 1307, 1308, 1317, 1319, 1325, 1333, 1342, 1349, 1351, 1352, 1353, 1354, 1357, 1367, 1369, 1371, 1372, 1375, 1396, 1398, 1399, 1406, 1417, 1427, 1435, 1436, 1442, 1450, 1451, 1452, 1454, 1455, 1456, 1458, 1459, 1465, 1466, 1470, 1471, 1474, 1482, 1493, 1515, 1519, 1520, 1521, 1523, 1525, 1527, 1528, 1530, 1532, 1534, 1539, 1552, 1558, 1572, 1573, 1576, 1577, 1578, 1594, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1620, 1621, 1624, 1625, 1629, 1640, 1665, 1681, 1696, 1697, 1700, 1701, 1702, 1706, 1707, 1728, 1729, 1754, 1761, 1762, 1765, 1768, 1769, 1775, 1801, 1804, 1806, 1808, 1811, 1816, 1821, 1824, 1825, 1826, 1839, 1845, 1850, 1861, 1862, 1867, 1892, 1896, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1917, 1920, 1923, 1925, 1935, 1936, 1941, 1943, 1945, 1955, 1957, 1959, 1961, 1965, 1978, 1979, 1980, 1982, 1985, 1987, 1988, 2004, 2005, 2008, 2009, 2010, 2013, 2017, 2019, 2020, 2024, 2029, 2032, 2033, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2050, 2051, 2055, 2056, 2059, 2061, 2063, 2066, 2067, 2072, 2073, 2076, 2077, 2078, 2079, 2082, 2084, 2088, 2092, 2096, 2098, 2099, 2107, 2108, 2109], "get_autocast_dtyp": [0, 2011, 2062], "weight": [0, 22, 27, 29, 33, 34, 50, 51, 59, 62, 64, 156, 301, 361, 362, 496, 712, 713, 714, 715, 716, 717, 718, 719, 720, 730, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 743, 745, 746, 749, 751, 752, 753, 754, 756, 760, 761, 763, 764, 765, 772, 773, 774, 781, 792, 793, 794, 808, 809, 833, 835, 842, 846, 850, 851, 852, 853, 854, 859, 860, 862, 863, 944, 995, 1163, 1165, 1173, 1175, 1231, 1232, 1269, 1273, 1279, 1281, 1286, 1295, 1409, 1435, 1436, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1465, 1466, 1474, 1475, 1477, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1523, 1527, 1528, 1529, 1530, 1531, 1538, 1539, 1541, 1553, 1567, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1620, 1621, 1630, 1639, 1643, 1646, 1662, 1664, 1665, 1674, 1678, 1681, 1684, 1703, 1712, 1713, 1720, 1721, 1722, 1723, 1725, 1727, 1728, 1729, 1731, 1733, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1761, 1762, 1763, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1827, 1961, 1973, 2008, 2009, 2011, 2012, 2013, 2017, 2023, 2024, 2031, 2032, 2037, 2044, 2046, 2047, 2051, 2056, 2059, 2067, 2068, 2069, 2070, 2077, 2082, 2087, 2088, 2099, 2103], "cach": [0, 2, 3, 19, 34, 62, 486, 973, 983, 1030, 1031, 1048, 1051, 1056, 1058, 1060, 1062, 1071, 1076, 1185, 1186, 1378, 1380, 1381, 1714, 1733, 1765, 1986, 2029, 2046, 2093, 2096, 2097, 2099, 2102, 2106, 2110], "insid": [0, 1, 7, 22, 45, 51, 53, 58, 61, 62, 906, 907, 1014, 1051, 1165, 1169, 1174, 1184, 1281, 1713, 2010, 2012, 2013, 2017, 2023, 2025, 2038, 2042, 2044, 2045, 2050, 2061, 2077, 2087, 2096, 2098, 2108], "deprec": [0, 7, 27, 29, 36, 45, 46, 50, 53, 57, 406, 513, 557, 603, 785, 786, 787, 793, 826, 915, 963, 964, 980, 1005, 1055, 1059, 1214, 1269, 1324, 1327, 1359, 1360, 1435, 1436, 1456, 1458, 1481, 1482, 1488, 1489, 1514, 1515, 1523, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1577, 1578, 1601, 1602, 1612, 1641, 1665, 1673, 1700, 1701, 1702, 1704, 1713, 1717, 1762, 1763, 1765, 1768, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1823, 1839, 1865, 1920, 1924, 1948, 2009, 2010, 2015, 2029, 2040, 2065, 2066, 2070, 2079, 2083, 2084, 2099], "instead": [0, 1, 3, 5, 8, 9, 14, 19, 22, 23, 27, 29, 33, 34, 36, 42, 45, 46, 50, 51, 53, 56, 57, 58, 60, 62, 64, 73, 406, 458, 486, 499, 513, 748, 757, 768, 769, 793, 817, 826, 881, 891, 906, 907, 909, 910, 911, 912, 915, 920, 957, 963, 1141, 1143, 1168, 1169, 1170, 1171, 1174, 1175, 1197, 1200, 1214, 1256, 1267, 1269, 1270, 1274, 1299, 1300, 1306, 1308, 1324, 1327, 1333, 1339, 1341, 1370, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1456, 1458, 1459, 1461, 1462, 1463, 1467, 1474, 1482, 1488, 1489, 1490, 1491, 1492, 1493, 1514, 1515, 1516, 1517, 1518, 1523, 1526, 1527, 1528, 1530, 1537, 1539, 1551, 1555, 1556, 1557, 1563, 1572, 1596, 1597, 1598, 1601, 1602, 1612, 1622, 1629, 1641, 1654, 1655, 1656, 1665, 1673, 1687, 1713, 1763, 1765, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1799, 1805, 1828, 1829, 1839, 1859, 1863, 1905, 1920, 1924, 1961, 1973, 2010, 2012, 2013, 2017, 2020, 2021, 2031, 2037, 2038, 2039, 2043, 2044, 2045, 2046, 2048, 2049, 2053, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2066, 2067, 2070, 2073, 2076, 2077, 2083, 2084, 2086, 2088, 2093, 2094, 2095, 2096, 2098, 2099, 2104, 2106, 2107, 2108, 2109], "custom_fwd": [0, 2038], "fwd": [0, 2102, 2106], "cast_input": [0, 2038], "helper": [0, 3, 27, 57, 62, 2008, 2009, 2012, 2042, 2043, 2061, 2064, 2072, 2107, 2109], "subclass": [0, 1, 14, 22, 29, 34, 38, 58, 62, 139, 537, 890, 891, 892, 906, 907, 1189, 1267, 1270, 1280, 1523, 1714, 1735, 1740, 1761, 2010, 2013, 2014, 2020, 2035, 2038, 2051, 2061, 2072, 2076, 2077, 2096, 2097, 2099, 2109], "page": [0, 6, 7, 9, 22, 28, 46, 49, 1342, 1567, 1569, 1571, 2042, 2043, 2051, 2062, 2072, 2105], "incom": [0, 27, 48, 781, 819, 820, 821, 822, 825, 1440, 1510, 1600, 1646, 2029, 2039], "non": [0, 1, 2, 3, 5, 14, 19, 21, 23, 27, 28, 29, 34, 36, 38, 45, 48, 49, 51, 53, 61, 64, 75, 78, 84, 88, 150, 335, 486, 488, 504, 513, 517, 545, 698, 734, 739, 740, 741, 742, 743, 745, 746, 756, 760, 764, 765, 772, 773, 774, 838, 866, 878, 890, 892, 894, 901, 903, 905, 906, 907, 920, 921, 936, 944, 957, 960, 973, 988, 989, 994, 1062, 1152, 1153, 1160, 1164, 1169, 1175, 1188, 1191, 1198, 1246, 1269, 1272, 1282, 1285, 1286, 1305, 1306, 1313, 1317, 1318, 1331, 1333, 1342, 1352, 1359, 1364, 1369, 1409, 1414, 1415, 1419, 1432, 1433, 1434, 1451, 1452, 1454, 1455, 1458, 1468, 1474, 1491, 1492, 1493, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1528, 1530, 1539, 1541, 1555, 1612, 1631, 1660, 1665, 1713, 1767, 1794, 1816, 1859, 1860, 1874, 1879, 1886, 1901, 1902, 1906, 1907, 1908, 1909, 1910, 1911, 1941, 1957, 1959, 1973, 2008, 2009, 2010, 2012, 2013, 2015, 2017, 2029, 2032, 2037, 2040, 2044, 2045, 2046, 2047, 2051, 2055, 2061, 2063, 2065, 2066, 2071, 2072, 2074, 2077, 2078, 2080, 2081, 2082, 2084, 2090, 2093, 2095, 2096, 2098, 2099, 2100, 2106, 2107, 2109], "intern": [0, 3, 8, 9, 14, 22, 23, 27, 29, 34, 36, 42, 50, 53, 58, 62, 901, 1006, 1040, 1061, 1164, 1182, 1269, 1306, 1308, 1324, 1327, 1350, 1437, 1438, 1439, 1476, 1563, 1604, 1605, 1606, 1629, 1730, 1774, 1867, 1909, 1961, 2014, 2038, 2039, 2041, 2042, 2047, 2048, 2054, 2055, 2059, 2073, 2074, 2079, 2081, 2089, 2096, 2099, 2108], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 22, 27, 29, 31, 32, 33, 34, 38, 45, 46, 50, 51, 53, 54, 61, 62, 80, 88, 150, 209, 221, 497, 498, 499, 741, 743, 781, 793, 795, 817, 860, 862, 863, 866, 880, 881, 891, 894, 896, 897, 898, 906, 909, 910, 911, 920, 942, 951, 987, 998, 999, 1001, 1002, 1006, 1008, 1009, 1011, 1016, 1017, 1020, 1021, 1023, 1024, 1025, 1026, 1029, 1030, 1031, 1033, 1034, 1037, 1039, 1040, 1043, 1045, 1046, 1050, 1051, 1052, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1075, 1077, 1079, 1082, 1083, 1084, 1107, 1109, 1119, 1124, 1142, 1158, 1159, 1161, 1179, 1182, 1184, 1194, 1216, 1217, 1218, 1219, 1227, 1228, 1252, 1253, 1269, 1273, 1285, 1289, 1340, 1342, 1356, 1371, 1378, 1381, 1382, 1383, 1390, 1397, 1398, 1399, 1405, 1462, 1465, 1469, 1523, 1563, 1571, 1575, 1623, 1629, 1640, 1681, 1699, 1700, 1702, 1713, 1734, 1738, 1739, 1740, 1741, 1742, 1747, 1748, 1749, 1750, 1772, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1823, 1832, 1834, 1836, 1838, 1839, 1863, 1867, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1899, 1906, 1907, 1908, 1909, 1910, 1911, 1920, 1939, 1950, 1952, 1957, 1963, 1964, 1978, 1979, 1981, 1982, 1985, 1986, 1987, 1988, 1990, 1993, 1994, 1996, 1998, 2000, 2001, 2003, 2005, 2006, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2020, 2025, 2026, 2029, 2032, 2038, 2039, 2042, 2047, 2049, 2050, 2051, 2052, 2053, 2056, 2057, 2061, 2063, 2064, 2065, 2067, 2070, 2072, 2073, 2077, 2079, 2080, 2082, 2083, 2087, 2096, 2098, 2099, 2104, 2105, 2106, 2108, 2109, 2110], "outsid": [0, 5, 9, 22, 38, 50, 51, 53, 58, 684, 795, 886, 1163, 1165, 1169, 1174, 1270, 1629, 1713, 1796, 1797, 1802, 1803, 1809, 2012, 2013, 2037, 2039, 2042, 2045, 2046, 2084, 2093, 2099, 2104], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 20, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 150, 196, 209, 255, 260, 335, 445, 446, 447, 448, 449, 473, 474, 486, 488, 496, 498, 544, 580, 581, 603, 604, 618, 680, 689, 693, 695, 696, 697, 699, 735, 760, 779, 781, 785, 787, 791, 797, 838, 840, 848, 859, 865, 875, 876, 878, 890, 893, 894, 899, 901, 902, 906, 907, 911, 920, 921, 929, 940, 943, 961, 964, 965, 966, 973, 975, 978, 987, 988, 989, 990, 1005, 1008, 1009, 1011, 1016, 1044, 1047, 1048, 1094, 1096, 1110, 1142, 1154, 1163, 1164, 1167, 1168, 1171, 1175, 1206, 1223, 1232, 1233, 1244, 1266, 1269, 1273, 1277, 1280, 1281, 1282, 1285, 1290, 1291, 1299, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1323, 1324, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1336, 1337, 1341, 1350, 1357, 1359, 1364, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1382, 1404, 1414, 1415, 1416, 1417, 1435, 1436, 1437, 1438, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1466, 1469, 1470, 1471, 1474, 1477, 1482, 1485, 1486, 1487, 1493, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1527, 1528, 1529, 1530, 1531, 1538, 1539, 1555, 1557, 1563, 1571, 1575, 1576, 1594, 1604, 1605, 1606, 1612, 1621, 1624, 1625, 1629, 1640, 1665, 1667, 1668, 1670, 1674, 1681, 1687, 1700, 1702, 1703, 1706, 1707, 1712, 1713, 1727, 1730, 1732, 1735, 1739, 1741, 1744, 1754, 1755, 1762, 1763, 1767, 1769, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1797, 1798, 1799, 1801, 1805, 1807, 1811, 1821, 1823, 1824, 1825, 1826, 1843, 1845, 1855, 1867, 1888, 1902, 1903, 1904, 1909, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1936, 1942, 1948, 1959, 1968, 1969, 1973, 1978, 1979, 1995, 2010, 2012, 2013, 2017, 2019, 2020, 2026, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2049, 2050, 2051, 2053, 2054, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2071, 2072, 2073, 2074, 2077, 2079, 2080, 2082, 2083, 2084, 2086, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2102, 2104, 2108], "effect": [0, 3, 5, 7, 14, 22, 23, 27, 32, 34, 48, 50, 51, 53, 58, 62, 64, 67, 196, 209, 603, 735, 779, 785, 1040, 1089, 1175, 1269, 1312, 1313, 1314, 1315, 1371, 1427, 1442, 1453, 1454, 1455, 1460, 1461, 1462, 1463, 1467, 1523, 1529, 1576, 1640, 1668, 1700, 1706, 1713, 1714, 1740, 1791, 1799, 1899, 1904, 1924, 1946, 1962, 1973, 2008, 2010, 2017, 2023, 2037, 2038, 2039, 2042, 2044, 2047, 2067, 2070, 2079, 2080, 2082, 2093, 2096], "custom_bwd": [0, 2038], "bwd": [0, 2106], "small": [0, 3, 7, 9, 22, 23, 27, 34, 45, 866, 920, 921, 973, 1019, 1062, 1332, 1333, 1345, 1347, 1427, 1457, 1532, 1537, 1552, 1572, 1576, 1611, 1666, 1673, 1713, 1796, 1802, 1811, 1924, 2010, 2012, 2013, 2021, 2042, 2044, 2046, 2051, 2054, 2056, 2061, 2064, 2067, 2068, 2077, 2078, 2084, 2093, 2095, 2096, 2098, 2099, 2100, 2102, 2106, 2108, 2110], "magnitud": [0, 990, 1729, 1765, 1874, 2037, 2038, 2042], "represent": [0, 3, 14, 22, 27, 29, 32, 43, 50, 51, 62, 81, 481, 758, 801, 826, 1009, 1122, 1123, 1125, 1149, 1213, 1269, 1309, 1312, 1314, 1317, 1413, 1523, 1529, 1811, 2009, 2010, 2013, 2021, 2032, 2044, 2054, 2059, 2061, 2064, 2066, 2067, 2077, 2084, 2095, 2099, 2108, 2112], "These": [0, 1, 2, 3, 8, 14, 15, 22, 27, 28, 34, 50, 54, 56, 59, 62, 63, 486, 794, 881, 995, 1106, 1171, 1266, 1269, 1312, 1377, 1427, 1523, 1703, 1728, 2009, 2010, 2011, 2012, 2013, 2021, 2026, 2030, 2031, 2033, 2038, 2039, 2042, 2043, 2044, 2051, 2054, 2056, 2061, 2064, 2065, 2070, 2072, 2073, 2080, 2086, 2090, 2093, 2095, 2096, 2097, 2099, 2104, 2108, 2109, 2111], "flush": [0, 1, 29, 50, 1062, 1280, 1855, 1868, 2054, 2082], "zero": [0, 1, 2, 23, 27, 28, 31, 34, 48, 51, 53, 58, 62, 64, 71, 73, 74, 75, 150, 258, 260, 315, 486, 513, 515, 544, 545, 584, 585, 587, 588, 623, 679, 691, 698, 712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 730, 731, 738, 739, 740, 741, 742, 743, 744, 749, 750, 751, 752, 753, 754, 755, 756, 759, 760, 764, 768, 769, 772, 773, 774, 775, 777, 780, 781, 795, 799, 819, 820, 821, 822, 825, 830, 878, 887, 888, 889, 894, 901, 903, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 943, 944, 964, 965, 966, 971, 990, 994, 1051, 1062, 1067, 1068, 1097, 1101, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1145, 1154, 1160, 1163, 1171, 1184, 1229, 1230, 1233, 1254, 1266, 1269, 1281, 1299, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1337, 1342, 1350, 1351, 1352, 1353, 1354, 1359, 1360, 1409, 1413, 1417, 1431, 1432, 1433, 1434, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1474, 1475, 1477, 1490, 1491, 1492, 1493, 1494, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1529, 1532, 1535, 1536, 1537, 1538, 1539, 1541, 1561, 1575, 1576, 1579, 1580, 1581, 1596, 1597, 1598, 1607, 1608, 1609, 1611, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1629, 1650, 1651, 1652, 1666, 1667, 1668, 1681, 1712, 1738, 1739, 1740, 1741, 1756, 1763, 1767, 1771, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1811, 1823, 1825, 1826, 1827, 1836, 1843, 1852, 1862, 1879, 1888, 1892, 1902, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1924, 1939, 1940, 1942, 1948, 2007, 2010, 2011, 2013, 2015, 2026, 2029, 2030, 2031, 2032, 2037, 2039, 2042, 2044, 2051, 2054, 2057, 2061, 2062, 2064, 2066, 2067, 2070, 2072, 2077, 2078, 2080, 2082, 2083, 2084, 2086, 2096, 2098, 2101], "underflow": [0, 1488, 2038], "updat": [0, 9, 11, 22, 23, 29, 31, 36, 45, 50, 53, 56, 57, 62, 86, 488, 513, 515, 760, 799, 800, 824, 897, 898, 927, 940, 1163, 1172, 1269, 1306, 1437, 1438, 1439, 1459, 1465, 1466, 1474, 1485, 1486, 1487, 1523, 1524, 1533, 1563, 1620, 1621, 1720, 1721, 1728, 1733, 1763, 1777, 1783, 1788, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 2008, 2010, 2023, 2038, 2039, 2042, 2043, 2044, 2051, 2053, 2056, 2057, 2059, 2061, 2062, 2063, 2065, 2067, 2072, 2073, 2074, 2082, 2093, 2107], "lost": [0, 36, 46, 49, 1459, 1519, 1520, 1521, 2099], "To": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15, 19, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 37, 43, 44, 46, 48, 50, 51, 53, 58, 62, 79, 82, 83, 86, 335, 499, 557, 734, 896, 915, 929, 939, 970, 973, 1052, 1073, 1094, 1096, 1106, 1134, 1136, 1140, 1151, 1269, 1270, 1272, 1273, 1280, 1281, 1315, 1337, 1342, 1370, 1427, 1436, 1462, 1488, 1519, 1520, 1521, 1523, 1577, 1578, 1602, 1681, 1713, 1729, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1765, 1805, 1813, 1824, 1863, 1867, 1870, 1909, 1925, 1996, 1998, 2008, 2010, 2012, 2013, 2017, 2029, 2030, 2031, 2033, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2052, 2053, 2056, 2061, 2063, 2064, 2065, 2066, 2067, 2072, 2073, 2074, 2077, 2080, 2081, 2082, 2083, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2106, 2107, 2108, 2110], "prevent": [0, 7, 8, 22, 23, 27, 28, 29, 36, 53, 62, 486, 499, 735, 901, 904, 906, 1008, 1087, 1088, 1107, 1108, 1109, 1266, 1369, 1382, 1414, 1417, 1460, 1529, 1555, 1648, 1687, 1688, 1703, 1713, 1778, 1821, 1900, 1903, 1923, 1950, 1952, 1961, 1978, 2017, 2029, 2038, 2039, 2042, 2043, 2046, 2047, 2051, 2055, 2064, 2066, 2074, 2077, 2078, 2093, 2098, 2099], "multipli": [0, 27, 313, 321, 423, 513, 685, 686, 687, 688, 689, 690, 691, 760, 779, 785, 786, 787, 941, 953, 1076, 1089, 1106, 1223, 1234, 1293, 1305, 1306, 1310, 1323, 1325, 1327, 1333, 1335, 1364, 1374, 1389, 1408, 1411, 1435, 1450, 1451, 1452, 1455, 1474, 1493, 1576, 1577, 1578, 1640, 1700, 1701, 1702, 1733, 1796, 1802, 1804, 1811, 1867, 1894, 1897, 1901, 1902, 1916, 1920, 1921, 1924, 1946, 2011, 2030, 2042, 2048, 2051, 2054, 2062, 2077, 2078, 2099], "factor": [0, 3, 23, 34, 62, 689, 690, 691, 799, 819, 941, 964, 1312, 1313, 1314, 1317, 1319, 1359, 1360, 1361, 1460, 1483, 1511, 1535, 1536, 1638, 1671, 1672, 1681, 1791, 1792, 1793, 1795, 1796, 1798, 1800, 1801, 1802, 1803, 1804, 1807, 1808, 1809, 1823, 1880, 1902, 1924, 2037, 2038, 2067, 2077, 2099], "flow": [0, 32, 51, 64, 70, 73, 970, 987, 1282, 1285, 1594, 1629, 1713, 2009, 2010, 2037, 2039, 2042, 2044, 2056, 2058, 2061, 2074, 2093, 2094, 2095, 2096, 2099, 2106], "through": [0, 5, 7, 9, 11, 15, 22, 27, 29, 32, 34, 38, 50, 51, 53, 58, 61, 62, 64, 67, 69, 71, 79, 496, 792, 840, 855, 862, 863, 901, 904, 906, 907, 920, 921, 1013, 1051, 1133, 1167, 1175, 1182, 1267, 1270, 1272, 1285, 1286, 1288, 1305, 1306, 1327, 1333, 1350, 1530, 1568, 1569, 1570, 1571, 1631, 1703, 1713, 1720, 1721, 1733, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1823, 1973, 2008, 2009, 2012, 2013, 2017, 2019, 2026, 2029, 2030, 2031, 2039, 2042, 2044, 2046, 2048, 2050, 2051, 2057, 2058, 2059, 2061, 2064, 2065, 2067, 2070, 2072, 2073, 2074, 2077, 2081, 2086, 2088, 2089, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2107, 2108, 2112], "word": [0, 1, 8, 27, 45, 46, 51, 56, 61, 62, 957, 1183, 1427, 1450, 1451, 1452, 1465, 1466, 1567, 1620, 1621, 1640, 1700, 1713, 1727, 1859, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2012, 2039, 2046, 2047, 2064, 2073, 2096], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 22, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 62, 64, 72, 73, 84, 153, 154, 221, 222, 313, 315, 321, 335, 398, 402, 448, 458, 471, 486, 487, 488, 503, 513, 515, 517, 520, 544, 617, 680, 689, 693, 695, 696, 697, 699, 815, 817, 842, 881, 890, 894, 906, 907, 909, 911, 916, 925, 926, 929, 942, 943, 951, 960, 961, 973, 976, 987, 995, 1011, 1020, 1021, 1051, 1062, 1097, 1105, 1112, 1126, 1136, 1141, 1143, 1157, 1163, 1164, 1175, 1184, 1192, 1193, 1194, 1210, 1211, 1227, 1228, 1231, 1232, 1244, 1266, 1268, 1269, 1272, 1273, 1275, 1277, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1291, 1292, 1301, 1305, 1306, 1322, 1329, 1330, 1333, 1335, 1341, 1350, 1352, 1357, 1364, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1409, 1414, 1415, 1417, 1419, 1427, 1431, 1435, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1459, 1465, 1466, 1470, 1471, 1476, 1481, 1485, 1486, 1487, 1515, 1523, 1526, 1527, 1528, 1529, 1530, 1571, 1573, 1611, 1620, 1621, 1624, 1625, 1629, 1646, 1665, 1667, 1670, 1705, 1706, 1707, 1710, 1711, 1713, 1714, 1718, 1719, 1720, 1721, 1722, 1724, 1727, 1730, 1733, 1757, 1761, 1766, 1768, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1821, 1847, 1848, 1862, 1867, 1874, 1897, 1901, 1905, 1906, 1907, 1908, 1910, 1911, 1918, 1919, 1920, 1923, 1924, 1936, 1940, 1946, 1948, 1961, 1964, 1966, 1968, 1969, 1971, 1973, 1975, 1979, 2008, 2010, 2011, 2012, 2013, 2015, 2017, 2019, 2020, 2021, 2023, 2026, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2059, 2061, 2063, 2064, 2065, 2067, 2068, 2071, 2072, 2073, 2074, 2077, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2108, 2109, 2110], "larger": [0, 9, 27, 34, 62, 254, 499, 921, 944, 1062, 1164, 1324, 1327, 1427, 1459, 1465, 1466, 1515, 1573, 1576, 1620, 1621, 2039, 2042, 2046, 2048, 2050, 2054, 2056, 2077, 2082, 2102, 2105, 2106, 2107], "thei": [0, 1, 3, 5, 7, 9, 11, 12, 17, 18, 22, 27, 29, 33, 34, 35, 45, 50, 51, 53, 56, 57, 61, 62, 84, 321, 335, 336, 486, 686, 689, 690, 697, 800, 815, 816, 817, 824, 842, 855, 860, 891, 901, 904, 906, 916, 917, 921, 941, 973, 1051, 1066, 1110, 1157, 1163, 1173, 1179, 1190, 1195, 1197, 1258, 1259, 1266, 1269, 1277, 1282, 1291, 1305, 1306, 1312, 1333, 1341, 1363, 1367, 1370, 1372, 1375, 1409, 1432, 1433, 1434, 1453, 1454, 1455, 1469, 1508, 1516, 1517, 1518, 1523, 1529, 1540, 1552, 1575, 1629, 1631, 1703, 1713, 1714, 1718, 1727, 1731, 1754, 1757, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1801, 1804, 1863, 1920, 1924, 1961, 1962, 1967, 2008, 2010, 2012, 2013, 2015, 2017, 2019, 2020, 2023, 2026, 2029, 2030, 2031, 2032, 2033, 2037, 2038, 2039, 2042, 2043, 2044, 2045, 2047, 2049, 2051, 2053, 2054, 2056, 2057, 2059, 2061, 2063, 2064, 2065, 2067, 2072, 2077, 2080, 2082, 2083, 2084, 2086, 2087, 2093, 2095, 2096, 2098, 2099, 2100, 2101, 2104, 2108, 2109], "don": [0, 1, 4, 7, 9, 11, 27, 29, 44, 53, 54, 56, 58, 62, 64, 74, 75, 150, 785, 795, 894, 896, 915, 1080, 1163, 1183, 1184, 1190, 1192, 1194, 1198, 1285, 1363, 1485, 1486, 1487, 1576, 1700, 1703, 1713, 1769, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1866, 2008, 2010, 2014, 2029, 2030, 2031, 2039, 2042, 2044, 2046, 2051, 2053, 2057, 2061, 2063, 2064, 2065, 2067, 2072, 2073, 2077, 2093, 2095, 2097, 2098, 2099, 2100, 2106, 2109], "t": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 22, 23, 27, 29, 34, 35, 36, 38, 42, 43, 44, 45, 50, 51, 53, 54, 56, 58, 59, 61, 62, 64, 74, 75, 81, 84, 150, 313, 315, 321, 458, 486, 523, 537, 571, 687, 688, 697, 760, 781, 785, 795, 823, 826, 878, 879, 880, 881, 890, 892, 894, 896, 901, 902, 904, 906, 907, 910, 915, 927, 964, 965, 966, 971, 987, 995, 1006, 1009, 1030, 1048, 1049, 1080, 1104, 1122, 1127, 1128, 1129, 1130, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1145, 1157, 1158, 1159, 1160, 1163, 1164, 1165, 1175, 1183, 1184, 1186, 1190, 1192, 1194, 1197, 1198, 1208, 1210, 1223, 1233, 1266, 1267, 1269, 1270, 1272, 1276, 1277, 1281, 1283, 1285, 1288, 1290, 1299, 1300, 1306, 1308, 1309, 1312, 1319, 1327, 1328, 1333, 1341, 1342, 1350, 1363, 1376, 1377, 1392, 1406, 1416, 1436, 1440, 1442, 1450, 1451, 1452, 1459, 1465, 1466, 1474, 1483, 1485, 1486, 1487, 1488, 1493, 1510, 1523, 1539, 1555, 1557, 1567, 1575, 1576, 1600, 1604, 1605, 1606, 1613, 1620, 1621, 1641, 1646, 1666, 1687, 1700, 1703, 1706, 1707, 1713, 1714, 1727, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1755, 1757, 1758, 1769, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1797, 1813, 1819, 1823, 1840, 1863, 1865, 1866, 1874, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1897, 1901, 1920, 1924, 1925, 1930, 1936, 1939, 1945, 1948, 1973, 1974, 1986, 2008, 2010, 2011, 2012, 2014, 2017, 2025, 2026, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2041, 2042, 2044, 2045, 2047, 2048, 2050, 2051, 2053, 2056, 2057, 2061, 2062, 2063, 2064, 2065, 2067, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2093, 2095, 2097, 2098, 2100, 2103, 2106, 2108, 2109], "grad": [0, 1, 5, 27, 34, 54, 57, 58, 62, 150, 335, 458, 487, 488, 495, 496, 503, 504, 581, 680, 881, 890, 894, 896, 897, 898, 901, 905, 906, 907, 909, 911, 916, 917, 920, 921, 925, 926, 1051, 1110, 1163, 1164, 1166, 1170, 1174, 1175, 1252, 1269, 1342, 1523, 1713, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1901, 1961, 1973, 2009, 2010, 2011, 2017, 2030, 2031, 2032, 2038, 2043, 2044, 2045, 2048, 2051, 2053, 2062, 2072, 2073, 2077, 2083, 2104, 2106], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 14, 26, 27, 31, 32, 34, 36, 38, 42, 44, 45, 48, 50, 51, 53, 56, 57, 58, 61, 62, 64, 150, 254, 258, 335, 435, 458, 583, 617, 680, 695, 696, 748, 757, 760, 790, 794, 862, 881, 917, 918, 940, 953, 1042, 1046, 1097, 1106, 1110, 1160, 1163, 1175, 1181, 1184, 1244, 1268, 1270, 1273, 1280, 1285, 1295, 1299, 1300, 1310, 1312, 1313, 1317, 1318, 1325, 1330, 1331, 1333, 1339, 1342, 1359, 1363, 1364, 1370, 1374, 1378, 1411, 1437, 1438, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1462, 1465, 1466, 1469, 1474, 1475, 1485, 1486, 1487, 1493, 1494, 1496, 1497, 1498, 1505, 1506, 1507, 1517, 1518, 1524, 1530, 1533, 1539, 1541, 1563, 1575, 1612, 1665, 1713, 1714, 1720, 1721, 1730, 1733, 1737, 1763, 1766, 1768, 1773, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1808, 1812, 1817, 1859, 1862, 1863, 1867, 1892, 1897, 1924, 1945, 1948, 1961, 1962, 1973, 1992, 2007, 2008, 2009, 2010, 2012, 2013, 2015, 2017, 2023, 2029, 2030, 2031, 2032, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2051, 2053, 2054, 2055, 2058, 2059, 2061, 2064, 2065, 2067, 2072, 2074, 2076, 2077, 2079, 2080, 2084, 2093, 2095, 2096, 2108, 2110], "interfer": [0, 2026, 2042, 2061, 2099], "learn": [0, 7, 8, 15, 32, 34, 44, 50, 53, 62, 86, 1440, 1456, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1482, 1495, 1508, 1510, 1531, 1553, 1567, 1569, 1571, 1572, 1573, 1684, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 2009, 2017, 2033, 2037, 2042, 2049, 2051, 2052, 2058, 2064, 2067, 2072, 2074, 2089, 2092, 2094, 2095, 2096, 2097], "rate": [0, 2, 8, 23, 34, 53, 1461, 1462, 1463, 1467, 1570, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1816, 2009, 2050, 2082, 2099, 2105], "fp16": [0, 2, 729, 1713, 1720, 1721, 2067, 2068], "everi": [0, 1, 2, 8, 9, 22, 23, 27, 29, 31, 34, 36, 51, 53, 58, 62, 481, 487, 610, 680, 781, 819, 901, 902, 906, 925, 926, 929, 973, 1089, 1106, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1164, 1223, 1232, 1269, 1301, 1315, 1325, 1328, 1359, 1431, 1460, 1461, 1462, 1463, 1467, 1516, 1523, 1557, 1559, 1563, 1615, 1616, 1617, 1622, 1639, 1654, 1655, 1656, 1670, 1688, 1705, 1706, 1707, 1710, 1711, 1713, 1728, 1762, 1765, 1766, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1863, 1924, 1958, 2013, 2019, 2026, 2038, 2039, 2042, 2043, 2044, 2045, 2047, 2048, 2052, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2072, 2073, 2074, 2077, 2079, 2080, 2082, 2084, 2095, 2096, 2098, 2105, 2106, 2107, 2108], "most": [0, 1, 3, 4, 7, 8, 15, 22, 27, 29, 31, 32, 34, 35, 36, 37, 44, 45, 48, 49, 53, 58, 59, 61, 62, 64, 486, 499, 793, 901, 902, 903, 904, 906, 907, 912, 916, 920, 933, 973, 1075, 1089, 1106, 1164, 1254, 1267, 1270, 1375, 1427, 1571, 1629, 1681, 1713, 1720, 1721, 1733, 1788, 1867, 1899, 1946, 2008, 2010, 2012, 2013, 2015, 2020, 2021, 2029, 2031, 2032, 2039, 2042, 2044, 2047, 2053, 2054, 2055, 2059, 2063, 2066, 2067, 2073, 2074, 2077, 2080, 2082, 2084, 2089, 2092, 2095, 2097, 2098, 2099, 2100, 2101, 2102, 2107, 2108], "bf16": [0, 2], "pretrain": [0, 29, 863, 1465, 1466, 2008, 2039, 2061], "cannot": [0, 3, 8, 9, 12, 22, 23, 27, 29, 34, 35, 38, 45, 50, 53, 54, 58, 59, 61, 62, 222, 254, 524, 545, 881, 987, 1127, 1129, 1137, 1138, 1139, 1145, 1158, 1163, 1193, 1266, 1274, 1409, 1442, 1465, 1576, 1613, 1681, 1713, 1774, 1925, 2008, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2021, 2026, 2031, 2032, 2039, 2043, 2044, 2056, 2057, 2059, 2061, 2067, 2072, 2074, 2077, 2079, 2080, 2082, 2093, 2096, 2097, 2099, 2100, 2109], "numer": [0, 11, 22, 24, 34, 51, 54, 59, 687, 793, 920, 921, 957, 1273, 1285, 1286, 1301, 1305, 1306, 1310, 1315, 1323, 1324, 1327, 1330, 1333, 1335, 1357, 1359, 1436, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1538, 1557, 1560, 1563, 1572, 1620, 1641, 1648, 1681, 1687, 1689, 1712, 1728, 1762, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1827, 1859, 1879, 1924, 2009, 2013, 2014, 2018, 2023, 2042, 2044, 2045, 2061, 2067, 2078, 2082, 2083, 2099, 2108, 2112], "max": [0, 22, 27, 36, 38, 44, 45, 48, 50, 53, 62, 64, 74, 75, 116, 185, 186, 187, 188, 300, 695, 696, 697, 758, 770, 771, 780, 782, 783, 802, 819, 820, 821, 822, 825, 875, 929, 944, 961, 968, 969, 973, 995, 1085, 1120, 1121, 1194, 1230, 1281, 1301, 1315, 1322, 1324, 1326, 1327, 1339, 1428, 1429, 1430, 1441, 1442, 1456, 1457, 1466, 1470, 1471, 1476, 1481, 1482, 1490, 1491, 1492, 1509, 1511, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1526, 1527, 1528, 1531, 1543, 1544, 1551, 1572, 1573, 1575, 1591, 1592, 1593, 1603, 1611, 1621, 1624, 1625, 1640, 1644, 1654, 1655, 1656, 1666, 1670, 1674, 1676, 1682, 1700, 1718, 1757, 1780, 1781, 1782, 1792, 1797, 1798, 1807, 1828, 1829, 1901, 1918, 1919, 1931, 1932, 1961, 1968, 1969, 2010, 2011, 2020, 2026, 2032, 2040, 2042, 2046, 2062, 2067, 2070, 2090, 2095, 2098, 2102, 2103, 2112], "65504": 0, "overflow": [0, 1087, 1088, 1369, 1414, 1417, 1648, 1687, 1688, 1821, 1852, 1900, 1903, 1923, 1950, 1952, 2042, 2054, 2078], "case": [0, 1, 3, 4, 8, 9, 11, 14, 15, 22, 23, 27, 29, 31, 32, 33, 34, 36, 37, 38, 45, 46, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 64, 84, 150, 154, 196, 352, 486, 496, 499, 680, 760, 784, 791, 794, 820, 821, 823, 826, 859, 866, 894, 906, 907, 909, 911, 915, 936, 940, 942, 944, 949, 990, 1005, 1030, 1052, 1053, 1073, 1074, 1075, 1106, 1127, 1129, 1137, 1138, 1139, 1154, 1165, 1169, 1174, 1184, 1194, 1197, 1229, 1254, 1267, 1270, 1279, 1282, 1283, 1285, 1299, 1301, 1305, 1306, 1310, 1315, 1316, 1317, 1319, 1325, 1328, 1333, 1335, 1339, 1341, 1342, 1347, 1350, 1359, 1370, 1409, 1427, 1432, 1433, 1434, 1435, 1436, 1450, 1451, 1452, 1454, 1455, 1456, 1458, 1461, 1462, 1463, 1464, 1466, 1467, 1469, 1478, 1479, 1480, 1481, 1482, 1483, 1489, 1490, 1491, 1492, 1509, 1514, 1516, 1517, 1518, 1529, 1530, 1531, 1542, 1555, 1561, 1566, 1571, 1573, 1575, 1594, 1612, 1621, 1629, 1633, 1634, 1665, 1667, 1674, 1713, 1715, 1716, 1720, 1721, 1727, 1730, 1733, 1734, 1767, 1768, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1805, 1807, 1843, 1846, 1859, 1861, 1874, 1877, 1909, 1924, 1925, 1956, 1957, 1961, 1976, 1986, 1996, 1997, 1998, 1999, 2008, 2013, 2018, 2021, 2029, 2030, 2031, 2037, 2038, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2054, 2056, 2061, 2063, 2064, 2065, 2067, 2068, 2070, 2071, 2072, 2073, 2074, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2089, 2095, 2096, 2098, 2099, 2100, 2104, 2106, 2107, 2108, 2109, 2112], "decreas": [0, 34, 1062, 1315, 1461, 1462, 1463, 1467, 1536, 1755, 1756, 1792, 1799, 1807, 2019, 2023, 2053, 2055, 2077, 2080], "attempt": [0, 1, 8, 14, 27, 29, 43, 45, 46, 58, 85, 967, 973, 976, 991, 1273, 1280, 1359, 1681, 1715, 1716, 1780, 1781, 1793, 1961, 1964, 2010, 2013, 2029, 2030, 2031, 2038, 2042, 2044, 2057, 2058, 2063, 2064, 2072, 2095, 2098, 2099, 2108], "bring": [0, 54, 62, 1127, 1594, 1629, 2065, 2102, 2105], "number": [0, 1, 2, 3, 4, 5, 7, 14, 22, 23, 27, 29, 31, 32, 34, 36, 43, 44, 45, 49, 50, 54, 56, 59, 62, 64, 69, 85, 88, 154, 173, 218, 232, 254, 313, 352, 377, 398, 402, 435, 446, 471, 473, 474, 481, 493, 497, 499, 513, 515, 517, 543, 545, 546, 558, 583, 584, 585, 587, 588, 589, 608, 617, 685, 686, 687, 688, 689, 690, 691, 698, 758, 760, 768, 769, 772, 773, 774, 781, 819, 866, 878, 891, 895, 906, 920, 936, 938, 941, 943, 944, 949, 953, 955, 959, 967, 968, 972, 990, 994, 995, 1000, 1011, 1013, 1019, 1028, 1037, 1038, 1049, 1051, 1052, 1053, 1062, 1073, 1074, 1077, 1078, 1098, 1101, 1103, 1106, 1107, 1111, 1119, 1149, 1151, 1154, 1158, 1160, 1162, 1179, 1210, 1212, 1220, 1221, 1222, 1226, 1230, 1231, 1232, 1244, 1245, 1266, 1267, 1269, 1283, 1290, 1293, 1294, 1301, 1315, 1324, 1333, 1337, 1342, 1347, 1358, 1362, 1370, 1379, 1383, 1384, 1388, 1390, 1401, 1408, 1409, 1413, 1417, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1464, 1465, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1488, 1489, 1493, 1494, 1499, 1500, 1501, 1502, 1503, 1504, 1509, 1510, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1537, 1539, 1541, 1542, 1543, 1544, 1551, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1596, 1597, 1598, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1620, 1621, 1624, 1625, 1630, 1640, 1641, 1643, 1646, 1654, 1655, 1656, 1665, 1667, 1673, 1674, 1681, 1703, 1713, 1728, 1733, 1738, 1739, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1754, 1755, 1756, 1758, 1762, 1767, 1768, 1769, 1771, 1772, 1775, 1783, 1796, 1797, 1798, 1799, 1802, 1803, 1805, 1806, 1807, 1813, 1816, 1820, 1830, 1832, 1833, 1834, 1836, 1837, 1838, 1843, 1845, 1846, 1849, 1850, 1851, 1852, 1860, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1897, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1916, 1917, 1918, 1919, 1920, 1921, 1925, 1940, 1941, 1942, 1950, 1952, 1957, 1958, 1963, 1964, 1967, 1968, 1969, 1970, 1971, 1972, 1979, 1984, 1990, 1991, 1996, 1997, 1998, 1999, 2001, 2002, 2006, 2009, 2011, 2012, 2013, 2014, 2015, 2017, 2020, 2026, 2029, 2032, 2037, 2040, 2042, 2044, 2048, 2051, 2053, 2054, 2056, 2061, 2063, 2064, 2065, 2066, 2068, 2071, 2072, 2073, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2085, 2093, 2095, 2098, 2099, 2105, 2108, 2110, 2111, 2112], "expect": [0, 1, 3, 5, 7, 9, 12, 22, 23, 27, 29, 31, 36, 43, 45, 48, 50, 51, 53, 58, 59, 62, 80, 415, 486, 680, 697, 760, 855, 909, 910, 911, 912, 913, 914, 1051, 1127, 1129, 1146, 1147, 1148, 1168, 1169, 1184, 1194, 1244, 1266, 1269, 1285, 1286, 1314, 1335, 1336, 1370, 1438, 1439, 1458, 1474, 1475, 1476, 1477, 1486, 1487, 1488, 1493, 1494, 1495, 1505, 1506, 1507, 1523, 1529, 1530, 1538, 1539, 1541, 1557, 1563, 1567, 1569, 1571, 1576, 1620, 1626, 1640, 1665, 1673, 1674, 1687, 1700, 1701, 1702, 1703, 1712, 1713, 1755, 1808, 1934, 1971, 2008, 2009, 2015, 2017, 2021, 2039, 2043, 2046, 2047, 2048, 2051, 2061, 2063, 2064, 2067, 2068, 2069, 2072, 2077, 2082, 2084, 2094, 2096, 2098, 2099, 2102, 2104, 2106], "alwai": [0, 5, 7, 14, 17, 22, 23, 27, 34, 43, 48, 50, 51, 53, 57, 62, 340, 415, 448, 458, 794, 881, 901, 903, 906, 909, 915, 942, 951, 961, 967, 973, 998, 1000, 1051, 1062, 1093, 1101, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1137, 1138, 1139, 1140, 1142, 1145, 1149, 1179, 1197, 1227, 1228, 1269, 1280, 1285, 1300, 1305, 1306, 1307, 1308, 1310, 1311, 1323, 1326, 1327, 1328, 1329, 1333, 1335, 1415, 1435, 1437, 1438, 1439, 1459, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1523, 1560, 1563, 1681, 1703, 1713, 1754, 1807, 1847, 1848, 1873, 1920, 1924, 1957, 1961, 2013, 2014, 2021, 2025, 2029, 2032, 2039, 2040, 2041, 2042, 2043, 2044, 2047, 2048, 2050, 2051, 2064, 2065, 2071, 2072, 2074, 2077, 2080, 2083, 2084, 2093, 2095, 2098, 2106, 2114], "abov": [0, 1, 3, 12, 15, 27, 29, 32, 33, 34, 38, 45, 48, 50, 51, 53, 54, 59, 62, 64, 66, 617, 680, 792, 793, 881, 942, 951, 1062, 1089, 1093, 1094, 1095, 1096, 1097, 1106, 1213, 1227, 1228, 1269, 1270, 1290, 1301, 1305, 1306, 1324, 1326, 1327, 1330, 1333, 1336, 1339, 1342, 1432, 1433, 1434, 1435, 1436, 1469, 1523, 1552, 1560, 1575, 1681, 1703, 1769, 1799, 1823, 1834, 1835, 1867, 1871, 1884, 1904, 1946, 1949, 1950, 1951, 1952, 2008, 2010, 2012, 2013, 2017, 2020, 2039, 2040, 2041, 2042, 2044, 2045, 2048, 2051, 2053, 2055, 2056, 2059, 2061, 2064, 2067, 2072, 2073, 2074, 2077, 2078, 2084, 2089, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2108], "our": [0, 3, 7, 8, 11, 32, 41, 44, 45, 46, 49, 57, 58, 59, 62, 63, 901, 902, 906, 1126, 1164, 1178, 1184, 1435, 1720, 1721, 1780, 1781, 1867, 2017, 2039, 2044, 2047, 2048, 2053, 2058, 2061, 2063, 2067, 2073, 2077, 2089, 2093, 2095, 2096, 2098, 2099, 2101, 2102, 2107, 2108], "NOT": [0, 22, 27, 36, 45, 46, 48, 50, 62, 947, 1006, 1040, 1269, 1352, 1462, 1713, 1714, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751, 1766, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 2039, 2059, 2074, 2077, 2079, 2106], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 19, 22, 23, 24, 27, 29, 30, 32, 34, 36, 37, 42, 45, 46, 48, 49, 50, 57, 58, 62, 63, 64, 75, 139, 222, 486, 496, 779, 785, 862, 863, 894, 897, 964, 1008, 1009, 1011, 1094, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1146, 1147, 1148, 1179, 1183, 1184, 1269, 1273, 1279, 1280, 1299, 1300, 1312, 1313, 1314, 1342, 1382, 1435, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1483, 1523, 1533, 1571, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1629, 1631, 1640, 1681, 1700, 1713, 1727, 1744, 1761, 1801, 1864, 1896, 1906, 1907, 1908, 1910, 1911, 1943, 1961, 1964, 1966, 1978, 1979, 2008, 2010, 2012, 2013, 2017, 2021, 2026, 2029, 2030, 2032, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2048, 2051, 2053, 2055, 2057, 2061, 2063, 2064, 2066, 2067, 2068, 2072, 2073, 2074, 2077, 2079, 2080, 2082, 2087, 2089, 2090, 2095, 2097, 2098, 2099, 2101, 2102, 2104, 2107, 2108, 2109], "guarante": [0, 1, 5, 9, 22, 27, 29, 31, 34, 45, 48, 50, 51, 58, 61, 62, 64, 486, 877, 973, 1182, 1184, 1194, 1269, 1279, 1459, 1523, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1896, 1898, 1961, 2039, 2041, 2042, 2054, 2055, 2064, 2066, 2068, 2072, 2074, 2095], "encount": [0, 5, 27, 50, 58, 61, 62, 680, 1713, 1720, 1721, 2010, 2013, 2015, 2019, 2041, 2054, 2064, 2067, 2094, 2096, 2099, 2104, 2106, 2108, 2111], "nan": [0, 1, 26, 34, 427, 428, 499, 684, 686, 689, 690, 691, 694, 697, 698, 882, 886, 941, 957, 1107, 1108, 1109, 1152, 1153, 1154, 1230, 1258, 1259, 1261, 1262, 1309, 1316, 1329, 1332, 1345, 1350, 1368, 1369, 1373, 1413, 1414, 1415, 1416, 1417, 1629, 1718, 1817, 1854, 1859, 1913, 1948, 2011, 2020, 2038, 2039, 2045, 2054, 2078, 2084], "verifi": [0, 27, 50, 62, 87, 920, 1089, 1775, 1776, 1794, 1946, 2008, 2010, 2024, 2044, 2048, 2061, 2065, 2101], "compat": [0, 1, 14, 22, 27, 29, 33, 34, 36, 46, 50, 53, 57, 58, 62, 64, 497, 498, 603, 617, 680, 815, 816, 817, 891, 906, 907, 939, 954, 988, 989, 1182, 1269, 1274, 1287, 1300, 1311, 1324, 1327, 1523, 1529, 1567, 1568, 1569, 1570, 1571, 1640, 1720, 1721, 1765, 1774, 1846, 2008, 2009, 2012, 2013, 2019, 2029, 2030, 2038, 2044, 2056, 2059, 2064, 2066, 2067, 2070, 2072, 2077, 2079, 2083, 2086, 2090], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 14, 18, 19, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 45, 46, 48, 50, 51, 53, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 154, 156, 173, 184, 191, 208, 224, 225, 226, 227, 228, 233, 254, 258, 260, 263, 286, 289, 298, 300, 311, 313, 315, 317, 321, 352, 401, 402, 427, 428, 445, 448, 449, 454, 481, 483, 487, 488, 496, 507, 508, 513, 515, 517, 520, 538, 543, 544, 547, 556, 558, 560, 578, 580, 581, 583, 584, 585, 587, 588, 589, 595, 596, 597, 598, 605, 607, 608, 617, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 712, 713, 714, 715, 716, 717, 718, 719, 723, 724, 725, 726, 727, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 751, 752, 753, 755, 756, 757, 758, 760, 768, 769, 770, 772, 773, 774, 775, 778, 780, 782, 783, 785, 794, 796, 799, 802, 817, 820, 821, 822, 825, 855, 857, 866, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 895, 901, 903, 906, 907, 909, 910, 911, 913, 920, 921, 923, 925, 926, 933, 936, 938, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 960, 961, 962, 963, 964, 965, 967, 968, 971, 985, 986, 987, 990, 991, 992, 993, 994, 995, 1005, 1011, 1020, 1022, 1048, 1049, 1076, 1080, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1104, 1106, 1108, 1109, 1116, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1163, 1165, 1166, 1167, 1168, 1169, 1173, 1174, 1175, 1184, 1188, 1194, 1210, 1211, 1218, 1223, 1227, 1229, 1230, 1231, 1232, 1233, 1236, 1240, 1244, 1246, 1254, 1265, 1266, 1267, 1269, 1273, 1275, 1276, 1277, 1281, 1289, 1290, 1291, 1292, 1293, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1316, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1331, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1359, 1363, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1389, 1392, 1408, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1423, 1425, 1426, 1427, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1511, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1555, 1557, 1558, 1559, 1560, 1561, 1563, 1566, 1567, 1569, 1571, 1572, 1573, 1575, 1576, 1579, 1580, 1581, 1584, 1585, 1586, 1594, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1629, 1632, 1633, 1634, 1637, 1638, 1639, 1640, 1644, 1645, 1647, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1674, 1676, 1681, 1682, 1685, 1687, 1690, 1696, 1697, 1698, 1699, 1700, 1703, 1712, 1713, 1717, 1718, 1720, 1721, 1727, 1728, 1729, 1733, 1738, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1754, 1755, 1757, 1758, 1760, 1761, 1762, 1763, 1765, 1767, 1768, 1769, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1814, 1816, 1817, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1842, 1843, 1844, 1845, 1846, 1849, 1850, 1851, 1852, 1854, 1855, 1859, 1861, 1862, 1863, 1866, 1868, 1871, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1926, 1927, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1957, 1958, 1959, 1960, 1963, 1967, 1968, 1969, 1971, 1972, 1973, 1974, 1976, 1979, 2006, 2007, 2008, 2010, 2011, 2012, 2013, 2017, 2020, 2030, 2031, 2032, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2069, 2072, 2073, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2089, 2090, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2106, 2107, 2109, 2112], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 12, 14, 18, 20, 22, 23, 27, 34, 43, 50, 57, 58, 59, 61, 62, 64, 65, 69, 70, 72, 73, 74, 75, 154, 191, 208, 233, 260, 289, 298, 313, 315, 317, 321, 401, 402, 445, 471, 499, 513, 515, 517, 523, 537, 544, 558, 560, 584, 585, 586, 587, 588, 607, 685, 686, 690, 697, 734, 739, 740, 741, 742, 743, 745, 746, 760, 762, 773, 774, 862, 863, 866, 881, 887, 888, 889, 909, 912, 914, 941, 944, 951, 952, 953, 957, 959, 963, 965, 966, 967, 968, 971, 978, 990, 994, 1085, 1087, 1089, 1096, 1098, 1100, 1101, 1104, 1105, 1106, 1109, 1122, 1124, 1126, 1127, 1133, 1134, 1137, 1142, 1145, 1146, 1149, 1152, 1154, 1155, 1156, 1158, 1165, 1167, 1168, 1169, 1170, 1173, 1174, 1175, 1211, 1223, 1229, 1231, 1233, 1235, 1236, 1246, 1254, 1258, 1276, 1280, 1281, 1290, 1291, 1292, 1295, 1298, 1299, 1316, 1319, 1322, 1325, 1326, 1327, 1328, 1333, 1334, 1337, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1352, 1356, 1363, 1364, 1370, 1371, 1409, 1416, 1418, 1419, 1421, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1436, 1437, 1438, 1439, 1443, 1444, 1445, 1447, 1448, 1449, 1451, 1452, 1454, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1476, 1477, 1478, 1483, 1485, 1486, 1487, 1488, 1489, 1493, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1511, 1514, 1519, 1520, 1523, 1530, 1533, 1537, 1538, 1539, 1545, 1546, 1547, 1548, 1549, 1552, 1555, 1561, 1563, 1567, 1569, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1595, 1596, 1604, 1605, 1607, 1608, 1612, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1624, 1625, 1627, 1629, 1632, 1640, 1665, 1667, 1673, 1681, 1690, 1700, 1701, 1702, 1712, 1713, 1733, 1743, 1746, 1748, 1749, 1751, 1756, 1757, 1759, 1761, 1767, 1768, 1769, 1771, 1772, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1796, 1802, 1806, 1812, 1814, 1816, 1817, 1819, 1820, 1823, 1824, 1827, 1828, 1829, 1830, 1834, 1839, 1840, 1843, 1844, 1850, 1851, 1852, 1859, 1871, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1887, 1896, 1902, 1904, 1905, 1906, 1907, 1909, 1912, 1920, 1923, 1924, 1925, 1926, 1927, 1935, 1937, 1939, 1940, 1941, 1943, 1944, 1946, 1955, 1956, 1959, 1961, 1967, 1973, 1974, 1975, 2006, 2010, 2011, 2012, 2013, 2014, 2020, 2021, 2031, 2032, 2037, 2038, 2039, 2040, 2042, 2044, 2046, 2048, 2051, 2052, 2056, 2057, 2059, 2061, 2063, 2065, 2067, 2072, 2077, 2078, 2080, 2082, 2083, 2084, 2096, 2097, 2099, 2106, 2107, 2108], "growth_interv": 0, "2000": [0, 27, 31, 1124, 1126, 1133, 1142, 1155, 1347, 1576, 1799, 1827, 1876, 1877, 1939], "float64": [0, 11, 240, 446, 449, 580, 881, 984, 1149, 1158, 1159, 1216, 1251, 1269, 1299, 1305, 1306, 1308, 1310, 1326, 1523, 1681, 1779, 1780, 1781, 1793, 1817, 1825, 1864, 1865, 1868, 1898, 1906, 1907, 1908, 1909, 1910, 1911, 1939, 1971, 1976, 2051, 2054, 2077, 2079, 2080, 2083, 2084, 2112], "out": [0, 1, 2, 3, 7, 8, 9, 11, 15, 18, 22, 24, 27, 29, 34, 42, 43, 46, 50, 54, 57, 62, 64, 68, 70, 233, 312, 314, 316, 318, 399, 401, 448, 496, 512, 514, 516, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 756, 760, 764, 772, 773, 774, 779, 781, 785, 797, 836, 838, 839, 858, 859, 866, 867, 868, 869, 870, 871, 872, 873, 878, 882, 883, 884, 885, 886, 896, 899, 900, 901, 904, 906, 916, 920, 929, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 953, 957, 960, 962, 963, 964, 965, 966, 968, 969, 971, 973, 984, 985, 986, 989, 990, 992, 993, 1005, 1010, 1018, 1020, 1022, 1049, 1050, 1062, 1063, 1076, 1080, 1085, 1086, 1087, 1088, 1090, 1093, 1098, 1099, 1101, 1102, 1103, 1105, 1106, 1107, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1160, 1161, 1164, 1165, 1167, 1168, 1170, 1175, 1193, 1206, 1210, 1211, 1212, 1213, 1214, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1246, 1247, 1263, 1264, 1269, 1275, 1281, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1389, 1392, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1428, 1429, 1430, 1432, 1433, 1434, 1440, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1460, 1461, 1462, 1463, 1465, 1467, 1470, 1471, 1474, 1475, 1490, 1491, 1492, 1493, 1508, 1510, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1535, 1536, 1539, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1567, 1568, 1569, 1570, 1571, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1600, 1604, 1605, 1606, 1607, 1608, 1609, 1615, 1616, 1617, 1622, 1625, 1629, 1640, 1646, 1666, 1668, 1700, 1713, 1720, 1721, 1738, 1739, 1740, 1741, 1767, 1768, 1769, 1770, 1772, 1773, 1794, 1811, 1812, 1816, 1817, 1818, 1820, 1823, 1824, 1830, 1831, 1832, 1834, 1836, 1838, 1839, 1842, 1843, 1844, 1848, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1874, 1875, 1876, 1888, 1889, 1890, 1891, 1896, 1901, 1902, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1924, 1936, 1937, 1938, 1941, 1943, 1945, 1948, 1949, 1951, 1953, 1954, 1961, 1968, 1969, 1970, 1973, 1975, 1976, 1977, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2017, 2020, 2021, 2026, 2028, 2029, 2031, 2032, 2039, 2040, 2042, 2043, 2044, 2045, 2047, 2051, 2053, 2059, 2061, 2063, 2064, 2067, 2068, 2070, 2072, 2073, 2074, 2077, 2078, 2080, 2082, 2083, 2088, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2106, 2107, 2108, 2109, 2110], "place": [0, 3, 7, 11, 12, 22, 23, 27, 29, 35, 36, 50, 53, 56, 57, 60, 62, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 121, 123, 125, 127, 130, 131, 133, 141, 143, 146, 147, 149, 152, 158, 160, 162, 164, 166, 168, 177, 186, 194, 198, 201, 203, 213, 215, 221, 222, 231, 236, 238, 244, 247, 249, 251, 253, 254, 257, 260, 262, 269, 271, 273, 277, 279, 283, 285, 292, 294, 296, 304, 306, 308, 310, 312, 314, 316, 318, 356, 358, 360, 362, 364, 366, 368, 371, 373, 375, 376, 383, 385, 387, 389, 391, 395, 399, 401, 420, 423, 426, 428, 439, 441, 443, 451, 456, 466, 469, 485, 486, 487, 488, 490, 492, 496, 499, 508, 511, 512, 514, 516, 522, 527, 529, 532, 534, 536, 549, 551, 553, 562, 564, 571, 575, 577, 593, 596, 598, 600, 602, 603, 612, 622, 758, 793, 797, 814, 838, 839, 858, 859, 901, 902, 904, 906, 925, 926, 927, 929, 955, 987, 1018, 1019, 1021, 1022, 1042, 1106, 1157, 1163, 1164, 1172, 1269, 1314, 1332, 1409, 1431, 1441, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1479, 1480, 1481, 1509, 1523, 1541, 1542, 1543, 1544, 1551, 1566, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1633, 1636, 1645, 1677, 1680, 1695, 1699, 1703, 1713, 1718, 1719, 1720, 1721, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1763, 1794, 1850, 1852, 1856, 1857, 1858, 1904, 1941, 2009, 2010, 2012, 2013, 2020, 2031, 2038, 2042, 2044, 2050, 2058, 2059, 2063, 2064, 2065, 2072, 2073, 2079, 2081, 2083, 2095, 2096, 2098, 2099, 2105, 2107], "variant": [0, 5, 23, 50, 859, 1300, 1311, 1324, 1327, 1416, 1419, 1583, 1584, 1585, 1586, 1780, 1781, 1782, 1794, 1898, 1948, 2009, 2050, 2070, 2083, 2103, 2104, 2107], "explicitli": [0, 5, 8, 14, 27, 38, 53, 86, 927, 1042, 1094, 1096, 1106, 1232, 1310, 1323, 1327, 1335, 1377, 1640, 1700, 1805, 1867, 1920, 2010, 2012, 2013, 2014, 2019, 2021, 2042, 2044, 2047, 2048, 2050, 2056, 2061, 2064, 2065, 2071, 2072, 2077, 2099], "suppli": [0, 5, 7, 14, 15, 27, 1040, 1529, 1776, 2013, 2042, 2061, 2077, 2099, 2108], "won": [0, 8, 23, 29, 45, 50, 56, 458, 1184, 1269, 1281, 1523, 1666, 1706, 1707, 2008, 2039, 2044, 2072, 2086, 2098, 2099, 2106, 2108], "go": [0, 1, 7, 15, 22, 27, 29, 32, 42, 48, 50, 57, 62, 499, 500, 560, 901, 903, 906, 925, 929, 1190, 1342, 1432, 1433, 1434, 1516, 1517, 1518, 1720, 1721, 2012, 2013, 2020, 2029, 2030, 2031, 2039, 2041, 2042, 2044, 2045, 2050, 2051, 2053, 2057, 2061, 2064, 2080, 2082, 2094, 2095, 2096, 2097, 2098, 2099], "addmm": [0, 50, 51, 106, 1916, 2011, 2030, 2054, 2062, 2077, 2103, 2107], "b": [0, 1, 3, 11, 12, 22, 27, 29, 34, 43, 50, 62, 64, 67, 85, 87, 260, 335, 398, 617, 685, 686, 748, 757, 781, 824, 881, 901, 902, 904, 905, 906, 907, 923, 925, 926, 941, 952, 953, 955, 959, 961, 963, 966, 971, 987, 990, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1048, 1049, 1098, 1101, 1105, 1106, 1151, 1152, 1153, 1154, 1160, 1164, 1177, 1178, 1195, 1211, 1235, 1246, 1266, 1272, 1280, 1281, 1289, 1290, 1292, 1301, 1302, 1310, 1314, 1315, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1330, 1331, 1332, 1335, 1336, 1339, 1342, 1351, 1353, 1354, 1360, 1368, 1373, 1375, 1408, 1436, 1440, 1465, 1466, 1473, 1510, 1600, 1602, 1621, 1628, 1646, 1727, 1755, 1756, 1757, 1758, 1759, 1760, 1768, 1791, 1793, 1824, 1830, 1843, 1846, 1862, 1873, 1892, 1901, 1906, 1907, 1908, 1910, 1911, 1915, 1920, 1921, 1923, 1930, 1931, 1932, 1941, 1948, 1949, 1951, 1970, 1975, 2010, 2011, 2012, 2013, 2017, 2030, 2031, 2032, 2037, 2038, 2040, 2042, 2044, 2046, 2048, 2049, 2054, 2056, 2059, 2066, 2067, 2073, 2074, 2077, 2078, 2081, 2082, 2088, 2094, 2096, 2097, 2099, 2101, 2103, 2107, 2108, 2110], "c": [0, 1, 3, 8, 9, 14, 22, 24, 27, 34, 43, 50, 51, 56, 62, 85, 87, 260, 335, 499, 520, 617, 685, 821, 878, 881, 901, 904, 906, 907, 952, 963, 991, 1042, 1048, 1083, 1098, 1101, 1106, 1152, 1153, 1154, 1164, 1165, 1169, 1174, 1211, 1223, 1269, 1280, 1292, 1299, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1315, 1316, 1319, 1321, 1325, 1326, 1328, 1330, 1332, 1333, 1408, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1458, 1461, 1462, 1463, 1467, 1469, 1470, 1471, 1477, 1485, 1486, 1487, 1490, 1491, 1492, 1494, 1495, 1505, 1506, 1507, 1511, 1516, 1517, 1518, 1519, 1520, 1521, 1526, 1527, 1528, 1530, 1535, 1536, 1545, 1546, 1547, 1548, 1549, 1550, 1558, 1563, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1594, 1602, 1612, 1613, 1625, 1629, 1665, 1671, 1672, 1681, 1727, 1756, 1758, 1759, 1760, 1767, 1768, 1811, 1827, 1843, 1880, 1901, 1915, 1920, 1941, 1958, 1963, 1964, 2009, 2010, 2011, 2012, 2013, 2021, 2030, 2031, 2032, 2041, 2042, 2043, 2045, 2048, 2050, 2057, 2064, 2073, 2074, 2077, 2078, 2081, 2082, 2089, 2095, 2096, 2097, 2098, 2099, 2101, 2103, 2107, 2108, 2109, 2110, 2111], "addmm_": [0, 2011, 2030, 2077], "d": [0, 1, 11, 22, 23, 27, 33, 34, 54, 62, 313, 321, 335, 471, 513, 515, 517, 544, 583, 617, 686, 690, 866, 881, 901, 904, 906, 907, 940, 941, 942, 944, 951, 952, 953, 957, 960, 963, 1093, 1095, 1105, 1106, 1119, 1123, 1124, 1125, 1126, 1131, 1132, 1135, 1136, 1141, 1142, 1143, 1146, 1147, 1148, 1175, 1178, 1210, 1227, 1228, 1235, 1244, 1266, 1270, 1274, 1312, 1313, 1363, 1374, 1411, 1426, 1434, 1435, 1439, 1452, 1456, 1457, 1461, 1462, 1463, 1465, 1467, 1469, 1474, 1476, 1487, 1493, 1495, 1507, 1518, 1532, 1538, 1539, 1563, 1572, 1573, 1575, 1594, 1629, 1640, 1646, 1674, 1699, 1700, 1712, 1728, 1762, 1767, 1768, 1792, 1812, 1830, 1836, 1839, 1851, 1859, 1864, 1915, 1920, 1934, 1935, 1941, 1944, 1949, 1950, 1951, 1952, 1967, 1973, 1975, 2008, 2011, 2017, 2020, 2030, 2031, 2032, 2037, 2039, 2042, 2044, 2045, 2047, 2048, 2049, 2056, 2061, 2072, 2073, 2077, 2078, 2082, 2083, 2098, 2099, 2101, 2106, 2108, 2110], "best": [0, 1, 7, 15, 18, 22, 27, 34, 46, 53, 56, 862, 863, 933, 960, 973, 1184, 1285, 1286, 1315, 1529, 1794, 1807, 2009, 2010, 2012, 2017, 2029, 2037, 2038, 2039, 2044, 2046, 2064, 2072, 2077, 2079, 2089, 2096, 2097, 2099, 2102], "stabil": [0, 1301, 1306, 1357, 1436, 1437, 1438, 1439, 1476, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1538, 1560, 1563, 1572, 1626, 1689, 1712, 1728, 1762, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1827, 2045, 2099, 2108], "argument": [0, 1, 3, 4, 5, 8, 9, 12, 14, 18, 22, 27, 28, 29, 31, 32, 33, 34, 36, 43, 46, 49, 50, 51, 53, 57, 58, 61, 62, 64, 70, 72, 73, 84, 88, 150, 196, 209, 313, 321, 415, 445, 446, 447, 448, 449, 487, 488, 513, 517, 560, 580, 581, 583, 584, 585, 587, 588, 603, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 734, 738, 739, 740, 741, 742, 743, 793, 794, 799, 819, 820, 821, 824, 825, 826, 842, 858, 859, 862, 864, 866, 881, 882, 883, 884, 885, 886, 890, 891, 892, 893, 894, 901, 902, 903, 904, 906, 907, 910, 912, 913, 914, 915, 917, 918, 925, 926, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 953, 957, 960, 962, 963, 964, 965, 966, 968, 970, 971, 977, 984, 987, 989, 990, 992, 993, 995, 1005, 1027, 1029, 1033, 1034, 1040, 1048, 1049, 1051, 1066, 1075, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1103, 1104, 1105, 1107, 1108, 1109, 1111, 1116, 1119, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1182, 1184, 1204, 1205, 1210, 1211, 1212, 1213, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1244, 1246, 1263, 1264, 1266, 1269, 1272, 1281, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1360, 1361, 1363, 1364, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1392, 1400, 1405, 1408, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1437, 1438, 1439, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1466, 1469, 1472, 1474, 1481, 1484, 1485, 1486, 1487, 1488, 1493, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1519, 1520, 1521, 1523, 1524, 1529, 1530, 1531, 1539, 1563, 1567, 1571, 1575, 1577, 1578, 1586, 1627, 1629, 1666, 1681, 1703, 1706, 1707, 1713, 1733, 1735, 1739, 1740, 1744, 1748, 1754, 1763, 1767, 1769, 1772, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1799, 1811, 1812, 1816, 1817, 1820, 1821, 1823, 1824, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1844, 1845, 1852, 1854, 1859, 1863, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1896, 1899, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1954, 1957, 1961, 1968, 1969, 1973, 1974, 1975, 1976, 1983, 1985, 1987, 1988, 2000, 2003, 2006, 2007, 2008, 2011, 2012, 2013, 2015, 2017, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2055, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2093, 2096, 2097, 2098, 2102, 2107, 2109, 2112], "respect": [0, 1, 5, 8, 27, 28, 31, 32, 34, 36, 43, 45, 53, 59, 61, 62, 196, 209, 487, 580, 603, 689, 690, 691, 760, 795, 819, 842, 886, 892, 894, 906, 907, 915, 921, 925, 926, 968, 995, 1094, 1096, 1097, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1174, 1223, 1269, 1301, 1305, 1306, 1315, 1325, 1328, 1330, 1333, 1342, 1374, 1413, 1435, 1436, 1442, 1453, 1454, 1455, 1459, 1474, 1476, 1493, 1523, 1524, 1539, 1569, 1571, 1572, 1573, 1574, 1576, 1620, 1629, 1735, 1739, 1741, 1763, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1791, 1792, 1793, 1794, 1807, 1897, 1901, 1924, 1941, 2031, 2038, 2039, 2042, 2044, 2048, 2051, 2052, 2065, 2070, 2077, 2078, 2079, 2084, 2098, 2102], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 14, 15, 18, 20, 21, 22, 23, 26, 27, 29, 31, 32, 33, 34, 36, 42, 43, 44, 45, 46, 50, 51, 53, 55, 57, 58, 60, 62, 64, 66, 72, 73, 74, 75, 82, 83, 84, 487, 488, 617, 680, 760, 779, 785, 792, 793, 794, 800, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 855, 862, 863, 890, 891, 892, 899, 906, 907, 925, 926, 940, 957, 962, 966, 978, 987, 1048, 1062, 1106, 1124, 1126, 1150, 1160, 1173, 1184, 1194, 1223, 1269, 1270, 1279, 1283, 1290, 1301, 1312, 1322, 1325, 1326, 1339, 1342, 1361, 1364, 1427, 1436, 1442, 1458, 1466, 1469, 1474, 1493, 1523, 1539, 1555, 1571, 1575, 1582, 1634, 1648, 1681, 1705, 1706, 1707, 1710, 1711, 1713, 1720, 1721, 1727, 1768, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1802, 1805, 1813, 1824, 1852, 1859, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1899, 1900, 1901, 1902, 1909, 1920, 1946, 1954, 1961, 1964, 2008, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2019, 2020, 2023, 2024, 2029, 2030, 2031, 2032, 2033, 2037, 2038, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2049, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2070, 2072, 2073, 2074, 2077, 2078, 2080, 2081, 2083, 2084, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2106, 2108, 2109, 2110, 2112], "describ": [0, 5, 7, 8, 9, 22, 23, 27, 29, 31, 32, 33, 36, 37, 43, 45, 50, 51, 62, 233, 513, 792, 793, 794, 815, 816, 817, 842, 860, 958, 1031, 1048, 1065, 1106, 1223, 1290, 1330, 1427, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1460, 1461, 1462, 1463, 1464, 1467, 1469, 1470, 1471, 1477, 1480, 1483, 1485, 1486, 1487, 1489, 1495, 1514, 1516, 1517, 1518, 1529, 1530, 1537, 1538, 1542, 1555, 1563, 1571, 1572, 1573, 1575, 1612, 1624, 1625, 1634, 1668, 1712, 1805, 1946, 2009, 2010, 2012, 2013, 2021, 2037, 2038, 2039, 2042, 2043, 2044, 2046, 2048, 2050, 2051, 2056, 2061, 2064, 2066, 2067, 2070, 2073, 2074, 2076, 2084, 2096, 2099, 2100, 2104], "part": [0, 1, 3, 4, 5, 6, 7, 9, 14, 15, 18, 22, 23, 27, 29, 32, 34, 45, 46, 50, 51, 53, 57, 58, 62, 82, 83, 842, 915, 980, 984, 1106, 1259, 1261, 1262, 1265, 1269, 1280, 1282, 1285, 1286, 1300, 1306, 1308, 1317, 1324, 1327, 1523, 1563, 1681, 1713, 1731, 1797, 1824, 1836, 1905, 1946, 1949, 1950, 1951, 1952, 2008, 2009, 2010, 2012, 2013, 2023, 2024, 2038, 2039, 2042, 2044, 2046, 2047, 2048, 2051, 2056, 2061, 2064, 2065, 2067, 2072, 2073, 2074, 2077, 2082, 2084, 2094, 2096, 2098, 2099, 2100, 2106, 2107, 2108], "expos": [0, 1, 8, 27, 31, 53, 61, 62, 795, 1160, 2039, 2042, 2050, 2064, 2067, 2096, 2109], "namespac": [0, 62, 1080, 2010, 2014, 2017, 2044, 2051, 2059, 2061, 2065, 2070, 2089, 2097, 2109], "below": [0, 1, 5, 9, 12, 14, 22, 23, 27, 29, 33, 34, 36, 37, 42, 45, 46, 48, 49, 51, 62, 64, 72, 73, 680, 734, 748, 757, 795, 814, 1048, 1093, 1094, 1095, 1096, 1097, 1106, 1134, 1136, 1140, 1178, 1188, 1213, 1223, 1269, 1286, 1326, 1327, 1332, 1339, 1371, 1453, 1454, 1455, 1474, 1476, 1483, 1493, 1495, 1519, 1520, 1521, 1523, 1539, 1555, 1576, 1612, 1638, 1685, 1713, 1733, 1767, 1794, 1864, 1867, 1904, 1936, 1946, 1949, 1950, 1951, 1952, 2010, 2012, 2013, 2015, 2019, 2020, 2029, 2030, 2038, 2039, 2042, 2043, 2044, 2048, 2049, 2051, 2053, 2055, 2056, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2069, 2072, 2073, 2074, 2078, 2081, 2084, 2094, 2095, 2097, 2099, 2100, 2101, 2102, 2104, 2106, 2108], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 22, 23, 27, 29, 31, 35, 36, 38, 45, 46, 48, 50, 53, 54, 55, 58, 59, 61, 62, 84, 495, 513, 515, 517, 758, 823, 826, 864, 893, 896, 901, 904, 906, 907, 916, 920, 927, 929, 959, 972, 973, 1002, 1006, 1040, 1051, 1085, 1086, 1087, 1088, 1157, 1158, 1160, 1169, 1182, 1184, 1194, 1210, 1232, 1256, 1266, 1269, 1272, 1281, 1285, 1315, 1333, 1342, 1349, 1359, 1361, 1370, 1409, 1419, 1431, 1441, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1479, 1480, 1481, 1509, 1542, 1543, 1544, 1551, 1566, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1631, 1633, 1648, 1703, 1713, 1720, 1721, 1769, 1774, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1811, 1817, 1867, 1961, 2008, 2009, 2010, 2011, 2013, 2015, 2017, 2021, 2022, 2029, 2030, 2031, 2038, 2039, 2040, 2042, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2059, 2061, 2063, 2066, 2067, 2068, 2072, 2074, 2077, 2078, 2079, 2080, 2081, 2082, 2084, 2093, 2095, 2096, 2098, 2101, 2104, 2105, 2107, 2108, 2110], "defin": [0, 1, 3, 5, 9, 11, 14, 15, 22, 23, 27, 28, 29, 32, 33, 34, 36, 37, 43, 45, 46, 50, 51, 53, 58, 62, 415, 435, 445, 447, 449, 517, 566, 792, 797, 798, 799, 801, 802, 838, 860, 861, 862, 863, 890, 891, 892, 893, 906, 907, 1062, 1089, 1106, 1107, 1126, 1154, 1161, 1184, 1211, 1213, 1229, 1231, 1232, 1258, 1269, 1275, 1292, 1299, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1315, 1316, 1319, 1321, 1322, 1326, 1327, 1328, 1330, 1332, 1333, 1339, 1375, 1459, 1464, 1470, 1471, 1478, 1479, 1480, 1481, 1488, 1490, 1491, 1492, 1523, 1529, 1542, 1557, 1559, 1564, 1566, 1583, 1584, 1594, 1629, 1681, 1687, 1703, 1706, 1713, 1739, 1741, 1748, 1749, 1769, 1772, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1799, 1802, 1805, 1823, 1832, 1834, 1836, 1843, 1871, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1901, 1903, 1946, 1949, 1950, 1951, 1952, 1976, 2006, 2008, 2010, 2013, 2015, 2017, 2028, 2029, 2030, 2032, 2035, 2039, 2042, 2043, 2047, 2048, 2049, 2051, 2053, 2057, 2061, 2063, 2064, 2065, 2066, 2067, 2070, 2072, 2077, 2078, 2083, 2084, 2086, 2093, 2094, 2096, 2098, 2100, 2105, 2109], "still": [0, 1, 2, 7, 8, 22, 26, 27, 34, 36, 45, 50, 53, 61, 62, 486, 794, 799, 901, 903, 906, 911, 1183, 1184, 1273, 1279, 1287, 1489, 1514, 1713, 1714, 1715, 1716, 1855, 2010, 2013, 2029, 2030, 2031, 2032, 2038, 2039, 2042, 2043, 2044, 2046, 2047, 2049, 2056, 2057, 2061, 2063, 2064, 2065, 2067, 2072, 2073, 2074, 2077, 2090, 2096, 2098, 2103, 2104, 2108, 2110], "chang": [0, 1, 2, 3, 7, 11, 12, 18, 23, 27, 29, 31, 32, 33, 34, 36, 44, 50, 51, 53, 54, 57, 58, 60, 61, 62, 63, 139, 233, 254, 321, 458, 496, 499, 517, 520, 556, 617, 680, 819, 878, 920, 921, 973, 987, 988, 989, 1005, 1006, 1016, 1027, 1029, 1040, 1041, 1048, 1049, 1051, 1094, 1142, 1158, 1163, 1179, 1193, 1197, 1216, 1223, 1244, 1266, 1269, 1280, 1281, 1300, 1311, 1313, 1314, 1315, 1318, 1331, 1371, 1400, 1462, 1465, 1483, 1493, 1523, 1555, 1576, 1582, 1583, 1584, 1587, 1594, 1629, 1654, 1655, 1656, 1681, 1703, 1704, 1713, 1715, 1716, 1720, 1721, 1730, 1733, 1734, 1763, 1767, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1799, 1802, 1803, 1805, 1807, 1809, 1823, 1863, 1867, 1904, 1915, 1918, 1919, 1920, 1945, 1964, 1968, 1969, 1983, 1985, 2008, 2009, 2010, 2017, 2019, 2020, 2021, 2023, 2026, 2029, 2030, 2031, 2032, 2038, 2039, 2040, 2041, 2042, 2044, 2045, 2047, 2048, 2049, 2051, 2053, 2054, 2056, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2072, 2074, 2077, 2079, 2080, 2081, 2082, 2083, 2086, 2087, 2088, 2090, 2093, 2095, 2096, 2098, 2100, 2101, 2104, 2105, 2108], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 19, 22, 23, 28, 29, 31, 32, 33, 34, 35, 36, 38, 43, 44, 45, 46, 48, 50, 51, 53, 57, 58, 61, 62, 64, 72, 73, 88, 150, 258, 289, 313, 315, 317, 319, 321, 335, 472, 486, 487, 499, 513, 515, 517, 537, 560, 604, 607, 617, 624, 684, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 760, 764, 781, 790, 791, 797, 799, 819, 823, 826, 838, 855, 858, 859, 860, 862, 877, 881, 886, 893, 894, 896, 906, 907, 909, 910, 911, 912, 913, 914, 915, 925, 926, 933, 944, 957, 960, 963, 967, 973, 975, 987, 993, 994, 995, 1005, 1006, 1011, 1018, 1019, 1020, 1021, 1022, 1033, 1034, 1035, 1062, 1064, 1070, 1071, 1082, 1084, 1089, 1093, 1094, 1095, 1096, 1097, 1106, 1122, 1127, 1130, 1134, 1137, 1140, 1145, 1146, 1147, 1148, 1149, 1154, 1157, 1163, 1164, 1167, 1168, 1169, 1170, 1171, 1175, 1182, 1183, 1184, 1188, 1194, 1198, 1206, 1210, 1213, 1232, 1244, 1254, 1260, 1266, 1267, 1269, 1270, 1272, 1275, 1279, 1280, 1281, 1285, 1302, 1305, 1306, 1315, 1319, 1321, 1322, 1325, 1326, 1330, 1332, 1333, 1335, 1338, 1339, 1341, 1347, 1363, 1370, 1375, 1409, 1415, 1418, 1419, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1437, 1438, 1439, 1442, 1451, 1452, 1454, 1455, 1458, 1459, 1466, 1473, 1474, 1483, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1495, 1509, 1513, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1528, 1529, 1538, 1552, 1555, 1557, 1559, 1563, 1567, 1572, 1573, 1587, 1611, 1628, 1629, 1631, 1641, 1648, 1667, 1668, 1681, 1687, 1688, 1696, 1703, 1712, 1713, 1720, 1721, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1763, 1765, 1768, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1825, 1839, 1843, 1845, 1846, 1850, 1852, 1859, 1863, 1867, 1871, 1872, 1873, 1879, 1891, 1896, 1900, 1901, 1903, 1904, 1912, 1915, 1920, 1925, 1940, 1945, 1946, 1949, 1950, 1951, 1952, 1956, 1957, 1960, 1961, 1973, 1979, 1987, 1988, 1989, 2005, 2008, 2010, 2012, 2013, 2015, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2029, 2031, 2032, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2055, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2087, 2088, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112], "unlist": 0, "downstream": [0, 3, 2026, 2099, 2100, 2108], "stabl": [0, 1, 2, 11, 12, 27, 34, 45, 46, 730, 731, 732, 733, 745, 746, 756, 761, 762, 763, 764, 765, 877, 987, 1106, 1305, 1306, 1310, 1315, 1323, 1327, 1330, 1333, 1335, 1342, 1436, 1896, 2009, 2011, 2017, 2037, 2040, 2055, 2072], "believ": [0, 8, 2099], "unstabl": [0, 34, 1305, 1306, 1333, 1350, 1359, 1648, 1924, 2078], "__matmul__": 0, "addbmm": [0, 100, 941, 2011, 2054, 2062], "addmv": [0, 108, 2011, 2030, 2062], "addr": [0, 27, 110, 2011, 2062, 2110], "baddbmm": [0, 152, 2011, 2054, 2062], "bmm": [0, 1961, 2011, 2030, 2032, 2054, 2055, 2062, 2077, 2103], "chain_matmul": [0, 2011, 2062], "multi_dot": [0, 963], "conv1d": [0, 708, 712, 715, 725, 741, 1453, 1461, 1499, 1961, 2011, 2062, 2067, 2069], "conv2d": [0, 50, 709, 713, 716, 718, 726, 742, 792, 814, 1269, 1279, 1281, 1285, 1286, 1454, 1462, 1500, 1523, 1524, 1530, 1552, 1575, 1720, 1748, 1961, 2010, 2011, 2023, 2059, 2061, 2062, 2067, 2069, 2070, 2082, 2088], "conv3d": [0, 710, 714, 717, 719, 727, 743, 1455, 1463, 1501, 1721, 1961, 2011, 2062, 2067, 2069], "conv_transpose1d": [0, 2011, 2062, 2069], "conv_transpose2d": [0, 2011, 2062, 2069], "conv_transpose3d": [0, 2011, 2062, 2069], "grucel": [0, 2054, 2067, 2069, 2070], "lstmcell": [0, 2054, 2067, 2069, 2070], "matmul": [0, 2, 11, 953, 973, 1174, 1374, 1575, 1813, 1823, 1867, 1924, 2011, 2030, 2032, 2042, 2054, 2062, 2069, 2077, 2093], "mv": [0, 11, 1281, 1961, 2011, 2030, 2062, 2077], "prelu": [0, 1524, 2011, 2062, 2069], "rnncell": [0, 2067, 2069, 2070], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 94, 627, 628, 867, 2011, 2030, 2062, 2084, 2103], "asin": [0, 141, 629, 630, 869, 2011, 2030, 2062, 2077, 2103], "cosh": [0, 203, 637, 638, 684, 2011, 2030, 2062, 2103], "cosine_embedding_loss": [0, 2011, 2062], "cdist": [0, 2042, 2062], "cosine_similar": [0, 1573, 2011, 2062], "cross_entropi": [0, 33, 2011], "cumprod": [0, 213, 2011, 2030, 2062], "cumsum": [0, 215, 1089, 1961, 2011, 2030, 2062, 2103], "dist": [0, 23, 27, 28, 31, 32, 34, 46, 53, 964, 965, 966, 1299, 1305, 1306, 1307, 1309, 1310, 1311, 1315, 1316, 1327, 1328, 1331, 1333, 1334, 1357, 1360, 1532, 1563, 1713, 1727, 1924, 2011, 2043, 2062, 2072, 2074], "erfinv": [0, 251, 2011, 2030, 2062, 2077, 2078], "exp": [0, 1, 34, 253, 643, 644, 770, 911, 912, 914, 1149, 1329, 1349, 1357, 1436, 1441, 1458, 1464, 1488, 1512, 1513, 1527, 1537, 1551, 1554, 1556, 1557, 1559, 1560, 1564, 1603, 1649, 1673, 1682, 1683, 1687, 1689, 1692, 1727, 1820, 1880, 1881, 1903, 1920, 2011, 2030, 2039, 2061, 2062, 2078, 2103], "expm1": [0, 257, 645, 646, 2011, 2030, 2062, 2077, 2078, 2103], "group_norm": [0, 2011, 2062, 2069], "hinge_embedding_loss": [0, 2011, 2062], "kl_div": [0, 2011, 2062], "l1_loss": [0, 2011, 2062], "layer_norm": [0, 1495, 2011, 2062, 2069], "log": [0, 2, 14, 22, 23, 24, 34, 36, 38, 39, 42, 43, 79, 81, 376, 377, 653, 660, 680, 1116, 1345, 1347, 1349, 1350, 1357, 1386, 1427, 1435, 1436, 1458, 1476, 1488, 1512, 1513, 1527, 1530, 1537, 1556, 1557, 1560, 1626, 1631, 1641, 1648, 1649, 1665, 1673, 1687, 1689, 1713, 2009, 2011, 2019, 2026, 2030, 2039, 2042, 2043, 2044, 2059, 2061, 2062, 2066, 2078, 2082, 2086, 2087, 2088, 2101, 2102, 2103, 2105, 2106, 2108], "log_softmax": [0, 1442, 1488, 1613, 1665, 1687, 2011, 2031, 2059, 2062, 2078], "log10": [0, 371, 654, 655, 2011, 2030, 2062, 2103], "log1p": [0, 373, 656, 657, 2011, 2030, 2062, 2077, 2078, 2103], "log2": [0, 375, 658, 659, 2011, 2030, 2062, 2078, 2103], "margin_ranking_loss": [0, 2011, 2062], "mse_loss": [0, 57, 1163, 2011, 2062], "multilabel_margin_loss": [0, 2011, 2062], "multi_margin_loss": [0, 2011, 2062], "nll_loss": [0, 2011, 2062], "norm": [0, 33, 34, 53, 55, 62, 702, 703, 704, 705, 706, 707, 961, 1100, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1301, 1305, 1314, 1315, 1322, 1327, 1339, 1465, 1466, 1514, 1532, 1538, 1568, 1569, 1570, 1571, 1572, 1620, 1621, 1666, 1670, 1712, 1717, 1718, 1728, 1729, 1738, 1739, 1744, 1747, 1748, 1762, 1765, 1782, 1844, 2011, 2015, 2038, 2039, 2048, 2051, 2054, 2062], "normal": [0, 1, 23, 27, 31, 45, 50, 53, 62, 82, 336, 351, 377, 454, 556, 995, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1184, 1231, 1266, 1269, 1274, 1305, 1347, 1431, 1437, 1438, 1439, 1461, 1462, 1463, 1467, 1477, 1485, 1486, 1487, 1495, 1505, 1506, 1507, 1511, 1538, 1551, 1563, 1567, 1568, 1569, 1570, 1571, 1599, 1629, 1630, 1639, 1643, 1647, 1674, 1678, 1712, 1718, 1719, 1728, 1729, 1744, 1752, 1753, 1762, 1765, 1791, 1807, 1827, 1836, 1837, 1844, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1920, 1961, 2008, 2009, 2010, 2011, 2015, 2030, 2032, 2037, 2039, 2042, 2045, 2061, 2062, 2064, 2069, 2072, 2078, 2082, 2084, 2086, 2092, 2103, 2112], "pdist": [0, 1532, 2011, 2062], "poisson_nll_loss": [0, 2011, 2062], "pow": [0, 1, 469, 496, 909, 910, 913, 936, 1149, 2011, 2013, 2030, 2038, 2039, 2062, 2077, 2083, 2103], "prod": [0, 42, 321, 517, 1123, 1125, 1128, 1129, 1131, 1132, 1135, 1136, 1138, 1139, 1141, 1143, 1335, 1336, 1465, 1469, 1575, 1959, 1961, 2011, 2030, 2062, 2077, 2099, 2103], "reciproc": [0, 485, 663, 664, 1854, 2011, 2030, 2062, 2103], "rsqrt": [0, 511, 2011, 2030, 2062, 2103], "sinh": [0, 536, 671, 672, 883, 2011, 2030, 2062, 2077, 2103], "smooth_l1_loss": [0, 2011, 2062], "soft_margin_loss": [0, 2011, 2062], "softmax": [0, 34, 796, 1427, 1458, 1488, 1513, 1558, 1612, 1631, 1641, 1648, 1681, 1688, 1900, 2011, 2030, 2031, 2032, 2042, 2062, 2069, 2077, 2078], "softmin": [0, 2011], "softplu": [0, 34, 1522, 1660, 2011, 2062], "sum": [0, 1, 3, 12, 22, 27, 28, 31, 34, 36, 53, 58, 59, 62, 64, 71, 78, 496, 517, 566, 746, 894, 909, 910, 911, 912, 913, 914, 915, 925, 926, 934, 995, 1020, 1021, 1022, 1088, 1089, 1106, 1167, 1168, 1169, 1174, 1246, 1301, 1322, 1326, 1339, 1347, 1348, 1349, 1357, 1409, 1417, 1435, 1436, 1442, 1455, 1456, 1458, 1459, 1466, 1469, 1476, 1482, 1483, 1488, 1489, 1490, 1491, 1492, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1557, 1559, 1572, 1573, 1575, 1601, 1602, 1612, 1613, 1621, 1626, 1631, 1641, 1650, 1651, 1652, 1665, 1673, 1687, 1688, 1713, 1744, 1749, 1750, 1768, 1779, 1799, 1845, 1867, 1882, 1901, 1903, 1944, 1946, 1961, 2009, 2011, 2013, 2017, 2026, 2030, 2038, 2039, 2042, 2043, 2044, 2045, 2051, 2054, 2061, 2062, 2072, 2073, 2077, 2078, 2083, 2093, 2094, 2096, 2097, 2099, 2103, 2106, 2108, 2110], "renorm": [0, 492, 1465, 1466, 1620, 1621, 2011, 2062], "tan": [0, 575, 675, 676, 884, 2011, 2030, 2062, 2077, 2082, 2103], "triplet_margin_loss": [0, 2011, 2062], "take": [0, 1, 2, 3, 4, 5, 7, 9, 14, 22, 23, 27, 29, 31, 32, 34, 36, 44, 45, 46, 48, 50, 53, 55, 56, 58, 59, 60, 61, 62, 64, 72, 73, 87, 760, 793, 798, 814, 820, 826, 863, 909, 910, 911, 912, 913, 914, 920, 921, 929, 1005, 1042, 1094, 1096, 1097, 1122, 1124, 1127, 1130, 1134, 1135, 1137, 1140, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1194, 1302, 1324, 1327, 1427, 1436, 1466, 1470, 1471, 1474, 1493, 1517, 1518, 1519, 1520, 1521, 1523, 1531, 1539, 1567, 1577, 1578, 1624, 1625, 1642, 1667, 1681, 1713, 1766, 1791, 1795, 1820, 1948, 1962, 1973, 2008, 2010, 2011, 2013, 2020, 2021, 2023, 2029, 2030, 2031, 2032, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2049, 2051, 2055, 2056, 2057, 2061, 2062, 2064, 2066, 2067, 2072, 2073, 2074, 2077, 2080, 2081, 2082, 2085, 2087, 2090, 2093, 2094, 2095, 2097, 2098, 2099, 2100, 2102, 2106, 2107], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 18, 19, 22, 23, 27, 28, 29, 31, 32, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 56, 58, 59, 61, 62, 88, 150, 260, 313, 315, 321, 335, 486, 488, 513, 515, 517, 546, 560, 607, 610, 617, 680, 686, 687, 692, 694, 698, 699, 735, 760, 791, 793, 794, 814, 840, 841, 855, 859, 862, 875, 878, 890, 891, 892, 894, 896, 898, 901, 902, 903, 904, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 929, 933, 934, 935, 939, 940, 943, 952, 954, 959, 960, 964, 967, 968, 972, 973, 975, 983, 987, 994, 1004, 1008, 1009, 1011, 1012, 1020, 1021, 1030, 1038, 1042, 1048, 1052, 1053, 1061, 1062, 1070, 1071, 1073, 1074, 1078, 1080, 1082, 1123, 1124, 1125, 1126, 1129, 1132, 1133, 1136, 1139, 1141, 1143, 1158, 1160, 1163, 1164, 1170, 1171, 1173, 1174, 1184, 1185, 1191, 1210, 1232, 1235, 1265, 1266, 1269, 1277, 1280, 1281, 1284, 1285, 1305, 1332, 1341, 1357, 1359, 1362, 1367, 1369, 1372, 1381, 1382, 1391, 1396, 1407, 1414, 1415, 1416, 1417, 1427, 1434, 1436, 1440, 1442, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1465, 1466, 1469, 1474, 1475, 1476, 1477, 1482, 1488, 1489, 1493, 1494, 1510, 1514, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1539, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1563, 1567, 1569, 1571, 1572, 1575, 1580, 1581, 1587, 1594, 1600, 1602, 1620, 1621, 1626, 1631, 1650, 1651, 1652, 1681, 1687, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1718, 1727, 1733, 1740, 1744, 1754, 1758, 1766, 1767, 1768, 1769, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1802, 1803, 1806, 1807, 1808, 1809, 1821, 1860, 1867, 1899, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1917, 1918, 1919, 1920, 1923, 1940, 1942, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1964, 1968, 1969, 1971, 1975, 1978, 1979, 1980, 1986, 1991, 1996, 1997, 1998, 1999, 2002, 2005, 2008, 2010, 2011, 2012, 2013, 2017, 2019, 2020, 2021, 2023, 2025, 2026, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2049, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2062, 2064, 2065, 2066, 2067, 2071, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2080, 2082, 2084, 2086, 2087, 2088, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2104, 2105, 2106, 2107, 2108, 2109, 2110], "addcdiv": [0, 102, 2011, 2062], "addcmul": [0, 104, 2011, 2062], "atan2": [0, 146, 872, 2011, 2030, 2062, 2103], "bilinear": [0, 779, 785, 786, 1106, 1576, 1577, 1629, 1640, 1700, 1701, 1961, 2011, 2062], "cross": [0, 7, 8, 27, 29, 32, 33, 34, 36, 1435, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1601, 1602, 1612, 2011, 2042, 2057, 2062], "dot": [0, 2, 14, 58, 59, 617, 910, 912, 913, 914, 1085, 1086, 1087, 1088, 1165, 1175, 1246, 1290, 1337, 1338, 1364, 1435, 1436, 1458, 1469, 1482, 1489, 1514, 1529, 1530, 1573, 1582, 1587, 1681, 1920, 1970, 1971, 1972, 1973, 2011, 2030, 2048, 2062, 2064], "grid_sampl": [0, 1594, 1961, 2011, 2062], "index_put": [0, 1961, 2011, 2062, 2103], "scatter_add": [0, 2011, 2062, 2103], "tensordot": [0, 1246, 1335, 1336, 2015, 2042, 2062], "binari": [0, 2, 14, 15, 23, 34, 36, 38, 43, 45, 62, 154, 735, 943, 1363, 1435, 1436, 1529, 1601, 1602, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1775, 2009, 2014, 2030, 2031, 2050, 2059, 2061, 2064, 2082, 2090], "add": [0, 1, 3, 7, 12, 15, 17, 22, 27, 29, 31, 42, 45, 50, 51, 53, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 76, 82, 86, 98, 290, 313, 513, 515, 686, 687, 688, 691, 747, 748, 757, 790, 793, 838, 860, 862, 863, 929, 936, 1021, 1051, 1062, 1106, 1164, 1178, 1183, 1184, 1190, 1269, 1281, 1427, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1499, 1500, 1501, 1502, 1503, 1504, 1523, 1525, 1529, 1530, 1534, 1537, 1631, 1673, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1867, 1916, 2008, 2010, 2011, 2012, 2013, 2017, 2023, 2026, 2030, 2032, 2038, 2040, 2041, 2043, 2044, 2045, 2049, 2050, 2051, 2053, 2058, 2059, 2061, 2062, 2064, 2066, 2067, 2068, 2069, 2070, 2072, 2073, 2074, 2077, 2080, 2081, 2082, 2087, 2088, 2093, 2094, 2095, 2096, 2097, 2099, 2100, 2102, 2103, 2106, 2107, 2108, 2109, 2110], "nativ": [0, 11, 23, 53, 62, 1031, 1164, 1280, 1718, 1719, 1867, 2010, 2013, 2029, 2042, 2056, 2058, 2063, 2064, 2072, 2099], "without": [0, 1, 3, 5, 7, 8, 9, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 38, 45, 50, 53, 54, 59, 61, 62, 63, 64, 65, 254, 486, 488, 617, 970, 973, 1009, 1011, 1046, 1127, 1128, 1129, 1137, 1138, 1139, 1184, 1193, 1194, 1209, 1266, 1267, 1269, 1270, 1316, 1317, 1332, 1339, 1409, 1437, 1438, 1439, 1462, 1466, 1485, 1486, 1487, 1520, 1523, 1531, 1563, 1571, 1621, 1703, 1713, 1745, 1761, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1799, 1830, 1846, 1863, 1955, 2008, 2012, 2013, 2017, 2020, 2021, 2023, 2026, 2029, 2031, 2038, 2039, 2040, 2042, 2043, 2044, 2048, 2049, 2051, 2053, 2055, 2056, 2059, 2061, 2064, 2065, 2067, 2071, 2072, 2077, 2079, 2082, 2088, 2093, 2095, 2096, 2097, 2098, 2099, 2108, 2112], "intervent": [0, 8, 2072], "mixtur": [0, 34, 1458, 1612], "bceloss": [0, 1436, 1601], "aren": [0, 8, 58, 62, 81, 1164, 1184, 2030, 2039, 2047, 2073, 2109], "mean": [0, 2, 3, 5, 7, 8, 12, 15, 18, 22, 23, 27, 29, 31, 33, 34, 45, 46, 48, 50, 51, 53, 54, 56, 59, 61, 62, 254, 258, 321, 335, 377, 454, 488, 495, 517, 758, 760, 781, 794, 796, 862, 863, 929, 941, 954, 987, 995, 1163, 1165, 1193, 1194, 1280, 1370, 1389, 1409, 1414, 1418, 1419, 1425, 1426, 1427, 1429, 1430, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1456, 1458, 1460, 1464, 1466, 1467, 1468, 1472, 1473, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1493, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1509, 1510, 1512, 1513, 1514, 1515, 1522, 1526, 1527, 1528, 1530, 1531, 1537, 1538, 1539, 1542, 1543, 1544, 1551, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1572, 1573, 1574, 1600, 1601, 1602, 1610, 1612, 1613, 1621, 1622, 1626, 1637, 1638, 1641, 1642, 1646, 1653, 1661, 1662, 1663, 1664, 1665, 1673, 1678, 1685, 1686, 1697, 1698, 1712, 1713, 1723, 1725, 1769, 1794, 1827, 1836, 1837, 1867, 1880, 1901, 1918, 1919, 1925, 1961, 1968, 1969, 2008, 2010, 2011, 2012, 2026, 2027, 2029, 2030, 2031, 2032, 2037, 2038, 2039, 2042, 2043, 2044, 2046, 2047, 2048, 2051, 2057, 2061, 2062, 2063, 2064, 2066, 2067, 2068, 2069, 2072, 2073, 2074, 2077, 2095, 2096, 2098, 2099, 2102, 2103, 2104, 2105], "doesn": [0, 1, 2, 5, 7, 8, 11, 12, 22, 27, 29, 36, 43, 51, 56, 58, 61, 62, 84, 823, 826, 881, 901, 902, 906, 915, 927, 987, 1009, 1030, 1164, 1175, 1183, 1184, 1194, 1197, 1208, 1277, 1283, 1309, 1333, 1341, 1350, 1406, 1450, 1451, 1452, 1459, 1488, 1557, 1604, 1605, 1606, 1641, 1687, 1713, 1714, 1744, 1783, 1863, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1897, 1901, 1973, 1986, 2010, 2013, 2014, 2030, 2032, 2039, 2040, 2042, 2044, 2045, 2050, 2053, 2057, 2063, 2065, 2073, 2077, 2098, 2103, 2106, 2108], "help": [0, 1, 4, 7, 8, 11, 14, 19, 22, 23, 27, 42, 45, 53, 58, 62, 920, 921, 933, 1030, 1062, 1164, 1165, 1175, 1183, 1184, 1269, 1270, 1289, 1371, 1385, 1386, 1461, 1462, 1463, 1467, 1523, 1727, 1778, 1873, 1973, 1986, 2008, 2013, 2020, 2021, 2030, 2031, 2038, 2039, 2040, 2042, 2043, 2045, 2049, 2051, 2054, 2059, 2061, 2064, 2072, 2073, 2077, 2086, 2096, 2098, 2101, 2102, 2106, 2108], "revers": [0, 34, 59, 62, 513, 734, 793, 909, 911, 1124, 1126, 1146, 1167, 1169, 1174, 1337, 1493, 1536, 1672, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751, 1948, 1967, 2011, 2012, 2013, 2039, 2043, 2045, 2062, 2083], "therefor": [0, 3, 5, 22, 23, 27, 34, 35, 43, 53, 56, 64, 69, 70, 86, 448, 544, 915, 942, 951, 975, 1051, 1140, 1157, 1160, 1163, 1206, 1227, 1228, 1282, 1285, 1315, 1328, 1465, 1466, 1575, 1620, 1621, 1629, 1763, 1799, 2013, 2022, 2038, 2039, 2042, 2044, 2046, 2047, 2050, 2061, 2074, 2077, 2097, 2100], "rais": [0, 1, 5, 7, 14, 27, 29, 31, 34, 36, 38, 45, 50, 53, 58, 61, 62, 64, 88, 313, 315, 321, 697, 895, 901, 904, 906, 909, 910, 911, 912, 913, 914, 915, 919, 920, 921, 928, 938, 940, 954, 963, 973, 1010, 1076, 1149, 1154, 1200, 1267, 1269, 1274, 1277, 1285, 1287, 1299, 1301, 1309, 1310, 1313, 1317, 1318, 1323, 1330, 1331, 1335, 1336, 1341, 1362, 1389, 1523, 1681, 1706, 1733, 1734, 1739, 1741, 1744, 1754, 1774, 1775, 1861, 1864, 1909, 1961, 2008, 2014, 2017, 2020, 2029, 2039, 2042, 2044, 2046, 2054, 2059, 2061, 2064, 2065, 2071, 2072, 2076, 2084, 2095, 2098, 2099, 2107, 2108, 2109], "mani": [0, 3, 7, 11, 14, 22, 23, 27, 32, 34, 45, 53, 57, 58, 62, 88, 402, 680, 890, 892, 906, 907, 909, 911, 1106, 1194, 1282, 1442, 1794, 1892, 1942, 1949, 1950, 1951, 1952, 2010, 2012, 2021, 2030, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2050, 2051, 2054, 2058, 2061, 2063, 2067, 2074, 2077, 2080, 2082, 2083, 2086, 2094, 2095, 2096, 2098, 2099, 2101, 2102, 2104, 2107, 2108, 2110, 2111], "sigmoid": [0, 34, 62, 527, 667, 668, 760, 795, 1435, 1436, 1465, 1474, 1475, 1493, 1494, 1553, 1601, 1628, 1684, 2011, 2030, 2031, 2037, 2059, 2062, 2069, 2078, 2090, 2103], "right": [0, 2, 7, 9, 12, 27, 29, 34, 50, 53, 62, 820, 866, 942, 949, 951, 952, 957, 962, 966, 987, 1100, 1106, 1147, 1150, 1151, 1155, 1223, 1227, 1228, 1232, 1236, 1266, 1289, 1314, 1319, 1330, 1332, 1333, 1341, 1347, 1348, 1409, 1427, 1432, 1433, 1434, 1435, 1436, 1450, 1451, 1452, 1469, 1476, 1489, 1490, 1491, 1492, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1526, 1527, 1528, 1532, 1533, 1540, 1572, 1575, 1576, 1577, 1578, 1583, 1584, 1585, 1629, 1649, 1668, 1719, 1733, 1783, 1797, 1798, 1839, 1859, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1920, 1941, 1946, 1948, 1964, 1967, 2008, 2011, 2013, 2029, 2030, 2031, 2039, 2044, 2048, 2059, 2061, 2063, 2070, 2074, 2078, 2096, 2097, 2098, 2106], "entropi": [0, 33, 34, 1435, 1458, 1527, 1601, 1602, 1612, 2078], "combin": [0, 3, 22, 23, 27, 29, 45, 59, 61, 617, 689, 712, 713, 714, 715, 716, 717, 718, 719, 793, 855, 891, 906, 1062, 1135, 1136, 1141, 1143, 1197, 1232, 1364, 1374, 1436, 1469, 1483, 1529, 1571, 1575, 1623, 1646, 1740, 2010, 2011, 2012, 2038, 2042, 2045, 2059, 2061, 2062, 2063, 2065, 2067, 2070, 2072, 2094], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 18, 22, 23, 27, 28, 29, 31, 32, 34, 42, 43, 45, 46, 50, 51, 53, 57, 58, 62, 84, 85, 583, 584, 585, 587, 588, 607, 617, 680, 692, 694, 760, 793, 888, 891, 906, 907, 911, 920, 961, 963, 1015, 1054, 1056, 1085, 1086, 1094, 1103, 1106, 1112, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1152, 1153, 1163, 1173, 1181, 1183, 1192, 1195, 1231, 1233, 1258, 1267, 1269, 1280, 1283, 1290, 1293, 1295, 1300, 1302, 1305, 1306, 1311, 1312, 1317, 1322, 1325, 1326, 1328, 1329, 1331, 1333, 1338, 1341, 1364, 1367, 1370, 1372, 1375, 1416, 1433, 1435, 1436, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1469, 1474, 1482, 1483, 1489, 1491, 1493, 1514, 1515, 1517, 1523, 1526, 1527, 1528, 1530, 1531, 1537, 1539, 1555, 1556, 1571, 1572, 1573, 1575, 1583, 1584, 1601, 1602, 1612, 1631, 1641, 1648, 1665, 1673, 1681, 1727, 1729, 1733, 1755, 1765, 1767, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1798, 1799, 1801, 1805, 1824, 1839, 1852, 1867, 1904, 1909, 1924, 1941, 1945, 1946, 1948, 1957, 1966, 1970, 1974, 2008, 2010, 2012, 2013, 2017, 2019, 2020, 2021, 2030, 2031, 2032, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2051, 2056, 2057, 2058, 2061, 2063, 2064, 2065, 2067, 2068, 2072, 2073, 2074, 2077, 2078, 2080, 2082, 2083, 2084, 2087, 2088, 2093, 2094, 2095, 2096, 2098, 2103, 2106, 2108], "bcewithlogitsloss": [0, 1602], "bcewithlogit": 0, "safe": [0, 27, 29, 45, 50, 61, 62, 85, 87, 88, 486, 1052, 1053, 1073, 1074, 1197, 1713, 1777, 1778, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1996, 1997, 1998, 1999, 2010, 2013, 2038, 2039, 2042, 2045, 2047, 2050, 2056, 2072, 2079, 2089, 2093, 2099, 2100, 2108], "_convolut": [0, 2062], "avg_pool3d": [0, 2011, 2062, 2069, 2103], "grid_sampler_2d": [0, 2011, 2062, 2103], "_grid_sampler_2d_cpu_fallback": [0, 2062], "grid_sampler_3d": [0, 2011, 2062], "polar": [0, 34, 1329, 2011, 2062], "quantil": [0, 1370, 1416, 2011, 2062, 2078], "nanquantil": [0, 2011, 2062], "stft": [0, 942, 951, 1227, 1228, 1266, 1289, 2011, 2062], "view_as_complex": [0, 11, 2011, 2062], "choleski": [0, 2, 34, 965, 966, 1300, 1306, 1342, 2011, 2062], "cholesky_invers": [0, 2, 2011, 2062], "cholesky_solv": [0, 2, 2011, 2062], "invers": [0, 34, 683, 684, 883, 886, 960, 965, 966, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1266, 1310, 1311, 1323, 1327, 1330, 1335, 1336, 1453, 1454, 1455, 1465, 1466, 1469, 1519, 1520, 1521, 1575, 1620, 1621, 1657, 1658, 1659, 1730, 1733, 1757, 1799, 1805, 1956, 2009, 2011, 2013, 2054, 2062, 2078], "lu_solv": [0, 2, 1317, 2011, 2062], "orgqr": [0, 2011, 2062], "ormqr": [0, 1213, 1309, 2011, 2062], "pinvers": [0, 1315, 2011, 2062], "max_pool3d": [0, 2011, 2062, 2069], "max_unpool2d": [0, 1624, 1655, 2011, 2062], "max_unpool3d": [0, 1625, 1656, 2011, 2062], "adaptive_avg_pool3d": [0, 2011, 2044, 2062, 2069], "reflection_pad1d": [0, 2011, 2062, 2103], "reflection_pad2d": [0, 2011, 2062, 2103], "replication_pad1d": [0, 2011, 2062], "replication_pad2d": [0, 2011, 2062, 2103], "replication_pad3d": [0, 2011, 2062, 2103], "ctc_loss": [0, 1442, 2011, 2062], "fft_fft": [0, 2011, 2062], "fft_ifft": [0, 2011, 2062], "fft_fft2": [0, 2011, 2062], "fft_ifft2": [0, 2011, 2062], "fft_fftn": [0, 2011, 2062], "fft_ifftn": [0, 2011, 2062], "fft_rfft": [0, 2011, 2062], "fft_irfft": [0, 2011, 2062], "fft_rfft2": [0, 2011, 2062], "fft_irfft2": [0, 2011, 2062], "fft_rfftn": [0, 2011, 2062], "fft_irfftn": [0, 2011, 2062], "fft_hfft": [0, 2011, 2062], "fft_ihfft": [0, 2011, 2062], "linalg_matrix_norm": [0, 2011, 2062], "linalg_cond": [0, 2011, 2062], "linalg_matrix_rank": [0, 2011, 2062], "linalg_solv": [0, 2011, 2062], "linalg_choleski": [0, 2011, 2062], "linalg_svdv": [0, 2011, 2062], "linalg_eigv": [0, 2011, 2062], "linalg_eigvalsh": [0, 2011, 2062], "linalg_inv": [0, 2011, 2062], "linalg_householder_product": [0, 2011, 2062], "linalg_tensorinv": [0, 2011, 2062], "linalg_tensorsolv": [0, 2011, 2062], "fake_quantize_per_tensor_affin": [0, 2011, 2062], "eig": [0, 1306, 1307, 1333, 2054], "geqrf": [0, 1309, 1811, 2011, 2062], "lstsq": [0, 1213, 1301, 1327], "_lu_with_info": [0, 2062], "qr": [0, 2, 1213, 1305, 1306, 1309, 1315, 1333, 1727, 1811, 2011, 2062], "solv": [0, 7, 11, 50, 1178, 1213, 1223, 1301, 1310, 1312, 1313, 1316, 1317, 1319, 1323, 1331, 1332, 1336, 1342, 1360, 1948, 2039, 2048, 2054, 2057, 2089, 2096, 2099], "svd": [0, 2, 11, 1305, 1306, 1315, 1327, 1334, 1350, 1733, 1813, 1925, 2011, 2054, 2062, 2077, 2103], "symeig": 0, "triangular_solv": [0, 2011, 2062], "fractional_max_pool2d": [0, 2011, 2062], "fractional_max_pool3d": [0, 2011, 2062], "adaptive_max_pool3d": [0, 2011, 2062], "multilabel_margin_loss_forward": [0, 2062], "linalg_qr": [0, 2011, 2062], "linalg_cholesky_ex": [0, 2011, 2062], "linalg_svd": [0, 2011, 2062], "linalg_eig": [0, 2011, 2062], "linalg_eigh": [0, 2011, 2062], "linalg_lstsq": [0, 2011, 2062], "linalg_inv_ex": [0, 2011, 2062], "cat": [0, 27, 34, 62, 544, 747, 748, 757, 793, 796, 985, 986, 1371, 1543, 1905, 1917, 2010, 2011, 2030, 2061, 2062, 2064, 2067, 2069, 2077, 2087, 2095, 2103], "stack": [0, 8, 18, 22, 23, 24, 27, 32, 34, 38, 45, 50, 51, 57, 58, 62, 680, 760, 933, 960, 971, 1067, 1068, 1105, 1173, 1175, 1184, 1235, 1371, 1442, 1474, 1493, 1494, 1539, 1568, 1570, 1758, 1963, 1973, 1975, 2009, 2011, 2017, 2032, 2042, 2043, 2046, 2062, 2064, 2066, 2069, 2077, 2096, 2097, 2098, 2099, 2106, 2108, 2110, 2111], "index_copi": [0, 1961, 2011, 2062], "implement": [1, 2, 5, 8, 11, 12, 16, 17, 22, 23, 27, 28, 29, 31, 32, 33, 34, 37, 42, 43, 46, 50, 53, 58, 62, 63, 80, 84, 150, 415, 513, 515, 517, 687, 738, 739, 740, 741, 742, 743, 760, 779, 781, 785, 793, 800, 819, 820, 821, 824, 825, 826, 879, 881, 894, 910, 920, 921, 987, 993, 1106, 1149, 1154, 1160, 1167, 1168, 1170, 1171, 1269, 1275, 1277, 1279, 1280, 1283, 1325, 1328, 1341, 1342, 1370, 1427, 1442, 1459, 1474, 1477, 1490, 1491, 1492, 1495, 1523, 1529, 1535, 1538, 1539, 1540, 1543, 1560, 1569, 1571, 1629, 1634, 1668, 1681, 1689, 1712, 1713, 1718, 1719, 1727, 1728, 1733, 1744, 1757, 1761, 1762, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1797, 1799, 1805, 1823, 1830, 1843, 1852, 1855, 1879, 1891, 1901, 1924, 1925, 1941, 1957, 1961, 1962, 1964, 2012, 2013, 2014, 2017, 2020, 2021, 2028, 2029, 2032, 2033, 2037, 2038, 2039, 2041, 2042, 2044, 2045, 2046, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2059, 2063, 2064, 2065, 2067, 2072, 2073, 2077, 2078, 2081, 2083, 2093, 2095, 2097, 2099, 2104, 2106, 2109], "arbitrari": [1, 3, 27, 31, 50, 64, 67, 72, 254, 891, 906, 1089, 1184, 1333, 1341, 1459, 1465, 1489, 1514, 1575, 1601, 1602, 1620, 1641, 1668, 1754, 1924, 1946, 1959, 2013, 2019, 2021, 2039, 2045, 2050, 2051, 2063, 2065, 2067, 2077, 2086, 2096, 2099, 2104, 2108, 2109], "scalar": [1, 12, 27, 34, 51, 64, 73, 97, 150, 154, 260, 313, 446, 513, 589, 687, 688, 738, 739, 740, 741, 742, 743, 880, 881, 894, 909, 910, 913, 915, 946, 949, 957, 991, 995, 1101, 1106, 1121, 1154, 1161, 1223, 1230, 1246, 1260, 1294, 1295, 1364, 1371, 1416, 1427, 1435, 1436, 1442, 1456, 1458, 1459, 1476, 1482, 1483, 1488, 1489, 1495, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1573, 1631, 1674, 1767, 1772, 1773, 1774, 1807, 1820, 1822, 1824, 1842, 1843, 1859, 1907, 1908, 1909, 1910, 1911, 1939, 1957, 1958, 1976, 2006, 2007, 2011, 2012, 2013, 2026, 2032, 2037, 2039, 2044, 2048, 2061, 2072, 2077, 2080, 2082, 2084, 2096, 2098, 2099, 2103, 2107], "minim": [1, 7, 8, 819, 876, 1372, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1791, 1792, 1793, 1794, 1807, 2008, 2026, 2038, 2042, 2051, 2053, 2056, 2061, 2065, 2067, 2099, 2106, 2108], "exist": [1, 7, 8, 9, 11, 14, 22, 27, 28, 29, 34, 36, 38, 43, 45, 46, 51, 53, 57, 60, 62, 64, 82, 83, 254, 499, 792, 855, 879, 909, 910, 911, 912, 913, 914, 915, 920, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1046, 1183, 1196, 1197, 1206, 1269, 1273, 1285, 1305, 1310, 1316, 1317, 1342, 1416, 1523, 1524, 1533, 1583, 1899, 1917, 1964, 2008, 2010, 2017, 2020, 2029, 2030, 2032, 2033, 2039, 2040, 2042, 2044, 2045, 2047, 2049, 2050, 2051, 2052, 2054, 2056, 2061, 2064, 2065, 2066, 2067, 2072, 2074, 2077, 2081, 2083, 2093, 2094, 2096, 2098, 2100, 2103, 2106, 2110], "code": [1, 3, 4, 8, 9, 11, 14, 15, 16, 22, 23, 27, 29, 32, 34, 36, 46, 48, 50, 51, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 119, 680, 916, 936, 973, 975, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1048, 1049, 1062, 1164, 1184, 1269, 1273, 1274, 1280, 1281, 1282, 1285, 1286, 1287, 1300, 1311, 1313, 1341, 1540, 1552, 1584, 1585, 1586, 1713, 1870, 2008, 2009, 2012, 2013, 2019, 2021, 2031, 2039, 2040, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2055, 2056, 2057, 2059, 2061, 2063, 2066, 2071, 2072, 2073, 2074, 2077, 2080, 2081, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2104, 2106, 2107, 2108, 2109, 2110], "need": [1, 3, 5, 6, 7, 8, 9, 14, 15, 22, 23, 27, 28, 29, 31, 33, 34, 37, 38, 43, 45, 46, 49, 50, 51, 53, 55, 56, 58, 62, 63, 64, 74, 75, 85, 86, 150, 254, 471, 488, 495, 499, 583, 680, 734, 735, 819, 820, 821, 824, 825, 826, 842, 859, 890, 894, 901, 902, 903, 906, 907, 915, 927, 954, 955, 963, 980, 981, 1042, 1051, 1058, 1094, 1096, 1106, 1127, 1129, 1149, 1158, 1163, 1184, 1206, 1269, 1363, 1409, 1458, 1465, 1519, 1520, 1521, 1523, 1529, 1567, 1569, 1571, 1604, 1605, 1606, 1699, 1713, 1720, 1721, 1733, 1735, 1739, 1741, 1769, 1794, 1840, 1845, 1859, 1917, 1946, 1962, 1964, 2009, 2010, 2012, 2013, 2017, 2020, 2021, 2023, 2025, 2029, 2031, 2032, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2053, 2054, 2055, 2056, 2057, 2059, 2061, 2063, 2064, 2065, 2067, 2070, 2072, 2073, 2074, 2077, 2079, 2080, 2083, 2084, 2088, 2089, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2104, 2106, 2108, 2109], "declar": [1, 9, 14, 22, 46, 1194, 2012, 2013, 2014, 2044, 2061, 2064, 2065], "requires_grad": [1, 5, 29, 33, 34, 59, 335, 445, 446, 447, 448, 449, 487, 488, 496, 866, 881, 901, 902, 904, 905, 906, 907, 916, 917, 920, 921, 923, 925, 926, 936, 942, 951, 1051, 1107, 1108, 1109, 1110, 1119, 1124, 1142, 1160, 1161, 1162, 1165, 1175, 1227, 1228, 1269, 1289, 1340, 1356, 1435, 1436, 1456, 1458, 1465, 1466, 1476, 1488, 1489, 1514, 1515, 1523, 1529, 1530, 1537, 1571, 1572, 1601, 1602, 1612, 1665, 1713, 1714, 1715, 1716, 1761, 1766, 1772, 1773, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1901, 1906, 1907, 1908, 1909, 1910, 1911, 1939, 1961, 1973, 2006, 2007, 2011, 2015, 2017, 2030, 2031, 2032, 2042, 2044, 2045, 2051, 2056, 2061, 2062, 2072, 2073, 2083, 2084, 2086, 2096, 2097, 2098, 2099, 2103, 2106], "keyword": [1, 5, 22, 27, 28, 31, 32, 33, 50, 51, 58, 62, 64, 70, 84, 88, 313, 321, 445, 446, 447, 448, 449, 513, 581, 680, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 862, 866, 881, 882, 883, 884, 885, 886, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 953, 957, 960, 962, 964, 965, 966, 968, 970, 971, 984, 989, 990, 992, 993, 995, 1005, 1018, 1020, 1022, 1048, 1049, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1098, 1101, 1103, 1105, 1107, 1108, 1109, 1111, 1116, 1119, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1160, 1161, 1162, 1163, 1182, 1210, 1211, 1212, 1213, 1223, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1244, 1246, 1263, 1264, 1269, 1272, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1360, 1361, 1363, 1364, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1392, 1408, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1423, 1459, 1481, 1484, 1523, 1681, 1706, 1707, 1713, 1733, 1735, 1740, 1744, 1763, 1767, 1769, 1772, 1773, 1811, 1812, 1816, 1817, 1820, 1821, 1823, 1824, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1844, 1845, 1852, 1854, 1859, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1896, 1899, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1936, 1937, 1938, 1939, 1943, 1946, 1948, 1949, 1950, 1951, 1952, 1954, 1961, 1968, 1969, 1970, 1975, 1976, 2006, 2007, 2008, 2013, 2014, 2017, 2031, 2032, 2044, 2054, 2059, 2061, 2063, 2072, 2077, 2078, 2082, 2109], "type": [1, 2, 3, 5, 12, 14, 15, 17, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 43, 45, 46, 48, 50, 53, 58, 60, 61, 62, 64, 66, 69, 70, 73, 74, 75, 80, 81, 85, 87, 88, 150, 191, 196, 208, 326, 329, 333, 341, 445, 446, 447, 448, 449, 481, 559, 604, 680, 685, 686, 687, 688, 689, 690, 734, 735, 738, 739, 740, 749, 751, 752, 753, 754, 756, 764, 766, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 784, 792, 793, 794, 797, 815, 816, 817, 819, 820, 821, 822, 823, 825, 827, 840, 841, 855, 856, 857, 858, 859, 860, 861, 862, 863, 866, 874, 880, 890, 891, 892, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 922, 923, 925, 926, 929, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 957, 958, 959, 960, 961, 963, 972, 973, 974, 980, 981, 982, 987, 998, 999, 1000, 1001, 1003, 1009, 1011, 1015, 1017, 1024, 1025, 1026, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1043, 1045, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1069, 1081, 1083, 1084, 1087, 1088, 1101, 1106, 1107, 1108, 1109, 1119, 1120, 1121, 1124, 1142, 1149, 1151, 1152, 1153, 1154, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1168, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1180, 1182, 1184, 1191, 1198, 1199, 1200, 1201, 1202, 1208, 1211, 1215, 1217, 1219, 1222, 1227, 1228, 1230, 1231, 1232, 1245, 1248, 1250, 1251, 1254, 1257, 1265, 1266, 1267, 1269, 1270, 1272, 1275, 1276, 1279, 1281, 1283, 1285, 1286, 1288, 1289, 1292, 1301, 1305, 1322, 1326, 1333, 1339, 1340, 1341, 1342, 1356, 1359, 1362, 1369, 1371, 1378, 1379, 1380, 1383, 1397, 1398, 1399, 1401, 1403, 1406, 1408, 1414, 1417, 1427, 1431, 1450, 1451, 1452, 1459, 1466, 1513, 1523, 1524, 1525, 1529, 1533, 1534, 1538, 1552, 1557, 1558, 1559, 1567, 1568, 1569, 1570, 1571, 1584, 1585, 1586, 1589, 1590, 1594, 1595, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1626, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1650, 1651, 1652, 1653, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1673, 1675, 1676, 1678, 1679, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1694, 1696, 1697, 1698, 1699, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1717, 1718, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1765, 1767, 1768, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1821, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1845, 1849, 1852, 1859, 1860, 1863, 1864, 1865, 1867, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1900, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1920, 1921, 1923, 1924, 1925, 1939, 1948, 1950, 1952, 1957, 1958, 1959, 1961, 1962, 1963, 1967, 1973, 1976, 1978, 1979, 1981, 1982, 1984, 1987, 1988, 1989, 1990, 1991, 1993, 1994, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2014, 2017, 2021, 2023, 2024, 2026, 2030, 2032, 2037, 2038, 2039, 2041, 2042, 2048, 2049, 2050, 2051, 2054, 2056, 2057, 2059, 2060, 2062, 2065, 2066, 2067, 2069, 2070, 2071, 2072, 2076, 2077, 2078, 2079, 2080, 2082, 2084, 2086, 2087, 2088, 2094, 2095, 2096, 2097, 2099, 2103, 2106, 2107, 2109], "doubl": [1, 3, 34, 36, 50, 51, 53, 481, 487, 617, 749, 751, 752, 753, 754, 756, 766, 767, 781, 901, 902, 904, 906, 907, 912, 920, 921, 929, 958, 965, 966, 984, 1005, 1051, 1121, 1149, 1223, 1269, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1350, 1351, 1352, 1353, 1354, 1360, 1466, 1523, 1589, 1592, 1621, 1703, 1774, 1811, 1817, 1906, 1907, 1908, 1910, 1911, 1924, 1939, 1948, 1976, 2013, 2030, 2042, 2044, 2045, 2047, 2054, 2061, 2064, 2079, 2080, 2083], "bfloat16": [1, 23, 53, 1251, 1269, 1321, 1338, 1523, 1774, 1779, 1780, 1781, 1793, 1864, 1867, 2030, 2042, 2077, 2079, 2080, 2083, 2084, 2112], "cfloat": [1, 11, 27, 311, 483, 617, 965, 966, 1005, 1240, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1360, 1811, 1841, 1924, 1948, 1972, 2080, 2083], "cdoubl": [1, 11, 965, 966, 1005, 1269, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1360, 1523, 1811, 1924, 1948, 2080, 2083], "beta": [1, 2, 11, 54, 61, 99, 100, 105, 106, 107, 108, 109, 110, 151, 152, 321, 517, 554, 686, 689, 690, 691, 941, 1006, 1040, 1041, 1048, 1049, 1051, 1227, 1289, 1364, 1374, 1437, 1438, 1439, 1477, 1483, 1485, 1486, 1487, 1495, 1511, 1555, 1560, 1563, 1582, 1587, 1638, 1646, 1647, 1681, 1685, 1689, 1780, 1781, 1782, 1784, 1790, 1794, 1827, 1884, 1886, 1897, 1902, 1916, 2009, 2011, 2019, 2023, 2042, 2058, 2059, 2060, 2061, 2067, 2072, 2077, 2080, 2086, 2103], "even": [1, 2, 8, 22, 23, 27, 29, 36, 50, 53, 61, 62, 87, 486, 544, 580, 680, 815, 816, 817, 894, 995, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1137, 1138, 1139, 1142, 1174, 1183, 1188, 1194, 1196, 1197, 1208, 1254, 1282, 1299, 1301, 1305, 1306, 1307, 1308, 1322, 1326, 1328, 1329, 1333, 1334, 1339, 1364, 1370, 1459, 1563, 1604, 1605, 1606, 1668, 1713, 1720, 1721, 1727, 1766, 1768, 1805, 1852, 1863, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1924, 1971, 2010, 2013, 2014, 2026, 2032, 2038, 2039, 2042, 2044, 2046, 2047, 2049, 2051, 2053, 2054, 2055, 2056, 2063, 2064, 2065, 2074, 2079, 2080, 2093, 2095, 2096, 2098, 2099, 2101, 2110], "though": [1, 11, 27, 62, 64, 67, 150, 486, 794, 891, 894, 906, 911, 1122, 1123, 1125, 1184, 1188, 1194, 1196, 1197, 1267, 1270, 1364, 1768, 2010, 2014, 2031, 2032, 2039, 2042, 2044, 2045, 2047, 2053, 2054, 2063, 2067, 2079, 2096, 2098, 2110], "signatur": [1, 12, 22, 29, 38, 50, 51, 53, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 84, 398, 487, 488, 556, 906, 907, 925, 926, 987, 1269, 1523, 1705, 1706, 1707, 1710, 1711, 1713, 1733, 1754, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1920, 2017, 2042, 2044, 2045, 2059, 2061, 2064, 2065, 2072, 2077, 2097, 2101, 2109], "veri": [1, 4, 7, 8, 18, 22, 23, 57, 59, 62, 975, 993, 1165, 1173, 1175, 1183, 1332, 1485, 1486, 1487, 1713, 1714, 1727, 1783, 1805, 1811, 1887, 1891, 1948, 1973, 2012, 2029, 2039, 2044, 2046, 2048, 2049, 2051, 2053, 2054, 2057, 2063, 2064, 2071, 2072, 2073, 2077, 2083, 2096, 2098, 2099, 2101, 2107, 2108], "unlik": [1, 3, 7, 34, 51, 53, 59, 488, 493, 916, 1103, 1142, 1145, 1149, 1305, 1306, 1325, 1328, 1333, 1337, 1367, 1370, 1372, 1495, 1715, 1716, 1842, 1970, 2012, 2013, 2029, 2032, 2042, 2053, 2055, 2080, 2086, 2095, 2099], "coverag": [1, 7, 50, 54, 62, 1167, 1168, 2009, 2010, 2015, 2031, 2067, 2077, 2109], "plan": [1, 2, 7, 9, 27, 29, 33, 896, 1713, 1823, 2032, 2039, 2044, 2064, 2077, 2083, 2107, 2108], "consid": [1, 5, 8, 23, 27, 36, 45, 50, 51, 53, 58, 61, 62, 63, 486, 694, 779, 785, 794, 909, 911, 912, 920, 995, 1093, 1094, 1095, 1096, 1097, 1127, 1163, 1258, 1262, 1265, 1269, 1310, 1312, 1313, 1314, 1315, 1323, 1324, 1327, 1332, 1335, 1458, 1469, 1523, 1526, 1575, 1594, 1629, 1640, 1700, 1714, 1727, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1763, 1793, 1807, 1861, 1880, 1915, 1920, 1949, 1950, 1951, 1952, 2008, 2010, 2013, 2020, 2038, 2039, 2040, 2044, 2046, 2047, 2048, 2051, 2054, 2059, 2063, 2064, 2066, 2068, 2073, 2074, 2077, 2080, 2083, 2084, 2095, 2096, 2099, 2107, 2109, 2110], "ad": [1, 3, 9, 14, 22, 23, 27, 31, 34, 36, 42, 53, 56, 58, 59, 61, 62, 221, 222, 313, 319, 471, 515, 680, 686, 687, 688, 689, 690, 691, 735, 896, 899, 900, 901, 909, 910, 911, 912, 916, 917, 918, 920, 929, 941, 1106, 1110, 1167, 1168, 1170, 1178, 1184, 1269, 1283, 1347, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1529, 1530, 1532, 1537, 1538, 1552, 1563, 1567, 1572, 1575, 1607, 1608, 1609, 1626, 1654, 1655, 1656, 1681, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1733, 1740, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1827, 1828, 1829, 1897, 1902, 1916, 2008, 2010, 2012, 2025, 2026, 2031, 2038, 2045, 2047, 2048, 2050, 2051, 2056, 2064, 2066, 2067, 2070, 2077, 2082, 2086, 2094, 2095, 2098, 2099, 2103, 2104, 2106, 2107, 2110], "tutori": [1, 3, 9, 15, 27, 28, 31, 62, 896, 899, 900, 901, 904, 906, 1964, 2009, 2010, 2017, 2020, 2033, 2044, 2050, 2051, 2053, 2056, 2061, 2067, 2090, 2098, 2099, 2101], "how": [1, 3, 5, 7, 8, 9, 12, 15, 17, 22, 27, 29, 32, 33, 37, 45, 46, 48, 53, 54, 55, 57, 58, 62, 64, 72, 73, 80, 233, 415, 486, 487, 488, 785, 792, 793, 796, 842, 860, 862, 863, 896, 899, 900, 901, 904, 906, 907, 916, 917, 925, 926, 1089, 1110, 1164, 1173, 1179, 1190, 1198, 1223, 1269, 1280, 1341, 1469, 1523, 1575, 1576, 1668, 1700, 1713, 1754, 1766, 1843, 1867, 1881, 1892, 2009, 2010, 2012, 2013, 2017, 2020, 2021, 2024, 2029, 2030, 2031, 2033, 2038, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2051, 2053, 2055, 2056, 2061, 2065, 2066, 2067, 2070, 2072, 2073, 2074, 2077, 2082, 2090, 2095, 2096, 2101, 2102, 2106, 2110], "major": [1, 6, 7, 8, 9, 1033, 1924, 2009, 2013, 2047, 2063, 2095, 2099, 2101, 2102], "contain": [1, 2, 3, 5, 11, 14, 15, 22, 27, 28, 29, 31, 33, 34, 36, 38, 39, 43, 46, 51, 53, 61, 62, 64, 65, 70, 73, 83, 88, 150, 154, 191, 195, 208, 290, 311, 313, 315, 319, 321, 471, 483, 544, 603, 607, 686, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 760, 814, 837, 842, 878, 893, 894, 895, 906, 907, 909, 910, 911, 912, 913, 914, 915, 933, 941, 942, 943, 951, 953, 957, 975, 990, 991, 995, 1018, 1019, 1020, 1021, 1022, 1051, 1106, 1140, 1141, 1143, 1149, 1158, 1170, 1171, 1174, 1175, 1227, 1228, 1231, 1232, 1240, 1244, 1260, 1267, 1269, 1270, 1276, 1277, 1280, 1285, 1286, 1289, 1300, 1306, 1307, 1308, 1309, 1311, 1313, 1315, 1316, 1332, 1341, 1359, 1363, 1370, 1409, 1415, 1427, 1436, 1458, 1459, 1465, 1466, 1469, 1474, 1475, 1477, 1482, 1493, 1494, 1515, 1523, 1524, 1525, 1530, 1533, 1539, 1541, 1552, 1556, 1563, 1575, 1582, 1612, 1620, 1621, 1623, 1696, 1703, 1706, 1707, 1713, 1720, 1721, 1728, 1729, 1730, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1761, 1762, 1765, 1767, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1813, 1816, 1841, 1855, 1859, 1919, 1920, 1924, 1941, 1948, 1950, 1952, 1957, 1958, 1959, 1963, 1969, 1973, 2009, 2010, 2012, 2013, 2014, 2017, 2020, 2021, 2025, 2026, 2031, 2032, 2034, 2036, 2038, 2039, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2054, 2055, 2056, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2069, 2070, 2072, 2074, 2076, 2077, 2079, 2080, 2082, 2083, 2086, 2087, 2088, 2092, 2094, 2096, 2097, 2098, 2099, 2101, 2102, 2105, 2106, 2107, 2108, 2109, 2110], "build": [1, 2, 3, 8, 9, 14, 15, 27, 29, 34, 43, 50, 62, 1269, 1279, 1523, 1570, 1594, 1629, 2009, 2010, 2020, 2033, 2039, 2061, 2065, 2067, 2073, 2082, 2083, 2089, 2090, 2093, 2096, 2108], "basic": [1, 3, 7, 9, 12, 29, 32, 45, 62, 64, 65, 1167, 1168, 1169, 1276, 1342, 1713, 1799, 2009, 2014, 2033, 2040, 2042, 2043, 2048, 2064, 2073, 2081, 2082, 2097, 2099, 2101], "jacobian": [1, 34, 54, 55, 57, 58, 894, 899, 909, 912, 914, 915, 920, 921, 1168, 1169, 1170, 1174, 1175, 1973, 2039, 2044, 2048], "hessian": [1, 54, 57, 58, 910, 913, 1168, 1169, 2037, 2045], "etc": [1, 3, 5, 11, 12, 22, 23, 27, 32, 34, 36, 45, 46, 50, 51, 53, 860, 861, 862, 929, 975, 987, 1186, 1266, 1269, 1458, 1523, 1713, 1845, 2008, 2012, 2013, 2017, 2020, 2044, 2045, 2046, 2051, 2053, 2059, 2061, 2063, 2064, 2067, 2072, 2077, 2079, 2082, 2086, 2093, 2097, 2106], "user": [1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 22, 23, 27, 28, 29, 32, 33, 34, 35, 36, 38, 42, 45, 46, 49, 51, 53, 54, 57, 58, 61, 62, 64, 77, 84, 150, 335, 486, 732, 738, 739, 740, 745, 746, 756, 764, 794, 797, 799, 838, 855, 862, 863, 894, 901, 904, 906, 907, 915, 1009, 1042, 1157, 1163, 1164, 1184, 1269, 1306, 1341, 1523, 1567, 1569, 1570, 1571, 1681, 1706, 1707, 1713, 1720, 1721, 1730, 1744, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 2008, 2009, 2010, 2012, 2013, 2017, 2020, 2025, 2029, 2031, 2032, 2038, 2039, 2040, 2042, 2044, 2048, 2049, 2050, 2051, 2053, 2056, 2059, 2061, 2063, 2065, 2066, 2067, 2069, 2072, 2073, 2077, 2079, 2080, 2081, 2082, 2084, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2104, 2106, 2108, 2109], "input": [1, 2, 3, 5, 9, 11, 12, 15, 20, 22, 23, 26, 27, 28, 31, 32, 33, 34, 35, 38, 51, 53, 54, 55, 56, 57, 58, 59, 62, 64, 71, 72, 73, 77, 80, 82, 84, 85, 86, 88, 150, 260, 280, 301, 401, 483, 499, 517, 609, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 720, 728, 729, 734, 735, 738, 739, 740, 741, 742, 743, 745, 746, 756, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 802, 814, 817, 819, 837, 838, 839, 840, 858, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 901, 902, 904, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 933, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 956, 957, 959, 961, 962, 964, 965, 966, 967, 968, 969, 970, 972, 973, 984, 987, 988, 989, 990, 991, 992, 993, 994, 995, 1005, 1021, 1048, 1049, 1051, 1085, 1086, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1175, 1181, 1182, 1210, 1211, 1212, 1213, 1214, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1251, 1254, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1269, 1272, 1273, 1276, 1277, 1281, 1283, 1285, 1286, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1392, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1710, 1711, 1712, 1713, 1720, 1721, 1731, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1747, 1748, 1749, 1750, 1754, 1755, 1756, 1763, 1766, 1767, 1768, 1770, 1771, 1773, 1775, 1776, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1798, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1831, 1833, 1835, 1837, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1856, 1857, 1858, 1861, 1862, 1863, 1864, 1867, 1874, 1875, 1876, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1934, 1935, 1936, 1937, 1938, 1940, 1942, 1943, 1944, 1945, 1948, 1949, 1951, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1976, 1977, 2007, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2020, 2023, 2031, 2032, 2033, 2037, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2050, 2051, 2054, 2055, 2056, 2058, 2059, 2061, 2063, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2073, 2077, 2078, 2080, 2081, 2084, 2087, 2088, 2090, 2093, 2095, 2096, 2097, 2098, 2099, 2103, 2106, 2107, 2108, 2109], "set": [1, 2, 3, 5, 8, 9, 13, 14, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 34, 36, 38, 43, 45, 46, 48, 49, 50, 51, 53, 56, 57, 60, 61, 62, 64, 79, 81, 88, 150, 154, 254, 330, 445, 446, 447, 448, 449, 458, 496, 499, 520, 580, 581, 680, 735, 741, 743, 760, 779, 785, 792, 793, 794, 797, 815, 816, 817, 820, 821, 822, 825, 826, 842, 855, 859, 860, 862, 863, 866, 879, 891, 893, 894, 901, 905, 906, 907, 909, 910, 911, 912, 913, 914, 915, 917, 918, 940, 952, 957, 968, 972, 973, 981, 989, 1002, 1006, 1016, 1031, 1040, 1052, 1053, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1107, 1108, 1109, 1158, 1163, 1172, 1178, 1185, 1232, 1249, 1250, 1269, 1273, 1277, 1279, 1281, 1283, 1285, 1286, 1305, 1306, 1309, 1315, 1322, 1324, 1326, 1327, 1339, 1340, 1341, 1342, 1356, 1359, 1362, 1384, 1388, 1389, 1390, 1405, 1427, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1467, 1474, 1477, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1508, 1510, 1514, 1515, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1533, 1537, 1538, 1539, 1555, 1556, 1563, 1567, 1569, 1571, 1572, 1573, 1585, 1586, 1594, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1616, 1617, 1622, 1629, 1633, 1640, 1641, 1650, 1651, 1652, 1665, 1667, 1673, 1681, 1700, 1712, 1713, 1715, 1716, 1728, 1734, 1763, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1823, 1830, 1832, 1836, 1838, 1839, 1847, 1848, 1859, 1860, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1888, 1904, 1909, 1918, 1919, 1939, 1949, 1950, 1951, 1952, 1961, 1964, 1965, 1968, 1969, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2008, 2010, 2012, 2013, 2014, 2017, 2019, 2022, 2023, 2024, 2025, 2026, 2029, 2032, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2059, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2070, 2071, 2072, 2082, 2084, 2085, 2087, 2088, 2090, 2092, 2096, 2098, 2099, 2100, 2103, 2104, 2105, 2107, 2108, 2109, 2111], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 70, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 150, 154, 254, 258, 323, 335, 458, 486, 487, 488, 513, 515, 545, 614, 617, 680, 687, 729, 741, 742, 743, 748, 757, 758, 760, 768, 769, 772, 773, 774, 785, 791, 792, 793, 794, 797, 799, 814, 820, 823, 824, 826, 837, 842, 855, 859, 860, 862, 863, 864, 880, 881, 890, 891, 892, 894, 896, 897, 899, 900, 901, 904, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 925, 926, 929, 932, 943, 960, 973, 976, 982, 988, 995, 1006, 1008, 1018, 1020, 1022, 1029, 1030, 1040, 1048, 1050, 1054, 1056, 1058, 1062, 1063, 1089, 1106, 1107, 1110, 1111, 1124, 1126, 1127, 1128, 1129, 1142, 1145, 1158, 1163, 1164, 1165, 1166, 1168, 1169, 1170, 1173, 1174, 1175, 1178, 1179, 1181, 1182, 1183, 1184, 1188, 1194, 1196, 1197, 1206, 1208, 1212, 1213, 1223, 1226, 1231, 1232, 1260, 1266, 1267, 1269, 1270, 1272, 1273, 1275, 1276, 1280, 1281, 1283, 1285, 1286, 1291, 1294, 1301, 1309, 1312, 1316, 1317, 1322, 1325, 1328, 1329, 1333, 1339, 1341, 1358, 1359, 1361, 1371, 1381, 1382, 1416, 1418, 1419, 1420, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1459, 1460, 1464, 1465, 1466, 1467, 1470, 1471, 1474, 1479, 1480, 1481, 1483, 1489, 1491, 1492, 1493, 1496, 1497, 1498, 1509, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1528, 1529, 1530, 1532, 1533, 1534, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1551, 1552, 1555, 1560, 1563, 1566, 1567, 1568, 1569, 1570, 1571, 1573, 1574, 1576, 1587, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1624, 1625, 1640, 1654, 1655, 1656, 1674, 1681, 1700, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1715, 1716, 1718, 1733, 1754, 1755, 1758, 1761, 1766, 1768, 1772, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1802, 1803, 1805, 1809, 1811, 1820, 1824, 1832, 1836, 1846, 1852, 1855, 1867, 1869, 1871, 1896, 1899, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1918, 1919, 1920, 1924, 1939, 1943, 1946, 1948, 1956, 1957, 1960, 1962, 1964, 1968, 1969, 1973, 1978, 1985, 1986, 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2017, 2019, 2020, 2021, 2022, 2023, 2025, 2026, 2027, 2029, 2030, 2031, 2032, 2033, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2070, 2072, 2073, 2074, 2077, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2103, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2114], "lambda": [1, 12, 22, 29, 34, 56, 59, 61, 62, 64, 67, 72, 73, 76, 258, 487, 488, 925, 926, 961, 1165, 1170, 1174, 1175, 1184, 1305, 1306, 1307, 1308, 1341, 1478, 1561, 1573, 1670, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1793, 1799, 1801, 1804, 1898, 1973, 2014, 2039, 2044, 2045, 2063, 2064, 2072, 2084, 2099, 2109], "captur": [1, 11, 12, 15, 50, 51, 62, 64, 67, 72, 73, 88, 680, 973, 987, 1006, 1008, 1040, 1046, 1051, 1272, 1382, 1777, 1778, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1978, 2010, 2014, 2019, 2044, 2045, 2049, 2058, 2059, 2061, 2064, 2067, 2088, 2089, 2090, 2093, 2095, 2097, 2099, 2106, 2108], "f": [1, 10, 23, 27, 32, 33, 34, 36, 37, 42, 43, 50, 51, 54, 55, 58, 59, 61, 62, 64, 65, 173, 258, 335, 377, 608, 899, 900, 940, 995, 1124, 1126, 1133, 1142, 1164, 1165, 1167, 1168, 1169, 1170, 1174, 1175, 1223, 1269, 1277, 1280, 1281, 1341, 1488, 1490, 1491, 1492, 1494, 1523, 1573, 1583, 1596, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1620, 1621, 1624, 1625, 1631, 1665, 1667, 1668, 1681, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1855, 1930, 1973, 2010, 2012, 2013, 2017, 2025, 2030, 2031, 2039, 2042, 2044, 2046, 2048, 2049, 2051, 2057, 2059, 2060, 2061, 2064, 2065, 2072, 2077, 2082, 2084, 2094, 2095, 2099, 2107, 2109], "three": [1, 2, 6, 9, 27, 31, 32, 53, 55, 58, 62, 87, 889, 1104, 1106, 1223, 1232, 1313, 1316, 1317, 1318, 1333, 1361, 1434, 1452, 1455, 1492, 1495, 1518, 1681, 1727, 1768, 1799, 1867, 2013, 2039, 2042, 2043, 2044, 2061, 2064, 2065, 2067, 2072, 2074, 2077, 2082, 2096, 2105], "anoth": [1, 5, 7, 12, 22, 23, 27, 29, 34, 35, 36, 48, 50, 53, 62, 486, 983, 1006, 1008, 1009, 1011, 1157, 1181, 1184, 1190, 1204, 1205, 1279, 1305, 1306, 1309, 1333, 1465, 1466, 1524, 1533, 1703, 1720, 1721, 1728, 1863, 1979, 2010, 2012, 2013, 2019, 2021, 2025, 2038, 2039, 2041, 2042, 2044, 2047, 2051, 2053, 2055, 2057, 2064, 2065, 2073, 2074, 2077, 2083, 2086, 2093, 2094, 2096, 2099, 2101, 2104, 2107, 2110], "constant": [1, 12, 22, 50, 51, 62, 64, 65, 69, 70, 73, 75, 744, 775, 821, 822, 976, 1089, 1146, 1147, 1148, 1191, 1208, 1266, 1269, 1273, 1285, 1317, 1342, 1447, 1448, 1449, 1466, 1469, 1476, 1532, 1555, 1572, 1575, 1626, 1629, 1668, 1728, 1775, 1791, 1796, 1799, 1946, 2011, 2013, 2038, 2044, 2051, 2055, 2061, 2063, 2077, 2096, 2098, 2099, 2101, 2108], "boolean": [1, 12, 14, 34, 45, 62, 64, 72, 73, 400, 402, 890, 906, 907, 916, 945, 947, 948, 950, 979, 987, 1008, 1009, 1011, 1111, 1184, 1191, 1198, 1212, 1226, 1258, 1259, 1260, 1261, 1262, 1265, 1294, 1342, 1358, 1363, 1420, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1523, 1538, 1563, 1567, 1681, 1712, 1730, 1733, 1823, 1918, 1919, 1943, 1968, 1969, 1978, 1979, 2012, 2014, 2042, 2044, 2079, 2080, 2082, 2083, 2084, 2086, 2096, 2099], "flag": [1, 2, 5, 14, 27, 28, 35, 46, 49, 50, 53, 56, 58, 62, 735, 874, 909, 911, 916, 917, 918, 942, 951, 964, 965, 966, 973, 980, 981, 1036, 1157, 1163, 1165, 1166, 1168, 1169, 1170, 1174, 1175, 1227, 1228, 1250, 1257, 1341, 1361, 1529, 1587, 1640, 1641, 1713, 1730, 1733, 1763, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1867, 1873, 1899, 1909, 1948, 1961, 1973, 2009, 2010, 2013, 2025, 2029, 2039, 2042, 2044, 2054, 2055, 2056, 2061, 2064, 2067, 2082, 2083, 2099, 2100, 2107, 2108], "inform": [1, 2, 3, 4, 5, 7, 8, 9, 17, 18, 19, 21, 22, 23, 27, 28, 29, 31, 32, 33, 36, 37, 38, 41, 45, 46, 50, 51, 53, 55, 60, 62, 79, 191, 208, 255, 313, 321, 487, 488, 498, 515, 517, 618, 680, 735, 911, 916, 917, 920, 921, 925, 926, 944, 1110, 1141, 1143, 1164, 1198, 1206, 1266, 1269, 1286, 1299, 1306, 1315, 1450, 1451, 1452, 1453, 1454, 1455, 1483, 1493, 1519, 1520, 1521, 1523, 1529, 1538, 1539, 1551, 1567, 1569, 1571, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1621, 1640, 1681, 1700, 1701, 1702, 1712, 1713, 1754, 1766, 1775, 1790, 1822, 1849, 1867, 1873, 1899, 1961, 2010, 2013, 2017, 2019, 2020, 2032, 2033, 2039, 2041, 2042, 2043, 2044, 2050, 2051, 2054, 2059, 2061, 2064, 2066, 2067, 2080, 2082, 2083, 2084, 2088, 2092, 2095, 2096, 2098, 2099, 2102, 2106, 2108, 2110, 2112], "between": [1, 2, 3, 7, 11, 17, 18, 23, 27, 32, 34, 35, 45, 46, 48, 50, 51, 53, 60, 61, 62, 196, 486, 513, 583, 584, 585, 587, 588, 607, 617, 689, 690, 691, 695, 696, 760, 772, 773, 774, 802, 858, 866, 885, 894, 899, 910, 912, 913, 914, 920, 921, 961, 973, 995, 1008, 1015, 1017, 1064, 1069, 1083, 1084, 1089, 1106, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1157, 1158, 1181, 1183, 1194, 1223, 1230, 1266, 1269, 1281, 1305, 1306, 1328, 1333, 1416, 1435, 1436, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1461, 1462, 1463, 1467, 1469, 1474, 1483, 1489, 1499, 1500, 1501, 1502, 1503, 1504, 1514, 1516, 1517, 1518, 1523, 1526, 1527, 1528, 1532, 1552, 1555, 1556, 1557, 1572, 1573, 1575, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1628, 1654, 1655, 1656, 1670, 1687, 1697, 1713, 1720, 1721, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1798, 1799, 1805, 1807, 1816, 1824, 1828, 1829, 1834, 1835, 1839, 1864, 1917, 1918, 1919, 1920, 1924, 1945, 1946, 1968, 1969, 2010, 2012, 2013, 2014, 2020, 2029, 2032, 2038, 2039, 2041, 2042, 2043, 2048, 2049, 2051, 2053, 2055, 2056, 2058, 2059, 2061, 2063, 2065, 2067, 2068, 2072, 2074, 2077, 2079, 2080, 2082, 2087, 2093, 2096, 2106, 2108], "well": [1, 3, 5, 7, 9, 14, 23, 27, 45, 50, 53, 58, 59, 62, 63, 617, 791, 822, 825, 862, 1048, 1168, 1169, 1269, 1273, 1280, 1285, 1305, 1306, 1307, 1309, 1315, 1328, 1333, 1380, 1437, 1438, 1439, 1458, 1493, 1523, 1563, 1650, 1651, 1652, 1713, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1823, 1957, 2010, 2013, 2020, 2030, 2032, 2038, 2039, 2042, 2044, 2045, 2047, 2048, 2051, 2053, 2055, 2059, 2061, 2064, 2067, 2070, 2072, 2074, 2077, 2081, 2082, 2086, 2090, 2094, 2096, 2098, 2099, 2100, 2104, 2108], "relat": [1, 6, 7, 9, 22, 27, 36, 50, 51, 52, 53, 58, 64, 65, 70, 73, 79, 680, 980, 1181, 1223, 1309, 1469, 1555, 1575, 1713, 1813, 1962, 2032, 2039, 2056, 2063, 2064, 2072, 2077, 2078, 2084, 2090, 2099, 2109], "mechan": [1, 8, 27, 29, 39, 43, 45, 51, 62, 880, 916, 917, 1110, 1269, 1523, 1584, 1681, 1766, 1939, 2009, 2029, 2032, 2044, 2047, 2050, 2051, 2070, 2072, 2073, 2093, 2096], "confus": [1, 8, 64, 1269, 1523, 2039, 2042, 2064, 2077, 2100], "spars": [1, 11, 190, 191, 208, 218, 323, 328, 342, 343, 435, 543, 544, 545, 546, 581, 583, 584, 585, 586, 587, 588, 614, 689, 745, 746, 920, 921, 1080, 1210, 1234, 1254, 1342, 1364, 1374, 1419, 1465, 1466, 1557, 1620, 1621, 1646, 1779, 1794, 1813, 1861, 1894, 1899, 1906, 1907, 1908, 1909, 1910, 1911, 1916, 1925, 1945, 1961, 1962, 2009, 2011, 2015, 2020, 2037, 2054, 2055, 2062, 2069, 2080, 2081, 2084, 2095, 2103], "param": [1, 2, 11, 29, 31, 34, 37, 45, 53, 55, 57, 60, 62, 488, 764, 795, 1163, 1173, 1201, 1269, 1288, 1523, 1529, 1533, 1534, 1711, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 2011, 2023, 2037, 2038, 2042, 2043, 2063, 2109], "receiv": [1, 7, 9, 22, 27, 29, 31, 34, 51, 58, 61, 1062, 1269, 1523, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1808, 2013, 2026, 2029, 2038, 2039, 2053, 2065, 2072, 2073, 2074, 2077, 2095, 2108, 2110], "dure": [1, 5, 14, 18, 23, 27, 29, 36, 37, 39, 45, 50, 53, 61, 62, 64, 71, 81, 83, 84, 335, 488, 503, 504, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 793, 827, 890, 891, 901, 904, 906, 907, 1006, 1040, 1050, 1051, 1063, 1064, 1084, 1280, 1282, 1283, 1285, 1341, 1431, 1437, 1438, 1439, 1459, 1460, 1465, 1466, 1485, 1486, 1487, 1542, 1563, 1569, 1571, 1614, 1620, 1621, 1681, 1703, 1713, 1715, 1716, 1761, 1775, 1808, 1905, 1950, 1952, 2012, 2017, 2019, 2020, 2023, 2025, 2026, 2030, 2032, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2050, 2051, 2054, 2055, 2059, 2061, 2064, 2066, 2067, 2070, 2072, 2074, 2084, 2093, 2094, 2096, 2099, 2105, 2106, 2107, 2108, 2110], "accumul": [1, 2, 53, 150, 290, 313, 318, 319, 321, 471, 488, 686, 894, 915, 1184, 1339, 1713, 1778, 1779, 1961, 2010, 2011, 2026, 2039, 2042, 2043, 2046, 2054, 2063, 2068, 2072, 2073, 2077, 2095, 2096, 2099, 2103, 2108], "initi": [1, 2, 3, 4, 8, 17, 18, 19, 22, 23, 29, 31, 32, 33, 36, 38, 45, 46, 49, 50, 53, 80, 88, 496, 499, 580, 712, 713, 714, 715, 716, 717, 720, 730, 731, 732, 733, 745, 746, 756, 760, 764, 862, 863, 880, 929, 983, 1008, 1016, 1037, 1042, 1043, 1046, 1047, 1073, 1107, 1108, 1109, 1216, 1245, 1267, 1269, 1282, 1283, 1341, 1342, 1359, 1404, 1437, 1438, 1439, 1440, 1442, 1453, 1454, 1455, 1459, 1465, 1466, 1474, 1475, 1477, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1523, 1531, 1538, 1539, 1540, 1541, 1563, 1573, 1620, 1703, 1712, 1713, 1715, 1716, 1727, 1730, 1733, 1761, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1863, 1864, 1865, 1906, 1907, 1908, 1909, 1910, 1911, 1939, 1978, 1990, 1992, 1993, 1995, 1998, 2009, 2011, 2012, 2013, 2021, 2026, 2032, 2037, 2039, 2042, 2043, 2044, 2047, 2050, 2057, 2059, 2061, 2063, 2064, 2065, 2067, 2071, 2072, 2073, 2093, 2096, 2106, 2107, 2114], "memori": [1, 2, 3, 5, 11, 19, 23, 26, 29, 31, 34, 35, 51, 53, 57, 62, 150, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 233, 240, 254, 267, 297, 325, 331, 337, 339, 340, 393, 445, 446, 447, 448, 449, 458, 463, 486, 499, 500, 524, 525, 580, 603, 617, 734, 763, 879, 881, 894, 901, 904, 906, 920, 921, 927, 955, 970, 973, 1006, 1007, 1010, 1013, 1014, 1016, 1030, 1031, 1040, 1041, 1044, 1048, 1050, 1051, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1064, 1070, 1071, 1072, 1076, 1106, 1107, 1108, 1109, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1169, 1171, 1175, 1269, 1287, 1315, 1341, 1378, 1380, 1381, 1389, 1466, 1493, 1494, 1523, 1567, 1568, 1569, 1571, 1681, 1699, 1713, 1720, 1721, 1727, 1754, 1766, 1773, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1832, 1833, 1835, 1836, 1837, 1838, 1863, 1939, 1961, 1973, 1986, 2007, 2009, 2010, 2021, 2023, 2029, 2031, 2032, 2033, 2039, 2044, 2047, 2053, 2059, 2061, 2065, 2066, 2067, 2072, 2077, 2079, 2080, 2081, 2083, 2084, 2093, 2098, 2099, 2101, 2105, 2107], "overlap": [1, 22, 23, 27, 29, 31, 53, 62, 486, 680, 879, 920, 921, 1109, 1164, 1266, 1469, 1575, 1713, 1920, 1961, 2042, 2043, 2047, 2080, 2095, 2099, 2107], "dens": [1, 31, 218, 545, 546, 583, 584, 585, 586, 587, 588, 942, 951, 1227, 1228, 1289, 1342, 1794, 1894, 1897, 1901, 1902, 1905, 1906, 1907, 1908, 1910, 1911, 1916, 1925, 1961, 2032, 2055, 2077, 2080, 2095], "stride": [1, 11, 51, 138, 254, 339, 445, 446, 447, 448, 449, 499, 520, 544, 581, 583, 584, 585, 587, 588, 617, 712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 730, 731, 738, 739, 740, 741, 742, 743, 768, 769, 772, 773, 774, 782, 783, 866, 879, 942, 951, 1107, 1109, 1119, 1124, 1142, 1158, 1161, 1162, 1184, 1197, 1227, 1228, 1234, 1269, 1279, 1283, 1289, 1340, 1356, 1374, 1432, 1433, 1434, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1490, 1491, 1492, 1499, 1500, 1501, 1502, 1503, 1504, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1535, 1575, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1623, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1699, 1713, 1772, 1828, 1829, 1832, 1834, 1835, 1836, 1838, 1839, 1846, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1898, 1901, 1945, 1950, 1952, 1971, 2006, 2011, 2014, 2017, 2030, 2032, 2061, 2062, 2072, 2077, 2079, 2080, 2082, 2083, 2084, 2095, 2096, 2097, 2098, 2099, 2103, 2108], "otherwis": [1, 2, 3, 5, 7, 9, 11, 14, 22, 27, 28, 35, 38, 50, 53, 54, 58, 62, 88, 209, 321, 328, 332, 336, 338, 342, 343, 495, 504, 560, 580, 581, 583, 603, 617, 680, 686, 687, 688, 689, 690, 693, 695, 696, 697, 699, 735, 760, 768, 769, 784, 794, 817, 820, 821, 841, 862, 863, 866, 893, 899, 906, 907, 911, 920, 940, 941, 957, 1046, 1106, 1112, 1145, 1157, 1183, 1184, 1197, 1200, 1260, 1266, 1269, 1272, 1276, 1282, 1291, 1315, 1330, 1339, 1341, 1342, 1357, 1362, 1367, 1369, 1370, 1372, 1374, 1375, 1414, 1417, 1433, 1434, 1456, 1458, 1461, 1462, 1463, 1467, 1474, 1478, 1479, 1480, 1481, 1483, 1493, 1509, 1523, 1527, 1528, 1529, 1530, 1531, 1533, 1539, 1540, 1542, 1555, 1561, 1563, 1566, 1567, 1569, 1571, 1572, 1573, 1597, 1598, 1631, 1633, 1634, 1638, 1674, 1685, 1713, 1727, 1732, 1733, 1754, 1755, 1757, 1758, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1794, 1811, 1813, 1821, 1823, 1830, 1839, 1846, 1859, 1867, 1874, 1918, 1919, 1920, 1923, 1956, 1957, 1958, 1968, 1969, 1976, 2008, 2010, 2012, 2013, 2017, 2020, 2023, 2030, 2032, 2038, 2044, 2045, 2053, 2059, 2060, 2061, 2067, 2068, 2070, 2071, 2072, 2074, 2078, 2079, 2080, 2081, 2082, 2084, 2090, 2109], "rowmajor": [1, 1713], "contigu": [1, 11, 23, 29, 331, 499, 520, 617, 1468, 1526, 1670, 1713, 1720, 1721, 1840, 1846, 1924, 2011, 2031, 2032, 2062, 2069, 2077, 2079, 2081, 2096], "create_graph": [1, 150, 488, 894, 909, 910, 911, 912, 913, 914, 915, 2011, 2038, 2044], "preserv": [1, 5, 12, 22, 34, 50, 53, 62, 88, 499, 779, 785, 855, 877, 880, 1147, 1148, 1164, 1197, 1269, 1273, 1280, 1523, 1524, 1533, 1576, 1640, 1700, 1776, 1855, 1859, 1896, 1939, 1966, 2010, 2023, 2030, 2032, 2037, 2042, 2045, 2055, 2058, 2059, 2061, 2072, 2077, 2080, 2093, 2098], "replac": [1, 14, 22, 23, 27, 29, 44, 46, 50, 53, 55, 56, 57, 58, 59, 62, 84, 85, 87, 119, 421, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 747, 814, 839, 859, 964, 1051, 1106, 1163, 1164, 1184, 1274, 1277, 1287, 1359, 1360, 1409, 1413, 1555, 1566, 1703, 1729, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1763, 1765, 1823, 1920, 1924, 1948, 2010, 2011, 2013, 2023, 2042, 2044, 2045, 2048, 2050, 2053, 2057, 2061, 2062, 2064, 2067, 2084, 2094, 2095, 2099, 2101, 2107], "preexist": [1, 2066, 2095, 2098], "behavior": [1, 2, 7, 11, 14, 19, 21, 23, 27, 28, 29, 31, 34, 35, 38, 43, 46, 50, 51, 53, 57, 58, 61, 62, 86, 254, 319, 471, 499, 513, 544, 617, 687, 785, 793, 826, 879, 893, 906, 907, 949, 955, 957, 959, 972, 1005, 1101, 1106, 1107, 1108, 1109, 1151, 1159, 1160, 1164, 1198, 1269, 1280, 1283, 1285, 1315, 1322, 1326, 1339, 1340, 1341, 1356, 1364, 1371, 1459, 1462, 1483, 1493, 1523, 1539, 1563, 1576, 1594, 1629, 1699, 1700, 1703, 1704, 1713, 1714, 1765, 1767, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1817, 1823, 1839, 1846, 1887, 1924, 1946, 1961, 2008, 2010, 2014, 2015, 2017, 2019, 2021, 2030, 2032, 2034, 2040, 2042, 2044, 2045, 2054, 2055, 2056, 2061, 2063, 2064, 2065, 2068, 2069, 2072, 2078, 2081, 2095, 2096, 2098, 2100, 2111], "let": [1, 7, 8, 22, 23, 32, 34, 46, 58, 62, 486, 496, 965, 966, 968, 1184, 1193, 1223, 1269, 1289, 1299, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1315, 1316, 1319, 1321, 1328, 1330, 1332, 1333, 1523, 1713, 1727, 1939, 2017, 2030, 2031, 2039, 2042, 2043, 2044, 2045, 2047, 2051, 2053, 2054, 2055, 2056, 2057, 2064, 2073, 2074, 2077, 2082, 2093, 2094, 2096, 2098, 2099, 2100, 2101, 2102, 2107, 2108, 2111], "first": [1, 4, 5, 7, 9, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 38, 42, 45, 46, 50, 51, 53, 59, 62, 64, 73, 76, 216, 254, 286, 290, 589, 610, 686, 689, 691, 694, 760, 793, 794, 814, 855, 858, 860, 875, 876, 885, 890, 891, 892, 893, 895, 906, 907, 915, 920, 929, 938, 940, 941, 945, 946, 948, 949, 950, 953, 955, 957, 971, 1005, 1008, 1019, 1094, 1096, 1097, 1098, 1103, 1106, 1111, 1124, 1126, 1145, 1160, 1165, 1166, 1168, 1169, 1170, 1174, 1175, 1182, 1197, 1212, 1223, 1226, 1234, 1235, 1236, 1246, 1258, 1267, 1277, 1282, 1283, 1289, 1294, 1299, 1302, 1309, 1325, 1328, 1335, 1336, 1338, 1341, 1342, 1358, 1364, 1367, 1370, 1371, 1372, 1374, 1392, 1409, 1415, 1420, 1423, 1427, 1433, 1434, 1440, 1451, 1452, 1454, 1455, 1465, 1466, 1468, 1473, 1474, 1488, 1491, 1492, 1493, 1508, 1515, 1517, 1518, 1539, 1552, 1611, 1699, 1703, 1713, 1720, 1721, 1730, 1731, 1733, 1744, 1754, 1760, 1780, 1781, 1782, 1783, 1784, 1790, 1793, 1794, 1798, 1802, 1805, 1807, 1813, 1823, 1824, 1850, 1851, 1859, 1867, 1886, 1901, 1904, 1909, 1940, 1941, 1945, 1950, 1952, 1958, 1967, 1970, 1973, 1975, 1978, 1992, 2008, 2010, 2012, 2013, 2017, 2020, 2024, 2029, 2030, 2032, 2038, 2039, 2042, 2044, 2046, 2047, 2048, 2051, 2053, 2054, 2055, 2056, 2057, 2059, 2061, 2063, 2065, 2066, 2067, 2072, 2073, 2074, 2076, 2077, 2078, 2082, 2087, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2106, 2107, 2108, 2109], "accord": [1, 9, 29, 32, 33, 36, 50, 797, 862, 863, 881, 943, 955, 1104, 1233, 1330, 1363, 1409, 1427, 1466, 1535, 1681, 1703, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1799, 1805, 1824, 1887, 1912, 1940, 1974, 2013, 2026, 2031, 2032, 2051, 2055, 2057, 2064, 2074, 2084], "retain": [1, 9, 27, 693, 695, 696, 699, 875, 876, 881, 1273, 1291, 1322, 1326, 1339, 1357, 1367, 1369, 1370, 1372, 1375, 1414, 1415, 1416, 1417, 1443, 1768, 1821, 1824, 1855, 1918, 1919, 1923, 1949, 1950, 1951, 1952, 1968, 1969, 2029, 2053, 2077], "over": [1, 9, 11, 12, 22, 23, 27, 28, 32, 34, 36, 43, 46, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 72, 73, 76, 481, 680, 697, 738, 739, 740, 741, 742, 743, 766, 767, 772, 773, 774, 782, 783, 893, 906, 907, 929, 933, 960, 1017, 1062, 1064, 1069, 1084, 1085, 1086, 1087, 1088, 1106, 1163, 1167, 1169, 1173, 1175, 1181, 1182, 1223, 1231, 1269, 1285, 1302, 1322, 1326, 1338, 1339, 1341, 1349, 1369, 1371, 1417, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1466, 1469, 1470, 1471, 1477, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1495, 1511, 1514, 1515, 1516, 1517, 1518, 1523, 1526, 1527, 1528, 1530, 1537, 1538, 1552, 1555, 1556, 1558, 1563, 1572, 1575, 1588, 1589, 1590, 1591, 1592, 1593, 1596, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1624, 1625, 1641, 1647, 1650, 1651, 1652, 1654, 1655, 1656, 1665, 1666, 1673, 1681, 1707, 1712, 1718, 1729, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1828, 1829, 1844, 1903, 1905, 1918, 1919, 1920, 1923, 1941, 1956, 1968, 1969, 1973, 2013, 2026, 2029, 2030, 2031, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2051, 2053, 2054, 2059, 2063, 2067, 2072, 2073, 2077, 2085, 2086, 2093, 2095, 2096, 2097, 2098, 2099, 2108, 2110, 2111], "time": [1, 3, 4, 7, 8, 9, 14, 22, 23, 27, 28, 29, 31, 34, 35, 36, 42, 45, 46, 48, 50, 51, 53, 58, 61, 62, 64, 74, 75, 88, 290, 313, 486, 487, 493, 617, 680, 685, 686, 687, 688, 689, 690, 691, 694, 745, 746, 756, 760, 764, 768, 769, 799, 801, 824, 842, 878, 915, 925, 926, 927, 928, 934, 936, 941, 953, 961, 963, 973, 988, 995, 1008, 1009, 1011, 1051, 1064, 1084, 1087, 1098, 1120, 1121, 1127, 1128, 1129, 1135, 1146, 1147, 1148, 1156, 1160, 1169, 1170, 1171, 1174, 1175, 1179, 1188, 1198, 1258, 1266, 1269, 1277, 1282, 1285, 1286, 1290, 1295, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1314, 1315, 1316, 1319, 1321, 1325, 1328, 1330, 1332, 1333, 1341, 1342, 1364, 1374, 1382, 1408, 1409, 1411, 1421, 1429, 1430, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1466, 1469, 1470, 1471, 1474, 1485, 1486, 1487, 1493, 1495, 1509, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1535, 1536, 1538, 1539, 1560, 1563, 1575, 1576, 1577, 1578, 1594, 1597, 1598, 1624, 1625, 1670, 1671, 1672, 1689, 1705, 1706, 1707, 1710, 1711, 1712, 1713, 1727, 1728, 1731, 1733, 1767, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1801, 1811, 1812, 1823, 1845, 1851, 1901, 1915, 1920, 1921, 1941, 1973, 1978, 1979, 1992, 2009, 2012, 2013, 2014, 2017, 2019, 2021, 2023, 2029, 2037, 2039, 2041, 2043, 2044, 2046, 2047, 2048, 2050, 2051, 2053, 2055, 2056, 2057, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2068, 2072, 2073, 2074, 2077, 2082, 2088, 2089, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2104, 2105, 2107, 2110], "4": [1, 3, 5, 11, 12, 18, 20, 22, 23, 27, 29, 31, 32, 33, 34, 35, 36, 43, 45, 50, 51, 58, 62, 64, 65, 66, 69, 70, 72, 73, 75, 191, 208, 242, 254, 289, 311, 313, 315, 317, 321, 401, 402, 445, 446, 471, 483, 487, 493, 496, 499, 513, 517, 523, 537, 544, 556, 558, 560, 584, 585, 607, 617, 683, 684, 685, 686, 689, 691, 692, 693, 695, 696, 697, 699, 739, 741, 742, 743, 746, 748, 757, 760, 773, 774, 824, 866, 875, 876, 877, 881, 882, 883, 884, 885, 886, 888, 889, 901, 904, 906, 907, 909, 912, 913, 914, 941, 944, 947, 951, 952, 953, 957, 959, 962, 963, 966, 967, 968, 971, 978, 984, 987, 990, 991, 992, 993, 1005, 1086, 1089, 1096, 1098, 1100, 1101, 1104, 1105, 1106, 1109, 1111, 1121, 1122, 1124, 1126, 1134, 1140, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1154, 1156, 1157, 1160, 1163, 1165, 1173, 1174, 1175, 1184, 1210, 1211, 1212, 1223, 1226, 1230, 1231, 1232, 1233, 1235, 1236, 1240, 1244, 1246, 1258, 1260, 1266, 1275, 1276, 1281, 1283, 1290, 1291, 1292, 1293, 1294, 1295, 1299, 1301, 1302, 1308, 1310, 1312, 1313, 1314, 1317, 1319, 1322, 1324, 1326, 1328, 1330, 1332, 1335, 1336, 1337, 1339, 1340, 1343, 1345, 1346, 1351, 1353, 1354, 1356, 1358, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1392, 1408, 1409, 1417, 1418, 1419, 1420, 1427, 1432, 1443, 1444, 1445, 1447, 1448, 1451, 1452, 1454, 1455, 1463, 1465, 1466, 1467, 1469, 1473, 1474, 1493, 1494, 1519, 1520, 1526, 1528, 1530, 1535, 1536, 1539, 1545, 1546, 1547, 1548, 1549, 1563, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1586, 1594, 1596, 1605, 1608, 1620, 1621, 1629, 1640, 1665, 1668, 1671, 1672, 1699, 1700, 1701, 1702, 1703, 1713, 1720, 1721, 1727, 1733, 1744, 1756, 1757, 1759, 1761, 1767, 1768, 1769, 1771, 1773, 1777, 1790, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1812, 1816, 1817, 1820, 1821, 1823, 1824, 1826, 1830, 1832, 1834, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1850, 1851, 1852, 1854, 1855, 1859, 1871, 1878, 1880, 1881, 1886, 1887, 1889, 1891, 1896, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1920, 1923, 1926, 1927, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1967, 1970, 1971, 1972, 1973, 1974, 1975, 2007, 2010, 2011, 2012, 2013, 2014, 2017, 2020, 2029, 2031, 2032, 2037, 2039, 2040, 2042, 2043, 2044, 2047, 2051, 2053, 2056, 2057, 2059, 2061, 2064, 2065, 2067, 2069, 2072, 2077, 2078, 2080, 2081, 2082, 2083, 2084, 2093, 2095, 2096, 2097, 2099, 2103, 2106, 2108], "fact": [1, 3, 8, 53, 495, 942, 951, 989, 1194, 1223, 1227, 1228, 1305, 1306, 1333, 2010, 2044, 2047, 2048, 2061, 2073, 2077, 2093, 2096, 2098, 2102], "reset": [1, 27, 29, 760, 820, 825, 894, 1006, 1054, 1056, 1070, 1071, 1072, 1269, 1474, 1523, 1538, 1540, 1712, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1813, 1830, 1925, 2026, 2061, 2071], "phase": [1, 23, 793, 1305, 1306, 1805, 1924, 2011, 2057, 2099, 2108], "iter": [1, 2, 3, 7, 23, 27, 28, 29, 31, 34, 46, 49, 50, 53, 62, 64, 69, 929, 940, 978, 1018, 1019, 1020, 1021, 1022, 1051, 1054, 1056, 1078, 1182, 1269, 1342, 1523, 1524, 1525, 1533, 1534, 1713, 1714, 1717, 1718, 1719, 1726, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1762, 1764, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1797, 1798, 1799, 1802, 1813, 1882, 1925, 2002, 2011, 2013, 2014, 2017, 2029, 2031, 2038, 2039, 2040, 2042, 2043, 2044, 2047, 2048, 2051, 2063, 2066, 2071, 2076, 2082, 2093, 2096, 2099, 2107, 2108, 2109], "recreat": [1, 2039, 2107], "valid": [1, 24, 26, 27, 29, 34, 43, 45, 50, 51, 62, 84, 88, 747, 748, 757, 791, 964, 976, 982, 1048, 1106, 1184, 1194, 1267, 1269, 1270, 1291, 1305, 1306, 1315, 1316, 1317, 1328, 1333, 1364, 1450, 1451, 1452, 1604, 1605, 1606, 1629, 1703, 1739, 1744, 1748, 1774, 1775, 1795, 1796, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1823, 2010, 2011, 2012, 2013, 2017, 2031, 2032, 2039, 2042, 2044, 2049, 2055, 2061, 2063, 2066, 2072, 2073, 2095, 2096, 2097, 2104, 2108], "altern": [1, 9, 22, 27, 62, 680, 814, 1167, 1168, 1232, 1277, 1341, 1552, 1569, 1571, 1648, 1713, 1773, 1794, 1865, 1866, 1961, 2007, 2008, 2014, 2039, 2049, 2051, 2054, 2055, 2057, 2083, 2099, 2106], "assign": [1, 7, 9, 10, 22, 27, 36, 45, 46, 50, 58, 60, 62, 415, 680, 838, 839, 840, 936, 1267, 1269, 1270, 1427, 1458, 1523, 1530, 1533, 1534, 1714, 1733, 2010, 2014, 2017, 2038, 2044, 2045, 2046, 2047, 2061, 2067, 2073, 2074, 2081, 2082], "never": [1, 5, 7, 23, 27, 45, 46, 50, 51, 221, 222, 796, 880, 961, 973, 1266, 1316, 1317, 1328, 1341, 1713, 1754, 2025, 2039, 2042, 2044, 2064, 2065, 2072, 2080, 2084, 2095], "long": [1, 7, 9, 22, 45, 50, 61, 734, 749, 751, 752, 753, 754, 756, 763, 781, 978, 1164, 1197, 1245, 1370, 1415, 1442, 1458, 1466, 1493, 1494, 1530, 1613, 1774, 1822, 1936, 1940, 1950, 1952, 1957, 2009, 2013, 2020, 2029, 2030, 2031, 2039, 2040, 2042, 2044, 2046, 2053, 2055, 2061, 2064, 2066, 2071, 2079, 2080, 2082, 2083, 2093, 2096, 2099, 2103, 2106, 2108], "hard": [1, 7, 8, 27, 46, 50, 975, 1106, 1342, 1478, 1631, 1632, 2010, 2011, 2012, 2039, 2047, 2061, 2064, 2099, 2100], "matter": [1, 4, 27, 53, 901, 902, 906, 1094, 1106, 1197, 1277, 1280, 1285, 1713, 2032, 2039, 2064], "discourag": [1, 1075, 1079, 1405, 2003, 2039, 2072], "aggress": [1, 53, 1266, 1720, 1721, 2039, 2072, 2099], "buffer": [1, 4, 22, 23, 27, 50, 51, 53, 57, 60, 415, 881, 1019, 1051, 1160, 1163, 1173, 1269, 1277, 1280, 1291, 1341, 1437, 1438, 1439, 1459, 1496, 1497, 1498, 1523, 1563, 1705, 1713, 1715, 1722, 1724, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1761, 1763, 1791, 1793, 1855, 1896, 1943, 2012, 2033, 2039, 2043, 2044, 2051, 2056, 2059, 2061, 2065, 2099], "free": [1, 7, 27, 29, 32, 34, 36, 45, 46, 53, 62, 64, 72, 73, 978, 1057, 1062, 1076, 1272, 1285, 1342, 2023, 2037, 2039, 2042, 2044, 2046, 2047, 2053, 2057, 2061, 2077, 2080, 2093, 2095, 2099, 2110], "reus": [1, 27, 62, 486, 1186, 2039, 2042, 2072, 2093, 2095, 2096, 2099, 2103, 2108, 2110], "effici": [1, 2, 3, 8, 11, 22, 33, 34, 36, 53, 54, 59, 150, 760, 894, 901, 903, 906, 915, 963, 1171, 1181, 1213, 1287, 1325, 1342, 1361, 1427, 1461, 1462, 1463, 1466, 1467, 1474, 1529, 1535, 1536, 1539, 1571, 1582, 1587, 1681, 2023, 2032, 2039, 2043, 2044, 2048, 2052, 2053, 2054, 2063, 2065, 2067, 2072, 2073, 2077, 2080, 2081, 2086, 2096, 2111], "few": [1, 7, 8, 23, 29, 36, 1106, 1164, 1466, 1713, 2008, 2013, 2039, 2042, 2044, 2046, 2049, 2054, 2057, 2061, 2063, 2065, 2067, 2070, 2077, 2081, 2083, 2086, 2095, 2096, 2099, 2101, 2102, 2106, 2108], "occas": [1, 7, 2039], "actual": [1, 8, 29, 36, 38, 50, 51, 53, 58, 62, 258, 680, 790, 988, 1124, 1142, 1194, 1281, 1285, 1453, 1454, 1455, 1629, 1713, 1745, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1799, 2008, 2012, 2013, 2021, 2030, 2039, 2042, 2043, 2044, 2047, 2048, 2053, 2055, 2057, 2059, 2067, 2072, 2079, 2084, 2095, 2096, 2098, 2099, 2101], "signific": [1, 3, 29, 1807, 1867, 2039, 2042, 2077, 2101, 2104], "amount": [1, 2, 3, 4, 7, 22, 27, 29, 36, 45, 62, 921, 1030, 1056, 1058, 1062, 1266, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1469, 1511, 1526, 1575, 1612, 1738, 1739, 1741, 1742, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1986, 2031, 2039, 2041, 2042, 2045, 2046, 2049, 2059, 2072, 2077, 2095, 2102, 2106, 2108, 2110], "unless": [1, 2, 4, 7, 23, 27, 48, 50, 53, 54, 62, 150, 488, 499, 840, 859, 901, 902, 906, 944, 1006, 1040, 1163, 1269, 1313, 1318, 1331, 1341, 1370, 1476, 1523, 1571, 1707, 1744, 1763, 1788, 1794, 1859, 1961, 2013, 2017, 2019, 2032, 2039, 2042, 2047, 2055, 2056, 2061, 2064, 2068, 2095, 2106], "heavi": [1, 27, 2039, 2057, 2098], "pressur": [1, 53, 2039], "might": [1, 2, 3, 4, 9, 14, 15, 18, 27, 29, 31, 33, 34, 45, 50, 58, 61, 62, 85, 87, 150, 486, 544, 894, 1005, 1285, 1286, 1629, 1713, 1714, 1720, 1721, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 2008, 2010, 2026, 2032, 2039, 2041, 2042, 2043, 2044, 2048, 2050, 2055, 2056, 2058, 2061, 2064, 2065, 2067, 2072, 2073, 2074, 2077, 2081, 2083, 2084, 2089, 2093, 2095, 2096, 2098, 2099, 2100, 2101, 2107, 2108], "keep": [1, 3, 5, 7, 22, 23, 29, 31, 33, 36, 45, 47, 50, 51, 53, 64, 486, 1009, 1184, 1341, 1437, 1438, 1439, 1465, 1485, 1486, 1487, 1532, 1563, 1629, 1640, 1713, 1740, 1776, 1844, 1867, 2008, 2009, 2010, 2029, 2031, 2032, 2039, 2042, 2043, 2045, 2046, 2048, 2053, 2059, 2063, 2067, 2072, 2073, 2074, 2095, 2096, 2097, 2098, 2099, 2106, 2110], "track": [1, 33, 36, 47, 50, 51, 64, 79, 80, 81, 86, 335, 916, 927, 1014, 1054, 1056, 1070, 1071, 1072, 1163, 1164, 1184, 1371, 1437, 1438, 1439, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1563, 1713, 1740, 2025, 2026, 2029, 2031, 2032, 2039, 2042, 2044, 2045, 2046, 2050, 2051, 2059, 2063, 2065, 2066, 2073, 2074, 2077, 2095, 2096, 2098, 2099, 2105], "appli": [1, 3, 5, 8, 12, 23, 29, 31, 32, 33, 34, 36, 38, 45, 53, 57, 58, 59, 62, 64, 75, 81, 82, 83, 119, 321, 398, 472, 486, 513, 517, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 735, 738, 739, 740, 741, 742, 743, 758, 760, 766, 767, 768, 769, 770, 771, 772, 773, 774, 780, 781, 782, 783, 784, 810, 811, 812, 813, 840, 859, 901, 902, 904, 905, 906, 907, 917, 918, 920, 946, 949, 975, 987, 990, 1094, 1096, 1101, 1110, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1154, 1163, 1164, 1171, 1174, 1175, 1179, 1184, 1194, 1269, 1273, 1319, 1342, 1359, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1464, 1470, 1471, 1472, 1473, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1537, 1538, 1539, 1542, 1543, 1544, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1578, 1588, 1589, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1622, 1624, 1625, 1626, 1627, 1630, 1632, 1633, 1634, 1635, 1639, 1640, 1641, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1660, 1665, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1703, 1712, 1713, 1720, 1721, 1727, 1728, 1729, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1754, 1755, 1762, 1763, 1765, 1766, 1768, 1778, 1790, 1794, 1807, 1820, 1825, 1826, 1827, 1828, 1829, 1900, 1901, 1903, 1920, 1957, 1958, 1960, 1973, 2010, 2013, 2017, 2020, 2029, 2031, 2033, 2038, 2039, 2042, 2043, 2044, 2045, 2047, 2048, 2051, 2054, 2061, 2063, 2064, 2065, 2067, 2070, 2073, 2077, 2078, 2092, 2093, 2097, 2099, 2100, 2106, 2107], "save": [1, 5, 7, 11, 15, 23, 27, 29, 31, 50, 53, 496, 837, 890, 891, 901, 904, 906, 907, 1171, 1268, 1269, 1274, 1277, 1285, 1287, 1341, 1523, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1801, 1804, 1808, 2009, 2010, 2011, 2017, 2021, 2024, 2031, 2044, 2045, 2047, 2051, 2053, 2055, 2059, 2062, 2063, 2064, 2066, 2072, 2077, 2082, 2087, 2090, 2093, 2096, 2099, 2101, 2110], "modifi": [1, 18, 22, 23, 27, 28, 29, 31, 32, 53, 62, 64, 260, 487, 488, 791, 838, 839, 840, 901, 902, 904, 905, 906, 907, 925, 926, 927, 975, 988, 989, 1223, 1266, 1269, 1272, 1273, 1289, 1465, 1523, 1567, 1569, 1571, 1620, 1621, 1705, 1706, 1707, 1710, 1711, 1713, 1718, 1719, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1794, 1797, 1805, 1886, 2010, 2013, 2030, 2038, 2042, 2044, 2045, 2051, 2056, 2064, 2065, 2067, 2072, 2078, 2081, 2083, 2088, 2095, 2096, 2097, 2098, 2099, 2104, 2108, 2111], "afterward": [1, 29, 50, 1523, 1703, 1713, 2047, 2077], "onc": [1, 7, 9, 15, 22, 23, 27, 28, 29, 31, 32, 34, 35, 37, 38, 45, 53, 56, 58, 61, 62, 901, 902, 903, 904, 906, 907, 909, 911, 928, 1106, 1269, 1273, 1341, 1459, 1523, 1713, 1731, 1733, 1765, 1803, 1807, 1823, 1869, 1873, 1964, 2010, 2013, 2017, 2023, 2026, 2029, 2038, 2039, 2041, 2042, 2044, 2047, 2048, 2050, 2051, 2063, 2064, 2077, 2082, 2093, 2096, 2097, 2099, 2105], "start": [1, 3, 4, 8, 9, 22, 23, 27, 29, 34, 36, 42, 44, 45, 46, 48, 53, 57, 61, 62, 233, 402, 433, 434, 496, 538, 698, 866, 895, 937, 938, 978, 1054, 1056, 1068, 1070, 1071, 1128, 1129, 1145, 1160, 1182, 1267, 1282, 1295, 1340, 1356, 1418, 1419, 1427, 1432, 1433, 1434, 1466, 1468, 1516, 1517, 1518, 1524, 1526, 1621, 1668, 1713, 1735, 1739, 1741, 1754, 1777, 1799, 1805, 1839, 1869, 1879, 1892, 1906, 1907, 1908, 1910, 1911, 2008, 2009, 2011, 2012, 2017, 2020, 2029, 2031, 2039, 2040, 2042, 2043, 2044, 2046, 2047, 2051, 2052, 2053, 2057, 2061, 2063, 2066, 2067, 2072, 2073, 2074, 2076, 2077, 2092, 2093, 2095, 2096, 2099, 2103, 2105], "sure": [1, 7, 9, 22, 27, 29, 35, 37, 46, 49, 56, 62, 862, 863, 894, 1157, 1273, 1285, 1286, 1342, 1681, 1713, 1766, 1801, 1943, 2013, 2030, 2039, 2043, 2046, 2048, 2057, 2061, 2066, 2067, 2072, 2073, 2074, 2077, 2079, 2082, 2099, 2101, 2108], "been": [1, 5, 7, 9, 11, 22, 23, 27, 28, 31, 32, 33, 34, 36, 38, 45, 49, 50, 56, 57, 62, 84, 486, 488, 680, 760, 901, 902, 906, 978, 1009, 1011, 1016, 1044, 1047, 1105, 1110, 1164, 1272, 1273, 1279, 1284, 1341, 1404, 1474, 1481, 1493, 1539, 1594, 1629, 1713, 1720, 1721, 1730, 1735, 1739, 1741, 1761, 1762, 1777, 1797, 1798, 1799, 1805, 1807, 1823, 1920, 1936, 1964, 1975, 1979, 1995, 2017, 2019, 2021, 2026, 2029, 2030, 2031, 2038, 2039, 2041, 2042, 2047, 2048, 2049, 2051, 2053, 2055, 2057, 2059, 2061, 2063, 2064, 2072, 2074, 2077, 2082, 2090, 2093, 2094, 2096, 2099, 2104, 2108], "longer": [1, 27, 48, 57, 58, 486, 687, 891, 906, 920, 921, 1266, 1273, 1713, 1765, 1768, 2026, 2039, 2042, 2059, 2072, 2074, 2093, 2108], "find": [1, 7, 14, 27, 45, 58, 62, 82, 1106, 1178, 1181, 1223, 1291, 1342, 1453, 1454, 1455, 1493, 1775, 1813, 1824, 1859, 1925, 2008, 2021, 2023, 2029, 2031, 2039, 2041, 2042, 2043, 2044, 2046, 2048, 2053, 2055, 2059, 2061, 2062, 2067, 2072, 2077, 2080, 2082, 2084, 2087, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2107, 2108, 2109, 2111], "quick": [1, 7, 56, 2020, 2051, 2060, 2091, 2106], "guid": [1, 8, 22, 80, 82, 83, 1281, 1765, 2009, 2017, 2042, 2045, 2064, 2067, 2106], "var": [1, 38, 43, 45, 49, 1437, 1438, 1439, 1476, 1477, 1485, 1486, 1487, 1495, 1563, 1626, 1827, 1969, 2011, 2013, 2030, 2062, 2095, 2103, 2108], "thing": [1, 3, 7, 8, 27, 32, 50, 58, 62, 1164, 1279, 1371, 1435, 1631, 1897, 2012, 2017, 2039, 2042, 2044, 2045, 2046, 2048, 2053, 2061, 2064, 2067, 2068, 2074, 2093, 2096, 2098, 2099, 2106, 2108], "detach": [1, 5, 64, 72, 73, 222, 415, 448, 458, 970, 1163, 1269, 1442, 1523, 1613, 1631, 1901, 1939, 2010, 2011, 2030, 2032, 2044, 2046, 2061, 2062, 2069, 2077, 2081, 2083, 2107], "register_hook": [1, 2030, 2039], "name": [1, 2, 3, 14, 23, 27, 29, 32, 33, 34, 36, 38, 39, 42, 43, 45, 48, 50, 51, 53, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 87, 680, 697, 747, 748, 757, 792, 814, 815, 816, 817, 824, 840, 855, 859, 933, 936, 938, 982, 1034, 1158, 1163, 1173, 1176, 1178, 1182, 1184, 1267, 1269, 1270, 1277, 1280, 1285, 1286, 1300, 1305, 1306, 1312, 1313, 1315, 1316, 1317, 1318, 1328, 1329, 1331, 1333, 1334, 1341, 1523, 1574, 1582, 1705, 1710, 1711, 1713, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1762, 1763, 1765, 1774, 1775, 1855, 1865, 1962, 1964, 1967, 1988, 2008, 2009, 2010, 2011, 2013, 2014, 2017, 2019, 2024, 2025, 2026, 2029, 2037, 2039, 2042, 2043, 2044, 2048, 2050, 2051, 2059, 2061, 2062, 2063, 2064, 2065, 2066, 2072, 2073, 2079, 2082, 2083, 2084, 2086, 2087, 2088, 2090, 2094, 2096, 2097, 2099, 2102, 2105, 2106, 2107, 2108, 2109, 2110, 2112], "factori": [1, 2, 11, 34, 36, 39, 43, 58, 824, 940, 1106, 1583, 1766, 1775, 1863, 2009, 2011, 2021, 2031, 2042, 2044, 2062, 2080, 2083, 2095, 2098], "ones": [1, 3, 22, 27, 31, 33, 34, 50, 53, 58, 59, 61, 62, 64, 69, 150, 254, 313, 402, 445, 446, 448, 515, 794, 860, 894, 910, 912, 913, 914, 915, 916, 920, 943, 955, 973, 1089, 1097, 1119, 1163, 1170, 1171, 1174, 1266, 1269, 1281, 1290, 1316, 1332, 1341, 1436, 1456, 1465, 1469, 1476, 1477, 1495, 1523, 1527, 1528, 1530, 1532, 1538, 1575, 1584, 1585, 1586, 1620, 1681, 1699, 1703, 1712, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1758, 1760, 1763, 1773, 1774, 1827, 1844, 1862, 1867, 1892, 1942, 1946, 1964, 1976, 2011, 2013, 2015, 2021, 2030, 2031, 2039, 2040, 2042, 2044, 2052, 2054, 2055, 2061, 2062, 2063, 2064, 2067, 2072, 2074, 2076, 2078, 2080, 2083, 2102, 2107, 2108], "autograd_tensor": 1, "kwarg": [1, 5, 14, 22, 27, 28, 29, 31, 32, 33, 45, 50, 51, 53, 62, 64, 580, 603, 747, 760, 762, 763, 819, 820, 821, 822, 824, 825, 891, 906, 907, 977, 1009, 1011, 1048, 1049, 1066, 1163, 1174, 1175, 1179, 1182, 1184, 1269, 1272, 1274, 1333, 1359, 1484, 1512, 1523, 1554, 1558, 1562, 1564, 1565, 1703, 1713, 1735, 1740, 1744, 1754, 1761, 1763, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1855, 1958, 1973, 1979, 2008, 2013, 2014, 2017, 2044, 2045, 2051, 2059, 2063, 2072, 2079, 2088, 2094, 2097, 2107, 2108, 2109], "base": [1, 3, 7, 9, 12, 14, 15, 19, 22, 27, 28, 29, 31, 32, 33, 34, 36, 38, 43, 45, 46, 48, 50, 51, 53, 58, 62, 85, 86, 87, 791, 796, 800, 802, 820, 821, 822, 824, 825, 862, 863, 901, 904, 906, 917, 918, 927, 973, 995, 1067, 1068, 1083, 1104, 1106, 1149, 1190, 1200, 1223, 1233, 1271, 1283, 1295, 1333, 1344, 1346, 1348, 1356, 1436, 1459, 1496, 1523, 1526, 1527, 1528, 1532, 1538, 1540, 1567, 1569, 1571, 1646, 1681, 1712, 1713, 1718, 1719, 1727, 1735, 1739, 1741, 1782, 1793, 1794, 1820, 1830, 1855, 1867, 1924, 1925, 1940, 1950, 1952, 1974, 2009, 2011, 2013, 2041, 2042, 2043, 2044, 2047, 2051, 2065, 2066, 2067, 2072, 2073, 2077, 2078, 2081, 2082, 2084, 2087, 2088, 2095, 2096, 2097, 2099, 2101], "static": [1, 3, 8, 14, 28, 34, 36, 50, 51, 53, 64, 69, 70, 73, 794, 799, 815, 817, 824, 826, 832, 858, 860, 890, 891, 892, 893, 906, 907, 1178, 1179, 1184, 1190, 1208, 1283, 1567, 1713, 1899, 2010, 2011, 2012, 2013, 2042, 2047, 2050, 2058, 2059, 2065, 2068, 2072, 2079, 2093, 2095, 2097], "Then": [1, 28, 32, 46, 62, 929, 1469, 1575, 1730, 1775, 1962, 2039, 2040, 2042, 2043, 2044, 2045, 2054, 2055, 2061, 2063, 2064, 2072, 2073, 2087, 2093, 2096, 2097, 2100], "op": [1, 4, 23, 27, 29, 32, 50, 51, 53, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 82, 86, 87, 150, 503, 524, 604, 757, 792, 793, 794, 823, 826, 855, 862, 863, 894, 901, 904, 906, 907, 915, 963, 973, 1012, 1027, 1029, 1033, 1034, 1048, 1049, 1075, 1079, 1081, 1164, 1220, 1270, 1283, 1285, 1286, 1341, 1347, 1396, 1400, 1405, 1406, 1540, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1811, 1869, 1948, 1980, 1983, 1985, 1987, 1988, 2000, 2003, 2004, 2009, 2013, 2019, 2020, 2023, 2026, 2030, 2031, 2041, 2042, 2043, 2044, 2053, 2059, 2064, 2066, 2067, 2068, 2069, 2070, 2077, 2079, 2081, 2083, 2088, 2093, 2094, 2098, 2099, 2100, 2101, 2103, 2106, 2107, 2108], "directli": [1, 3, 7, 9, 14, 15, 22, 23, 27, 29, 33, 34, 35, 36, 44, 50, 51, 53, 57, 62, 64, 77, 557, 732, 747, 891, 901, 904, 906, 975, 1089, 1157, 1164, 1171, 1173, 1181, 1213, 1300, 1529, 1557, 1576, 1640, 1687, 1755, 1946, 2010, 2012, 2013, 2017, 2021, 2026, 2032, 2039, 2042, 2043, 2044, 2045, 2047, 2048, 2050, 2051, 2052, 2053, 2056, 2064, 2066, 2067, 2072, 2077, 2082, 2084, 2090, 2095, 2097, 2098, 2099, 2101, 2102, 2107, 2108], "ctx": [1, 43, 64, 68, 890, 891, 892, 901, 902, 903, 904, 905, 906, 907, 2017, 2038, 2044, 2045, 2061], "gradcheck": [1, 1898, 2009, 2017, 2044, 2077], "extend": [1, 22, 27, 29, 34, 37, 48, 62, 862, 891, 893, 901, 904, 906, 907, 1525, 1534, 1898, 1962, 2009, 2032, 2039, 2050, 2052, 2053, 2061, 2062, 2064, 2070, 2077, 2095, 2096, 2109], "staticmethod": [1, 64, 891, 893, 901, 902, 903, 904, 905, 906, 907, 2013, 2038, 2044, 2061, 2072], "result": [1, 3, 4, 5, 7, 8, 9, 12, 14, 18, 22, 23, 27, 29, 34, 36, 38, 43, 46, 50, 51, 53, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 87, 153, 221, 222, 254, 255, 315, 335, 398, 496, 498, 499, 556, 583, 584, 585, 587, 588, 618, 686, 687, 688, 689, 690, 693, 695, 696, 697, 699, 760, 793, 878, 880, 899, 900, 909, 910, 911, 912, 913, 914, 920, 921, 929, 941, 944, 955, 959, 964, 970, 972, 973, 976, 987, 991, 993, 1018, 1020, 1022, 1048, 1049, 1062, 1085, 1086, 1087, 1088, 1089, 1101, 1106, 1124, 1127, 1133, 1142, 1149, 1151, 1154, 1159, 1160, 1163, 1164, 1165, 1168, 1169, 1174, 1175, 1179, 1182, 1193, 1198, 1206, 1209, 1213, 1231, 1232, 1234, 1246, 1260, 1269, 1272, 1273, 1281, 1285, 1286, 1288, 1290, 1291, 1295, 1309, 1311, 1313, 1314, 1322, 1326, 1328, 1330, 1331, 1332, 1339, 1349, 1350, 1357, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1414, 1417, 1432, 1433, 1434, 1459, 1461, 1462, 1463, 1467, 1469, 1474, 1488, 1493, 1523, 1529, 1539, 1567, 1568, 1569, 1570, 1571, 1575, 1611, 1629, 1640, 1696, 1699, 1700, 1713, 1727, 1730, 1763, 1766, 1767, 1768, 1769, 1775, 1778, 1805, 1811, 1813, 1820, 1821, 1824, 1830, 1843, 1849, 1864, 1879, 1891, 1902, 1904, 1905, 1909, 1916, 1918, 1919, 1920, 1923, 1924, 1925, 1935, 1939, 1940, 1945, 1946, 1948, 1949, 1951, 1961, 1964, 1968, 1969, 1973, 2010, 2011, 2012, 2013, 2017, 2020, 2021, 2023, 2030, 2031, 2032, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2051, 2053, 2054, 2055, 2056, 2058, 2059, 2061, 2063, 2065, 2066, 2067, 2068, 2069, 2072, 2073, 2076, 2077, 2080, 2082, 2083, 2084, 2088, 2089, 2090, 2094, 2095, 2096, 2098, 2102, 2105, 2106, 2107, 2108, 2109], "save_for_backward": [1, 891, 901, 903, 905, 906, 907, 2017, 2038, 2039, 2044, 2045, 2061], "grad_output": [1, 64, 890, 901, 902, 906, 907, 915, 921, 925, 926, 1269, 1523, 2011, 2039, 2042, 2044, 2045, 2051, 2103], "saved_tensor": [1, 901, 903, 904, 905, 906, 907, 2017, 2038, 2039, 2044, 2045], "inspect": [1, 27, 50, 53, 62, 932, 1269, 1281, 2038, 2044, 2050, 2064, 2068, 2080, 2099, 2101, 2102, 2109], "cost": [1, 3, 4, 8, 9, 23, 29, 53, 486, 963, 973, 1325, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1681, 1863, 2042, 2047, 2055, 2068, 2073, 2080, 2104, 2108], "both": [1, 2, 3, 14, 22, 23, 24, 27, 28, 29, 33, 34, 38, 43, 44, 45, 46, 50, 51, 53, 61, 62, 64, 72, 73, 97, 339, 499, 729, 768, 769, 772, 773, 774, 793, 852, 893, 900, 906, 907, 910, 911, 912, 913, 914, 941, 979, 995, 1029, 1062, 1101, 1107, 1108, 1109, 1122, 1152, 1153, 1154, 1163, 1211, 1213, 1223, 1230, 1246, 1259, 1260, 1266, 1269, 1283, 1291, 1292, 1340, 1356, 1364, 1370, 1385, 1386, 1432, 1433, 1437, 1438, 1439, 1447, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1477, 1483, 1485, 1486, 1487, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1516, 1517, 1518, 1523, 1529, 1563, 1571, 1575, 1576, 1579, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1654, 1655, 1656, 1681, 1713, 1722, 1724, 1733, 1763, 1780, 1781, 1793, 1805, 1828, 1829, 1867, 1872, 1897, 1899, 1901, 1920, 1924, 1945, 1946, 1985, 2010, 2012, 2013, 2017, 2020, 2030, 2031, 2033, 2038, 2039, 2040, 2044, 2045, 2047, 2048, 2051, 2054, 2055, 2056, 2061, 2064, 2065, 2067, 2070, 2071, 2072, 2074, 2077, 2078, 2079, 2084, 2087, 2088, 2089, 2093, 2095, 2097, 2098, 2099, 2100, 2101, 2105, 2108], "cpu": [1, 4, 5, 14, 17, 22, 27, 29, 51, 53, 64, 69, 73, 74, 75, 88, 119, 196, 289, 326, 335, 445, 446, 447, 448, 449, 458, 486, 580, 589, 866, 881, 934, 936, 942, 951, 993, 996, 997, 1008, 1018, 1019, 1020, 1022, 1107, 1109, 1119, 1124, 1142, 1154, 1158, 1160, 1161, 1218, 1220, 1221, 1222, 1227, 1228, 1245, 1269, 1277, 1279, 1280, 1289, 1299, 1301, 1305, 1306, 1307, 1308, 1310, 1312, 1315, 1317, 1318, 1324, 1327, 1330, 1333, 1334, 1340, 1341, 1356, 1359, 1370, 1382, 1459, 1465, 1523, 1696, 1713, 1718, 1719, 1754, 1755, 1769, 1772, 1779, 1823, 1832, 1834, 1836, 1838, 1839, 1863, 1868, 1869, 1870, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1901, 1906, 1907, 1908, 1909, 1910, 1911, 1924, 1939, 1940, 1941, 1950, 1952, 1957, 1961, 1978, 2006, 2009, 2010, 2011, 2013, 2017, 2021, 2023, 2029, 2030, 2032, 2042, 2044, 2045, 2047, 2049, 2051, 2054, 2055, 2057, 2061, 2062, 2065, 2066, 2068, 2071, 2072, 2077, 2079, 2080, 2083, 2084, 2086, 2089, 2090, 2093, 2097, 2098, 2099, 2101, 2102, 2105, 2106, 2108], "There": [1, 5, 6, 7, 9, 12, 14, 21, 27, 29, 32, 45, 50, 51, 53, 54, 58, 59, 62, 84, 85, 87, 680, 734, 793, 891, 906, 907, 973, 1164, 1459, 1493, 1539, 1681, 1713, 1720, 1721, 1761, 1766, 2008, 2010, 2012, 2013, 2019, 2020, 2031, 2039, 2042, 2044, 2045, 2046, 2050, 2053, 2057, 2058, 2061, 2064, 2066, 2067, 2068, 2072, 2074, 2083, 2086, 2093, 2095, 2096, 2098, 2099, 2106, 2107, 2108], "moment": [1, 64, 70, 772, 773, 774, 991, 1780, 1781, 1782, 1784, 1790, 1794, 2023, 2029, 2032, 2066, 2072, 2105], "nvprof": [1, 4, 930, 2042], "regist": [1, 15, 23, 27, 31, 34, 45, 48, 50, 51, 53, 62, 80, 82, 83, 84, 85, 87, 487, 488, 680, 792, 793, 855, 925, 926, 973, 1051, 1184, 1269, 1341, 1523, 1524, 1525, 1533, 1534, 1552, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1727, 1728, 1730, 1731, 1733, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1962, 1964, 2017, 2026, 2029, 2042, 2043, 2044, 2050, 2051, 2056, 2059, 2061, 2064, 2072, 2089, 2096, 2098, 2101, 2104], "activ": [1, 5, 7, 9, 33, 48, 50, 53, 59, 79, 81, 792, 794, 796, 803, 807, 842, 843, 852, 862, 863, 1016, 1031, 1044, 1062, 1163, 1165, 1175, 1342, 1431, 1461, 1462, 1463, 1467, 1477, 1495, 1522, 1524, 1542, 1553, 1567, 1569, 1571, 1622, 1660, 1684, 1713, 1731, 1733, 1763, 1768, 1973, 2009, 2023, 2029, 2042, 2044, 2045, 2047, 2051, 2061, 2063, 2065, 2066, 2067, 2068, 2069, 2072, 2077, 2087, 2088, 2093, 2098, 2103, 2108], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 2066], "use_devic": 1, "record_shap": [1, 2066], "with_flop": [1, 2066], "profile_memori": [1, 2066], "with_stack": [1, 2066], "with_modul": [1, 2066], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 2066], "hold": [1, 27, 29, 43, 45, 48, 49, 50, 53, 57, 61, 62, 537, 1342, 1469, 1524, 1525, 1533, 1534, 1575, 1703, 1713, 1715, 1716, 1730, 1740, 1754, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1906, 1907, 1908, 1909, 1910, 1911, 2040, 2042, 2044, 2046, 2050, 2053, 2063, 2066, 2072, 2073, 2074, 2076, 2077, 2079, 2080, 2082, 2083, 2095, 2096, 2099], "summari": [1, 3, 46, 1063, 1871, 2009, 2026, 2047, 2082, 2088, 2096, 2102, 2108, 2110], "hood": [1, 50, 61, 2029, 2039, 2042, 2043, 2053, 2064, 2074, 2097, 2098], "just": [1, 2, 7, 14, 23, 27, 34, 36, 43, 62, 589, 687, 697, 790, 823, 826, 890, 892, 906, 907, 929, 933, 988, 989, 1182, 1184, 1192, 1285, 1286, 1324, 1327, 1332, 1333, 1359, 1461, 1462, 1463, 1467, 1713, 1733, 1734, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1863, 1949, 1950, 1951, 1952, 1962, 2008, 2010, 2029, 2038, 2039, 2044, 2045, 2048, 2050, 2051, 2052, 2056, 2064, 2065, 2072, 2073, 2077, 2080, 2081, 2083, 2088, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2107], "record": [1, 5, 19, 31, 37, 38, 39, 43, 46, 50, 61, 62, 445, 446, 447, 448, 449, 486, 496, 819, 820, 821, 822, 825, 827, 866, 939, 942, 951, 1008, 1009, 1011, 1107, 1108, 1109, 1119, 1124, 1142, 1160, 1161, 1162, 1193, 1227, 1228, 1269, 1285, 1289, 1340, 1356, 1382, 1385, 1386, 1459, 1523, 1772, 1773, 1775, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1906, 1907, 1908, 1909, 1910, 1911, 1939, 1978, 1979, 2006, 2007, 2010, 2012, 2021, 2032, 2038, 2039, 2042, 2044, 2047, 2058, 2059, 2061, 2066, 2072, 2082, 2083, 2084, 2086, 2087, 2088, 2093, 2095, 2096, 2099, 2108, 2110], "event": [1, 30, 34, 36, 44, 48, 61, 486, 933, 934, 935, 1009, 1011, 1062, 1065, 1285, 1286, 1347, 1385, 1386, 1681, 1979, 2009, 2026, 2029, 2042, 2066, 2082, 2106, 2110], "being": [1, 3, 5, 9, 11, 12, 19, 22, 27, 29, 31, 34, 36, 38, 45, 46, 48, 50, 51, 53, 57, 58, 61, 62, 64, 73, 81, 97, 402, 415, 760, 793, 799, 893, 906, 907, 909, 915, 971, 987, 1009, 1017, 1064, 1069, 1083, 1084, 1119, 1152, 1153, 1164, 1173, 1174, 1183, 1184, 1258, 1269, 1273, 1359, 1368, 1373, 1432, 1433, 1434, 1435, 1436, 1456, 1458, 1465, 1466, 1470, 1471, 1476, 1482, 1489, 1514, 1515, 1523, 1526, 1527, 1528, 1529, 1530, 1537, 1555, 1556, 1572, 1594, 1601, 1602, 1612, 1624, 1625, 1629, 1641, 1665, 1673, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1747, 1748, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1823, 1824, 1918, 1919, 1920, 1968, 1969, 2010, 2013, 2020, 2025, 2026, 2030, 2031, 2032, 2038, 2039, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2054, 2055, 2059, 2061, 2064, 2067, 2070, 2072, 2073, 2077, 2084, 2087, 2090, 2093, 2095, 2096, 2098, 2099, 2106, 2108, 2109], "those": [1, 2, 4, 5, 14, 22, 23, 27, 29, 31, 33, 34, 50, 53, 58, 61, 62, 81, 680, 824, 920, 1020, 1030, 1094, 1096, 1175, 1184, 1197, 1285, 1327, 1333, 1341, 1381, 1427, 1435, 1436, 1456, 1458, 1466, 1482, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1576, 1601, 1602, 1612, 1621, 1641, 1665, 1673, 1708, 1709, 1775, 1794, 1924, 1946, 1973, 1986, 2012, 2030, 2031, 2032, 2038, 2039, 2042, 2044, 2045, 2047, 2049, 2051, 2055, 2056, 2059, 2061, 2063, 2070, 2072, 2074, 2093, 2096, 2097, 2098, 2099, 2101, 2102, 2105, 2108], "python": [1, 3, 4, 9, 12, 14, 15, 18, 22, 31, 32, 33, 34, 35, 36, 38, 39, 42, 43, 45, 46, 47, 51, 53, 62, 64, 72, 73, 352, 589, 624, 680, 781, 881, 909, 910, 911, 912, 913, 914, 916, 920, 921, 959, 960, 972, 973, 975, 987, 1042, 1048, 1049, 1051, 1101, 1106, 1124, 1126, 1154, 1160, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1245, 1267, 1269, 1270, 1272, 1273, 1274, 1280, 1281, 1285, 1341, 1524, 1525, 1533, 1534, 1681, 1713, 1817, 1839, 1843, 1863, 1864, 1899, 1964, 1965, 1973, 1992, 2008, 2019, 2021, 2027, 2028, 2029, 2031, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2050, 2053, 2056, 2057, 2058, 2059, 2064, 2067, 2071, 2072, 2073, 2074, 2080, 2083, 2084, 2089, 2090, 2092, 2094, 2095, 2097, 2098, 2099, 2100, 2101, 2102, 2104, 2105, 2108, 2109, 2110], "report": [1, 3, 4, 18, 27, 38, 46, 61, 62, 84, 85, 87, 1008, 1062, 1167, 1168, 1170, 1182, 1978, 2038, 2042, 2065, 2077, 2099, 2102, 2105, 2108, 2110], "runtim": [1, 3, 5, 14, 19, 27, 29, 32, 33, 36, 50, 51, 62, 64, 74, 75, 827, 879, 933, 1104, 1106, 1184, 1194, 1200, 1208, 1233, 1269, 1275, 1285, 1523, 1715, 1716, 1776, 1819, 1961, 1974, 2013, 2030, 2031, 2039, 2042, 2044, 2053, 2058, 2059, 2060, 2061, 2067, 2089, 2095, 2096, 2099, 2104, 2111], "note": [1, 2, 3, 5, 8, 11, 12, 14, 15, 18, 21, 22, 23, 27, 29, 31, 32, 33, 34, 35, 36, 43, 45, 48, 50, 51, 53, 57, 59, 61, 62, 64, 72, 73, 84, 85, 86, 87, 150, 258, 377, 486, 488, 499, 500, 513, 515, 517, 735, 741, 742, 743, 791, 793, 794, 795, 799, 842, 862, 866, 885, 894, 901, 904, 906, 909, 910, 911, 912, 913, 914, 915, 916, 921, 927, 929, 936, 957, 963, 973, 980, 987, 1005, 1081, 1089, 1094, 1106, 1127, 1157, 1160, 1175, 1181, 1182, 1210, 1223, 1256, 1266, 1267, 1269, 1270, 1276, 1342, 1364, 1385, 1386, 1406, 1432, 1433, 1434, 1435, 1436, 1442, 1453, 1454, 1455, 1456, 1458, 1465, 1466, 1470, 1474, 1476, 1482, 1488, 1489, 1493, 1514, 1515, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1533, 1534, 1537, 1539, 1546, 1555, 1556, 1563, 1567, 1572, 1576, 1584, 1601, 1602, 1612, 1620, 1621, 1629, 1640, 1641, 1665, 1668, 1673, 1674, 1688, 1703, 1713, 1714, 1720, 1721, 1768, 1774, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1797, 1799, 1805, 1807, 1823, 1830, 1905, 1906, 1907, 1908, 1910, 1911, 1916, 1920, 1924, 1946, 1961, 1962, 1964, 1973, 2008, 2010, 2011, 2014, 2020, 2025, 2029, 2032, 2033, 2039, 2040, 2041, 2043, 2044, 2045, 2048, 2049, 2050, 2051, 2053, 2054, 2055, 2056, 2059, 2061, 2063, 2064, 2066, 2068, 2070, 2071, 2073, 2074, 2077, 2079, 2081, 2082, 2085, 2090, 2095, 2096, 2097, 2100, 2106, 2107, 2108, 2111, 2112], "propag": [1, 5, 29, 30, 32, 34, 36, 45, 62, 64, 73, 513, 686, 689, 690, 691, 695, 696, 697, 698, 766, 767, 768, 769, 779, 782, 783, 785, 786, 787, 838, 840, 941, 1152, 1153, 1182, 1193, 1206, 1414, 1720, 1721, 1905, 2009, 2029, 2030, 2038, 2042, 2044, 2048, 2050, 2072, 2087, 2088, 2095, 2098, 2099, 2107], "async": [1, 27, 28, 29, 61, 603, 1713, 2014, 2042, 2050, 2079, 2096], "task": [1, 3, 7, 23, 54, 59, 1272, 1288, 1485, 1486, 1487, 2013, 2041, 2050, 2051, 2053, 2057, 2096, 2099, 2111], "cuda": [1, 3, 4, 5, 14, 16, 21, 22, 23, 27, 29, 31, 33, 53, 60, 88, 150, 289, 313, 321, 335, 340, 486, 515, 517, 524, 580, 866, 878, 880, 894, 915, 936, 942, 944, 951, 973, 978, 1006, 1007, 1008, 1009, 1011, 1012, 1027, 1029, 1040, 1107, 1108, 1109, 1119, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1158, 1161, 1218, 1227, 1228, 1269, 1289, 1291, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1324, 1327, 1330, 1331, 1333, 1334, 1340, 1341, 1356, 1359, 1375, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1465, 1493, 1523, 1539, 1563, 1583, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1621, 1629, 1640, 1668, 1681, 1700, 1701, 1702, 1703, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1767, 1769, 1772, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1823, 1832, 1834, 1836, 1838, 1839, 1863, 1867, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1902, 1906, 1907, 1908, 1909, 1910, 1911, 1924, 1939, 1941, 1950, 1952, 1957, 1961, 2006, 2009, 2011, 2017, 2021, 2030, 2032, 2044, 2045, 2047, 2051, 2054, 2061, 2062, 2063, 2065, 2066, 2071, 2072, 2077, 2079, 2080, 2083, 2084, 2086, 2089, 2090, 2097, 2098, 2101, 2105, 2108, 2111], "cudaev": 1, "approxim": [1, 3, 23, 31, 45, 62, 1171, 1223, 1333, 1342, 1427, 1472, 1537, 1553, 1560, 1627, 1673, 1684, 1728, 1777, 1794, 1813, 1867, 1925, 1946, 2011, 2013, 2042, 2043, 2044, 2048, 2061, 2103, 2112], "4u": 1, "privateuseon": 1, "shape": [1, 5, 8, 11, 12, 23, 27, 32, 33, 34, 51, 53, 55, 57, 59, 62, 63, 64, 65, 66, 69, 70, 72, 76, 97, 171, 191, 208, 218, 400, 402, 445, 447, 449, 471, 497, 498, 513, 515, 517, 544, 566, 617, 680, 685, 687, 688, 697, 735, 745, 746, 756, 758, 760, 764, 766, 767, 768, 769, 772, 773, 774, 781, 796, 879, 885, 901, 903, 906, 910, 912, 913, 914, 933, 943, 944, 946, 949, 954, 956, 960, 961, 965, 966, 973, 987, 990, 1021, 1096, 1097, 1098, 1100, 1101, 1106, 1107, 1109, 1111, 1126, 1127, 1128, 1129, 1137, 1138, 1139, 1145, 1151, 1152, 1153, 1154, 1161, 1168, 1169, 1173, 1174, 1175, 1184, 1185, 1200, 1206, 1210, 1212, 1226, 1231, 1232, 1236, 1244, 1246, 1260, 1266, 1283, 1285, 1286, 1289, 1294, 1295, 1299, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1358, 1359, 1363, 1371, 1376, 1377, 1408, 1409, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1620, 1621, 1625, 1629, 1631, 1640, 1641, 1646, 1654, 1655, 1656, 1666, 1667, 1670, 1671, 1672, 1674, 1681, 1700, 1703, 1712, 1713, 1715, 1716, 1727, 1730, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1769, 1772, 1774, 1776, 1811, 1820, 1824, 1828, 1829, 1832, 1834, 1835, 1836, 1843, 1845, 1846, 1850, 1859, 1862, 1886, 1901, 1902, 1904, 1907, 1909, 1915, 1920, 1921, 1924, 1935, 1942, 1946, 1956, 1957, 1958, 1959, 1973, 1976, 2006, 2010, 2011, 2013, 2017, 2030, 2031, 2032, 2039, 2040, 2042, 2044, 2045, 2046, 2059, 2062, 2066, 2069, 2072, 2077, 2078, 2082, 2083, 2084, 2086, 2089, 2097, 2099, 2103, 2106, 2107, 2108], "about": [1, 8, 9, 12, 17, 22, 27, 28, 29, 31, 32, 36, 38, 42, 44, 46, 50, 54, 58, 62, 86, 255, 486, 498, 618, 920, 921, 927, 978, 987, 1013, 1014, 1030, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1070, 1071, 1072, 1164, 1183, 1184, 1194, 1206, 1299, 1306, 1466, 1538, 1712, 1754, 1790, 1794, 1805, 1866, 1992, 2008, 2010, 2012, 2013, 2017, 2020, 2041, 2042, 2043, 2044, 2046, 2047, 2050, 2053, 2054, 2056, 2058, 2064, 2066, 2067, 2070, 2073, 2074, 2077, 2081, 2083, 2094, 2095, 2096, 2097, 2099, 2104, 2108], "dimens": [1, 11, 22, 27, 32, 33, 34, 50, 53, 58, 59, 62, 64, 69, 73, 76, 84, 218, 232, 233, 254, 260, 313, 315, 317, 321, 433, 434, 472, 473, 474, 493, 513, 515, 517, 537, 543, 545, 546, 560, 583, 584, 585, 587, 588, 607, 617, 686, 692, 693, 695, 696, 697, 699, 735, 758, 779, 781, 785, 875, 876, 877, 878, 887, 888, 889, 893, 906, 907, 915, 952, 960, 963, 964, 965, 966, 967, 1005, 1020, 1022, 1085, 1086, 1087, 1088, 1089, 1094, 1095, 1096, 1097, 1098, 1104, 1106, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1145, 1175, 1178, 1179, 1181, 1183, 1188, 1194, 1210, 1223, 1232, 1233, 1244, 1246, 1266, 1290, 1291, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1349, 1350, 1357, 1360, 1364, 1367, 1369, 1370, 1371, 1372, 1375, 1377, 1392, 1414, 1415, 1416, 1417, 1418, 1419, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1462, 1464, 1465, 1466, 1468, 1469, 1472, 1473, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1495, 1503, 1504, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1522, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1542, 1543, 1544, 1546, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1571, 1572, 1573, 1574, 1575, 1594, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1628, 1629, 1630, 1631, 1640, 1643, 1646, 1647, 1648, 1666, 1667, 1668, 1681, 1687, 1688, 1700, 1712, 1720, 1721, 1727, 1728, 1729, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1748, 1749, 1755, 1756, 1758, 1760, 1762, 1765, 1767, 1768, 1811, 1814, 1821, 1823, 1824, 1825, 1830, 1844, 1845, 1846, 1850, 1859, 1861, 1862, 1871, 1892, 1896, 1900, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1934, 1936, 1940, 1941, 1942, 1943, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 2009, 2011, 2012, 2013, 2032, 2037, 2040, 2042, 2045, 2046, 2048, 2054, 2059, 2065, 2067, 2076, 2077, 2078, 2080, 2082, 2083, 2090, 2095, 2096, 2103], "collect": [1, 3, 7, 22, 28, 29, 31, 32, 36, 45, 53, 61, 62, 799, 800, 824, 862, 863, 961, 1044, 1107, 1232, 1371, 1713, 1744, 1772, 1832, 1836, 2006, 2009, 2011, 2012, 2013, 2017, 2026, 2042, 2043, 2045, 2063, 2066, 2067, 2070, 2074, 2077, 2082, 2084, 2099, 2105, 2107, 2108, 2110], "further": [1, 4, 9, 12, 14, 23, 27, 29, 53, 61, 64, 74, 75, 486, 1184, 1213, 1273, 1309, 1427, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1713, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1811, 2013, 2020, 2047, 2051, 2053, 2064, 2066, 2074, 2082, 2088, 2092, 2095, 2103, 2106, 2108], "group": [1, 3, 9, 22, 23, 28, 29, 31, 32, 36, 42, 45, 46, 48, 49, 53, 56, 62, 610, 680, 712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 730, 731, 738, 739, 740, 741, 742, 743, 772, 773, 774, 881, 933, 1443, 1450, 1451, 1452, 1453, 1454, 1455, 1477, 1499, 1500, 1501, 1502, 1503, 1504, 1563, 1604, 1605, 1606, 1607, 1608, 1609, 1630, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1958, 2008, 2009, 2011, 2013, 2029, 2037, 2042, 2043, 2047, 2061, 2063, 2064, 2066, 2072, 2082, 2094, 2096, 2099, 2103, 2108], "prof": [1, 42, 936, 2066, 2099, 2106, 2108], "key_averag": [1, 936, 2066], "group_by_input_shap": [1, 933, 2066], "skew": [1, 3, 4, 1321, 1727], "neglig": [1, 1282, 1867], "bottom": [1, 53, 1433, 1629, 2020, 2106], "But": [1, 7, 53, 61, 486, 1285, 1315, 1713, 2039, 2044, 2046, 2048, 2055, 2064, 2065, 2077, 2081, 2098, 2099, 2102, 2109], "total": [1, 3, 4, 7, 19, 22, 23, 27, 42, 44, 45, 46, 53, 878, 934, 936, 1022, 1057, 1062, 1076, 1160, 1231, 1232, 1380, 1442, 1469, 1482, 1489, 1514, 1529, 1575, 1667, 1713, 1718, 1767, 1769, 1771, 1799, 1805, 1845, 1871, 1920, 2008, 2012, 2026, 2042, 2047, 2049, 2053, 2063, 2077], "artifici": [1, 2077], "increas": [1, 3, 7, 23, 27, 34, 42, 53, 680, 855, 901, 903, 906, 957, 1030, 1062, 1106, 1231, 1232, 1427, 1436, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1535, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1671, 1672, 1681, 1792, 1798, 1799, 1803, 1805, 1807, 1859, 1867, 1946, 1967, 1986, 2011, 2019, 2027, 2041, 2042, 2049, 2053, 2068, 2077, 2093, 2099, 2102], "estim": [1, 3, 22, 34, 991, 995, 1223, 1266, 1437, 1438, 1439, 1472, 1476, 1477, 1485, 1486, 1487, 1495, 1563, 1627, 1728, 1791, 1887, 2066], "flop": [1, 2066], "hardwar": [1, 8, 860, 862, 863, 1305, 1306, 1333, 1961, 2042, 2053, 2055, 2068, 2077, 2099, 2101, 2108], "matrix": [1, 2, 23, 27, 34, 191, 208, 686, 689, 690, 691, 760, 941, 943, 952, 953, 961, 963, 964, 965, 966, 973, 991, 995, 1089, 1093, 1094, 1096, 1106, 1175, 1213, 1219, 1234, 1290, 1299, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1337, 1339, 1342, 1350, 1359, 1361, 1364, 1374, 1409, 1411, 1465, 1466, 1474, 1493, 1575, 1584, 1585, 1586, 1620, 1621, 1727, 1733, 1762, 1768, 1811, 1812, 1813, 1823, 1867, 1894, 1897, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1916, 1924, 1925, 1941, 1944, 1946, 1948, 1949, 1950, 1951, 1952, 1967, 1973, 2009, 2013, 2030, 2031, 2032, 2037, 2041, 2042, 2044, 2048, 2051, 2054, 2066, 2077, 2082, 2083, 2099], "2d": [1, 29, 34, 587, 588, 700, 703, 706, 735, 739, 742, 766, 768, 773, 779, 783, 785, 786, 787, 991, 995, 1094, 1106, 1325, 1326, 1425, 1429, 1433, 1436, 1437, 1438, 1451, 1454, 1458, 1462, 1466, 1470, 1485, 1486, 1491, 1517, 1526, 1528, 1529, 1530, 1576, 1577, 1578, 1589, 1592, 1594, 1597, 1602, 1605, 1608, 1616, 1621, 1624, 1651, 1655, 1665, 1668, 1728, 1762, 1829, 1904, 1909, 1948, 2023, 2037, 2044, 2066, 2067, 2077], "alloc": [1, 4, 11, 18, 19, 23, 29, 34, 36, 45, 53, 254, 331, 445, 446, 447, 448, 449, 486, 1007, 1009, 1011, 1013, 1014, 1016, 1029, 1030, 1031, 1054, 1056, 1058, 1060, 1061, 1062, 1063, 1071, 1072, 1076, 1107, 1109, 1158, 1179, 1184, 1187, 1190, 1193, 1194, 1215, 1378, 1380, 1381, 1389, 1832, 1836, 1838, 1863, 1939, 1979, 1985, 1986, 2009, 2029, 2032, 2039, 2043, 2047, 2049, 2053, 2059, 2066, 2080, 2092, 2093, 2095, 2098, 2106, 2108], "dealloc": [1, 62, 486, 1160, 1182, 2029, 2042, 2046, 2049, 2066], "line": [1, 4, 18, 27, 36, 50, 51, 62, 680, 916, 933, 1106, 1164, 1269, 1280, 1523, 1594, 1629, 1871, 1899, 2010, 2013, 2014, 2021, 2032, 2040, 2044, 2048, 2049, 2055, 2057, 2061, 2066, 2077, 2092, 2096, 2097, 2099, 2101, 2102, 2105, 2108, 2110], "hierarchi": [1, 29, 50, 62, 840, 1182, 1273, 1780, 1781, 1793, 2014, 2025, 2044, 2066, 2067, 2095], "callstack": [1, 27, 2066], "A": [1, 2, 3, 5, 7, 8, 9, 12, 14, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 36, 42, 45, 46, 48, 50, 51, 53, 54, 59, 61, 64, 65, 66, 69, 85, 88, 560, 580, 583, 584, 585, 594, 624, 680, 692, 697, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 745, 746, 756, 761, 762, 763, 764, 765, 790, 792, 814, 859, 860, 862, 863, 935, 942, 951, 952, 954, 959, 964, 965, 966, 972, 973, 975, 978, 979, 982, 987, 991, 995, 1008, 1009, 1011, 1019, 1021, 1022, 1091, 1106, 1111, 1119, 1120, 1121, 1133, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1174, 1175, 1181, 1184, 1186, 1212, 1223, 1226, 1227, 1228, 1232, 1259, 1260, 1261, 1262, 1265, 1267, 1269, 1272, 1277, 1280, 1282, 1285, 1286, 1290, 1294, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1342, 1350, 1358, 1359, 1360, 1361, 1365, 1420, 1436, 1440, 1442, 1458, 1461, 1462, 1463, 1465, 1466, 1467, 1475, 1476, 1484, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1513, 1522, 1523, 1529, 1552, 1557, 1559, 1567, 1572, 1573, 1583, 1587, 1594, 1600, 1612, 1631, 1641, 1648, 1660, 1681, 1687, 1688, 1703, 1714, 1715, 1716, 1722, 1724, 1727, 1730, 1733, 1755, 1756, 1759, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1798, 1799, 1801, 1804, 1805, 1807, 1813, 1823, 1825, 1826, 1827, 1828, 1829, 1840, 1846, 1852, 1855, 1887, 1896, 1899, 1900, 1903, 1915, 1919, 1920, 1924, 1925, 1943, 1948, 1949, 1950, 1951, 1952, 1956, 1957, 1958, 1960, 1961, 1969, 1973, 1976, 1978, 1979, 2008, 2010, 2011, 2012, 2013, 2017, 2020, 2023, 2030, 2031, 2032, 2037, 2038, 2041, 2042, 2044, 2045, 2046, 2047, 2053, 2054, 2056, 2061, 2063, 2064, 2065, 2066, 2067, 2072, 2073, 2074, 2077, 2078, 2079, 2080, 2082, 2083, 2088, 2093, 2094, 2097, 2098, 2099, 2101, 2103, 2106, 2107, 2108, 2109, 2110, 2112], "aten": [1, 3, 12, 14, 18, 50, 51, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 85, 1048, 1164, 1774, 1775, 1899, 2010, 2011, 2017, 2041, 2044, 2057, 2059, 2062, 2066, 2067, 2077, 2089, 2094, 2100, 2102, 2106, 2108], "torchscript": [1, 3, 8, 31, 50, 51, 62, 617, 1267, 1270, 1272, 1273, 1274, 1276, 1281, 1285, 1287, 1775, 2009, 2014, 2056, 2066, 2072, 2110], "eager": [1, 8, 50, 973, 1081, 1179, 1183, 1267, 1270, 1281, 1406, 1870, 2013, 2017, 2042, 2047, 2066, 2068, 2070, 2083, 2093, 2099, 2100, 2101, 2105, 2108], "experiment": [1, 2, 23, 27, 29, 31, 33, 50, 51, 53, 62, 64, 67, 72, 73, 76, 233, 909, 911, 915, 973, 982, 1080, 1164, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1300, 1311, 1313, 1314, 1318, 1331, 1713, 1794, 2009, 2010, 2012, 2017, 2021, 2030, 2031, 2042, 2043, 2055, 2057, 2059, 2061, 2064, 2065, 2066, 2095, 2098, 2108], "kineto": [1, 929, 2066], "_experimentalconfig": [1, 2066], "librari": [1, 2, 3, 4, 8, 9, 11, 14, 15, 19, 22, 27, 32, 35, 43, 48, 54, 57, 58, 59, 62, 680, 929, 993, 1009, 1032, 1036, 1048, 1157, 1282, 1313, 1359, 1891, 2026, 2041, 2042, 2043, 2044, 2045, 2046, 2050, 2051, 2053, 2054, 2057, 2061, 2064, 2065, 2066, 2067, 2072, 2085, 2090, 2096, 2099, 2109, 2111], "100": [1, 22, 27, 31, 34, 62, 64, 72, 73, 78, 300, 738, 739, 742, 743, 929, 1230, 1269, 1281, 1287, 1325, 1340, 1347, 1356, 1371, 1408, 1427, 1435, 1436, 1437, 1438, 1439, 1451, 1452, 1454, 1455, 1457, 1458, 1485, 1486, 1487, 1523, 1530, 1532, 1563, 1572, 1611, 1612, 1665, 1783, 1795, 1796, 1801, 1802, 1803, 1804, 1806, 1808, 1809, 1825, 1880, 1959, 2011, 2013, 2029, 2041, 2042, 2061, 2063, 2068, 2074, 2076, 2077, 2082, 2094, 2097, 2102], "realli": [1, 7, 62, 975, 1182, 1184, 2013, 2039, 2064, 2098], "y": [1, 11, 14, 22, 34, 42, 50, 51, 53, 58, 59, 62, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 486, 617, 620, 781, 885, 887, 888, 889, 899, 900, 901, 904, 906, 907, 909, 910, 911, 912, 913, 914, 916, 917, 936, 955, 961, 988, 995, 1048, 1049, 1089, 1100, 1106, 1110, 1163, 1165, 1168, 1169, 1170, 1174, 1175, 1209, 1276, 1281, 1285, 1338, 1347, 1348, 1371, 1435, 1436, 1437, 1438, 1439, 1440, 1456, 1458, 1477, 1482, 1483, 1485, 1486, 1487, 1489, 1495, 1510, 1514, 1515, 1526, 1527, 1528, 1530, 1532, 1538, 1555, 1556, 1563, 1566, 1572, 1573, 1600, 1629, 1646, 1670, 1703, 1712, 1733, 1766, 1827, 1845, 1847, 1848, 1901, 1915, 1942, 1946, 1947, 1973, 1976, 2010, 2011, 2012, 2013, 2017, 2022, 2030, 2031, 2037, 2039, 2040, 2041, 2042, 2045, 2048, 2049, 2052, 2059, 2061, 2064, 2067, 2072, 2074, 2078, 2082, 2086, 2087, 2088, 2093, 2094, 2095, 2096, 2099, 2107, 2108], "column": [1, 3, 23, 27, 33, 191, 260, 584, 587, 936, 971, 991, 995, 1089, 1119, 1147, 1148, 1235, 1305, 1306, 1309, 1325, 1328, 1333, 1337, 1342, 1409, 1532, 1575, 1620, 1621, 1727, 1813, 1823, 1904, 1906, 1907, 1908, 1910, 1911, 1924, 1946, 1950, 1952, 1967, 2037, 2048, 2077, 2082], "were": [1, 2, 3, 18, 27, 36, 45, 49, 53, 58, 61, 62, 150, 321, 335, 471, 486, 855, 890, 892, 894, 906, 907, 915, 936, 1051, 1164, 1175, 1277, 1341, 1594, 1713, 1718, 1740, 1757, 1859, 1863, 1935, 1942, 1973, 2012, 2020, 2038, 2042, 2044, 2056, 2061, 2064, 2093, 2096, 2098, 2099, 2104, 2107, 2108], "remov": [1, 3, 22, 23, 27, 29, 34, 46, 49, 53, 62, 487, 488, 513, 546, 557, 697, 797, 815, 816, 817, 860, 925, 926, 929, 936, 940, 963, 964, 1051, 1164, 1178, 1214, 1266, 1269, 1273, 1359, 1360, 1364, 1444, 1445, 1446, 1523, 1524, 1533, 1631, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1728, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1747, 1748, 1749, 1750, 1752, 1753, 1763, 1765, 1768, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1823, 1839, 1861, 1915, 1924, 1948, 1955, 1957, 2008, 2009, 2023, 2033, 2039, 2044, 2051, 2056, 2061, 2062, 2064, 2074, 2079, 2084, 2096, 2099, 2101, 2104, 2107], "breviti": [1, 62, 936, 995, 2061], "print": [1, 3, 5, 12, 18, 22, 24, 27, 32, 36, 37, 42, 43, 46, 50, 51, 53, 58, 61, 720, 728, 729, 734, 745, 746, 756, 764, 923, 925, 926, 936, 1163, 1164, 1173, 1184, 1269, 1273, 1276, 1277, 1281, 1359, 1440, 1484, 1510, 1523, 1535, 1536, 1611, 1668, 1671, 1672, 1733, 1743, 1744, 1745, 1746, 1749, 1759, 1763, 1775, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1871, 1965, 2008, 2010, 2011, 2021, 2025, 2039, 2041, 2042, 2044, 2051, 2052, 2059, 2060, 2061, 2062, 2064, 2066, 2072, 2082, 2083, 2087, 2088, 2093, 2094, 2096, 2097, 2099, 2101, 2108], "tabl": [1, 3, 27, 62, 936, 1465, 1620, 2011, 2013, 2044, 2063, 2064, 2066, 2067, 2072, 2077, 2084, 2098, 2100, 2102, 2105, 2108], "sort_bi": [1, 936, 2066], "self_cpu_time_tot": [1, 936, 2066], "avg": [1, 27, 936, 1778], "mul": [1, 18, 50, 62, 64, 67, 70, 72, 74, 75, 77, 420, 747, 748, 757, 936, 1246, 1410, 2010, 2011, 2013, 2030, 2032, 2044, 2061, 2062, 2069, 2073, 2077, 2080, 2087, 2094, 2095, 2096, 2103, 2107], "32": [1, 2, 23, 27, 32, 50, 88, 746, 1160, 1266, 1279, 1359, 1433, 1461, 1462, 1463, 1467, 1468, 1470, 1471, 1491, 1511, 1517, 1528, 1567, 1568, 1569, 1570, 1571, 1583, 1594, 1624, 1625, 1631, 1681, 2031, 2032, 2051, 2055, 2059, 2061, 2070, 2077, 2080, 2082, 2083, 2096, 2097, 2102], "048m": 1, "200": [1, 31, 1269, 1347, 1523, 1825, 2013, 2077, 2096, 2108], "27": [1, 617, 1337, 1798, 1820, 1967, 2061], "041m": 1, "powbackward0": [1, 936], "9": [1, 7, 22, 23, 27, 35, 62, 64, 69, 313, 315, 317, 321, 401, 402, 471, 513, 560, 581, 583, 697, 745, 746, 855, 957, 963, 967, 971, 995, 1088, 1089, 1104, 1107, 1128, 1129, 1138, 1139, 1149, 1152, 1153, 1156, 1157, 1223, 1233, 1299, 1301, 1322, 1324, 1326, 1337, 1339, 1418, 1419, 1425, 1426, 1429, 1430, 1443, 1445, 1465, 1466, 1519, 1520, 1535, 1536, 1546, 1549, 1620, 1621, 1668, 1671, 1672, 1768, 1769, 1778, 1780, 1781, 1782, 1783, 1784, 1790, 1793, 1794, 1795, 1799, 1805, 1807, 1808, 1812, 1816, 1852, 1859, 1868, 1871, 1881, 1886, 1896, 1904, 1912, 1939, 1940, 1944, 1946, 1955, 1967, 1974, 2010, 2014, 2020, 2046, 2051, 2056, 2057, 2061, 2062, 2063, 2064, 2072, 2077, 2078, 2080, 2084, 2096], "727m": 1, "55": [1, 1476, 2061], "483m": 1, "accumulategrad": [1, 936, 2039], "148m": 1, "graphroot": [1, 936], "691": 1, "816u": 1, "emit": [1, 14, 37, 42, 62, 680, 1184, 1285, 1873, 2013, 2019, 2059, 2071, 2077], "nvtx": [1, 4, 2009], "program": [1, 3, 4, 8, 12, 18, 22, 26, 27, 37, 46, 49, 50, 51, 53, 62, 617, 929, 988, 989, 1054, 1056, 1164, 1197, 1867, 2010, 2012, 2014, 2027, 2039, 2042, 2046, 2050, 2052, 2053, 2055, 2056, 2057, 2059, 2067, 2082, 2089, 2093, 2095, 2096, 2097, 2098, 2099, 2101, 2104, 2106, 2108, 2110], "off": [1, 5, 7, 8, 14, 26, 27, 32, 36, 53, 62, 81, 917, 918, 942, 951, 1067, 1164, 1227, 1228, 1266, 1285, 1333, 1432, 1433, 1434, 1436, 1516, 1517, 1518, 1629, 1668, 2041, 2042, 2043, 2046, 2050, 2054, 2055, 2066, 2067, 2068, 2072, 2073, 2095, 2098, 2105], "o": [1, 23, 27, 28, 29, 32, 34, 36, 46, 48, 49, 50, 62, 1176, 1180, 1269, 1341, 1385, 1386, 1387, 1494, 1523, 1529, 1713, 1855, 2008, 2014, 2029, 2039, 2042, 2043, 2046, 2057, 2064, 2065, 2072, 2090], "trace_nam": 1, "regular": [1, 3, 4, 27, 36, 46, 53, 56, 62, 1048, 1049, 1163, 1184, 1198, 1317, 1318, 1442, 1460, 1461, 1462, 1463, 1467, 1508, 1522, 1523, 1524, 1525, 1533, 1534, 1622, 1660, 1703, 1715, 1716, 1763, 1781, 1790, 2013, 2017, 2031, 2032, 2042, 2044, 2045, 2050, 2051, 2059, 2061, 2064, 2067, 2070, 2072, 2077, 2078, 2086, 2088], "command": [1, 4, 27, 36, 43, 46, 62, 2042, 2049, 2053, 2057, 2065, 2066, 2073, 2090, 2102, 2105], "unfortun": [1, 9, 22, 50, 1713, 2039, 2044, 2097, 2098], "wai": [1, 3, 5, 7, 8, 9, 14, 22, 23, 27, 29, 31, 32, 34, 38, 42, 50, 53, 55, 56, 61, 62, 150, 580, 680, 796, 819, 822, 825, 862, 863, 891, 894, 906, 907, 910, 912, 913, 914, 915, 920, 927, 1127, 1129, 1164, 1184, 1197, 1198, 1223, 1269, 1299, 1300, 1315, 1330, 1435, 1466, 1485, 1486, 1487, 1493, 1505, 1506, 1507, 1523, 1552, 1569, 1571, 1621, 1674, 1708, 1709, 1713, 1731, 1761, 1794, 1798, 1805, 2010, 2012, 2013, 2019, 2020, 2021, 2026, 2029, 2030, 2031, 2039, 2041, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2054, 2057, 2059, 2061, 2063, 2064, 2067, 2072, 2073, 2077, 2081, 2083, 2088, 2093, 2094, 2095, 2096, 2098, 2099, 2106, 2107, 2108, 2110], "disk": [1, 22, 29, 1341, 1855, 2039, 2051, 2064, 2082], "annot": [1, 32, 33, 38, 43, 62, 930, 1267, 1275, 1281, 2010, 2012, 2014, 2017, 2061, 2072, 2099, 2100, 2106], "wait": [1, 18, 27, 36, 43, 45, 61, 486, 824, 1004, 1008, 1009, 1011, 1082, 1193, 1272, 1382, 1385, 1386, 1391, 1407, 1807, 1978, 1979, 2005, 2011, 2013, 2022, 2029, 2041, 2042, 2043, 2062, 2066, 2072, 2099, 2106, 2110], "either": [1, 8, 9, 14, 18, 22, 23, 27, 29, 31, 33, 34, 36, 38, 43, 45, 46, 48, 50, 51, 53, 58, 61, 62, 154, 221, 313, 321, 513, 515, 617, 680, 732, 738, 739, 740, 745, 746, 756, 764, 779, 785, 791, 859, 891, 893, 901, 902, 903, 904, 905, 906, 907, 916, 920, 921, 940, 960, 973, 1019, 1106, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1160, 1164, 1192, 1223, 1246, 1262, 1269, 1285, 1325, 1340, 1341, 1356, 1369, 1371, 1425, 1426, 1429, 1430, 1433, 1434, 1435, 1436, 1450, 1451, 1452, 1454, 1455, 1456, 1458, 1466, 1476, 1482, 1489, 1491, 1492, 1514, 1515, 1517, 1518, 1523, 1526, 1527, 1528, 1529, 1530, 1537, 1539, 1541, 1555, 1556, 1571, 1572, 1574, 1576, 1577, 1578, 1601, 1602, 1612, 1640, 1641, 1665, 1673, 1700, 1707, 1713, 1746, 1768, 1780, 1781, 1783, 1790, 1793, 1805, 1820, 1822, 1864, 1867, 1920, 1924, 1976, 2008, 2010, 2012, 2013, 2015, 2017, 2019, 2031, 2037, 2039, 2040, 2042, 2044, 2045, 2046, 2048, 2050, 2051, 2053, 2055, 2056, 2059, 2061, 2063, 2064, 2065, 2067, 2073, 2074, 2077, 2078, 2081, 2084, 2095, 2100, 2112], "nvidia": [1, 14, 27, 1017, 1030, 1058, 1064, 1069, 1083, 1084, 1961, 2009, 2042, 2046, 2049, 2055, 2057, 2067, 2077, 2086, 2089, 2105, 2106, 2108], "visual": [1, 62, 1371, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1516, 1517, 1518, 1575, 2009, 2042, 2051, 2057, 2059, 2066, 2082, 2099, 2106, 2108], "nvvp": 1, "timelin": [1, 4, 1385, 1386, 2009, 2066], "load_nvprof": 1, "load": [1, 11, 14, 15, 23, 29, 31, 50, 53, 60, 415, 837, 863, 932, 973, 1007, 1269, 1273, 1280, 1285, 1466, 1523, 1703, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1855, 2009, 2010, 2021, 2022, 2023, 2024, 2031, 2039, 2042, 2050, 2051, 2055, 2057, 2059, 2061, 2072, 2082, 2090, 2101, 2102, 2106, 2108], "repl": [1, 2101], "append": [1, 3, 29, 61, 62, 64, 69, 229, 254, 607, 761, 763, 765, 1051, 1096, 1098, 1364, 1475, 1494, 1525, 1534, 1539, 1541, 1552, 1713, 2011, 2012, 2013, 2039, 2041, 2042, 2053, 2057, 2061, 2062, 2077, 2082, 2107], "size": [1, 2, 3, 7, 11, 18, 19, 22, 23, 27, 29, 33, 34, 36, 45, 50, 51, 53, 56, 62, 64, 65, 70, 72, 73, 78, 138, 208, 242, 254, 255, 313, 315, 321, 339, 445, 446, 447, 449, 487, 493, 498, 499, 500, 513, 515, 517, 520, 523, 544, 545, 546, 566, 581, 583, 584, 585, 587, 588, 606, 607, 617, 618, 680, 690, 691, 693, 695, 696, 697, 699, 720, 728, 729, 735, 741, 742, 743, 745, 746, 756, 764, 766, 767, 768, 769, 779, 785, 786, 787, 796, 859, 866, 878, 879, 881, 893, 906, 907, 909, 910, 911, 912, 913, 914, 933, 941, 942, 944, 951, 953, 954, 955, 956, 957, 960, 964, 967, 973, 995, 1005, 1013, 1019, 1020, 1022, 1062, 1087, 1088, 1094, 1097, 1104, 1106, 1107, 1108, 1109, 1112, 1123, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1158, 1160, 1161, 1162, 1169, 1170, 1175, 1183, 1184, 1188, 1194, 1198, 1210, 1227, 1228, 1232, 1233, 1244, 1246, 1266, 1269, 1291, 1300, 1309, 1314, 1322, 1326, 1330, 1333, 1335, 1336, 1337, 1339, 1340, 1342, 1350, 1356, 1357, 1359, 1360, 1364, 1367, 1369, 1370, 1371, 1372, 1375, 1376, 1377, 1378, 1380, 1409, 1411, 1414, 1417, 1419, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1465, 1466, 1468, 1469, 1470, 1471, 1474, 1476, 1477, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1535, 1536, 1538, 1539, 1545, 1546, 1547, 1548, 1549, 1550, 1555, 1563, 1567, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1584, 1585, 1586, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1602, 1607, 1608, 1609, 1612, 1613, 1620, 1621, 1624, 1625, 1629, 1640, 1647, 1654, 1655, 1656, 1665, 1666, 1668, 1671, 1672, 1674, 1681, 1700, 1701, 1702, 1703, 1712, 1713, 1729, 1744, 1754, 1755, 1756, 1757, 1758, 1760, 1762, 1765, 1767, 1769, 1772, 1773, 1783, 1792, 1811, 1812, 1813, 1814, 1816, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1845, 1850, 1859, 1862, 1880, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1925, 1939, 1940, 1941, 1946, 1948, 1956, 1957, 1958, 1959, 1960, 1968, 1969, 1971, 1972, 1973, 1974, 2006, 2007, 2009, 2010, 2011, 2013, 2017, 2021, 2023, 2026, 2030, 2031, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2055, 2056, 2061, 2062, 2065, 2066, 2067, 2069, 2072, 2077, 2079, 2080, 2082, 2083, 2090, 2093, 2095, 2096, 2097, 2098, 2099, 2102, 2103, 2106, 2108, 2110], "format": [1, 3, 19, 20, 23, 27, 29, 38, 48, 51, 62, 81, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 240, 267, 297, 325, 331, 393, 499, 500, 525, 580, 583, 584, 585, 586, 587, 588, 680, 735, 760, 792, 793, 970, 1051, 1066, 1106, 1107, 1108, 1162, 1178, 1184, 1188, 1266, 1269, 1283, 1312, 1442, 1466, 1474, 1493, 1523, 1539, 1571, 1713, 1720, 1721, 1755, 1757, 1758, 1773, 1775, 1833, 1835, 1837, 1855, 1897, 1901, 1906, 1907, 1908, 1909, 1910, 1911, 1920, 2007, 2008, 2010, 2013, 2014, 2019, 2033, 2042, 2044, 2051, 2058, 2059, 2061, 2062, 2066, 2067, 2072, 2073, 2077, 2080, 2082, 2084, 2106, 2108], "arg0": [1, 27, 2059], "arg1": [1, 27, 43, 44, 46, 51, 2059], "repres": [1, 8, 11, 22, 23, 27, 29, 32, 33, 34, 35, 36, 38, 39, 45, 48, 50, 51, 53, 62, 80, 82, 233, 760, 792, 793, 796, 890, 906, 907, 975, 982, 991, 995, 1006, 1038, 1041, 1106, 1127, 1129, 1134, 1136, 1137, 1138, 1139, 1164, 1181, 1195, 1223, 1230, 1258, 1259, 1262, 1265, 1268, 1285, 1286, 1317, 1359, 1427, 1442, 1523, 1529, 1571, 1573, 1575, 1583, 1584, 1585, 1586, 1713, 1726, 1730, 1735, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1754, 1764, 1775, 1799, 1805, 1811, 1813, 1824, 1867, 1906, 1907, 1908, 1910, 1911, 1920, 1924, 1957, 1958, 1964, 1971, 1972, 1991, 2010, 2012, 2013, 2017, 2020, 2021, 2026, 2032, 2039, 2044, 2045, 2048, 2050, 2051, 2054, 2058, 2059, 2061, 2065, 2067, 2068, 2070, 2072, 2077, 2080, 2095, 2096, 2098, 2110, 2112], "order": [1, 3, 5, 27, 28, 29, 31, 34, 46, 50, 53, 54, 59, 61, 62, 150, 191, 208, 233, 313, 315, 317, 321, 331, 402, 487, 488, 680, 792, 793, 802, 855, 877, 894, 896, 915, 925, 926, 940, 952, 963, 1009, 1051, 1062, 1094, 1097, 1098, 1106, 1124, 1126, 1127, 1133, 1145, 1146, 1147, 1148, 1165, 1175, 1182, 1223, 1269, 1289, 1300, 1306, 1308, 1315, 1322, 1325, 1326, 1333, 1334, 1337, 1339, 1342, 1371, 1377, 1392, 1409, 1427, 1436, 1442, 1459, 1523, 1524, 1533, 1551, 1552, 1594, 1602, 1629, 1654, 1655, 1656, 1681, 1703, 1713, 1730, 1740, 1754, 1755, 1756, 1757, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1805, 1811, 1814, 1824, 1859, 1862, 1886, 1896, 1924, 1943, 1950, 1952, 1957, 1961, 1967, 1973, 2008, 2009, 2010, 2011, 2013, 2014, 2017, 2029, 2030, 2031, 2032, 2037, 2040, 2042, 2043, 2044, 2045, 2047, 2048, 2051, 2054, 2056, 2059, 2061, 2063, 2064, 2065, 2067, 2069, 2072, 2073, 2074, 2077, 2078, 2080, 2084, 2088, 2090, 2093, 2094, 2095, 2096, 2099, 2102, 2106, 2108], "backend": [1, 14, 44, 49, 51, 53, 741, 742, 743, 792, 793, 833, 856, 857, 860, 862, 863, 909, 915, 973, 982, 1031, 1062, 1106, 1164, 1183, 1188, 1283, 1306, 1313, 1315, 1333, 1385, 1386, 1387, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1582, 1587, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1629, 1668, 1681, 1713, 1775, 1776, 1867, 1962, 1964, 2009, 2011, 2012, 2023, 2027, 2028, 2041, 2042, 2044, 2054, 2055, 2061, 2068, 2070, 2077, 2097, 2099, 2100, 2101, 2102, 2103, 2105, 2114], "side": [1, 14, 27, 45, 48, 50, 51, 58, 62, 64, 67, 486, 768, 769, 772, 773, 774, 966, 1040, 1100, 1122, 1123, 1125, 1128, 1129, 1134, 1136, 1137, 1138, 1139, 1142, 1266, 1267, 1314, 1319, 1330, 1332, 1432, 1433, 1434, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1499, 1500, 1501, 1502, 1503, 1504, 1516, 1517, 1518, 1545, 1546, 1548, 1549, 1550, 1575, 1579, 1580, 1581, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1654, 1655, 1656, 1668, 1799, 1828, 1829, 1859, 1920, 1948, 2008, 2010, 2011, 2013, 2038, 2039, 2042, 2044, 2048, 2072, 2090, 2093, 2106], "creation": [1, 2, 22, 27, 29, 62, 486, 745, 746, 756, 764, 824, 1008, 1164, 1713, 1714, 1735, 1978, 2010, 2014, 2026, 2029, 2039, 2042, 2072, 2074, 2077, 2083, 2095], "warmup": [1, 3, 1051, 2042, 2066, 2093, 2099, 2106], "correl": [1, 34, 46, 991, 1450, 1451, 1452, 1453, 1454, 1455, 1461, 1462, 1463, 1467], "view": [1, 7, 8, 11, 18, 22, 23, 29, 31, 36, 51, 53, 62, 64, 73, 79, 222, 254, 435, 497, 498, 499, 607, 618, 692, 697, 760, 879, 887, 888, 889, 900, 916, 940, 955, 967, 988, 989, 1096, 1097, 1104, 1145, 1146, 1147, 1148, 1164, 1233, 1269, 1325, 1336, 1386, 1443, 1466, 1474, 1493, 1523, 1539, 1575, 1576, 1577, 1578, 1621, 1667, 1713, 1718, 1814, 1846, 1850, 1851, 1855, 1861, 1862, 1892, 1912, 1923, 1935, 1940, 1944, 1956, 1971, 1972, 1974, 2009, 2010, 2011, 2029, 2031, 2032, 2040, 2044, 2047, 2059, 2062, 2069, 2072, 2074, 2077, 2079, 2080, 2083, 2098, 2103, 2105, 2107, 2108], "difficult": [1, 7, 9, 32, 50, 58, 1175, 1973, 2098, 2099, 2104, 2106, 2108], "eas": [1, 62, 2041, 2044, 2049, 2095, 2107], "sequenc": [1, 22, 29, 31, 32, 33, 34, 50, 53, 150, 566, 735, 760, 814, 881, 894, 915, 957, 959, 960, 963, 971, 1011, 1018, 1019, 1022, 1091, 1105, 1107, 1175, 1231, 1232, 1235, 1285, 1325, 1371, 1427, 1437, 1442, 1450, 1459, 1466, 1474, 1493, 1529, 1539, 1552, 1567, 1568, 1569, 1570, 1571, 1584, 1621, 1681, 1730, 1733, 1740, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1769, 1772, 1776, 1791, 1795, 1830, 1832, 1836, 1859, 1917, 1920, 1959, 1973, 1975, 1979, 2006, 2010, 2011, 2012, 2017, 2032, 2042, 2046, 2047, 2059, 2061, 2064, 2065, 2072, 2076, 2083, 2084, 2093, 2095, 2096, 2097, 2099, 2107, 2108], "gener": [1, 2, 3, 7, 8, 14, 22, 23, 27, 34, 38, 39, 43, 46, 50, 53, 54, 55, 63, 64, 69, 73, 84, 153, 154, 173, 258, 286, 377, 421, 454, 481, 608, 680, 921, 943, 973, 975, 1037, 1040, 1048, 1049, 1052, 1053, 1073, 1074, 1076, 1077, 1078, 1106, 1128, 1129, 1164, 1175, 1179, 1184, 1194, 1222, 1227, 1245, 1273, 1279, 1290, 1301, 1306, 1315, 1332, 1333, 1337, 1342, 1362, 1370, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1409, 1458, 1469, 1483, 1567, 1575, 1576, 1585, 1586, 1594, 1620, 1638, 1703, 1728, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1762, 1765, 1769, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1811, 1813, 1816, 1830, 1832, 1834, 1835, 1836, 1838, 1860, 1872, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1925, 1941, 1945, 1962, 1964, 1967, 1973, 1990, 1996, 1997, 1998, 1999, 2001, 2002, 2009, 2010, 2011, 2012, 2013, 2014, 2019, 2023, 2030, 2037, 2039, 2042, 2044, 2046, 2047, 2048, 2050, 2051, 2053, 2057, 2059, 2061, 2062, 2063, 2064, 2066, 2071, 2072, 2073, 2077, 2080, 2082, 2084, 2087, 2089, 2090, 2094, 2095, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109], "seq": [1, 605, 760, 960, 972, 1371, 1474, 1493, 1529, 1539, 1567, 1569, 1571, 1757, 1955], "n": [1, 3, 27, 29, 32, 33, 34, 36, 38, 43, 46, 51, 62, 229, 260, 406, 465, 466, 486, 686, 689, 690, 691, 735, 758, 760, 781, 878, 933, 939, 941, 942, 944, 951, 953, 957, 963, 964, 965, 966, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1087, 1088, 1098, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1146, 1167, 1170, 1175, 1182, 1188, 1194, 1206, 1223, 1227, 1228, 1232, 1266, 1269, 1281, 1285, 1286, 1289, 1290, 1299, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1342, 1350, 1359, 1364, 1366, 1371, 1374, 1411, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1482, 1483, 1485, 1486, 1487, 1489, 1490, 1491, 1492, 1493, 1495, 1505, 1506, 1507, 1511, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1532, 1538, 1539, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1555, 1557, 1558, 1559, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1594, 1600, 1612, 1613, 1621, 1625, 1629, 1665, 1668, 1670, 1681, 1712, 1713, 1727, 1739, 1748, 1767, 1811, 1812, 1813, 1818, 1823, 1824, 1830, 1836, 1838, 1851, 1859, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1901, 1902, 1918, 1919, 1920, 1924, 1925, 1940, 1941, 1946, 1950, 1952, 1967, 1968, 1969, 1970, 1973, 2011, 2013, 2017, 2030, 2031, 2037, 2039, 2042, 2044, 2046, 2048, 2053, 2064, 2066, 2067, 2068, 2077, 2078, 2082, 2083, 2084, 2096, 2099, 2103], "counter": [1, 27, 916, 927, 1044, 1062, 1459, 2026, 2029, 2039], "increment": [1, 27, 45, 50, 927, 929, 1160, 1232, 1273, 1459, 2010, 2012, 2039, 2059, 2072, 2096], "object": [1, 3, 5, 6, 8, 14, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 45, 47, 48, 50, 51, 53, 61, 62, 64, 66, 88, 206, 209, 415, 603, 793, 794, 801, 855, 862, 881, 891, 892, 893, 901, 906, 907, 933, 935, 940, 973, 1029, 1040, 1081, 1106, 1145, 1157, 1160, 1165, 1166, 1168, 1169, 1170, 1174, 1176, 1180, 1184, 1201, 1202, 1255, 1256, 1269, 1276, 1277, 1280, 1281, 1285, 1286, 1301, 1322, 1326, 1339, 1341, 1342, 1362, 1459, 1461, 1462, 1463, 1467, 1485, 1486, 1487, 1523, 1533, 1563, 1713, 1731, 1746, 1755, 1756, 1759, 1760, 1761, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1855, 1928, 1929, 1933, 1962, 1965, 1966, 1985, 2008, 2012, 2013, 2014, 2017, 2021, 2023, 2024, 2029, 2033, 2039, 2041, 2042, 2044, 2045, 2046, 2048, 2050, 2053, 2055, 2056, 2057, 2059, 2061, 2063, 2066, 2067, 2069, 2070, 2071, 2072, 2074, 2079, 2080, 2082, 2084, 2094, 2096, 2097, 2098, 2104, 2107, 2109, 2110, 2112], "stash": [1, 5, 2042, 2044, 2065], "associ": [1, 8, 9, 27, 29, 39, 47, 50, 51, 53, 898, 899, 973, 1014, 1065, 1066, 1068, 1218, 1231, 1232, 1269, 1319, 1330, 1332, 1341, 1442, 1523, 1533, 1613, 1713, 1728, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1880, 1882, 2010, 2013, 2019, 2025, 2030, 2031, 2039, 2048, 2051, 2054, 2056, 2059, 2064, 2065, 2066, 2072, 2073, 2079, 2080, 2083, 2096, 2098, 2099, 2108, 2110, 2111], "tell": [1, 7, 62, 496, 1196, 1197, 1206, 1270, 1277, 1341, 1776, 2010, 2017, 2020, 2039, 2044, 2045, 2064, 2096, 2097, 2110], "top": [1, 3, 7, 8, 12, 22, 29, 33, 34, 38, 51, 53, 57, 62, 747, 933, 1435, 1436, 1458, 1482, 1489, 1514, 1530, 1573, 1576, 1629, 1735, 1739, 1741, 1887, 1943, 1963, 2014, 2017, 2020, 2029, 2044, 2059, 2063, 2096, 2097, 2105, 2106], "m": [1, 4, 8, 23, 27, 33, 34, 42, 46, 50, 62, 686, 689, 690, 691, 720, 728, 729, 738, 739, 740, 741, 742, 743, 745, 746, 756, 758, 764, 814, 841, 861, 862, 863, 941, 953, 957, 961, 1119, 1173, 1232, 1267, 1269, 1274, 1276, 1280, 1281, 1287, 1290, 1301, 1309, 1315, 1316, 1317, 1318, 1322, 1323, 1324, 1326, 1327, 1328, 1333, 1334, 1335, 1336, 1342, 1359, 1360, 1364, 1374, 1409, 1411, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1470, 1471, 1472, 1473, 1477, 1478, 1479, 1480, 1481, 1484, 1485, 1486, 1487, 1490, 1491, 1492, 1509, 1510, 1512, 1513, 1516, 1517, 1518, 1522, 1523, 1530, 1531, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1668, 1670, 1713, 1727, 1729, 1733, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1761, 1762, 1765, 1811, 1812, 1813, 1823, 1830, 1859, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1901, 1902, 1920, 1924, 1925, 1941, 1948, 2010, 2011, 2012, 2013, 2021, 2042, 2044, 2046, 2048, 2051, 2053, 2056, 2067, 2077, 2088, 2089, 2092, 2099], "By": [1, 2, 3, 5, 14, 22, 27, 33, 37, 42, 50, 53, 62, 445, 446, 447, 448, 449, 881, 973, 995, 1011, 1054, 1056, 1089, 1101, 1124, 1126, 1127, 1128, 1129, 1137, 1138, 1139, 1165, 1166, 1168, 1169, 1175, 1223, 1231, 1232, 1273, 1322, 1333, 1341, 1370, 1375, 1413, 1435, 1436, 1437, 1438, 1439, 1456, 1458, 1476, 1482, 1485, 1486, 1487, 1488, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1563, 1572, 1601, 1602, 1612, 1641, 1665, 1673, 1729, 1765, 1813, 1824, 1845, 1899, 1946, 1973, 1979, 2008, 2012, 2017, 2020, 2039, 2042, 2044, 2046, 2047, 2051, 2053, 2054, 2056, 2059, 2061, 2063, 2071, 2072, 2077, 2084, 2096, 2097, 2099, 2102, 2104, 2108], "compar": [1, 3, 5, 14, 22, 50, 53, 62, 85, 694, 866, 877, 915, 916, 917, 1062, 1110, 1111, 1134, 1135, 1136, 1140, 1141, 1142, 1143, 1152, 1153, 1184, 1212, 1226, 1258, 1294, 1358, 1368, 1373, 1420, 1529, 1713, 1766, 1957, 2009, 2013, 2026, 2042, 2044, 2048, 2054, 2057, 2067, 2068, 2072, 2077, 2082, 2084, 2087, 2088, 2093, 2100, 2105], "down": [1, 7, 14, 22, 34, 36, 43, 44, 46, 62, 779, 1062, 1101, 1148, 1154, 1279, 1315, 1640, 1824, 1852, 2044, 2050, 2053, 2061, 2072, 2074, 2077, 2082, 2102, 2108], "irrelev": [1, 3, 2014], "simpli": [1, 3, 14, 22, 27, 29, 33, 34, 38, 46, 50, 61, 62, 864, 1164, 1256, 1267, 1431, 1460, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1867, 2010, 2012, 2039, 2045, 2048, 2051, 2052, 2066, 2077, 2095, 2096, 2097, 2099, 2104], "earlier": [1, 6, 32, 53, 1720, 1721, 1924, 2039, 2042, 2046, 2047, 2050, 2056, 2061, 2066], "hand": [1, 4, 53, 58, 62, 966, 1100, 1106, 1267, 1314, 1319, 1330, 1332, 1431, 1533, 1552, 1948, 1961, 2010, 2012, 2013, 2039, 2048, 2051, 2053, 2056, 2064, 2077, 2096, 2098, 2099], "underwai": [1, 1046, 2042], "up": [1, 6, 7, 8, 9, 14, 22, 23, 27, 31, 32, 34, 36, 38, 42, 44, 45, 48, 49, 50, 53, 56, 62, 779, 785, 891, 906, 907, 929, 973, 1048, 1049, 1051, 1089, 1106, 1135, 1136, 1141, 1143, 1148, 1164, 1182, 1208, 1260, 1273, 1279, 1282, 1283, 1328, 1427, 1442, 1469, 1529, 1569, 1571, 1575, 1576, 1594, 1620, 1629, 1640, 1700, 1713, 1720, 1721, 1794, 1830, 1852, 1957, 1958, 2008, 2010, 2012, 2020, 2026, 2029, 2030, 2031, 2039, 2040, 2041, 2042, 2046, 2047, 2048, 2049, 2051, 2054, 2061, 2064, 2065, 2066, 2067, 2072, 2073, 2084, 2093, 2096, 2097, 2098, 2104, 2106, 2108, 2110], "nonzero": [1, 53, 1194, 1266, 1351, 1353, 1354, 1359, 1976, 2011, 2017, 2021, 2062, 2095, 2098, 2103], "themselv": [1, 9, 34, 45, 53, 793, 842, 1943, 2042, 2064, 2109], "later": [1, 2, 3, 7, 21, 23, 27, 29, 53, 61, 62, 88, 486, 745, 746, 756, 764, 932, 1040, 1193, 1341, 1493, 1516, 1517, 1518, 1539, 1553, 1654, 1655, 1656, 1684, 1713, 1924, 2010, 2039, 2041, 2043, 2051, 2056, 2066, 2073, 2074, 2090, 2096, 2104], "origin": [1, 5, 11, 12, 18, 22, 23, 27, 29, 38, 50, 51, 53, 56, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 206, 209, 221, 486, 545, 603, 607, 617, 680, 760, 797, 838, 839, 855, 858, 859, 958, 963, 1009, 1126, 1127, 1129, 1133, 1137, 1138, 1139, 1145, 1163, 1173, 1244, 1266, 1277, 1281, 1282, 1285, 1286, 1363, 1377, 1427, 1431, 1443, 1458, 1459, 1474, 1553, 1563, 1612, 1684, 1720, 1721, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1754, 1757, 1760, 1762, 1763, 1765, 1775, 1790, 1805, 1814, 1850, 1861, 1896, 1912, 1946, 1957, 1958, 2010, 2013, 2019, 2029, 2031, 2039, 2042, 2044, 2046, 2047, 2050, 2053, 2054, 2056, 2061, 2064, 2065, 2067, 2068, 2076, 2077, 2079, 2087, 2088, 2094, 2096, 2097, 2098, 2099, 2100, 2102, 2106, 2107, 2108, 2109], "did": [1, 7, 8, 27, 45, 1197, 1416, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 2012, 2013, 2048, 2056, 2064, 2096, 2101, 2110], "relationship": [1, 9, 32, 42, 50, 62, 970, 1223, 1573, 2039, 2042, 2056, 2064, 2098], "conceptu": [1, 3, 2039, 2045, 2074, 2097], "tag": [1, 3, 7, 27, 50, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 982, 1341, 2008, 2009, 2017, 2050, 2056, 2064, 2067, 2082], "eventu": [1, 7, 45, 53, 980, 2008, 2065, 2098], "itt": [1, 2066], "intel": [1, 4, 2009, 2057, 2085, 2105, 2114], "r": [1, 34, 59, 150, 890, 892, 894, 906, 907, 915, 920, 961, 972, 991, 1106, 1165, 1167, 1170, 1175, 1186, 1210, 1213, 1223, 1281, 1299, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1315, 1316, 1319, 1321, 1328, 1330, 1332, 1333, 1342, 1465, 1466, 1475, 1535, 1536, 1555, 1620, 1621, 1671, 1672, 1727, 1792, 1823, 1973, 2010, 2011, 2012, 2039, 2041, 2044, 2048, 2057, 2077, 2080, 2082, 2108], "instrument": [1, 3, 23, 1386, 2009, 2050, 2088], "technologi": [1, 50, 2009, 2059, 2060, 2089], "applic": [1, 2, 9, 34, 45, 488, 799, 810, 811, 812, 813, 901, 904, 906, 973, 1030, 1169, 1184, 1194, 1381, 1458, 1459, 1569, 1571, 1612, 1713, 1961, 1986, 2009, 2017, 2020, 2032, 2039, 2041, 2042, 2043, 2044, 2049, 2050, 2051, 2055, 2061, 2063, 2067, 2072, 2073, 2074, 2077, 2083, 2099, 2110], "across": [1, 8, 14, 19, 22, 23, 27, 29, 31, 33, 36, 46, 53, 58, 62, 617, 735, 819, 875, 934, 1022, 1061, 1062, 1106, 1120, 1175, 1280, 1285, 1371, 1436, 1459, 1469, 1511, 1529, 1531, 1563, 1575, 1599, 1602, 1631, 1647, 1696, 1713, 1740, 1744, 1768, 1855, 1973, 2009, 2010, 2026, 2030, 2032, 2039, 2043, 2046, 2050, 2051, 2053, 2054, 2055, 2063, 2065, 2068, 2072, 2073, 2079, 2082, 2088, 2093, 2095, 2099, 2108], "tool": [1, 4, 8, 9, 18, 27, 46, 51, 62, 862, 932, 1386, 1899, 2008, 2009, 2010, 2012, 2025, 2041, 2042, 2057, 2061, 2064, 2066, 2088, 2096, 2097, 2099, 2102, 2106, 2108, 2110], "With": [1, 18, 22, 27, 34, 53, 61, 739, 740, 741, 742, 743, 785, 1062, 1127, 1128, 1129, 1137, 1138, 1139, 1286, 1437, 1438, 1439, 1451, 1452, 1454, 1455, 1468, 1485, 1486, 1487, 1563, 1574, 1576, 1605, 1608, 1640, 1666, 1700, 1791, 1834, 2014, 2039, 2042, 2044, 2067, 2072, 2077, 2082, 2092, 2096, 2100, 2105, 2108], "abl": [1, 2, 7, 8, 18, 27, 29, 45, 50, 58, 486, 1164, 1183, 1267, 1280, 1567, 2010, 2021, 2025, 2030, 2039, 2044, 2045, 2047, 2056, 2061, 2064, 2067, 2072, 2077, 2084, 2094, 2095, 2096, 2098, 2099, 2100, 2104, 2108, 2110], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 15, 19, 50, 335, 741, 742, 743, 901, 902, 906, 915, 927, 1175, 1830, 1973, 2039, 2042, 2043, 2044, 2058, 2059, 2072, 2073, 2089, 2099], "traceback": [1, 18, 38, 46, 50, 61, 62, 916, 1184, 1254, 1899, 2012, 2013, 2014, 2021, 2029, 2032, 2044, 2055, 2077, 2084, 2108, 2110], "fail": [1, 7, 19, 27, 29, 36, 37, 38, 43, 44, 45, 46, 49, 50, 61, 62, 64, 69, 73, 74, 75, 84, 486, 920, 921, 1009, 1062, 1194, 1270, 1277, 1280, 1299, 1328, 1333, 1341, 1342, 1359, 1774, 2013, 2015, 2029, 2039, 2042, 2044, 2053, 2054, 2057, 2061, 2064, 2072, 2080, 2094, 2095, 2096, 2097, 2099, 2100, 2108, 2110], "test": [1, 3, 14, 18, 27, 43, 45, 46, 62, 64, 72, 73, 693, 699, 973, 1123, 1125, 1126, 1131, 1132, 1137, 1138, 1139, 1141, 1143, 1184, 1192, 1198, 1201, 1202, 1209, 1255, 1256, 1260, 1261, 1263, 1264, 1775, 1888, 2009, 2010, 2014, 2026, 2029, 2039, 2047, 2048, 2055, 2061, 2063, 2066, 2082, 2088, 2098, 2108, 2109], "slow": [1, 920, 1279, 1283, 1299, 1300, 1718, 1719, 1761, 1957, 2048, 2053, 2082, 2095, 2098, 2108], "import": [1, 2, 3, 5, 7, 9, 12, 14, 17, 18, 19, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 42, 43, 48, 50, 51, 53, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 680, 734, 741, 742, 743, 772, 773, 774, 792, 861, 862, 863, 916, 923, 925, 952, 959, 995, 1157, 1160, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1173, 1266, 1267, 1270, 1272, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1285, 1286, 1287, 1321, 1322, 1325, 1326, 1339, 1371, 1488, 1523, 1583, 1587, 1713, 1731, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1748, 1756, 1757, 1758, 1759, 1760, 1761, 1768, 1793, 1794, 1817, 1959, 2010, 2012, 2013, 2014, 2017, 2021, 2026, 2029, 2032, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2050, 2051, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2067, 2070, 2072, 2073, 2074, 2077, 2080, 2082, 2083, 2084, 2088, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2106, 2107, 2108, 2109, 2114], "myfunc": [1, 2045], "inp": [1, 12, 22, 27, 62, 896, 899, 900, 1575, 1713, 2103, 2106, 2109], "clone": [1, 15, 22, 53, 64, 88, 254, 448, 901, 902, 905, 906, 907, 916, 917, 918, 923, 925, 926, 955, 1273, 1465, 1699, 1939, 1948, 2011, 2029, 2032, 2056, 2062, 2077, 2079, 2080, 2084, 2093, 2103], "runtimeerror": [1, 14, 27, 31, 58, 62, 84, 88, 583, 697, 901, 902, 906, 916, 954, 1154, 1254, 1269, 1299, 1300, 1301, 1309, 1310, 1311, 1313, 1317, 1323, 1330, 1335, 1336, 1362, 1409, 1523, 1774, 1861, 1899, 1961, 2010, 2012, 2013, 2030, 2032, 2038, 2040, 2046, 2055, 2057, 2061, 2067, 2071, 2077, 2080, 2093], "run_fn": [1, 5, 858, 864], "recent": [1, 7, 8, 49, 61, 916, 1254, 1899, 2012, 2013, 2021, 2032, 2044, 2054, 2055, 2077, 2084, 2105, 2108], "last": [1, 5, 6, 11, 22, 23, 28, 31, 33, 34, 36, 45, 51, 61, 62, 315, 617, 692, 760, 878, 916, 940, 942, 951, 957, 967, 1048, 1089, 1094, 1098, 1123, 1125, 1128, 1129, 1131, 1132, 1135, 1136, 1138, 1139, 1141, 1143, 1145, 1184, 1227, 1228, 1232, 1246, 1254, 1266, 1291, 1325, 1328, 1333, 1370, 1375, 1427, 1432, 1433, 1434, 1440, 1458, 1466, 1468, 1474, 1493, 1495, 1510, 1530, 1533, 1537, 1538, 1539, 1552, 1568, 1569, 1575, 1600, 1621, 1630, 1643, 1667, 1668, 1712, 1713, 1714, 1720, 1721, 1767, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1850, 1859, 1867, 1896, 1899, 1906, 1907, 1908, 1910, 1911, 1912, 1920, 1924, 1941, 1943, 1946, 1971, 1972, 2012, 2013, 2021, 2026, 2030, 2032, 2039, 2042, 2044, 2048, 2055, 2059, 2061, 2064, 2065, 2066, 2077, 2083, 2084, 2094, 2096, 2102, 2108], "stdin": [1, 27, 916, 1899, 2021, 2032, 2044, 2055, 2077], "instal": [1, 3, 14, 15, 27, 62, 1184, 2008, 2051, 2052, 2059, 2060, 2061, 2064, 2072, 2082, 2090, 2094, 2095, 2096, 2097, 2104], "_tensor": [1, 154], "py": [1, 4, 14, 18, 27, 31, 32, 34, 37, 44, 46, 51, 53, 62, 86, 861, 1713, 2008, 2010, 2013, 2019, 2043, 2048, 2050, 2053, 2061, 2064, 2066, 2067, 2073, 2090, 2092, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2105, 2107, 2108, 2110], "93": [1, 617, 1088], "retain_graph": [1, 150, 894, 915, 925, 926, 1175, 1973, 2011, 2038, 2039, 2044, 2072], "90": [1, 1090, 1809, 1851, 2017], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 14, 27, 43, 45, 2008, 2042, 2066, 2102], "53": [1, 481], "44": [1, 321, 445, 1109, 1434, 1492, 1518, 1761, 2097], "set_detect_anomali": 1, "behaviour": [1, 693, 694, 699, 1629, 1668, 1805, 1873, 2008, 2054], "interpos": [1, 2044], "grad_fn": [1, 150, 335, 488, 881, 894, 909, 910, 911, 912, 913, 914, 923, 925, 926, 1163, 1728, 1901, 2039, 2044, 2051, 2056], "node": [1, 27, 31, 36, 38, 44, 45, 50, 53, 62, 64, 73, 74, 75, 79, 82, 680, 819, 820, 821, 824, 825, 826, 901, 936, 1051, 1173, 1182, 1184, 1206, 1284, 1442, 1459, 1713, 1775, 2023, 2042, 2059, 2061, 2064, 2065, 2072, 2073, 2074, 2086, 2088, 2095, 2096, 2098, 2099, 2105, 2107, 2108], "grad_mod": [1, 916, 917, 918, 2011], "least": [1, 5, 6, 8, 23, 29, 34, 44, 45, 53, 260, 402, 697, 944, 1094, 1096, 1097, 1106, 1147, 1148, 1158, 1183, 1223, 1231, 1232, 1266, 1292, 1315, 1342, 1364, 1413, 1427, 1713, 1755, 2008, 2013, 2031, 2037, 2039, 2040, 2042, 2046, 2047, 2065, 2068, 2074, 2077, 2078, 2079, 2084, 2099, 2101, 2108], "intermediari": [1, 14, 34, 901, 904, 906, 2039, 2048, 2096, 2099], "access": [1, 9, 18, 22, 27, 29, 50, 51, 61, 64, 66, 80, 488, 557, 734, 901, 904, 906, 907, 939, 1015, 1269, 1272, 1285, 1332, 1427, 1523, 1703, 1715, 1716, 1728, 1733, 1755, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1992, 2009, 2010, 2011, 2013, 2014, 2017, 2023, 2025, 2027, 2028, 2029, 2031, 2032, 2039, 2042, 2046, 2048, 2050, 2051, 2059, 2072, 2077, 2080, 2081, 2083, 2090, 2093, 2095, 2096, 2097, 2098, 2099, 2101, 2104, 2112], "isinst": [1, 22, 34, 62, 923, 925, 926, 1256, 1267, 2011, 2013, 2039, 2044, 2051, 2064, 2077, 2099, 2107, 2108], "dir": [1, 1048, 1775, 2008, 2013, 2064], "__call__": [1, 1269, 1523, 2096], "__class__": [1, 64], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 2014], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 2014], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 2013], "__ne__": 1, "__new__": [1, 2012, 2014], "__reduce__": [1, 2064], "__reduce_ex__": 1, "__repr__": [1, 3, 2044], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 62, 2011, 2013], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 2039], "metadata": [1, 3, 12, 29, 38, 39, 50, 64, 72, 73, 927, 987, 1341, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1855, 2017, 2021, 2032, 2039, 2044, 2045, 2056, 2059, 2064, 2066, 2072, 2073, 2077, 2082, 2098, 2107], "next_funct": 1, "register_prehook": [1, 2039], "allclos": [1, 58, 59, 62, 920, 921, 1048, 1128, 1129, 1135, 1136, 1164, 1165, 1167, 1168, 1169, 1170, 1174, 1175, 1317, 1319, 1330, 1332, 1335, 1336, 1361, 1733, 1760, 1823, 1973, 2011, 2017, 2045, 2062, 2077], "pack": [1, 31, 738, 739, 740, 741, 742, 743, 745, 746, 760, 781, 1285, 1286, 1361, 1459, 1474, 1493, 1539, 1754, 1755, 1756, 1757, 2011, 2023, 2032, 2039, 2046, 2057, 2067, 2096], "unpack": [1, 64, 69, 70, 760, 897, 900, 1285, 1317, 1361, 1459, 1757, 1759, 1766, 1776, 2013, 2014, 2039, 2044, 2046], "hook": [1, 28, 31, 53, 487, 488, 748, 757, 901, 904, 906, 925, 926, 929, 1051, 1269, 1459, 1523, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1729, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1746, 1751, 1762, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 2009, 2033, 2043, 2044, 2050, 2058, 2059, 2064, 2067, 2097, 2098, 2099, 2100], "common": [1, 3, 8, 22, 32, 36, 45, 58, 64, 81, 86, 685, 793, 866, 946, 949, 954, 990, 1101, 1106, 1151, 1152, 1153, 1154, 1194, 1211, 1292, 1341, 1408, 1437, 1438, 1439, 1442, 1563, 1611, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1843, 1855, 1921, 1964, 2009, 2013, 2018, 2031, 2039, 2042, 2044, 2045, 2046, 2051, 2053, 2056, 2061, 2064, 2076, 2077, 2078, 2081, 2084, 2094, 2095, 2099, 2104, 2106, 2107, 2108, 2110], "trade": [1, 5, 8, 53, 1333, 1436, 1867, 2041, 2046, 2068], "leav": [1, 8, 36, 46, 150, 894, 1178, 1274, 1287, 1731, 1734, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1915, 2010, 2012, 2013, 2021, 2039, 2042, 2059, 2064, 2068, 2096], "especi": [1, 9, 11, 22, 27, 51, 62, 254, 955, 973, 983, 1699, 2012, 2021, 2039, 2044, 2045, 2054, 2056, 2067, 2072, 2077, 2093, 2098, 2099, 2101], "notic": [1, 12, 27, 51, 63, 689, 1126, 1140, 1179, 1364, 1374, 1435, 1576, 1646, 1796, 1797, 1802, 1803, 1809, 1957, 2009, 2010, 2039, 2077, 2096, 2099, 2102, 2104, 2106], "fit": [1, 9, 37, 57, 58, 499, 933, 1266, 1783, 1845, 2042, 2059, 2065, 2084, 2108], "evalu": [1, 4, 8, 9, 31, 34, 50, 56, 62, 693, 699, 798, 864, 920, 1062, 1170, 1171, 1182, 1184, 1204, 1205, 1208, 1269, 1427, 1431, 1437, 1438, 1439, 1460, 1477, 1485, 1486, 1487, 1495, 1523, 1537, 1542, 1563, 1673, 1681, 1696, 1731, 1783, 1799, 1830, 2013, 2014, 2044, 2051, 2058, 2059, 2077, 2086, 2089, 2095, 2097, 2098], "saved_tensors_hook": [1, 901, 904, 906, 2039], "pack_hook": [1, 2039], "unpack_hook": [1, 2039], "pair": [1, 27, 29, 33, 34, 45, 48, 50, 617, 735, 866, 940, 961, 995, 1140, 1181, 1184, 1283, 1333, 1371, 1515, 1524, 1529, 1533, 1670, 1792, 1839, 2012, 2013, 2019, 2030, 2039, 2042, 2065, 2072, 2073, 2074, 2082, 2084, 2088, 2099, 2106], "retriev": [1, 22, 23, 27, 31, 45, 62, 88, 537, 890, 891, 906, 907, 1182, 1200, 1465, 1469, 1575, 1620, 1713, 1755, 1775, 1899, 2032, 2039, 2050, 2061, 2064, 2065, 2072, 2073, 2074, 2090, 2097, 2110], "everytim": 1, "store": [1, 3, 5, 14, 18, 23, 29, 36, 46, 50, 51, 53, 62, 326, 332, 398, 686, 822, 825, 891, 906, 953, 1018, 1020, 1022, 1186, 1213, 1269, 1275, 1277, 1280, 1300, 1311, 1312, 1313, 1342, 1347, 1359, 1437, 1438, 1439, 1465, 1523, 1552, 1713, 1727, 1730, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1754, 1867, 1904, 2008, 2009, 2010, 2021, 2031, 2032, 2033, 2043, 2044, 2045, 2046, 2050, 2059, 2064, 2067, 2072, 2073, 2074, 2077, 2079, 2082, 2083, 2088, 2090, 2096, 2097, 2098, 2101], "content": [1, 3, 7, 29, 38, 50, 51, 62, 901, 904, 906, 1277, 1280, 1300, 1311, 1313, 1318, 1331, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1915, 1945, 1966, 2008, 2013, 2024, 2029, 2039, 2042, 2053, 2072, 2081, 2082, 2083, 2104, 2108], "equal": [1, 12, 23, 27, 34, 45, 46, 48, 50, 62, 260, 499, 545, 617, 680, 694, 695, 696, 739, 740, 741, 742, 743, 760, 768, 769, 820, 821, 822, 825, 862, 877, 942, 949, 951, 962, 963, 984, 995, 1020, 1022, 1076, 1095, 1111, 1150, 1165, 1166, 1178, 1181, 1184, 1194, 1195, 1209, 1212, 1227, 1228, 1230, 1231, 1232, 1254, 1258, 1294, 1315, 1328, 1332, 1335, 1336, 1359, 1360, 1371, 1389, 1420, 1424, 1425, 1426, 1428, 1429, 1430, 1435, 1436, 1442, 1451, 1452, 1454, 1455, 1459, 1466, 1469, 1470, 1471, 1474, 1476, 1493, 1528, 1529, 1537, 1539, 1575, 1584, 1597, 1598, 1602, 1605, 1608, 1620, 1621, 1624, 1625, 1631, 1638, 1713, 1758, 1811, 1824, 1880, 1881, 1886, 1912, 1920, 1940, 1956, 1962, 1976, 2011, 2014, 2020, 2030, 2031, 2032, 2039, 2040, 2048, 2054, 2062, 2063, 2065, 2078, 2082, 2084, 2096, 2107], "term": [1, 8, 9, 34, 45, 51, 62, 558, 734, 763, 792, 963, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1137, 1138, 1139, 1142, 1154, 1184, 1191, 1301, 1427, 1435, 1476, 1483, 1493, 1494, 1528, 1537, 1555, 1626, 1638, 1673, 1685, 1713, 1727, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1843, 1879, 1887, 2009, 2013, 2038, 2039, 2044, 2045, 2046, 2048, 2053, 2061, 2063, 2064, 2067, 2073, 2077, 2089, 2095, 2096, 2099], "mulbackward0": [1, 910, 913, 914, 2044], "inplac": [1, 29, 50, 56, 58, 62, 64, 72, 73, 755, 758, 776, 778, 780, 791, 797, 814, 838, 839, 840, 858, 859, 864, 901, 902, 906, 927, 973, 1164, 1269, 1431, 1441, 1460, 1461, 1462, 1463, 1464, 1467, 1479, 1480, 1481, 1509, 1522, 1523, 1542, 1543, 1544, 1551, 1553, 1566, 1595, 1603, 1614, 1615, 1616, 1617, 1618, 1622, 1633, 1634, 1635, 1644, 1660, 1675, 1676, 1679, 1682, 1684, 1694, 1706, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1961, 2011, 2020, 2039, 2044, 2061, 2088, 2103, 2107], "lead": [1, 5, 7, 21, 27, 35, 51, 53, 59, 62, 901, 902, 906, 909, 911, 915, 921, 975, 1157, 1175, 1184, 1300, 1493, 1539, 1555, 1909, 1915, 1973, 2013, 2031, 2032, 2039, 2041, 2043, 2044, 2045, 2047, 2053, 2054, 2057, 2063, 2064, 2067, 2072, 2077, 2082, 2083, 2093, 2100], "undefin": [1, 27, 35, 38, 319, 471, 617, 879, 901, 905, 906, 907, 920, 921, 949, 957, 1109, 1159, 1160, 1435, 1774, 1817, 2017, 2039, 2042, 2044, 2045, 2055, 2072], "recurs": [1, 34, 50, 53, 62, 975, 979, 1098, 1182, 1191, 1209, 1269, 1281, 1283, 1523, 1720, 1721, 1797, 2012, 2044, 2051, 2064, 2072, 2096, 2097, 2099, 2100], "inner": [1, 3, 53, 54, 59, 815, 817, 909, 1089, 1165, 1169, 1174, 1189, 1946, 2011, 2044, 2062, 2072, 2088], "save_on_cpu": 1, "pin_memori": [1, 22, 64, 69, 73, 74, 75, 445, 446, 447, 448, 449, 1107, 1109, 1158, 1832, 1836, 1838, 1939, 2010, 2011, 2032, 2042, 2044, 2062, 2079, 2103], "within": [1, 5, 9, 12, 22, 23, 27, 31, 32, 33, 34, 45, 46, 48, 50, 51, 53, 61, 62, 79, 80, 88, 488, 879, 896, 920, 921, 927, 973, 987, 1012, 1089, 1182, 1188, 1269, 1273, 1362, 1396, 1432, 1433, 1434, 1442, 1461, 1462, 1463, 1467, 1469, 1516, 1517, 1518, 1523, 1529, 1563, 1575, 1629, 1639, 1654, 1655, 1656, 1713, 1731, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1747, 1748, 1749, 1750, 1751, 1828, 1829, 1859, 1880, 1960, 1964, 1980, 2010, 2012, 2013, 2025, 2026, 2029, 2037, 2041, 2042, 2044, 2049, 2050, 2051, 2054, 2061, 2063, 2064, 2067, 2070, 2071, 2072, 2073, 2082, 2090, 2095, 2096, 2099, 2101, 2107, 2108], "move": [1, 5, 7, 8, 9, 14, 27, 29, 53, 60, 62, 524, 589, 821, 1126, 1191, 1269, 1277, 1336, 1341, 1377, 1437, 1438, 1439, 1496, 1497, 1498, 1523, 1563, 1668, 1715, 1716, 1791, 2012, 2023, 2024, 2029, 2031, 2042, 2045, 2046, 2051, 2052, 2053, 2056, 2063, 2064, 2065, 2067, 2072, 2079, 2080, 2084, 2099, 2108], "copi": [1, 7, 11, 22, 23, 27, 29, 36, 43, 50, 53, 57, 58, 62, 190, 196, 206, 209, 315, 402, 448, 458, 463, 471, 493, 499, 580, 581, 582, 583, 603, 617, 792, 814, 838, 839, 880, 881, 899, 916, 917, 918, 940, 962, 970, 973, 1018, 1019, 1145, 1146, 1147, 1148, 1150, 1164, 1184, 1269, 1281, 1341, 1342, 1419, 1459, 1469, 1523, 1533, 1575, 1713, 1754, 1764, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1840, 1846, 1852, 1939, 1948, 1954, 2010, 2011, 2021, 2029, 2032, 2039, 2040, 2042, 2044, 2047, 2053, 2062, 2064, 2065, 2066, 2067, 2072, 2077, 2079, 2080, 2081, 2083, 2088, 2098, 2099, 2101, 2103, 2107], "pin": [1, 29, 209, 337, 445, 446, 447, 448, 449, 463, 580, 603, 1107, 1109, 1158, 1269, 1523, 1754, 1832, 1836, 1838, 1939, 2009, 2032, 2079], "asynchron": [1, 3, 4, 29, 61, 196, 209, 580, 603, 1031, 1269, 1272, 1288, 1523, 2009, 2014, 2041, 2043, 2072, 2079, 2082, 2106], "prod_1": 1, "prod_2": 1, "del": [1, 486, 2014, 2029, 2044, 2046], "illustr": [1, 2013, 2038, 2044, 2077, 2090, 2093, 2102], "aliv": [1, 5, 22, 36, 45, 1009, 2039, 2042, 2046, 2053, 2072, 2073, 2074], "live": [1, 31, 486, 1048, 1051, 1269, 1523, 2010, 2042, 2046, 2047, 2072, 2074, 2093, 2096, 2098, 2110], "releas": [1, 7, 21, 27, 45, 48, 57, 62, 513, 687, 963, 964, 1005, 1006, 1013, 1030, 1040, 1041, 1044, 1048, 1049, 1051, 1062, 1214, 1266, 1269, 1300, 1311, 1313, 1314, 1315, 1318, 1331, 1359, 1360, 1381, 1462, 1493, 1523, 1539, 1654, 1655, 1656, 1768, 1823, 1839, 1855, 1920, 1924, 1948, 1986, 2008, 2009, 2012, 2026, 2029, 2039, 2041, 2042, 2049, 2054, 2055, 2056, 2057, 2061, 2067, 2072, 2083, 2084, 2090, 2096, 2099, 2108], "delet": [1, 27, 62, 896, 898, 1006, 1014, 2008, 2023, 2029, 2039, 2062, 2071, 2072, 2074, 2079, 2107], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 12, 15, 18, 27, 29, 31, 32, 46, 50, 53, 54, 61, 64, 81, 680, 689, 760, 768, 769, 909, 911, 915, 987, 1080, 1179, 1281, 1364, 1374, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1437, 1455, 1460, 1461, 1462, 1463, 1467, 1470, 1471, 1474, 1475, 1485, 1493, 1494, 1529, 1539, 1541, 1558, 1567, 1569, 1571, 1572, 1573, 1574, 1597, 1598, 1615, 1616, 1617, 1622, 1624, 1625, 1646, 1713, 1813, 1961, 2009, 2010, 2012, 2013, 2014, 2019, 2031, 2032, 2039, 2044, 2046, 2048, 2055, 2056, 2058, 2061, 2066, 2067, 2072, 2077, 2082, 2086, 2089, 2090, 2096, 2100, 2101], "messag": [1, 2, 5, 18, 27, 38, 48, 50, 58, 62, 64, 65, 83, 84, 624, 680, 1065, 1066, 1068, 1178, 1184, 1299, 1300, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 2008, 2010, 2011, 2013, 2014, 2019, 2046, 2059, 2061, 2065, 2066, 2072, 2074, 2084, 2101, 2108], "get": [1, 8, 12, 14, 22, 27, 28, 29, 36, 45, 46, 48, 49, 50, 53, 58, 61, 62, 88, 150, 335, 686, 734, 788, 789, 862, 863, 894, 900, 916, 929, 940, 957, 1033, 1034, 1035, 1052, 1093, 1164, 1167, 1168, 1169, 1176, 1177, 1180, 1184, 1215, 1216, 1285, 1337, 1444, 1445, 1446, 1465, 1466, 1490, 1491, 1492, 1519, 1520, 1521, 1533, 1551, 1713, 1714, 1728, 1755, 1762, 1844, 1859, 1964, 1987, 1988, 1989, 1996, 2008, 2009, 2010, 2013, 2021, 2025, 2026, 2029, 2030, 2039, 2042, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2056, 2059, 2062, 2064, 2067, 2072, 2074, 2077, 2081, 2082, 2083, 2093, 2095, 2096, 2097, 2098, 2102, 2108, 2109], "register_multi_grad_hook": [1, 2039], "fn": [1, 36, 37, 38, 42, 48, 50, 53, 62, 908, 925, 926, 975, 976, 979, 1165, 1171, 1175, 1269, 1270, 1282, 1287, 1523, 1973, 2010, 2012, 2013, 2017, 2029, 2039, 2050, 2072, 2094, 2096, 2100, 2101, 2106, 2107, 2108], "multi": [1, 4, 36, 45, 760, 1009, 1052, 1073, 1106, 1126, 1193, 1232, 1269, 1436, 1459, 1474, 1493, 1523, 1526, 1527, 1528, 1529, 1539, 1567, 1569, 1576, 1602, 1713, 1996, 1998, 2009, 2010, 2013, 2039, 2041, 2042, 2051, 2055, 2063, 2072, 2077, 2080, 2082, 2083, 2086], "specifi": [1, 2, 3, 5, 8, 12, 14, 19, 22, 23, 27, 29, 31, 32, 33, 34, 36, 38, 43, 44, 45, 46, 50, 51, 53, 62, 88, 97, 150, 195, 259, 319, 331, 471, 481, 493, 497, 499, 500, 513, 515, 517, 537, 545, 546, 560, 580, 583, 584, 585, 587, 588, 603, 680, 735, 741, 742, 743, 768, 769, 793, 794, 795, 799, 814, 823, 826, 840, 855, 859, 860, 862, 879, 881, 893, 894, 906, 907, 910, 913, 915, 940, 944, 967, 973, 994, 995, 1006, 1008, 1009, 1018, 1019, 1020, 1022, 1037, 1040, 1051, 1077, 1087, 1088, 1089, 1093, 1094, 1096, 1106, 1109, 1120, 1123, 1125, 1126, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1165, 1166, 1169, 1175, 1181, 1188, 1190, 1210, 1223, 1231, 1232, 1266, 1269, 1273, 1285, 1286, 1312, 1322, 1324, 1326, 1327, 1336, 1339, 1341, 1342, 1352, 1369, 1371, 1377, 1413, 1414, 1417, 1433, 1434, 1435, 1436, 1442, 1454, 1456, 1458, 1459, 1465, 1466, 1469, 1476, 1482, 1483, 1488, 1489, 1493, 1514, 1515, 1520, 1523, 1526, 1527, 1528, 1529, 1530, 1537, 1555, 1556, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1577, 1578, 1597, 1598, 1601, 1602, 1612, 1613, 1620, 1621, 1626, 1629, 1641, 1648, 1665, 1666, 1673, 1681, 1687, 1688, 1713, 1719, 1720, 1721, 1727, 1728, 1729, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1765, 1768, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1788, 1790, 1791, 1792, 1793, 1794, 1799, 1804, 1805, 1813, 1821, 1830, 1846, 1851, 1852, 1855, 1871, 1898, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1918, 1919, 1920, 1923, 1940, 1942, 1946, 1956, 1957, 1958, 1959, 1960, 1964, 1967, 1968, 1969, 1973, 1978, 1990, 2001, 2008, 2010, 2012, 2013, 2017, 2019, 2020, 2021, 2024, 2026, 2030, 2031, 2039, 2042, 2044, 2049, 2051, 2053, 2057, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2071, 2072, 2077, 2078, 2079, 2080, 2082, 2084, 2090, 2094, 2095, 2107, 2111], "ignor": [1, 5, 7, 27, 31, 37, 43, 53, 62, 150, 499, 544, 686, 689, 690, 691, 735, 794, 795, 859, 862, 863, 894, 915, 920, 921, 941, 963, 965, 966, 995, 999, 1004, 1052, 1053, 1073, 1074, 1127, 1129, 1137, 1138, 1139, 1184, 1213, 1230, 1269, 1281, 1287, 1290, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1361, 1414, 1415, 1416, 1432, 1433, 1434, 1435, 1436, 1456, 1458, 1466, 1474, 1476, 1482, 1488, 1489, 1493, 1514, 1515, 1516, 1517, 1518, 1523, 1526, 1527, 1528, 1529, 1530, 1537, 1539, 1555, 1556, 1567, 1572, 1601, 1602, 1612, 1621, 1641, 1665, 1673, 1713, 1768, 1776, 1799, 1807, 1811, 1871, 1902, 1903, 1920, 1924, 1948, 1996, 1997, 1998, 1999, 2010, 2013, 2014, 2020, 2031, 2039, 2042, 2044, 2061, 2077, 2084, 2097, 2104, 2107], "rel": [1, 8, 9, 14, 23, 27, 34, 53, 62, 487, 488, 694, 877, 920, 921, 925, 926, 995, 1191, 1258, 1324, 1327, 1572, 1573, 1594, 1629, 1776, 1780, 1781, 1793, 1807, 2020, 2026, 2041, 2042, 2047, 2050, 2061, 2064, 2084], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 12, 50, 51, 62, 64, 71, 72, 73, 797, 838, 839, 858, 859, 973, 987, 1164, 1273, 2017, 2059, 2064, 2083, 2098, 2099], "_allowmutationonsavedcontext": 1, "purpos": [1, 23, 27, 29, 32, 62, 87, 471, 499, 760, 920, 1279, 1364, 1442, 1474, 1529, 1706, 1707, 1708, 1709, 1871, 2026, 2032, 2039, 2044, 2064, 2073, 2094, 2096, 2099, 2102, 2108], "clear": [1, 2, 8, 9, 48, 62, 940, 983, 1182, 1186, 1269, 1523, 1524, 1533, 1775, 2008, 2039, 2042, 2051, 2056, 2062, 2063, 2096], "upon": [1, 2, 22, 28, 36, 38, 62, 973, 1587, 1713, 1730, 1733, 1957, 2029, 2039, 2042, 2061, 2067, 2074, 2111], "sin_": [1, 2011, 2030], "8415": [1, 2044, 2077], "sinbackward0": 1, "gradientedg": [1, 894, 915], "output_nr": [1, 2011, 2062], "edg": [1, 51, 779, 785, 1223, 1231, 1232, 1640, 1700, 2018, 2045, 2073, 2104], "get_gradient_edg": 1, "variou": [2, 5, 14, 22, 27, 29, 50, 62, 680, 1181, 1342, 1962, 1964, 2017, 2020, 2029, 2032, 2044, 2051, 2053, 2063, 2067, 2069, 2077, 2089, 2098, 2109, 2111], "get_cpu_cap": 2, "capabl": [2, 8, 14, 15, 27, 1033, 1720, 1721, 1830, 1987, 2042, 2049, 2050, 2052, 2086], "string": [2, 3, 5, 13, 14, 22, 27, 36, 42, 43, 45, 50, 51, 62, 603, 801, 814, 855, 982, 1031, 1048, 1049, 1106, 1164, 1184, 1269, 1277, 1280, 1341, 1450, 1451, 1452, 1523, 1524, 1533, 1567, 1569, 1571, 1604, 1605, 1606, 1744, 1823, 1855, 1863, 1865, 1963, 1964, 2008, 2011, 2012, 2013, 2014, 2017, 2031, 2039, 2044, 2050, 2051, 2056, 2059, 2061, 2064, 2066, 2072, 2079, 2080, 2082, 2088, 2094, 2096, 2099, 2108, 2109, 2110], "vsx": 2, "z": [2, 3, 10, 34, 53, 58, 64, 67, 72, 73, 617, 820, 878, 901, 904, 906, 907, 936, 964, 984, 1106, 1110, 1371, 1475, 1629, 1733, 1766, 1767, 1817, 1847, 1848, 2010, 2011, 2012, 2031, 2039, 2041, 2042, 2048, 2049, 2059, 2061, 2064, 2070, 2072, 2074, 2093, 2095, 2096, 2099, 2107, 2108], "vector": [2, 11, 23, 34, 53, 54, 58, 254, 313, 315, 321, 689, 690, 691, 885, 894, 899, 909, 910, 911, 912, 913, 914, 915, 954, 955, 961, 972, 991, 995, 1005, 1087, 1088, 1093, 1095, 1170, 1174, 1175, 1213, 1302, 1309, 1317, 1325, 1326, 1330, 1333, 1337, 1338, 1339, 1359, 1364, 1371, 1409, 1411, 1437, 1438, 1439, 1442, 1459, 1465, 1466, 1469, 1477, 1485, 1486, 1487, 1532, 1563, 1572, 1575, 1620, 1621, 1629, 1631, 1666, 1670, 1699, 1718, 1726, 1728, 1733, 1764, 1768, 1812, 1813, 1904, 1924, 1967, 1970, 1973, 2033, 2039, 2048, 2067, 2077, 2080, 2082, 2090, 2101], "NO": [2, 85, 87, 1183], "avx": [2, 2092], "avx2": [2, 2067, 2092], "avx512": [2, 2092], "is_built": [2, 2052], "built": [2, 3, 7, 8, 14, 23, 27, 33, 38, 56, 62, 974, 1031, 1279, 1573, 1799, 2009, 2017, 2032, 2039, 2041, 2042, 2044, 2049, 2051, 2052, 2053, 2067, 2069, 2094, 2096, 2097, 2108, 2109], "necessarili": [2, 23, 27, 34, 36, 45, 50, 84, 471, 920, 1306, 1328, 1339, 1370, 1458, 1530, 1720, 1721, 2042, 2044], "machin": [2, 27, 32, 36, 45, 53, 54, 59, 1273, 1279, 1315, 1560, 2049, 2050, 2051, 2052, 2053, 2055, 2058, 2059, 2064, 2071, 2072, 2073, 2089, 2090, 2092, 2096, 2101], "driver": [2, 19, 1213, 1315, 1333, 1334, 1380, 2011, 2042, 2054, 2072, 2106, 2108], "would": [2, 3, 5, 8, 9, 11, 14, 22, 27, 34, 38, 45, 46, 50, 51, 53, 55, 58, 62, 150, 445, 446, 447, 448, 449, 486, 698, 760, 794, 855, 894, 901, 902, 906, 915, 963, 981, 1107, 1109, 1127, 1158, 1168, 1169, 1183, 1184, 1196, 1197, 1198, 1267, 1269, 1270, 1274, 1277, 1285, 1286, 1385, 1386, 1409, 1432, 1433, 1434, 1435, 1436, 1474, 1488, 1493, 1516, 1517, 1518, 1523, 1533, 1539, 1629, 1640, 1703, 1713, 1714, 1720, 1721, 1754, 1766, 1794, 1832, 1836, 1838, 1849, 1859, 1939, 1940, 1945, 2010, 2012, 2013, 2021, 2030, 2031, 2032, 2033, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2047, 2048, 2053, 2056, 2061, 2063, 2064, 2065, 2067, 2072, 2073, 2074, 2076, 2077, 2093, 2094, 2095, 2096, 2098, 2099, 2100, 2101, 2102, 2104, 2107, 2108], "allow_tf32": [2, 1867, 2011, 2042, 2054], "tensorfloat": 2, "core": [2, 3, 7, 8, 50, 57, 80, 973, 1000, 1062, 1774, 2013, 2017, 2041, 2042, 2043, 2053, 2054, 2064, 2086, 2095, 2099, 2105], "amper": [2, 2077], "newer": [2, 14, 50, 1069, 1762, 2041, 2042, 2056, 2058, 2063, 2064, 2068, 2101], "tf32": [2, 19], "allow_fp16_reduced_precision_reduct": [2, 2042, 2054], "reduc": [2, 3, 14, 23, 27, 28, 29, 31, 33, 53, 321, 513, 516, 517, 686, 693, 695, 696, 697, 699, 819, 820, 821, 822, 825, 827, 875, 876, 973, 978, 1019, 1030, 1062, 1179, 1181, 1243, 1322, 1326, 1328, 1333, 1339, 1357, 1367, 1369, 1370, 1372, 1375, 1414, 1415, 1416, 1417, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1456, 1458, 1466, 1482, 1488, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1563, 1572, 1601, 1602, 1610, 1612, 1621, 1637, 1640, 1641, 1642, 1653, 1661, 1662, 1663, 1664, 1665, 1666, 1673, 1685, 1686, 1697, 1700, 1713, 1728, 1766, 1783, 1807, 1821, 1823, 1824, 1858, 1901, 1905, 1918, 1919, 1923, 1924, 1946, 1961, 1968, 1969, 1986, 2011, 2029, 2030, 2039, 2041, 2043, 2044, 2047, 2051, 2053, 2055, 2056, 2057, 2062, 2063, 2064, 2065, 2067, 2077, 2093, 2095, 2099, 2103, 2104, 2108, 2109], "precis": [2, 3, 8, 11, 14, 23, 34, 53, 686, 689, 920, 921, 941, 953, 1051, 1149, 1219, 1315, 1333, 1339, 1364, 1374, 1432, 1433, 1434, 1436, 1450, 1451, 1452, 1453, 1454, 1455, 1475, 1494, 1510, 1516, 1517, 1518, 1576, 1640, 1681, 1713, 1852, 1867, 1871, 2009, 2013, 2026, 2033, 2039, 2051, 2064, 2067, 2068, 2070, 2078, 2080, 2082, 2083, 2105, 2112], "gemm": [2, 2041, 2061, 2099], "allow_bf16_reduced_precision_reduct": [2, 2042, 2054], "cufft_plan_cach": [2, 2042], "cufft": 2, "queri": [2, 27, 45, 62, 735, 1008, 1009, 1011, 1017, 1064, 1069, 1083, 1084, 1194, 1269, 1382, 1523, 1529, 1584, 1681, 1732, 1978, 1979, 2011, 2025, 2042, 2064, 2095, 2098], "specif": [2, 3, 7, 8, 9, 11, 14, 19, 27, 29, 31, 32, 33, 34, 36, 43, 45, 48, 50, 53, 58, 62, 64, 79, 81, 86, 88, 513, 855, 862, 933, 1011, 1097, 1126, 1232, 1266, 1273, 1279, 1283, 1285, 1286, 1370, 1469, 1495, 1538, 1681, 1706, 1707, 1712, 1735, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1790, 1791, 1792, 1793, 1794, 1862, 1867, 1901, 1962, 1979, 2008, 2010, 2012, 2013, 2015, 2017, 2019, 2026, 2031, 2033, 2039, 2042, 2044, 2049, 2053, 2055, 2059, 2063, 2064, 2066, 2067, 2068, 2070, 2072, 2074, 2082, 2083, 2090, 2092, 2095, 2096, 2098, 2099, 2101, 2105, 2107, 2108, 2114], "via": [2, 7, 14, 15, 22, 27, 29, 33, 34, 43, 50, 51, 53, 57, 60, 62, 415, 486, 517, 617, 920, 921, 929, 960, 981, 1006, 1042, 1062, 1110, 1167, 1182, 1186, 1187, 1189, 1191, 1342, 1437, 1438, 1439, 1459, 1477, 1485, 1486, 1487, 1495, 1563, 1727, 1762, 1765, 1805, 2010, 2012, 2013, 2017, 2025, 2026, 2029, 2032, 2037, 2039, 2042, 2044, 2045, 2046, 2049, 2051, 2053, 2054, 2061, 2064, 2067, 2072, 2073, 2077, 2080, 2081, 2094, 2095, 2096, 2098, 2100, 2104, 2109], "readonli": 2, "int": [2, 3, 12, 18, 22, 23, 27, 29, 31, 32, 33, 34, 36, 39, 42, 43, 45, 46, 49, 50, 51, 53, 62, 64, 72, 73, 75, 78, 88, 216, 218, 232, 233, 242, 254, 313, 315, 317, 321, 437, 444, 445, 447, 449, 457, 472, 476, 493, 497, 499, 513, 515, 517, 520, 537, 543, 545, 546, 558, 560, 566, 583, 584, 585, 587, 588, 607, 617, 680, 693, 695, 696, 697, 699, 755, 756, 775, 777, 779, 780, 785, 786, 787, 819, 875, 876, 877, 879, 893, 901, 904, 906, 907, 924, 929, 936, 942, 944, 951, 958, 960, 967, 972, 994, 995, 999, 1000, 1004, 1005, 1009, 1011, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1033, 1034, 1035, 1037, 1039, 1043, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1075, 1076, 1077, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1093, 1094, 1095, 1096, 1097, 1098, 1104, 1107, 1109, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1158, 1160, 1161, 1165, 1166, 1167, 1168, 1169, 1175, 1177, 1180, 1182, 1200, 1202, 1210, 1217, 1220, 1221, 1223, 1227, 1228, 1230, 1231, 1232, 1233, 1244, 1245, 1266, 1267, 1269, 1270, 1272, 1275, 1276, 1281, 1289, 1291, 1301, 1302, 1322, 1323, 1326, 1335, 1336, 1337, 1338, 1339, 1340, 1342, 1349, 1356, 1357, 1362, 1367, 1369, 1370, 1372, 1375, 1377, 1378, 1379, 1380, 1383, 1384, 1390, 1397, 1398, 1399, 1400, 1401, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1465, 1466, 1468, 1469, 1470, 1471, 1473, 1475, 1477, 1485, 1486, 1487, 1490, 1491, 1492, 1494, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1510, 1511, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1525, 1528, 1530, 1531, 1534, 1535, 1536, 1538, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1557, 1559, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1611, 1612, 1613, 1620, 1621, 1628, 1631, 1640, 1648, 1665, 1666, 1667, 1671, 1672, 1687, 1688, 1696, 1700, 1701, 1702, 1712, 1713, 1728, 1729, 1738, 1739, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1755, 1757, 1762, 1765, 1768, 1769, 1771, 1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1814, 1821, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1832, 1834, 1835, 1836, 1838, 1844, 1845, 1846, 1849, 1850, 1851, 1852, 1855, 1860, 1861, 1862, 1866, 1869, 1870, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1896, 1900, 1903, 1904, 1905, 1912, 1915, 1917, 1918, 1919, 1920, 1923, 1925, 1929, 1936, 1940, 1941, 1943, 1945, 1946, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1963, 1964, 1967, 1968, 1969, 1973, 1974, 1979, 1981, 1982, 1983, 1984, 1987, 1988, 1989, 1990, 1993, 1996, 1997, 2000, 2001, 2005, 2006, 2010, 2011, 2012, 2013, 2014, 2017, 2026, 2029, 2030, 2032, 2037, 2042, 2045, 2053, 2056, 2059, 2061, 2062, 2065, 2066, 2067, 2071, 2072, 2076, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2090, 2095, 2099, 2103, 2107, 2110, 2112], "show": [2, 4, 7, 13, 18, 22, 23, 27, 29, 32, 35, 50, 53, 62, 80, 909, 915, 973, 1157, 1269, 1371, 1523, 1703, 1775, 2008, 2009, 2013, 2030, 2041, 2042, 2043, 2044, 2048, 2049, 2051, 2059, 2061, 2063, 2064, 2066, 2072, 2074, 2096, 2101, 2102, 2105, 2106, 2108, 2110], "max_siz": [2, 44, 46, 2042], "capac": [2, 1076, 2042, 2053], "preferred_blas_librari": 2, "overrid": [2, 5, 14, 19, 23, 27, 28, 29, 34, 38, 46, 53, 58, 62, 792, 793, 855, 891, 893, 906, 907, 1048, 1435, 1436, 1456, 1458, 1482, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1540, 1555, 1556, 1572, 1601, 1602, 1612, 1641, 1665, 1673, 1735, 1794, 1855, 1871, 2009, 2013, 2017, 2021, 2056, 2063, 2064, 2067, 2072, 2077, 2082, 2088, 2107, 2108], "bla": [2, 2041], "choos": [2, 9, 15, 62, 893, 906, 907, 933, 1031, 1315, 1328, 1333, 1435, 2037, 2038, 2041, 2064, 2068, 2082], "cubla": [2, 11, 19, 1023, 1961, 2055, 2093], "cublaslt": [2, 19], "subject": [2, 3, 11, 18, 27, 29, 31, 33, 53, 61, 62, 63, 233, 866, 1582, 1583, 1584, 1587, 1681, 1713, 2013, 2030, 2031, 2039, 2044, 2061, 2065, 2066, 2067, 2068, 2072, 2077, 2080, 2086, 2087, 2088, 2090, 2095, 2105], "rocm": [2, 686, 689, 941, 953, 1364, 1374, 1450, 1451, 1452, 1453, 1454, 1455, 1475, 1494, 1510, 2009], "hipbla": 2, "hipblaslt": 2, "offer": [2, 27, 29, 53, 56, 1713, 1961, 2042, 2049, 2064, 2066, 2072, 2077, 2094, 2099, 2103, 2111], "wherev": [2, 9, 2030], "prefer": [2, 9, 22, 27, 29, 36, 46, 53, 863, 879, 911, 1197, 1267, 1310, 1323, 1327, 1335, 1342, 1530, 1681, 1859, 1920, 1939, 2010, 2021, 2039, 2042, 2063, 2064, 2077, 2099], "environ": [2, 3, 7, 14, 15, 18, 21, 23, 29, 32, 34, 36, 38, 43, 49, 50, 62, 79, 81, 680, 1182, 1184, 1206, 1279, 1285, 1493, 1539, 1961, 2008, 2009, 2010, 2019, 2039, 2041, 2042, 2043, 2049, 2054, 2055, 2057, 2065, 2072, 2090, 2092, 2094, 2099, 2108], "variabl": [2, 3, 5, 12, 14, 18, 21, 23, 32, 34, 36, 38, 43, 49, 51, 53, 58, 62, 64, 67, 72, 73, 79, 81, 448, 680, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 728, 729, 730, 731, 732, 734, 738, 739, 740, 741, 742, 743, 745, 746, 756, 760, 764, 799, 901, 902, 906, 987, 991, 995, 1075, 1107, 1175, 1184, 1283, 1285, 1342, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1465, 1466, 1474, 1475, 1493, 1494, 1495, 1508, 1510, 1523, 1526, 1531, 1539, 1541, 1713, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1772, 1776, 1778, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1832, 1834, 1836, 1961, 1973, 2006, 2008, 2009, 2019, 2020, 2031, 2032, 2039, 2041, 2042, 2043, 2046, 2048, 2054, 2055, 2057, 2059, 2061, 2063, 2067, 2072, 2079, 2082, 2090, 2095, 2096, 2097, 2099, 2101, 2108], "torch_blas_prefer_cublaslt": 2, "global": [2, 3, 5, 8, 11, 12, 19, 22, 27, 29, 31, 34, 36, 46, 53, 58, 61, 62, 64, 67, 72, 73, 855, 862, 866, 874, 929, 942, 951, 987, 1006, 1040, 1057, 1064, 1107, 1109, 1119, 1124, 1142, 1158, 1161, 1164, 1227, 1228, 1250, 1257, 1269, 1272, 1285, 1289, 1340, 1356, 1523, 1681, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1740, 1744, 1772, 1832, 1834, 1836, 1839, 1863, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2006, 2010, 2013, 2014, 2017, 2025, 2033, 2038, 2044, 2050, 2051, 2053, 2055, 2056, 2067, 2072, 2073, 2074, 2077, 2080, 2082, 2096, 2097, 2098, 2099, 2100, 2107, 2108], "overridden": [2, 14, 62, 890, 891, 892, 906, 907, 1048, 1523, 1899, 2013, 2039, 2044, 2054, 2065, 2108, 2109], "achiev": [2, 22, 23, 27, 29, 33, 34, 46, 53, 1106, 1171, 1269, 1436, 1442, 1523, 1529, 1530, 1602, 1631, 1713, 2027, 2042, 2050, 2053, 2064, 2072, 2074, 2108], "better": [2, 3, 7, 8, 9, 14, 22, 26, 27, 36, 50, 57, 916, 973, 1075, 1163, 1167, 1168, 1179, 1256, 1285, 1458, 1557, 1681, 1687, 1713, 1720, 1721, 1805, 1830, 2013, 2038, 2039, 2041, 2042, 2047, 2048, 2055, 2057, 2061, 2063, 2066, 2067, 2068, 2077, 2082, 2088, 2094, 2096, 2097, 2105], "select": [2, 5, 15, 20, 22, 27, 29, 34, 36, 43, 51, 313, 315, 317, 321, 760, 963, 997, 999, 1003, 1012, 1013, 1017, 1024, 1025, 1026, 1027, 1029, 1050, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1075, 1076, 1079, 1081, 1083, 1084, 1126, 1342, 1371, 1396, 1397, 1398, 1399, 1400, 1405, 1406, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1474, 1493, 1539, 1587, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1681, 1749, 1750, 1862, 1936, 1964, 1976, 1980, 1981, 1982, 1983, 1985, 2000, 2003, 2004, 2010, 2011, 2013, 2029, 2030, 2031, 2032, 2039, 2041, 2042, 2048, 2055, 2062, 2067, 2077, 2081, 2084, 2097, 2103, 2105, 2110], "incorrect": [2, 4, 5, 53, 62, 84, 85, 87, 254, 513, 556, 901, 904, 906, 920, 929, 955, 1285, 1328, 1341, 1529, 1567, 1568, 1569, 1570, 1571, 1699, 1768, 1909, 1920, 2010, 2013, 2017, 2042, 2054, 2061, 2096, 2111], "_blasbackend": 2, "preferred_linalg_librari": [2, 1306], "heurist": [2, 14, 22, 45, 46, 62, 978, 1106, 2047, 2093, 2102], "cusolv": [2, 1333, 1334, 1924], "magma": [2, 1315, 1359, 1823, 1924, 2057, 2077], "algebra": [2, 9, 1106, 1306, 1327, 2009, 2018], "decid": [2, 4, 7, 27, 36, 45, 57, 486, 1181, 1744, 2020, 2061, 2077, 2098, 2099, 2102], "pick": [2, 27, 44, 46, 513, 973, 2039, 2072, 2095, 2097, 2102], "torch_linalg_prefer_cusolv": 2, "linalg": [2, 11, 406, 963, 964, 965, 966, 1005, 1092, 1213, 1247, 1350, 1359, 1360, 1361, 1365, 1366, 1727, 1728, 1733, 1768, 1810, 1815, 1817, 1823, 1893, 1924, 1925, 1948, 1970, 2009], "inv": [2, 34, 1247, 1301, 1305, 1311, 1327, 1331, 1335], "inv_ex": [2, 1310], "cholesky_ex": [2, 1299], "lu_factor": [2, 1318, 1319, 1359, 1360, 1361], "lu": [2, 10, 1311, 1317, 1318, 1319, 1360, 1361, 2011], "eigh": [2, 1299, 1305, 1308, 1327, 1333, 2054], "eighval": 2, "svdval": [2, 1301, 1315, 1324, 1333, 1924, 2054], "_linalgbackend": 2, "sdpaparam": 2, "flash_sdp_en": 2, "flash": [2, 1582, 1587], "scale": [2, 7, 22, 32, 34, 36, 44, 46, 97, 173, 473, 475, 617, 685, 689, 690, 691, 738, 739, 740, 741, 742, 743, 744, 749, 750, 751, 752, 753, 754, 755, 756, 759, 770, 772, 773, 774, 775, 777, 780, 781, 795, 799, 802, 819, 820, 821, 822, 825, 941, 1120, 1121, 1124, 1142, 1174, 1175, 1356, 1431, 1460, 1465, 1466, 1467, 1483, 1495, 1551, 1576, 1577, 1578, 1582, 1587, 1620, 1621, 1622, 1638, 1640, 1681, 1682, 1687, 1778, 1799, 1825, 1826, 1827, 1828, 1829, 1902, 1903, 1921, 1973, 2009, 2011, 2031, 2037, 2042, 2046, 2051, 2059, 2067, 2068, 2070, 2078, 2099], "product": [2, 15, 27, 29, 32, 34, 45, 150, 686, 689, 690, 691, 760, 894, 899, 910, 912, 913, 914, 915, 941, 953, 959, 963, 991, 1005, 1017, 1064, 1069, 1083, 1084, 1087, 1103, 1106, 1170, 1174, 1175, 1246, 1290, 1302, 1309, 1335, 1336, 1338, 1364, 1371, 1374, 1411, 1474, 1475, 1493, 1494, 1582, 1587, 1628, 1681, 1727, 1811, 1812, 1821, 1867, 1941, 1956, 1970, 1973, 2009, 2010, 2030, 2039, 2048, 2050, 2054, 2064, 2067, 2077, 2096, 2110], "attent": [2, 7, 33, 735, 1436, 1529, 1567, 1569, 1571, 1582, 1584, 1602, 1681, 2009, 2057, 2081, 2096], "enable_mem_efficient_sdp": [2, 1681], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1681], "math_sdp_en": 2, "math": [2, 22, 62, 1116, 1321, 1582, 1587, 1641, 1681, 1813, 1830, 1925, 2009, 2010, 2012, 2013, 2047, 2054, 2077, 2078, 2084, 2108], "enable_math_sdp": [2, 1681], "cudnn_sdp_en": 2, "enable_cudnn_sdp": 2, "can_use_flash_attent": 2, "debug": [2, 4, 5, 8, 19, 22, 42, 50, 79, 81, 680, 827, 828, 832, 844, 920, 921, 973, 975, 982, 1006, 1039, 1080, 1217, 1299, 1706, 1707, 1708, 1709, 1866, 1873, 2009, 2012, 2019, 2039, 2041, 2042, 2043, 2049, 2050, 2051, 2055, 2057, 2059, 2061, 2064, 2087, 2095, 2096, 2097, 2100, 2101, 2104, 2110, 2111], "check": [2, 3, 4, 5, 11, 14, 19, 22, 27, 28, 29, 34, 45, 53, 64, 65, 70, 73, 221, 340, 499, 694, 862, 901, 902, 904, 905, 906, 907, 920, 921, 927, 975, 1008, 1009, 1011, 1015, 1044, 1062, 1181, 1184, 1192, 1193, 1201, 1202, 1256, 1266, 1269, 1285, 1286, 1299, 1300, 1305, 1306, 1308, 1311, 1313, 1318, 1324, 1327, 1331, 1333, 1334, 1359, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1703, 1713, 1730, 1733, 1746, 1756, 1775, 1776, 1899, 1906, 1907, 1908, 1909, 1910, 1911, 1962, 1978, 1979, 2008, 2009, 2012, 2013, 2014, 2017, 2030, 2031, 2038, 2042, 2044, 2045, 2046, 2047, 2050, 2051, 2052, 2055, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2072, 2077, 2082, 2084, 2092, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2107, 2108, 2109], "flashattent": [2, 1571, 1681], "util": [2, 7, 17, 29, 46, 50, 51, 53, 54, 61, 62, 64, 499, 732, 735, 738, 739, 740, 745, 746, 756, 760, 764, 790, 798, 907, 1022, 1107, 1108, 1109, 1157, 1201, 1202, 1269, 1474, 1493, 1523, 1539, 1540, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1730, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1754, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 1928, 1929, 1931, 1932, 1933, 1961, 2009, 2013, 2017, 2021, 2026, 2038, 2040, 2041, 2042, 2044, 2046, 2048, 2050, 2051, 2053, 2055, 2061, 2063, 2064, 2065, 2095, 2096, 2099, 2106, 2108, 2111], "scaled_dot_product_attent": [2, 1529, 1567, 1583, 1586, 1587, 2011, 2034, 2035, 2036, 2062], "_sdpaparam": 2, "kei": [2, 3, 22, 29, 36, 43, 45, 46, 50, 51, 53, 60, 62, 415, 603, 680, 735, 855, 860, 928, 933, 940, 1072, 1163, 1173, 1185, 1269, 1285, 1286, 1341, 1523, 1524, 1529, 1533, 1567, 1568, 1569, 1570, 1571, 1584, 1681, 1747, 1763, 1962, 1964, 2009, 2011, 2012, 2013, 2017, 2025, 2042, 2044, 2050, 2051, 2056, 2061, 2062, 2063, 2066, 2067, 2070, 2072, 2073, 2079, 2082, 2084, 2087, 2089, 2100, 2105, 2106, 2107, 2111], "mask": [2, 32, 43, 399, 400, 401, 402, 403, 544, 735, 920, 921, 1363, 1431, 1442, 1467, 1529, 1567, 1568, 1569, 1570, 1571, 1622, 1681, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1794, 2009, 2011, 2030, 2031, 2077, 2099], "dropout": [2, 5, 33, 62, 734, 735, 760, 1269, 1431, 1461, 1462, 1463, 1467, 1474, 1493, 1523, 1529, 1539, 1540, 1567, 1569, 1571, 1595, 1615, 1616, 1617, 1622, 1681, 2009, 2011, 2023, 2031, 2032, 2039, 2042, 2062, 2069], "causal": [2, 735, 1529, 1567, 1568, 1569, 1570, 1571, 1583, 1584, 1585, 1586, 1681], "warn": [2, 3, 14, 18, 23, 24, 27, 31, 50, 84, 85, 87, 680, 909, 915, 963, 1017, 1064, 1069, 1080, 1083, 1084, 1175, 1184, 1250, 1266, 1285, 1327, 1341, 1371, 1529, 1567, 1568, 1569, 1570, 1571, 1681, 1730, 1733, 1866, 1873, 1920, 1961, 1973, 2008, 2019, 2026, 2040, 2044, 2059, 2062, 2064, 2071, 2096, 2108], "why": [2, 3, 7, 22, 58, 62, 1106, 1273, 1681, 2009, 2017, 2020, 2045, 2047, 2095, 2096, 2098, 2106, 2110], "could": [2, 4, 5, 7, 8, 22, 27, 33, 34, 36, 45, 58, 61, 62, 583, 584, 585, 587, 588, 929, 975, 1044, 1127, 1129, 1137, 1138, 1139, 1185, 1266, 1275, 1300, 1341, 1359, 1385, 1386, 1720, 1721, 1798, 1901, 1957, 2012, 2013, 2020, 2029, 2039, 2042, 2043, 2057, 2061, 2064, 2067, 2068, 2072, 2073, 2074, 2077, 2081, 2082, 2094, 2096, 2099, 2100, 2104, 2108, 2111], "depend": [2, 4, 5, 12, 14, 22, 27, 29, 31, 34, 36, 45, 46, 48, 51, 53, 62, 315, 785, 879, 1017, 1064, 1069, 1083, 1084, 1127, 1129, 1137, 1138, 1139, 1165, 1169, 1174, 1184, 1194, 1196, 1197, 1198, 1200, 1281, 1285, 1305, 1306, 1333, 1359, 1364, 1435, 1436, 1456, 1458, 1466, 1469, 1482, 1488, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1575, 1576, 1594, 1601, 1602, 1612, 1621, 1629, 1641, 1665, 1673, 1681, 1700, 1703, 1713, 1733, 1734, 1740, 1799, 1811, 1813, 1830, 1846, 1906, 1907, 1908, 1910, 1911, 1924, 1948, 1976, 2008, 2010, 2012, 2013, 2017, 2020, 2021, 2029, 2039, 2041, 2042, 2044, 2045, 2047, 2048, 2051, 2053, 2058, 2060, 2061, 2066, 2067, 2072, 2077, 2083, 2084, 2089, 2090, 2093, 2094, 2095, 2096, 2098, 2099, 2101, 2104, 2106, 2107, 2110], "can_use_efficient_attent": 2, "efficient_attent": [2, 1582, 1587], "sdp_kernel": [2, 1681], "enable_flash": 2, "enable_math": [2, 1681], "enable_mem_effici": 2, "enable_cudnn": 2, "temporarili": [2, 36, 1863, 2039, 2061, 2066, 2102], "previou": [2, 18, 27, 29, 45, 50, 53, 62, 513, 556, 760, 973, 1040, 1151, 1223, 1280, 1340, 1356, 1474, 1493, 1539, 1587, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1775, 1807, 1830, 1920, 2023, 2039, 2042, 2044, 2051, 2057, 2059, 2067, 2074, 2090, 2099], "restor": [2, 5, 29, 31, 62, 88, 983, 1151, 1340, 1356, 1587, 1765, 1850, 1871, 2051, 2056, 2097], "is_avail": [2, 17, 27, 1964, 2009, 2042, 2049, 2052, 2056, 2066, 2090, 2114], "determinist": [2, 3, 5, 21, 27, 34, 62, 84, 88, 486, 499, 513, 874, 1107, 1108, 1109, 1217, 1250, 1272, 1285, 1286, 1367, 1370, 1372, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1493, 1539, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1681, 1860, 1866, 1961, 2009, 2011, 2039, 2047, 2055, 2063, 2071], "algorithm": [2, 3, 7, 11, 20, 23, 28, 31, 34, 36, 53, 88, 760, 779, 785, 963, 1266, 1310, 1317, 1323, 1327, 1333, 1342, 1359, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1472, 1474, 1493, 1539, 1575, 1576, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1629, 1640, 1681, 1700, 1713, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1794, 1813, 1852, 1867, 1924, 1925, 1961, 2009, 2039, 2042, 2054, 2072, 2077], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 26, 499, 874, 1107, 1108, 1109, 1250, 1866, 2055], "benchmark": [2, 2009, 2011, 2042, 2049, 2066, 2093, 2099, 2105], "fastest": [2, 878, 1713, 1767, 1780, 1781, 1793, 2048, 2055, 2063], "benchmark_limit": 2, "maximum": [2, 26, 34, 45, 46, 50, 499, 695, 697, 771, 795, 820, 821, 822, 825, 826, 875, 1019, 1054, 1056, 1062, 1070, 1071, 1085, 1086, 1107, 1108, 1109, 1152, 1169, 1230, 1231, 1232, 1342, 1367, 1389, 1481, 1620, 1621, 1719, 1797, 1805, 1830, 1844, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1963, 2011, 2019, 2037, 2038, 2042, 2053, 2062, 2070, 2084, 2085, 2095, 2103, 2110], "try": [2, 3, 4, 7, 8, 27, 29, 37, 38, 42, 45, 50, 57, 58, 82, 83, 973, 1076, 1160, 1169, 1175, 1184, 1208, 1274, 1276, 1285, 1306, 1389, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1567, 1568, 1570, 1576, 1582, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1681, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1973, 2008, 2010, 2013, 2014, 2017, 2039, 2042, 2044, 2046, 2048, 2053, 2061, 2063, 2064, 2067, 2068, 2072, 2077, 2094, 2095, 2098, 2099, 2101, 2108, 2110], "dispatch": [2, 27, 53, 62, 84, 85, 87, 1185, 1274, 1385, 1386, 1962, 1964, 2013, 2017, 2042, 2044, 2059, 2061, 2099, 2100, 2109], "v8": [2, 19], "get_fastpath_en": 2, "fast": [2, 7, 8, 22, 27, 62, 920, 1464, 1485, 1486, 1487, 1555, 1571, 1720, 1721, 1805, 1811, 1830, 1852, 1867, 2009, 2041, 2042, 2044, 2049, 2063, 2072, 2077, 2080, 2081, 2089, 2096, 2098, 2101, 2102, 2110], "path": [2, 3, 4, 8, 14, 19, 27, 29, 43, 45, 48, 49, 50, 53, 62, 734, 930, 931, 932, 1006, 1106, 1193, 1269, 1523, 1540, 1571, 1775, 2008, 2009, 2011, 2012, 2039, 2042, 2044, 2047, 2049, 2056, 2059, 2064, 2066, 2077, 2087, 2090, 2093, 2101, 2102], "transformerencod": 2, "multiheadattent": [2, 1567, 1569, 1571, 2067], "fastpath": [2, 1529, 2098], "condit": [2, 5, 12, 20, 22, 50, 51, 58, 62, 64, 67, 72, 73, 617, 620, 624, 694, 760, 910, 920, 921, 987, 1266, 1285, 1299, 1301, 1306, 1309, 1315, 1316, 1317, 1328, 1333, 1474, 1493, 1539, 1571, 1756, 1761, 1948, 1976, 2010, 2011, 2012, 2014, 2022, 2032, 2039, 2044, 2054, 2065, 2082, 2095, 2096, 2097, 2098, 2103], "met": [2, 12, 617, 987, 1309, 1316, 1317, 1328, 1342, 1571, 1909], "set_fastpath_en": 2, "verbos": [2, 14, 27, 62, 680, 1184, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 2008, 2019, 2031, 2061, 2082, 2108], "On": [2, 14, 21, 22, 27, 28, 34, 46, 53, 58, 62, 686, 689, 941, 953, 1317, 1364, 1374, 1450, 1451, 1452, 1453, 1454, 1455, 1475, 1490, 1491, 1492, 1493, 1494, 1510, 1533, 1539, 1552, 1713, 1780, 1781, 1790, 1793, 2009, 2010, 2020, 2039, 2041, 2042, 2044, 2054, 2064, 2072, 2073, 2074, 2077, 2093, 2095, 2096, 2098, 2099], "demand": [2, 22, 1042, 2012, 2050, 2053, 2072], "onemkl": 2, "easier": [2, 7, 22, 50, 62, 2010, 2012, 2032, 2039, 2040, 2044, 2045, 2047, 2077, 2099, 2108], "dump": [2, 62, 1006, 2043, 2057, 2099, 2108], "durat": [2, 27, 42, 45, 938, 1385, 1386, 2026, 2059, 2066, 2099, 2108], "kernel": [2, 3, 4, 11, 14, 18, 19, 27, 53, 61, 486, 739, 740, 741, 742, 743, 772, 773, 774, 927, 973, 1004, 1009, 1011, 1012, 1048, 1049, 1082, 1084, 1391, 1396, 1432, 1433, 1434, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1470, 1471, 1490, 1491, 1492, 1499, 1500, 1501, 1502, 1503, 1504, 1516, 1517, 1518, 1519, 1520, 1521, 1575, 1604, 1605, 1606, 1607, 1608, 1609, 1624, 1625, 1681, 1720, 1721, 1731, 1962, 1964, 1979, 1980, 2005, 2010, 2017, 2023, 2032, 2042, 2044, 2045, 2047, 2052, 2054, 2061, 2063, 2066, 2068, 2077, 2093, 2096, 2097, 2098, 2099, 2100, 2101, 2108, 2111], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 22, 27, 32, 33, 62, 680, 859, 993, 995, 1062, 1306, 1315, 1333, 1427, 1469, 1575, 1623, 1713, 1805, 1891, 1904, 2009, 2029, 2031, 2032, 2041, 2042, 2046, 2051, 2054, 2056, 2059, 2061, 2064, 2065, 2068, 2072, 2077, 2080, 2083, 2093, 2099, 2106, 2108, 2110], "moreov": [2, 29, 81, 513, 1713, 1793, 2111], "investig": [2, 7, 27, 58, 2106], "singl": [2, 3, 5, 12, 14, 23, 27, 29, 31, 32, 34, 36, 38, 43, 44, 45, 53, 54, 56, 57, 58, 59, 61, 62, 64, 72, 73, 254, 680, 695, 696, 766, 767, 768, 769, 772, 773, 774, 814, 896, 909, 910, 911, 912, 913, 914, 915, 927, 942, 951, 955, 973, 987, 991, 995, 1048, 1051, 1163, 1165, 1166, 1169, 1171, 1175, 1227, 1228, 1232, 1254, 1268, 1269, 1285, 1286, 1289, 1347, 1371, 1385, 1386, 1425, 1426, 1429, 1430, 1433, 1434, 1436, 1450, 1451, 1452, 1454, 1455, 1458, 1459, 1470, 1471, 1477, 1490, 1491, 1492, 1495, 1517, 1518, 1523, 1531, 1535, 1536, 1538, 1552, 1563, 1588, 1589, 1590, 1591, 1592, 1593, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1624, 1625, 1626, 1654, 1655, 1656, 1699, 1705, 1707, 1710, 1711, 1712, 1713, 1718, 1719, 1722, 1724, 1726, 1763, 1764, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1794, 1799, 1820, 1846, 1867, 1912, 1918, 1919, 1957, 1958, 1961, 1968, 1969, 1973, 2009, 2010, 2012, 2013, 2020, 2023, 2029, 2031, 2032, 2033, 2039, 2041, 2042, 2044, 2045, 2047, 2048, 2051, 2053, 2054, 2055, 2056, 2061, 2063, 2064, 2065, 2066, 2067, 2073, 2074, 2077, 2080, 2083, 2084, 2088, 2092, 2093, 2095, 2097, 2098, 2099, 2101, 2107, 2108], "enough": [2, 8, 23, 62, 1184, 1191, 1281, 1573, 1906, 1907, 1908, 1909, 1910, 1911, 1961, 2012, 2029, 2032, 2042, 2044, 2048, 2063, 2064, 2080, 2096, 2099, 2109], "scope": [2, 7, 12, 48, 62, 81, 987, 1066, 1160, 1563, 1744, 2010, 2012, 2013, 2042, 2046, 2061, 2064, 2074, 2098, 2107], "second": [2, 5, 14, 18, 27, 31, 36, 38, 45, 48, 50, 59, 62, 686, 689, 691, 694, 760, 794, 875, 876, 877, 885, 893, 906, 907, 920, 921, 941, 945, 946, 948, 949, 950, 953, 1005, 1017, 1064, 1069, 1083, 1084, 1094, 1096, 1097, 1103, 1111, 1152, 1153, 1165, 1168, 1169, 1170, 1174, 1175, 1197, 1211, 1212, 1223, 1226, 1234, 1235, 1236, 1246, 1258, 1292, 1294, 1302, 1338, 1341, 1347, 1348, 1358, 1364, 1368, 1370, 1371, 1373, 1374, 1415, 1420, 1423, 1427, 1433, 1434, 1440, 1451, 1452, 1454, 1455, 1465, 1466, 1473, 1474, 1488, 1491, 1492, 1493, 1511, 1515, 1517, 1518, 1539, 1552, 1611, 1613, 1647, 1703, 1744, 1780, 1781, 1784, 1790, 1794, 1805, 1807, 1851, 1901, 1909, 1945, 1950, 1952, 1967, 1970, 1973, 2012, 2013, 2017, 2022, 2039, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2055, 2059, 2061, 2066, 2072, 2078, 2082, 2090, 2093, 2096], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 12, 15, 18, 22, 24, 27, 29, 36, 37, 38, 42, 50, 51, 53, 57, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 87, 499, 680, 747, 896, 897, 898, 899, 900, 912, 1164, 1179, 1194, 1197, 1213, 1436, 1459, 1713, 1807, 1966, 2009, 2010, 2013, 2014, 2019, 2026, 2029, 2032, 2037, 2039, 2041, 2044, 2047, 2048, 2059, 2064, 2066, 2067, 2068, 2072, 2077, 2082, 2087, 2088, 2089, 2095, 2096, 2097, 2099, 2100, 2103, 2106, 2107, 2108, 2109], "verbose_off": 2, "dnn": [2, 2041], "onednn": [2, 856, 857, 860, 1271, 1278, 2062, 2067], "former": [2, 53, 1493, 1523, 2039], "dnnl_verbos": 2, "verbose_on_cr": 2, "set_flag": 2, "_enabl": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 16, 17, 23, 32, 34, 50, 57, 61, 1629, 2008, 2009, 2027, 2028, 2044, 2051, 2059, 2063, 2070, 2072, 2082, 2086, 2090, 2094, 2114], "els": [2, 7, 12, 22, 27, 29, 32, 34, 36, 37, 45, 50, 62, 64, 603, 760, 940, 944, 987, 1281, 1287, 1488, 1563, 1667, 1681, 1713, 1780, 1781, 1784, 1790, 1791, 1792, 1793, 1847, 1848, 1880, 1886, 1964, 2010, 2012, 2014, 2015, 2020, 2029, 2032, 2042, 2044, 2045, 2047, 2051, 2052, 2059, 2060, 2061, 2063, 2064, 2079, 2090, 2093, 2094, 2095, 2096, 2107], "einsum": [2, 2011, 2062], "readthedoc": [2, 1106], "io": [2, 7, 14, 22, 29, 50, 1106, 1277, 1280, 1341, 1493, 1494, 1571, 1855, 2057, 2059, 2067], "en": [2, 14, 23, 1106, 2049, 2082, 2112], "path_find": [2, 1106], "html": [2, 3, 4, 7, 11, 14, 15, 46, 680, 730, 731, 732, 733, 745, 746, 756, 761, 762, 763, 764, 765, 973, 1106, 1573, 1961, 1964, 2040, 2049, 2051, 2055, 2064, 2066, 2082], "calcul": [2, 22, 27, 29, 36, 42, 760, 768, 769, 799, 802, 819, 820, 824, 917, 961, 995, 1094, 1098, 1106, 1110, 1260, 1266, 1325, 1347, 1348, 1350, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1442, 1453, 1454, 1455, 1469, 1474, 1476, 1477, 1485, 1486, 1487, 1495, 1563, 1572, 1575, 1576, 1596, 1597, 1598, 1602, 1621, 1626, 1629, 1640, 1670, 1728, 1740, 1762, 1766, 1768, 1799, 1845, 1918, 1919, 1950, 1952, 1968, 1969, 2039, 2040, 2043, 2047, 2048, 2054, 2057, 2067, 2077, 2088], "contract": [2, 51, 1106, 1941, 2009, 2031, 2064, 2094], "fall": [2, 7, 14, 19, 22, 50, 795, 920, 973, 1197, 1232, 1283, 1341, 1483, 1555, 1638, 1685, 1718, 1719, 2008, 2061, 2067, 2099, 2106], "left": [2, 22, 62, 460, 499, 814, 820, 866, 942, 946, 949, 951, 952, 957, 962, 1106, 1126, 1133, 1147, 1150, 1151, 1155, 1223, 1227, 1228, 1232, 1266, 1267, 1274, 1289, 1310, 1319, 1323, 1327, 1330, 1331, 1332, 1333, 1335, 1347, 1348, 1409, 1427, 1432, 1433, 1434, 1435, 1436, 1450, 1451, 1452, 1469, 1476, 1489, 1490, 1491, 1492, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1526, 1527, 1528, 1532, 1533, 1572, 1575, 1576, 1577, 1578, 1584, 1586, 1629, 1649, 1668, 1681, 1719, 1797, 1798, 1811, 1839, 1852, 1859, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1920, 1941, 1946, 1967, 2010, 2011, 2013, 2039, 2044, 2047, 2051, 2070, 2078, 2096, 2106, 2110], "strategi": [2, 3, 7, 22, 23, 27, 31, 38, 53, 909, 911, 1106, 1167, 1283, 1427, 1713, 1720, 1721, 1805, 2012, 2045, 2048, 2068, 2096, 2099], "auto": [2, 27, 50, 54, 82, 83, 1106, 1435, 1436, 2013, 2061, 2080, 2082, 2098], "greedi": [2, 31, 1106], "doc": [2, 3, 4, 9, 11, 15, 45, 46, 51, 86, 680, 730, 731, 732, 733, 745, 746, 756, 761, 762, 763, 764, 765, 840, 973, 1175, 1288, 1568, 1569, 1570, 1571, 1961, 1973, 2014, 2017, 2029, 2040, 2043, 2044, 2051, 2055, 2064, 2067, 2072, 2077, 2082, 2090, 2096, 2100, 2104], "timer": [3, 30, 2009], "stmt": [3, 2041], "setup": [3, 14, 23, 29, 45, 46, 53, 63, 820, 821, 822, 825, 1175, 1713, 1973, 2041, 2042, 2052, 2066, 2072, 2073, 2094], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 22, 27, 31, 936, 1106, 1427, 1436, 1442, 1456, 1458, 1482, 1515, 1526, 1527, 1613, 1755, 1798, 2043, 2047, 2053, 2055, 2082], "sub_label": 3, "descript": [3, 7, 13, 14, 19, 22, 24, 38, 45, 62, 734, 1241, 1242, 1243, 1315, 1342, 1594, 1823, 1867, 2012, 2013, 2022, 2042, 2044, 2048, 2050, 2051, 2061, 2085, 2089, 2100, 2106, 2112], "env": [3, 27, 34, 38, 43, 45, 46, 47, 49, 62, 1062, 1184, 1185, 2043, 2054, 2059, 2060, 2072, 2099, 2108], "num_thread": [3, 2053], "languag": [3, 14, 38, 50, 1281, 1427, 1567, 1628, 2046, 2058, 2096], "measur": [3, 34, 42, 1008, 1054, 1056, 1301, 1382, 1435, 1436, 1456, 1482, 1489, 1514, 1515, 1572, 1573, 1601, 1661, 1807, 1978, 2009, 2025, 2042, 2050, 2051, 2063, 2077, 2108], "statement": [3, 12, 34, 51, 58, 62, 64, 69, 72, 73, 987, 1270, 1285, 2014, 2039, 2044, 2053, 2056, 2058, 2061, 2064, 2070, 2072, 2094, 2096], "full": [3, 7, 8, 14, 15, 22, 23, 27, 29, 31, 34, 45, 49, 50, 53, 54, 58, 62, 486, 513, 901, 905, 906, 907, 942, 951, 973, 1134, 1135, 1136, 1140, 1141, 1143, 1162, 1174, 1175, 1227, 1228, 1273, 1307, 1308, 1315, 1316, 1317, 1328, 1333, 1334, 1342, 1359, 1436, 1442, 1476, 1537, 1567, 1604, 1605, 1606, 1613, 1626, 1673, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1871, 1924, 1925, 1973, 2008, 2010, 2011, 2012, 2013, 2015, 2031, 2038, 2042, 2043, 2044, 2047, 2048, 2051, 2054, 2055, 2059, 2062, 2064, 2067, 2070, 2073, 2081, 2084, 2097, 2099, 2102, 2103, 2108], "org": [3, 4, 7, 9, 10, 11, 12, 15, 23, 32, 34, 46, 680, 730, 731, 732, 733, 745, 746, 756, 761, 762, 763, 764, 765, 973, 987, 1342, 1493, 1543, 1570, 1573, 1729, 1765, 1813, 1867, 1887, 1964, 2008, 2014, 2039, 2040, 2051, 2055, 2057, 2061, 2064, 2082, 2083, 2110, 2112], "timeit": [3, 2041], "sever": [3, 12, 15, 22, 27, 34, 53, 62, 738, 739, 740, 741, 742, 743, 766, 767, 772, 773, 774, 782, 783, 916, 917, 1051, 1110, 1204, 1205, 1269, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1450, 1451, 1452, 1453, 1454, 1455, 1470, 1471, 1490, 1491, 1492, 1511, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1577, 1578, 1588, 1589, 1590, 1591, 1592, 1593, 1596, 1604, 1605, 1606, 1607, 1608, 1609, 1624, 1625, 1647, 1650, 1651, 1652, 1654, 1655, 1656, 1713, 1730, 1731, 1733, 1734, 1766, 1774, 1828, 1829, 1956, 1961, 2010, 2038, 2039, 2041, 2042, 2050, 2051, 2053, 2061, 2063, 2067, 2072, 2096, 2097, 2099, 2111], "awar": [3, 7, 53, 84, 486, 712, 713, 714, 715, 716, 717, 718, 719, 720, 730, 731, 732, 733, 838, 839, 856, 863, 864, 1571, 1713, 1928, 1929, 1931, 1932, 1933, 2031, 2039, 2042, 2064, 2070, 2073, 2077, 2105], "element": [3, 12, 22, 27, 34, 51, 58, 59, 62, 64, 70, 72, 73, 97, 119, 150, 154, 196, 216, 242, 254, 258, 286, 313, 315, 317, 319, 321, 352, 398, 400, 402, 435, 454, 471, 473, 474, 497, 499, 513, 515, 517, 520, 545, 546, 558, 560, 609, 610, 617, 681, 683, 684, 687, 688, 693, 694, 698, 699, 735, 758, 760, 770, 771, 772, 773, 774, 780, 784, 793, 875, 877, 878, 879, 882, 883, 884, 885, 886, 894, 909, 910, 912, 913, 914, 920, 921, 943, 952, 955, 962, 968, 972, 987, 989, 991, 992, 993, 1048, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1095, 1096, 1097, 1101, 1103, 1106, 1109, 1111, 1112, 1116, 1136, 1140, 1141, 1143, 1145, 1150, 1152, 1153, 1155, 1158, 1160, 1165, 1166, 1168, 1169, 1170, 1174, 1175, 1210, 1211, 1212, 1213, 1223, 1226, 1229, 1230, 1231, 1232, 1246, 1254, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1289, 1291, 1292, 1294, 1311, 1313, 1317, 1328, 1332, 1343, 1344, 1346, 1349, 1351, 1352, 1353, 1354, 1358, 1359, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1392, 1409, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1431, 1432, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1469, 1474, 1475, 1478, 1479, 1480, 1481, 1482, 1483, 1488, 1489, 1493, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1509, 1512, 1514, 1515, 1516, 1517, 1518, 1522, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1551, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1572, 1573, 1575, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1614, 1618, 1621, 1622, 1627, 1628, 1632, 1633, 1634, 1635, 1638, 1641, 1642, 1644, 1649, 1654, 1655, 1656, 1660, 1661, 1665, 1666, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1687, 1689, 1691, 1692, 1693, 1694, 1699, 1712, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1747, 1748, 1754, 1755, 1757, 1758, 1767, 1768, 1769, 1771, 1776, 1816, 1817, 1820, 1821, 1828, 1829, 1831, 1842, 1845, 1846, 1850, 1852, 1854, 1871, 1874, 1876, 1888, 1889, 1891, 1892, 1896, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1918, 1919, 1923, 1935, 1937, 1938, 1942, 1943, 1944, 1946, 1948, 1949, 1950, 1951, 1952, 1954, 1956, 1957, 1958, 1959, 1968, 1969, 1970, 1973, 1976, 2011, 2013, 2017, 2020, 2032, 2037, 2040, 2041, 2044, 2048, 2054, 2056, 2061, 2063, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2096, 2098, 2101, 2109], "lazili": [3, 17, 29, 1008, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1703, 1978, 2010, 2044, 2106, 2114], "threadpool": 3, "comparison": [3, 23, 27, 50, 62, 1269, 1285, 1286, 1523, 1776, 2014, 2044, 2084, 2088, 2097], "appl": [3, 2027], "synchron": [3, 4, 17, 18, 19, 23, 29, 31, 36, 45, 53, 61, 486, 878, 1008, 1009, 1011, 1019, 1039, 1080, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1317, 1318, 1324, 1327, 1330, 1331, 1333, 1334, 1342, 1382, 1563, 1713, 1767, 1769, 1845, 1978, 1979, 2009, 2041, 2042, 2043, 2049, 2053, 2065, 2072, 2079, 2099, 2111], "focu": [3, 51, 1807], "replic": [3, 22, 29, 33, 53, 86, 1223, 1280, 1450, 1451, 1452, 1459, 1469, 1499, 1500, 1501, 1548, 1549, 1550, 1575, 1668, 1696, 2065], "particularli": [3, 22, 23, 48, 1458, 1459, 1530, 2010, 2042, 2095, 2096, 2106], "variat": [3, 34, 2013, 2044, 2063, 2068, 2108], "confound": 3, "quantifi": [3, 1573], "nois": [3, 2011, 2055, 2108], "median": [3, 34, 173, 1415, 1961, 2011, 2030, 2062], "robust": [3, 1342, 2029, 2051], "deviat": [3, 34, 53, 377, 1431, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1563, 1769, 1881, 1886, 1918, 1919, 2037, 2099], "merg": [3, 6, 7, 9, 22, 27, 29, 32, 46, 1524, 1529, 1533], "repeat": [3, 34, 50, 58, 494, 995, 1106, 1194, 1333, 1359, 1519, 1520, 1521, 1601, 1602, 1813, 1845, 1904, 1924, 1925, 1942, 2011, 2013, 2042, 2062, 2066, 2069, 2077, 2103], "autorang": 3, "exact": [3, 14, 22, 36, 48, 51, 85, 339, 741, 742, 743, 795, 875, 876, 877, 920, 921, 973, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1370, 1454, 1493, 1571, 1640, 1713, 1808, 1897, 2037, 2042, 2043, 2053, 2077, 2098, 2099, 2105, 2108, 2109], "discuss": [3, 5, 8, 9, 10, 34, 50, 62, 1483, 1640, 2020, 2039, 2044, 2047, 2051, 2055, 2072, 2074, 2077, 2096, 2097], "docstr": [3, 14, 62, 862, 863, 1269, 1523, 2008, 2042], "adapt": [3, 50, 766, 767, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1460, 1588, 1589, 1590, 1591, 1592, 1593, 1778, 1779, 1790, 1792, 1799, 2042, 2059, 2095], "field": [3, 7, 27, 29, 31, 36, 38, 42, 43, 51, 53, 62, 488, 826, 894, 895, 938, 1267, 1269, 1427, 1435, 1436, 1456, 1458, 1482, 1488, 1489, 1514, 1515, 1523, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1594, 1601, 1602, 1612, 1629, 1641, 1665, 1673, 1754, 1788, 1794, 2026, 2039, 2043, 2053, 2061, 2072, 2073, 2082, 2096, 2107, 2108], "displai": [3, 18, 1050, 1063, 1184, 1640, 1700, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 2008, 2014, 2019, 2024, 2061, 2082, 2084, 2090, 2099, 2108, 2111], "instruct": [3, 4, 11, 14, 48, 61, 680, 1867, 2010, 2013, 2042, 2054, 2061, 2067, 2084, 2092, 2096, 2098, 2108], "count": [3, 19, 22, 34, 42, 50, 62, 895, 929, 938, 944, 994, 1044, 1160, 1231, 1232, 1267, 1307, 1308, 1754, 1807, 1957, 1958, 2011, 2026, 2042, 2047, 2062, 2066, 2072, 2074, 2076, 2077, 2099, 2108], "wall": [3, 2102], "callgrind": 3, "analog": [3, 50, 62, 486, 694, 916, 1089, 1127, 1129, 1319, 1493, 1793, 1924, 1942, 2032, 2051, 2095], "constructor": [3, 14, 22, 23, 31, 53, 62, 64, 73, 824, 862, 863, 1427, 1528, 1533, 1534, 1552, 1577, 1578, 1713, 1761, 1899, 2009, 2010, 2013, 2014, 2042, 2043, 2051, 2072, 2077, 2079, 2080, 2083, 2112], "snippet": [3, 46, 2008, 2051, 2056, 2090, 2101], "loop": [3, 23, 29, 32, 48, 50, 51, 54, 58, 59, 62, 64, 69, 863, 864, 915, 1051, 1054, 1056, 1169, 1175, 1285, 1713, 1731, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1973, 2010, 2011, 2013, 2026, 2041, 2042, 2046, 2048, 2051, 2054, 2058, 2061, 2063, 2066, 2067, 2082, 2093, 2096, 2098, 2107], "callabl": [3, 5, 12, 22, 23, 27, 31, 32, 34, 36, 38, 43, 45, 48, 50, 51, 53, 61, 62, 119, 398, 842, 973, 975, 987, 1048, 1049, 1051, 1164, 1165, 1166, 1171, 1174, 1175, 1269, 1272, 1275, 1281, 1285, 1341, 1342, 1523, 1567, 1569, 1571, 1573, 1706, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1794, 1801, 1804, 1973, 2008, 2010, 2012, 2013, 2014, 2017, 2026, 2042, 2044, 2051, 2056, 2059, 2061, 2064, 2065, 2066, 2072, 2084, 2087, 2088, 2094, 2097, 2100, 2107, 2109], "present": [3, 9, 22, 27, 29, 45, 51, 53, 895, 938, 940, 1218, 1267, 1269, 1359, 1427, 1493, 1523, 1533, 1754, 1774, 1920, 2008, 2024, 2029, 2030, 2031, 2038, 2039, 2042, 2044, 2048, 2051, 2056, 2061, 2064, 2073, 2076, 2077, 2080, 2096, 2100, 2104, 2110], "default_tim": 3, "dict": [3, 5, 12, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 39, 43, 48, 50, 51, 53, 55, 57, 60, 62, 415, 680, 792, 793, 794, 815, 816, 817, 836, 855, 922, 929, 940, 973, 987, 1048, 1049, 1062, 1072, 1163, 1173, 1175, 1182, 1267, 1268, 1269, 1270, 1276, 1281, 1285, 1286, 1341, 1342, 1459, 1469, 1523, 1524, 1533, 1575, 1703, 1713, 1744, 1763, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1973, 1987, 2008, 2010, 2011, 2013, 2014, 2017, 2024, 2026, 2044, 2051, 2056, 2059, 2061, 2062, 2063, 2072, 2073, 2082, 2087, 2088, 2097, 2104, 2107, 2109], "summar": [3, 4, 46, 1871, 2013, 2032, 2047, 2077, 2096, 2097, 2108], "relu": [3, 23, 32, 50, 58, 59, 62, 700, 701, 705, 706, 707, 708, 709, 710, 711, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 765, 792, 793, 814, 855, 861, 1048, 1165, 1175, 1275, 1281, 1523, 1539, 1541, 1552, 1560, 1567, 1569, 1571, 1677, 1679, 1703, 1775, 1973, 2010, 2011, 2023, 2031, 2032, 2037, 2039, 2051, 2056, 2061, 2062, 2067, 2069, 2070, 2090, 2094, 2101, 2103, 2106, 2107, 2108], "readabl": [3, 13, 22, 43, 50, 62, 1050, 1063, 1939, 2061, 2063, 2097, 2108, 2109], "supplement": 3, "disambigu": [3, 43, 62, 1347, 2108], "ident": [3, 14, 22, 27, 29, 34, 62, 788, 814, 920, 921, 1094, 1197, 1307, 1308, 1309, 1310, 1323, 1335, 1338, 1342, 1359, 1414, 1415, 1431, 1460, 1670, 1720, 1721, 1727, 1730, 1966, 1970, 1976, 2014, 2037, 2054, 2055, 2064, 2069, 2077, 2098, 2108], "easi": [3, 22, 27, 29, 32, 45, 50, 1181, 2010, 2039, 2046, 2050, 2051, 2053, 2064, 2067, 2072, 2073, 2077, 2094, 2097, 2099, 2101], "differenti": [3, 34, 54, 59, 150, 352, 589, 802, 890, 892, 894, 899, 900, 901, 903, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 970, 1051, 1168, 1169, 1170, 1174, 1284, 1316, 1317, 1328, 1359, 1441, 1442, 1465, 1631, 1666, 1713, 1733, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1961, 2009, 2020, 2044, 2046, 2048, 2061, 2063, 2072, 2083, 2099], "distinguish": [3, 1183, 2067, 2077], "princip": [3, 1316, 1813], "signal": [3, 11, 29, 36, 45, 48, 738, 739, 740, 766, 767, 782, 783, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1266, 1332, 1424, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1450, 1451, 1452, 1470, 1471, 1490, 1491, 1492, 1511, 1516, 1517, 1518, 1577, 1578, 1588, 1589, 1590, 1591, 1592, 1593, 1596, 1604, 1607, 1624, 1625, 1647, 1650, 1651, 1652, 1654, 1655, 1656, 1920, 2009, 2029, 2053, 2066, 2072], "form": [3, 7, 9, 11, 22, 27, 32, 34, 44, 45, 46, 50, 51, 53, 58, 62, 760, 779, 785, 964, 1094, 1134, 1136, 1178, 1181, 1269, 1309, 1312, 1317, 1328, 1333, 1425, 1426, 1429, 1430, 1442, 1470, 1471, 1474, 1493, 1523, 1539, 1575, 1576, 1613, 1624, 1625, 1628, 1640, 1668, 1700, 1733, 1793, 1811, 1941, 2008, 2010, 2014, 2032, 2039, 2044, 2051, 2059, 2061, 2064, 2067, 2077, 2082, 2096, 2097, 2101, 2107], "treat": [3, 34, 44, 50, 56, 62, 64, 69, 70, 321, 471, 793, 920, 921, 1048, 1163, 1198, 1269, 1322, 1325, 1327, 1339, 1341, 1351, 1352, 1353, 1354, 1371, 1417, 1466, 1476, 1495, 1527, 1528, 1529, 1530, 1533, 1538, 1552, 1557, 1621, 1712, 1713, 1763, 1767, 1799, 1852, 1867, 1920, 1935, 1936, 1942, 1957, 2012, 2013, 2030, 2032, 2039, 2059, 2061, 2072, 2077, 2080, 2088, 2096, 2099, 2100, 2104, 2107], "distinct": [3, 11, 80, 1163, 1305, 1306, 1350, 1436, 2013, 2044, 2056, 2061, 2063, 2072, 2073, 2095], "workload": [3, 8, 22, 27, 53, 1051, 2042, 2047, 2050, 2054, 2066, 2072, 2092, 2106], "good": [3, 7, 8, 14, 62, 973, 1167, 1191, 1531, 1807, 1887, 2008, 2017, 2029, 2042, 2044, 2047, 2050, 2051, 2053, 2061, 2064, 2065, 2067, 2095, 2096, 2097, 2098, 2105], "intrins": [3, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 792, 793, 2068, 2069], "contrast": [3, 34, 36, 50, 760, 1181, 1474, 1793, 2037, 2039, 2045, 2047, 2077, 2103], "adaptive_autorang": 3, "threshold": [3, 23, 62, 1324, 1327, 1483, 1555, 1560, 1689, 1695, 1807, 1871, 2011, 2038, 2042, 2062, 2082], "min_run_tim": 3, "01": [3, 28, 31, 48, 488, 755, 780, 821, 822, 1107, 1149, 1509, 1644, 1645, 1703, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 1825, 1878, 1880, 1881, 1886, 1887, 2011, 2037, 2050, 2061, 2063, 2103], "max_run_tim": 3, "callback": [3, 23, 36, 45, 48, 61, 62, 1713, 2026, 2044, 2050, 2066, 2072], "similar": [3, 7, 9, 11, 19, 22, 27, 34, 42, 51, 53, 58, 61, 62, 493, 515, 712, 713, 714, 715, 716, 717, 720, 730, 731, 732, 733, 745, 746, 756, 764, 802, 878, 893, 906, 907, 954, 959, 972, 973, 1152, 1153, 1269, 1456, 1457, 1469, 1482, 1485, 1486, 1487, 1523, 1572, 1611, 1754, 1768, 1769, 1794, 1817, 1845, 1852, 1901, 1936, 1942, 1958, 2012, 2013, 2029, 2030, 2032, 2039, 2041, 2042, 2044, 2045, 2048, 2054, 2061, 2064, 2065, 2067, 2072, 2073, 2077, 2078, 2083, 2095, 2098, 2099, 2101, 2104, 2108, 2112], "blocked_autorang": 3, "variablil": 3, "until": [3, 5, 7, 22, 23, 27, 29, 31, 36, 45, 53, 61, 62, 486, 1008, 1009, 1011, 1042, 1160, 1290, 1342, 1382, 1385, 1386, 1629, 1703, 1713, 1796, 1798, 1802, 1942, 1978, 1979, 1992, 2025, 2029, 2037, 2042, 2046, 2047, 2056, 2059, 2061, 2066, 2072, 2074, 2079, 2096, 2099], "iqr": 3, "smaller": [3, 22, 62, 499, 545, 995, 1493, 1713, 1807, 1822, 1867, 1912, 2042, 2056, 2064, 2094, 2110, 2112], "reach": [3, 7, 8, 9, 22, 23, 27, 28, 36, 45, 50, 54, 1342, 1713, 1796, 1799, 1802, 1803, 2039, 2044, 2053, 2065, 2068, 2072, 2097], "At": [3, 5, 6, 7, 15, 22, 1140, 1437, 1438, 1439, 1450, 1451, 1452, 1453, 1454, 1455, 1490, 1491, 1492, 1962, 1966, 2023, 2032, 2041, 2048, 2067, 2072, 2078, 2096, 2097, 2099, 2108], "high": [3, 4, 7, 8, 9, 10, 15, 23, 27, 32, 34, 36, 42, 44, 46, 62, 119, 1442, 1570, 1834, 1835, 1867, 1966, 2011, 2021, 2026, 2029, 2044, 2048, 2049, 2051, 2052, 2053, 2063, 2067, 2068, 2072, 2077, 2082, 2083, 2084, 2088, 2092, 2093, 2096, 2103, 2108, 2111], "pseudo": [3, 88], "block_siz": 3, "enough_data": 3, "len": [3, 22, 29, 32, 62, 64, 69, 218, 545, 693, 695, 696, 699, 1125, 1129, 1132, 1136, 1139, 1143, 1174, 1273, 1336, 1357, 1369, 1414, 1417, 1459, 1668, 1739, 1741, 1757, 1798, 1805, 1909, 1912, 1918, 1919, 1923, 1967, 1968, 1969, 2010, 2011, 2013, 2044, 2062, 2076, 2077, 2082, 2096, 2107], "small_iqr": 3, "break": [3, 7, 27, 34, 56, 62, 680, 894, 973, 975, 1184, 1269, 1315, 1523, 1852, 1871, 2009, 2014, 2019, 2021, 2043, 2063, 2077, 2086, 2090, 2093, 2095, 2097, 2100, 2102, 2104], "stop": [3, 5, 27, 34, 36, 45, 46, 48, 51, 866, 895, 938, 1044, 1184, 1267, 1342, 1442, 1754, 1807, 1839, 2010, 2013, 2066, 2072, 2076, 2096, 2100], "repetit": [3, 1845, 1942], "statist": [3, 23, 27, 34, 799, 800, 820, 821, 822, 824, 825, 1017, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1083, 1084, 1347, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1563, 2026, 2039, 2046, 2063, 2065, 2067, 2070, 2099, 2108], "minimum": [3, 14, 23, 45, 46, 50, 696, 697, 771, 795, 820, 821, 822, 825, 826, 876, 944, 1086, 1153, 1230, 1231, 1232, 1372, 1442, 1481, 1573, 1797, 1798, 1805, 1887, 1906, 1907, 1908, 1909, 1910, 1911, 2011, 2037, 2039, 2048, 2062, 2070, 2080, 2103], "total_tim": 3, "choic": [3, 8, 9, 27, 1285, 1333, 1524, 1533, 1830, 2041, 2061, 2070, 2077, 2095, 2096, 2108], "block": [3, 7, 8, 19, 22, 27, 29, 31, 32, 33, 45, 48, 53, 61, 62, 486, 583, 584, 585, 936, 952, 1008, 1062, 1290, 1342, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1499, 1500, 1501, 1502, 1503, 1504, 1526, 1575, 1623, 1699, 1713, 1906, 1907, 1908, 2010, 2012, 2013, 2026, 2029, 2033, 2039, 2042, 2043, 2047, 2048, 2061, 2067, 2072, 2077, 2089, 2106, 2110], "qualiti": [3, 7, 23], "balanc": [3, 973], "compet": [3, 2053], "amort": 3, "invoc": [3, 5, 62, 842, 973, 978, 1182, 1272, 1285, 2010, 2013, 2042, 2044, 2050, 2061, 2072, 2074, 2093, 2106], "less": [3, 6, 7, 14, 22, 23, 27, 34, 48, 50, 53, 364, 680, 909, 911, 920, 921, 995, 1058, 1076, 1106, 1150, 1154, 1163, 1294, 1306, 1342, 1358, 1359, 1427, 1483, 1537, 1546, 1555, 1561, 1757, 1843, 1950, 1952, 2008, 2011, 2013, 2032, 2042, 2044, 2047, 2053, 2054, 2062, 2065, 2067, 2096, 2099, 2106], "bias": [3, 23, 734, 760, 794, 1437, 1438, 1439, 1474, 1475, 1477, 1485, 1486, 1487, 1493, 1494, 1495, 1538, 1539, 1541, 1563, 1583, 1584, 1712, 2063], "trivial": [3, 32, 36, 38, 735, 963, 1178, 1184, 1727, 1909, 2061, 2074, 2096, 2098], "low": [3, 7, 18, 23, 34, 53, 499, 912, 1194, 1213, 1442, 1813, 1830, 1834, 1835, 1852, 1925, 2009, 2011, 2026, 2029, 2042, 2053, 2066, 2084, 2096, 2102, 2103, 2109], "digit": [3, 957, 1871, 2008, 2024, 2050, 2054], "microsecond": [3, 2042], "bia": [3, 9, 27, 50, 64, 712, 713, 714, 715, 716, 717, 718, 719, 720, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 743, 749, 751, 752, 753, 754, 756, 760, 761, 764, 765, 772, 773, 774, 781, 792, 1173, 1269, 1279, 1427, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1474, 1475, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1523, 1529, 1539, 1540, 1541, 1567, 1569, 1571, 1584, 1599, 1600, 1604, 1605, 1606, 1607, 1608, 1609, 1630, 1639, 1643, 1646, 1703, 1713, 1723, 1725, 1727, 1728, 1729, 1743, 1745, 1747, 1762, 1765, 1827, 2011, 2017, 2021, 2023, 2025, 2036, 2044, 2051, 2056, 2059, 2063, 2067, 2069, 2077, 2082, 2103], "period": [3, 9, 31, 45, 942, 951, 1017, 1050, 1063, 1064, 1069, 1083, 1084, 1126, 1227, 1228, 1289, 1809, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2011, 2026, 2053], "overal": [3, 9, 22, 32, 36, 45, 920, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1570, 2039, 2041, 2042, 2053, 2067, 2068, 2102], "main": [3, 7, 22, 23, 27, 28, 29, 32, 34, 36, 37, 38, 43, 45, 46, 48, 49, 50, 62, 260, 496, 973, 1093, 1094, 1095, 1096, 1097, 1332, 1631, 1904, 1949, 1950, 1951, 1952, 2008, 2010, 2026, 2029, 2031, 2032, 2038, 2039, 2042, 2043, 2044, 2045, 2047, 2051, 2053, 2057, 2058, 2059, 2067, 2072, 2073, 2082, 2083, 2089, 2090, 2094, 2096, 2099, 2107], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 2009], "tupl": [3, 5, 12, 14, 22, 27, 29, 32, 33, 36, 42, 43, 45, 50, 51, 53, 62, 233, 319, 445, 447, 449, 497, 520, 537, 560, 583, 584, 585, 693, 695, 696, 697, 699, 735, 766, 767, 768, 769, 772, 773, 774, 779, 785, 786, 787, 793, 817, 818, 855, 862, 863, 879, 880, 887, 888, 889, 890, 891, 893, 906, 907, 909, 910, 911, 912, 913, 914, 915, 920, 921, 924, 925, 926, 940, 956, 975, 982, 987, 994, 1018, 1019, 1022, 1033, 1051, 1057, 1085, 1086, 1104, 1107, 1109, 1123, 1125, 1126, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1138, 1139, 1141, 1143, 1146, 1156, 1161, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1182, 1184, 1193, 1209, 1213, 1231, 1233, 1269, 1276, 1281, 1285, 1286, 1291, 1300, 1305, 1306, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1322, 1326, 1328, 1329, 1331, 1333, 1336, 1339, 1357, 1359, 1361, 1367, 1369, 1371, 1372, 1375, 1377, 1414, 1417, 1424, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1459, 1469, 1470, 1471, 1490, 1491, 1492, 1499, 1500, 1501, 1502, 1503, 1504, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1529, 1533, 1545, 1546, 1547, 1548, 1549, 1550, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1589, 1590, 1592, 1593, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1624, 1625, 1640, 1654, 1655, 1656, 1666, 1668, 1700, 1701, 1702, 1707, 1713, 1723, 1725, 1733, 1744, 1757, 1763, 1767, 1768, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1813, 1814, 1823, 1832, 1834, 1836, 1846, 1850, 1851, 1896, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1918, 1919, 1923, 1924, 1925, 1939, 1940, 1941, 1942, 1943, 1948, 1955, 1956, 1957, 1958, 1959, 1968, 1969, 1973, 1974, 1976, 2006, 2010, 2011, 2014, 2017, 2029, 2032, 2039, 2042, 2044, 2045, 2051, 2056, 2059, 2061, 2063, 2064, 2067, 2072, 2076, 2077, 2082, 2084, 2088, 2096, 2099, 2107, 2109], "modulo": [3, 34, 1154, 1197, 1843], "determin": [3, 5, 8, 11, 14, 17, 18, 21, 22, 23, 27, 34, 36, 43, 45, 53, 58, 62, 85, 86, 87, 823, 826, 909, 911, 920, 921, 942, 951, 958, 963, 1052, 1108, 1127, 1137, 1162, 1163, 1186, 1187, 1227, 1228, 1231, 1232, 1283, 1303, 1315, 1326, 1329, 1350, 1364, 1466, 1470, 1471, 1493, 1529, 1532, 1539, 1582, 1621, 1624, 1625, 1640, 1674, 1700, 1732, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1763, 1773, 1805, 1833, 1835, 1837, 1864, 1906, 1907, 1908, 1909, 1910, 1911, 1920, 1996, 2007, 2013, 2014, 2031, 2042, 2043, 2044, 2047, 2051, 2059, 2061, 2064, 2067, 2072, 2074, 2077, 2079, 2080, 2082, 2084, 2095, 2098, 2099, 2107, 2108, 2114], "itself": [3, 5, 7, 8, 27, 28, 50, 53, 59, 62, 488, 693, 699, 880, 995, 1168, 1169, 1269, 1281, 1285, 1523, 1557, 1687, 1713, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1898, 2010, 2029, 2044, 2051, 2053, 2055, 2058, 2061, 2064, 2072, 2077, 2081, 2094, 2096, 2098, 2108], "jitter": 3, "interpret": [3, 22, 27, 31, 34, 36, 45, 48, 50, 51, 779, 785, 881, 915, 1061, 1127, 1128, 1129, 1134, 1136, 1137, 1138, 1139, 1160, 1182, 1220, 1232, 1269, 1274, 1281, 1285, 1322, 1342, 1462, 1629, 1640, 1641, 1700, 1864, 1869, 2008, 2012, 2013, 2017, 2029, 2041, 2042, 2061, 2077, 2079, 2081, 2096, 2097], "ideal": [3, 44, 46, 1285, 1794, 2031, 2099], "analysi": [3, 23, 34, 50, 62, 1289, 1813, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2014, 2021, 2051, 2058, 2059, 2088, 2094, 2096, 2097, 2098, 2102], "valgrind": 3, "degrad": [3, 14, 53, 2041, 2043, 2044, 2077], "due": [3, 4, 5, 7, 23, 27, 29, 34, 44, 53, 58, 62, 64, 66, 84, 486, 881, 909, 910, 915, 991, 1282, 1305, 1306, 1333, 1359, 1462, 1476, 1567, 1576, 1640, 1681, 1761, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1925, 2010, 2042, 2048, 2049, 2055, 2059, 2061, 2067, 2068, 2072, 2074, 2099, 2104, 2108, 2110], "amelior": 3, "suffici": [3, 14, 23, 27, 34, 37, 45, 46, 51, 53, 486, 1780, 1781, 1793, 2008, 2017, 2077, 2080, 2099], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 32, 62, 779, 785, 957, 1223, 1444, 1445, 1446, 1447, 1448, 1449, 1545, 1546, 1547, 1548, 1549, 1550, 1576, 1579, 1580, 1581, 1640, 1700, 1799, 1805, 2011, 2043, 2064, 2065, 2072, 2099], "caller": [3, 36, 45, 62, 855, 1269, 1523, 1571, 1909, 2039, 2042, 2072, 2074], "structur": [3, 5, 9, 12, 22, 23, 27, 35, 36, 38, 46, 50, 51, 53, 62, 64, 65, 69, 73, 893, 906, 907, 939, 973, 987, 1157, 1170, 1175, 1182, 1189, 1190, 1285, 1523, 1583, 1740, 1744, 1776, 1813, 1925, 1973, 2009, 2012, 2014, 2020, 2026, 2032, 2042, 2043, 2044, 2045, 2047, 2053, 2056, 2057, 2059, 2061, 2063, 2064, 2072, 2082, 2083, 2084, 2086, 2088, 2090, 2095, 2096, 2097, 2099, 2100, 2104, 2110], "restrict": [3, 8, 12, 22, 34, 51, 53, 58, 59, 987, 1341, 1364, 1458, 2012, 2013, 2014, 2031, 2032, 2039, 2042, 2048, 2065, 2067, 2095], "builtin": [3, 27, 62, 64, 73, 1282, 1341, 1839, 2010, 2012, 2014, 2072, 2074, 2096, 2099, 2108], "surpris": [3, 8, 53, 2008, 2048, 2054, 2098], "serial": [3, 15, 22, 27, 29, 31, 45, 1269, 1279, 1280, 1341, 1523, 1703, 1855, 2008, 2009, 2011, 2024, 2031, 2039, 2042, 2047, 2050, 2051, 2053, 2059, 2064, 2067, 2072, 2073], "subsequ": [3, 7, 14, 15, 27, 50, 53, 62, 973, 1009, 1269, 1281, 1285, 1450, 1451, 1452, 1453, 1454, 1455, 1523, 1552, 2042, 2055, 2061, 2072, 2077, 2090, 2093, 2099], "deseri": [3, 29, 1341, 1703, 2008, 2024, 2056, 2072], "globalsbridg": 3, "care": [3, 7, 14, 27, 34, 53, 61, 62, 975, 1127, 1129, 1183, 1184, 1523, 2029, 2041, 2042, 2043, 2044, 2046, 2051, 2053, 2056, 2061, 2072, 2077, 2093, 2098, 2099, 2100], "reli": [3, 9, 14, 22, 23, 27, 36, 38, 53, 62, 150, 894, 920, 975, 1106, 1459, 1794, 2022, 2039, 2041, 2043, 2044, 2047, 2055, 2056, 2077, 2081, 2098, 2099, 2100, 2102], "pickl": [3, 22, 23, 27, 1269, 1341, 1523, 1855, 2008, 2024, 2029, 2056, 2064, 2072, 2110], "transfer": [3, 22, 27, 53, 2023, 2029, 2042, 2049, 2051, 2064, 2072, 2080], "properli": [3, 7, 22, 23, 29, 31, 36, 45, 61, 1127, 1128, 1129, 1137, 1138, 1139, 1371, 1524, 1525, 1533, 1534, 1713, 1962, 2008, 2020, 2044, 2048, 2051, 2053, 2056, 2059, 2072, 2073, 2080], "profil": [3, 4, 42, 62, 486, 928, 929, 936, 973, 1283, 1706, 1707, 1708, 1709, 1871, 2009, 2047, 2062, 2072, 2089, 2099], "empti": [3, 26, 27, 29, 36, 43, 51, 53, 58, 62, 233, 321, 513, 515, 523, 537, 545, 817, 940, 943, 944, 954, 960, 1106, 1108, 1267, 1270, 1295, 1315, 1316, 1321, 1328, 1351, 1352, 1353, 1354, 1361, 1436, 1458, 1466, 1530, 1602, 1621, 1668, 1761, 1773, 1774, 1909, 1924, 1939, 2007, 2010, 2011, 2012, 2013, 2015, 2023, 2025, 2030, 2031, 2032, 2037, 2040, 2042, 2044, 2055, 2061, 2062, 2064, 2077, 2078, 2083, 2086, 2095, 2096, 2098, 2103, 2106], "drive": [3, 9, 27, 2039], "facil": [3, 24, 1341, 2029], "analyz": [3, 4, 18, 50, 62, 2043, 2044, 2047, 2054, 2108], "manipul": [3, 53, 61, 1273, 2009, 2038, 2046, 2051, 2065, 2070, 2107], "1000000": [3, 1777], "mirror": [3, 139, 1713], "semant": [3, 9, 11, 17, 27, 45, 46, 50, 51, 53, 60, 62, 150, 794, 875, 876, 877, 894, 915, 955, 1011, 1062, 1164, 1175, 1182, 1197, 1198, 1273, 1280, 1339, 1436, 1602, 1674, 1720, 1721, 1794, 1958, 1973, 2009, 2012, 2013, 2017, 2020, 2032, 2045, 2051, 2061, 2072, 2077, 2099], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 23, 2010], "consum": [3, 22, 29, 35, 48, 51, 61, 435, 1106, 2029, 2042, 2047, 2053, 2058, 2059, 2061, 2082], "extrapol": 3, "sinc": [3, 7, 22, 23, 27, 29, 32, 33, 34, 38, 48, 50, 53, 62, 315, 488, 534, 747, 785, 793, 808, 809, 963, 975, 1054, 1056, 1058, 1106, 1146, 1147, 1148, 1163, 1266, 1269, 1274, 1280, 1283, 1359, 1435, 1465, 1519, 1520, 1521, 1523, 1576, 1584, 1594, 1629, 1631, 1700, 1703, 1706, 1744, 1763, 1768, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1920, 2010, 2011, 2012, 2013, 2017, 2019, 2023, 2026, 2032, 2038, 2039, 2042, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2056, 2057, 2058, 2061, 2062, 2064, 2065, 2066, 2067, 2071, 2072, 2073, 2074, 2077, 2078, 2080, 2081, 2083, 2084, 2093, 2096, 2099, 2104, 2107, 2108], "properti": [3, 22, 27, 28, 29, 31, 34, 37, 42, 45, 50, 51, 53, 62, 792, 881, 907, 924, 934, 1035, 1122, 1123, 1125, 1127, 1128, 1129, 1137, 1138, 1139, 1269, 1431, 1523, 1557, 1582, 1687, 1703, 1714, 1715, 1716, 1754, 1989, 2009, 2013, 2017, 2026, 2039, 2042, 2044, 2048, 2059, 2063, 2066, 2072, 2077, 2079, 2080, 2083, 2086, 2090, 2095, 2096, 2097, 2098, 2109, 2112], "significant_figur": 3, "figur": [3, 7, 8, 29, 62, 929, 2041, 2043, 2044, 2061, 2065, 2074, 2082, 2088, 2096, 2099], "intend": [3, 29, 45, 50, 62, 891, 901, 904, 906, 1013, 1184, 1289, 1594, 1706, 1707, 1708, 1709, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 2013, 2032, 2037, 2039, 2051, 2064], "interquartil": 3, "mitig": [3, 64, 2047, 2079], "tail": [3, 22, 43], "645": 3, "conjunct": [3, 22, 27, 31, 53, 824, 1594, 1629, 1713, 2070, 2072], "trim_sigfig": 3, "human": [3, 13, 43, 50, 1050, 1063, 2037, 2061, 2097, 2109], "raw": [3, 62, 1160, 1328, 2042, 2064, 2066], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 15, 22, 27, 29, 31, 34, 36, 43, 51, 53, 61, 62, 486, 496, 680, 760, 920, 927, 1123, 1125, 1128, 1129, 1131, 1132, 1135, 1136, 1138, 1139, 1141, 1143, 1285, 1359, 1437, 1438, 1439, 1459, 1462, 1474, 1485, 1486, 1487, 1497, 1498, 1505, 1506, 1507, 1508, 1533, 1563, 1569, 1571, 1621, 1713, 1915, 2013, 2023, 2025, 2029, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2051, 2054, 2059, 2061, 2063, 2065, 2067, 2068, 2072, 2074, 2080, 2094, 2095, 2096, 2098, 2105, 2107], "functioncount": [3, 2009], "stat": [3, 56, 826, 836, 837, 1062, 1070, 1071, 1072, 1563, 1713, 2026, 2042, 2087, 2099, 2108], "as_standard": 3, "strip": [3, 1631, 1713, 2010, 2062, 2077], "prefix": [3, 27, 29, 36, 45, 53, 62, 748, 757, 1269, 1523, 1713, 2008, 2019, 2039, 2061, 2064, 2067, 2087, 2106], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 15, 18, 27, 34, 62, 680, 895, 920, 1126, 1127, 1129, 1137, 1138, 1139, 1309, 1567, 1568, 1569, 1570, 1571, 1703, 1813, 1920, 1971, 1972, 2014, 2019, 2039, 2043, 2044, 2050, 2051, 2059, 2065, 2077, 2094, 2100, 2108], "locat": [3, 9, 14, 27, 29, 34, 42, 87, 150, 154, 254, 486, 513, 680, 955, 957, 1020, 1085, 1086, 1291, 1341, 1367, 1372, 1375, 1409, 1459, 1469, 1558, 1575, 1594, 1629, 1696, 1699, 1713, 1733, 1824, 1859, 1880, 1902, 1905, 1961, 2008, 2010, 2024, 2042, 2056, 2061, 2064, 2066, 2072, 2074, 2077, 2082, 2087, 2090, 2093, 2098], "someth": [3, 7, 50, 51, 55, 62, 64, 66, 909, 911, 1106, 1184, 1194, 1269, 1285, 1523, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 2015, 2026, 2029, 2030, 2039, 2049, 2057, 2061, 2072, 2094, 2095, 2096, 2099, 2101, 2107, 2108, 2109], "resembl": [3, 15, 2090], "23234231": 3, "first_build_dir": 3, "foo": [3, 14, 27, 42, 43, 50, 61, 62, 64, 72, 73, 824, 855, 860, 973, 1163, 1164, 1173, 1267, 1272, 1277, 1280, 1281, 1284, 1285, 1763, 1962, 1964, 2008, 2010, 2012, 2013, 2017, 2021, 2044, 2051, 2061, 2064, 2084, 2093, 2096, 2099, 2108], "9823794": 3, "bar": [3, 7, 42, 50, 62, 64, 72, 73, 855, 860, 995, 1163, 1272, 1280, 1918, 1919, 1968, 1969, 2008, 2010, 2012, 2024, 2051, 2061, 2064, 2084], "53453": 3, "src": [3, 27, 62, 196, 228, 313, 321, 471, 512, 513, 514, 515, 516, 517, 519, 538, 1097, 1164, 1567, 1570, 1571, 1774, 1856, 1857, 1858, 1862, 1892, 1935, 1961, 2011, 2064, 2103], "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1266], "site": [3, 7, 2090], "denois": 3, "explan": [3, 9, 19, 24, 38, 863, 1269, 1523, 2009, 2043, 2044, 2051, 2099, 2105, 2108], "delta": [3, 34, 760, 995, 1474, 1483, 1493, 1555, 1638, 1778, 1918, 1919, 1946, 1968, 1969, 2011, 2037], "inclus": [3, 34, 50, 88, 513, 1188, 1194, 1230, 1232, 1340, 1356, 1362, 1585, 1586, 1834, 1835, 1917, 2071, 2084], "diff": [3, 7, 2010, 2011, 2062], "One": [3, 8, 14, 27, 29, 32, 50, 51, 56, 58, 62, 583, 952, 1164, 1175, 1260, 1576, 1667, 1720, 1721, 1727, 1731, 1794, 1799, 1807, 1834, 1835, 1956, 1973, 2010, 2012, 2013, 2031, 2032, 2040, 2041, 2042, 2044, 2050, 2065, 2066, 2074, 2082, 2094, 2095, 2097, 2098, 2106], "reason": [3, 8, 9, 22, 27, 29, 36, 50, 53, 58, 63, 81, 680, 842, 906, 907, 1127, 1129, 1269, 1285, 1286, 1305, 1306, 1333, 1370, 1435, 1462, 1523, 1631, 1681, 1733, 1855, 2010, 2012, 2013, 2017, 2019, 2039, 2043, 2045, 2047, 2054, 2056, 2061, 2072, 2080, 2094, 2095, 2096, 2098, 2099, 2102, 2108, 2109], "unit": [3, 11, 14, 34, 36, 46, 53, 62, 760, 761, 1124, 1142, 1431, 1441, 1464, 1467, 1472, 1473, 1474, 1475, 1542, 1543, 1553, 1594, 1618, 1622, 1627, 1628, 1675, 1684, 1737, 1738, 1742, 1745, 1747, 1750, 1836, 1948, 2027, 2039, 2041, 2047, 2048, 2064, 2092, 2093], "next": [3, 22, 27, 34, 45, 51, 53, 62, 560, 760, 1182, 1273, 1423, 1475, 1494, 1541, 1713, 1756, 2029, 2038, 2039, 2041, 2042, 2044, 2045, 2047, 2051, 2053, 2059, 2065, 2066, 2072, 2073, 2077, 2080, 2082, 2090, 2093, 2096, 2097, 2099], "logic": [3, 5, 12, 14, 22, 49, 53, 62, 945, 947, 948, 950, 980, 981, 1123, 1125, 1128, 1129, 1131, 1132, 1135, 1136, 1138, 1139, 1141, 1143, 1164, 1204, 1205, 1273, 1351, 1352, 1353, 1354, 1364, 1529, 1713, 1822, 1849, 1933, 2013, 2014, 2042, 2043, 2044, 2045, 2048, 2067, 2096], "question": [3, 10, 22, 62, 1192, 1765, 2009, 2039, 2047, 2089, 2095, 2098], "involv": [3, 5, 7, 9, 11, 22, 27, 53, 56, 58, 62, 80, 1181, 1713, 1867, 2013, 2030, 2032, 2039, 2042, 2043, 2046, 2051, 2061, 2067, 2072, 2073, 2074, 2077, 2095, 2098, 2106], "look": [3, 4, 7, 8, 9, 12, 15, 27, 34, 44, 45, 50, 51, 55, 58, 62, 64, 74, 75, 486, 863, 909, 911, 987, 1182, 1193, 1269, 1364, 1427, 1523, 1620, 1746, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1906, 1907, 1908, 1910, 1911, 2010, 2012, 2017, 2030, 2038, 2039, 2042, 2045, 2050, 2051, 2053, 2057, 2061, 2064, 2067, 2072, 2073, 2088, 2093, 2094, 2095, 2096, 2099, 2100, 2101, 2102, 2105, 2106, 2107, 2108, 2110], "autom": [3, 8, 62, 2010, 2067, 2090, 2099, 2108], "easili": [3, 7, 8, 11, 23, 27, 29, 50, 1164, 1530, 1629, 1668, 1794, 1852, 1962, 2025, 2044, 2045, 2048, 2051, 2056, 2063, 2071, 2072, 2074, 2082, 2099, 2107, 2108], "exclus": [3, 22, 27, 34, 36, 45, 50, 62, 735, 1232, 1713, 1834, 1835, 1838, 2039, 2084], "basi": [3, 9, 10, 34, 1342, 1799, 2042, 2050, 2067, 2072], "thought": [3, 42, 62, 1124, 1126, 1142, 1188, 2096], "path_and_function_nam": 3, "children": [3, 38, 53, 62, 791, 1269, 1523, 2029, 2047, 2051, 2064, 2074], "identifi": [3, 7, 9, 27, 29, 36, 39, 42, 45, 46, 48, 62, 486, 817, 1232, 1341, 1563, 2014, 2017, 2029, 2040, 2050, 2051, 2064, 2072, 2073, 2074, 2082, 2095, 2106], "hot": [3, 34, 1631, 1667, 2048, 2093], "spot": [3, 1720, 1721], "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 313, 564, 866, 1160, 1631, 1906, 1907, 1908, 1910, 1911, 1921, 2011, 2032, 2062, 2077], "index": [3, 15, 22, 23, 27, 29, 34, 43, 50, 62, 191, 208, 281, 312, 313, 314, 315, 316, 317, 319, 321, 322, 471, 472, 512, 513, 514, 515, 516, 517, 518, 519, 695, 696, 817, 855, 878, 893, 895, 906, 907, 938, 957, 1024, 1027, 1085, 1086, 1126, 1167, 1168, 1169, 1173, 1175, 1210, 1241, 1242, 1243, 1244, 1267, 1286, 1291, 1299, 1317, 1335, 1349, 1357, 1359, 1363, 1367, 1370, 1371, 1372, 1375, 1397, 1400, 1409, 1415, 1418, 1419, 1427, 1442, 1458, 1465, 1466, 1524, 1525, 1530, 1533, 1534, 1573, 1575, 1620, 1621, 1667, 1739, 1741, 1748, 1749, 1754, 1767, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1808, 1809, 1824, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1892, 1903, 1904, 1906, 1907, 1908, 1910, 1911, 1920, 1935, 1956, 1957, 1959, 1960, 1961, 1964, 1973, 1981, 1983, 2009, 2010, 2011, 2013, 2020, 2029, 2030, 2031, 2032, 2039, 2042, 2043, 2045, 2049, 2055, 2062, 2074, 2076, 2077, 2080, 2081, 2082, 2083, 2084, 2098, 2099, 2103, 2108], "cpython": [3, 50, 62, 2089, 2097], "known": [3, 7, 9, 21, 26, 27, 31, 32, 39, 51, 54, 57, 59, 64, 74, 75, 1170, 1171, 1184, 1285, 1286, 1341, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1493, 1539, 1553, 1555, 1575, 1640, 1684, 1703, 1879, 1880, 1939, 2009, 2011, 2015, 2017, 2026, 2029, 2032, 2037, 2039, 2041, 2055, 2061, 2063, 2072, 2074, 2078, 2089, 2095, 2100, 2108], "quit": [3, 7, 62, 1720, 1721, 2013, 2044, 2046, 2064, 2072, 2106], "noisi": 3, "higher": [3, 7, 8, 23, 27, 53, 54, 59, 64, 69, 73, 150, 894, 896, 915, 1011, 1051, 1062, 1098, 1165, 1171, 1175, 1179, 1194, 1197, 1230, 1246, 1416, 1458, 1515, 1530, 1681, 1778, 1824, 1925, 1973, 1979, 2009, 2017, 2042, 2044, 2045, 2048, 2050, 2056, 2067, 2068, 2072, 2080, 2095], "filter": [3, 19, 544, 772, 773, 774, 1266, 1289, 1450, 1451, 1452, 1453, 1454, 1455, 1604, 1605, 1606, 1607, 1608, 1609, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1920, 2013, 2064, 2108], "transform": [3, 12, 22, 29, 33, 50, 53, 58, 60, 79, 80, 81, 415, 781, 797, 838, 839, 858, 859, 964, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1163, 1164, 1165, 1169, 1174, 1191, 1266, 1279, 1440, 1477, 1485, 1486, 1487, 1495, 1510, 1552, 1568, 1569, 1570, 1571, 1594, 1600, 1629, 1646, 1666, 1703, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1887, 1920, 2009, 2021, 2045, 2047, 2059, 2065, 2067, 2077, 2082, 2088, 2089, 2090, 2097, 2101], "rather": [3, 8, 9, 14, 27, 36, 38, 48, 50, 53, 62, 64, 73, 779, 785, 933, 963, 1267, 1270, 1341, 1419, 1594, 1629, 1640, 1700, 1728, 1867, 1871, 2010, 2013, 2031, 2032, 2040, 2042, 2044, 2045, 2061, 2064, 2067, 2072, 2077, 2082, 2093, 2094, 2096, 2098, 2099, 2100, 2101], "unicod": [3, 2014], "dictionari": [3, 14, 22, 23, 29, 32, 34, 57, 62, 415, 680, 792, 793, 794, 797, 815, 816, 817, 838, 839, 840, 855, 859, 865, 940, 973, 1062, 1163, 1173, 1178, 1184, 1269, 1270, 1277, 1281, 1285, 1286, 1341, 1342, 1465, 1466, 1523, 1524, 1533, 1620, 1744, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1987, 2012, 2014, 2044, 2051, 2059, 2061, 2063, 2072, 2082, 2087, 2104, 2109, 2110], "lookup": [3, 29, 34, 1465, 1620, 2010, 2014, 2041, 2073, 2102], "map": [3, 14, 27, 29, 32, 34, 36, 42, 43, 45, 46, 50, 51, 53, 58, 59, 62, 64, 73, 80, 684, 735, 792, 793, 797, 799, 814, 815, 817, 839, 840, 855, 856, 857, 858, 859, 865, 886, 954, 1158, 1164, 1175, 1181, 1182, 1184, 1189, 1223, 1232, 1277, 1280, 1341, 1342, 1453, 1454, 1455, 1461, 1462, 1463, 1467, 1469, 1519, 1520, 1521, 1524, 1533, 1615, 1616, 1617, 1622, 1727, 1744, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1824, 1826, 1957, 1958, 1973, 2014, 2025, 2031, 2033, 2039, 2042, 2043, 2044, 2045, 2052, 2057, 2059, 2064, 2067, 2070, 2072, 2073, 2074, 2079, 2084, 2097, 2098, 2107, 2109], "agnost": [3, 16, 45, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1629, 1720, 1721, 2017, 2031], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 14, 27, 28, 29, 34, 36, 37, 38, 42, 46, 50, 51, 53, 61, 62, 583, 587, 588, 617, 684, 693, 695, 696, 699, 760, 886, 919, 920, 921, 960, 967, 971, 1010, 1020, 1022, 1050, 1063, 1098, 1104, 1106, 1152, 1153, 1173, 1175, 1186, 1233, 1269, 1277, 1285, 1287, 1291, 1325, 1341, 1357, 1367, 1369, 1370, 1372, 1375, 1393, 1414, 1417, 1419, 1474, 1493, 1523, 1539, 1576, 1667, 1706, 1713, 1728, 1754, 1761, 1762, 1766, 1768, 1821, 1845, 1861, 1864, 1897, 1909, 1916, 1918, 1919, 1923, 1946, 1968, 1969, 1973, 1974, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2020, 2029, 2032, 2042, 2044, 2047, 2051, 2054, 2057, 2059, 2064, 2065, 2072, 2074, 2077, 2079, 2080, 2084, 2094, 2096, 2098, 2106, 2107, 2110], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 323, 328, 544, 614, 1019, 1905, 1909, 1956, 2011, 2043, 2062, 2077, 2099], "entri": [3, 27, 28, 31, 34, 36, 43, 45, 46, 315, 735, 859, 860, 933, 1048, 1049, 1096, 1147, 1148, 1244, 1269, 1290, 1465, 1466, 1523, 1529, 1620, 1621, 1739, 1740, 1748, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1903, 2010, 2013, 2014, 2020, 2032, 2039, 2043, 2044, 2048, 2051, 2056, 2070, 2077, 2082, 2087, 2094, 2095, 2096, 2097], "color": [3, 1487, 2012, 2013, 2082, 2100], "rowwis": [3, 33], "columnwis": 3, "extend_result": 3, "highlight_warn": 3, "highlight": [3, 51, 730, 731, 2013], "trim_significant_figur": 3, "trim": [3, 942, 951, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1227, 1228, 1266], "h": [4, 10, 14, 34, 487, 488, 741, 742, 743, 760, 965, 966, 1299, 1306, 1309, 1319, 1333, 1425, 1426, 1433, 1434, 1436, 1438, 1439, 1443, 1451, 1452, 1454, 1462, 1463, 1465, 1467, 1474, 1475, 1486, 1487, 1493, 1494, 1495, 1506, 1507, 1517, 1518, 1535, 1536, 1539, 1541, 1558, 1574, 1577, 1578, 1594, 1602, 1629, 1665, 1671, 1672, 1727, 1728, 1762, 1774, 1924, 2011, 2030, 2031, 2039, 2042, 2043, 2044, 2046, 2048, 2061, 2081, 2082, 2083, 2090, 2095, 2105], "finit": [4, 34, 920, 921, 1258, 1259, 1305, 1306, 1316, 1317, 1333, 1359, 1409, 1413, 1435, 1924, 2044, 2048, 2084], "natur": [4, 7, 8, 11, 29, 32, 34, 53, 64, 66, 84, 920, 921, 1298, 1303, 1329, 1343, 1345, 1350, 1427, 1571, 1681, 2047, 2048, 2058, 2059, 2077, 2078], "against": [4, 5, 14, 27, 36, 45, 794, 866, 920, 921, 1134, 1135, 1136, 1140, 1141, 1143, 1210, 1260, 1269, 1285, 1286, 1523, 1529, 1775, 2008, 2013, 2064, 2088, 2096, 2105], "cprofil": 4, "mode": [4, 8, 22, 23, 27, 29, 34, 45, 48, 50, 58, 59, 62, 79, 221, 222, 488, 746, 747, 772, 773, 774, 779, 785, 786, 787, 815, 817, 823, 826, 860, 861, 890, 892, 896, 899, 900, 901, 906, 907, 909, 910, 911, 912, 916, 917, 918, 920, 973, 978, 1006, 1039, 1080, 1081, 1110, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1164, 1167, 1168, 1169, 1170, 1173, 1174, 1179, 1183, 1217, 1252, 1253, 1267, 1269, 1270, 1273, 1285, 1287, 1328, 1341, 1371, 1385, 1386, 1406, 1437, 1438, 1439, 1450, 1451, 1452, 1466, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1523, 1540, 1563, 1576, 1577, 1604, 1605, 1606, 1621, 1629, 1640, 1668, 1681, 1700, 1701, 1702, 1714, 1722, 1724, 1728, 1733, 1766, 1799, 1807, 1823, 1866, 1868, 1961, 2009, 2011, 2017, 2023, 2030, 2037, 2042, 2043, 2045, 2046, 2047, 2051, 2058, 2059, 2062, 2066, 2068, 2069, 2070, 2072, 2083, 2086, 2090, 2093, 2097, 2098, 2099, 2100, 2101, 2103, 2108, 2109], "correct": [4, 6, 7, 23, 27, 28, 29, 34, 45, 50, 205, 206, 209, 221, 555, 580, 603, 604, 615, 901, 902, 906, 921, 995, 1127, 1129, 1137, 1138, 1139, 1189, 1244, 1267, 1270, 1285, 1286, 1305, 1459, 1476, 1488, 1703, 1713, 1754, 1870, 1918, 1919, 1968, 1969, 2010, 2011, 2012, 2017, 2021, 2030, 2031, 2042, 2044, 2048, 2079, 2096, 2103, 2107], "launch": [4, 14, 22, 30, 36, 37, 38, 43, 44, 45, 49, 61, 1009, 1713, 2009, 2039, 2041, 2042, 2043, 2044, 2072, 2093, 2101], "spent": [4, 27, 934, 1805, 2041, 2051, 2099, 2106, 2108], "appear": [4, 23, 27, 34, 50, 51, 62, 855, 1051, 1106, 1147, 1148, 1175, 1341, 1375, 1377, 1714, 1845, 1873, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1973, 2010, 2013, 2030, 2031, 2044, 2045, 2051, 2061, 2064, 2096, 2099, 2106], "extrem": [4, 27, 1713, 2039, 2061, 2098], "expens": [4, 22, 34, 53, 1727, 2042, 2048, 2050, 2066, 2072, 2083, 2095, 2099, 2102, 2105, 2108], "bound": [4, 15, 23, 27, 50, 53, 481, 795, 957, 968, 1120, 1121, 1178, 1184, 1188, 1193, 1269, 1432, 1433, 1434, 1516, 1517, 1518, 1523, 1542, 1629, 1807, 1838, 1859, 2013, 2014, 2037, 2039, 2047, 2064, 2067, 2078, 2095, 2096, 2098, 2108], "greater": [4, 27, 45, 64, 65, 292, 617, 680, 949, 962, 963, 968, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1212, 1226, 1324, 1389, 1435, 1572, 1629, 1640, 1667, 1681, 1697, 1700, 1728, 1762, 1807, 1961, 2011, 2039, 2042, 2055, 2062, 2077, 2078], "spend": [4, 7, 1342, 2021, 2102], "sens": [4, 34, 45, 62, 1744, 1957, 1958, 2013, 2039, 2047], "respons": [4, 7, 9, 27, 29, 31, 34, 36, 42, 48, 53, 61, 1009, 1186, 1511, 1647, 1713, 1909, 2039, 2042, 2044, 2045, 2051, 2059, 2072, 2098], "Of": [4, 1767, 2008, 2043, 2044, 2089, 2096, 2099], "cours": [4, 62, 2008, 2043, 2044, 2072, 2096, 2099], "realiti": [4, 2047], "complic": [4, 23, 33, 62, 793, 1867, 2017, 2031, 2040, 2064, 2072, 2074, 2096, 2098], "account": [4, 43, 62, 1436, 1713, 2037, 2041, 2047, 2077, 2093], "heavili": [4, 63, 1783, 2041, 2044, 2064], "similarli": [4, 7, 29, 50, 61, 62, 760, 790, 794, 859, 964, 1126, 1269, 1325, 1523, 1571, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751, 1949, 1950, 1951, 1952, 2012, 2039, 2044, 2046, 2048, 2054, 2077, 2098, 2101, 2106], "platform": [4, 8, 9, 14, 27, 37, 38, 42, 1316, 1317, 1328, 1823, 1924, 2023, 2049, 2054, 2055, 2067], "startup": 4, "slower": [4, 14, 27, 32, 877, 910, 1146, 1147, 1148, 1299, 1306, 1648, 1727, 1778, 2044, 2055, 2063, 2078, 2098], "rerun": [5, 27, 2042], "segment": [5, 1062, 1160, 1555, 2042, 2064, 2099, 2104, 2110], "persist": [5, 20, 29, 50, 53, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 760, 815, 816, 817, 1269, 1474, 1493, 1523, 1539, 2051, 2056, 2057, 2059, 2079, 2093, 2098, 2102], "rng": [5, 22, 1037, 1077, 1383, 1390, 1860, 1990, 2001, 2042, 2055, 2071], "advanc": [5, 15, 22, 23, 32, 36, 1567, 1569, 1571, 1767, 1964, 2020, 2031, 2042, 2044, 2049, 2053, 2059, 2081, 2082, 2099], "juggl": 5, "moder": 5, "hit": [5, 8, 14, 1186, 1713, 2008, 2042, 2093, 2096, 2099, 2102, 2108], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 2009], "omit": [5, 14, 27, 46, 1140, 1141, 1143, 1184, 1476, 1537, 2057, 2061, 2072, 2084, 2096, 2100], "exclud": [5, 9, 23, 45, 62, 982, 1232, 1466, 1621, 1670, 1775, 1867, 1949, 1950, 1951, 1952, 2039, 2049, 2056, 2064, 2073, 2097, 2099], "_infer_device_typ": 5, "remain": [5, 8, 34, 45, 62, 1377, 1465, 1466, 1620, 1621, 1703, 1713, 1720, 1721, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751, 1807, 1824, 1846, 2025, 2026, 2029, 2038, 2046, 2051, 2079, 2090, 2097], "consequ": [5, 58, 1333, 1493, 1924, 2013, 2039, 2042, 2053, 2055, 2058], "random": [5, 34, 36, 45, 46, 54, 62, 84, 88, 154, 760, 893, 906, 907, 943, 1037, 1038, 1043, 1052, 1053, 1073, 1074, 1077, 1078, 1168, 1175, 1222, 1245, 1342, 1362, 1383, 1384, 1388, 1390, 1431, 1442, 1467, 1474, 1493, 1542, 1622, 1673, 1679, 1703, 1728, 1735, 1741, 1742, 1749, 1750, 1769, 1813, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1860, 1872, 1925, 1964, 1973, 1990, 1991, 1993, 1996, 1997, 1998, 1999, 2001, 2002, 2008, 2009, 2011, 2019, 2037, 2045, 2048, 2054, 2061, 2062, 2082, 2099, 2108], "gradient": [5, 11, 22, 23, 27, 31, 32, 34, 53, 54, 57, 150, 221, 222, 290, 335, 487, 488, 495, 513, 695, 696, 881, 890, 892, 894, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 910, 911, 912, 913, 914, 915, 916, 917, 920, 921, 925, 926, 944, 970, 1110, 1163, 1164, 1165, 1166, 1170, 1175, 1210, 1269, 1305, 1306, 1309, 1316, 1317, 1333, 1342, 1359, 1361, 1367, 1370, 1372, 1435, 1442, 1453, 1454, 1455, 1458, 1459, 1465, 1466, 1476, 1490, 1491, 1492, 1523, 1530, 1555, 1612, 1613, 1620, 1621, 1631, 1640, 1648, 1650, 1651, 1652, 1665, 1700, 1701, 1702, 1713, 1714, 1717, 1718, 1719, 1727, 1733, 1766, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1797, 1798, 1811, 1905, 1924, 1973, 2009, 2010, 2011, 2017, 2020, 2031, 2032, 2033, 2037, 2042, 2043, 2044, 2046, 2047, 2048, 2051, 2054, 2062, 2063, 2072, 2073, 2077, 2106], "among": [5, 22, 23, 27, 31, 34, 45, 1018, 1019, 1022, 1232, 1459, 1769, 2013, 2053, 2096, 2098], "detect": [5, 14, 17, 18, 22, 24, 27, 28, 36, 38, 53, 909, 910, 911, 912, 913, 914, 973, 1164, 1273, 1567, 1568, 1570, 1713, 1961, 2009, 2029, 2032, 2042, 2048, 2054, 2061, 2064, 2072, 2095, 2096, 2099, 2108], "priorit": [5, 32, 1167, 1168, 1170, 1780, 1781, 1793, 2077], "defaultdevicetyp": 5, "anticip": [5, 2110], "belong": [5, 27, 29, 31, 34, 42, 62, 957, 1011, 1182, 1795, 1979, 2008, 2042, 2063, 2107, 2109], "use_reentr": [5, 1713], "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 62, 1460, 1735, 1946, 2009, 2033, 2051, 2058, 2059, 2063, 2065, 2067, 2092, 2108], "recomput": [5, 33, 901, 904, 906, 1576, 1640, 1765, 2063, 2095], "refer": [5, 7, 14, 22, 23, 27, 28, 29, 31, 32, 34, 37, 40, 41, 45, 46, 53, 54, 61, 79, 80, 81, 84, 86, 254, 734, 735, 756, 764, 792, 793, 794, 819, 820, 821, 824, 825, 826, 860, 874, 879, 894, 955, 1044, 1049, 1109, 1160, 1184, 1217, 1219, 1250, 1257, 1269, 1272, 1281, 1288, 1301, 1306, 1322, 1326, 1339, 1342, 1409, 1442, 1476, 1523, 1573, 1594, 1602, 1611, 1629, 1640, 1641, 1699, 1708, 1709, 1713, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1813, 1830, 1837, 1866, 1867, 1887, 1925, 1961, 2008, 2009, 2011, 2029, 2030, 2032, 2033, 2038, 2039, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2051, 2053, 2055, 2061, 2063, 2065, 2068, 2069, 2072, 2073, 2077, 2079, 2080, 2081, 2082, 2086, 2089, 2090, 2094, 2096, 2097, 2101, 2104, 2108], "potenti": [5, 8, 29, 45, 48, 84, 191, 208, 486, 1185, 1279, 1315, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1681, 1713, 1961, 2012, 2020, 2029, 2039, 2042, 2044, 2047, 2064, 2077, 2080, 2081, 2095, 2099], "silent": [5, 27, 1052, 1053, 1073, 1074, 1244, 1285, 1523, 1718, 1719, 1909, 1996, 1997, 1998, 1999, 2042, 2054, 2061], "consider": [5, 7, 81, 885, 1266, 1466, 1713, 1720, 1721, 2013, 2041], "limit": [5, 8, 9, 12, 19, 22, 32, 51, 53, 54, 59, 81, 987, 1076, 1164, 1283, 1389, 1442, 1465, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1681, 1713, 1744, 1871, 2009, 2013, 2017, 2029, 2031, 2032, 2039, 2042, 2043, 2051, 2054, 2055, 2056, 2058, 2064, 2067, 2070, 2072, 2073, 2077, 2083, 2084, 2095, 2098, 2099, 2105, 2108], "reentrant": [5, 1713], "soon": [5, 45, 50, 53, 793, 2039, 2067, 2072, 2074, 2099], "intermedi": [5, 12, 14, 35, 50, 51, 58, 62, 81, 954, 987, 1157, 1164, 1171, 1359, 1466, 1567, 1569, 1571, 1621, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 2010, 2013, 2017, 2042, 2044, 2045, 2046, 2054, 2088, 2095, 2096, 2098], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 12, 27, 29, 32, 34, 53, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 88, 139, 150, 221, 222, 680, 747, 792, 793, 815, 816, 817, 823, 826, 894, 901, 904, 906, 915, 973, 975, 978, 980, 981, 1006, 1041, 1046, 1051, 1164, 1179, 1182, 1184, 1188, 1194, 1206, 1269, 1272, 1273, 1279, 1281, 1285, 1713, 1775, 1777, 1778, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 2009, 2013, 2017, 2019, 2023, 2033, 2038, 2043, 2044, 2047, 2048, 2051, 2052, 2058, 2059, 2061, 2064, 2066, 2068, 2069, 2070, 2072, 2073, 2074, 2077, 2082, 2088, 2089, 2090, 2094, 2095, 2097, 2098, 2100, 2101, 2102, 2104, 2105], "no_grad": [5, 488, 862, 916, 1110, 1165, 1169, 1174, 1269, 1465, 1523, 1529, 1571, 1714, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 2037, 2039, 2051, 2067, 2086, 2090], "unmet": 5, "particip": [5, 9, 22, 27, 28, 31, 45, 46, 1567, 1713, 2073, 2095], "wherea": [5, 11, 34, 50, 286, 1325, 1385, 1386, 1414, 1794, 1924, 2013, 2039, 2063, 2084, 2098], "avoid": [5, 8, 9, 19, 22, 27, 29, 34, 43, 46, 53, 62, 64, 72, 73, 191, 208, 448, 781, 866, 894, 954, 973, 1062, 1204, 1205, 1269, 1315, 1341, 1457, 1488, 1489, 1514, 1523, 1532, 1537, 1575, 1611, 1641, 1666, 1673, 1713, 1728, 1794, 1845, 1873, 1920, 1939, 1957, 1992, 2017, 2026, 2031, 2039, 2041, 2042, 2046, 2048, 2051, 2063, 2065, 2072, 2073, 2081, 2082, 2083, 2095, 2096, 2098, 2099, 2100], "know": [5, 7, 8, 14, 27, 28, 35, 50, 62, 486, 901, 902, 906, 910, 927, 1157, 1164, 1184, 1194, 1198, 1280, 1713, 2010, 2013, 2020, 2021, 2025, 2038, 2039, 2042, 2044, 2047, 2048, 2061, 2064, 2072, 2073, 2074, 2077, 2093, 2095, 2096, 2097, 2098, 2099, 2111], "lstm": [5, 763, 1494, 1540, 2011, 2042, 2061, 2062, 2067, 2069, 2070, 2082], "hidden": [5, 760, 1173, 1474, 1475, 1493, 1494, 1539, 1541, 1714, 2042, 2082], "correctli": [5, 22, 27, 45, 53, 486, 1164, 1269, 1285, 1523, 1648, 2010, 2012, 2013, 2017, 2026, 2031, 2038, 2039, 2043, 2044, 2045, 2053, 2055, 2067, 2072, 2106], "compil": [5, 12, 14, 15, 32, 50, 51, 53, 54, 62, 63, 680, 987, 1032, 1036, 1048, 1049, 1164, 1179, 1183, 1198, 1267, 1269, 1270, 1273, 1274, 1281, 1282, 1283, 1285, 1286, 1287, 1523, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2019, 2038, 2041, 2043, 2050, 2057, 2060, 2061, 2072, 2083, 2086, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2101, 2102, 2103, 2104, 2105], "turn": [5, 14, 22, 26, 32, 58, 62, 81, 680, 874, 973, 1257, 1285, 1568, 1570, 1906, 1907, 1908, 1909, 1910, 1911, 1961, 2020, 2039, 2042, 2054, 2055, 2061, 2066, 2067, 2073, 2077, 2095, 2098, 2101, 2106], "open": [5, 8, 9, 11, 14, 22, 34, 45, 50, 54, 689, 930, 957, 1156, 1277, 1341, 1364, 1374, 1646, 2010, 2020, 2029, 2032, 2049, 2056, 2057, 2058, 2061, 2064, 2067, 2072, 2077, 2078, 2079, 2096, 2099, 2106, 2110, 2111], "ran": [5, 18, 53, 2099, 2104, 2108], "sequenti": [5, 22, 31, 50, 51, 53, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 793, 1175, 1269, 1279, 1468, 1523, 1563, 1574, 1720, 1721, 1730, 1744, 1808, 1973, 2010, 2029, 2032, 2042, 2051, 2061, 2063, 2065, 2067, 2088, 2096, 2099, 2106, 2108], "divid": [5, 23, 27, 31, 32, 238, 583, 584, 585, 1022, 1101, 1104, 1124, 1142, 1151, 1180, 1232, 1233, 1280, 1435, 1436, 1442, 1443, 1456, 1482, 1483, 1489, 1514, 1515, 1526, 1527, 1528, 1537, 1555, 1556, 1572, 1573, 1601, 1602, 1612, 1613, 1641, 1665, 1673, 1713, 1924, 1974, 2011, 2062], "func": [5, 27, 56, 58, 62, 64, 66, 863, 893, 896, 901, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 914, 916, 920, 921, 1272, 1285, 1286, 1763, 1964, 1973, 2009, 2013, 2017, 2038, 2072, 2074, 2109], "compris": [5, 46, 50, 2047], "chunk": [5, 22, 27, 29, 32, 53, 960, 1022, 1169, 1459, 1713, 1912, 2010, 2011, 2030, 2047, 2062, 2063, 2065, 2072, 2077, 2081], "input_var": [5, 1459], "set_checkpoint_debug_en": [5, 2009], "defer": [5, 23, 53, 1184, 2042, 2065], "person": [6, 7, 9], "land": [6, 9, 10, 2096, 2105], "six": [6, 80, 1452], "commit": [6, 7, 9, 14, 54, 2008, 2009, 2054, 2055, 2105], "repositori": [6, 9, 57, 62, 2008, 2053, 2067], "submit": [6, 9, 1008, 1009, 1011, 1382, 1978, 1979, 2025, 2042, 2055, 2097, 2099, 2105], "month": [6, 9], "qualifi": [6, 27, 29, 33, 42, 62, 680, 1182, 1269, 1523, 2017, 2019, 2025, 2059, 2064], "pr": [6, 7, 1813, 1925, 2088, 2099], "interest": [6, 7, 9, 81, 2039, 2045, 2048, 2051, 2058, 2096, 2097, 2098, 2102, 2106], "merge_rul": 6, "vote": [6, 9], "decis": [6, 29, 36, 45, 48, 62, 680, 1184, 1285, 2020, 2038, 2095], "criteria": [6, 9, 1342], "approv": [6, 9], "Not": [6, 46, 80, 1191, 1417, 1571, 1920, 2010, 2012, 2013, 2014, 2042, 2044, 2062, 2067, 2072], "busi": [6, 9, 2102], "dai": [6, 7, 2096, 2098, 2105], "contributor": [6, 7, 8, 9], "seen": [6, 12, 18, 34, 62, 221, 928, 960, 973, 995, 1371, 1453, 1454, 1455, 1555, 1654, 1655, 1656, 1807, 2010, 2020, 2039, 2042, 2061, 2077], "thumb": [6, 27], "wiki": [7, 9, 23, 2058, 2112], "acceler": [7, 23, 939, 1218, 1437, 1438, 1439, 1563, 1777, 2049, 2089, 2093, 2099], "deep": [7, 9, 32, 62, 1437, 1438, 1439, 1464, 1563, 1793, 2009, 2037, 2042, 2051, 2067, 2092, 2095, 2097, 2108], "neural": [7, 8, 15, 32, 62, 1431, 1442, 1460, 1467, 1476, 1488, 1522, 1523, 1530, 1535, 1536, 1551, 1553, 1567, 1569, 1571, 1660, 1684, 1731, 1791, 1799, 1805, 2010, 2012, 2013, 2037, 2042, 2044, 2054, 2058, 2067, 2095], "tape": [7, 2093], "system": [7, 8, 14, 15, 17, 22, 32, 46, 50, 58, 62, 63, 966, 983, 1178, 1223, 1277, 1301, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1330, 1331, 1332, 1336, 1341, 1360, 1389, 1567, 1569, 1571, 1713, 1731, 1733, 1868, 1948, 2014, 2019, 2025, 2026, 2039, 2041, 2042, 2050, 2051, 2053, 2057, 2059, 2064, 2072, 2090, 2095, 2096, 2106, 2114], "organ": [7, 2043, 2050, 2064, 2065, 2099], "govern": [7, 8, 2009], "technic": [7, 9, 45, 50, 53, 62, 1269, 1523, 2039, 2046, 2047, 2053, 2064, 2095], "found": [7, 14, 15, 16, 18, 27, 29, 45, 50, 62, 64, 71, 73, 74, 75, 83, 85, 86, 87, 940, 957, 1005, 1085, 1086, 1193, 1269, 1273, 1291, 1367, 1370, 1372, 1375, 1415, 1431, 1441, 1467, 1523, 1551, 1790, 1859, 2008, 2010, 2013, 2017, 2032, 2038, 2044, 2047, 2048, 2051, 2053, 2061, 2064, 2066, 2067, 2072, 2082, 2094, 2098, 2102, 2105, 2107, 2109], "md": [7, 62, 792, 2064], "healthi": [7, 36, 45], "team": [7, 27, 54, 84, 85, 87, 2056, 2065], "commun": [7, 8, 9, 28, 29, 31, 32, 36, 45, 48, 53, 486, 680, 1713, 2039, 2043, 2058, 2072, 2073, 2096, 2099], "project": [7, 29, 32, 1371, 1493, 1529, 1733, 1813, 2008, 2017, 2047, 2049, 2058, 2090, 2107], "ve": [7, 56, 57, 58, 62, 1179, 1273, 1964, 2020, 2029, 2039, 2045, 2073, 2082, 2098, 2099], "come": [7, 8, 9, 22, 34, 35, 42, 45, 50, 54, 58, 486, 973, 1106, 1157, 1164, 1269, 1341, 1461, 1462, 1463, 1467, 1488, 1774, 2023, 2043, 2045, 2050, 2064, 2072, 2074, 2077, 2097, 2104], "peopl": [7, 27, 2039, 2067, 2101], "scratch": [7, 2039, 2108], "own": [7, 9, 27, 28, 31, 32, 34, 37, 45, 48, 50, 53, 62, 680, 1040, 1140, 1160, 1232, 1269, 1341, 1450, 1451, 1452, 1453, 1454, 1455, 1523, 1730, 1733, 2013, 2017, 2033, 2038, 2042, 2047, 2064, 2067, 2068, 2072, 2074, 2077, 2096, 2098, 2101], "itch": 7, "acquaint": 7, "tip": [7, 2042, 2096, 2099], "tracker": [7, 1342, 2025], "confirm": [7, 2008, 2010, 2044, 2061, 2072, 2074, 2104], "tend": [7, 911, 1961], "bootcamp": 7, "1hr": 7, "although": [7, 8, 34, 58, 62, 63, 1453, 1454, 1455, 1523, 1531, 1713, 2009, 2013, 2021, 2038, 2044, 2054, 2065, 2067, 2106, 2107], "join": [7, 23, 27, 31, 45, 46, 61, 62, 1209, 1713, 2008, 2009, 2014, 2029, 2039, 2043, 2053, 2062, 2083, 2090], "u": [7, 8, 12, 29, 32, 54, 59, 62, 64, 760, 909, 939, 964, 1183, 1206, 1306, 1308, 1312, 1316, 1317, 1333, 1359, 1361, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1474, 1475, 1493, 1494, 1508, 1510, 1539, 1541, 1542, 1563, 1574, 1733, 1813, 1924, 1925, 2010, 2011, 2017, 2020, 2031, 2037, 2039, 2042, 2043, 2044, 2045, 2051, 2064, 2077, 2081, 2082, 2090, 2093, 2095, 2096, 2099, 2102, 2103, 2108, 2111], "dev": [7, 10, 37, 42, 2097, 2108], "happi": 7, "research": [7, 8, 9, 1713, 2008, 2039, 2048, 2056], "partner": [7, 2089], "speed": [7, 8, 14, 31, 53, 1017, 1106, 1163, 1260, 1273, 1279, 1333, 1427, 1529, 1720, 1721, 1867, 1924, 2021, 2039, 2041, 2042, 2043, 2044, 2046, 2049, 2054, 2067, 2072, 2096, 2097], "design": [7, 9, 22, 29, 34, 42, 45, 51, 54, 57, 58, 59, 920, 921, 1269, 1289, 1436, 1523, 1582, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1936, 2008, 2009, 2026, 2036, 2042, 2044, 2047, 2049, 2051, 2059, 2064, 2090, 2095, 2096, 2097, 2099, 2101, 2103, 2108], "comment": [7, 62, 1765, 1863, 2013, 2014, 2044, 2080, 2082, 2102], "crack": 7, "usual": [7, 14, 22, 23, 27, 29, 33, 45, 46, 50, 51, 53, 62, 85, 481, 831, 832, 833, 834, 842, 894, 909, 911, 915, 1175, 1461, 1462, 1463, 1467, 1482, 1485, 1486, 1487, 1488, 1703, 1713, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1973, 2010, 2013, 2032, 2038, 2039, 2041, 2042, 2044, 2046, 2050, 2063, 2068, 2070, 2072, 2082, 2092, 2096, 2098, 2102, 2109], "idea": [7, 54, 929, 1106, 1188, 1427, 1713, 2042, 2050, 2061, 2073, 2099], "rfc": [7, 27, 2039, 2067, 2073], "big": [7, 1780, 1781, 1784, 1790, 1791, 1906, 1907, 1908, 1909, 1910, 1911, 2042, 2056, 2063, 2067, 2095, 2098, 2102], "post": [7, 8, 28, 29, 31, 53, 486, 488, 680, 857, 858, 862, 1269, 1523, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 2009, 2017, 2039, 2043, 2044, 2046, 2057, 2077, 2096, 2097, 2098, 2108], "standard": [7, 14, 18, 23, 34, 38, 39, 43, 51, 58, 62, 352, 377, 589, 1126, 1184, 1431, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1488, 1495, 1563, 1569, 1571, 1584, 1769, 1813, 1836, 1881, 1886, 1918, 1919, 2012, 2014, 2032, 2037, 2041, 2042, 2053, 2054, 2058, 2061, 2064, 2078, 2096], "lot": [7, 14, 22, 50, 1194, 2029, 2039, 2042, 2048, 2053, 2064, 2065, 2071, 2073, 2082, 2095, 2098, 2102, 2110], "boil": 7, "mostli": [7, 34, 1267, 1713, 2042, 2067, 2077, 2095, 2096, 2109], "evid": 7, "peer": [7, 27, 31, 45, 53, 1015, 1713, 2042, 2072], "paper": [7, 9, 23, 33, 34, 51, 760, 1427, 1431, 1437, 1438, 1439, 1441, 1453, 1454, 1455, 1460, 1461, 1462, 1463, 1464, 1467, 1470, 1471, 1474, 1477, 1480, 1485, 1486, 1487, 1495, 1529, 1535, 1536, 1538, 1542, 1551, 1555, 1563, 1567, 1569, 1571, 1572, 1573, 1624, 1625, 1634, 1712, 1780, 1781, 1790, 1792, 1799, 1805, 2048, 2065], "framework": [7, 8, 9, 32, 34, 42, 54, 61, 63, 760, 1013, 1380, 1474, 1713, 1727, 1793, 1871, 2009, 2021, 2052, 2065, 2067, 2073, 2074], "bit": [7, 62, 88, 330, 458, 761, 763, 765, 819, 820, 821, 822, 825, 827, 859, 946, 949, 988, 989, 1160, 1249, 1847, 1848, 1860, 1867, 1888, 2042, 2047, 2051, 2054, 2057, 2067, 2070, 2071, 2077, 2080, 2083, 2096, 2102, 2112], "accept": [7, 9, 22, 27, 29, 33, 50, 53, 54, 55, 57, 59, 150, 513, 802, 890, 891, 892, 893, 894, 901, 903, 906, 907, 915, 963, 1048, 1051, 1159, 1175, 1183, 1232, 1269, 1273, 1458, 1523, 1530, 1552, 1571, 1740, 1754, 1755, 1761, 1776, 1901, 1915, 1973, 2013, 2017, 2031, 2042, 2044, 2045, 2061, 2063, 2072, 2080, 2082, 2099, 2108], "overwhelm": [7, 2072, 2108], "newli": [7, 53, 62, 88, 1120, 1121, 1184, 1465, 1466, 1825, 1826], "publish": [7, 9, 37, 42, 45, 1342, 2009], "ground": [7, 9, 33, 1458, 1612, 2082, 2096], "becom": [7, 8, 9, 12, 22, 27, 33, 34, 62, 290, 760, 877, 1223, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1474, 1493, 1508, 1528, 1539, 1552, 1612, 1629, 1703, 1797, 1896, 1946, 2020, 2023, 2039, 2043, 2044, 2061, 2064, 2066, 2072, 2108, 2110], "refactor": [7, 62, 2057, 2067], "coordin": [7, 27, 29, 34, 36, 583, 586, 885, 1223, 1232, 1371, 1817, 1909, 1950, 1952, 1959, 2039, 2077, 2082, 2099, 2108], "pace": 7, "branch": [7, 12, 50, 62, 64, 67, 69, 72, 73, 987, 2008, 2012, 2013, 2042, 2095, 2096, 2105], "definit": [7, 8, 22, 27, 28, 34, 41, 50, 51, 62, 85, 964, 965, 966, 995, 1048, 1154, 1194, 1197, 1204, 1205, 1290, 1299, 1300, 1342, 1409, 1488, 1567, 1641, 1688, 1768, 1843, 1946, 2008, 2010, 2012, 2014, 2038, 2039, 2044, 2048, 2064, 2067, 2082, 2084], "fundament": [7, 58, 2012, 2051, 2072, 2077, 2098], "cut": [7, 2099], "guidanc": [7, 9, 15, 55, 486, 1196, 2065, 2095], "stage": [7, 18, 23, 29, 31, 32, 42, 53, 61, 2009, 2020, 2032, 2065, 2074, 2108], "piec": [7, 11, 2019, 2032, 2073, 2096, 2099, 2110], "advic": [7, 2099], "readi": [7, 14, 32, 61, 862, 863, 942, 951, 1227, 1228, 1713, 2010, 2043, 2072, 2073, 2093], "draft": 7, "convert": [7, 11, 22, 27, 29, 33, 34, 35, 51, 53, 57, 60, 62, 80, 81, 82, 150, 580, 584, 585, 586, 587, 588, 735, 788, 789, 790, 792, 793, 794, 815, 816, 817, 838, 839, 855, 858, 859, 860, 880, 881, 939, 959, 972, 1090, 1126, 1157, 1269, 1339, 1523, 1533, 1534, 1563, 1570, 1703, 1715, 1716, 1720, 1721, 1774, 1775, 1794, 1825, 1826, 1831, 1906, 1907, 1908, 1909, 1910, 1911, 1959, 2010, 2011, 2012, 2013, 2021, 2032, 2033, 2044, 2049, 2058, 2059, 2061, 2067, 2070, 2077, 2082, 2084, 2088, 2089, 2099, 2107, 2108], "press": [7, 62], "button": [7, 2105], "prepend": [7, 14, 22, 27, 31, 62, 229, 1098, 1269, 1364, 1523, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1942, 2011, 2040], "titl": [7, 2062, 2067], "wip": 7, "progress": [7, 31, 36, 46, 49, 79, 486, 1008, 1382, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1967, 1978, 2008, 2024], "ci": [7, 2009, 2105], "folk": 7, "who": [7, 8, 9, 11, 45, 64, 81, 2064], "regularli": 7, "queue": [7, 36, 48, 2029, 2082], "everyth": [7, 22, 34, 51, 57, 64, 2010, 2029, 2064, 2095, 2099, 2102, 2108], "happen": [7, 9, 27, 29, 31, 33, 34, 36, 38, 45, 50, 53, 58, 62, 607, 791, 814, 906, 907, 1164, 1206, 1563, 1713, 1727, 1796, 1802, 1803, 1809, 1924, 2009, 2026, 2029, 2039, 2042, 2043, 2044, 2045, 2046, 2047, 2052, 2053, 2057, 2061, 2067, 2072, 2079, 2081, 2093, 2096, 2099], "subsystem": [7, 11, 54, 59, 975, 2009, 2017, 2044], "patch": [7, 55, 1469, 1575, 1962, 2100], "feel": [7, 2032, 2061, 2077, 2099], "ll": [7, 58, 62, 760, 820, 821, 862, 863, 964, 965, 966, 1051, 1184, 1192, 1299, 1474, 1475, 1493, 1494, 2017, 2020, 2039, 2042, 2044, 2045, 2053, 2061, 2067, 2073, 2094, 2098, 2102, 2106], "round": [7, 22, 27, 64, 66, 73, 508, 665, 666, 799, 802, 820, 866, 991, 993, 1062, 1101, 1127, 1128, 1129, 1133, 1137, 1138, 1139, 1154, 1315, 1328, 1576, 1640, 1823, 1824, 1843, 1891, 2011, 2013, 2030, 2042, 2062, 2067, 2070, 2077, 2078, 2103, 2110], "trip": [7, 62, 1127, 1128, 1129, 1133, 1137, 1138, 1139], "noth": [7, 14, 36, 62, 680, 1002, 1042, 1733, 1780, 1781, 1793, 1808, 1992, 2010, 2012, 2055, 2074], "accompani": [7, 83, 2059], "solut": [7, 8, 58, 966, 1178, 1314, 1315, 1319, 1327, 1330, 1332, 1336, 1435, 1713, 1948, 2010, 2011, 2037, 2038, 2046, 2053, 2067], "think": [7, 9, 11, 62, 64, 486, 1794, 2010, 2012, 2039, 2063, 2064, 2074, 2096, 2098, 2100], "confid": [7, 1720, 1721, 2047, 2082, 2100], "ahead": [7, 50, 2009, 2067, 2089, 2095, 2099], "search": [7, 11, 23, 819, 957, 1480, 1634, 1713, 1775, 1830, 1859, 2010, 2030, 2031, 2061, 2064, 2077, 2094, 2098, 2105, 2110], "repo": [7, 32, 64, 1799, 2008, 2044, 2057], "unabl": [7, 50, 58, 82, 2061, 2063], "reproduc": [7, 22, 58, 313, 321, 515, 517, 944, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1519, 1520, 1521, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1621, 1629, 1640, 1668, 1681, 1700, 1701, 1702, 1703, 1961, 2008, 2009, 2063, 2064, 2099, 2108], "problemat": [7, 22, 62, 927, 2010, 2054, 2068, 2096, 2099], "insight": [7, 18, 79, 2090, 2110], "individu": [7, 9, 14, 22, 23, 27, 29, 31, 53, 62, 83, 242, 680, 792, 838, 839, 964, 1072, 1124, 1142, 1179, 1269, 1442, 1523, 1563, 1713, 2013, 2030, 2038, 2039, 2042, 2044, 2047, 2050, 2054, 2055, 2059, 2061, 2063, 2070, 2072, 2084, 2093, 2101, 2105, 2110], "intent": [7, 29, 43, 45, 53, 58, 1864, 2020, 2064, 2067, 2104], "lock": [7, 22, 27, 31, 34, 2039, 2042, 2053, 2064, 2073, 2110], "strike": 7, "convers": [7, 29, 458, 580, 583, 793, 958, 1254, 1720, 1721, 1754, 2009, 2014, 2044, 2049, 2061, 2067, 2068, 2077, 2095, 2098, 2107], "medium": [7, 53, 1867], "prioriti": [7, 9, 10, 27, 680, 855, 996, 1011, 1979, 2012, 2056], "entranc": [7, 2042], "great": [7, 12, 50, 2039, 2048, 2093, 2095, 2096], "deal": [7, 8, 22, 36, 48, 50, 80, 1941, 2029, 2046, 2072, 2095, 2098, 2102, 2106], "welcom": [7, 2032, 2058, 2063, 2077], "aim": [7, 32, 50, 81, 2045, 2077, 2089], "rare": [7, 2038, 2061, 2095, 2100, 2109], "typo": 7, "send": [7, 22, 27, 36, 48, 1044, 1703, 1713, 2029, 2043, 2053, 2057, 2062, 2066, 2072, 2073, 2074, 2086, 2088, 2098, 2101], "forum": [7, 9, 2046, 2053], "share": [7, 10, 14, 22, 28, 29, 31, 34, 35, 45, 46, 51, 53, 58, 221, 311, 340, 458, 483, 520, 524, 617, 860, 880, 881, 901, 902, 906, 907, 920, 921, 973, 1006, 1008, 1040, 1044, 1051, 1157, 1158, 1159, 1160, 1240, 1317, 1418, 1419, 1459, 1540, 1713, 1731, 1769, 1841, 1855, 1863, 1915, 1939, 1945, 1960, 2011, 2038, 2039, 2041, 2053, 2056, 2057, 2061, 2072, 2077, 2079, 2081, 2087, 2090, 2093], "resolv": [7, 8, 9, 29, 34, 62, 82, 83, 1184, 1269, 1453, 1454, 1455, 1469, 1520, 1523, 2012, 2013, 2014, 2057, 2064, 2079, 2095, 2109], "challeng": [7, 27, 29, 2073, 2099], "feedback": [7, 18, 23, 53, 54, 1713, 2009, 2077], "direct": [7, 9, 11, 27, 32, 51, 760, 792, 1147, 1148, 1194, 1269, 1474, 1493, 1523, 1539, 1729, 1765, 1792, 1813, 1830, 1851, 2017, 2039, 2042, 2044, 2047, 2051, 2072, 2096, 2107], "yourself": [7, 56, 1006, 1962, 2044, 2051, 2053, 2099, 2109], "problem": [7, 22, 27, 45, 50, 58, 64, 1106, 1181, 1184, 1285, 1315, 1327, 1342, 1458, 1530, 1594, 1863, 2029, 2039, 2042, 2046, 2048, 2053, 2057, 2065, 2067, 2068, 2074, 2080, 2089, 2095, 2096, 2099, 2108], "area": [7, 9, 51, 1640, 2051, 2067, 2078], "appreci": 7, "strive": 7, "respond": [7, 27], "quickli": [7, 8, 23, 45, 2047, 2101], "ey": [7, 34, 191, 208, 965, 966, 1175, 1290, 1299, 1310, 1321, 1324, 1327, 1328, 1335, 1336, 1727, 1823, 1902, 1973, 2011, 2015, 2044, 2062, 2096], "everyon": [7, 36, 45], "touch": [7, 43, 62], "versu": [7, 1183, 1527], "write": [7, 8, 9, 12, 16, 18, 22, 27, 29, 36, 38, 42, 43, 44, 45, 50, 53, 58, 59, 63, 80, 82, 83, 254, 486, 513, 697, 955, 975, 1159, 1164, 1175, 1186, 1246, 1280, 1300, 1311, 1312, 1313, 1317, 1318, 1331, 1699, 1855, 1948, 1961, 1973, 2009, 2012, 2017, 2026, 2031, 2042, 2045, 2046, 2048, 2059, 2063, 2064, 2067, 2077, 2082, 2089, 2095, 2096, 2099, 2101, 2102, 2108], "blog": [7, 8, 12, 987, 2017, 2043, 2044, 2067, 2077], "around": [7, 9, 11, 27, 34, 47, 57, 58, 61, 62, 150, 624, 894, 915, 1003, 1006, 1008, 1009, 1011, 1081, 1152, 1153, 1164, 1269, 1382, 1406, 1713, 1852, 1978, 1979, 2004, 2010, 2017, 2029, 2039, 2042, 2061, 2067, 2072, 2093, 2096, 2099], "internet": 7, "grow": [7, 8, 62, 2042, 2077], "market": [7, 9], "benefit": [7, 8, 27, 62, 848, 1720, 1721, 1807, 2029, 2042, 2047, 2067, 2077, 2108], "opinion": [7, 8, 2077], "isn": [7, 22, 62, 458, 1266, 2039, 2042, 2044, 2072, 2084, 2098], "categor": [7, 38, 1631, 2009, 2014, 2068, 2072, 2082, 2107], "aspect": [7, 27, 62, 1540, 2044, 2051], "seem": [7, 1184, 2061], "unusu": [7, 2098], "claim": [7, 1720, 1721, 1805, 2048], "wast": [7, 2042], "someon": [7, 9, 1267, 2031], "end": [7, 8, 9, 22, 23, 27, 32, 34, 38, 42, 56, 62, 361, 362, 538, 760, 784, 797, 820, 821, 866, 929, 937, 942, 990, 1006, 1066, 1067, 1096, 1106, 1145, 1160, 1208, 1223, 1229, 1230, 1266, 1269, 1290, 1295, 1325, 1335, 1337, 1340, 1342, 1356, 1418, 1419, 1434, 1435, 1436, 1444, 1445, 1446, 1456, 1458, 1464, 1468, 1474, 1475, 1478, 1479, 1480, 1481, 1482, 1483, 1489, 1493, 1494, 1509, 1514, 1517, 1518, 1523, 1525, 1530, 1531, 1534, 1539, 1542, 1552, 1555, 1561, 1566, 1573, 1612, 1621, 1633, 1634, 1713, 1727, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1797, 1802, 1807, 1839, 1871, 1874, 1877, 1879, 1892, 1946, 1957, 1958, 1976, 2010, 2011, 2012, 2013, 2029, 2038, 2039, 2042, 2043, 2044, 2046, 2047, 2048, 2054, 2057, 2059, 2061, 2063, 2066, 2067, 2070, 2072, 2078, 2093, 2096, 2098, 2101, 2103, 2108], "too": [7, 9, 14, 23, 29, 45, 58, 62, 486, 1062, 1163, 1184, 1188, 1315, 1333, 1415, 1442, 1458, 1523, 1613, 1714, 1763, 2013, 2041, 2046, 2048, 2053, 2054, 2055, 2057, 2059, 2064, 2065, 2074, 2077, 2095, 2096, 2098, 2108, 2110], "advisori": 7, "fashion": [7, 22, 27, 32, 33, 48, 50, 515, 1347, 1744, 2010], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 2108], "wrote": [7, 8], "implicitli": [7, 27, 38, 62, 1089, 1183, 1213, 1223, 1285, 1286, 1341, 1432, 1433, 1434, 1516, 1517, 1518, 1864, 1946, 2010, 2012, 2013, 2039, 2044, 2049], "lifetim": [7, 486, 2017, 2072, 2098], "immedi": [7, 8, 9, 27, 29, 45, 46, 53, 61, 486, 1194, 1269, 1272, 1523, 1720, 1721, 2013, 2042, 2047, 2051, 2056, 2063, 2072, 2074, 2095, 2098], "sai": [7, 50, 51, 62, 496, 929, 1167, 1168, 1169, 1183, 1190, 1269, 1523, 2010, 2038, 2039, 2046, 2064, 2073, 2074, 2077, 2093, 2095, 2096, 2102, 2107], "bugfix": 7, "Or": [7, 36, 62, 881, 968, 2049, 2052, 2061, 2077], "motiv": [7, 8, 62, 735, 2047, 2051, 2073, 2108], "ye": [7, 2022, 2061, 2063, 2077, 2099], "knuth": 7, "bewar": 7, "mere": [7, 51], "proven": [7, 1460, 1713], "ok": [7, 38, 43, 57, 1188, 1197, 1274, 2074, 2080, 2096], "sometim": [7, 62, 912, 1062, 1275, 1285, 1469, 1575, 1607, 1608, 1609, 1733, 2009, 2013, 2017, 2029, 2039, 2042, 2045, 2046, 2047, 2051, 2053, 2064, 2080, 2083, 2095, 2096, 2098, 2102, 2106, 2109], "obvious": [7, 2098], "broken": [7, 22, 1062, 2061, 2064], "contrari": [7, 2041], "accident": 7, "put": [7, 9, 22, 27, 36, 57, 61, 62, 319, 1126, 1341, 1477, 1799, 2008, 2011, 2029, 2042, 2047, 2053, 2062, 2064, 2073, 2074, 2096, 2098, 2100], "difficulti": [7, 27, 2037], "nonlinearli": 7, "sign": [7, 34, 341, 529, 885, 990, 1094, 1142, 1154, 1160, 1303, 1328, 1329, 1350, 1515, 1792, 1843, 1874, 1888, 2011, 2030, 2062, 2070, 2077, 2080, 2083, 2084, 2096, 2103], "split": [7, 11, 22, 27, 62, 617, 772, 773, 774, 860, 862, 863, 960, 967, 1062, 1104, 1233, 1459, 1473, 1474, 1493, 1529, 1539, 1604, 1605, 1606, 1607, 1608, 1609, 1628, 1940, 1974, 2010, 2011, 2030, 2042, 2047, 2062, 2064, 2065, 2067, 2072, 2077, 2081, 2096, 2106, 2110], "shippabl": 7, "complet": [7, 14, 22, 27, 29, 36, 37, 43, 45, 48, 58, 61, 486, 680, 862, 975, 1004, 1008, 1009, 1011, 1082, 1163, 1164, 1272, 1281, 1283, 1288, 1300, 1328, 1382, 1385, 1386, 1391, 1407, 1594, 1713, 1730, 1763, 1823, 1867, 1978, 1979, 2005, 2009, 2012, 2013, 2014, 2019, 2029, 2038, 2039, 2042, 2045, 2049, 2055, 2064, 2065, 2072, 2073, 2092, 2100, 2105, 2106], "subtl": [7, 1485, 1486, 1487, 2044, 2098, 2099, 2108], "nuanc": [7, 2058], "extra": [7, 14, 22, 23, 27, 31, 34, 50, 53, 62, 1066, 1106, 1164, 1175, 1183, 1269, 1277, 1280, 1315, 1341, 1523, 1530, 1538, 1712, 1727, 1920, 1973, 2012, 2031, 2039, 2041, 2043, 2044, 2046, 2050, 2059, 2064, 2066, 2077, 2083, 2084, 2086, 2098, 2102], "understand": [7, 8, 9, 27, 29, 36, 37, 50, 53, 64, 80, 81, 1164, 1192, 1327, 2009, 2037, 2039, 2042, 2049, 2056, 2059, 2066, 2082, 2089, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2108], "hack": 7, "answer": [7, 10, 62, 824, 1194, 1436, 1746, 2098, 2099], "regress": [7, 1435, 2055, 2093, 2104], "scrutini": 7, "undertak": 7, "rest": [7, 22, 23, 46, 53, 62, 793, 814, 980, 981, 1160, 1335, 1336, 1940, 2031, 2051, 2055, 2064, 2065, 2067, 2072, 2077, 2096, 2099, 2100, 2102, 2106], "stai": [7, 31, 139, 1459, 1720, 1721, 2042, 2053, 2067, 2072, 2077], "chanc": [7, 29, 34, 2044, 2098, 2099, 2102], "unrel": [7, 983, 1173, 2038, 2044, 2064], "aid": [7, 62, 2039, 2108], "troubleshoot": [7, 27, 2089, 2099], "mayb": [7, 1171, 1964, 2098], "rebas": 7, "latest": [7, 14, 27, 31, 34, 50, 898, 929, 1740, 2008, 2044, 2049, 2059, 2061], "statu": [7, 9, 36, 1359, 2009, 2014, 2029, 2067, 2090], "hud": 7, "risk": [7, 8, 29, 50, 53, 1730, 1733], "anyth": [7, 35, 38, 53, 61, 823, 826, 1194, 1281, 1794, 2010, 2025, 2032, 2047, 2051, 2064, 2095, 2096, 2111], "configur": [7, 13, 19, 22, 23, 27, 33, 36, 37, 42, 45, 46, 48, 53, 788, 789, 792, 793, 797, 814, 815, 816, 817, 823, 826, 838, 839, 840, 844, 846, 849, 859, 860, 861, 862, 863, 973, 1062, 1713, 1754, 1868, 1961, 2009, 2019, 2026, 2042, 2043, 2044, 2055, 2057, 2064, 2070, 2072, 2082, 2084, 2095, 2099, 2105, 2106, 2108], "riski": 7, "had": [7, 62, 929, 1184, 1206, 1285, 1703, 1942, 2039, 2045, 2095, 2096, 2104], "beforehand": [7, 61, 2099], "hei": 7, "my": [7, 22, 1459, 2050, 2061, 2067], "member": [7, 9, 22, 27, 36, 45, 46, 62, 1269, 1476, 1523, 1626, 2010, 2012, 2013, 2026, 2046, 2066, 2072, 2084, 2086], "sphinx": 7, "folder": [7, 9, 14, 22, 29, 43, 62, 1775, 2008, 2059, 2082, 2096, 2101, 2108], "tree": [7, 38, 57, 973, 1523, 1567, 1775, 2028, 2061, 2064, 2066, 2074, 2089], "master": [7, 27, 49, 792, 1164, 1567, 2008, 2072], "doxygen": 7, "special": [7, 11, 32, 38, 48, 51, 58, 62, 64, 69, 72, 73, 741, 742, 743, 823, 826, 920, 973, 1099, 1113, 1114, 1115, 1117, 1118, 1127, 1129, 1178, 1183, 1237, 1238, 1239, 1283, 1341, 1355, 1412, 1459, 1571, 1714, 1715, 1716, 1767, 1794, 1818, 1875, 1886, 1890, 1977, 2009, 2014, 2019, 2031, 2042, 2044, 2047, 2048, 2050, 2064, 2067, 2079, 2081, 2082, 2090, 2095, 2097, 2098, 2104], "server": [7, 22, 27, 46, 1273, 2042, 2064, 2067, 2072, 2090, 2092], "cppdoc": [7, 15], "cpp": [7, 14, 27, 2043, 2090, 2095], "accomplish": [7, 29, 2051, 2099], "holist": 7, "concept": [7, 32, 50, 51, 58, 62, 2017, 2044, 2045, 2051, 2080, 2100], "galleri": 7, "restructur": [7, 2064], "text": [7, 22, 34, 51, 153, 154, 173, 608, 617, 681, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 698, 745, 746, 756, 758, 760, 764, 768, 769, 770, 772, 773, 774, 780, 784, 820, 821, 866, 882, 883, 884, 885, 886, 941, 942, 943, 946, 949, 951, 953, 962, 965, 966, 968, 989, 990, 992, 993, 995, 1101, 1120, 1121, 1150, 1151, 1155, 1156, 1212, 1226, 1227, 1228, 1229, 1236, 1258, 1266, 1290, 1293, 1294, 1295, 1298, 1299, 1306, 1309, 1315, 1319, 1324, 1327, 1333, 1340, 1349, 1356, 1357, 1358, 1359, 1408, 1409, 1420, 1421, 1424, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1526, 1527, 1528, 1529, 1530, 1531, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1596, 1597, 1598, 1600, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1615, 1616, 1617, 1622, 1625, 1627, 1628, 1629, 1633, 1634, 1644, 1649, 1654, 1655, 1656, 1660, 1665, 1668, 1673, 1674, 1676, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1691, 1692, 1693, 1712, 1719, 1727, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1799, 1816, 1817, 1820, 1823, 1836, 1839, 1842, 1854, 1874, 1876, 1877, 1889, 1891, 1902, 1903, 1913, 1920, 1921, 1924, 1937, 1938, 1976, 2032, 2037, 2048, 2061, 2064, 2070, 2078, 2082, 2084, 2096, 2101], "rst": 7, "trigger": [7, 9, 27, 45, 46, 61, 84, 85, 87, 221, 929, 1080, 1871, 2038, 2039, 2042, 2043, 2044, 2050, 2056, 2072, 2093, 2096, 2097, 2099, 2104, 2105, 2108], "rebuild": [7, 23], "entir": [7, 14, 22, 27, 29, 33, 36, 46, 62, 513, 697, 920, 921, 973, 1164, 1223, 1461, 1462, 1463, 1467, 1485, 1486, 1487, 1495, 1615, 1616, 1617, 1622, 1713, 1729, 1739, 1741, 1765, 2013, 2032, 2039, 2042, 2044, 2045, 2046, 2050, 2051, 2061, 2064, 2067, 2072, 2074, 2077, 2094, 2095, 2097, 2098, 2099, 2106, 2108, 2110], "circleci": 7, "shard": [7, 22, 29, 31, 32, 33, 53, 1713, 2047, 2099], "worker": [7, 14, 22, 23, 27, 28, 31, 32, 36, 37, 38, 39, 45, 48, 49, 53, 1713, 2013, 2055, 2065, 2066, 2072, 2073, 2074], "40": [7, 1223, 1342, 1440, 1485, 1727, 1728, 1729, 1752, 1753, 1762, 1765, 1936, 2097], "minut": [7, 10, 27, 2082], "netlifi": 7, "noplot": 7, "render": [7, 27, 1188, 2082, 2110], "notebook": 7, "rebuilt": [7, 23, 31], "deploi": [7, 12, 36, 45, 2009, 2050, 2056, 2064, 2092, 2096], "action": [7, 27, 34, 36, 39, 62, 1006, 1040, 2042, 2059, 2064, 2066, 2074, 2110], "document": [8, 9, 10, 17, 22, 27, 32, 50, 51, 53, 54, 62, 680, 730, 731, 732, 733, 745, 746, 756, 761, 762, 763, 764, 765, 874, 875, 876, 877, 958, 1008, 1009, 1011, 1062, 1106, 1213, 1217, 1219, 1250, 1257, 1269, 1385, 1386, 1416, 1427, 1465, 1466, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1708, 1709, 1730, 1739, 1748, 1768, 1822, 1849, 1866, 1961, 2008, 2010, 2012, 2013, 2017, 2022, 2027, 2029, 2030, 2031, 2033, 2038, 2042, 2044, 2046, 2051, 2055, 2056, 2061, 2063, 2064, 2065, 2067, 2068, 2069, 2072, 2077, 2081, 2086, 2089, 2094, 2100, 2104, 2107, 2111], "develop": [8, 9, 10, 14, 23, 27, 32, 62, 2012, 2013, 2020, 2027, 2039, 2044, 2050, 2051, 2055, 2061, 2064, 2067, 2068, 2072, 2077, 2096, 2101, 2103, 2108, 2111], "meant": [8, 28, 29, 45, 48, 53, 1754, 2038, 2072], "rule": [8, 9, 14, 27, 34, 62, 64, 72, 73, 85, 86, 87, 150, 861, 894, 957, 958, 1089, 1319, 1330, 1437, 1438, 1439, 1485, 1486, 1487, 1563, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1859, 1946, 2010, 2012, 2030, 2032, 2039, 2040, 2044, 2047, 2048, 2080, 2084, 2098, 2099], "concern": [8, 22, 53, 2029, 2042, 2061, 2106], "disagr": 8, "contribut": [8, 9, 29, 933, 1231, 1232, 1458, 1465, 1466, 1530, 1612, 1620, 1621, 1665, 1713, 2009, 2032, 2044, 2045, 2061, 2065], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": [8, 2066], "obsess": 8, "soumith": [8, 10], "goe": [8, 62, 1160, 1431, 1780, 1781, 1793, 2017, 2046, 2059, 2096, 2099, 2100], "depth": [8, 9, 19, 24, 32, 50, 81, 779, 785, 1067, 1068, 1283, 1434, 1452, 1455, 1492, 1518, 1576, 1640, 1700, 2020, 2043, 2051, 2066, 2097, 2110], "primari": [8, 9, 27, 62, 81, 1279, 2014, 2020, 2021, 2077, 2098], "goal": [8, 32, 42, 57, 62, 1371, 2020, 2039, 2043, 2048, 2074, 2101], "secondari": 8, "abil": [8, 12, 50, 1855, 2020, 2050, 2059, 2064, 2096], "flexibl": [8, 23, 50, 53, 57, 1189, 1326, 2020, 2042, 2044, 2051, 2067, 2096], "abstract": [8, 16, 22, 23, 27, 28, 29, 34, 36, 43, 45, 48, 50, 922, 923, 924, 925, 926, 929, 1190, 1735, 2013, 2017, 2021, 2043, 2067, 2072, 2093], "critic": [8, 27, 45, 680, 1728, 1762, 2026, 2041, 2042, 2099, 2100], "futur": [8, 9, 12, 23, 27, 29, 36, 45, 46, 50, 58, 62, 290, 321, 486, 513, 517, 557, 680, 687, 793, 815, 816, 817, 826, 862, 901, 904, 906, 907, 963, 964, 973, 987, 988, 989, 1005, 1006, 1008, 1009, 1011, 1040, 1041, 1048, 1049, 1051, 1214, 1266, 1269, 1272, 1279, 1280, 1283, 1288, 1300, 1311, 1313, 1314, 1315, 1318, 1331, 1359, 1360, 1371, 1382, 1462, 1523, 1631, 1654, 1655, 1656, 1704, 1713, 1718, 1762, 1763, 1768, 1783, 1823, 1839, 1920, 1924, 1948, 1978, 1979, 2009, 2010, 2011, 2012, 2013, 2014, 2019, 2020, 2023, 2026, 2031, 2032, 2041, 2042, 2044, 2056, 2059, 2061, 2063, 2064, 2065, 2066, 2067, 2069, 2072, 2077, 2079, 2083, 2084, 2086, 2088, 2095, 2099, 2103, 2110], "concret": [8, 11, 29, 34, 49, 51, 57, 62, 486, 785, 800, 824, 842, 973, 1182, 1184, 1201, 1202, 1576, 1668, 1700, 2010, 2013, 2017, 2042, 2044, 2053, 2095, 2096, 2098], "manner": [8, 27, 32, 36, 88, 513, 909, 911, 2031, 2033, 2040, 2063], "jump": [8, 560, 2080], "regim": 8, "ei": 8, "tradeoff": [8, 23, 50, 486, 2067, 2073, 2099, 2104], "temptat": 8, "impos": [8, 48, 59, 1863, 2029, 2038, 2080], "strict": [8, 29, 51, 909, 910, 911, 912, 913, 914, 1163, 1170, 1188, 1269, 1285, 1286, 1523, 1763, 2064, 2082, 2084], "upfront": [8, 2095], "simplifi": [8, 23, 61, 1178, 1184, 1208, 1277, 1513, 1728, 1794, 2020, 2039, 2044, 2048, 2051, 2063, 2067, 2073, 2095], "worth": [8, 9, 22, 23, 49, 51, 1164, 2008, 2079, 2081, 2102], "friction": 8, "compel": 8, "narrow": [8, 1194, 1339, 1419, 1794, 1881, 2011, 2013, 2030, 2062, 2069, 2081, 2108], "subproblem": 8, "fragment": [8, 1030, 1062, 1986, 2017, 2042, 2108], "ecosystem": [8, 2050, 2052, 2096], "incomprehens": 8, "seamlessli": [8, 2032], "softwar": [8, 1305, 1306, 1333, 1961, 2042, 2049, 2089, 2096], "experi": [8, 9, 11, 23, 50, 59, 1175, 1553, 1684, 1713, 1973, 2020, 2044, 2082, 2097], "rich": [8, 32, 2013], "denomin": [8, 687, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1538, 1563, 1712, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1827], "subset": [8, 22, 27, 31, 46, 51, 1281, 1794, 2010, 2012, 2013, 2044, 2058, 2061, 2070, 2103], "borrow": 8, "zen": 8, "implicit": [8, 50, 51, 86, 768, 769, 772, 773, 774, 1213, 1223, 1432, 1433, 1434, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1516, 1517, 1518, 1575, 1596, 1597, 1598, 1604, 1605, 1606, 1654, 1655, 1656, 1811, 2011, 2013, 2014, 2047, 2061, 2064, 2081, 2103], "concis": [8, 38, 2072], "interchang": [8, 34, 1791, 1945, 2012, 2049, 2059, 2089, 2100], "everydai": 8, "english": 8, "movement": [8, 2081, 2099], "worri": [8, 27, 2072], "placement": [8, 33, 36, 860, 1703, 2067, 2072, 2099], "favor": [8, 27, 785, 786, 787, 964, 975, 1075, 1079, 1269, 1324, 1327, 1359, 1360, 1405, 1481, 1523, 1577, 1578, 1700, 1701, 1702, 1704, 1717, 1823, 1924, 1948, 2003], "practition": 8, "debugg": [8, 27, 1274, 2048, 2099, 2108], "plug": 8, "ir": [8, 50, 62, 79, 81, 760, 1272, 1273, 1474, 1475, 1775, 2010, 2013, 2059, 2061, 2089, 2095, 2096, 2098, 2099, 2108], "classic": [8, 2039], "sort": [8, 31, 62, 590, 609, 877, 878, 901, 903, 906, 1106, 1194, 1230, 1392, 1427, 1755, 1756, 1767, 1824, 1859, 1943, 1957, 2011, 2013, 2044, 2046, 2062, 2077, 2095, 2099, 2103], "distribut": [8, 11, 22, 23, 28, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 53, 61, 173, 258, 286, 377, 454, 481, 608, 680, 695, 696, 819, 936, 943, 1080, 1409, 1427, 1431, 1436, 1458, 1459, 1460, 1461, 1462, 1463, 1467, 1472, 1476, 1488, 1537, 1542, 1563, 1612, 1614, 1615, 1616, 1617, 1622, 1626, 1627, 1631, 1641, 1673, 1713, 1769, 1816, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 2009, 2013, 2031, 2032, 2037, 2038, 2042, 2065, 2066, 2068, 2074, 2078, 2082, 2086], "tldr": 8, "resourc": [8, 14, 22, 27, 36, 41, 45, 50, 62, 2013, 2029, 2053, 2077, 2099, 2105, 2111], "characterist": [8, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1925, 2045, 2051], "uniformli": [8, 34, 1834, 1835, 2084], "leak": [8, 894, 901, 904, 906, 2013, 2029, 2039], "smart": [8, 2044, 2064, 2072], "anywai": [8, 2039, 2047], "obviou": [8, 1178, 2046, 2074, 2098], "extens": [8, 14, 18, 27, 29, 32, 34, 50, 63, 1341, 1342, 1855, 1874, 2009, 2020, 2032, 2038, 2056, 2059, 2064, 2077, 2098, 2099, 2108], "unavoid": 8, "latenc": [8, 29, 42, 2021, 2041, 2042, 2099, 2105], "caveat": [8, 1703, 1761, 2020, 2029, 2042, 2051, 2056, 2094, 2104, 2108], "valuabl": 8, "certainli": [8, 2020], "heterogen": [8, 2012], "cluster": [8, 27, 29, 44, 45, 46, 53, 1427, 2082], "focus": [8, 2012, 2013, 2044, 2108], "beaten": 8, "space": [8, 9, 22, 34, 772, 773, 774, 1089, 1124, 1126, 1128, 1129, 1135, 1142, 1223, 1232, 1285, 1286, 1340, 1356, 1427, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1488, 1499, 1500, 1501, 1502, 1503, 1504, 1517, 1518, 1575, 1604, 1605, 1606, 1607, 1608, 1609, 1641, 1946, 2011, 2021, 2033, 2039, 2048, 2051, 2056, 2079, 2110], "innov": 8, "growth": 8, "ultim": [8, 9, 14, 38, 48, 50, 2089], "evidenc": 8, "began": 8, "bind": [8, 14, 27, 51, 62, 1042, 1182, 1184, 1193, 1206, 1207, 2013, 2014, 2017, 2044, 2064, 2096], "monolith": 8, "deepli": 8, "integr": [8, 22, 39, 51, 57, 154, 943, 945, 946, 947, 948, 949, 950, 995, 1089, 1231, 1269, 1293, 1337, 1338, 1418, 1523, 1830, 1842, 1946, 2032, 2044, 2050, 2051, 2060, 2063, 2065, 2067, 2078, 2080, 2084, 2094], "numpi": [8, 22, 58, 448, 493, 693, 694, 699, 878, 880, 881, 901, 902, 906, 957, 1101, 1103, 1104, 1106, 1124, 1145, 1146, 1147, 1148, 1152, 1153, 1158, 1159, 1175, 1233, 1300, 1301, 1311, 1322, 1324, 1325, 1326, 1327, 1328, 1333, 1334, 1337, 1339, 1371, 1376, 1817, 1842, 1845, 1852, 1864, 1871, 1906, 1907, 1908, 1909, 1910, 1911, 1924, 1926, 1927, 1936, 1939, 1940, 1942, 1970, 1973, 1974, 2017, 2020, 2040, 2044, 2045, 2054, 2055, 2056, 2057, 2064, 2080, 2081, 2082, 2083, 2084, 2096, 2112], "scipi": [8, 961, 1316, 1317, 1670, 1817, 1879, 2064, 2075, 2078, 2082], "scikit": [8, 1640], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 2057], "year": [8, 2077], "rewrot": 8, "frontend": [8, 15, 51, 57, 62, 2099], "familiar": [8, 15, 51, 62, 1006, 1040, 1061, 2010, 2039, 2045, 2064, 2067, 2073, 2074, 2096, 2097, 2099, 2107], "perhap": [8, 1184, 2045, 2096], "importantli": 8, "huge": [8, 1925, 2026, 2096], "scientif": [8, 1871], "pareto": [8, 2009], "close": [8, 15, 27, 45, 62, 64, 67, 72, 1044, 1181, 1258, 1305, 1306, 1332, 1333, 1359, 1436, 1555, 1573, 1602, 1790, 1924, 1948, 2026, 2039, 2044, 2054, 2061, 2064, 2067, 2072, 2082, 2084], "curv": [8, 2082], "torchdynamo": [8, 50, 64, 75, 680, 973, 975, 981, 2009, 2019, 2061, 2089, 2094, 2095, 2096, 2097, 2099, 2101], "frame": [8, 50, 62, 973, 1266, 1920, 1963, 2046, 2058, 2059, 2082, 2089, 2095, 2097, 2099, 2100, 2108, 2110], "torch_funct": [8, 2044], "torch_dispatch": 8, "torch": [8, 9, 11, 15, 18, 20, 23, 24, 28, 31, 36, 37, 38, 39, 42, 43, 45, 47, 48, 49, 53, 56, 64, 65, 66, 67, 68, 69, 70, 71, 81, 82, 84, 86, 88, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 895, 896, 901, 906, 907, 916, 917, 918, 928, 929, 936, 937, 938, 939, 940, 996, 997, 1006, 1007, 1008, 1009, 1011, 1012, 1027, 1029, 1040, 1110, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1267, 1268, 1269, 1284, 1382, 1394, 1395, 1396, 1400, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1584, 1703, 1712, 1713, 1714, 1715, 1716, 1730, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1754, 1766, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1830, 1899, 1978, 1979, 1980, 1983, 1985, 2009, 2010, 2011, 2012, 2021, 2022, 2030, 2031, 2038, 2039, 2040, 2041, 2043, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2055, 2057, 2059, 2060, 2065, 2067, 2068, 2069, 2072, 2073, 2074, 2081, 2093, 2094, 2095, 2096, 2097, 2098, 2101, 2104, 2107, 2108, 2110], "fx": [8, 12, 50, 51, 82, 680, 747, 815, 816, 817, 818, 841, 861, 1164, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 2009, 2017, 2058, 2059, 2068, 2069, 2094, 2095, 2096, 2097, 2098, 2099, 2107, 2108], "tracer": [8, 50, 1285, 2061, 2082, 2088, 2096], "functorch": [8, 51, 54, 59, 64, 67, 72, 73, 76, 2094], "anchor": [8, 62, 1572, 1573, 1697, 1698, 2011, 2107], "hackabl": 8, "todai": [8, 27, 51, 54, 59, 973, 2025, 2067, 2095], "evolv": [8, 2043, 2059, 2060], "ai": [8, 2061, 2066, 2078], "adopt": [9, 27, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 745, 746, 756, 761, 762, 763, 764, 765, 1720, 1721, 2059], "hierarch": [9, 2082], "pull": [9, 10, 15, 62, 150, 894, 1198, 2061, 2064, 2098, 2111], "request": [9, 10, 11, 27, 29, 48, 62, 689, 862, 880, 881, 929, 1062, 1342, 1364, 1374, 1646, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 2008, 2025, 2032, 2038, 2039, 2041, 2042, 2061, 2064, 2072, 2073, 2074, 2077, 2078, 2095, 2110, 2111], "overseen": 9, "catch": [9, 38, 2010, 2039, 2045, 2048, 2096, 2100], "maker": 9, "strong": 9, "toward": [9, 64, 1101, 1231, 1232, 1342, 1423, 1713, 1802, 1843, 1851, 1852, 2047, 2065], "philosophi": [9, 57, 2009], "beyond": [9, 23, 1389, 1458, 1780, 1781, 1790, 1850, 2046, 2051, 2059, 2095], "encourag": [9, 36, 2032, 2067, 2077, 2084], "propos": [9, 1777, 1797, 1798, 2020, 2048, 2063, 2073], "review": [9, 10, 23, 2064, 2101], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 62], "codebas": [9, 2044], "strictli": [9, 22, 150, 191, 208, 486, 894, 957, 1232, 1269, 1273, 1523, 2039, 2078], "compani": 9, "bui": 9, "addition": [9, 22, 23, 27, 29, 34, 36, 50, 53, 150, 513, 617, 894, 929, 1164, 1168, 1169, 1273, 1333, 1427, 1485, 1486, 1487, 1901, 2046, 2086, 2110], "membership": [9, 36, 44, 45, 2014], "That": [9, 12, 36, 43, 46, 55, 62, 987, 1266, 1340, 1356, 1961, 2017, 2023, 2044, 2045, 2046, 2047, 2056, 2064, 2072, 2096, 2099], "seat": 9, "reserv": [9, 42, 1062, 2014, 2042, 2051, 2110], "emploi": [9, 29, 1793, 2051, 2064, 2065, 2090], "directori": [9, 14, 27, 29, 32, 36, 43, 81, 1775, 2008, 2024, 2050, 2059, 2064, 2066, 2082, 2090, 2099, 2108], "procedur": [9, 34, 860, 1285, 1286, 1342, 1899, 2072, 2108], "disput": 9, "made": [9, 19, 27, 29, 31, 46, 50, 62, 81, 901, 904, 906, 921, 1269, 1523, 1569, 1571, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1840, 2012, 2020, 2039, 2057, 2064, 2082, 2084, 2093, 2095, 2096, 2108, 2109], "public": [9, 10, 63, 1164, 2044, 2109], "relev": [9, 28, 36, 45, 61, 680, 1333, 1495, 2014, 2038, 2039, 2059, 2064, 2067, 2090, 2099, 2100, 2101, 2111], "resolut": [9, 1535, 1536, 1594, 1629, 1671, 1672, 1946, 2014, 2064, 2112], "conclus": 9, "publicli": [9, 2109], "vision": [9, 1279, 1458, 1612, 2008, 2009, 2101], "roadmap": [9, 10], "parti": [9, 45, 2008, 2009, 2010, 2017, 2042, 2045, 2051, 2064, 2096], "triag": [9, 10], "meet": [9, 10, 12, 29, 44, 987, 1299, 2042, 2099], "Their": [9, 1098, 2044, 2098], "articul": 9, "cohes": 9, "negoti": [9, 2072], "contenti": 9, "broad": [9, 2051, 2111], "stakehold": 9, "power": [9, 12, 44, 1069, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1149, 1293, 1323, 1337, 1490, 1491, 1492, 1650, 1651, 1652, 1728, 1762, 1777, 1806, 1820, 1844, 1967, 2014, 2042, 2077], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 34, 53, 1371, 2013, 2015, 2038, 2039, 2047, 2063, 2067, 2080, 2089, 2092, 2095], "merit": 9, "demonstr": [9, 32, 46, 50, 62, 64, 72, 73, 1442, 2010, 2051, 2056, 2059, 2065, 2072, 2090, 2097, 2099, 2101, 2106], "expertis": 9, "align": [9, 23, 50, 81, 760, 779, 785, 820, 826, 973, 1106, 1223, 1325, 1434, 1442, 1458, 1474, 1488, 1493, 1517, 1518, 1539, 1576, 1584, 1585, 1586, 1612, 1613, 1640, 1641, 1700, 1727, 1768, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1797, 1946, 2009, 2030, 2039, 2048, 2056, 2061, 2070, 2078], "continu": [9, 22, 27, 29, 34, 49, 53, 62, 402, 608, 819, 910, 1223, 1305, 1306, 1333, 1441, 1442, 1713, 1807, 2014, 2020, 2039, 2047, 2056, 2059, 2066, 2086, 2094, 2096, 2097, 2099], "light": [9, 2082], "mainten": [9, 45, 46], "emeritu": [9, 10], "inact": [9, 1062, 2042, 2110], "contact": [9, 27], "item": [9, 22, 29, 64, 74, 75, 583, 584, 585, 589, 792, 793, 794, 814, 815, 816, 817, 940, 1458, 1524, 1533, 1733, 1871, 2008, 2010, 2011, 2012, 2013, 2021, 2030, 2042, 2061, 2062, 2064, 2072, 2082, 2083, 2093, 2095, 2096, 2098, 2103], "nomine": 9, "breadth": [9, 32], "testimoni": 9, "posit": [9, 22, 29, 32, 34, 50, 62, 88, 402, 471, 545, 735, 858, 862, 864, 942, 944, 951, 964, 965, 966, 1122, 1123, 1124, 1125, 1126, 1134, 1136, 1140, 1142, 1160, 1170, 1171, 1174, 1182, 1184, 1227, 1228, 1261, 1264, 1269, 1272, 1299, 1300, 1311, 1313, 1324, 1327, 1328, 1342, 1362, 1377, 1413, 1418, 1419, 1436, 1450, 1451, 1452, 1457, 1458, 1459, 1466, 1476, 1483, 1523, 1529, 1560, 1567, 1572, 1573, 1594, 1602, 1621, 1626, 1629, 1697, 1698, 1706, 1707, 1850, 1852, 1879, 1902, 1904, 1949, 1950, 1951, 1952, 1960, 2008, 2011, 2025, 2030, 2031, 2044, 2045, 2048, 2059, 2061, 2062, 2065, 2071, 2077, 2078, 2084, 2099, 2109, 2112], "neg": [9, 11, 14, 19, 22, 27, 34, 48, 62, 88, 441, 443, 458, 661, 662, 698, 755, 780, 944, 949, 990, 993, 1011, 1027, 1033, 1034, 1062, 1075, 1122, 1123, 1124, 1125, 1126, 1127, 1141, 1142, 1143, 1149, 1160, 1188, 1194, 1259, 1261, 1263, 1323, 1350, 1362, 1385, 1386, 1400, 1409, 1413, 1418, 1419, 1427, 1436, 1444, 1445, 1446, 1467, 1476, 1509, 1516, 1517, 1518, 1526, 1530, 1532, 1537, 1555, 1572, 1573, 1622, 1626, 1629, 1631, 1640, 1644, 1654, 1655, 1656, 1665, 1673, 1697, 1698, 1700, 1816, 1817, 1848, 1852, 1886, 1888, 1891, 1903, 1941, 1949, 1950, 1951, 1952, 1959, 1960, 1979, 1983, 1987, 1988, 2000, 2010, 2011, 2030, 2032, 2037, 2039, 2044, 2045, 2061, 2062, 2071, 2077, 2078, 2095, 2099, 2103], "interact": [9, 15, 22, 27, 62, 63, 863, 916, 1009, 1042, 2014, 2017, 2044, 2064, 2067, 2082, 2093, 2096, 2099, 2102, 2110], "final": [9, 27, 29, 31, 34, 36, 45, 50, 51, 53, 57, 58, 686, 689, 690, 760, 941, 959, 972, 1106, 1145, 1164, 1197, 1223, 1341, 1359, 1364, 1443, 1474, 1476, 1493, 1539, 1552, 1703, 1902, 1946, 2010, 2012, 2013, 2014, 2030, 2044, 2047, 2048, 2051, 2054, 2056, 2058, 2059, 2061, 2063, 2064, 2073, 2074, 2093, 2095, 2097, 2108], "declin": 9, "conflict": [9, 23, 29, 46, 50, 2064], "lack": [9, 11, 940, 1305, 1306, 1333], "unfit": 9, "conduct": [9, 1713, 1813, 1925, 2072, 2090], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 933, 2011, 2064], "letter": [9, 1106], "befit": 9, "candidaci": 9, "behind": [9, 27, 2009, 2056, 2073, 2098], "75": [9, 1231, 1511, 1629, 1647, 1777, 1824, 2011, 2078], "unforeseen": 9, "circumst": [9, 45, 973, 1194, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1681, 2042], "perman": [9, 62, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751, 2039, 2074], "unavail": [9, 2012], "rank": [9, 22, 23, 27, 28, 29, 31, 32, 34, 36, 43, 45, 46, 49, 51, 53, 64, 73, 1315, 1316, 1317, 1324, 1359, 1515, 1563, 1713, 1733, 1813, 1925, 2011, 2043, 2047, 2053, 2061, 2065, 2072, 2073, 2095, 2108], "elect": 9, "invit": [9, 2008], "convinc": 9, "approach": [9, 23, 27, 62, 87, 961, 1175, 1436, 1867, 1899, 1973, 2010, 2029, 2032, 2042, 2044, 2048, 2058, 2059, 2067, 2072, 2099], "interview": 9, "talk": [9, 48, 2017, 2050], "gather": [9, 27, 29, 45, 53, 513, 1936, 1961, 2011, 2044, 2046, 2047, 2050, 2062, 2064, 2103], "read": [9, 12, 18, 22, 27, 29, 32, 35, 36, 38, 45, 46, 51, 53, 57, 62, 448, 927, 987, 1064, 1089, 1157, 1159, 1160, 1186, 1277, 1341, 1807, 2009, 2017, 2030, 2031, 2039, 2040, 2042, 2043, 2045, 2050, 2054, 2058, 2064, 2067, 2072, 2093, 2096, 2097, 2099, 2101], "attend": [9, 735, 1529, 1567], "confer": [9, 1476], "pipelin": [9, 29, 62, 2009, 2072, 2099], "world": [9, 27, 31, 36, 43, 45, 46, 53, 1563, 1713, 2039, 2064, 2067, 2095, 2096, 2097], "cover": [9, 32, 51, 54, 62, 64, 1080, 1106, 1516, 1654, 1655, 1656, 2013, 2015, 2031, 2039, 2044, 2047, 2048, 2050, 2051, 2072, 2097, 2102, 2106, 2111], "push": [9, 37, 1066, 1068, 1175, 1335, 1973, 2066, 2096], "codeown": 9, "notifi": [9, 28, 46, 2074], "expert": 9, "strongli": [9, 27, 36, 46, 1461, 1462, 1463, 1467, 1920, 2008], "failur": [9, 27, 34, 36, 37, 38, 42, 43, 44, 45, 49, 50, 680, 920, 921, 973, 1164, 1184, 1285, 1286, 1389, 2013, 2019, 2029, 2047, 2059, 2065, 2072, 2074, 2084, 2096, 2099, 2108], "revert": [9, 34, 53, 1560, 1689, 2074], "substanti": [9, 23, 2042, 2093], "syntact": [9, 38, 62], "incompat": [9, 14, 58, 954, 1266, 1720, 1721, 2040, 2064], "establish": [9, 27, 45, 1807, 2039], "seri": [9, 62, 1442, 1485, 2055, 2061, 2093, 2104, 2109], "lf": 9, "llc": 9, "guidelin": [9, 1744, 2053, 2058, 2064, 2067, 2068], "trademark": 9, "www": [9, 1442, 1573, 2082], "lfproject": 9, "acknowledg": [9, 27, 2009, 2074, 2077], "copyright": [9, 2108], "holder": 9, "independ": [9, 22, 27, 45, 53, 61, 153, 154, 779, 785, 909, 910, 911, 912, 913, 914, 1011, 1223, 1232, 1328, 1460, 1461, 1462, 1463, 1467, 1615, 1616, 1617, 1622, 1639, 1640, 1700, 1729, 1765, 1823, 1979, 2009, 2010, 2038, 2039, 2042, 2056, 2064, 2106], "authorship": 9, "claus": [9, 2046], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 23, 34, 431, 479, 758, 799, 1213, 1290, 1306, 1309, 1328, 1370, 1416, 1488, 1529, 1583, 1727, 1811, 1813, 1823, 1824, 1925, 2010, 2011, 2048, 2055, 2061, 2077, 2078, 2098], "partli": [9, 2013], "domain": [9, 34, 38, 684, 826, 886, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1138, 1139, 1223, 2032, 2061, 2067], "absolut": [9, 11, 14, 62, 92, 681, 694, 920, 921, 1154, 1258, 1298, 1303, 1324, 1327, 1329, 1350, 1483, 1489, 1555, 1638, 1642, 1685, 1738, 1739, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1768, 1776, 1817, 1843, 1874, 2011, 2021, 2051, 2061, 2062, 2078, 2083, 2084, 2090], "health": 9, "success": [9, 29, 34, 36, 42, 62, 286, 1300, 1311, 1313, 1359, 1740, 1906, 1907, 1908, 1910, 1911, 2042, 2051, 2061, 2077, 2108], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 2061], "clearli": [9, 1184, 2020, 2064], "sponsorship": 9, "foundat": [9, 2059], "ptf": 9, "minor": [9, 1033, 1300, 1316, 2077, 2096], "committ": 9, "prior": [9, 23, 27, 29, 36, 79, 81, 901, 905, 906, 907, 978, 1342, 1569, 1571, 1681, 1744, 2040, 2042, 2044, 2063, 2067, 2093, 2099], "walkthrough": [9, 2038], "facebook": 9, "infrastructur": [9, 37, 2064, 2095], "employe": 9, "expand": [9, 34, 255, 493, 879, 901, 905, 906, 907, 920, 921, 956, 1322, 1323, 1371, 1529, 1574, 1674, 1956, 2008, 2011, 2019, 2030, 2031, 2040, 2042, 2044, 2045, 2059, 2061, 2062, 2064, 2065, 2081, 2103], "deliv": [9, 2066], "offici": [9, 27, 50, 87, 1427, 2067], "showcas": [9, 12, 33, 1519, 2042, 2053], "whenev": [9, 50, 881, 1727, 1728, 2026, 2029, 2044, 2070, 2073, 2074, 2098, 2108, 2109], "fix": [10, 18, 22, 27, 34, 36, 45, 50, 55, 58, 62, 82, 83, 262, 795, 801, 929, 1164, 1283, 1315, 1465, 1466, 1542, 1620, 1621, 1640, 1713, 2010, 2011, 2026, 2037, 2038, 2042, 2046, 2047, 2053, 2057, 2059, 2061, 2062, 2063, 2093, 2096, 2099, 2106, 2108], "plu": [10, 14, 29, 909, 1160, 1316, 2047, 2077], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1342], "ezyang": [10, 2017, 2081], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1813, 1925], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": 10, "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 28, 29, 31, 34, 53, 929, 1781, 1782, 1784, 1790, 1794, 2063], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 2108], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 2097], "ansel": [10, 2097], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 12, 1416, 1824, 2042, 2096, 2099], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 34], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1342], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1223], "robi": 10, "robieta": 10, "xu": [10, 53], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 27, 32, 53, 62, 1182, 1909, 2012, 2031, 2061, 2093, 2104], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1964], "sebastian": 10, "messmer": 10, "smessmer": 10, "aaron": 10, "bockov": 10, "abock": 10, "bowen": 10, "bao": [10, 2105], "bowenbao": 10, "thiago": 10, "crepaldi": 10, "thiagocrepaldi": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1427], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 793], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 2099, 2108], "johnson": 10, "peterjc123": [10, 2057], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "sunita": 10, "nadamp": 10, "snadamp": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 34], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 12, 29, 51, 54, 58, 59, 62, 64, 72, 73, 74, 75, 319, 987, 1178, 1181, 1184, 1191, 1195, 1196, 1197, 1198, 1208, 1267, 1270, 1765, 1920, 2014, 2023, 2032, 2039, 2044, 2067, 2095, 2096, 2099, 2108, 2109], "bj": 11, "j": [11, 27, 34, 313, 315, 321, 513, 515, 517, 692, 899, 909, 911, 984, 1106, 1122, 1123, 1130, 1136, 1140, 1141, 1210, 1266, 1269, 1305, 1306, 1317, 1333, 1342, 1349, 1357, 1359, 1364, 1461, 1462, 1463, 1467, 1523, 1526, 1615, 1616, 1617, 1622, 1817, 1824, 1903, 1920, 1924, 1970, 2012, 2037, 2039, 2044, 2048, 2056, 2082], "imaginari": [11, 311, 920, 984, 991, 1127, 1129, 1137, 1138, 1139, 1240, 1259, 1261, 1262, 1265, 1836, 1920, 1971, 1972, 2014, 2039, 2048, 2084], "satisfi": [11, 20, 23, 34, 51, 62, 617, 694, 760, 794, 910, 920, 921, 957, 1122, 1123, 1125, 1127, 1129, 1137, 1138, 1139, 1154, 1183, 1283, 1309, 1335, 1336, 1427, 1442, 1469, 1474, 1493, 1539, 1744, 1761, 1843, 1859, 1899, 1920, 2013, 2017, 2039, 2042, 2047, 2048, 2063, 2065, 2066, 2077, 2080, 2097], "equat": [11, 966, 1106, 1178, 1188, 1213, 1227, 1313, 1314, 1315, 1316, 1317, 1319, 1330, 1332, 1435, 1884, 1948, 2011, 2039, 2048, 2063, 2078], "frequent": [11, 29, 1427, 2009, 2042, 2053, 2054, 2056, 2077, 2089, 2090, 2101], "occur": [11, 22, 27, 38, 39, 45, 53, 58, 82, 84, 196, 315, 896, 929, 973, 1065, 1106, 1184, 1266, 1272, 1283, 1313, 1442, 1563, 1582, 1613, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1794, 2012, 2026, 2031, 2038, 2039, 2042, 2046, 2054, 2059, 2061, 2066, 2072, 2074, 2081, 2084, 2095, 2096, 2099, 2101, 2104, 2106, 2108, 2109, 2110], "mathemat": [11, 62, 909, 910, 911, 912, 913, 914, 1154, 1223, 1435, 1437, 1438, 1439, 1485, 1486, 1487, 1488, 1563, 1648, 1688, 1713, 1768, 1843, 1901, 1902, 2013, 2017, 2039, 2054, 2078, 2086], "topic": [11, 50, 2050, 2051, 2097], "tradition": 11, "torchaudio": [11, 2009], "mimick": 11, "assembli": 11, "lapack": [11, 1213, 1300, 1311, 1312, 1313, 1315, 1318, 1331, 1823, 1924], "spectral": [11, 1289, 1305, 1333, 1728, 1752, 1762, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2054], "fft": [11, 2009, 2042], "4621": 11, "0303j": 11, "2438": [11, 1315, 1620], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 175, 984, 1149, 1159, 1248, 1269, 1299, 1300, 1305, 1306, 1307, 1308, 1309, 1310, 1450, 1451, 1452, 1523, 1604, 1605, 1606, 1774, 1817, 1864, 2079, 2080, 2083, 2084, 2099], "complex64": [11, 178, 965, 966, 984, 1123, 1125, 1126, 1131, 1132, 1159, 1248, 1301, 1324, 1327, 1450, 1451, 1452, 1604, 1605, 1606, 1774, 1817, 1864, 2079, 2080, 2083, 2084, 2099], "apart": [11, 2013, 2039], "linspac": [11, 944, 968, 1127, 1137, 1371, 2011, 2015, 2062], "logspac": [11, 2011, 2015, 2062], "arang": [11, 22, 27, 35, 513, 607, 691, 692, 693, 697, 699, 887, 888, 889, 955, 967, 971, 1089, 1104, 1122, 1126, 1134, 1140, 1142, 1146, 1147, 1148, 1149, 1156, 1157, 1233, 1290, 1291, 1295, 1298, 1322, 1325, 1326, 1339, 1419, 1443, 1444, 1445, 1545, 1546, 1547, 1548, 1549, 1576, 1577, 1578, 1667, 1768, 1769, 1812, 1820, 1824, 1839, 1846, 1851, 1871, 1904, 1912, 1923, 1940, 1941, 1943, 1944, 1946, 1974, 2011, 2020, 2032, 2056, 2062, 2078, 2082, 2083, 2093, 2096, 2101, 2103], "switch": [11, 22, 29, 56, 61, 62, 79, 1312, 1313, 1314, 1462, 1629, 1668, 1718, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1855, 1961, 2029, 2039, 2042, 2051, 2053, 2063, 2100], "view_as_r": [11, 1920, 2011, 2062, 2081], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 64, 77, 2011, 2030, 2032, 2077], "2250": [11, 1326, 1768], "7546": 11, "1722": 11, "x1": [11, 50, 961, 1317, 1457, 1515, 1572, 1573, 1611, 1669, 2011, 2103], "3j": [11, 27, 698, 988, 989, 1847, 1848, 1864], "4j": [11, 27, 1874], "0000": [11, 34, 513, 866, 909, 911, 944, 964, 968, 991, 1087, 1093, 1094, 1095, 1120, 1121, 1124, 1126, 1127, 1133, 1134, 1137, 1142, 1154, 1155, 1156, 1223, 1229, 1232, 1236, 1295, 1298, 1299, 1300, 1312, 1313, 1316, 1321, 1322, 1326, 1328, 1340, 1356, 1414, 1465, 1466, 1576, 1577, 1579, 1580, 1620, 1621, 1768, 1817, 1823, 1828, 1829, 1830, 1839, 1843, 1844, 1868, 1874, 1876, 1877, 1879, 1882, 1883, 1884, 1885, 1902, 1948, 1949, 1951, 1976, 2020, 2032, 2042, 2077, 2078, 2083], "6569": [11, 1236], "5708": [11, 1090], "7854": 11, "complex_tensor": 11, "pt": [11, 23, 29, 53, 1158, 1274, 1277, 1280, 1287, 1341, 1855, 2010, 2021, 2051, 2056, 2064, 2101], "conjug": [11, 330, 458, 692, 920, 965, 966, 988, 989, 1249, 1299, 1300, 1306, 1309, 1312, 1319, 1333, 1338, 1342, 1727, 1811, 1847, 1920, 1924, 1970, 2048, 2063, 2083], "wirting": [11, 920, 2048], "deriv": [11, 27, 53, 150, 738, 739, 740, 741, 742, 743, 781, 800, 824, 894, 915, 920, 921, 1170, 1174, 1181, 1223, 1266, 1327, 1359, 1571, 1703, 2009, 2012, 2044, 2045, 2048, 2072, 2077, 2078], "steepest": [11, 2039], "descent": [11, 34, 1777, 1793, 1797, 1798, 2039, 2051], "box": [11, 27, 46, 62, 1175, 1182, 1973, 2031, 2039, 2043, 2059, 2094, 2095, 2100, 2101], "real_param": 11, "p": [11, 23, 29, 34, 53, 62, 154, 234, 286, 425, 426, 453, 488, 491, 492, 686, 689, 941, 943, 953, 961, 1100, 1290, 1301, 1307, 1308, 1316, 1317, 1359, 1361, 1364, 1374, 1412, 1431, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1488, 1490, 1491, 1492, 1528, 1532, 1534, 1572, 1573, 1595, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1650, 1651, 1652, 1662, 1666, 1669, 1670, 1681, 1697, 1718, 1731, 1733, 1739, 1748, 1768, 1793, 1844, 1901, 2011, 2012, 2038, 2039, 2042, 2046, 2048, 2053, 2063, 2066, 2077, 2078, 2102, 2103], "complex_optim": 11, "adamw": [11, 1784, 1790, 2063], "real_optim": 11, "slight": [11, 1863, 2077, 2080], "discrep": [11, 1713, 1830, 2048], "foreach": [11, 1717, 1718, 1719, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 2063], "v": [11, 29, 42, 50, 57, 62, 487, 488, 544, 899, 910, 912, 913, 914, 940, 957, 1163, 1173, 1175, 1184, 1266, 1283, 1305, 1309, 1333, 1337, 1342, 1529, 1572, 1573, 1583, 1620, 1666, 1729, 1760, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1813, 1846, 1905, 1909, 1924, 1925, 1973, 2010, 2011, 2012, 2013, 2026, 2039, 2048, 2057, 2064, 2077, 2082, 2092], "forloop": 11, "numerical_accuraci": 11, "impact": [11, 23, 27, 81, 1062, 1867, 2023, 2026, 2039, 2067, 2081, 2099, 2104, 2108], "pointwis": [11, 34, 973, 1168, 1169, 1347, 1348, 1488, 2030, 2040, 2098, 2101, 2102], "lbfg": [11, 2063], "yet": [11, 28, 36, 50, 51, 53, 58, 61, 62, 71, 80, 82, 83, 486, 1008, 1080, 1195, 1272, 1274, 1287, 1375, 1713, 1735, 1739, 1741, 1780, 1781, 2009, 2012, 2013, 2019, 2025, 2031, 2032, 2042, 2061, 2062, 2067, 2072, 2074, 2077, 2078, 2080, 2093, 2096, 2098, 2099, 2104, 2106, 2108], "fulli": [11, 14, 22, 27, 29, 31, 33, 50, 57, 62, 680, 1069, 1182, 1269, 1519, 1520, 1521, 1523, 2013, 2019, 2025, 2044, 2064, 2067, 2095, 2096, 2103], "quantiz": [11, 26, 62, 219, 326, 338, 472, 473, 474, 475, 476, 478, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 861, 862, 863, 864, 865, 933, 1091, 1120, 1121, 1825, 1826, 1827, 1828, 1829, 1961, 2009, 2062, 2080, 2083, 2084, 2087, 2088], "pred": [12, 64, 67, 72, 73, 987, 1488, 1713, 2052, 2063, 2072, 2103], "union": [12, 14, 22, 29, 33, 36, 39, 43, 46, 50, 51, 53, 62, 987, 1181, 1182, 1281, 1341, 1424, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1470, 1471, 1490, 1491, 1492, 1516, 1517, 1518, 1523, 1567, 1569, 1571, 1574, 1587, 1733, 1774, 1855, 1964, 2011, 2012, 2013, 2017, 2056, 2059, 2061, 2064, 2079, 2082, 2084, 2088], "true_fn": [12, 51, 64, 67, 72, 73, 987], "false_fn": [12, 51, 64, 67, 72, 73, 987], "operand": [12, 64, 72, 73, 949, 987, 1106, 2013, 2014, 2044, 2077, 2080], "Its": [12, 27, 51, 62, 995, 1020, 1269, 1317, 1335, 1336, 1361, 1523, 1768, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1970, 2013, 2043], "uniqu": [12, 27, 36, 42, 45, 46, 48, 513, 517, 1260, 1305, 1306, 1310, 1316, 1317, 1319, 1328, 1330, 1332, 1333, 1370, 1377, 1901, 1924, 1958, 2008, 2010, 2019, 2024, 2044, 2064, 2066, 2072, 2073, 2074, 2077, 2082, 2093, 2110], "predic": [12, 64, 69, 72, 73, 1184], "unlock": [12, 2020], "flexibilti": 12, "architectur": [12, 33, 62, 1032, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1458, 1567, 1612, 1868, 2042, 2054, 2067, 2077, 2092], "prototyp": [12, 18, 27, 50, 680, 909, 911, 915, 920, 921, 987, 1279, 1571, 1583, 1584, 2009, 2020, 2026, 2031, 2032, 2051, 2056, 2070, 2072, 2077, 2080, 2086, 2087, 2088, 2090], "classif": [12, 987, 1436, 1442, 1458, 1526, 1528, 1530, 1556, 1613, 2009, 2037, 2068], "co": [12, 50, 51, 59, 64, 68, 69, 72, 73, 74, 75, 77, 201, 635, 636, 683, 951, 973, 987, 1048, 1165, 1168, 1169, 1174, 1227, 1228, 1321, 1456, 1457, 1460, 1797, 1798, 1805, 1817, 1878, 1882, 1883, 1884, 1885, 1887, 1906, 1907, 1908, 1910, 1911, 2011, 2017, 2030, 2062, 2063, 2077, 2082, 2084, 2094, 2101, 2103], "sin": [12, 14, 50, 51, 58, 59, 64, 68, 69, 72, 73, 74, 75, 532, 669, 670, 882, 973, 987, 1048, 1165, 1167, 1168, 1169, 1171, 1174, 1228, 1321, 1371, 1817, 1879, 1885, 2011, 2017, 2030, 2039, 2062, 2077, 2078, 2082, 2094, 2099, 2101, 2103, 2106], "dynamicshapecondpred": 12, "dyn_shape_mod": 12, "eagerli": [12, 32, 1037, 1043, 1990, 1993, 2042, 2095, 2099], "vari": [12, 50, 819, 1275, 1436, 1555, 1754, 1880, 2026, 2042, 2053, 2054, 2063, 2067, 2068, 2077, 2090, 2095, 2096, 2098, 2099, 2108, 2110], "inp2": 12, "assert": [12, 22, 23, 29, 34, 55, 57, 58, 59, 62, 64, 70, 73, 74, 75, 624, 923, 925, 926, 1165, 1167, 1168, 1169, 1170, 1173, 1174, 1175, 1183, 1184, 1267, 1272, 1273, 1279, 1681, 1774, 1973, 2012, 2014, 2017, 2044, 2045, 2051, 2056, 2064, 2067, 2084, 2095, 2099, 2107, 2108], "export": [12, 15, 18, 27, 35, 49, 64, 66, 69, 71, 72, 73, 78, 81, 680, 841, 932, 980, 987, 1008, 1179, 1188, 1272, 1274, 1275, 1281, 1287, 1755, 1756, 1775, 1776, 2009, 2010, 2012, 2013, 2017, 2044, 2062, 2066, 2072, 2089, 2095, 2100, 2106, 2107], "deploy": [12, 36, 45, 50, 2009, 2023, 2090, 2100], "dim_batch": 12, "dim": [12, 27, 32, 33, 34, 50, 58, 59, 62, 64, 66, 72, 73, 112, 114, 115, 116, 118, 134, 135, 136, 184, 204, 207, 210, 211, 212, 213, 214, 215, 229, 233, 260, 264, 281, 312, 313, 314, 315, 316, 317, 321, 322, 354, 380, 392, 407, 409, 410, 411, 414, 429, 430, 431, 432, 436, 437, 453, 462, 470, 479, 491, 492, 494, 505, 506, 512, 513, 514, 515, 516, 517, 518, 519, 537, 538, 541, 542, 544, 547, 552, 553, 555, 560, 565, 573, 578, 579, 583, 584, 585, 587, 588, 590, 605, 606, 609, 610, 611, 612, 615, 617, 693, 695, 696, 697, 699, 875, 876, 877, 911, 912, 914, 960, 967, 985, 987, 994, 1005, 1020, 1022, 1085, 1086, 1087, 1088, 1089, 1098, 1104, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1145, 1146, 1165, 1175, 1179, 1210, 1223, 1233, 1241, 1242, 1243, 1244, 1246, 1291, 1301, 1302, 1322, 1326, 1336, 1338, 1339, 1349, 1357, 1367, 1369, 1370, 1372, 1375, 1377, 1392, 1414, 1415, 1416, 1417, 1418, 1419, 1427, 1457, 1458, 1459, 1462, 1466, 1468, 1473, 1488, 1494, 1513, 1529, 1530, 1531, 1557, 1559, 1571, 1573, 1574, 1611, 1612, 1628, 1631, 1640, 1648, 1654, 1655, 1656, 1665, 1666, 1668, 1670, 1674, 1681, 1687, 1688, 1696, 1713, 1728, 1729, 1735, 1739, 1741, 1748, 1749, 1762, 1765, 1768, 1814, 1821, 1824, 1844, 1845, 1850, 1851, 1856, 1857, 1858, 1861, 1862, 1892, 1895, 1896, 1900, 1903, 1905, 1912, 1915, 1917, 1918, 1919, 1920, 1923, 1936, 1940, 1941, 1942, 1943, 1946, 1947, 1955, 1956, 1957, 1958, 1960, 1968, 1969, 1973, 1974, 2009, 2010, 2011, 2017, 2031, 2032, 2045, 2046, 2056, 2059, 2061, 2062, 2077, 2078, 2080, 2087, 2090, 2095, 2103], "batch": [12, 23, 27, 32, 34, 46, 49, 50, 53, 54, 55, 58, 59, 62, 64, 72, 73, 583, 584, 585, 587, 588, 686, 702, 703, 704, 705, 706, 707, 735, 760, 779, 785, 915, 920, 921, 941, 953, 954, 961, 964, 965, 966, 973, 1005, 1094, 1096, 1106, 1168, 1169, 1175, 1266, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1337, 1338, 1339, 1342, 1350, 1359, 1360, 1364, 1435, 1436, 1437, 1438, 1439, 1442, 1450, 1451, 1456, 1458, 1459, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1474, 1475, 1476, 1477, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1493, 1494, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1514, 1515, 1526, 1527, 1528, 1529, 1530, 1532, 1535, 1536, 1537, 1538, 1539, 1541, 1555, 1556, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1594, 1599, 1601, 1602, 1612, 1613, 1615, 1616, 1617, 1620, 1621, 1622, 1623, 1626, 1639, 1640, 1641, 1665, 1673, 1681, 1699, 1700, 1703, 1712, 1713, 1727, 1754, 1755, 1757, 1758, 1760, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1798, 1799, 1805, 1811, 1813, 1823, 1827, 1906, 1907, 1908, 1910, 1911, 1915, 1920, 1924, 1925, 1945, 1948, 1949, 1951, 1970, 1973, 2009, 2030, 2031, 2032, 2038, 2042, 2045, 2046, 2051, 2053, 2065, 2067, 2072, 2077, 2082, 2083, 2090, 2095, 2096, 2098, 2099, 2102, 2106, 2108], "min": [12, 22, 27, 38, 45, 50, 62, 64, 74, 75, 116, 185, 186, 187, 188, 300, 695, 696, 697, 758, 770, 771, 780, 802, 819, 820, 821, 822, 825, 876, 968, 969, 1048, 1086, 1120, 1121, 1194, 1230, 1301, 1315, 1316, 1322, 1326, 1328, 1333, 1339, 1359, 1409, 1441, 1481, 1509, 1511, 1531, 1544, 1551, 1603, 1640, 1644, 1674, 1676, 1682, 1700, 1792, 1797, 1798, 1807, 1811, 1813, 1823, 1924, 1949, 1950, 1951, 1952, 2011, 2026, 2030, 2061, 2062, 2067, 2070, 2072, 2090, 2095, 2099, 2103, 2112], "ep": [12, 50, 712, 713, 714, 715, 716, 717, 723, 724, 736, 737, 749, 751, 752, 753, 754, 795, 819, 820, 821, 822, 825, 826, 920, 921, 1279, 1355, 1423, 1437, 1438, 1439, 1457, 1476, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1532, 1537, 1538, 1563, 1567, 1569, 1571, 1572, 1599, 1611, 1626, 1630, 1631, 1639, 1643, 1666, 1669, 1673, 1678, 1697, 1712, 1728, 1762, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1807, 1827, 2011, 2044, 2048, 2078, 2103, 2112], "dynamic_shap": [12, 50, 2059, 2090, 2105], "graphmodul": [12, 32, 50, 51, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 81, 860, 861, 862, 863, 2067, 2088, 2094, 2097, 2098, 2107, 2108], "arg0_1": [12, 50], "f32": [12, 50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77], "s0": [12, 50, 51, 64, 72, 73, 486, 1184, 2095, 2096, 2108], "sym_siz": [12, 51, 64, 72, 73, 2062, 2103], "sym": [12, 64, 72, 73, 74, 75, 1184, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887], "gt": [12, 64, 72, 73, 296, 1224, 2011, 2030, 2048, 2062, 2103], "true_graph_0": [12, 51, 64, 67, 72, 73], "false_graph_0": [12, 51, 64, 67, 72, 73], "symbol": [12, 14, 21, 50, 51, 63, 64, 73, 79, 80, 83, 84, 87, 624, 817, 841, 975, 1178, 1179, 1181, 1182, 1184, 1186, 1187, 1189, 1190, 1193, 1194, 1198, 1284, 1338, 1493, 1539, 1948, 1970, 2009, 2013, 2017, 2059, 2095, 2098, 2099, 2108], "sub": [12, 27, 33, 38, 53, 61, 64, 67, 72, 73, 562, 814, 862, 863, 1281, 1285, 1286, 1367, 1370, 1372, 1535, 1536, 1567, 1568, 1570, 1844, 1922, 1940, 1957, 2008, 2010, 2011, 2030, 2032, 2039, 2053, 2061, 2062, 2077, 2080, 2096, 2103, 2107], "exmapl": 12, "dependet": 12, "datadependentcondpred": 12, "sum_1": [12, 62, 2094, 2096, 2097], "b8": [12, 64, 67, 72], "flatten": [12, 23, 50, 51, 53, 62, 64, 70, 875, 876, 1095, 1232, 1326, 1339, 1575, 1726, 1768, 1776, 1824, 1840, 1845, 1850, 1936, 1956, 1957, 1958, 1959, 2011, 2030, 2031, 2033, 2037, 2059, 2061, 2062, 2069, 2081, 2095], "closur": [12, 31, 64, 72, 73, 975, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1794, 2097, 2100], "flat": [12, 50, 1845, 1887, 1959, 2011, 2032, 2047, 2061, 2077], "_higher_order_op": 12, "condition": [12, 45, 917, 987], "constraint": [12, 27, 50, 53, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 794, 795, 910, 987, 1040, 1051, 1169, 1178, 1179, 1181, 1183, 1184, 1194, 1713, 1728, 1754, 1794, 2009, 2013, 2032, 2045, 2047, 2048, 2051, 2077, 2093, 2095, 2096], "true_branch": [12, 987], "false_branch": [12, 987], "consist": [12, 22, 27, 29, 32, 34, 45, 46, 51, 62, 920, 964, 965, 966, 987, 1192, 1269, 1299, 1305, 1306, 1308, 1310, 1311, 1312, 1313, 1337, 1339, 1523, 1571, 1730, 1733, 1776, 1823, 1924, 2010, 2013, 2017, 2020, 2031, 2032, 2045, 2047, 2051, 2053, 2055, 2061, 2063, 2066, 2077, 2094, 2097, 2102, 2108], "possibli": [12, 22, 45, 50, 53, 987, 1196, 1197, 1269, 1285, 1312, 1317, 1523, 1713, 2010, 2017, 2055, 2064, 2098, 2110], "aka": [12, 27, 51, 64, 72, 73, 933, 987, 1483, 1638, 2039, 2059, 2080, 2095], "add_": [12, 27, 50, 56, 58, 488, 987, 1164, 2011, 2030, 2040, 2059, 2077], "tempor": [12, 987, 1437, 1439, 1442, 1563, 1576, 1613, 1640, 1700], "pytre": [12, 50, 62, 64, 987, 2045], "parallel_info": [13, 2009, 2041], "cppextens": [14, 2009], "setuptool": 14, "bare": 14, "pypa": 14, "userguid": 14, "ext_modul": 14, "buildextens": [14, 2009], "extra_compile_arg": [14, 2057], "extra_link_flag": 14, "wl": 14, "lm": 14, "cmdclass": 14, "build_ext": 14, "cudaextens": [14, 2009], "cuda_extens": 14, "extension_kernel": 14, "cu": 14, "cxx": 14, "nvcc": [14, 1036, 2108], "o2": 14, "lcuda": 14, "arch": 14, "card": [14, 2057], "visibl": [14, 27, 29, 42, 51, 1030, 1076, 1524, 1525, 1533, 1534, 2095, 2096, 2100], "ptx": 14, "road": 14, "recompil": [14, 62, 680, 973, 1283, 2019, 2049, 2095, 2096, 2097, 2104], "cc": [14, 27, 2042], "newest": [14, 57, 2058], "torch_cuda_arch_list": 14, "6": [14, 18, 22, 23, 27, 34, 43, 50, 62, 64, 65, 69, 70, 72, 73, 74, 75, 77, 313, 315, 317, 321, 401, 402, 471, 487, 499, 513, 517, 560, 607, 685, 686, 691, 697, 741, 742, 743, 745, 746, 758, 761, 763, 765, 909, 910, 912, 913, 914, 936, 944, 952, 957, 963, 967, 971, 995, 1017, 1064, 1069, 1083, 1084, 1085, 1089, 1090, 1101, 1104, 1105, 1122, 1130, 1135, 1136, 1140, 1141, 1143, 1145, 1146, 1149, 1156, 1223, 1233, 1235, 1236, 1258, 1280, 1291, 1295, 1306, 1322, 1326, 1327, 1328, 1335, 1336, 1340, 1342, 1371, 1417, 1418, 1419, 1432, 1443, 1444, 1445, 1446, 1449, 1454, 1457, 1465, 1466, 1475, 1476, 1477, 1479, 1480, 1519, 1520, 1524, 1532, 1541, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1567, 1568, 1570, 1572, 1575, 1581, 1596, 1626, 1633, 1634, 1667, 1669, 1676, 1703, 1756, 1757, 1759, 1761, 1767, 1768, 1769, 1778, 1792, 1812, 1813, 1816, 1823, 1824, 1830, 1831, 1834, 1840, 1850, 1851, 1855, 1859, 1871, 1892, 1896, 1901, 1904, 1906, 1907, 1912, 1923, 1925, 1926, 1927, 1935, 1940, 1941, 1942, 1943, 1944, 1946, 1949, 1951, 1955, 1959, 1961, 1974, 1975, 2010, 2013, 2014, 2020, 2032, 2037, 2039, 2044, 2045, 2047, 2051, 2056, 2061, 2072, 2073, 2077, 2078, 2080, 2083, 2084, 2096, 2097, 2099, 2103, 2105, 2108, 2109], "build_my_extens": 14, "7": [14, 22, 23, 27, 34, 50, 62, 64, 69, 233, 260, 313, 315, 317, 321, 401, 402, 471, 513, 560, 607, 617, 685, 697, 745, 746, 912, 914, 949, 952, 957, 963, 965, 967, 971, 1088, 1089, 1101, 1103, 1104, 1107, 1122, 1145, 1146, 1149, 1152, 1156, 1223, 1233, 1246, 1291, 1295, 1305, 1310, 1312, 1313, 1316, 1317, 1321, 1322, 1326, 1333, 1417, 1418, 1419, 1425, 1426, 1429, 1430, 1432, 1443, 1444, 1445, 1465, 1511, 1519, 1520, 1545, 1546, 1547, 1548, 1549, 1572, 1575, 1596, 1668, 1720, 1721, 1746, 1751, 1761, 1768, 1783, 1830, 1834, 1840, 1850, 1851, 1852, 1859, 1867, 1871, 1874, 1876, 1887, 1888, 1896, 1904, 1906, 1907, 1912, 1924, 1926, 1927, 1935, 1940, 1941, 1944, 1946, 1955, 1959, 1970, 1974, 2010, 2014, 2020, 2031, 2032, 2040, 2042, 2044, 2054, 2056, 2061, 2062, 2067, 2077, 2080, 2081, 2082, 2083, 2084, 2096, 2101, 2105], "older": [14, 2042, 2056, 2064], "modestli": [14, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794], "imag": [14, 22, 741, 742, 743, 862, 863, 984, 1425, 1429, 1430, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1469, 1470, 1471, 1486, 1495, 1530, 1535, 1536, 1558, 1575, 1577, 1578, 1594, 1605, 1606, 1608, 1609, 1623, 1624, 1629, 1640, 1699, 1700, 1848, 2009, 2011, 2032, 2048, 2062, 2065, 2067, 2081, 2082, 2095, 2099, 2100, 2103], "11": [14, 27, 321, 513, 680, 963, 967, 1051, 1104, 1233, 1290, 1326, 1340, 1356, 1427, 1443, 1471, 1520, 1625, 1768, 1769, 1775, 1896, 1940, 1974, 2010, 2014, 2020, 2031, 2042, 2044, 2056, 2057, 2061, 2062, 2077, 2078, 2108], "pars": [14, 27, 46, 49, 930, 2013, 2064, 2072, 2096], "window": [14, 22, 27, 62, 351, 556, 942, 951, 1227, 1228, 1266, 1289, 1432, 1433, 1434, 1470, 1471, 1490, 1491, 1492, 1516, 1517, 1518, 1519, 1520, 1521, 1596, 1624, 1625, 1654, 1655, 1656, 1828, 1829, 1920, 2009, 2011, 2026, 2042, 2056, 2066, 2095], "workaround": [14, 22, 50, 62, 1273, 2008, 2055, 2061, 2067, 2099], "pure": [14, 15, 50, 58, 1272, 2010, 2044], "sigmoidalphablendforwardcuda": 14, "69460": 14, "facebookresearch": 14, "pytorch3d": 14, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 14, "relocat": 14, "link": [14, 15, 34, 62, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1516, 1517, 1518, 1575, 1631, 2031, 2050, 2051, 2077, 2096, 2106], "rdc": 14, "dc": 14, "anymor": [14, 27, 53], "dlto": 14, "dlink": 14, "protent": 14, "perf": [14, 680, 2067, 2102], "lib": [14, 2017, 2057], "nvshmem": 14, "ninja": [14, 2057], "dlink_librari": 14, "dlink_lib": 14, "std": [14, 36, 43, 88, 377, 454, 1120, 1121, 1152, 1153, 1154, 1769, 1817, 1843, 1881, 1886, 1919, 1958, 2011, 2030, 2037, 2042, 2050, 2057, 2062, 2090, 2103], "17": [14, 27, 685, 1266, 1322, 1443, 1520, 1896, 2010, 2061, 2062, 2077, 2090, 2097], "mix": [14, 23, 34, 50, 53, 1051, 1713, 2009, 2039, 2041, 2067, 2077, 2095, 2097, 2099], "use_ninja": 14, "greatli": [14, 62, 2042, 2095], "fallback": [14, 19, 27, 45, 50, 56, 87, 1200, 1283, 1333, 2038, 2042, 2056, 2093, 2099, 2108], "distutil": 14, "max_job": 14, "extra_cflag": 14, "extra_cuda_cflag": 14, "extra_ldflag": 14, "extra_include_path": 14, "build_directori": 14, "with_cuda": [14, 2057], "is_python_modul": 14, "is_standalon": 14, "keep_intermedi": 14, "torch_extens": 14, "temporari": [14, 62, 823, 826, 1714, 2039, 2046, 2090, 2101], "torch_extensions_dir": 14, "subfold": [14, 2108], "o3": 14, "cuh": 14, "Such": [14, 22, 23, 50, 61, 1967, 2077, 2096], "lib64": 14, "cudart": [14, 2057], "fine": [14, 27, 29, 31, 35, 50, 486, 859, 862, 1157, 1285, 1681, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 2008, 2029, 2039, 2042, 2044, 2061, 2064, 2065, 2067, 2077, 2089, 2096, 2101, 2108], "cuda_hom": 14, "safest": 14, "pybind11": [14, 15, 2012], "linker": 14, "workspac": [14, 19, 973], "header": [14, 43, 2056, 2057, 2082, 2084], "automat": [14, 23, 27, 29, 32, 45, 46, 50, 62, 86, 150, 589, 890, 892, 906, 907, 927, 973, 1042, 1051, 1232, 1279, 1285, 1371, 1570, 1681, 1714, 1842, 1871, 1962, 2008, 2009, 2012, 2013, 2023, 2024, 2030, 2031, 2039, 2040, 2042, 2044, 2051, 2053, 2061, 2064, 2065, 2067, 2068, 2072, 2080, 2082, 2083, 2095, 2098, 2099, 2101, 2106, 2108], "construct": [14, 15, 22, 27, 29, 31, 34, 45, 50, 51, 53, 55, 57, 58, 62, 64, 69, 70, 74, 75, 150, 448, 792, 793, 824, 879, 880, 894, 915, 984, 1093, 1109, 1175, 1232, 1269, 1281, 1285, 1286, 1293, 1300, 1340, 1341, 1356, 1371, 1465, 1466, 1523, 1584, 1585, 1586, 1620, 1703, 1713, 1715, 1716, 1754, 1761, 1813, 1817, 1864, 1899, 1906, 1907, 1908, 1909, 1910, 1911, 1925, 1939, 1942, 1973, 2009, 2010, 2017, 2021, 2026, 2042, 2043, 2047, 2051, 2053, 2056, 2059, 2064, 2067, 2072, 2074, 2080, 2082, 2083, 2084, 2090, 2096, 2099], "plain": [14, 1436, 1524, 1533, 1727, 1908, 2044, 2077, 2098], "standalon": [14, 44, 45, 46, 817, 1281, 1285, 2010, 2102], "torch_lib_path": 14, "load_inlin": [14, 2009], "cpp_sourc": 14, "cuda_sourc": 14, "with_pytorch_error_handl": 14, "use_pch": 14, "behav": [14, 15, 27, 50, 61, 62, 313, 321, 493, 515, 517, 842, 1174, 1186, 1197, 1285, 1519, 1520, 1521, 1708, 1709, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 2012, 2013, 2020, 2039, 2044, 2045, 2051, 2055, 2064, 2072, 2077], "exactli": [14, 23, 27, 34, 48, 50, 51, 920, 921, 967, 1018, 1022, 1106, 1152, 1153, 1190, 1266, 1269, 1311, 1466, 1469, 1470, 1471, 1523, 1552, 1555, 1621, 1631, 1713, 1768, 1776, 1867, 2020, 2021, 2030, 2039, 2042, 2043, 2044, 2047, 2048, 2049, 2061, 2064, 2065, 2093, 2096], "filenam": [14, 22, 29, 50, 62, 1158, 1268, 1277, 1280, 2008, 2011, 2024, 2039, 2064, 2079, 2082, 2101, 2110], "typic": [14, 22, 23, 27, 32, 34, 35, 36, 38, 45, 46, 48, 51, 53, 62, 83, 88, 486, 995, 1006, 1149, 1157, 1192, 1198, 1269, 1290, 1293, 1341, 1456, 1482, 1523, 1703, 1713, 1780, 1781, 1793, 1867, 1879, 1906, 1907, 1908, 1910, 1911, 2008, 2009, 2010, 2013, 2019, 2021, 2039, 2041, 2042, 2054, 2055, 2056, 2061, 2063, 2065, 2067, 2072, 2081, 2092, 2094, 2095, 2098, 2106, 2108, 2110, 2112], "inlin": [14, 50, 61, 64, 66, 70, 1048, 1269, 1273, 1285, 2041, 2099], "concaten": [14, 22, 27, 911, 960, 971, 1020, 1105, 1184, 1235, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1466, 1493, 1613, 1621, 1718, 1733, 1917, 1975, 2011, 2014, 2061, 2062, 2077], "furthermor": [14, 43, 57, 1305, 1306, 1333, 1359, 1460, 2030, 2031, 2039, 2055, 2070, 2072], "cuda_runtim": 14, "se": 14, "macro": [14, 36, 2049], "pybind": 14, "_safe_foo": 14, "redirect": [14, 36, 43, 47, 2086], "obscur": 14, "sin_add": 14, "inline_extens": 14, "include_path": [14, 2009], "get_compiler_abi_compatibility_and_vers": [14, 2009], "abi": [14, 15], "alongsid": [14, 1269, 1523, 2044], "shell": 14, "torchvers": 14, "verify_ninja_avail": [14, 2009], "is_ninja_avail": [14, 2009], "embed": [15, 33, 51, 62, 735, 746, 899, 1097, 1427, 1456, 1466, 1482, 1495, 1529, 1573, 1621, 1681, 1794, 1862, 2011, 2041, 2047, 2062, 2066, 2067, 2069, 2072, 2077, 2082, 2103], "simpl": [15, 18, 23, 32, 38, 45, 50, 57, 59, 62, 488, 995, 1062, 1165, 1173, 1174, 1175, 1269, 1273, 1281, 1437, 1438, 1439, 1465, 1496, 1497, 1498, 1523, 1563, 1620, 1879, 1973, 2008, 2010, 2014, 2032, 2041, 2042, 2043, 2044, 2046, 2048, 2050, 2061, 2064, 2072, 2077, 2096, 2097, 2098, 2101], "modif": [15, 32, 53, 62, 81, 221, 780, 901, 902, 906, 1159, 1160, 1269, 1523, 1713, 2039, 2044, 2051, 2064, 2067, 2096, 2099], "submodul": [15, 29, 32, 33, 50, 51, 53, 62, 80, 791, 797, 814, 838, 839, 840, 859, 862, 863, 1173, 1269, 1273, 1275, 1280, 1281, 1459, 1523, 1524, 1525, 1552, 1710, 2009, 2010, 2012, 2013, 2023, 2051, 2056, 2064, 2067, 2072, 2088, 2094, 2107], "preprocess": [15, 50, 79, 496, 1269], "augment": [15, 2014, 2084], "walk": [15, 62, 2017, 2044, 2064, 2073, 2074, 2081, 2108], "interfac": [15, 23, 29, 32, 35, 36, 37, 42, 45, 63, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 745, 746, 756, 761, 762, 763, 764, 765, 794, 1160, 1703, 1866, 1920, 1961, 2013, 2017, 2026, 2027, 2028, 2044, 2050, 2063, 2066, 2070, 2077, 2082, 2103], "opencv": [15, 1629, 1640], "struct": [15, 1174, 1175, 1973, 2023, 2050], "explain": [15, 27, 50, 1794, 1867, 2008, 2009, 2013, 2038, 2042, 2045, 2047, 2053, 2077, 2096, 2099, 2108], "reshap": [15, 27, 34, 498, 499, 513, 544, 617, 692, 971, 1089, 1104, 1105, 1145, 1233, 1290, 1322, 1326, 1335, 1336, 1339, 1419, 1444, 1445, 1469, 1545, 1546, 1547, 1548, 1549, 1575, 1728, 1762, 1768, 1904, 1905, 1912, 1940, 1941, 1946, 1974, 1975, 2011, 2020, 2031, 2032, 2061, 2062, 2069, 2081, 2082, 2103], "classat_1_1_tensor": 15, "tensor_index": 15, "crucial": [15, 88, 2090, 2101, 2102], "cpp_autograd": 15, "workflow": [15, 2008, 2044, 2067, 2068, 2086, 2089, 2095, 2098, 2102, 2104, 2105], "undesir": [15, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1681, 1920, 2044], "overview": [15, 27, 42, 1583, 1713, 2009, 2020, 2029, 2039, 2048, 2051, 2060, 2065, 2067, 2072, 2089, 2091], "cpp_frontend": 15, "library_root": 15, "libtorch": [15, 2090], "linux": [15, 27, 2008], "gcc": 15, "pre": [15, 27, 31, 50, 53, 62, 915, 926, 1182, 1206, 1269, 1523, 1707, 1709, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1746, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 1796, 1802, 2008, 2010, 2013, 2023, 2039, 2041, 2042, 2051, 2059, 2061, 2065, 2083, 2098, 2099, 2104, 2108], "cxx11": 15, "facilit": [16, 28, 34, 58, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1009, 1094, 1720, 1721, 1864, 2008, 2010, 2013, 2055], "earli": [18, 23, 27, 36, 61, 486, 1461, 1462, 1463, 1467, 2009, 2067, 2068, 2087, 2088, 2098], "introduc": [18, 34, 50, 58, 760, 1184, 1194, 1196, 1197, 1208, 1342, 1474, 1493, 1539, 1640, 1850, 2008, 2013, 2040, 2043, 2044, 2052, 2061, 2064, 2065, 2066, 2072, 2077, 2083, 2089, 2096, 2099, 2104, 2106, 2108, 2114], "race": [18, 27, 486, 2039], "enable_cuda_sanit": 18, "torch_cuda_sanit": 18, "concurr": [18, 27, 31, 32, 2041, 2042, 2047, 2053, 2072, 2073], "uniniti": [18, 26, 445, 499, 1107, 1108, 1703, 1715, 1716, 1761, 1961, 2021, 2032, 2062], "overwrit": [18, 22, 27, 29, 62, 1524, 1533, 2013, 2039, 2093], "commandlin": 18, "example_error": 18, "csan": 18, "pointer": [18, 139, 927, 1023, 1540, 2017, 2042, 2043, 2050, 2072, 2074, 2098], "139719969079296": 18, "94646435460352": 18, "_sanit": 18, "364": 18, "_handle_kernel_launch": 18, "stack_trac": [18, 51, 62], "stacksummari": 18, "extract": [18, 62, 836, 965, 966, 1206, 1465, 1469, 1575, 1620, 1699, 2059, 2072, 2088, 2092, 2094, 2096, 2097, 2099, 2100], "10000": [18, 19, 23, 694, 1805, 1852, 2046, 2051, 2077, 2082, 2101], "420": 18, "_handle_memory_alloc": 18, "incorrectli": [18, 53, 1009, 1151, 2100], "id": [18, 19, 22, 27, 29, 31, 32, 36, 43, 44, 45, 46, 53, 62, 774, 824, 936, 1006, 1041, 1563, 1656, 1696, 1713, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 2013, 2050, 2061, 2062, 2064, 2071, 2072, 2073, 2079, 2105, 2108], "faulti": [18, 27], "schema": [18, 27, 29, 51, 85, 2010, 2011, 2013, 2017, 2059, 2061, 2103, 2107], "current_stream": [18, 1008, 1978, 2009, 2042], "wait_stream": [18, 27, 486, 1009, 1011, 1979, 2042], "default_stream": [18, 27, 2009, 2042], "begin": [18, 22, 23, 27, 28, 29, 32, 37, 45, 53, 62, 496, 680, 760, 784, 820, 821, 866, 942, 978, 990, 1006, 1054, 1056, 1066, 1126, 1223, 1229, 1290, 1325, 1337, 1434, 1435, 1436, 1444, 1445, 1446, 1456, 1458, 1464, 1474, 1475, 1478, 1479, 1480, 1481, 1482, 1483, 1489, 1493, 1494, 1509, 1514, 1517, 1518, 1530, 1531, 1539, 1542, 1555, 1561, 1566, 1573, 1612, 1633, 1634, 1713, 1727, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1797, 1799, 1805, 1871, 1874, 1877, 1920, 1946, 1957, 1976, 2013, 2038, 2039, 2042, 2044, 2047, 2048, 2050, 2055, 2061, 2063, 2070, 2078, 2093, 2099, 2108], "suspect": [18, 1794, 2042, 2108], "pytorch_no_cuda_memory_cach": [19, 2042, 2049], "pytorch_cuda_alloc_conf": [19, 1031], "pytorch_nvml_based_cuda_check": [19, 2042], "nvml": [19, 2042], "fork": [19, 22, 43, 1288, 1713, 2013, 2041, 2042, 2046, 2050, 2053, 2057, 2071, 2072, 2074], "torch_cudnn_v8_api_lru_cache_limit": 19, "cudnn": [19, 20, 21, 760, 1279, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1474, 1493, 1539, 1540, 1582, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1681, 1720, 1721, 1867, 2009, 2011, 2042, 2054, 2055, 2102, 2111], "roughli": [19, 22, 1488, 2043, 2106, 2107], "2gib": 19, "200kib": 19, "executionplan": 19, "torch_cudnn_v8_api_dis": 19, "And": [19, 50, 57, 797, 824, 1085, 1086, 1163, 1191, 1269, 1291, 1367, 1372, 1442, 1523, 1962, 1964, 2039, 2044, 2045, 2047, 2057, 2061, 2067, 2088, 2094, 2096, 2100, 2101], "v7": 19, "torch_allow_tf32_cublas_overrid": 19, "set_float32_matmul_precis": [19, 1219], "torch_nccl_use_comm_nonblock": 19, "nccl": [19, 23, 28, 29, 46, 53, 1713, 2047, 2049], "torch_nccl_avoid_record_stream": 19, "stream": [19, 22, 27, 36, 43, 53, 61, 150, 486, 894, 915, 997, 999, 1004, 1006, 1008, 1009, 1012, 1013, 1014, 1022, 1025, 1026, 1040, 1046, 1079, 1082, 1382, 1385, 1386, 1391, 1396, 1398, 1399, 1405, 1407, 1845, 1978, 1980, 1982, 2003, 2005, 2009, 2011, 2013, 2047, 2059, 2072, 2099, 2110], "torch_cudnn_v8_api_debug": 19, "saniti": [19, 29, 2045], "cuda_visible_devic": [19, 27, 1075, 1713, 2042], "comma": [19, 27, 1106, 2013, 2019], "cuda_launch_block": [19, 21, 1493, 1539, 2042], "cublas_workspace_config": [19, 21, 1493, 1539, 1961, 2042, 2055], "4096": [19, 21, 1493, 1539, 1961, 2042, 2061], "16": [19, 21, 27, 33, 50, 321, 617, 738, 739, 740, 741, 742, 743, 772, 1104, 1122, 1149, 1223, 1233, 1269, 1281, 1293, 1299, 1305, 1306, 1310, 1326, 1419, 1431, 1433, 1434, 1442, 1443, 1446, 1449, 1450, 1451, 1452, 1454, 1455, 1460, 1461, 1462, 1463, 1467, 1470, 1471, 1490, 1491, 1492, 1493, 1511, 1516, 1517, 1518, 1520, 1521, 1523, 1530, 1539, 1550, 1567, 1581, 1604, 1606, 1607, 1609, 1613, 1624, 1625, 1771, 1820, 1867, 1896, 1961, 1970, 1974, 2010, 2014, 2037, 2042, 2051, 2054, 2056, 2061, 2062, 2065, 2072, 2077, 2078, 2080, 2082, 2083, 2090, 2096, 2097], "kib": [19, 2042], "cudnn_conv_wscap_dbg": 19, "cublaslt_workspace_s": 19, "cudnn_errata_json_fil": 19, "errata": 19, "config": [19, 23, 53, 62, 792, 793, 794, 795, 860, 862, 973, 2043, 2057, 2070, 2090, 2099, 2101, 2102, 2104, 2106, 2108], "primarili": [19, 34, 51, 61, 815, 816, 817, 823, 1184, 1193, 1419, 2026, 2067, 2083], "hardcod": [19, 2098], "autotun": [19, 973, 2102], "nvidia_tf32_overrid": 19, "float16": [20, 23, 29, 53, 297, 686, 689, 760, 823, 826, 834, 851, 852, 859, 941, 953, 1159, 1251, 1269, 1364, 1374, 1450, 1451, 1452, 1453, 1454, 1455, 1474, 1475, 1493, 1494, 1510, 1523, 1539, 1583, 1640, 1681, 1720, 1721, 1779, 1780, 1781, 1793, 1852, 1864, 2038, 2051, 2067, 2069, 2077, 2079, 2080, 2083, 2084, 2112], "v100": [20, 760, 1474, 1493, 1539, 2042], "packedsequ": [20, 760, 1474, 1493, 1539, 1755, 1756, 1757, 1759], "rnn": [21, 734, 760, 761, 762, 763, 765, 859, 1474, 1475, 1493, 1494, 1540, 1541, 1714, 1731, 1754, 2015, 2046, 2051, 2069, 2082], "enforc": [21, 23, 61, 795, 891, 906, 1269, 1493, 1523, 1539, 2013, 2051, 2081], "colon": [21, 1493, 1539, 2072], "heart": 22, "dataload": [22, 496, 1713, 1798, 1799, 1805, 2042, 2046, 2053, 2057, 2063, 2082], "batch_siz": [22, 32, 34, 57, 59, 893, 906, 907, 1165, 1173, 1175, 1529, 1539, 1754, 1756, 1757, 1759, 1973, 2011, 2045, 2046, 2055, 2061, 2082], "shuffl": [22, 1443, 2009, 2082], "batch_sampl": 22, "num_work": [22, 36, 2055, 2057], "drop_last": 22, "timeout": [22, 27, 36, 45, 2022, 2029, 2072], "worker_init_fn": [22, 2046, 2055], "prefetch_factor": 22, "persistent_work": 22, "__getitem__": [22, 1961], "__len__": [22, 62, 2011], "protocol": [22, 29, 35, 45, 48, 881, 1157, 1160, 1855, 2044, 2057, 2059, 2061, 2072, 2109], "sampl": [22, 29, 34, 50, 54, 59, 62, 88, 153, 154, 258, 286, 377, 454, 481, 608, 779, 943, 995, 1017, 1051, 1064, 1069, 1083, 1084, 1124, 1142, 1165, 1175, 1223, 1266, 1286, 1359, 1409, 1431, 1435, 1436, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1476, 1482, 1485, 1486, 1487, 1488, 1489, 1508, 1510, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1542, 1555, 1556, 1563, 1572, 1594, 1601, 1602, 1612, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1626, 1629, 1631, 1639, 1640, 1641, 1665, 1673, 1713, 1728, 1769, 1798, 1813, 1816, 1830, 1832, 1834, 1836, 1837, 1838, 1879, 1902, 1918, 1919, 1920, 1968, 1969, 1973, 2009, 2017, 2026, 2037, 2038, 2042, 2050, 2051, 2064, 2066, 2067, 2068, 2082, 2108], "idx": [22, 62, 901, 903, 906, 1269, 1275, 1427, 1465, 1523, 1728, 1957, 2011, 2031], "th": [22, 34, 154, 286, 313, 315, 321, 760, 909, 911, 943, 963, 1093, 1098, 1244, 1266, 1291, 1309, 1317, 1323, 1359, 1461, 1462, 1463, 1467, 1474, 1482, 1493, 1539, 1615, 1616, 1617, 1622, 1824, 1920, 1959, 2044, 2057, 2078, 2080, 2110], "iterabledataset": [22, 2050], "__iter__": [22, 2014], "suitabl": [22, 34, 486, 957, 1289, 1794, 1859, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2054, 2068, 2082, 2100], "improb": 22, "fetch": [22, 61, 62, 1182, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1774, 2072], "databas": 22, "remot": [22, 27, 31, 36, 1713, 2065, 2072, 2073], "real": [22, 34, 62, 84, 686, 687, 688, 689, 690, 692, 698, 920, 941, 965, 966, 984, 991, 1051, 1122, 1123, 1125, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1184, 1200, 1259, 1261, 1262, 1265, 1266, 1290, 1299, 1300, 1301, 1305, 1306, 1307, 1308, 1309, 1312, 1313, 1314, 1319, 1322, 1324, 1326, 1327, 1328, 1329, 1333, 1334, 1338, 1339, 1340, 1350, 1356, 1489, 1532, 1535, 1536, 1573, 1727, 1783, 1836, 1920, 1924, 1970, 1971, 1972, 2008, 2009, 2011, 2013, 2021, 2039, 2042, 2059, 2062, 2064, 2067, 2072, 2074, 2081, 2083, 2084, 2094, 2095, 2096, 2098, 2101, 2103, 2109], "replica": [22, 23, 27, 31, 43, 1459, 1713, 2043], "duplic": [22, 43, 315, 319, 471, 544, 942, 951, 972, 1184, 1227, 1228, 1269, 1523, 1957, 1958, 2061, 2077], "yield": [22, 23, 50, 53, 62, 1094, 1096, 1269, 1316, 1317, 1523, 1976, 2013, 2014, 2020, 2065, 2067, 2078, 2099], "stochast": [22, 34, 1470, 1471, 1624, 1625, 1777, 1779, 1780, 1782, 1793, 1797, 1798, 2051, 2063], "decent": 22, "randomli": [22, 745, 746, 756, 764, 921, 1431, 1460, 1461, 1462, 1463, 1467, 1542, 1614, 1615, 1616, 1617, 1622, 1741, 2032, 2050, 2051], "permut": [22, 50, 64, 73, 1106, 1316, 1317, 1336, 1359, 1361, 1720, 1721, 1838, 2009, 2011, 2031, 2062, 2069, 2081, 2083, 2103], "mini": [22, 779, 785, 1437, 1438, 1439, 1465, 1466, 1477, 1482, 1485, 1486, 1487, 1495, 1515, 1526, 1528, 1538, 1563, 1572, 1620, 1621, 1640, 1700, 1712, 2065], "neither": [22, 27, 795, 900, 901, 904, 906, 1089, 1149, 1529, 1571, 1768, 1946, 2044, 2054, 2072], "nor": [22, 27, 36, 53, 795, 901, 904, 906, 1184, 1305, 1306, 1333, 1529, 1571, 1713, 1768, 1822, 1924, 2044, 2061, 2093, 2098], "notion": [22, 920, 1437, 1438, 1439, 1485, 1486, 1487, 1563, 2096, 2099], "collat": 22, "minibatch": [22, 768, 769, 772, 773, 774, 1359, 1427, 1435, 1436, 1456, 1458, 1482, 1488, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1576, 1596, 1597, 1598, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1641, 1654, 1655, 1656, 1665, 1673, 2065], "loader": [22, 2063], "essenti": [22, 27, 36, 62, 1359, 2031, 2042, 2057, 2077, 2090, 2093], "dummi": [22, 31, 2017, 2039, 2044, 2059, 2108, 2109], "infinit": [22, 1261, 1342, 1435, 1442, 1613, 1817, 2044, 2054, 2072, 2098], "drop": [22, 57, 59, 62, 1051, 1274, 1328, 1333, 1431, 1763, 1867, 1920, 2010, 2031, 2053, 2110], "dataset_it": 22, "pad": [22, 23, 50, 712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 730, 731, 735, 738, 739, 740, 741, 742, 743, 768, 769, 772, 773, 774, 779, 782, 783, 785, 973, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1266, 1432, 1433, 1434, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1465, 1466, 1469, 1499, 1500, 1501, 1502, 1503, 1504, 1516, 1517, 1518, 1519, 1520, 1521, 1526, 1529, 1545, 1546, 1547, 1548, 1549, 1550, 1570, 1571, 1575, 1579, 1580, 1581, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1620, 1621, 1623, 1629, 1640, 1654, 1655, 1656, 1657, 1658, 1659, 1699, 1700, 1755, 1757, 1758, 1760, 1828, 1829, 1920, 2009, 2011, 2032, 2046, 2056, 2061, 2062, 2067, 2082, 2095, 2103], "length": [22, 23, 27, 29, 33, 34, 260, 313, 315, 321, 351, 433, 434, 583, 584, 585, 735, 760, 814, 894, 915, 937, 972, 1022, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1160, 1175, 1244, 1266, 1285, 1289, 1418, 1419, 1437, 1442, 1450, 1459, 1466, 1469, 1474, 1490, 1493, 1529, 1539, 1567, 1575, 1584, 1604, 1605, 1606, 1613, 1621, 1640, 1681, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1830, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1904, 1906, 1907, 1908, 1910, 1911, 1920, 1946, 1973, 2011, 2013, 2020, 2031, 2032, 2040, 2046, 2076, 2077, 2084, 2095, 2096, 2099, 2103, 2108], "certain": [22, 23, 27, 32, 42, 43, 50, 58, 61, 62, 84, 686, 689, 735, 916, 941, 953, 1030, 1094, 1182, 1266, 1269, 1277, 1341, 1364, 1374, 1450, 1451, 1452, 1453, 1454, 1455, 1475, 1494, 1510, 1523, 1529, 1575, 1630, 1641, 1643, 1767, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1986, 2013, 2017, 2020, 2031, 2039, 2040, 2042, 2044, 2050, 2051, 2054, 2056, 2061, 2065, 2066, 2072, 2073, 2077, 2098, 2099, 2102, 2108], "cheaper": [22, 61], "bulk": [22, 2098], "arrai": [22, 27, 448, 760, 820, 821, 880, 881, 944, 962, 991, 995, 1106, 1150, 1159, 1160, 1168, 1169, 1341, 1371, 1469, 1474, 1475, 1493, 1494, 1623, 1845, 1852, 1871, 1906, 1907, 1908, 1910, 1911, 1936, 1939, 1946, 1954, 1967, 2010, 2014, 2042, 2051, 2056, 2077, 2079, 2083, 2084, 2099], "untouch": 22, "slightli": [22, 27, 34, 50, 53, 1768, 1813, 1925, 2008, 2042, 2044, 2047, 2048, 2054, 2064, 2099], "default_col": 22, "channel": [22, 56, 472, 473, 474, 779, 785, 808, 822, 825, 833, 846, 854, 1120, 1437, 1438, 1439, 1443, 1450, 1451, 1452, 1453, 1454, 1455, 1460, 1461, 1462, 1463, 1467, 1469, 1477, 1485, 1486, 1487, 1495, 1499, 1500, 1501, 1502, 1503, 1504, 1511, 1531, 1558, 1563, 1575, 1576, 1577, 1578, 1599, 1615, 1616, 1617, 1622, 1639, 1640, 1647, 1674, 1700, 1720, 1721, 1729, 1739, 1740, 1741, 1748, 1749, 1765, 1825, 2031, 2033, 2037, 2039, 2067, 2068, 2070, 2082], "class_index": 22, "namedtupl": [22, 29, 50, 51, 62, 895, 900, 1085, 1086, 1213, 1269, 1281, 1291, 1311, 1361, 1367, 1370, 1372, 1375, 1415, 1427, 1523, 1813, 1823, 1896, 1924, 1943, 1948, 2010, 2012, 2013, 2067], "situat": [22, 34, 48, 62, 85, 87, 486, 973, 991, 1733, 2021, 2029, 2044, 2045, 2053, 2054, 2064, 2067, 2074, 2095, 2098, 2099, 2109], "gil": [22, 27, 31, 2039, 2042, 2072], "integ": [22, 26, 27, 34, 45, 50, 51, 88, 289, 445, 447, 449, 499, 545, 560, 566, 685, 686, 687, 688, 689, 690, 766, 767, 785, 787, 866, 893, 906, 907, 941, 942, 951, 962, 990, 1009, 1011, 1027, 1033, 1034, 1062, 1101, 1104, 1106, 1107, 1108, 1109, 1149, 1150, 1151, 1152, 1153, 1154, 1160, 1161, 1165, 1166, 1167, 1168, 1169, 1184, 1194, 1201, 1202, 1211, 1227, 1228, 1231, 1232, 1233, 1280, 1283, 1292, 1293, 1300, 1311, 1313, 1323, 1342, 1400, 1408, 1427, 1442, 1450, 1451, 1452, 1495, 1538, 1588, 1589, 1590, 1591, 1592, 1593, 1702, 1712, 1754, 1769, 1772, 1801, 1804, 1808, 1813, 1825, 1826, 1832, 1834, 1835, 1836, 1838, 1843, 1852, 1864, 1912, 1921, 1925, 1940, 1941, 1954, 1959, 1974, 1979, 1983, 1987, 1988, 2006, 2012, 2013, 2014, 2030, 2045, 2048, 2065, 2067, 2068, 2070, 2077, 2078, 2080, 2083, 2084, 2086, 2095, 2096, 2112], "descriptor": [22, 27, 1572, 1573, 2014, 2061], "parent": [22, 38, 43, 48, 53, 680, 788, 789, 817, 1523, 2025, 2029, 2057, 2064, 2074, 2082, 2096], "simplest": [22, 27, 29, 36, 62, 859, 1432, 1433, 1434, 1450, 1451, 1452, 1516, 1517, 1518, 1731, 2043, 2044, 2051, 2059, 2067, 2074, 2077, 2099], "refcount": [22, 2029, 2053], "panda": 22, "pyarrow": 22, "13246": 22, "enumer": [22, 32, 34, 50, 62, 1269, 1523, 1525, 1534, 1798, 2011, 2012, 2038, 2042, 2057, 2082, 2107], "get_worker_info": [22, 2072], "seed": [22, 88, 1043, 1052, 1053, 1074, 1245, 1362, 1384, 1813, 1830, 1925, 1964, 1993, 1996, 1997, 1999, 2009, 2011, 2046, 2053, 2055, 2062, 2071], "naiv": [22, 2065, 2095, 2099], "shut": [22, 2072], "garbag": [22, 2074], "subtleti": [22, 64, 1459, 2044, 2046], "multiprocess": [22, 23, 27, 28, 30, 36, 38, 46, 47, 48, 1459, 1713, 2009, 2031, 2043, 2073, 2079], "unix": [22, 43, 2029], "child": [22, 27, 36, 38, 53, 791, 1269, 1523, 1740, 2029, 2051, 2057, 2074], "address": [22, 27, 45, 49, 58, 216, 920, 921, 1014, 2020, 2029, 2042, 2044, 2063, 2072, 2073, 2079, 2093, 2096, 2110], "maco": [22, 27, 2029, 2052], "spawn": [22, 23, 28, 36, 37, 43, 48, 1272, 1713, 2009, 2038, 2043, 2053, 2057, 2073], "__name__": [22, 23, 27, 37, 38, 46, 2043, 2044, 2053, 2057, 2064, 2073], "__main__": [22, 23, 27, 37, 38, 46, 2040, 2043, 2053, 2057, 2073], "bytecod": [22, 50, 680, 2019, 2058, 2059, 2064, 2094, 2096, 2097, 2099, 2108], "base_se": 22, "worker_id": [22, 48, 2055], "therebi": [22, 34, 2063, 2067], "mandatorili": 22, "faq": [22, 1459, 1757, 2009], "initial_se": [22, 88, 2009, 2011, 2055, 2062, 2071], "host": [22, 27, 32, 36, 38, 44, 45, 46, 48, 196, 209, 580, 603, 878, 1269, 1523, 1713, 1733, 1767, 2042, 2065, 2072, 2073, 2079, 2093, 2098, 2110], "recogn": [22, 81, 2013, 2072, 2077, 2098], "simplecustombatch": 22, "transposed_data": 22, "zip": [22, 29, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 2008, 2011, 2012, 2024, 2042, 2050, 2077], "tgt": [22, 1567, 1568, 1569], "collate_wrapp": 22, "float32": [22, 23, 27, 50, 53, 267, 580, 617, 819, 820, 821, 822, 825, 826, 881, 984, 1120, 1121, 1159, 1216, 1219, 1251, 1423, 1436, 1443, 1576, 1577, 1578, 1596, 1779, 1780, 1781, 1793, 1817, 1822, 1830, 1834, 1849, 1864, 1865, 1867, 1909, 1971, 2032, 2038, 2042, 2054, 2059, 2061, 2069, 2077, 2078, 2079, 2080, 2083, 2084, 2096, 2097, 2099, 2108, 2112], "tensordataset": 22, "batch_ndx": 22, "is_pin": [22, 1754, 2011, 2030, 2062, 2079], "multiprocessing_context": 22, "pin_memory_devic": 22, "reshuffl": 22, "draw": [22, 34, 154, 286, 943, 1069, 1409, 1830, 2082, 2106], "mutual": [22, 27, 36, 735, 2084], "subprocess": [22, 27, 30, 43, 45, 48, 2046, 2053], "incomplet": [22, 909, 2015, 2078], "divis": [22, 583, 617, 687, 772, 773, 774, 967, 1101, 1151, 1154, 1280, 1313, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1477, 1489, 1514, 1532, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1666, 1843, 1912, 1940, 2013, 2038, 2042], "basecontext": 22, "randomsampl": 22, "prefetch": [22, 53], "unpickl": [22, 27, 1341, 2064], "practic": [22, 27, 33, 34, 51, 53, 486, 2009, 2010, 2020, 2029, 2031, 2039, 2044, 2047, 2048, 2051, 2056, 2064, 2072, 2079, 2089, 2096, 2098, 2099], "proper": [22, 36, 61, 62, 1097, 1862, 2012, 2039, 2042, 2044, 2053, 2057, 2079], "guess": [22, 1184], "trust": [22, 27, 1341, 2008, 2064], "inaccur": [22, 23, 1640], "kwd": 22, "__getitems__": 22, "speedup": [22, 23, 1529, 1571, 2089, 2093, 2105], "myiterabledataset": 22, "worker_info": 22, "iter_start": 22, "iter_end": 22, "per_work": 22, "ceil": [22, 177, 633, 634, 768, 769, 1432, 1433, 1434, 1490, 1491, 1492, 1516, 1517, 1518, 1596, 1597, 1598, 1654, 1655, 1656, 1828, 1829, 1852, 2011, 2030, 2042, 2062, 2077, 2103], "mult": 22, "12": [22, 23, 27, 53, 321, 517, 617, 686, 741, 742, 743, 745, 746, 936, 963, 967, 1104, 1122, 1233, 1273, 1289, 1306, 1328, 1427, 1443, 1454, 1469, 1470, 1471, 1520, 1535, 1536, 1558, 1567, 1575, 1583, 1624, 1625, 1666, 1671, 1672, 1728, 1762, 1812, 1823, 1871, 1886, 1896, 1940, 1956, 1959, 1974, 2008, 2010, 2011, 2014, 2020, 2042, 2044, 2047, 2052, 2056, 2061, 2062, 2077, 2084, 2096, 2097, 2105, 2106], "overall_start": 22, "overall_end": 22, "stackdataset": 22, "assembl": [22, 2097], "imagedataset": 22, "textdataset": 22, "tuple_stack": 22, "dict_stack": 22, "concatdataset": 22, "chaindataset": 22, "chain": [22, 23, 34, 61, 62, 150, 894, 963, 1325, 1466, 1552, 1795, 1808, 2013, 2039, 2042, 2044, 2048, 2051, 2063, 2096, 2107], "fly": [22, 1048, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 2039], "whole": [22, 27, 29, 1175, 1269, 1523, 1552, 1563, 1713, 1973, 2039, 2043, 2053, 2054, 2064, 2096, 2098, 2100, 2104, 2105], "_util": [22, 980, 2106], "collate_fn_map": 22, "registri": [22, 2009, 2056, 2059, 2061], "default_collate_fn_map": 22, "insert": [22, 27, 34, 53, 61, 62, 747, 792, 793, 862, 863, 940, 1524, 1525, 1533, 1713, 1859, 1862, 1871, 1892, 1917, 1960, 2010, 2023, 2042, 2059, 2062, 2067, 2106, 2107], "collate_tensor_fn": 22, "custom_col": 22, "collate_map": 22, "outer": [22, 27, 691, 909, 1106, 1165, 1169, 1174, 1189, 1214, 2011, 2013, 2062], "unchang": [22, 499, 513, 515, 735, 814, 1145, 1269, 1523, 1567, 1844, 1915, 2038, 2054, 2067], "byte": [22, 27, 29, 34, 45, 242, 435, 558, 881, 1013, 1054, 1056, 1058, 1060, 1158, 1160, 1268, 1341, 1378, 1380, 1774, 1783, 1855, 2012, 2013, 2014, 2030, 2047, 2056, 2064, 2077, 2079, 2110], "k": [22, 27, 29, 34, 46, 62, 286, 354, 506, 513, 515, 517, 590, 617, 760, 940, 966, 1093, 1106, 1163, 1178, 1184, 1210, 1232, 1291, 1299, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1314, 1315, 1316, 1319, 1321, 1328, 1330, 1332, 1333, 1342, 1360, 1364, 1432, 1434, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1470, 1471, 1474, 1475, 1493, 1494, 1508, 1510, 1511, 1516, 1518, 1529, 1530, 1539, 1541, 1583, 1612, 1624, 1625, 1647, 1665, 1727, 1811, 1813, 1823, 1851, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1910, 1911, 1920, 1943, 1948, 2011, 2012, 2037, 2042, 2044, 2057, 2077, 2078, 2080, 2099, 2102, 2103, 2108], "v_i": [22, 1309], "v_1": 22, "v_2": 22, "v1_i": 22, "v2_i": 22, "v1_1": 22, "v1_2": 22, "v2_1": 22, "v2_2": 22, "elem": [22, 2011], "customtyp": 22, "collate_customtype_fn": 22, "default_convert": 22, "np": [22, 961, 1101, 1106, 1146, 1147, 1148, 1670, 1817, 2017, 2045, 2055, 2061, 2082, 2083, 2084, 2099], "fraction": [22, 34, 1076, 1149, 1155, 1389, 1453, 1454, 1455, 1470, 1471, 1529, 1571, 1624, 1625, 1738, 1739, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1824, 2037, 2099], "workerinfo": [22, 2072], "random_split": 22, "floor": [22, 271, 647, 648, 768, 769, 1101, 1151, 1280, 1432, 1433, 1434, 1490, 1491, 1492, 1516, 1517, 1518, 1596, 1597, 1598, 1654, 1655, 1656, 1828, 1829, 1843, 1852, 1920, 2011, 2013, 2030, 2053, 2056, 2062, 2077, 2103], "frac": [22, 34, 279, 377, 649, 650, 687, 760, 772, 773, 774, 866, 942, 951, 991, 995, 1101, 1151, 1223, 1227, 1228, 1289, 1301, 1305, 1306, 1309, 1321, 1333, 1340, 1356, 1427, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1443, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1460, 1469, 1474, 1475, 1476, 1477, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1508, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1526, 1527, 1528, 1530, 1538, 1539, 1541, 1542, 1554, 1556, 1557, 1559, 1560, 1562, 1563, 1564, 1575, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1649, 1666, 1668, 1670, 1681, 1683, 1687, 1689, 1691, 1692, 1712, 1778, 1779, 1782, 1784, 1790, 1797, 1798, 1827, 1836, 1839, 1842, 1854, 1874, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1903, 1918, 1919, 1920, 1924, 1946, 1968, 1969, 2011, 2030, 2037, 2039, 2048, 2062, 2077, 2078], "remaind": [22, 490, 1154, 1223, 2011, 2062, 2097, 2103], "robin": [22, 27], "generator1": 22, "manual_se": [22, 58, 88, 1872, 2009, 2011, 2030, 2051, 2053, 2055, 2061, 2062, 2071], "42": [22, 824, 951, 1408, 1878, 2042, 2051, 2097], "generator2": 22, "30": [22, 27, 34, 45, 445, 617, 720, 728, 729, 756, 764, 1223, 1292, 1440, 1442, 1449, 1510, 1575, 1581, 1604, 1613, 1703, 1801, 1803, 1809, 1826, 1936, 2021, 2044, 2047, 2061, 2063, 2072, 2076, 2096, 2097], "data_sourc": 22, "accedingsequencelengthsampl": 22, "argsort": [22, 1936, 2011, 2045, 2062], "tolist": [22, 352, 2013, 2062, 2079], "accedingsequencelengthbatchsampl": 22, "sequentialsampl": 22, "num_sampl": [22, 421, 1409, 2011], "drawn": [22, 173, 258, 286, 1409, 1769, 1830, 1834, 1835, 2037, 2084, 2086], "subsetrandomsampl": 22, "weightedrandomsampl": 22, "probabl": [22, 33, 53, 154, 258, 760, 943, 1190, 1231, 1347, 1409, 1427, 1431, 1435, 1442, 1458, 1460, 1461, 1462, 1463, 1467, 1474, 1476, 1493, 1529, 1530, 1539, 1601, 1612, 1613, 1614, 1615, 1616, 1617, 1622, 1631, 1641, 1665, 1681, 1823, 2029, 2044, 2057, 2061, 2078, 2082, 2095, 2098, 2099, 2100, 2104], "row": [22, 23, 27, 33, 34, 208, 313, 315, 321, 585, 588, 693, 699, 878, 909, 911, 961, 991, 995, 1089, 1119, 1147, 1148, 1169, 1175, 1232, 1291, 1317, 1325, 1328, 1333, 1357, 1359, 1367, 1369, 1370, 1372, 1375, 1409, 1415, 1416, 1417, 1620, 1621, 1670, 1727, 1767, 1821, 1824, 1844, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1923, 1943, 1946, 1950, 1952, 1967, 1973, 1975, 2011, 2048, 2077, 2082], "05": [22, 31, 62, 113, 344, 694, 712, 713, 714, 715, 716, 717, 723, 724, 736, 737, 749, 751, 752, 753, 754, 920, 921, 1120, 1258, 1285, 1286, 1356, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1563, 1567, 1569, 1571, 1599, 1630, 1639, 1643, 1713, 1796, 1802, 1803, 1809, 1880, 1881, 1886, 2010, 2011, 2063, 2073, 2084], "batchsampl": 22, "distributedsampl": [22, 1713], "num_replica": 22, "world_siz": [22, 23, 27, 28, 31, 32, 36, 45, 46, 49, 53, 1713, 2043, 2065, 2072, 2073], "evenli": [22, 33, 583, 584, 585, 695, 696, 1104, 1233, 1340, 1356, 1974], "set_epoch": 22, "is_distribut": [22, 2011, 2062], "start_epoch": 22, "n_epoch": 22, "vanilla": [23, 51, 2020], "allreduc": [23, 27, 1713, 2042, 2043, 2062], "besid": [23, 27, 929, 2042, 2043, 2059, 2082, 2094], "register_comm_hook": [23, 31, 53, 1713], "mainli": [23, 34, 827, 1442, 1613, 2087], "bucket": [23, 31, 1197, 1427, 1713, 2011, 2043, 2062, 2099, 2108], "gradbucket": [23, 1713], "decompos": [23, 50, 62, 1156, 1164, 1314, 2039, 2044, 2061, 2103], "get_per_parameter_tensor": 23, "wise": [23, 27, 33, 34, 687, 688, 698, 758, 770, 771, 780, 784, 885, 989, 1106, 1111, 1152, 1153, 1211, 1212, 1226, 1235, 1292, 1294, 1351, 1352, 1353, 1354, 1358, 1368, 1371, 1373, 1420, 1441, 1455, 1462, 1464, 1478, 1479, 1480, 1481, 1483, 1509, 1512, 1522, 1531, 1542, 1543, 1544, 1551, 1553, 1554, 1555, 1560, 1561, 1562, 1564, 1565, 1603, 1618, 1627, 1628, 1632, 1633, 1634, 1635, 1638, 1642, 1644, 1649, 1660, 1661, 1674, 1675, 1676, 1682, 1683, 1684, 1685, 1689, 1691, 1692, 1693, 1904, 1975, 2041, 2044, 2077, 2078, 2081, 2105], "_distributed_c10d": [23, 27], "1d": [23, 34, 53, 702, 705, 738, 741, 772, 782, 972, 991, 995, 1089, 1103, 1231, 1232, 1246, 1266, 1325, 1326, 1371, 1416, 1424, 1428, 1432, 1442, 1450, 1453, 1458, 1461, 1462, 1466, 1490, 1515, 1516, 1528, 1530, 1576, 1588, 1591, 1594, 1596, 1604, 1607, 1615, 1621, 1650, 1654, 1824, 1825, 1828, 1920, 1936, 1946, 1970, 2047], "is_last": 23, "set_buff": 23, "stateless": [23, 58, 2033, 2051], "ddp_comm_hook": [23, 31], "default_hook": 23, "allreduce_hook": 23, "process_group": [23, 28, 29, 31, 53, 1563, 1713], "aggreg": [23, 27, 29, 38, 53, 1466, 1621, 1713, 1744, 2026, 2065, 2099, 2108], "henc": [23, 29, 31, 34, 36, 44, 45, 49, 53, 61, 286, 943, 1160, 1519, 1520, 1521, 1576, 1720, 1721, 1909, 2032, 2039, 2042, 2043, 2047, 2072, 2074, 2093], "unaffect": [23, 499, 500, 1476], "ddp_model": [23, 27, 29, 1713, 2043], "fp16_compress_hook": 23, "compress": [23, 53, 208, 587, 588, 1128, 1129, 1138, 1139, 1713, 1906, 1907, 1908, 1910, 1911, 1945, 2009, 2105], "decompress": [23, 2008, 2024], "bf16_compress_hook": 23, "brain": [23, 2080, 2083], "wrapper": [23, 27, 32, 34, 47, 53, 61, 62, 64, 624, 757, 790, 824, 1003, 1006, 1008, 1009, 1011, 1079, 1152, 1153, 1173, 1269, 1382, 1405, 1459, 1978, 1979, 2003, 2010, 2012, 2013, 2026, 2029, 2042, 2043, 2061, 2065, 2093], "fp16_compress_wrapp": 23, "powersgdst": 23, "matrix_approximation_rank": 23, "start_powersgd_it": 23, "powersgd_hook": 23, "bf16_compress_wrapp": 23, "wikipedia": [23, 1667, 2039, 2048, 2112], "bfloat16_float": 23, "point_format": 23, "vogel": 23, "et": [23, 34, 53, 1442, 1535, 1536, 1572, 1573, 1793, 1887, 1925, 2037], "al": [23, 34, 53, 1442, 1535, 1536, 1572, 1573, 1793, 1887, 1925, 2037], "neurip": [23, 34], "2019": [23, 34, 1062], "bandwidth": [23, 27, 32, 44, 46, 2042, 2067, 2072, 2101, 2102], "hyperparamet": [23, 53, 62, 2082], "1000": [23, 1121, 1126, 1152, 1153, 1427, 1465, 1573, 1825, 1852, 1871, 1939, 2039, 2056, 2061, 2082], "min_compression_r": 23, "use_error_feedback": 23, "warm_start": 23, "orthogonalization_epsilon": 23, "random_se": 23, "compression_stats_logging_frequ": 23, "batch_tensors_with_same_shap": 23, "tune": [23, 27, 31, 1062, 1306, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 2039, 2042, 2052, 2067, 2108], "stronger": [23, 50, 51, 64], "exponenti": [23, 258, 1116, 1321, 1347, 1348, 1349, 1357, 1441, 1464, 1618, 2009, 2013, 2062, 2063, 2078, 2086], "grid": [23, 1126, 1371, 1594, 1629, 2011, 2042, 2082, 2103], "satisfactori": 23, "nlp": [23, 1485, 1486, 1487, 1495, 2099], "appendix": [23, 2009], "hybrid": [23, 53, 218, 543, 583, 584, 585, 587, 588, 1234], "scheme": [23, 32, 43, 45, 478, 802, 819, 820, 821, 822, 825, 827, 2051], "sensit": [23, 1483, 1555, 2061, 2064, 2073, 2098], "suboptim": [23, 2101], "trajectori": 23, "irrecover": 23, "warm": [23, 31, 1051, 1797, 1798, 2042, 2066, 2093, 2099, 2106], "num_row": 23, "num_col": 23, "1e": [23, 29, 34, 62, 113, 344, 694, 712, 713, 714, 715, 716, 717, 723, 724, 736, 737, 749, 751, 752, 753, 754, 755, 920, 921, 964, 965, 966, 1258, 1285, 1286, 1336, 1437, 1438, 1439, 1457, 1476, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1509, 1532, 1537, 1563, 1567, 1569, 1571, 1572, 1599, 1611, 1626, 1630, 1631, 1639, 1643, 1666, 1669, 1673, 1697, 1728, 1762, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1807, 1815, 1868, 2010, 2011, 2044, 2051, 2061, 2063, 2078, 2084], "orthogon": [23, 1306, 1309, 1328, 1333, 1342, 1811, 1823, 2037, 2039, 2051, 2077], "div": [23, 236, 1102, 1151, 1154, 1427, 1535, 1536, 1843, 1953, 2011, 2017, 2030, 2062, 2077, 2080, 2103, 2107], "epsilon": [23, 62, 819, 820, 821, 822, 825, 866, 1324, 1327, 1437, 1438, 1439, 1457, 1477, 1485, 1486, 1487, 1495, 1532, 1538, 1563, 1611, 1666, 1712, 1723, 1725, 1728, 1762, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1827, 2011, 2078], "bucket_cap_mb": [23, 1713, 2043], "footprint": [23, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 2059, 2077, 2105], "bottleneck": [23, 2009, 2051, 2101], "memor": 23, "compens": 23, "apex": 23, "uncompress": [23, 2056, 2077], "pq": 23, "mq": [23, 2067, 2088], "tp": [23, 27, 33], "awai": [23, 62, 976, 1629, 2009, 2031, 2039, 2045, 2095], "comm": [23, 27, 680, 2043], "handler": [23, 27, 38, 39, 47, 1740, 2026, 2044, 2050, 2064, 2109], "batched_powersgd_hook": 23, "destroi": [23, 27, 45, 1184, 1459, 2039, 2066, 2072], "squar": [23, 34, 551, 739, 740, 741, 742, 779, 785, 794, 995, 1093, 1095, 1266, 1301, 1303, 1305, 1306, 1307, 1310, 1311, 1315, 1317, 1319, 1321, 1323, 1327, 1329, 1330, 1332, 1333, 1337, 1350, 1359, 1425, 1429, 1433, 1434, 1451, 1452, 1454, 1455, 1470, 1471, 1483, 1491, 1492, 1514, 1517, 1518, 1521, 1538, 1555, 1567, 1584, 1596, 1605, 1608, 1624, 1625, 1629, 1638, 1640, 1661, 1678, 1685, 1700, 1712, 1727, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1854, 1913, 1948, 1967, 2011, 2062, 2077], "truncat": [23, 1151, 1867, 1954, 2032, 2037, 2046, 2054], "impli": [23, 45, 53, 258, 1188, 2029, 2039, 2047, 2061, 2065, 2070, 2072, 2098], "debugging_hook": 23, "noop_hook": 23, "headroom": 23, "desynchron": [23, 27], "trainer": [23, 27, 29, 36, 38, 43, 46, 48, 1713, 2072], "restart": [23, 36, 44, 46, 49, 1797, 1798, 2029, 2082, 2097], "__setstate__": 23, "__getstate__": 23, "reload": [23, 31, 53, 2008], "sy": [23, 37, 46, 49, 2008, 2042, 2056, 2064], "tempfil": 23, "mp": [23, 27, 28, 48, 1382, 1713, 2009, 2017, 2043, 2044, 2053, 2067, 2073, 2079, 2080, 2088], "simplemodel": 23, "24": [23, 27, 34, 946, 1328, 1511, 1594, 1761, 1823, 1867, 1941, 2010, 2037, 2041, 2078, 2096, 2097], "fc2": [23, 1703, 2059, 2065, 2090], "master_addr": [23, 27, 36, 46, 49, 2043, 2065, 2072, 2073], "localhost": [23, 27, 45, 46, 2043, 2065, 2072, 2073], "master_port": [23, 27, 36, 46, 49, 2043, 2065, 2072, 2073], "12355": 23, "init_process_group": [23, 27, 28, 31, 32, 36, 46, 49, 1713, 2042, 2043, 2072], "cleanup": [23, 1184, 2079], "destroy_process_group": [23, 27], "run_demo": 23, "demo_fn": 23, "nproc": [23, 27, 43, 44, 46, 2029, 2043, 2073], "demo_seri": 23, "gettempdir": 23, "device_id": [23, 27, 28, 31, 46, 53, 1341, 1459, 1563, 1696, 1713, 2043], "powersgd_st": 23, "lr": [23, 28, 29, 31, 53, 488, 1703, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 2042, 2043, 2051, 2053, 2063, 2073, 2082], "001": [23, 920, 921, 1279, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1806, 2043, 2061], "state_dict": [23, 29, 31, 50, 51, 53, 60, 836, 837, 1269, 1523, 1703, 1747, 1765, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 2008, 2024, 2025, 2043, 2051, 2053, 2056, 2059, 2061, 2067, 2087], "comm_hook": 23, "comm_hook_st": 23, "barrier": [23, 36, 45, 2062], "map_loc": [23, 1273, 1277, 1341, 1713, 2008, 2021, 2024, 2064], "new_ddp_model": 23, "load_state_dict": [23, 29, 31, 53, 60, 415, 1269, 1341, 1523, 1703, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 2008, 2009, 2051, 2056, 2067], "n_gpu": 23, "device_count": [23, 1964, 2009], "got": [23, 27, 892, 906, 907, 929, 2044, 2084], "thank": [23, 34, 2044, 2065], "author": [23, 45, 46, 53, 1175, 1790, 1830, 1973, 2038, 2090, 2097, 2099, 2101, 2104, 2105, 2106, 2108], "thij": 23, "par": 23, "torch_show_cpp_stacktrac": [24, 27], "torch_cpp_log_level": [24, 27], "c10": [24, 45, 2050, 2090, 2095], "glog": 24, "logger": [24, 27, 36, 2087, 2088], "info": [24, 27, 39, 43, 680, 893, 906, 907, 1008, 1009, 1011, 1184, 1300, 1311, 1313, 1314, 1318, 1331, 1359, 1385, 1386, 1774, 2009, 2011, 2017, 2019, 2043, 2044, 2045, 2061, 2064, 2095, 2097, 2098, 2108], "fatal": [24, 50, 2029, 2053], "torch_log": [24, 79, 81, 680, 973, 2019, 2043, 2095, 2096, 2097, 2099, 2108], "_log": [24, 2009, 2013, 2108, 2111], "home": [25, 2042], "fill_uninitialized_memori": [26, 499, 1107, 1108, 1109, 1961, 2009, 2055], "fill": [26, 27, 32, 154, 173, 258, 259, 260, 286, 317, 321, 377, 400, 445, 446, 447, 449, 454, 481, 513, 608, 623, 944, 1094, 1107, 1108, 1109, 1161, 1162, 1300, 1311, 1313, 1466, 1567, 1621, 1668, 1772, 1773, 1832, 1833, 1834, 1835, 1836, 1837, 1924, 1961, 2006, 2007, 2011, 2021, 2031, 2032, 2037, 2042, 2044, 2056, 2062, 2077, 2084, 2098, 2103], "detriment": [26, 2055], "resize_": [26, 500, 1164, 1291, 1961, 2010, 2011, 2012, 2030, 2055, 2069, 2079, 2103], "empty_strid": [26, 2011, 2015, 2062, 2095, 2103], "empty_permut": [26, 2011, 2062, 2103], "empty_lik": [26, 29, 2011, 2015, 2017, 2021, 2030, 2032, 2062, 2077], "brief": [27, 1713, 2029, 2072], "introduct": [27, 34, 1040, 1713, 2009, 2010, 2014, 2030, 2040, 2051, 2061, 2072, 2077, 2082], "mpi": [27, 1713], "gloo": [27, 46, 1713, 2043, 2049, 2072], "recv": [27, 1713, 2062, 2073], "broadcast": [27, 29, 31, 33, 34, 53, 58, 97, 196, 398, 400, 401, 402, 513, 515, 517, 566, 685, 686, 687, 688, 689, 690, 691, 697, 735, 885, 941, 946, 949, 953, 954, 955, 956, 990, 1019, 1048, 1100, 1101, 1106, 1111, 1151, 1152, 1153, 1154, 1210, 1212, 1226, 1236, 1294, 1295, 1302, 1315, 1319, 1324, 1325, 1327, 1330, 1338, 1358, 1363, 1364, 1374, 1408, 1411, 1420, 1423, 1436, 1457, 1476, 1529, 1602, 1611, 1674, 1681, 1713, 1776, 1812, 1820, 1843, 1845, 1921, 1925, 1941, 1946, 1976, 2009, 2013, 2030, 2031, 2032, 2043, 2061, 2062, 2078, 2099, 2103], "all_reduc": [27, 48, 1713, 2062], "all_gath": 27, "scatter": [27, 31, 53, 513, 515, 517, 1459, 1961, 2011, 2046, 2047, 2062, 2072, 2103], "reduce_scatt": [27, 2062], "all_to_al": 27, "v1": [27, 53, 1338, 1812, 2008, 2043, 2072], "init_method": [27, 1713, 2072], "adher": [27, 2013, 2077], "some_fil": 27, "machine_nam": 27, "share_folder_nam": 27, "tcpstore": [27, 45], "past": [27, 50, 62, 1017, 1064, 1069, 1083, 1084, 1713, 2046, 2101, 2102, 2105], "ask": [27, 57, 58, 2008, 2009, 2045, 2048, 2089, 2096, 2110], "infiniband": [27, 1713, 2072], "interconnect": [27, 32], "gpudirect": 27, "ethernet": 27, "ip": [27, 45], "ib": 27, "upcom": [27, 2038], "nccl_socket_ifnam": 27, "eth0": 27, "gloo_socket_ifnam": 27, "eth1": 27, "eth2": 27, "eth3": 27, "imper": 27, "nccl_debug": 27, "nccl_debug_subsi": 27, "coll": 27, "hang": [27, 28, 31, 34, 1713, 2022, 2043], "topologi": [27, 29, 33, 36], "effort": [27, 50, 2072, 2096, 2102], "socket": [27, 2029, 2072], "nccl_socket_nthread": 27, "nccl_nsocks_perthread": 27, "cloud": [27, 2077, 2082], "aw": [27, 37, 995], "gcp": [27, 2105], "primit": [27, 31, 45, 1341, 2010, 2012, 2014, 2041, 2052, 2061, 2072, 2103], "kind": [27, 39, 50, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 680, 1181, 1289, 1714, 1775, 1822, 1886, 2008, 2017, 2044, 2053, 2055, 2059, 2061, 2064, 2067, 2078, 2080], "connect": [27, 36, 45, 1450, 1451, 1452, 1453, 1454, 1455, 1499, 1500, 1501, 1502, 1503, 1504, 1552, 2029, 2072, 2106], "advantag": [27, 45, 46, 1436, 1483, 2043, 2046, 2058, 2059, 2072, 2077, 2093], "redund": [27, 53, 1122, 1123, 1125, 1127, 1141, 1143, 1920], "averag": [27, 31, 735, 766, 767, 768, 769, 821, 822, 933, 935, 995, 1069, 1083, 1269, 1424, 1425, 1426, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1456, 1458, 1466, 1476, 1482, 1488, 1489, 1490, 1491, 1492, 1496, 1497, 1498, 1514, 1515, 1523, 1526, 1527, 1528, 1529, 1530, 1537, 1555, 1556, 1563, 1572, 1588, 1589, 1590, 1596, 1597, 1598, 1601, 1602, 1612, 1626, 1641, 1650, 1651, 1652, 1665, 1673, 1713, 1777, 1778, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1946, 2009, 2043, 2066], "elimin": [27, 50, 62, 610, 1178, 1957, 1958, 2055, 2101, 2107], "thrash": 27, "recurr": [27, 760, 761, 1285, 1442, 1459, 1474, 1475, 1493, 1539, 1731, 1757, 1791, 2009, 2042], "device_mesh": [27, 33, 53, 1713], "init_device_mesh": [27, 33], "use_distribut": 27, "group_nam": [27, 42], "pg_option": 27, "url": [27, 45, 932, 2008, 2024, 2072], "discov": [27, 973, 2072], "encod": [27, 36, 42, 45, 62, 1317, 1341, 1385, 1386, 1435, 1436, 1567, 1568, 1569, 1570, 1571, 1713, 1867, 1906, 1907, 1908, 1910, 1911, 2010, 2013, 2014, 2044, 2056, 2064, 2073, 2077], "ucc": 27, "lowercas": 27, "deadlock": [27, 1713], "job": [27, 32, 36, 38, 39, 41, 42, 44, 45, 46, 48, 1407, 1713, 1799, 1805, 2042, 2050, 2066, 2082, 2096, 2110], "exchang": [27, 45, 1009, 1094, 2042, 2058], "timedelta": [27, 45, 2026], "abort": [27, 2042], "crash": [27, 38, 45, 1306, 2029, 2039, 2072, 2074, 2082, 2095], "corrupt": [27, 45, 1459, 2042, 2053], "torch_nccl_blocking_wait": 27, "processgroupopt": 27, "processgroupnccl": [27, 2043], "is_high_priority_stream": 27, "ncclcomminit": 27, "lazi": [27, 988, 1282, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1703, 1992, 2009, 2095], "ncclcommsplit": 27, "unnecessari": [27, 31, 1720, 1721, 1761, 2013, 2039, 2042, 2044, 2056, 2064, 2081], "backend_nam": [27, 1964], "custom_backend": 27, "mesh_shap": 27, "mesh_dim_nam": 27, "dimension": [27, 34, 51, 513, 515, 881, 887, 888, 889, 952, 959, 971, 1094, 1096, 1097, 1106, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1140, 1141, 1143, 1145, 1147, 1148, 1160, 1223, 1232, 1233, 1234, 1302, 1307, 1308, 1309, 1310, 1335, 1340, 1356, 1364, 1371, 1427, 1444, 1445, 1446, 1447, 1448, 1449, 1458, 1459, 1465, 1466, 1495, 1513, 1530, 1538, 1545, 1546, 1547, 1548, 1549, 1550, 1557, 1559, 1563, 1579, 1580, 1581, 1612, 1665, 1668, 1701, 1702, 1712, 1727, 1767, 1830, 1906, 1907, 1908, 1909, 1910, 1911, 1920, 1936, 1939, 1940, 1946, 2013, 2032, 2037, 2040, 2048, 2054, 2077, 2079, 2080, 2083, 2086, 2095], "layout": [27, 33, 51, 62, 150, 191, 208, 233, 342, 343, 435, 445, 446, 447, 448, 449, 458, 544, 581, 582, 583, 584, 585, 587, 588, 617, 689, 866, 894, 899, 942, 951, 1021, 1107, 1108, 1109, 1119, 1124, 1142, 1158, 1161, 1162, 1182, 1227, 1228, 1289, 1340, 1356, 1364, 1374, 1419, 1646, 1772, 1773, 1794, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1945, 1950, 1952, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2015, 2032, 2042, 2062, 2064, 2077, 2082, 2083, 2084, 2103], "spmd": [27, 29], "nd": [27, 1325, 2047, 2054], "inconsist": [27, 53, 866, 1839, 2044], "scene": [27, 2056, 2082], "mesh": [27, 33, 2082], "mesh_1d": 27, "mesh_2d": 27, "dp": 27, "is_initi": [27, 2009], "is_mpi_avail": 27, "is_nccl_avail": 27, "is_gloo_avail": 27, "is_torchelastic_launch": 27, "elast": [27, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 2009], "torchelast": [27, 30, 36, 37, 38, 39, 42, 44, 45, 46, 48, 49], "torchelastic_run_id": [27, 46], "proxi": [27, 29, 2067, 2072, 2096], "rendezv": [27, 30, 36, 42, 44, 49, 2043, 2072], "null": [27, 37, 39, 42, 64, 68], "discoveri": [27, 45, 2042, 2064], "reachabl": 27, "multicast": 27, "20": [27, 31, 34, 321, 685, 720, 728, 729, 734, 738, 739, 740, 741, 742, 743, 746, 756, 760, 761, 762, 763, 764, 765, 772, 1088, 1223, 1267, 1270, 1281, 1292, 1326, 1408, 1431, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1442, 1449, 1450, 1451, 1452, 1454, 1455, 1460, 1461, 1462, 1463, 1467, 1470, 1471, 1474, 1475, 1477, 1484, 1485, 1486, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1510, 1516, 1517, 1518, 1520, 1521, 1523, 1539, 1541, 1552, 1560, 1563, 1566, 1567, 1568, 1569, 1581, 1604, 1606, 1607, 1609, 1613, 1624, 1625, 1631, 1689, 1727, 1728, 1729, 1753, 1762, 1765, 1783, 1798, 1826, 1936, 2010, 2011, 2021, 2032, 2043, 2044, 2054, 2059, 2062, 2063, 2072, 2076, 2077, 2096, 2097, 2098], "23456": 27, "clean": [27, 36, 50, 62, 983, 1044, 2008, 2029, 2064], "fcntl": 27, "nf": 27, "init": [27, 33, 36, 38, 53, 1269, 1523, 1531, 1551, 1761, 2009, 2015, 2039, 2044, 2050, 2051, 2095], "brand": [27, 29, 2044], "succe": [27, 45, 50, 58, 2042, 2044, 2057, 2108, 2110], "unexpect": [27, 29, 35, 62, 1005, 1157, 1160, 1163, 1269, 1523, 1763, 1776, 1915, 2010, 2039, 2044, 2054, 2096, 2098, 2099], "unsuccess": 27, "mnt": 27, "sharedfil": 27, "port": [27, 36, 44, 45, 46, 2021, 2049], "enum": [27, 43, 64, 796, 1582, 1583, 1584, 2044, 2061, 2066, 2067, 2072], "backend_str": 27, "uppercas": 27, "classmethod": [27, 29, 45, 64, 66, 732, 738, 739, 740, 745, 746, 756, 764, 792, 793, 794, 815, 816, 817, 824, 855, 929, 1008, 1465, 1466, 1563, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1774, 2013, 2014, 2044, 2067, 2072, 2079, 2109], "register_backend": [27, 2072, 2094], "extended_api": 27, "instanti": [27, 31, 32, 44, 45, 46, 53, 62, 842, 1466, 1621, 1730, 1754, 1761, 2008, 2010, 2012, 2013, 2042, 2044, 2051, 2059, 2079], "3rd": [27, 34, 45, 617, 2040], "processgroup": [27, 29, 31, 53, 1713], "four": [27, 1315, 1451, 2044, 2048, 2072, 2074], "c10d": [27, 36, 44, 46, 49, 680, 1713, 2043, 2062], "distributedbackendopt": 27, "get_backend": [27, 45], "get_rank": [27, 53, 1563], "consecut": [27, 53, 610, 1756, 1795, 1946, 1957, 1958, 2031, 2061], "get_world_s": 27, "pattern": [27, 29, 792, 793, 794, 796, 855, 862, 1048, 1197, 1459, 1583, 1757, 1902, 2010, 2013, 2039, 2042, 2044, 2046, 2049, 2056, 2068, 2069, 2077, 2093, 2095, 2096, 2098, 2107, 2110], "launcher": [27, 46], "pg": [27, 1713], "destructor": [27, 2029, 2074], "ncclcommabort": 27, "gc": [27, 486, 2074], "fault": [27, 30, 36, 44, 45, 1160], "toler": [27, 30, 36, 44, 45, 62, 694, 920, 921, 1258, 1285, 1286, 1324, 1327, 1342, 1776, 1783, 2010, 2084], "_after_": [27, 2043], "unsupport": [27, 36, 50, 58, 64, 78, 81, 82, 84, 87, 2010, 2014, 2031, 2059, 2072, 2077, 2099, 2104], "untest": [27, 2031], "filestor": [27, 45], "hashstor": 27, "client": [27, 31, 45, 1062, 1183, 1188, 2064, 2099], "host_nam": 27, "hostnam": [27, 36, 45, 2066], "listen": 27, "is_mast": 27, "300": [27, 36, 1347, 1436, 1758, 1760, 2063], "wait_for_work": 27, "multi_ten": 27, "underli": [27, 29, 31, 34, 36, 50, 53, 58, 62, 97, 311, 326, 377, 400, 402, 473, 474, 475, 476, 483, 499, 520, 524, 557, 558, 559, 613, 748, 757, 879, 1008, 1158, 1184, 1200, 1201, 1202, 1240, 1244, 1269, 1341, 1418, 1673, 1841, 1945, 1960, 1978, 2010, 2013, 2032, 2042, 2046, 2049, 2065, 2072, 2079, 2081, 2089, 2098], "tcpserver": 27, "master_listen_fd": 27, "datetim": [27, 2026, 2099], "server_stor": 27, "127": [27, 794, 2031, 2067, 2082], "1234": [27, 45, 1246, 1959], "client_stor": 27, "first_kei": 27, "first_valu": 27, "hashmap": 27, "file_nam": [27, 2008, 2024, 2064], "store1": 27, "store2": 27, "prefixstor": 27, "old": [27, 35, 50, 62, 486, 855, 1157, 1192, 1206, 1462, 1765, 1773, 1807, 1855, 2007, 2009, 2010, 2039, 2042, 2044, 2057, 2067, 2082, 2098], "throw": [27, 28, 61, 62, 190, 323, 328, 545, 614, 1254, 1269, 1310, 1359, 1523, 1713, 1715, 1716, 1757, 1768, 1819, 1961, 2032, 2039, 2055, 2072, 2083, 2096, 2099, 2108], "whose": [27, 34, 53, 62, 544, 860, 899, 963, 990, 1094, 1106, 1111, 1160, 1212, 1223, 1226, 1232, 1269, 1275, 1286, 1294, 1340, 1356, 1358, 1420, 1523, 1713, 1769, 1817, 1874, 1942, 2013, 2039, 2044, 2047, 2048, 2064, 2077, 2082, 2084, 2095, 2108], "quantiti": [27, 54, 59, 1192, 1194, 1197, 1305, 1306, 1333, 1488, 1738, 1739, 1741, 1742, 1744, 1747, 1748, 1749, 1750, 1807, 2017, 2025, 2045, 2048], "compare_set": 27, "arg2": [27, 51], "expected_valu": 27, "desired_valu": 27, "second_valu": 27, "overload": [27, 50, 62, 617, 2012, 2013, 2017, 2059], "bad_kei": 27, "num_kei": 27, "written": [27, 29, 32, 36, 38, 43, 58, 932, 1064, 1158, 1459, 1793, 2010, 2012, 2020, 2023, 2039, 2043, 2044, 2045, 2051, 2056, 2059, 2061, 2064, 2066, 2079, 2082, 2089, 2095, 2096, 2097, 2101, 2102, 2107, 2108], "destruct": [27, 2026, 2072, 2074], "delete_kei": 27, "successfulli": [27, 36, 42, 50, 1276, 1868, 2029, 2051, 2056, 2072, 2108], "set_timeout": 27, "grain": [27, 50, 859, 862, 1681, 2039, 2061, 2077, 2089, 2101, 2108], "plai": [27, 2097, 2099], "new_group": [27, 53, 1563], "opaqu": [27, 35, 1006, 1040, 1041, 1157, 2104], "use_local_synchron": 27, "group_desc": 27, "enqueu": [27, 61, 1009, 1011, 1012, 1396, 1980, 2042, 2073], "significantli": [27, 50, 53, 910, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1867, 2077, 2094], "taken": [27, 34, 50, 61, 62, 64, 69, 866, 1127, 1129, 1152, 1153, 1442, 1458, 1466, 1530, 1538, 1613, 1621, 1712, 1871, 1904, 2037, 2039, 2041, 2042, 2044, 2046, 2047, 2050, 2056, 2061, 2064, 2066, 2108, 2110], "get_group_rank": 27, "global_rank": [27, 36], "translat": [27, 1223, 2039, 2058, 2059, 2074], "get_global_rank": 27, "group_rank": [27, 36, 46], "get_process_group_rank": 27, "inter": [27, 36, 38, 53, 1220, 1869, 2041, 2043, 2065, 2072], "intra": [27, 31, 53, 2041, 2043, 2065], "_init_backend": 27, "ndarrai": [27, 35, 458, 880, 1157, 1159, 1906, 1907, 1908, 1909, 1910, 1911, 1939, 2061, 2082, 2084, 2099], "dst": [27, 2008, 2064], "destin": [27, 29, 39, 42, 43, 53, 209, 416, 417, 603, 1020, 1021, 1210, 1269, 1376, 1377, 1523, 2011, 2059, 2072, 2073, 2079], "unspecifi": [27, 481, 820, 821, 822, 825, 920, 921, 1184, 1557, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1903, 1909, 2020, 2077, 2082, 2090], "sender": [27, 2074], "isend": 27, "irecv": 27, "is_complet": 27, "finish": [27, 29, 36, 42, 43, 45, 48, 61, 486, 1164, 2042, 2043, 2057, 2066, 2072, 2074, 2110], "send_object_list": 27, "object_list": 27, "picklabl": [27, 1269, 1523, 2064], "sent": [27, 29, 1044, 2013, 2029, 2053, 2072, 2073, 2074], "current_devic": [27, 29, 53, 1017, 1025, 1026, 1033, 1034, 1050, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1082, 1083, 1084, 1398, 1399, 1964, 1982, 1987, 1988, 2005, 2009, 2080, 2097], "set_devic": [27, 29, 53, 1713, 1863, 2009, 2072, 2080], "insecur": [27, 1341], "malici": [27, 1341, 2064], "ineffici": [27, 53, 2042, 2067], "recv_object_list": 27, "batch_isend_irecv": 27, "p2p_op_list": 27, "p2pop": 27, "op_list": 27, "send_tensor": 27, "recv_tensor": 27, "send_op": 27, "recv_op": 27, "req": 27, "p2p": [27, 45], "async_op": 27, "onto": [27, 53, 62, 64, 66, 1068, 1277, 1280, 1341, 1733, 1962, 2008, 2017, 2021, 2029, 2042, 2045, 2046, 2051, 2066, 2107, 2110], "get_futur": [27, 1713], "regard": [27, 1453, 1454, 1455, 1465, 1466, 1620, 1621, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 2010, 2074, 2077, 2102], "101": [27, 929, 1427], "overwrot": 27, "broadcast_object_list": 27, "redoptyp": 27, "bitwis": [27, 945, 947, 948, 950, 2014, 2054, 2068, 2086], "reduceop": 27, "int64": [27, 84, 191, 208, 313, 321, 393, 866, 944, 957, 1107, 1120, 1121, 1159, 1612, 1754, 1834, 1838, 1839, 1859, 1906, 1907, 1908, 1910, 1911, 2017, 2042, 2077, 2079, 2080, 2083, 2112], "1j": [27, 698, 988, 989, 1265, 1847, 1848, 1970, 2039, 2048, 2056], "2j": [27, 698, 988, 989, 1847, 1848, 1874, 1970, 2039], "tensor_list": [27, 2032], "all_gather_into_tensor": [27, 2062], "output_tensor": 27, "input_tensor": [27, 2101], "accommod": [27, 1519, 1520, 1521], "ii": [27, 991, 1106, 1493, 1494], "tensor_in": 27, "tensor_out": 27, "tensor_out2": 27, "all_gather_object": 27, "obj": [27, 62, 881, 1029, 1255, 1256, 1275, 1276, 1281, 1855, 1965, 1985, 2011, 2056, 2057, 2064], "pickabl": 27, "popul": [27, 34, 43, 53, 61, 62, 335, 495, 503, 504, 1182, 1193, 1370, 1415, 2042, 2044, 2098, 2107], "unmodifi": [27, 2097], "responsibl": 27, "gather_object": 27, "gather_list": 27, "object_gather_list": 27, "scatter_list": 27, "tensor_s": 27, "t_one": 27, "t_five": 27, "scatter_object_list": 27, "scatter_object_output_list": 27, "scatter_object_input_list": 27, "output_list": 27, "input_list": 27, "reduce_scatter_tensor": [27, 2062], "all_to_all_singl": [27, 2062], "output_split_s": 27, "input_split_s": 27, "13": [27, 876, 936, 967, 1088, 1104, 1107, 1151, 1223, 1233, 1273, 1359, 1443, 1470, 1471, 1520, 1558, 1624, 1625, 1896, 1940, 1974, 2010, 2014, 2062, 2077, 2102, 2108], "14": [27, 64, 72, 73, 321, 517, 966, 1048, 1049, 1089, 1104, 1233, 1322, 1328, 1413, 1443, 1520, 1823, 1830, 1867, 1896, 1940, 1941, 1946, 1974, 2010, 2014, 2017, 2047, 2062, 2077, 2081, 2082, 2096, 2097], "15": [27, 62, 617, 1088, 1104, 1211, 1223, 1233, 1292, 1306, 1443, 1520, 1521, 1758, 1760, 1815, 1887, 1896, 1944, 1974, 2010, 2011, 2014, 2061, 2077, 2097], "uneven": [27, 28, 31, 33, 1713], "18": [27, 321, 445, 685, 1107, 1223, 1266, 1342, 1520, 2010, 2017, 2059, 2061, 2062, 2077, 2090, 2096, 2097], "21": [27, 34, 685, 936, 963, 1089, 1328, 1823, 1946, 2010, 2077], "22": [27, 34, 321, 617, 1342, 1703, 1758, 1760, 2010, 2055, 2077, 2096, 2097], "23": [27, 513, 1088, 1342, 1867, 1882, 2010, 2077, 2108], "31": [27, 949, 1434, 1492, 1518, 1703, 1882, 2061], "33": [27, 738, 739, 740, 741, 742, 743, 772, 1088, 1269, 1450, 1451, 1452, 1454, 1455, 1521, 1523, 1604, 1606, 1607, 1609, 2010, 2061], "34": [27, 1959, 2097, 2108], "35": [27, 1328, 1438, 1439, 1486, 1487, 1563, 1823], "36": [27, 321, 1149, 1223, 2097], "input_split": 27, "output_split": 27, "5j": 27, "6j": 27, "7j": 27, "8j": 27, "9j": 27, "10j": 27, "11j": 27, "12j": 27, "13j": 27, "14j": 27, "15j": 27, "16j": 27, "output_tensor_list": 27, "input_tensor_list": 27, "monitored_barri": [27, 2062], "wait_all_rank": 27, "pend": [27, 978, 2042, 2072, 2082, 2093], "band": 27, "bor": 27, "bxor": 27, "premul_sum": 27, "suppos": [27, 62, 1206, 1266, 1808, 2020, 2047, 2077, 2098, 2099, 2100], "_make_nccl_premul_sum": 27, "__members__": 27, "reduce_op": 27, "mention": [27, 1179, 2008, 2012, 2013, 2031, 2039, 2042, 2051, 2061, 2077, 2081, 2089, 2102, 2108], "stand": [27, 1170, 1174, 2012, 2064, 2074], "exemplifi": 27, "cpp_extens": [27, 2009, 2044], "cpp_c10d_extens": 27, "torchrun": [27, 30, 32, 37, 44, 49], "benefici": [27, 88, 1720, 1721, 2051], "nproc_per_nod": [27, 32, 37], "num_gpus_you_hav": 27, "your_training_script": [27, 44, 46], "arg3": [27, 51], "192": [27, 617, 2061], "168": 27, "nnode": [27, 44, 46], "local_process_rank": 27, "local_rank": [27, 36, 38, 43, 46, 49, 1563], "argpars": [27, 46, 2042], "parser": [27, 46, 2042], "argumentpars": [27, 46, 2042], "add_argu": [27, 46, 2042], "parse_arg": [27, 37, 46, 49, 2042, 2061], "onward": [27, 46, 1807, 2078], "dash": [27, 46, 2072, 2074], "previous": [27, 45, 46, 50, 54, 57, 58, 59, 62, 698, 792, 793, 929, 1175, 1197, 1206, 1277, 1918, 1919, 1968, 1969, 1973, 2010, 2040, 2042, 2051, 2064, 2065, 2071, 2072, 2078, 2090, 2096, 2104, 2110], "underscor": [27, 46, 2008, 2031, 2072, 2083], "unrecogn": [27, 46, 2013], "output_devic": [27, 31, 46, 1459, 1563, 1696, 1713], "adjust": [27, 29, 31, 33, 34, 53, 1436, 1807, 1879, 2009, 2041, 2068, 2090, 2110, 2111], "filesystem": [27, 29, 2008, 2064], "12042": 27, "wrong": [27, 62, 84, 901, 902, 906, 978, 1267, 1270, 2043, 2053, 2057, 2061, 2063, 2093, 2096, 2097], "imagenet": [27, 2037], "suit": [27, 2010, 2012, 2013, 2061, 2068, 2072, 2105], "pdb": [27, 1274, 1281, 1287, 2010, 2012], "streamlin": [27, 51, 81], "attach": [27, 32, 51, 56, 61, 62, 139, 712, 713, 714, 715, 716, 717, 718, 719, 720, 730, 731, 732, 733, 793, 838, 840, 865, 1703, 2008, 2010, 2012, 2030, 2039, 2044, 2067, 2073, 2087, 2095], "rerout": 27, "termin": [27, 36, 45, 48, 51, 62, 1783, 2029, 2072, 2101], "sync": [27, 31, 53, 61, 62, 486, 1713, 2042, 2043, 2065, 2093, 2098], "group_gloo": 27, "29501": 27, "monitoredbarri": 27, "transport": [27, 2072], "598": 27, "2401": 27, "db00": 27, "eef0": 27, "1100": 27, "3560": 27, "1c05": 27, "25d": 27, "8594": 27, "twolinlayernet": 27, "ddp": [27, 28, 29, 31, 32, 53, 680, 1563, 1713, 2009, 2042, 2043, 2072, 2099], "i0607": 27, "739390": 27, "515217": 27, "173": 27, "broadcast_buff": [27, 1713], "bucket_cap_byt": 27, "26214400": 27, "find_unused_paramet": [27, 1713, 2043], "gradient_as_bucket_view": [27, 1713], "is_multi_device_modul": 27, "num_parameter_tensor": 27, "total_parameter_size_byt": 27, "440": 27, "bucket_s": 27, "module_nam": [27, 62, 817, 855, 2064], "nccl_async_error_handl": [27, 2042], "nccl_blocking_wait": 27, "nccl_ib_timeout": 27, "nccl_nthread": 27, "58": [27, 2102], "085681": 27, "544067": 27, "344": 27, "unused_parameter_s": 27, "40838608": 27, "5983335": 27, "4326421": 27, "comp": [27, 34], "4207652": 27, "085693": 27, "544066": 27, "42850427": 27, "3885553": 27, "2357981": 27, "2234674": 27, "enhanc": [27, 53, 2095], "unus": [27, 31, 62, 915, 1044, 1058, 1274, 1281, 1484, 1713, 1776, 2010, 2012, 2013, 2042, 2043, 2049, 2064], "went": [27, 62, 2096], "wasn": [27, 45, 1341, 2010], "va": 27, "lue": 27, "indirectli": 27, "outstand": [27, 2072], "stuck": [27, 36, 48], "uninform": 27, "root": [27, 29, 38, 45, 46, 50, 53, 62, 793, 1172, 1181, 1307, 1308, 1538, 1678, 1712, 1791, 1854, 1913, 2023, 2039, 2047, 2064, 2072, 2073, 2077, 2099], "nontrivi": [27, 1184, 1195, 2042, 2095], "reveal": [27, 2043], "default_pg": 27, "opt": [27, 31, 1281, 2010, 2048], "longtensor": [27, 134, 135, 136, 315, 317, 319, 452, 471, 513, 515, 517, 875, 876, 1210, 1244, 1291, 1409, 1465, 1466, 1526, 1620, 1621, 1667, 1767, 1859, 1896, 1909, 1935, 1943, 1976, 2080, 2083], "set_debug_level": 27, "set_debug_level_from_env": 27, "get_debug_level": 27, "disterror": 27, "distbackenderror": 27, "thrown": [27, 61, 617, 879, 881, 1062, 1104, 1233, 1269, 1300, 1309, 1311, 1313, 1316, 1317, 1328, 1523, 1718, 1974, 2059, 2064], "distnetworkerror": 27, "ex": [27, 37, 1184, 1713, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 2026, 2107], "diststoreerror": 27, "outlin": [28, 2065, 2073, 2099], "joinabl": [28, 31, 1713, 2009], "joinhook": [28, 2009], "throw_on_early_termin": [28, 1713], "shadow": [28, 31, 1713, 2087, 2088], "notify_join_context": 28, "zeroredundancyoptim": [28, 31, 1713, 2009], "vacuou": 28, "inherit": [28, 1746, 2010, 2012, 2032, 2044, 2051, 2053], "join_hook": [28, 31, 1713], "join_devic": [28, 31], "join_process_group": [28, 31], "repeatedli": [28, 2042, 2077], "main_hook": 28, "post_hook": 28, "is_last_join": 28, "dcp": 29, "reshard": [29, 53], "storag": [29, 53, 221, 311, 339, 342, 343, 435, 458, 483, 499, 520, 524, 558, 559, 584, 585, 587, 588, 879, 899, 901, 902, 906, 1029, 1097, 1158, 1240, 1244, 1255, 1269, 1277, 1341, 1363, 1418, 1419, 1459, 1523, 1540, 1841, 1855, 1862, 1892, 1897, 1901, 1915, 1939, 1945, 1962, 1985, 2008, 2009, 2011, 2017, 2024, 2029, 2032, 2039, 2042, 2053, 2056, 2064, 2072, 2077, 2080, 2081, 2083, 2098], "entrypoint": [29, 33, 36, 38, 43, 46, 47, 50, 2017, 2029], "state_dict_sav": 29, "checkpoint_id": 29, "storage_writ": 29, "planner": 29, "style": [29, 33, 35, 62, 878, 1101, 1157, 1767, 1790, 2010, 2012, 2013, 2061, 2064, 2082, 2100], "shardedtensor": [29, 53], "dtensor": [29, 33, 53], "save_state_dict": [29, 2009], "fsdp": [29, 32, 53, 486, 680, 2009, 2099], "shardingstrategi": [29, 53, 2009], "hybrid_shard": [29, 53], "shard_group": 29, "pathlik": [29, 50, 62, 1341, 1855, 2064], "storagewrit": [29, 2009], "writer": [29, 2026, 2051, 2082], "saveplann": [29, 2009], "my_model": [29, 1713, 2010, 2093, 2099, 2108], "mymodul": [29, 50, 51, 53, 62, 1273, 1274, 1276, 1280, 1281, 1287, 1524, 1525, 1533, 1534, 2010, 2012, 2013, 2046, 2056, 2072], "fs_storage_writ": 29, "filesystemwrit": [29, 2009], "async_sav": [29, 2009], "de": [29, 2012, 2064, 2067], "checkpoint_futur": 29, "coordinator_rank": 29, "no_dist": 29, "state_dict_load": 29, "storage_read": 29, "fullfil": 29, "po": [29, 2061], "storageread": [29, 2009], "reader": [29, 2096], "loadplann": [29, 2009], "adagrad": [29, 1465, 2020, 2063, 2072], "model_state_dict": [29, 2059], "fs_storage_read": 29, "filesystemread": [29, 2009], "asyncstag": [29, 2009], "stage_data": 29, "opportun": [29, 1300, 2010, 2073, 2098, 2099], "reflect": [29, 57, 458, 520, 556, 1159, 1160, 1163, 1266, 1450, 1451, 1452, 1499, 1500, 1501, 1545, 1546, 1547, 1629, 1668, 1763, 1808, 1920, 2010, 2011, 2046, 2081, 2093], "ram": [29, 1341, 2042], "responds": 29, "should_synchronize_after_execut": 29, "assumpt": [29, 33, 42, 46, 50, 920, 976, 1442, 1476, 2039, 2043, 2048, 2072, 2073, 2077, 2095, 2096, 2099, 2104, 2108], "synchronize_stag": 29, "innocul": 29, "statefult": 29, "blockingasyncstag": [29, 2009], "cache_staged_state_dict": 29, "type_check": 29, "automodul": 29, "act": [29, 34, 36, 43, 58, 859, 1436, 1524, 1525, 1534, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1747, 1748, 1749, 1750, 1751, 1961, 2042, 2051, 2055, 2063, 2096], "told": [29, 2012], "role": [29, 36, 37, 45, 46], "read_metadata": 29, "set_up_storage_read": 29, "prepare_local_plan": 29, "prepare_global_plan": 29, "read_data": 29, "central": [29, 64, 1223, 2048, 2050], "loadplan": [29, 2009], "storage_data": 29, "load_byt": 29, "bytesio": [29, 50, 1277, 1280, 1341, 1855, 2061, 2067], "resolve_tensor": 29, "storagelay": 29, "schedul": [29, 36, 38, 44, 61, 680, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 2019, 2043, 2047, 2050, 2066, 2099], "checkpiont_id": 29, "is_coordin": 29, "validate_checkpoint_id": 29, "stroag": 29, "set_up_storage_writ": 29, "write_data": 29, "mark": [29, 32, 45, 61, 62, 64, 69, 73, 486, 826, 901, 902, 903, 906, 929, 976, 978, 1179, 1385, 1386, 1713, 1775, 2010, 2012, 2039, 2043, 2044, 2051, 2056, 2064, 2066, 2073, 2083, 2089, 2093, 2096, 2099, 2100], "recover": 29, "writeresult": 29, "saveplan": [29, 2009], "storage_meta": 29, "storagemeta": 29, "todo": [29, 82, 83, 826, 860, 862, 863, 1194, 2088, 2098, 2104], "resolve_data": 29, "writeitem": [29, 2009], "tensor_data": 29, "set_up_plann": 29, "create_local_plan": 29, "create_global_plan": 29, "commit_tensor": 29, "defaultloadplann": [29, 2009], "rewrit": [29, 50, 58, 64, 66, 72, 73, 82, 83, 2023, 2039, 2048, 2058, 2059, 2061, 2096, 2097], "requit": 29, "intrincaci": 29, "renameplann": 29, "state_dict_typ": [29, 53], "original_state_dict": 29, "foo_": [29, 1164], "flatten_sharded_tensor": 29, "_flatten_sharded_tensor": 29, "flatten_state_dict": 29, "read_item": 29, "dest_index": 29, "fqn": [29, 33, 50, 2025, 2088], "metamodelmateri": 29, "defaultsaveplann": [29, 2009], "global_plan": 29, "finish_plan": 29, "central_plan": 29, "resolve_byt": 29, "alia": [29, 34, 39, 50, 91, 92, 111, 187, 188, 353, 406, 436, 437, 444, 523, 541, 682, 867, 868, 869, 870, 871, 872, 873, 895, 938, 969, 985, 986, 1092, 1099, 1102, 1113, 1114, 1115, 1117, 1118, 1144, 1214, 1224, 1225, 1237, 1238, 1239, 1247, 1267, 1269, 1296, 1297, 1304, 1320, 1324, 1327, 1355, 1365, 1366, 1376, 1410, 1412, 1422, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1523, 1640, 1716, 1754, 1770, 1810, 1815, 1818, 1853, 1875, 1890, 1893, 1895, 1922, 1926, 1927, 1947, 1953, 1977, 2013, 2044, 2062, 2078, 2079, 2083, 2098, 2103], "readitem": [29, 2009], "planner_data": 29, "loaditemtyp": 29, "metadataindex": 29, "dest_offset": 29, "storage_index": 29, "storage_offset": [29, 138, 520, 617, 879, 2011, 2017, 2062, 2103], "tandem": 29, "fp16planner": 29, "write_item": 29, "writeitemtyp": 29, "byte_io": 29, "itertool": [29, 34, 959, 972], "islic": 29, "dataclass": [29, 50, 51, 2107], "ddploadbalancingplann": 29, "all_plan": 29, "saveextradataplann": 29, "merged_data": 29, "new_plan": 29, "prepar": [29, 33, 53, 62, 797, 839, 842, 858, 860, 862, 863, 864, 1173, 1279, 2014, 2061, 2087, 2088], "idempot": [29, 2072, 2074], "safeti": [29, 36, 50, 62, 486, 975, 976, 1194, 2010, 2013, 2031, 2055, 2100], "hi": [29, 1493, 1494, 2010, 2012, 2048, 2096], "peak": [29, 31, 53, 1054, 1056, 1062, 1070, 1071, 1072, 1713, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1799, 1805, 2047, 2065, 2105], "late": [29, 45, 486], "tensor_storage_s": 29, "single_file_per_rank": 29, "sync_fil": 29, "thread_count": 29, "per_thread_copy_ahead": 29, "10000000": 29, "simplif": [29, 2095], "atom": [29, 45, 62, 2014], "distributedtensor": [29, 33], "dedup_replicated_tensor": 29, "lookup_object": 29, "transform_object": 29, "allow_partial_load": 29, "lookup_tensor": 29, "transform_tensor": 29, "legaci": [29, 35, 46, 1631, 2066, 2080], "layer1": [29, 32, 2065], "unparallel": 29, "tackl": [29, 2099], "get_model_state_dict": [29, 2009], "get_optimizer_state_dict": [29, 2009], "uniform": [29, 481, 608, 943, 1458, 1542, 1612, 1832, 1833, 1880, 2009, 2037, 2062, 2086, 2103], "hese": 29, "get_state_dict": [29, 2009], "fully_shard": 29, "tensor_parallel": 29, "parallelize_modul": [29, 33, 2009], "hide": [29, 59, 1175, 1973, 2045], "canon": [29, 36, 38, 1181, 1191, 2010, 2094, 2098], "named_paramet": [29, 50, 53, 55, 57, 1163, 1269, 1273, 1523, 2051, 2056, 2063], "named_buff": [29, 50, 53, 1269, 1523, 2051, 2056], "fullyshardeddataparallel": [29, 680, 2009, 2047], "fsdp_model": [29, 53], "deepcopi": [29, 57, 2067, 2088], "fsdp_optim": 29, "ddp_optim": 29, "ddp_state_dict": 29, "ddp_optim_state_dict": 29, "fsdp_state_dict": 29, "fsdp_optim_state_dict": 29, "ddp_optim_st": 29, "statedictopt": [29, 2009], "valuetyp": 29, "optimizerstatetyp": 29, "set_state_dict": [29, 2009], "optim_state_dict": [29, 53], "counterpart": [29, 858, 865, 1339, 1713, 2013, 2023, 2033, 2086, 2087, 2095, 2099], "missing_kei": [29, 1269, 1523], "miss": [29, 43, 689, 1163, 1186, 1269, 1364, 1374, 1456, 1485, 1486, 1487, 1523, 1646, 1763, 2021, 2044, 2057, 2061, 2077, 2095, 2100, 2111], "unexpected_kei": [29, 1269, 1523], "set_model_state_dict": [29, 2009], "set_optimizer_state_dict": [29, 2009], "full_state_dict": [29, 53], "cpu_offload": [29, 53], "ignore_frozen_param": 29, "keep_submodule_prefix": 29, "broadcast_from_rank0": 29, "offload": [29, 53], "oom": [29, 53, 2046, 2110], "rank0": [29, 36, 53], "frozen": [29, 31, 53, 1184, 1273, 1279, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 2014, 2057], "offlin": [29, 1280], "betwe": 29, "format_util": 29, "dcp_to_torch_sav": [29, 2009], "dcp_checkpoint_dir": 29, "torch_save_path": 29, "torch_save_to_dcp": [29, 2009], "onlin": [29, 62, 1779], "broadcastingtorchsaveread": [29, 2009], "dynamicmetaloadplann": [29, 2009], "sd": [29, 769, 774], "path_to_model": 29, "incurr": 29, "hopefulli": [29, 2047, 2098], "extnd": 29, "quickstart": 30, "agent": [30, 37, 38, 39, 42, 44, 46, 48, 2072], "expir": 30, "metric": [30, 1054, 1056, 1062, 1807, 2026, 2051, 2066, 2082, 2099, 2105], "kubernet": 30, "distributedoptim": [31, 1713, 2009, 2072, 2073], "rref": [31, 1713, 2009, 2013, 2065, 2073], "optimizer_class": 31, "params_rref": 31, "get_gradi": [31, 2062, 2072, 2073], "multithread": [31, 918, 2042], "dist_autograd": [31, 1713, 2072, 2073], "rpc": [31, 61, 1713, 2009, 2013, 2065, 2073, 2074], "context_id": [31, 1713, 2072, 2073], "rref1": [31, 2072, 2073], "worker1": [31, 61, 1713, 2072, 2073], "rref2": [31, 2072, 2073], "to_her": [31, 1713, 2062, 2072, 2073, 2074], "dist_optim": [31, 1713, 2073], "postlocalsgdoptim": [31, 2009], "afer": 31, "modelaverag": 31, "localsgd": 31, "model_averag": 31, "post_localsgd_hook": 31, "postlocalsgdst": 31, "subgroup": 31, "start_localsgd_it": 31, "warmup_step": 31, "local_optim": 31, "periodicmodelaverag": 31, "checkpoint": [31, 46, 49, 53, 932, 1341, 1713, 2008, 2009, 2024, 2046, 2047, 2056, 2059, 2065, 2074, 2093], "parameters_as_bucket_view": 31, "overlap_with_ddp": 31, "consumpt": [31, 57, 1766, 2077, 2082, 2089], "partit": [31, 32, 33, 1427, 1681, 1946, 2061, 2062, 2065, 2073, 2074, 2099, 2107], "registr": [31, 61, 1048, 1705, 1710, 1711, 1713, 1730, 1733, 2017, 2059, 2064, 2094], "offset": [31, 225, 226, 227, 228, 339, 520, 558, 746, 879, 1094, 1095, 1096, 1097, 1160, 1304, 1466, 1585, 1586, 1621, 1713, 1825, 1826, 1904, 1950, 1952, 2011, 2013, 2056, 2097, 2103], "intact": [31, 2072], "ddp_zero_hook": 31, "disjointli": 31, "trail": [31, 1756, 1758, 2032, 2037, 2040, 2044], "wari": 31, "static_graph": [31, 1713], "third": [31, 34, 1105, 1106, 1359, 1427, 1434, 1452, 1455, 1492, 1518, 1805, 1807, 2009, 2010, 2017, 2042, 2045, 2051, 2064, 2066, 2096], "add_param_group": [31, 1733, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "param_group": [31, 53, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1787, 1790, 1791, 1792, 1793, 1794, 1801, 1804], "trainabl": [31, 1051, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1790, 1791, 1792, 1793, 1794, 2044], "consolidate_state_dict": 31, "consolid": [31, 53, 2065], "pertain": 31, "preced": [31, 36, 53, 60, 680, 1707, 1805, 1945, 2014, 2041, 2063, 2067, 2085], "migrat": [32, 46, 54, 1371, 1765, 2070], "pippi": [32, 2065], "alpha": [32, 34, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 151, 152, 312, 313, 488, 554, 561, 562, 563, 564, 685, 686, 689, 690, 691, 744, 770, 775, 941, 1048, 1049, 1227, 1241, 1431, 1441, 1464, 1511, 1551, 1595, 1603, 1618, 1619, 1629, 1647, 1682, 1777, 1791, 1883, 1884, 1897, 1902, 1916, 1921, 1922, 2011, 2039, 2044, 2061, 2063, 2099, 2103], "art": [32, 1830], "micro": [32, 2065], "articl": [32, 2048], "promis": 32, "intrus": [32, 2044], "orchestr": [32, 2059, 2104], "toolkit": [32, 62], "said": [32, 909, 910, 911, 912, 913, 914, 2020, 2054, 2096], "heavyweight": 32, "paradigm": 32, "gpipe": [32, 2065], "1f1b": 32, "interleav": [32, 1798], "bf": [32, 1572, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "pp": [32, 1266, 1476, 1887], "compos": [32, 33, 34, 57, 62, 738, 739, 740, 741, 742, 743, 766, 767, 772, 773, 774, 782, 783, 964, 1165, 1167, 1168, 1169, 1175, 1269, 1424, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1450, 1451, 1452, 1453, 1454, 1455, 1470, 1471, 1490, 1491, 1492, 1511, 1516, 1517, 1518, 1523, 1572, 1577, 1578, 1588, 1589, 1590, 1591, 1592, 1593, 1596, 1604, 1605, 1606, 1607, 1608, 1609, 1624, 1625, 1647, 1650, 1651, 1652, 1654, 1655, 1656, 1828, 1829, 1973, 2009, 2010, 2013, 2030, 2044, 2045, 2051, 2059, 2061, 2064, 2082, 2103, 2104], "3d": [32, 701, 704, 707, 735, 740, 743, 767, 769, 774, 779, 1371, 1426, 1430, 1434, 1437, 1439, 1452, 1455, 1462, 1463, 1469, 1471, 1485, 1487, 1492, 1518, 1529, 1576, 1590, 1593, 1594, 1598, 1606, 1609, 1617, 1623, 1625, 1640, 1652, 1656, 1668, 1700, 2032, 2054, 2067, 2077, 2082], "realist": [32, 2042], "huggingfac": [32, 2101, 2105], "popular": 32, "gpt2": 32, "llama": [32, 2047], "pipe": [32, 36, 48, 2009, 2072], "pipelinestag": 32, "mynetworkblock": 32, "in_dim": [32, 58, 59, 893, 906, 907, 1165, 1175, 1973, 2045], "out_dim": [32, 893, 906, 907, 1175, 1973, 2011, 2031, 2045], "lin": 32, "mynetwork": 32, "layer_dim": 32, "prev_dim": 32, "setattr": [32, 64, 66, 2013], "num_lay": [32, 734, 760, 1474, 1493, 1539, 1540, 1568, 1570, 2011, 2051], "output_proj": 32, "getattr": [32, 50, 62, 2011, 2044, 2056, 2072], "512": [32, 62, 1567, 1568, 1569, 1570, 1571, 2042, 2092], "1024": [32, 2041, 2042, 2090, 2099], "256": [32, 50, 1442, 1820, 2042, 2061], "mn": [32, 1811], "annotate_split_point": 32, "splitpoint": 32, "layer0": 32, "example_input": [32, 50, 817, 818, 862, 863, 1281, 1285, 2067, 2088, 2090, 2094, 2097, 2098], "example_arg": [32, 50], "submod_0": 32, "interpretermodul": [32, 50], "submod_1": 32, "submod_2": 32, "layer2": [32, 2065], "arg8_1": 32, "acycl": [32, 51, 792, 2039, 2096], "dag": [32, 51, 2042, 2096], "submod_n": 32, "pipe_split": 32, "schedulegpip": 32, "num_chunk": 32, "example_kwarg": [32, 50], "split_spec": 32, "split_polici": 32, "polici": [32, 34, 36, 38, 53, 1179, 1799, 1805], "split_gm": 32, "splitter_qualname_map": 32, "num_stag": 32, "has_loss_and_backward": 32, "loss_spec": 32, "tracer_qualname_map": 32, "args_chunk_spec": 32, "kwargs_chunk_spec": 32, "mod": [32, 50, 51, 62, 721, 722, 732, 738, 739, 740, 745, 746, 756, 764, 810, 811, 812, 813, 836, 837, 865, 1163, 1272, 1273, 1279, 1286, 1763, 1965, 2012, 2013, 2025, 2064, 2087, 2094, 2108], "spec": [32, 36, 37, 48, 50, 51, 64, 793, 794, 819, 820, 821, 824, 825, 826, 2059, 2069, 2083], "mm_param": 32, "argschunkspec": 32, "chunk_dim": 32, "kwargschunkspec": 32, "tensorchunkspec": 32, "split_dim": [32, 2062, 2103], "split_args_kwargs_into_chunk": 32, "kwargs_split": 32, "args_split": 32, "merge_chunk": 32, "chunk_spec": 32, "n_microbatch": 32, "output_merge_spec": 32, "drain": 32, "schedule1f1b": 32, "steadi": 32, "scheduleinterleaved1f1b": 32, "scheduleloopedbf": 32, "arxiv": [32, 34, 1493, 1543, 1570, 1729, 1765, 1813, 1867, 1925, 2039, 2083], "ab": [32, 34, 90, 91, 625, 626, 682, 961, 1106, 1301, 1322, 1323, 1325, 1326, 1339, 1342, 1493, 1543, 1570, 1573, 1575, 1670, 1729, 1765, 1768, 1807, 1813, 1817, 1867, 2009, 2011, 2013, 2030, 2031, 2032, 2042, 2051, 2062, 2077, 2083, 2093, 2094, 2096, 2097, 2099, 2103, 2108], "2211": 32, "05953": 32, "simliar": 32, "colwis": 33, "parallelize_plan": 33, "sub_modul": 33, "parallelstyl": 33, "devicemesh": [33, 2009], "slice": [33, 50, 62, 64, 73, 75, 607, 695, 696, 1182, 1437, 1438, 1439, 1557, 1559, 1563, 1687, 1688, 1764, 1844, 1861, 1862, 1892, 1903, 1955, 2010, 2014, 2032, 2042, 2061, 2062, 2077, 2078, 2081, 2083, 2099, 2103], "colwiseparallel": [33, 2009], "tp_mesh": 33, "w1": [33, 62], "w2": [33, 62], "rowwiseparallel": [33, 2009], "mlp": [33, 1703, 2059, 2067], "input_layout": 33, "output_layout": 33, "use_local_output": 33, "sharded_mod": 33, "mind": [33, 1315, 1333, 1465, 2039, 2045, 2048, 2067, 2090, 2099, 2106], "sequenceparallel": [33, 2009], "sequence_dim": 33, "layernorm": [33, 1477, 1485, 1486, 1487, 1567, 1569, 1571, 1643, 2032, 2069, 2108], "rmsnorm": [33, 1678], "redistribut": [33, 2057], "preparemoduleinput": [33, 2009], "desired_input_layout": 33, "input_kwarg_layout": 33, "desired_input_kwarg_layout": 33, "placehold": [33, 50, 62, 80, 799, 824, 834, 1182, 1184, 1484, 2042, 2094, 2097, 2107], "transformerblock": [33, 2047], "attn": [33, 1569, 1571], "preparemoduleoutput": [33, 2009], "desired_output_layout": 33, "loss_parallel": [33, 2009], "crossentropyloss": [33, 1530, 1612], "logit": [33, 34, 391, 1436, 1458, 1602, 1612, 1631, 2011, 2062, 2078], "truth": [33, 1458, 1612, 2020, 2082], "label_smooth": [33, 1458, 1612, 2011], "dist_input": 33, "distribute_tensor": 33, "randint": [33, 544, 944, 995, 1088, 1149, 1442, 1573, 1612, 1613, 1720, 1721, 1905, 2011, 2015, 2031, 2062, 2082, 2086], "parameteriz": 34, "tensorflow": [34, 1791, 2039, 2082], "backpropag": [34, 921, 1792, 1823, 2046, 2089], "surrog": 34, "likelihood": [34, 1427, 1476, 1530, 1537, 1626, 1665, 1673], "ratio": [34, 36, 617, 1470, 1471, 1624, 1625, 2011, 2042, 2077, 2105], "reinforc": [34, 1553, 1684], "reparameter": [34, 1163, 1729, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751, 1752, 1753, 1765], "trick": [34, 912, 1436, 1631, 2039, 2048, 2050, 2099], "autoencod": 34, "whilst": [34, 2042], "densiti": [34, 258, 301, 1231, 1232, 1887, 2011, 2078], "log_prob": [34, 1427, 1442, 1613, 2011], "theta": [34, 1594, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 2011], "partial": [34, 36, 45, 50, 53, 56, 62, 842, 1051, 1096, 1174, 1182, 1223, 1316, 1317, 1318, 1360, 1519, 1520, 1521, 1657, 1658, 1659, 1713, 1740, 1898, 1904, 2013, 2014, 2031, 2039, 2044, 2047, 2048, 2059, 2061, 2074, 2084, 2104], "pi": [34, 173, 377, 698, 951, 1227, 1228, 1321, 1472, 1537, 1627, 1673, 1797, 1798, 1817, 1878, 1879, 1882, 1883, 1884, 1885, 1920, 2012, 2013, 2064, 2078], "reward": 34, "ascent": 34, "prob": [34, 2011], "policy_network": 34, "next_stat": 34, "rsampl": 34, "parameter": [34, 377, 454, 1276, 2033, 2077], "has_rsampl": 34, "batch_shap": 34, "event_shap": 34, "validate_arg": 34, "arg_constraint": 34, "cdf": 34, "cumul": [34, 36, 1085, 1086, 1087, 1088, 1089, 1349, 1437, 1438, 1439, 1472, 1496, 1497, 1498, 1563, 1627], "mass": 34, "enumerate_support": 34, "discret": [34, 52, 481, 486, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1135, 1136, 1141, 1143, 1631, 1887, 2082, 2086], "cardin": [34, 1371], "univari": 34, "singleton": [34, 254, 1495, 1538, 1712, 1960, 2040], "cartesian": [34, 959, 1371, 1817], "_instanc": 34, "icdf": 34, "perplex": 34, "sample_shap": 34, "sample_n": 34, "set_default_validate_arg": 34, "mimic": [34, 1805], "stddev": 34, "varianc": [34, 995, 1437, 1438, 1439, 1467, 1476, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1563, 1622, 1626, 1723, 1725, 1790, 1791, 1827, 1836, 1837, 1968, 1969, 2037, 2051], "exp_famili": 34, "famili": 34, "p_": [34, 963, 1361, 1793], "langl": 34, "rangl": 34, "denot": [34, 50, 62, 173, 995, 1194, 1290, 1309, 1315, 1328, 1338, 1450, 1451, 1488, 1730, 1733, 1793, 1906, 1907, 1908, 1910, 1911, 1970, 2021, 2048, 2070, 2073, 2077], "carrier": 34, "analyt": [34, 920, 921, 1620, 2077], "bregman": 34, "courtesi": 34, "frank": 34, "nielsen": 34, "richard": 34, "nock": 34, "70": [34, 936, 1328, 1823, 2032], "odd": [34, 1127, 1128, 1129, 1137, 1138, 1139, 1604, 1605, 1606], "interv": [34, 48, 258, 866, 939, 991, 1156, 1385, 1386, 1808, 1832, 1833, 1880, 2026, 2042, 2047, 2066], "lower_bound": 34, "upper_bound": 34, "has_enumerate_support": 34, "param_shap": 34, "concentration1": 34, "concentration0": 34, "concentr": 34, "1046": 34, "1st": [34, 2040, 2047], "2nd": [34, 617, 1531, 1558, 1668, 2040], "greaterthan": 34, "total_count": 34, "71": 34, "trial": [34, 286], "integergreaterthan": 34, "ldot": [34, 286, 1301, 1309, 1340, 1356, 1371, 1495, 1516, 1517, 1518, 1538, 1712, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "unnorm": [34, 1458, 1602, 1612, 1631], "likewis": [34, 1945], "25": [34, 496, 586, 587, 588, 936, 961, 1231, 1337, 1342, 1468, 1526, 1528, 1531, 1703, 1713, 1758, 1760, 1783, 1805, 1824, 1967, 2010, 2077, 2078], "independentconstraint": 34, "simplex": 34, "loc": [34, 1341], "lorentz": 34, "3214": 34, "width": [34, 779, 785, 859, 1230, 1231, 1232, 1433, 1434, 1451, 1452, 1454, 1455, 1491, 1492, 1517, 1518, 1530, 1558, 1576, 1640, 1700, 2031, 2077], "df": 34, "chi": 34, "continuous_bernoulli": 34, "lim": [34, 1266], "499": 34, "501": 34, "2538": [34, 1301], "pervas": 34, "loaiza": 34, "ganem": 34, "cunningham": 34, "jp": 34, "1907": 34, "06845": 34, "8954": 34, "greaterthaneq": 34, "df1": 34, "df2": 34, "fisher": 34, "snedecor": 34, "2453": 34, "degre": [34, 995, 1083, 1090, 1269, 1307, 1308, 1523, 1532, 1572, 1713, 1831, 1851, 1918, 1919, 1968, 1969, 2011, 2048, 2062, 2077], "freedom": [34, 995, 1918, 1919, 1968, 1969, 2048], "geometric_": [34, 2011, 2086], "0124": 34, "half_cauchi": 34, "half_norm": 34, "base_distribut": 34, "reinterpreted_batch_ndim": 34, "reinterpret": [34, 499, 2098], "diagon": [34, 58, 224, 260, 595, 596, 597, 598, 952, 991, 995, 1093, 1094, 1095, 1097, 1106, 1119, 1168, 1169, 1213, 1299, 1311, 1313, 1316, 1328, 1332, 1584, 1585, 1586, 1670, 1681, 1904, 1944, 1948, 1949, 1950, 1951, 1952, 2011, 2044, 2062, 2081, 2103], "multivari": [34, 1409, 2078], "multivariate_norm": 34, "mvn": 34, "scale_tril": 34, "diag": [34, 59, 1167, 1168, 1169, 1305, 1306, 1333, 1813, 1904, 1924, 1925, 2011, 2062], "diagn": 34, "inverse_gamma": 34, "2953": 34, "1729": [34, 2051], "lkj_choleski": 34, "lkj": 34, "matric": [34, 260, 686, 689, 941, 953, 954, 963, 964, 965, 966, 1094, 1213, 1290, 1299, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1342, 1350, 1359, 1361, 1374, 1473, 1532, 1594, 1628, 1727, 1733, 1811, 1813, 1823, 1871, 1897, 1901, 1902, 1924, 1925, 1948, 1949, 1951, 2011, 2030, 2048, 2054, 2077, 2083], "eta": [34, 1777, 1779, 1792], "proport": [34, 1490, 1491, 1492, 1529, 1571], "det": [34, 1307, 1308, 1329, 1350, 2011, 2062], "l": [34, 735, 760, 942, 951, 957, 964, 965, 966, 1106, 1227, 1228, 1269, 1289, 1299, 1300, 1305, 1306, 1307, 1308, 1312, 1316, 1317, 1359, 1361, 1432, 1435, 1436, 1437, 1450, 1458, 1461, 1462, 1469, 1474, 1482, 1483, 1485, 1488, 1489, 1493, 1505, 1514, 1516, 1523, 1525, 1529, 1530, 1539, 1555, 1572, 1573, 1575, 1681, 1739, 1748, 1756, 1758, 1783, 1859, 1920, 2011, 2013, 2039, 2082, 2096, 2097, 2108], "lkjcorr": 34, "onion": 34, "3x3": [34, 1089, 1946], "3516": 34, "9361": 34, "1899": [34, 1372], "4748": 34, "8593": 34, "vine": 34, "2009": [34, 1813, 1925], "lewandowski": 34, "dorota": 34, "kurowicka": 34, "harri": [34, 1887], "joe": 34, "journal": [34, 1830], "1016": 34, "jmva": 34, "04": [34, 1149, 1347, 1880, 1887], "008": 34, "corrcholeski": 34, "log_norm": [34, 2062], "lowrank_multivariate_norm": 34, "cov_factor": 34, "cov_diag": 34, "covari": [34, 954, 991, 995, 1437, 1438, 1439, 1563, 1813], "covariance_matrix": 34, "2102": 34, "5429": [34, 1948], "woodburi": 34, "lemma": 34, "formula": [34, 88, 768, 769, 890, 892, 906, 907, 942, 951, 1227, 1228, 1295, 1361, 1362, 1537, 1597, 1598, 1688, 1793, 1826, 1879, 2017, 2044, 2048, 2066, 2071, 2077, 2095], "capacit": 34, "precision_matrix": 34, "mixture_same_famili": 34, "mixture_distribut": 34, "component_distribut": 34, "rightmost": [34, 954, 1231, 1232, 2013], "gaussian": [34, 1472, 1476, 1553, 1626, 1627, 1684, 1886, 2078], "gmm": 34, "bivari": 34, "categori": [34, 38, 84, 2013, 2015, 2061, 2063, 2066, 2068, 2080, 2102, 2104], "innermost": [34, 62, 233, 1223, 1232, 1859], "1338": 34, "mathbf": [34, 1290, 1728, 1729, 1762, 1765, 1792], "sigma": [34, 173, 377, 760, 1436, 1473, 1474, 1475, 1493, 1494, 1553, 1554, 1628, 1684, 1728, 1762, 1881, 1918, 1919, 1968, 1969, 2011], "triangular": [34, 964, 965, 966, 1299, 1300, 1306, 1308, 1316, 1317, 1324, 1327, 1328, 1330, 1332, 1583, 1584, 1585, 1586, 1670, 1799, 1823, 1948, 1949, 1950, 1951, 1952], "decomposit": [34, 50, 51, 62, 81, 964, 965, 966, 1213, 1299, 1300, 1305, 1306, 1307, 1308, 1309, 1311, 1316, 1317, 1318, 1319, 1324, 1328, 1329, 1333, 1334, 1359, 1361, 1727, 1811, 1813, 1817, 1823, 1924, 1925, 2009, 2054, 2095, 2098, 2107], "positivedefinit": 34, "lowercholeski": 34, "negative_binomi": 34, "halfopeninterv": 34, "mu": [34, 377, 1791, 1793], "one_hot_categor": 34, "onehot": 34, "5623": 34, "nonneg": [34, 1573, 1813, 1925, 2078], "pmf": 34, "mathrm": [34, 943, 1307, 1308, 1309, 1310, 1321, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1532, 1537, 1538, 1563, 1712, 1727, 1780, 1781, 1782, 1792, 1827, 2039, 2078], "relaxed_bernoulli": 34, "temperatur": [34, 1631, 2009], "parametr": [34, 1163, 1730, 1737, 1762, 1763, 1765, 2033, 2044], "relax": [34, 1006, 1040, 1285, 1286, 1733, 2067, 2099], "reparametriz": 34, "99": [34, 1281, 1791, 2010], "2951": [34, 1369], "3442": 34, "8918": 34, "9021": 34, "maddison": 34, "2017": [34, 1567, 1569, 1571, 1905, 2057], "reparametr": [34, 1631, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1765], "jang": 34, "relaxed_categor": 34, "1294": [34, 964], "2324": [34, 1269, 1523], "3859": 34, "2523": 34, "student": 34, "transformed_distribut": 34, "composit": [34, 58, 1167, 1317, 1727, 2010, 2013, 2017, 2045, 2051, 2061], "basedistribut": 34, "dx": [34, 1089, 1435, 1946, 2011, 2044, 2045, 2078], "dy": 34, "logist": [34, 1553, 1556, 1684, 2078], "sigmoidtransform": 34, "affinetransform": 34, "invert": [34, 62, 1260, 1301, 1310, 1311, 1317, 1323, 1330, 1332, 1335, 1336, 1350, 1519, 1520, 1521, 1948, 2011, 2054, 2072], "3418": 34, "upper": [34, 50, 51, 64, 72, 73, 74, 75, 181, 182, 183, 594, 795, 952, 957, 964, 965, 966, 968, 1120, 1121, 1188, 1230, 1231, 1299, 1300, 1306, 1308, 1316, 1317, 1328, 1332, 1542, 1584, 1586, 1670, 1679, 1680, 1681, 1799, 1805, 1823, 1838, 1859, 1948, 1951, 1952, 2011, 2037, 2062, 2078, 2084], "von_mis": 34, "circular": [34, 1444, 1445, 1446, 1450, 1451, 1452, 1499, 1500, 1501, 1668], "von": 34, "mise": 34, "unconstrain": [34, 1733], "angl": [34, 755, 885, 1090, 1350, 1509, 1817, 1831, 1874, 2009, 2011, 2062, 2077], "9777": 34, "radian": [34, 698, 885, 1090, 1831, 2011, 2062], "simul": [34, 488, 799, 801, 2066, 2067, 2070, 2095], "1979": 34, "152": [34, 617], "157": 34, "_rejection_sampl": 34, "88443": 34, "4784": [34, 1374], "symmetr": [34, 802, 820, 942, 951, 964, 965, 966, 1127, 1128, 1129, 1134, 1136, 1140, 1141, 1143, 1227, 1228, 1289, 1299, 1300, 1305, 1306, 1308, 1312, 1313, 1314, 1321, 1324, 1327, 1333, 1342, 1727, 1733, 1805, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2067, 2070], "x_ij": 34, "wu": [34, 1342], "chu": 34, "2018": [34, 1342, 1821], "sawyer": 34, "2007": 34, "anderson": 34, "w": [34, 59, 150, 760, 890, 892, 894, 901, 904, 906, 907, 915, 942, 951, 995, 1165, 1186, 1210, 1227, 1228, 1266, 1309, 1425, 1426, 1433, 1434, 1436, 1438, 1439, 1443, 1451, 1452, 1458, 1462, 1463, 1465, 1466, 1467, 1474, 1486, 1487, 1495, 1506, 1507, 1517, 1518, 1528, 1529, 1530, 1535, 1536, 1558, 1574, 1575, 1577, 1578, 1594, 1602, 1620, 1621, 1629, 1665, 1671, 1672, 1728, 1729, 1762, 1765, 2011, 2017, 2030, 2031, 2037, 2039, 2044, 2048, 2063, 2064, 2082, 2106], "2003": 34, "ed": [34, 58, 1461, 1462, 2039, 2064, 2089, 2106, 2109], "odel": 34, "feiveson": 34, "1966": 34, "samplecovari": 34, "jasa": 34, "61": 34, "313": 34, "199": 34, "203": [34, 617], "ku": 34, "bloomfield": 34, "2010": [34, 2037], "ox": 34, "max_try_correct": 34, "bartlett": [34, 942], "singular": [34, 1301, 1315, 1316, 1322, 1324, 1326, 1327, 1333, 1334, 1342, 1350, 1359, 1728, 1733, 1813, 1924, 1925, 2054], "inf": [34, 50, 53, 258, 684, 686, 689, 690, 691, 886, 941, 957, 1258, 1259, 1261, 1263, 1264, 1301, 1316, 1322, 1326, 1329, 1339, 1350, 1413, 1513, 1557, 1567, 1681, 1718, 1739, 1748, 1768, 1852, 1859, 2038, 2039, 2045, 2054, 2078, 2084, 2108], "accordingli": [34, 62, 1279, 1493, 1733, 2032, 2072, 2104], "kl_diverg": 34, "kullback": [34, 1488, 1641], "leibler": [34, 1488, 1641], "notimplementederror": [34, 2017, 2021, 2064], "register_kl": 34, "type_p": 34, "type_q": 34, "pairwis": [34, 1482, 1532, 1572], "kl_normal_norm": 34, "ambigu": [34, 62, 1254, 1453, 1454, 1455, 1469, 1519, 1520, 1521, 1576, 2013], "runtimewarn": 34, "basep": 34, "derivedq": 34, "kl_version1": 34, "derivedp": 34, "baseq": 34, "kl_version2": 34, "tie": 34, "abstransform": 34, "cache_s": 34, "event_dim": 34, "affin": [34, 53, 472, 473, 474, 475, 476, 749, 751, 752, 753, 802, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1496, 1497, 1498, 1505, 1506, 1507, 1538, 1563, 1594, 1712, 2042, 2051], "cattransform": 34, "tseq": 34, "functor": [34, 1048, 1049], "submatrix": 34, "x0": [34, 2101], "t0": [34, 50, 1223, 1777, 2012], "exptransform": 34, "identity_transform": 34, "composetransform": 34, "corrcholeskytransform": 34, "uncontrain": 34, "euclidean": [34, 961, 1666], "x_i": [34, 58, 968, 1085, 1086, 1087, 1088, 1338, 1345, 1513, 1532, 1557, 1559, 1572, 1649, 1687, 1820, 1903, 1918, 1919, 1946, 1968, 1969, 1970, 2078], "stickbreakingtransform": 34, "r_i": 34, "tanh": [34, 577, 760, 765, 795, 886, 1472, 1474, 1475, 1493, 1494, 1522, 1539, 1541, 1565, 1627, 1660, 1693, 2011, 2030, 2031, 2037, 2062, 2069, 2077, 2103], "unsign": [34, 2070, 2080, 2083, 2084, 2099], "z_i": 34, "s_i": 34, "y_i": [34, 968, 1085, 1086, 1087, 1088, 1338, 1345, 1572, 1946, 1970, 2048], "sqrt": [34, 62, 377, 549, 673, 674, 760, 991, 1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1236, 1289, 1371, 1437, 1438, 1439, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1472, 1474, 1475, 1477, 1485, 1486, 1487, 1490, 1491, 1492, 1493, 1494, 1495, 1508, 1510, 1538, 1539, 1541, 1563, 1627, 1681, 1712, 1733, 1778, 1779, 1780, 1781, 1784, 1790, 1791, 1827, 1854, 1886, 1918, 1919, 2011, 2030, 2037, 2038, 2039, 2062, 2077, 2078, 2084, 2103], "cumulativedistributiontransform": 34, "copula": 34, "base_dist": 34, "independenttransform": 34, "base_transform": 34, "log_abs_det_jacobian": 34, "lowercholeskytransform": 34, "positivedefinitetransform": 34, "powertransform": 34, "expon": [34, 268, 269, 280, 468, 469, 1149, 1156, 1293, 1323, 1427, 1511, 1666, 1820, 1830, 1867, 2011, 2080, 2083, 2103], "reshapetransform": 34, "in_shap": 34, "out_shap": 34, "softplustransform": 34, "tanhtransform": 34, "softmaxtransform": 34, "biject": 34, "hmc": 34, "stacktransform": 34, "stick": [34, 2063], "aris": [34, 62, 2039, 2095], "memoiz": [34, 2098], "_call": 34, "_invers": 34, "codomain": [34, 2039], "iff": [34, 1529], "weaker": [34, 2042], "pseudoinvers": [34, 1310, 1327, 1335], "monoton": [34, 1522, 1660, 1859], "forward_shap": 34, "inverse_shap": 34, "corr_choleski": 34, "greater_than": 34, "greater_than_eq": 34, "integer_interv": 34, "less_than": 34, "lower_choleski": 34, "lower_triangular": 34, "nonnegative_integ": 34, "one_hot": [34, 2011, 2062], "positive_integ": 34, "positive_semidefinit": 34, "positive_definit": 34, "real_vector": 34, "unit_interv": 34, "is_discret": 34, "constrain": [34, 1188, 1195, 1560, 2013, 2051], "_cat": 34, "dependent_properti": 34, "_dependentproperti": 34, "_greaterthan": 34, "_greaterthaneq": 34, "_independentconstraint": 34, "_integerinterv": 34, "_interv": 34, "half_open_interv": 34, "_halfopeninterv": 34, "_lessthan": 34, "_multinomi": 34, "_stack": [34, 2062], "constraintregistri": 34, "biject_to": 34, "transform_to": 34, "overparameter": 34, "rotat": [34, 1851, 1924], "hamiltonian": 34, "mont": 34, "carlo": 34, "invari": [34, 50, 1754, 1899, 1906, 1907, 1908, 1909, 1910, 1911, 2074, 2077, 2093, 2107], "potential_energi": 34, "cheap": [34, 1184, 1427, 2099], "svi": 34, "fewer": [34, 50, 58, 693, 695, 696, 699, 967, 1290, 1291, 1357, 1367, 1369, 1370, 1372, 1375, 1414, 1417, 1476, 1611, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 1821, 1905, 1918, 1919, 1923, 1942, 1968, 1969, 2019, 2040, 2056, 2084, 2110], "my_constraint": 34, "my_transform": 34, "myconstraintclass": 34, "my_factori": 34, "mytransform": 34, "param1": [34, 2051], "param2": [34, 2051], "constraint_registri": 34, "my_registri": 34, "construct_transform": 34, "myconstraint": 34, "from_dlpack": [35, 881, 2009], "ext_tensor": [35, 1157], "extern": [35, 1009, 1157, 1285, 1964, 2026, 2041, 2042, 2054, 2059, 2061, 2089], "immut": [35, 1157, 2013], "__dlpack__": [35, 1157], "capsul": [35, 881, 1157], "pycapsul": [35, 1157], "to_dlpack": [35, 1157, 2009], "t2": [35, 687, 688, 881, 1157, 1223, 1713, 1966, 2072, 2073], "dltensor": [35, 1157], "t3": [35, 1157, 2073], "idiomat": 35, "inde": [35, 2010, 2020, 2064, 2074, 2104], "plane": [36, 45, 738, 739, 740, 741, 742, 743, 766, 767, 768, 769, 772, 773, 774, 782, 783, 1094, 1424, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1450, 1451, 1452, 1453, 1454, 1455, 1470, 1471, 1490, 1491, 1492, 1495, 1511, 1516, 1517, 1518, 1588, 1589, 1590, 1591, 1592, 1593, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1624, 1625, 1647, 1650, 1651, 1652, 1654, 1655, 1656, 1729, 1765, 1828, 1829, 1851], "monitor": [36, 46, 48, 86, 1008, 1382, 1807, 1978, 2009, 2042, 2049], "unhealthi": 36, "tear": 36, "react": [36, 2104], "decentr": 36, "diagram": [36, 45, 1269, 1523, 2067, 2074, 2097, 2099, 2108], "elasticag": 36, "quad": [36, 1435, 1436, 1458, 1489, 1514, 1530, 1573, 1836], "group_result": 36, "is_fail": [36, 37], "exit_cod": 36, "return_valu": [36, 37, 43, 2096, 2097], "get_worker_group": 36, "workergroup": [36, 46], "mutabl": [36, 1285, 2010, 2017, 2064, 2082], "implementor": 36, "defens": 36, "retri": [36, 38, 48, 1062, 2072, 2074], "max_restart": [36, 37, 46], "runresult": 36, "workerspec": [36, 37, 46, 48], "local_world_s": [36, 37, 46], "rdzv_handler": [36, 37, 45], "monitor_interv": [36, 37], "local_addr": [36, 45], "blueprint": 36, "homogen": [36, 46], "rendezvoushandl": [36, 37, 45, 46], "rdzv": [36, 44, 46], "chose": [36, 2038, 2095], "tee": [36, 43], "consol": [36, 39, 42, 43, 46, 2082], "get_entrypoint_nam": 36, "__qualname__": 36, "workerst": 36, "unknown": [36, 51, 1715, 1716, 2074], "unrecover": 36, "interrupt": [36, 2029, 2106], "succeed": [36, 45, 1359, 2096, 2099], "uncaught": [36, 38], "unhandl": 36, "recov": [36, 899, 1127, 1329, 1361, 1713, 1754, 1920, 2038, 2042, 2046, 2048, 2068], "is_run": 36, "role_rank": [36, 46], "role_world_s": [36, 46], "pid": [36, 38, 46, 48, 1563, 2046, 2066], "local_elastic_ag": 36, "localelasticag": [36, 37, 48], "logs_spec": [36, 43], "start_method": [36, 37, 43, 48, 2029], "exit_barrier_timeout": 36, "log_line_prefix_templ": 36, "advis": [36, 544, 617, 866, 2053], "torchelastic_enable_file_tim": 36, "torchelastic_timer_fil": 36, "role_nam": 36, "trainer0": [36, 2072], "foobar": [36, 38, 42, 43], "templat": [36, 973, 1048, 1049, 2063], "substitut": [36, 45, 62, 81, 1282, 2039, 2080], "shared_queu": 36, "get_context": [36, 48, 2053], "nproc_per_process": 36, "other_param": [36, 48], "usr": [36, 43, 45, 2042], "bin": [36, 43, 45, 300, 301, 819, 944, 1230, 1231, 1232, 2011, 2013, 2062, 2082, 2105], "simpleelasticag": 36, "scaffold": [36, 2096], "_assign_worker_rank": 36, "group_world_s": 36, "role_info": 36, "front": [36, 254, 973, 1342, 1526, 2031, 2045], "base_global_rank": 36, "_exit_barri": 36, "guard": [36, 64, 69, 73, 680, 973, 1183, 1184, 1188, 1194, 1196, 1197, 1198, 1204, 1205, 1208, 1209, 2019, 2053, 2062, 2064, 2086, 2099, 2104, 2108, 2109], "_initialize_work": 36, "worker_group": 36, "fresh": [36, 62, 1097, 1187, 1190, 1862, 1892, 2008], "start_work": 36, "_stop_work": 36, "optimist": 36, "deleg": [36, 2096], "_monitor_work": 36, "_rendezv": 36, "_restart_work": 36, "_shutdown": 36, "death_sig": 36, "sigterm": 36, "is_restart": 36, "_start_work": [36, 43], "gracefulli": [36, 45, 46, 58, 1300, 2045, 2099], "meaning": [36, 38, 39, 1062, 2042, 2102], "meaningless": 36, "intention": [36, 1103, 1970, 2049, 2072], "torchelastic_health_check_port": 36, "tcp": [36, 45, 46, 2072], "health_check_serv": 36, "healthcheckserv": 36, "alive_callback": 36, "dead": [36, 62, 2107], "create_healthcheck_serv": 36, "ship": [37, 1164, 2041, 2072], "programmat": [37, 62, 2051], "my_launch": 37, "argv": [37, 49], "trainer_entrypoint_fn": 37, "fn_arg": 37, "run_result": 37, "tricki": [37, 54, 59, 2039, 2051, 2074, 2093, 2096], "myrendezvoushandl": 37, "elastic_ag": 37, "servic": [37, 2043, 2095], "metrichandl": [37, 42], "mymetrichandl": 37, "metric_data": [37, 42], "metricdata": 37, "sink": [37, 42, 2026], "eventhandl": 37, "cloudwatch": 37, "nulleventhandl": 37, "myeventhandl": 37, "invalid": [38, 43, 976, 1269, 1523, 2038, 2039, 2055, 2059, 2061, 2064, 2065, 2098], "infra": [38, 2107], "start_process": [38, 43, 2029], "torchelastic_error_fil": 38, "smallest": [38, 51, 962, 1291, 1301, 1322, 1326, 1342, 1822, 1943, 2084, 2108, 2112], "timestamp": [38, 39, 42, 46, 2026, 2066, 2082, 2108], "error_handl": 38, "sugar": [38, 2012], "get_error_handl": 38, "childfailederror": 38, "get_first_failur": 38, "dump_error_fil": 38, "error_fil": [38, 43], "exitcod": [38, 46], "nanni": 38, "accur": [38, 927, 1008, 1223, 1345, 1382, 1436, 1464, 1830, 1946, 2017, 2025, 2042, 2073, 2089, 2098], "diagnost": [38, 79, 80, 81, 82, 83, 86, 680, 2010], "torchelastic_ag": 38, "trainer_0": 38, "trainer_1": 38, "json": [38, 43, 48, 2050, 2066, 2102, 2106], "trainer_n": 38, "errorhandl": 38, "record_except": 38, "processfailur": 38, "test_ev": 39, "eventsourc": 39, "get_logging_handl": 39, "millisecond": [39, 42, 1008, 1382, 1978, 2026], "eventmetadatavalu": 39, "readm": [40, 41, 62, 792, 2032], "telemetri": 42, "timeseri": 42, "metric_group": 42, "metric_nam": 42, "sensibl": 42, "my_modul": [42, 51, 53, 62, 2010, 2064], "nullmetricshandl": 42, "consolemetricshandl": 42, "my_method": 42, "put_metr": 42, "calculate_lat": 42, "succinctli": 42, "baz": [42, 62, 855, 2064, 2084], "leaf_modul": 42, "classnam": [42, 2013], "threw": [42, 2110], "my_app": 42, "consolemetrichandl": 42, "toi": [42, 2108], "stdout": [42, 43, 47, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 2061], "stdoutmetrichandl": 42, "1574213883": 42, "4182858": 42, "my_metr": 42, "1574213940": 42, "5237644": 42, "nullmetrichandl": 42, "class_nam": [42, 62], "def_nam": 42, "leaf": [42, 51, 150, 222, 335, 448, 488, 503, 504, 791, 838, 840, 880, 894, 1173, 1775, 1939, 2032, 2038, 2039, 2047, 2061, 2088, 2098], "metric_valu": 42, "metric_group_nam": 42, "popen": [43, 47], "log_dir": [43, 2026, 2082], "stderr": [43, 47, 2008, 2024], "err": 43, "echo": 43, "hello": [43, 58, 2012, 2064, 2096], "pcontext": 43, "multiprocesscontext": 43, "subprocesscontext": 43, "log_line_prefix": 43, "keyset": 43, "bitmask": 43, "bar0": 43, "bar1": 43, "file1": 43, "file2": 43, "caution": [43, 2100], "short": [43, 62, 734, 763, 1106, 1197, 1266, 1442, 1493, 1494, 1613, 1774, 1871, 1920, 2012, 2017, 2030, 2039, 2040, 2051, 2072, 2079, 2080, 2083, 2096, 2097], "ing": 43, "cmd": [43, 46], "forkserv": [43, 1713, 2029, 2053], "local_ranks_filt": 43, "processcontext": [43, 2029], "superset": [43, 46, 2017], "tee_stdout": 43, "tee_stderr": 43, "runprocsresult": 43, "defaultlogsspec": 43, "logsspec": 43, "reifi": 43, "rdzv_run_id": 43, "attempt_": 43, "logsdest": 43, "num_nod": [44, 46], "trainers_per_nod": 44, "num_allowed_failur": 44, "job_id": [44, 45, 46], "endpoint": [44, 45, 46], "host_node_addr": [44, 46], "min_siz": [44, 46], "num_allowed_failures_or_membership_chang": 44, "node1": [44, 46], "29400": [44, 46], "sidecar": [44, 45], "agre": [45, 1328, 2074], "resum": [45, 1799, 1805, 1807, 2072, 2074, 2082, 2097, 2099], "retryabl": 45, "announc": 45, "lose": [45, 49, 53, 191, 208, 2031], "train_loop": [45, 863], "arriv": [45, 46, 2072, 2074], "dynamicrendezvoushandl": 45, "rendezvousbackend": 45, "c10drendezvousbackend": 45, "etcdrendezvousbackend": 45, "supersed": [45, 1186], "etcdrendezvoushandl": 45, "my_run_id": 45, "from_backend": 45, "run_id": [45, 46, 48], "min_nod": 45, "max_nod": 45, "rendezvousparamet": 45, "admit": [45, 46, 2042], "get_as_bool": 45, "get_as_int": 45, "rendezvoushandlerregistri": 45, "create_handl": 45, "creator": [45, 2039, 2072, 2074], "get_run_id": 45, "is_clos": 45, "set_clos": 45, "next_rendezv": 45, "rendezvousclosederror": 45, "rendezvousconnectionerror": 45, "rendezvousstateerror": 45, "rendezvoustimeouterror": 45, "num_nodes_wait": 45, "shutdown": [45, 2009, 2022, 2072, 2073], "rendezvouserror": 45, "rendezvousgracefulexiterror": 45, "dynamic_rendezv": 45, "join_timeout": 45, "600": 45, "last_call_timeout": 45, "close_timeout": 45, "rendezvoustimeout": 45, "get_stat": [45, 88, 2042], "fenc": 45, "token": [45, 1006, 1040, 1041, 1051, 2008, 2014, 2101, 2103], "set_stat": [45, 88, 2042], "last_cal": 45, "heartbeat": 45, "keep_al": 45, "c10d_rendezvous_backend": 45, "create_backend": 45, "store_typ": 45, "read_timeout": 45, "60": [45, 48, 936, 1476, 1809, 1936, 1941, 2026, 2072, 2097], "is_host": 45, "skip": [45, 51, 860, 975, 1106, 1160, 1192, 1299, 1300, 1432, 1433, 1434, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1892, 1963, 2010, 2038, 2039, 2042, 2043, 2044, 2051, 2063, 2066, 2072, 2095, 2099, 2100, 2106], "cname": 45, "fqdn": [45, 46], "etcd_rendezvous_backend": 45, "ssl_cert": 45, "ssl": 45, "certif": 45, "ssl_cert_kei": 45, "privat": [45, 53, 1184, 2042, 2044, 2064, 2093, 2099], "ca_cert": 45, "rool": 45, "key_prefix": 45, "ttl": 45, "hour": 45, "etcd_rendezv": 45, "rdzv_impl": 45, "etcdrendezv": 45, "etcd_address": 45, "min_work": 45, "max_work": 45, "noqa": 45, "w605": 45, "2379": [45, 1367], "etcd_prefix": 45, "etcdstor": 45, "etcd_stor": 45, "etcd_client": 45, "etcd_store_prefix": 45, "piggyback": 45, "num": [45, 745, 746, 760, 1409, 1474, 1477, 1493, 1529, 1539, 1567, 2053], "lookuperror": 45, "override_timeout": 45, "etcdserv": 45, "cumbersom": [45, 2013], "highli": [45, 1427, 1713, 2008, 2052, 2059, 2061, 2077, 2084, 2111], "etcd_serv": 45, "data_dir": 45, "v3": [45, 46], "torchelastic_etcd_binary_path": 45, "get_client": 45, "etcd_binary_path": 45, "entry_point": [46, 2094], "train_script": 46, "aforment": 46, "suffic": [46, 62], "compliant": [46, 49], "num_train": 46, "wors": [46, 1807, 1961, 2099], "port_k": 46, "etcd": 46, "v2": [46, 1338, 1812, 2008], "revis": 46, "physic": [46, 233, 1124, 1142, 2014, 2041, 2053, 2077, 2099], "localworkergroup": 46, "rdzv_id": 46, "rdzv_backend": [46, 49], "rdzv_endpoint": [46, 49], "max_nnod": 46, "torchelastic_restart_count": 46, "far": [46, 1279, 1629, 2095], "torchelastic_max_restart": 46, "python_exec": 46, "gang": 46, "departur": 46, "surviv": 46, "kill": [46, 48, 2029, 2046], "frequenc": [46, 944, 995, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1266, 1427, 1465, 1466, 1620, 1621, 1799, 1920, 2107], "ness": [46, 2098], "load_checkpoint": [46, 49], "checkpoint_path": [46, 49], "dataset": [46, 49, 64, 798, 1427, 1436, 1488, 2009, 2046, 2050, 2053, 2057, 2063, 2067, 2068, 2082], "train_step": 46, "should_checkpoint": 46, "save_checkpoint": [46, 49], "subprocess_handl": 47, "get_subprocess_handl": 47, "local_rank_id": 47, "meta": [47, 51, 53, 57, 62, 336, 1192, 2009, 2017, 2059, 2072, 2080, 2082, 2084, 2095, 2098, 2100, 2107], "fd": [47, 2082], "acquir": [48, 62, 2051, 2074, 2077], "deadlin": 48, "message_queu": 48, "localtimerserv": 48, "max_interv": 48, "trainer_func": 48, "localtimercli": 48, "expiri": 48, "timer_cli": 48, "countdown": 48, "timefram": [48, 2072], "elig": [48, 2074], "reap": 48, "timerserv": 48, "mp_queue": 48, "daemon": [48, 2029], "filetimerserv": 48, "file_path": 48, "log_ev": [48, 2026], "filetimercli": 48, "fifo": 48, "watchdog": 48, "filetimerrequest": 48, "sigkil": 48, "named_pip": 48, "mkfifo": 48, "timercli": 48, "timerrequest": 48, "scope_id": 48, "expiration_tim": 48, "acquisit": 48, "whatev": [48, 62, 448, 1183, 1713, 1863, 1948, 2013, 2045, 2098, 2099], "request_queu": 48, "entiti": [48, 62], "clear_tim": 48, "get_expired_tim": 48, "register_tim": 48, "timer_request": 48, "debug_info_log": 48, "log_debug_info_for_expired_tim": 48, "expired_tim": 48, "use_env": 49, "expositori": 49, "worst": [49, 2044], "total_num_epoch": 49, "visit": [49, 2061, 2102], "WILL": 50, "BE": 50, "aot": [50, 680, 975, 2019, 2089, 2090, 2099, 2100, 2108], "exported_program": [50, 2059], "exportedprogram": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "arg1_1": 50, "exportgraphsignatur": [50, 51, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "user_input": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "user_output": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "inputs_to_paramet": 50, "inputs_to_buff": 50, "buffers_to_mut": 50, "backward_signatur": 50, "assertion_dep_token": 50, "sound": [50, 62, 975, 976, 1179, 1552, 2082, 2100, 2108], "convent": [50, 53, 62, 335, 962, 1106, 1124, 1126, 1150, 1173, 1182, 1184, 1437, 1438, 1439, 1485, 1486, 1487, 1563, 1852, 1855, 1954, 2008, 2024, 2032, 2039, 2048, 2051, 2056], "alias": [50, 53, 899, 1164, 1175, 1640, 1973, 2012, 2013, 2017, 2044, 2098], "stacktrac": [50, 51, 64, 73, 74, 75], "leverag": [50, 973, 2058, 2059, 2072, 2089, 2092, 2096, 2101, 2111], "_dynamo": [50, 64, 75, 973, 980, 2043, 2089, 2093, 2094, 2095, 2096, 2097, 2104, 2106, 2108], "massiv": [50, 2096], "pt2": [50, 2095, 2098], "artifact": [50, 680, 1920, 2019, 2050, 2064, 2090, 2096, 2106, 2108], "untrac": [50, 62], "disjoint": [50, 2010], "usabl": [50, 61, 2013, 2060, 2061, 2096, 2097], "traceabl": [50, 62, 624, 817, 1189, 2010, 2017, 2067, 2095], "symbolic_trac": [50, 51, 62, 2067], "comprehens": [50, 81, 1887, 2013, 2014, 2031, 2042, 2049, 2067, 2090], "simpler": [50, 59, 1175, 1973, 2010, 2039, 2044, 2048, 2051, 2096], "straight": [50, 1435, 1631], "conv": [50, 62, 702, 703, 704, 705, 706, 707, 708, 709, 710, 792, 793, 796, 814, 855, 861, 1269, 1279, 1285, 1286, 1450, 1451, 1452, 1453, 1454, 1455, 1523, 1524, 1530, 1722, 1723, 1725, 2023, 2037, 2042, 2054, 2061, 2067, 2068, 2069, 2070, 2102, 2104], "in_channel": [50, 712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 730, 731, 738, 739, 740, 741, 742, 743, 1279, 1450, 1451, 1452, 1453, 1454, 1455, 1499, 1500, 1501, 1502, 1503, 1504], "out_channel": [50, 712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 730, 731, 738, 739, 740, 741, 742, 743, 1279, 1450, 1451, 1452, 1453, 1454, 1455, 1499, 1500, 1501, 1502, 1503, 1504], "kernel_s": [50, 712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 730, 731, 738, 739, 740, 741, 742, 743, 768, 769, 782, 783, 1269, 1279, 1432, 1433, 1434, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1470, 1471, 1490, 1491, 1492, 1499, 1500, 1501, 1502, 1503, 1504, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1575, 1596, 1597, 1598, 1607, 1608, 1609, 1623, 1624, 1625, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1699, 1828, 1829, 2011, 2082, 2103], "maxpool": [50, 796, 1470, 1471, 1624, 1625, 2061], "maxpool2d": [50, 783, 1520, 1524, 1655, 1658, 2061, 2069], "arg2_1": 50, "arg3_1": 50, "max_pool2d_with_indic": [50, 2011, 2062, 2103], "getitem": [50, 64, 67, 72, 73, 76, 2096, 2107], "85": [50, 62, 1526, 1805, 2102, 2106], "l__self___conv": 50, "lift": [50, 51, 59, 1175, 1973, 2031, 2062, 2098], "get_attr": [50, 62, 80, 1182], "harden": 50, "oncal": 50, "proxytensor": 50, "contextlib": [50, 64, 68], "contextmanag": 50, "__enter__": [50, 2013], "__exit__": [50, 62, 2013, 2014, 2064], "exc_typ": [50, 2014], "exc_valu": [50, 2014], "exc": 50, "expot": 50, "branch1": 50, "64": [50, 56, 57, 59, 936, 1088, 1168, 1169, 1173, 1424, 1425, 1426, 1428, 1429, 1430, 1436, 1552, 1681, 1860, 1963, 2017, 2032, 2056, 2057, 2059, 2061, 2067, 2071, 2077, 2080, 2082, 2083, 2099, 2101], "branch2": 50, "128": [50, 617, 720, 728, 729, 756, 764, 794, 819, 820, 1440, 1457, 1484, 1510, 1532, 1572, 1573, 1611, 1681, 2031, 2032, 2059, 2067, 2069, 2070, 2072, 2077, 2080, 2083, 2106], "x2": [50, 64, 70, 961, 1317, 1515, 1572, 1573, 1611, 1669, 2011, 2103], "out1": [50, 1164, 2011, 2099], "out2": [50, 1164, 2011, 2099], "arg4_1": 50, "arg5_1": 50, "arg6_1": 50, "permute_1": 50, "addmm_1": 50, "relu_1": [50, 62], "l__self___buff": 50, "rangeconstraint": [50, 51], "min_val": [50, 778, 1481, 1635, 1636, 2011, 2103], "max_val": [50, 778, 1481, 1635, 1636, 2011, 2103], "9223372036854775806": [50, 64, 72, 73], "range_constraint": [50, 51], "dimx": 50, "dimi": 50, "slice_1": [50, 64, 73, 75], "9223372036854775807": [50, 64, 73, 895, 938, 1267, 1754, 2026, 2076, 2110], "input_spec": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "inputspec": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "inputkind": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "tensorargu": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "output_spec": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "outputspec": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "outputkind": [50, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 2059], "valuerang": [50, 64, 72, 73, 74, 75, 1183, 1184], "is_bool": [50, 64, 72, 73, 74, 75], "saved_exported_program": 50, "fold": [50, 1575, 1925, 2011, 2023, 2061, 2070, 2077], "argumen": 50, "dynamic_dim": [50, 1178, 1179, 1184], "rewritten": [50, 2048, 2096], "primtivi": 50, "symint": [50, 1184, 1190, 1192, 1193, 1194, 1195, 1196, 1197, 1202, 1204, 1205, 1206, 1928, 1929, 1931, 1932, 1933, 2017, 2086, 2096, 2098, 2103], "symfloat": [50, 1184, 1928, 1929, 2086, 2095, 2096], "symbool": [50, 1184, 1201, 1208, 1933, 2086, 2095, 2096], "const": [50, 1476, 2050], "add_1": [50, 62, 64, 67, 69, 72, 73, 1164], "add_2": [50, 62, 64, 67, 69, 72, 73], "shot": 50, "nearli": [50, 150, 894, 915, 1813, 2053, 2072, 2108], "imposs": [50, 1175, 1194, 1973, 2038], "exportdb": [50, 2086], "combinatori": 50, "explod": [50, 1555], "cond": [50, 51, 58, 64, 67, 73, 2054], "undergo": [50, 79], "refin": [50, 1276, 2031], "dynamo": [50, 62, 79, 680, 1184, 2019, 2043, 2089, 2094, 2095, 2098, 2099, 2100, 2102, 2104, 2105, 2106, 2108], "fake": [50, 62, 84, 712, 713, 714, 715, 716, 717, 718, 719, 720, 730, 731, 732, 793, 799, 800, 810, 812, 838, 862, 863, 1120, 1121, 1182, 1184, 1193, 1206, 2017, 2059, 2064, 2067, 2070, 2089], "preserve_module_call_signatur": 50, "dim0_x": [50, 64, 66, 72, 73], "verbatim": 50, "bake": [50, 62, 64, 73, 1273, 1279, 1780, 1781, 1793, 2063], "diverg": [50, 1198, 1285, 1286, 1488, 1641, 2009, 2013], "register_dataclass": [50, 51], "ordereddict": [50, 1269, 1523, 1524, 1533, 1552, 1703, 1744, 2011, 2051, 2056, 2084], "debug_nam": 50, "_constraint": 50, "unbound": [50, 1183, 1188, 1194], "t1": [50, 687, 688, 881, 1223, 1713, 1966, 2012, 2072, 2073], "extra_fil": [50, 1277, 1280], "opset_vers": [50, 2059, 2061, 2062], "opset": [50, 2059, 2061, 2062, 2094, 2103], "txt": [50, 1277, 1280, 2064, 2090, 2108], "decod": [50, 1341, 1567, 1568, 1569, 1713, 2064], "utf": [50, 1341, 2061, 2064], "expected_opset_vers": 50, "rb": [50, 1277, 1341], "seek": [50, 1277, 1341, 2064, 2067], "cl": [50, 64, 66, 139, 2044, 2067, 2072, 2109], "serialized_type_nam": 50, "treespec": 50, "inputdataclass": 50, "outputdataclass": 50, "shapescollect": 50, "builder": [50, 2096], "tensor_x": [50, 2059], "tensor_i": 50, "tensor_z": 50, "_derivedconstraint": 50, "graph_signatur": [50, 51], "module_call_graph": 50, "tensor_const": 50, "run_decomposit": [50, 2059], "decomp_t": 50, "joint": [50, 680, 2019], "exportbackwardsignatur": 50, "gradients_to_paramet": 50, "gradients_to_user_input": 50, "loss_output": 50, "gurante": 50, "parameters_buffers_constant_tensor": 50, "flattened_user_input": 50, "mutated_input": 50, "flattened_user_output": 50, "custommodul": [50, 838, 2059, 2067], "my_paramet": [50, 2012, 2059], "register_buff": [50, 1269, 1523, 1705, 2010, 2012, 2044, 2051, 2059], "my_buffer1": [50, 2059], "my_buffer2": [50, 2059], "add_tensor": [50, 51], "call_funct": [50, 62, 64, 78, 80, 82, 83, 1182, 2094, 2096, 2097, 2107, 2108], "mul_tensor": 50, "mul_tensor_1": 50, "add_tensor_1": 50, "add_tensor_2": 50, "buffer_mut": [50, 2059], "modulecallsignatur": 50, "symintargu": [50, 64, 73], "constantargu": [50, 64, 66], "customobjargu": 50, "tokenargu": 50, "in_spec": 50, "_pytre": [50, 64], "out_spec": 50, "modulecallentri": 50, "nonetyp": [50, 2011, 2013], "replace_all_us": 50, "get_replace_hook": 50, "class_fqn": 50, "unflatten": [50, 53, 2011, 2030, 2031, 2033, 2062, 2081], "flatargsadapt": 50, "target_spec": 50, "input_arg": [50, 1775, 2061], "input_args_with_path": 50, "codegen": [50, 51, 62, 2044, 2099, 2102, 2108], "flat_args_adapt": 50, "hierachi": 50, "swap": [50, 60, 62, 415, 617, 788, 789, 790, 793, 797, 865, 1275, 1359, 1572, 1573, 1697, 1698, 1945, 1966, 2011, 2014, 2042, 2067, 2077, 2079, 2087], "submod": [50, 62], "new_mod": 50, "unflattenedmodul": 50, "bear": 51, "mlir": 51, "soundli": 51, "audienc": 51, "realiz": [51, 1867], "implic": [51, 1267, 1285, 2044, 2072, 2077], "bundl": [51, 2050], "notabl": [51, 973, 2013, 2090], "graph_modul": [51, 860, 2097, 2107], "sympi": [51, 1184, 1191, 2095], "i0": [51, 306, 1289, 1886, 2011, 2062, 2078], "collorari": 51, "textual": 51, "machineri": [51, 62, 2044, 2096, 2099, 2106], "op_nam": [51, 2017, 2059], "arg4": 51, "arg5": 51, "compact": [51, 1122, 1123, 1125, 1312, 1314, 1317, 2044, 2061, 2067], "args1": 51, "add1": 51, "predefin": [51, 2061], "readign": 51, "referenc": [51, 62, 1009, 1182, 1269, 1523, 1948, 2012, 2039, 2061, 2072, 2097], "19": [51, 685, 746, 966, 1520, 2010, 2061, 2077, 2097, 2102], "dummy_help": 51, "helper_util": 51, "89": [51, 617, 1831, 2102], "val": [51, 64, 67, 72, 1048, 1184, 1199, 1275, 1276, 2011, 2013, 2017, 2037, 2098], "nn_module_stack": 51, "came": [51, 2096], "self_linear": 51, "self_sequenti": 51, "source_fn_stack": 51, "source_fn": 51, "encapsul": [51, 61, 62, 1185, 2059, 2072, 2093], "control_flow": [51, 64, 67, 72, 73, 76], "x_1": [51, 64, 1085, 1086, 1087, 1088, 1337, 1440, 1456, 1457, 1600, 1611, 1946], "num_us": [51, 62], "y_1": [51, 1946], "higher_ord": [51, 64, 67, 72, 73, 76], "liter": [51, 1774, 2011, 2014, 2031, 2064, 2107, 2110], "dim_ord": 51, "tensormeta": 51, "promot": [51, 53, 81, 685, 946, 949, 958, 1048, 1101, 1149, 1151, 1152, 1153, 1154, 1408, 1461, 1462, 1463, 1467, 1611, 1822, 1842, 1843, 1849, 1864, 1921, 2013, 2059, 2080, 2084, 2098, 2099, 2103], "max_pool2d_with_index": 51, "add_on": 51, "ph_0": 51, "jax": [51, 54, 57, 58, 59, 2039, 2045, 2096, 2099], "int64_t": [51, 1774], "scalartyp": [51, 2103], "memoryformat": [51, 2103], "memory_format": [51, 62, 155, 170, 172, 175, 178, 179, 180, 189, 195, 206, 209, 233, 240, 267, 297, 325, 331, 393, 499, 500, 525, 580, 970, 1107, 1108, 1162, 1182, 1269, 1523, 1713, 1720, 1721, 1773, 1833, 1835, 1837, 2007, 2009, 2011, 2044, 2084, 2103], "_register_pytree_nod": 51, "sharding_strategi": 53, "auto_wrap_polici": 53, "backward_prefetch": 53, "backwardprefetch": [53, 2009], "backward_pr": [53, 1269, 1523], "mixed_precis": [53, 1713], "ignored_modul": 53, "param_init_fn": 53, "sync_module_st": 53, "forward_prefetch": [53, 2047], "limit_all_gath": [53, 2047], "use_orig_param": 53, "ignored_st": 53, "inspir": [53, 1783, 2044, 2101], "deepspe": 53, "shorten": 53, "sharded_modul": 53, "0001": [53, 62, 1087, 1314, 1511, 1647, 1777, 1807, 2011, 2063], "dev_id": 53, "shard_grad_op": 53, "unshard": [53, 2047], "full_shard": 53, "summon_full_param": 53, "with_grad": 53, "gap": [53, 866, 1839, 2009, 2067, 2106], "delai": [53, 486, 1713, 2074, 2099], "reacquir": 53, "nccl_cross_nic": 53, "no_sync": [53, 1713], "cpuoffload": [53, 2009], "modulewrappolici": 53, "custompolici": 53, "proceed": [53, 1008, 1382, 1476, 1978, 2073, 2074], "nonwrapped_numel": 53, "travers": [53, 836, 1193, 1713, 2043, 2044, 2073, 2087, 2088], "subtre": 53, "size_based_auto_wrap_polici": 53, "exce": [53, 1347, 2042, 2053], "100m": 53, "numel": [53, 435, 444, 971, 995, 1137, 1254, 2011, 2030, 2039, 2062, 2076, 2077], "custom_auto_wrap_polici": 53, "min_num_param": 53, "1e8": 53, "my_auto_wrap_polici": 53, "functool": [53, 56, 64, 842, 1898, 2044, 2084], "1e5": 53, "mixedprecis": [53, 2009], "granular": [53, 80, 1283, 2038, 2106], "is_meta": [53, 2062], "reset_paramet": [53, 1538, 1712], "torchdistx": 53, "deferred_init": 53, "materialize_modul": 53, "my_init_fn": 53, "fullstatedictconfig": [53, 2009], "flatparamet": 53, "unifi": [53, 2009, 2031, 2096], "check_is_root": 53, "clip_grad_norm_": [53, 1717, 2038], "max_norm": [53, 745, 746, 1465, 1466, 1620, 1621, 1717, 1718, 2011, 2038], "norm_typ": [53, 745, 746, 1465, 1466, 1490, 1491, 1492, 1620, 1621, 1650, 1651, 1652, 1717, 1718, 2011], "clip": [53, 991, 1717, 1718, 1719, 2011, 2033, 2045, 2061, 2062], "infin": [53, 993, 1259, 1261, 1263, 1264, 1413, 1435, 1516, 1517, 1518, 1654, 1655, 1656, 1718, 1782, 1891, 1903, 2077, 2078], "no_shard": 53, "largest": [53, 590, 944, 1150, 1301, 1322, 1324, 1326, 1327, 1342, 1667, 1728, 1943, 2011, 2012, 2013, 2103, 2107, 2112], "fp32": [53, 781, 794, 817, 1091, 1713, 2042, 2047, 2054, 2067, 2068, 2070, 2101], "flatten_sharded_optim_state_dict": 53, "sharded_optim_state_dict": 53, "shard_full_optim_state_dict": 53, "fsdp_modul": 53, "root_onli": 53, "full_optim_state_dict": 53, "optim_input": 53, "rank0_onli": 53, "get_state_dict_typ": 53, "statedictset": [53, 2009], "assertionerror": [53, 62, 64, 66, 71, 73, 84, 734, 1775, 2084, 2108], "differen": 53, "intercept": [53, 62, 2044, 2100], "occurr": [53, 402, 895, 938, 1267, 1370, 1754, 1957, 1958, 2076, 2095], "statedicttyp": 53, "fulloptimstatedictconfig": [53, 2009], "set_state_dict_typ": 53, "save_a_checkpoint": 53, "load_a_checkpoint": 53, "optim_state_dict_to_load": 53, "is_named_optim": 53, "load_directli": 53, "original_osd": 53, "namedoptim": 53, "keyedoptim": 53, "torchrec": [53, 2009], "gossipgrad": [53, 1713], "latter": [53, 687, 791, 1269, 1493, 1523, 1530, 2045, 2051, 2053, 2055, 2096], "rekey_optim_state_dict": 53, "optim_state_key_typ": 53, "loadabl": [53, 2008], "wrapped_model": 53, "wrapped_optim": 53, "full_osd": 53, "nonwrapped_model": 53, "nonwrapped_optim": 53, "rekeyed_osd": 53, "optimstatekeytyp": 53, "param_id": 53, "osd": 53, "param_nam": 53, "sharded_osd": 53, "scatter_full_optim_state_dict": 53, "new_model": 53, "new_optim": 53, "resid": [53, 61, 196, 289, 337, 1341, 1713, 2042, 2065, 2072], "remap": [53, 88, 415, 1273, 1277, 1341, 1362, 2008, 2024, 2071], "state_dict_config": 53, "optim_state_dict_config": 53, "descend": [53, 62, 136, 542, 877, 1182, 1269, 1333, 1334, 1523, 1896, 1924, 2011, 2103], "transpar": [53, 2043, 2065, 2072, 2074], "sharded_state_dict": 53, "shardedstatedictconfig": [53, 2009], "offload_to_cpu": 53, "optimstatedictconfig": [53, 2009], "param_state_dict": 53, "statedictconfig": [53, 2009], "writeback": 53, "summon": 53, "portion": [53, 1155, 1459, 1555, 1670, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 2068, 2100, 2108], "discard": [53, 1184, 1266, 1327, 1731, 2008, 2012, 2026], "redundantli": [53, 2038], "materi": [53, 901, 905, 906, 907, 988, 1584, 1585, 1586, 1715, 1716, 1794, 1847, 1848, 2044, 2099], "throughput": [53, 2010, 2041, 2042, 2047], "backward_post": 53, "altogeth": [53, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 2096], "contend": 53, "volum": [53, 1232], "_hybrid_shard_zero2": 53, "freed": [53, 150, 894, 915, 1014, 1062, 2029, 2042, 2047, 2049, 2072, 2079, 2093, 2110], "param_dtyp": 53, "reduce_dtyp": 53, "buffer_dtyp": 53, "keep_low_precision_grad": 53, "cast_forward_input": 53, "cast_root_forward_input": 53, "_module_classes_to_ignor": 53, "batchnorm": [53, 700, 701, 1172, 1269, 1279, 1523, 1563, 1713, 1722, 1723, 1724, 1725, 2023, 2033, 2039, 2051, 2063, 2065, 2067, 2069, 2070], "_batchnorm": [53, 1722, 1724], "kept": [53, 57, 62, 697, 779, 785, 1437, 1438, 1439, 1485, 1486, 1487, 1563, 1640, 1700, 2013, 2029, 2047, 2070, 2077], "permit": [53, 1183, 1194, 2042, 2077], "thereaft": 53, "local_state_dict": 53, "upcast": 53, "recast": 53, "offload_param": 53, "cfg": 53, "finetun": [53, 1269, 1523], "model_fn": 53, "my_checkpoint": 53, "_use_dtensor": 53, "localstatedictconfig": [53, 2009], "shardedoptimstatedictconfig": [53, 2009], "localoptimstatedictconfig": [53, 2009], "love": 54, "hear": 54, "vmap": [54, 56, 57, 62, 906, 907, 909, 911, 915, 920, 921, 1165, 1168, 1169, 1171, 1173], "arbitrarili": [54, 59, 513, 1272, 1594, 2013, 2039, 2044, 2045], "stock": [54, 59], "ensembl": [54, 57, 59, 1173], "maml": [54, 59], "vjp": [54, 57, 58, 890, 891, 901, 906, 907, 1169, 1175, 1973, 2044, 2045], "whirlwind": 54, "tour": 54, "ux": [54, 59, 1179, 2067], "jacrev": [55, 57, 58, 911, 1167, 1168, 2045], "functional_cal": [55, 57, 1173, 2099], "running_mean": [56, 1172, 1269, 1437, 1438, 1439, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1523, 1563, 1599, 1639, 2011, 2051, 2056, 2103], "running_var": [56, 1172, 1269, 1437, 1438, 1439, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1523, 1563, 1599, 1639, 2011, 2056, 2103], "groupnorm": [56, 1630], "anywher": [56, 2038], "batchnorm2d": [56, 713, 716, 718, 723, 814, 1279, 1459, 1497, 1599, 2023, 2039, 2051, 2067, 2069], "track_running_stat": [56, 751, 752, 753, 1172, 1437, 1438, 1439, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1563, 2056], "resnet": [56, 2008, 2010, 2012, 2051, 2064, 2082, 2087], "regnet": 56, "norm_lay": 56, "resnet18": [56, 62, 2008, 2010, 2012, 2024, 2064, 2106], "num_group": [56, 749, 1477, 1630, 2011], "fragil": 56, "replace_all_batch_norm_modules_": 56, "upstream": [57, 2057], "coupl": [57, 81, 2010, 2050, 2058, 2073, 2093, 2107], "jvp": [57, 58, 891, 896, 899, 900, 901, 905, 906, 907, 1171, 2044], "jacfwd": [57, 58, 911, 1167, 2045], "carefulli": [57, 61, 486, 2017, 2045, 2064, 2098, 2100], "make_functional_with_buff": 57, "hurri": 57, "gist": [57, 793, 2048, 2102], "emul": [57, 799, 2014, 2044, 2066], "fmodel": 57, "compute_loss": [57, 59, 1163, 1165], "predict": [57, 486, 1427, 1436, 1476, 1612, 2063, 2082, 2090], "argnum": [57, 1165, 1166, 1167, 1168, 1169], "carri": [57, 336, 797, 838, 839, 858, 859, 2017, 2040, 2067], "stack_module_st": 57, "num_model": [57, 1173], "in_featur": [57, 720, 728, 729, 732, 733, 756, 764, 1173, 1269, 1427, 1508, 1510, 1523, 1703, 1727, 1728, 1729, 1761, 1762, 1765, 2021, 2051], "out_featur": [57, 720, 728, 729, 732, 733, 756, 764, 1173, 1269, 1440, 1508, 1510, 1523, 1703, 1727, 1728, 1729, 1761, 1762, 1765, 2021, 2051], "base_model": 57, "clearer": [57, 1326, 1794, 2044, 2059], "call_single_model": 57, "aotautograd": [57, 680, 2019, 2043, 2098, 2099, 2100, 2108], "stori": [57, 2048, 2096], "grad_x": [58, 2017, 2045, 2099], "has_aux": [58, 1165, 1166, 1168, 1169, 1170, 1174], "mental": [58, 1164], "absenc": [58, 2090], "unbind": [58, 1175, 1973, 2009, 2011, 2030, 2062, 2081], "presenc": [58, 62, 1279, 1414, 2053, 2064, 2077, 2104], "pop": [58, 940, 1066, 1067, 1524, 1533, 2062, 2065, 2066, 2096], "lst": 58, "batchedtensor": 58, "batched_tensor_input": 58, "new_": [58, 2042, 2083], "new_zero": [58, 2011, 2062], "new_empti": [58, 2011, 2017, 2062], "diag_emb": [58, 1096, 1305, 1306, 1333, 1924, 2011, 2062], "vec": [58, 107, 108, 424, 690, 1411, 1764, 2011, 2077, 2103], "copy_": [58, 60, 415, 1164, 1576, 2010, 2011, 2030, 2042, 2079], "arithmet": [58, 946, 949, 963, 1325, 1849, 2014, 2026, 2030, 2031, 2054, 2067, 2080], "extra_arg": 58, "theoret": 58, "custom_dot": 58, "lax": 58, "while_loop": 58, "is_nonzero": [58, 2011, 2062, 2077], "rag": 58, "unclear": [58, 617], "add_nois": 58, "prng": 58, "cos_x": [59, 1165], "neg_sin_x": [59, 1165], "feature_s": [59, 1165, 1175, 1973], "feature_vec": [59, 1165, 1175, 1973], "mseloss": [59, 1165, 1483, 1555, 1661, 2042, 2043], "grad_weight_per_exampl": [59, 1165], "cotang": [59, 1174], "vjp_fn": [59, 1174], "out_tang": 59, "hessian0": 59, "hessian1": 59, "hess": [59, 1167], "set_overwrite_module_params_on_convers": [60, 2009], "to_empti": [60, 1269, 1523, 2021], "get_overwrite_module_params_on_convers": [60, 2009], "set_swap_module_params_on_convers": [60, 2009], "swap_tensor": [60, 415, 2009], "module_load": 60, "get_swap_module_params_on_convers": [60, 415, 1269, 1523, 2009], "rpc_async": [61, 2013, 2062, 2072, 2074], "add_done_callback": 61, "fut": [61, 1272, 1713, 2041, 2072], "set_result": [61, 1713, 2072], "haven": [61, 2051, 2106], "set_except": 61, "baseexcept": 61, "valueerror": [61, 64, 84, 895, 938, 1267, 1733, 1734, 1754, 1757, 2044, 2059, 2065, 2076, 2084, 2107], "twice": [61, 617, 910, 1171, 2038, 2039, 2046, 2048, 2098], "slow_set_futur": 61, "sleep": 61, "cb1": 61, "cb2": 61, "dedic": [61, 2042], "pool": [61, 766, 767, 768, 769, 782, 783, 1006, 1040, 1041, 1051, 1062, 1378, 1380, 1424, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1470, 1471, 1490, 1491, 1492, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1588, 1589, 1590, 1591, 1592, 1593, 1596, 1597, 1598, 1624, 1625, 1650, 1651, 1652, 1654, 1655, 1656, 1828, 1829, 2009, 2041, 2042, 2044, 2051, 2053, 2069, 2072, 2093], "didn": [61, 2044, 2047, 2057, 2063], "cb_fut": 61, "chain_cb_fut": 61, "cb": [61, 2072], "held": [61, 1006, 1030, 1058, 1381, 1986, 2038, 2101], "collect_al": [61, 2009], "fut0": 61, "fut1": [61, 2072], "fut_list": 61, "wait_al": [61, 2009], "clamp": [62, 186, 187, 799, 802, 969, 1276, 1435, 1476, 1629, 1640, 1700, 2011, 2023, 2030, 2061, 2062, 2067, 2069, 2070, 2078, 2084, 2103], "call_modul": [62, 80, 1182, 2107], "call_method": [62, 80, 1182, 2094, 2097], "feed": [62, 2010, 2046, 2051, 2087, 2098], "theses": 62, "callsit": 62, "constitut": [62, 2096], "isol": [62, 1703, 2029, 2063, 2065, 2108], "tracer_class": 62, "gm": [62, 2094, 2097, 2098, 2107, 2108], "treatment": 62, "topk": [62, 2011, 2030, 2062, 2103], "print_tabular": [62, 2094, 2097], "opcod": [62, 2064, 2094, 2097], "linear_weight": 62, "linear_1": 62, "topk_1": 62, "pose": [62, 2073, 2096], "explor": [62, 79, 2008, 2039, 2051, 2064, 2110], "edit": [62, 2017, 2064, 2081], "lint": 62, "inserting_aft": [62, 2107], "new_nod": 62, "replace_all_uses_with": [62, 2107], "tediou": 62, "unwieldi": 62, "fusion": [62, 680, 792, 814, 861, 862, 973, 1271, 1278, 1283, 1284, 1285, 1286, 1720, 1721, 2023, 2051, 2067, 2096, 2099, 2101, 2107, 2108], "imagin": [62, 2072, 2096, 2100], "requisit": 62, "relu_decomposit": 62, "decomposition_rul": 62, "constitu": [62, 2032, 2044, 2047], "new_graph": 62, "graphappendingtrac": 62, "proxy_arg": 62, "output_proxi": 62, "node_copi": 62, "ari": [62, 2061], "unari": [62, 1168, 1169, 1567, 1569, 1571, 2014, 2030], "organiz": 62, "shapeprop": 62, "named_modul": [62, 1269, 1523, 2051], "args_it": 62, "load_arg": 62, "map_arg": 62, "fetch_attr": [62, 1182], "target_atom": 62, "attr_itr": 62, "hasattr": [62, 1962, 2011, 2044, 2067, 2097], "nonexist": [62, 2012, 2013], "elif": [62, 1276, 1488, 2012, 2013, 2049, 2059, 2096, 2107], "self_obj": 62, "encompass": 62, "prove": [62, 2029], "disprov": 62, "led": [62, 2110], "auxiliari": [62, 1165, 1166, 1168, 1169, 1170, 1174, 2008, 2050], "nondeterminist": [62, 313, 315, 321, 499, 515, 517, 944, 1107, 1108, 1109, 1291, 1442, 1450, 1451, 1452, 1453, 1454, 1455, 1519, 1520, 1521, 1604, 1605, 1606, 1607, 1608, 1609, 1613, 1621, 1629, 1640, 1668, 1681, 1700, 1701, 1702, 1866, 1961, 2094], "unord": [62, 1524, 1533], "nondetermin": [62, 921, 2055], "dedupl": [62, 2061], "straightforward": [62, 2020, 2032, 2051, 2063, 2077, 2094], "torchvis": [62, 2008, 2009, 2010, 2012, 2061, 2064, 2067, 2082, 2087, 2106], "transformed_resnet18": 62, "input_imag": 62, "224": [62, 862, 863, 2010, 2012, 2061, 2106], "margin": [62, 1456, 1482, 1515, 1526, 1528, 1572, 1573, 1610, 1637, 1653, 1662, 1697, 1698, 2011, 2082], "commut": 62, "toolbox": 62, "tradit": [62, 1571, 2058, 2059], "luckili": 62, "my_pass": 62, "my_module_transform": 62, "input_valu": 62, "prompt": [62, 2008, 2057], "set_trac": [62, 1274, 1281, 1287, 2010], "examin": [62, 2051, 2061, 2066, 2110], "undergon": 62, "subclassm": 62, "pre_trac": 62, "post_trac": 62, "sake": 62, "tabular": [62, 680, 2019], "transform_graph": 62, "session": [62, 2059], "luck": [62, 2096], "input_nod": 62, "stepwis": 62, "breakpoint": [62, 2013, 2096, 2107], "excel": [62, 2100], "realpython": 62, "pycharm": 62, "vscode": 62, "graphic": [62, 2027, 2057, 2106], "parlanc": 62, "func_to_trac": 62, "dyn": 62, "155": 62, "__bool__": [62, 2011, 2013], "to_bool": 62, "traceerror": [62, 2067], "hyper": [62, 1555, 2012, 2082], "do_activ": 62, "without_activ": 62, "with_activ": 62, "traced_without_activ": 62, "traced_with_activ": 62, "concrete_arg": 62, "truli": [62, 2017, 2058, 2061], "__torch_function__": [62, 2109], "161": 62, "len_1": 62, "sqrt_1": 62, "truediv": [62, 2094, 2096, 2097], "mycustomtrac": 62, "traced_graph": 62, "runnabl": [62, 2038, 2061, 2082, 2108], "myspecialsubmodul": 62, "neg_1": 62, "is_leaf_modul": [62, 2088], "sparse_coo_tensor": [62, 544, 581, 1905, 2011, 2015, 2062, 2077], "ones_lik": [62, 1168, 1169, 1174, 2011, 2017, 2032, 2042, 2044, 2045, 2051, 2062], "zeros_lik": [62, 901, 903, 905, 906, 907, 2011, 2015, 2032, 2042, 2062, 2077], "viabl": [62, 2039, 2042], "torch_randn": 62, "gotcha": 62, "dropoutrepro": 62, "assert_clos": [62, 1123, 1125, 1126, 1131, 1132, 1137, 1138, 1139, 1141, 1143, 2009, 2010, 2084], "greatest": [62, 1211, 1413, 2061, 2084], "6207983493804932": 62, "dropoutrepro2": 62, "overspeci": [62, 973, 2095], "ph": 62, "shouldn": [62, 1006, 2064, 2077, 2081], "fn_or_nam": 62, "callfunct": 62, "my_custom_funct": 62, "fn_to_be_trac": 62, "reassign": [62, 2042], "regener": 62, "unset": [62, 936, 2054], "add_submodul": 62, "subpath": 62, "get_submodul": [62, 1269, 1523], "delete_all_unused_submodul": 62, "delete_submodul": 62, "print_read": [62, 2017, 2097], "print_output": 62, "include_strid": 62, "include_devic": 62, "date": [62, 2064, 2065], "pythoncod": 62, "fxmodul": 62, "owning_modul": 62, "tracer_cl": 62, "tracer_extra": 62, "the_funct": 62, "type_expr": 62, "create_nod": 62, "method_nam": 62, "0th": [62, 1175, 1973], "inserting_befor": 62, "influenc": [62, 2059, 2077, 2111], "eliminate_dead_cod": 62, "topolog": [62, 2061], "attr_1": 62, "is_impur": 62, "bad": [62, 64, 2029, 2061, 2064, 2067, 2098, 2106], "erase_nod": 62, "to_eras": 62, "eras": [62, 64, 69, 70, 2095], "find_nod": 62, "iterat": 62, "qualified_nam": 62, "graph_copi": 62, "val_map": 62, "return_output_nod": 62, "opoverload": [62, 1182, 2017], "companion": 62, "arg_transform": 62, "value_remap": 62, "_node_list": 62, "doubli": 62, "on_generate_cod": 62, "make_transform": 62, "transformcodefunc": 62, "insert_pdb": 62, "bodi": [62, 64, 73, 76, 1281, 2010, 2012, 2013, 2014, 2059, 2097, 2108], "current_tran": 62, "stuff": [62, 2098], "default_valu": 62, "_not_": 62, "tabul": 62, "process_input": [62, 1182], "process_output": [62, 1182], "python_cod": 62, "root_modul": [62, 793, 2069], "set_codegen": 62, "return_typ": [62, 697, 1085, 1086, 1232, 1291, 1329, 1367, 1370, 1372, 1375, 1415, 1896, 1943, 1948], "printout": [62, 1050, 1063, 2097], "all_input_nod": 62, "format_nod": 62, "placeholder_nam": 62, "maybe_return_typenam": 62, "autogener": [62, 2045], "insert_arg": 62, "impur": 62, "normalized_argu": 62, "arg_typ": 62, "kwarg_typ": 62, "normalize_to_only_use_kwarg": 62, "vararg": 62, "argskwargspair": 62, "bx": 62, "ax": [62, 966, 1301, 1315, 1319, 1330, 1331, 1332, 1360, 1371, 1531, 1542, 1948, 2061, 2099], "prev": [62, 1792], "replace_with": 62, "delete_user_cb": 62, "propagate_meta": 62, "replace_input_with": 62, "old_input": 62, "new_input": 62, "create_proxi": [62, 2096], "record_stack_trac": 62, "outputgraph": [62, 2096], "update_arg": 62, "update_kwarg": 62, "autowrap_modul": 62, "autowrap_funct": 62, "create_arg": 62, "create_args_for_root": 62, "root_fn": 62, "is_modul": 62, "introspect": [62, 975, 2099], "disallow": [62, 2064, 2072, 2080, 2099, 2100], "proxy_factory_fn": 62, "get_fresh_qualnam": 62, "clash": 62, "attr": [62, 64, 66, 150, 1189, 1371, 1852], "attr_val": 62, "parameter_proxy_cach": 62, "module_qualified_nam": [62, 2088], "path_of_modul": 62, "some_hyperparamet": 62, "indexed_item": 62, "proxied_valu": 62, "garbage_collect_valu": [62, 1182], "run_nod": [62, 1182], "vice": [62, 458, 603, 1159, 1160, 1515, 2039, 2070, 2079, 2095], "versa": [62, 458, 603, 1159, 1160, 1515, 2039, 2070, 2079, 2095], "negsigmswapinterpret": 62, "call_self": 62, "args_tail": 62, "boxed_run": [62, 1182], "args_list": [62, 1182], "promptli": [62, 1182, 1193, 1342], "fetch_args_kwargs_from_env": [62, 1182], "map_nodes_to_valu": [62, 1182], "initial_env": [62, 1182], "enable_io_process": [62, 1182], "negsigmswapxform": 62, "nodes_map": [62, 2107], "subgraph_rewrit": [62, 2107], "m1": [62, 1971, 1972, 2025], "m2": [62, 1761, 1971, 1972, 2025, 2067], "traced_modul": [62, 2056, 2107], "despit": [62, 1285, 1286, 2042, 2048], "stack_1": 62, "stack_2": 62, "sum_2": 62, "max_1": 62, "max_2": 62, "exhaust": [64, 1713, 2111], "wih": 64, "escap": [64, 74], "hatch": [64, 74], "assumeconstantresult": [64, 75], "burn": [64, 75, 2093], "tracabl": [64, 75], "get_item": [64, 75], "i64": [64, 69, 70, 74, 75], "myautogradfunct": 64, "autogradfunct": 64, "allow_in_graph": [64, 2099], "p_linear_weight": 64, "p_linear_bia": 64, "mul_1": [64, 70, 2094, 2096], "mysubmodul": [64, 72, 73], "condbranchclassmethod": [64, 72, 73], "subm": [64, 72, 73], "condbranchnestedfunct": [64, 72, 73], "inner_true_fn": [64, 72, 73], "inner_false_fn": [64, 72, 73], "condbranchnonlocalvari": [64, 72, 73], "my_tensor_var": [64, 72, 73], "my_primitive_var": [64, 72, 73], "nonloc": [64, 67, 72, 73, 2014], "c_lifted_tensor_0": [64, 72, 73], "lift_fresh_copi": [64, 72, 73, 2062], "sub_1": [64, 72, 73], "constant_tensor": [64, 72, 73], "lifted_tensor_0": [64, 72, 73], "condclosedovervari": [64, 67, 72], "condoperand": [64, 72, 73], "sym_size_int": [64, 72, 73], "condpred": [64, 72, 73], "constrainassizeexampl": [64, 74, 75], "hint": [64, 74, 75, 680, 1006, 1040, 1051, 1184, 1194, 1200, 1270, 1529, 1567, 1568, 1569, 1570, 1571, 2010, 2012, 2013, 2017, 2042, 2044, 2059, 2072, 2095], "_check": [64, 74, 75], "_check_is_s": [64, 74, 75], "u0": [64, 74, 75], "sym_constrain_rang": [64, 74, 75, 2011, 2062], "le": [64, 74, 75, 360, 1191, 1297, 1479, 1480, 1633, 1634, 2011, 2030, 2062, 2084, 2103], "_assert_scalar": [64, 74, 75, 2062], "le_1": [64, 74, 75], "_assert_scalar_1": [64, 74, 75], "le_2": [64, 74, 75], "u1": [64, 74, 75], "u2": [64, 74, 75, 2108], "constrainasvalueexampl": [64, 74, 75], "test_decor": 64, "dynamicshapeassert": [64, 65], "dynamicshapeconstructor": [64, 73], "dynamicshapeifguard": [64, 69, 73], "dynamicshapemap": [64, 73, 76], "body_graph_0": [64, 73, 76], "map_impl": [64, 73, 76], "dynamicshapesl": [64, 73], "slice_2": [64, 73], "dynamicshapeview": [64, 73], "new_x_shap": [64, 73], "support_level": [64, 70], "supportlevel": [64, 70], "fnwithkwarg": [64, 70], "pos0": [64, 70], "tuple0": [64, 70], "myarg": [64, 70], "mykw0": [64, 70], "mykwarg": [64, 70], "input0": [64, 70], "input1": [64, 70, 760, 1440, 1456, 1457, 1515, 1532, 1600, 1610, 1611, 1653, 2011, 2038, 2061], "tuple0_0": [64, 70], "tuple0_1": [64, 70], "myargs_0": [64, 70], "myargs_1": [64, 70], "mul_2": [64, 70], "mul_3": [64, 70], "mul_4": [64, 70], "mul_5": [64, 70], "mul_6": [64, 70], "listcontain": [64, 65, 70, 73], "monkei": [64, 65, 70, 73, 1962], "cow": [64, 65, 70, 73], "pig": [64, 65, 70, 73], "listunpack": [64, 69, 70], "args_0": [64, 69, 70], "args_1": [64, 69, 70], "args_2": [64, 69, 70], "nestedfunct": [64, 67], "nullcontextmanag": [64, 68], "nullcontext": [64, 68], "pytreeflatten": 64, "tree_flatten": 64, "x_2": [64, 1085, 1086, 1087, 1088, 1337, 1440, 1456, 1457, 1600, 1611], "dim1_x": [64, 73], "scalaroutput": [64, 73], "anim": 64, "moo": 64, "specializedattribut": 64, "staticforloop": [64, 69], "unrol": [64, 69, 2012, 2013, 2061, 2099], "ret": [64, 69, 2044, 2072], "add_3": [64, 69], "add_4": [64, 69], "add_5": [64, 69], "add_6": [64, 69], "add_7": [64, 69], "add_8": [64, 69], "add_9": [64, 69], "staticif": [64, 69], "tensorsetattr": [64, 66], "typereflectionmethod": [64, 66], "overli": [64, 66, 2044, 2096], "typereflectionmethodrewrit": [64, 66], "userinputmut": [64, 77], "not_supported_yet": [64, 66, 71, 73, 78], "dynamicshaperound": [64, 66, 73], "modelattrmut": [64, 71], "attr_list": [64, 71], "recreate_list": [64, 71], "optionalinput": [64, 71], "unexpectedli": [64, 71, 486, 2079, 2083], "torchsymmin": [64, 78], "sym_min": [64, 78], "0x7f3250b62040": [64, 78], "gain": [79, 1794, 2037, 2089, 2090, 2101, 2102], "fxe0010": [79, 2059], "diagnosticopt": [79, 81, 2059], "verbosity_level": [79, 81, 2059], "onnx_diagnost": [79, 81, 680], "fxe0008": [79, 2059], "onnxscript": [80, 2059, 2060, 2061], "torchlib": [80, 84], "fxonnxinterpret": 80, "onnx": [81, 82, 84, 85, 86, 680, 1755, 1756, 1774, 1775, 1776, 2009, 2031, 2067, 2089], "endors": 81, "noteworthi": 81, "_intern": [81, 86, 2079], "disregard": [84, 85, 87, 2096], "indexerror": [84, 1739, 1741], "typeerror": [84, 1744, 2044, 2065, 2084, 2109], "opschema": [84, 2059], "onnxfunct": [85, 87, 2059], "perfect": 85, "nearest": [85, 779, 785, 787, 1416, 1576, 1578, 1629, 1640, 1700, 1702, 1824, 1852, 2042], "highest": [85, 680, 1427, 1834, 1835, 1867, 2068, 2084], "stringent": 85, "op_level_debug": [85, 87, 2059], "elementwise_dtyp": 86, "_ref": 86, "type_promot": 86, "absent": [87, 2043], "signifi": 87, "g_cpu": 88, "g_cuda": 88, "clone_st": 88, "cloned_st": 88, "bytetensor": [88, 1037, 1038, 1077, 1078, 1222, 1383, 1390, 1872, 1964, 1990, 1991, 2001, 2002, 2071, 2080, 2083], "graphsafe_get_st": [88, 2042], "current_st": 88, "graphsafe_set_st": [88, 2042], "g_cuda_oth": 88, "2147483647": 88, "0x8000_0000_0000_0000": [88, 1362, 2071], "0xffff_ffff_ffff_ffff": [88, 1362, 2071], "random_devic": 88, "1516516984916": 88, "new_stat": [88, 1077, 1078, 1390, 1872, 1964, 2001, 2002, 2071], "void": [88, 1049, 2042, 2050, 2099], "g_cpu_oth": 88, "abs_": [92, 2011, 2030, 2083], "acosh": [96, 122, 868, 2011, 2030, 2062, 2103], "batch1": [99, 100, 151, 152, 686, 941, 2011], "batch2": [99, 100, 151, 152, 169, 686, 941, 2011], "tensor1": [101, 102, 103, 104, 687, 688, 1364, 1849, 2011], "tensor2": [101, 102, 103, 104, 314, 404, 687, 688, 1364, 1849, 2011], "mat1": [105, 106, 554, 689, 1234, 1290, 1374, 1897, 1901, 1902, 1916, 2011, 2103], "mat2": [105, 106, 413, 554, 689, 953, 1234, 1290, 1374, 1897, 1901, 1902, 1916, 2011, 2103], "mat": [107, 108, 540, 690, 1411, 1830, 1894, 1897, 1916, 2011, 2082], "vec1": [109, 110, 691, 2011], "vec2": [109, 110, 288, 461, 691, 1214, 1812, 2011], "keepdim": [112, 114, 115, 116, 118, 134, 135, 354, 392, 407, 409, 410, 411, 414, 429, 430, 431, 432, 453, 470, 479, 555, 565, 615, 693, 695, 696, 697, 699, 875, 876, 1291, 1322, 1326, 1339, 1357, 1367, 1369, 1370, 1372, 1375, 1414, 1415, 1416, 1417, 1532, 1669, 1768, 1821, 1824, 1918, 1919, 1923, 1968, 1969, 2011, 2030, 2078, 2103], "rtol": [113, 344, 694, 920, 921, 1258, 1324, 1327, 1776, 2010, 2011, 2084], "atol": [113, 344, 694, 920, 921, 1258, 1324, 1327, 1336, 1776, 2010, 2011, 2044, 2084], "08": [113, 344, 694, 951, 1258, 1316, 1457, 1537, 1673, 1780, 1781, 1782, 1784, 1790, 1791, 1794, 1807, 1878, 2011], "equal_nan": [113, 344, 694, 1258, 2011, 2084], "arcco": [121, 2011, 2062, 2084], "acosh_": [123, 2011, 2030], "arccosh": [123, 2011, 2062], "arcsin": [125, 882, 2011, 2062, 2077], "arcsinh": [127, 2011, 2062], "atan2_": [130, 2011, 2030], "arctan2": [130, 2011, 2062], "arctan": [131, 2011, 2062], "arctanh": [133, 2011, 2062], "asinh": [143, 870, 2011, 2030, 2062, 2077, 2103], "atan": [147, 631, 632, 871, 2011, 2030, 2062, 2077, 2103], "atanh": [149, 873, 2011, 2030, 2062, 2077, 2103], "wrt": [150, 920, 921], "60521": [150, 894], "issuecom": [150, 894], "867061780": [150, 894], "texttt": [153, 154, 694, 1258, 1427, 2084], "bernoulli": [154, 760, 1431, 1460, 1461, 1462, 1463, 1467, 1474, 1493, 1614, 1615, 1616, 1617, 1622, 2009, 2011, 2030, 2062, 2086], "preserve_format": [155, 170, 172, 175, 178, 179, 180, 189, 206, 209, 240, 267, 297, 325, 393, 525, 580, 970, 1108, 1162, 1773, 1833, 1835, 1837, 2007, 2044, 2080], "minlength": [156, 944, 2011], "bitwise_and": [158, 2011, 2062, 2103], "bitwise_left_shift": [160, 2011, 2062], "bitwise_not": [162, 2011, 2030, 2062, 2103], "bitwise_or": [164, 2011, 2062, 2103], "bitwise_right_shift": [166, 2011, 2062], "bitwise_xor": [168, 2011, 2062, 2103], "uint8": [172, 242, 617, 693, 699, 1159, 1822, 1825, 1826, 1849, 2067, 2079, 2080, 2082, 2083, 2112], "cauchi": [173, 2009, 2039, 2048, 2062, 2086], "dfrac": [173, 377, 608, 1457, 1611, 1728, 1729, 1762, 1765], "complex32": [179, 1450, 1451, 1452, 1604, 1605, 1606, 1774, 1864, 2083, 2084], "int8": [180, 448, 729, 945, 946, 947, 948, 949, 950, 1159, 1351, 1352, 1353, 1354, 2067, 2070, 2077, 2079, 2080, 2083, 2112], "input2": [183, 459, 460, 517, 760, 1440, 1456, 1457, 1515, 1532, 1600, 1610, 1611, 1653, 2011, 2038, 2061], "clamp_": [188, 2011, 2030], "uncoalesc": [190, 328, 1909], "coo": [190, 323, 328, 342, 614, 1234, 1897, 1901, 1906, 1907, 1908, 1909, 1910, 1911, 2009, 2020, 2080, 2084], "inttensor": [191, 208, 1244, 1359, 1360, 1465, 2080, 2083], "csr": [191, 208, 343, 583, 588, 1466, 1897, 1901, 1902, 1908, 1911, 2020, 2084], "sparse_csr": [191, 208, 583, 588, 1901, 1902, 1904, 1908, 1911, 2077], "nnz": [191, 544, 583, 584, 585, 587, 588, 1194, 1419, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 2017, 2077], "int32": [191, 208, 313, 321, 325, 447, 617, 957, 1108, 1120, 1121, 1156, 1159, 1160, 1300, 1311, 1312, 1313, 1331, 1359, 1442, 1822, 1859, 2067, 2077, 2079, 2080, 2083, 2101, 2112], "mkl": [191, 208, 2009, 2041, 2057, 2062, 2077, 2085, 2111], "routin": [191, 208, 877, 1342, 1896, 1924, 2077], "downcast": [191, 208], "to_sparse_csr": [191, 208, 584, 585, 1898, 1901, 1902, 2011, 2062, 2077], "conj_phys": [194, 988, 2011, 2062, 2077, 2103], "contiguous_format": [195, 331, 499, 500, 1107, 1713, 1720, 1721, 2080], "non_block": [196, 209, 580, 603, 1269, 1523, 1754, 2011, 2042, 2079, 2103], "copysign": [198, 2011, 2062], "fweight": [205, 995, 2011], "aweight": [205, 995, 2011], "sparse_dim": [218, 545, 546, 1897, 1901, 1905, 1909, 2011, 2062, 2077], "dim1": [225, 227, 228, 569, 592, 593, 1094, 1096, 1097, 1304, 1927, 1945, 2011, 2103], "dim2": [225, 227, 228, 1094, 1096, 1097, 1304, 2011, 2103], "digamma": [231, 2011, 2030, 2062, 2078, 2103], "laid": 233, "outermost": [233, 1223], "channels_last": [233, 1269, 1523, 1713, 1720, 1721, 2080], "rounding_mod": [235, 236, 237, 238, 1101, 1102, 1151, 1154, 1843, 1953, 2011, 2103], "split_size_or_sect": [241, 302, 619, 1912], "eq": [244, 2011, 2030, 2062, 2103], "erf": [247, 639, 640, 2011, 2030, 2062, 2077, 2078, 2103], "erfc": [249, 641, 642, 2011, 2030, 2062, 2078, 2103], "lambd": [258, 298, 1478, 1561, 1632, 1690, 1777, 2011], "pdf": [258, 1442, 1887, 2039], "theori": [258, 2039, 2047], "fill_valu": [260, 446, 1161, 1162, 1442, 2011, 2042, 2103], "tall": [260, 1328, 1333, 2044], "start_dim": [263, 1145, 1468, 2011], "end_dim": [263, 1145, 1468, 2011], "float_pow": [269, 2011, 2062], "floor_divid": [273, 1101, 2011, 2062, 2077], "divisor": [276, 277, 489, 490, 768, 769, 1101, 1151, 1154, 1180, 1211, 1433, 1434, 1469, 1575, 1597, 1598, 1843, 1953], "fmod": [277, 1843, 2011, 2062, 2103], "mantissa": [280, 481, 1156, 1293, 1867, 2011, 2042, 2054, 2103], "gcd": [283, 2011, 2062, 2103], "ge": [285, 1225, 1363, 1474, 1479, 1480, 1493, 1531, 1633, 1634, 2011, 2030, 2062, 2103], "geometr": [286, 779, 785, 1629, 1640, 1700, 1967, 2009, 2062, 2086, 2105], "ordin": [289, 1906, 1907, 1908, 1910, 1911, 2080], "greater_equ": [294, 2011, 2062], "hypot": [304, 2011, 2062, 2103], "igamma": [308, 2011, 2062, 2103], "igammac": [310, 2011, 2062, 2103], "3100": [311, 483, 1240, 1841], "3553j": [311, 483, 1240, 1841], "5445": [311, 483, 1240, 1841], "7896j": [311, 483, 1240, 1841], "6492": [311, 483, 1240, 1841], "0633j": [311, 483, 1240, 1841], "0638": [311, 483, 1240, 1841], "8119j": [311, 483, 1240, 1841], "3553": [311, 1240], "7896": [311, 1240], "0633": [311, 1240, 1316, 2032], "8119": [311, 1240], "index_add_": [312, 901, 903, 906, 1241, 1242, 2011, 2055], "index_copy_": [314, 2011], "index_fill_": [316, 2011, 2030], "index_put_": [318, 2011], "include_self": [321, 516, 517, 1243, 1858, 2011, 2103], "identit": 321, "floattensor": [321, 487, 686, 687, 688, 689, 690, 735, 920, 921, 941, 1465, 1466, 1526, 1567, 1865, 2080, 2083], "amax": [321, 517, 696, 697, 1901, 2011, 2062, 2103], "amin": [321, 517, 695, 697, 1901, 2011, 2062, 2103], "fill_": [321, 1269, 1295, 1523, 1844, 2011, 2030, 2051, 2079], "72": [321, 617, 1223, 2067], "uint8_t": [326, 1774], "retain_grad": [335, 2011, 2039, 2062], "requires_grad_": [335, 448, 1269, 1442, 1523, 1613, 1898, 1901, 1939, 2011, 2030, 2039, 2083, 2108], "n_fft": [351, 556, 1266, 1920, 2011], "hop_length": [351, 556, 1266, 1920, 2011], "win_length": [351, 556, 1266, 1920, 2011], "center": [351, 556, 779, 785, 1126, 1266, 1594, 1629, 1640, 1700, 1791, 1813, 1880, 1920, 2011, 2039, 2062, 2082], "onesid": [351, 556, 1266, 1920, 2011, 2103], "return_complex": [351, 556, 1266, 1920, 2011], "element_s": [353, 435, 2011, 2030, 2062, 2079], "lcm": [356, 2011, 2062], "ldexp": [358, 1156, 2011, 2062], "lerp": [362, 2011, 2062], "lt": [363, 395, 1191, 1296, 2010, 2011, 2030, 2062, 2094, 2097, 2103], "less_equ": [366, 2011, 2062], "lgamma": [368, 651, 652, 2011, 2062, 2103], "ln": [377, 1298, 2078], "logical_and": [383, 2011, 2062, 2103], "logical_not": [385, 1681, 2011, 2030, 2032, 2062, 2103], "logical_or": [387, 2011, 2062, 2103], "logical_xor": [389, 2011, 2062, 2103], "pivot": [396, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1359, 1360, 1361, 1823, 2011], "get_info": [396, 1359], "lu_data": [397, 1360, 1361, 2011], "lu_pivot": [397, 1360, 1361, 2011], "masked_fill_": [399, 1681, 2011, 2030, 2031], "booltensor": [400, 402, 735, 1363, 1567, 1976, 2080, 2083], "masked_scatter_": [401, 2011], "mvlgamma": [426, 2011, 2062], "posinf": [427, 428, 1413, 2011], "neginf": [427, 428, 1413, 2011], "nan_to_num": [428, 2011, 2062], "interpol": [431, 479, 785, 786, 787, 819, 1295, 1416, 1576, 1577, 1578, 1594, 1629, 1700, 1701, 1702, 1824, 1961, 2011, 2069], "ne": [439, 1728, 1762, 1770, 2011, 2030, 2062, 2103, 2108], "8182e": 445, "5765e": 445, "41": [445, 1109, 1328, 1703, 1761, 1823], "0545e": 445, "0949e": 445, "4842e": [445, 1109], "0000e": [445, 1109, 1149, 1347, 1356, 1413, 1761, 1878, 1880, 1881, 1886, 1887], "00": [445, 1109, 1149, 1347, 1356, 1413, 1761, 1775, 1878, 1880, 1881, 1886, 1887, 2010, 2061], "141592": [446, 1161], "1416": [446, 1090, 1161, 1939], "from_numpi": [448, 880, 881, 1863, 1939, 2017, 2099], "array_lik": [448, 880, 1906, 1907, 1908, 1909, 1910, 1911, 1939, 2032], "nextaft": [451, 2011, 2062, 2103], "fro": [453, 1301, 1322, 1326, 1339, 1739, 1748, 1768, 2011], "not_equ": [456, 2011, 2062], "resolve_conj": [458, 988, 2011, 2062], "resolve_neg": [458, 2011, 2062], "shorthand": [458, 1289], "input3": [460, 2011], "transpos": [460, 593, 594, 617, 692, 741, 742, 743, 965, 966, 1106, 1174, 1299, 1300, 1306, 1309, 1312, 1319, 1330, 1333, 1453, 1454, 1455, 1539, 1575, 1607, 1608, 1609, 1681, 1722, 1723, 1725, 1727, 1811, 1924, 1926, 1927, 1934, 1948, 2011, 2030, 2032, 2039, 2054, 2061, 2062, 2069, 2077, 2081, 2083, 2103], "polygamma": [466, 2011, 2062, 2078], "q_per_channel_axi": [473, 474, 2011, 2062], "zero_point": [474, 476, 738, 739, 740, 741, 742, 743, 744, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 770, 772, 773, 774, 775, 777, 780, 781, 799, 802, 819, 820, 821, 822, 825, 853, 1120, 1121, 1825, 1826, 1827, 1828, 1829, 2011, 2067, 2068], "qtensor": [478, 2011], "queu": [486, 1012, 1396, 1980, 2042], "life": [486, 1009], "cycl": [486, 894, 1009, 1184, 1799, 1805, 2039, 2066], "poll": 486, "realloc": [486, 973, 1244, 2042], "counterintuit": [486, 2039], "s1": [486, 1184, 2096], "some_comm_op": 486, "wouldn": [486, 1197, 2074, 2098], "chrome": [486, 932, 2066, 2102, 2106], "export_chrome_trac": [486, 2066, 2106], "cudacachingalloc": [486, 2042, 2047], "enable_grad": [488, 2015, 2086], "0100": [488, 876, 1323, 1825], "0200": 488, "0300": [488, 2056], "maxnorm": [491, 492, 1844, 2011], "tile": [493, 2011, 2042, 2062, 2077, 2099], "repeat_interleav": [493, 1961, 2011, 2062, 2069], "output_s": [494, 741, 742, 743, 766, 767, 1424, 1425, 1426, 1428, 1429, 1430, 1454, 1469, 1470, 1471, 1519, 1520, 1521, 1575, 1588, 1589, 1590, 1591, 1592, 1593, 1623, 1624, 1625, 1657, 1658, 1659, 1845, 2011, 2032, 2103], "is_leaf": [495, 2011, 2030, 2032, 2062], "saved_weight": 496, "loaded_weight": 496, "5503": 496, "4926": [496, 2051], "1158": 496, "8303": 496, "1007": 496, "9853": 496, "2316": 496, "6606": 496, "resiz": [499, 500, 524, 545, 546, 1159, 1160, 1164, 1576, 1629, 1640, 2011, 2030, 2062, 2079, 2103], "set_": [499, 2011], "shift": [505, 946, 949, 1126, 1133, 1431, 1437, 1438, 1439, 1467, 1563, 1622, 1850, 1879, 2011, 2014], "decim": [507, 508, 1852, 2011, 2054, 2112], "scatter_": [512, 515, 1856, 2011], "scatter_add_": [513, 514, 1857, 1961, 2011], "scatter_reduce_": [513, 516, 1858, 2011], "axi": [513, 515, 517, 822, 825, 986, 1105, 1120, 1146, 1210, 1235, 1825, 1845, 1850, 1851, 1975, 2011, 2017, 2045, 2061, 2065, 2067, 2099, 2103, 2107], "4600": 513, "2300": 513, "scatter_reduc": [517, 1961, 2011, 2062, 2103], "sgn": [522, 1155, 1876, 2011, 2030, 2032, 2062, 2077], "untypedstorag": [524, 557, 613, 2009, 2056, 2079], "int16": [525, 1159, 1352, 2077, 2079, 2080, 2083, 2112], "dense_dim": [543, 545, 546, 583, 584, 585, 587, 588, 1909, 2011, 2062, 2077], "nse": [544, 2077], "6550": 544, "2397": 544, "1611": 544, "0779": [544, 1306, 1820, 1976], "2326": 544, "0558": 544, "4711": 544, "9678": 544, "5138": 544, "0411": 544, "9417": 544, "5158": 544, "0793": 544, "0036": [544, 1367], "2569": 544, "1055": 544, "sparse_coo": [544, 583, 1419, 1901, 1904, 1905, 1909, 2077, 2080], "split_siz": [547, 1912, 2011, 2103], "squeez": [553, 693, 695, 696, 697, 699, 1291, 1357, 1367, 1369, 1370, 1372, 1375, 1414, 1417, 1611, 1821, 1905, 1918, 1919, 1923, 1968, 1969, 2011, 2030, 2061, 2062, 2069, 2081, 2103], "pad_mod": [556, 1920, 2011], "typedstorag": [557, 2009, 2056, 2079], "untyped_storag": 557, "compute_uv": [567, 1333, 1334, 1924, 2011], "axis0": [568, 1926, 2011], "axis1": [568, 1926, 2011], "dim0": [569, 592, 593, 1927, 1945, 2011], "indices_or_sect": [578, 1104, 1233, 1940, 1974], "5044": 580, "0005": [580, 1803, 1809], "3310": 580, "0584": [580, 1924], "cuda0": [580, 2042, 2049, 2083], "masked_grad": [581, 2011], "sparse_mask": [581, 2011, 2062], "mkldnn": [582, 1279, 2009, 2062], "sparsedim": 583, "blocksiz": [583, 584, 585, 1906, 1907, 1908, 2011, 2077], "sparse_csc": [583, 587, 1904, 1908, 1910, 2077], "sparse_bsr": [583, 585, 1907, 1908, 2077], "sparse_bsc": [583, 584, 1906, 1908, 2077], "bsr": [583, 585, 1907, 1908, 2084], "bsc": [583, 584, 1906, 1908, 2084], "csc": [583, 587, 1908, 1910, 2084], "minu": [583, 584, 585, 587, 588, 2078], "crow_indic": [583, 585, 588, 1899, 1901, 1902, 1904, 1907, 1908, 1911, 2011, 2062, 2077, 2084], "col_indic": [583, 585, 588, 1901, 1902, 1904, 1907, 1908, 1911, 2011, 2062, 2077, 2084], "sparsecsr": [583, 1945, 2077], "row_indic": [584, 587, 1906, 1910, 2011, 2062, 2077, 2084], "ccol_indic": [584, 587, 1906, 1910, 2011, 2062, 2077, 2084], "_nnz": [586, 587, 588, 2062], "012766935862600803": 589, "5415473580360413": 589, "08909505605697632": 589, "7729271650314331": 589, "unitriangular": [594, 1332, 1948, 2011], "tril": [596, 1584, 1585, 1586, 1681, 2011, 2062, 2099], "triu": [598, 1733, 1948, 2011, 2061, 2062, 2099], "trunc": [602, 677, 678, 687, 1101, 1144, 1151, 1154, 1852, 2011, 2030, 2062, 2077, 2103], "sizedim": 607, "return_invers": [609, 610, 1957, 1958, 2011], "return_count": [609, 610, 1957, 1958, 2011], "unsqueez": [612, 1126, 1290, 1330, 1465, 1543, 1733, 1942, 2011, 2044, 2062, 2069, 2077, 2081, 2082, 2103], "subspac": [617, 1333, 1529, 1813, 1924, 1925], "span": [617, 1067, 1068, 1458, 1924, 2066, 2072], "foral": 617, "proportion": [617, 785, 1576, 1700], "9482": [617, 1246], "0310": 617, "4999": 617, "5316": 617, "1520": 617, "7472": 617, "5617": 617, "8649": 617, "4724": [617, 2051], "0334": 617, "2976": 617, "8499": 617, "2109": 617, "9913": 617, "9607": 617, "6123": 617, "1064483442": 617, "1124191867": 617, "1069546515": 617, "1089989247": 617, "1105482831": 617, "1061112040": 617, "1057999968": 617, "1084397505": 617, "1071760287": 617, "1123489973": 617, "1097310419": 617, "1084649136": 617, "1101533110": 617, "1073668768": 617, "1082790149": 617, "1088634448": 617, "1000000000": 617, "0047": 617, "0310j": 617, "5316j": 617, "7472j": 617, "8649j": 617, "0334j": 617, "8499j": 617, "9913j": 617, "6123j": 617, "202": 617, "154": [617, 2057], "59": [617, 1950, 1952], "182": 617, "243": [617, 1266, 1924], "253": 617, "188": 617, "185": [617, 2108], "252": [617, 2057], "191": 617, "63": [617, 2057, 2067], "240": 617, "227": 617, "165": 617, "190": 617, "146": 617, "106": 617, "205": 617, "112": [617, 2108], "206": 617, "189": 617, "95": [617, 1801, 1804, 1805], "147": 617, "43": 617, "246": [617, 2108], "87": 617, "235": 617, "226": 617, "254": [617, 2057], "111": [617, 1775, 2061], "117": 617, "177": 617, "28": [617, 746, 1089, 1946, 2059, 2061, 2096, 2097, 2102], "xlogi": [622, 2011, 2062, 2078], "inductor": [680, 973, 2019, 2062, 2067, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2105, 2106, 2108, 2110], "dist_c10d": 680, "dist_ddp": [680, 2043], "dist_fsdp": 680, "aot_graph": [680, 2019], "aot_joint_graph": [680, 2019], "ddp_graph": [680, 2019, 2043], "graph_cod": [680, 2019, 2096], "graph_break": [680, 2019, 2093, 2096, 2099, 2100, 2106], "graph_siz": [680, 2096], "recompiles_verbos": 680, "trace_sourc": 680, "trace_cal": 680, "trace_bytecod": 680, "output_cod": [680, 2019, 2099, 2101, 2108], "perf_hint": [680, 973], "post_grad_graph": 680, "cudagraph": [680, 973, 1040, 2042, 2089, 2099, 2101, 2102, 2105], "sym_nod": 680, "compiled_autograd_verbos": 680, "toggl": [680, 2042], "suppress": [680, 2013, 2071], "silenc": 680, "lowest": [680, 963, 1413, 1738, 1739, 1747, 1748, 1834, 1835, 2044, 2084], "notset": 680, "torchinductor": [680, 2019, 2089, 2090, 2095, 2097, 2099, 2101], "ddpoptim": [680, 2019], "symnod": [680, 2095], "opter": 680, "unregist": [680, 2019, 2026, 2061], "cosin": [683, 684, 992, 993, 1456, 1457, 1611, 1797, 1798, 1805, 1882, 2063, 2099], "3348": 683, "5889": 683, "2005": [683, 1969, 2108], "1584": 683, "2294": [683, 1369], "2004": 683, "3690": 683, "7298": [683, 1842], "hyperbol": [684, 883, 886, 993, 1564, 1891, 1938], "uniform_": [684, 886, 943, 2009, 2011, 2030, 2037, 2044, 2078, 2086], "3192": 684, "9915": 684, "9674": 684, "7151": 684, "7791": 684, "3120": [684, 990], "2979": 684, "1341": 684, "_i": [685, 686, 687, 688, 689, 941, 943, 946, 949, 953, 968, 1101, 1151, 1293, 1295, 1408, 1572, 1816, 1820, 1836, 1839, 1874, 1921, 1976, 2078], "0202": 685, "0985": 685, "3506": [685, 1359], "6056": 685, "3944": 685, "9732": 685, "3497": 685, "6245": [685, 1301], "4022": [685, 1924], "3743": 685, "7724": 685, "5811": 685, "8017": 685, "7695": 685, "3930": 685, "3672": [685, 1005, 1302], "1450": [685, 1905], "6971": 685, "0736": [685, 2051], "0994": 685, "3216": 685, "7845": 685, "1610": 685, "1868": 685, "4090": 685, "9902": [685, 1005, 1302], "3667": [685, 990], "3925": 685, "6147": 685, "sum_": [686, 1266, 1321, 1338, 1432, 1433, 1434, 1450, 1451, 1452, 1458, 1490, 1491, 1492, 1511, 1526, 1530, 1532, 1918, 1919, 1920, 1941, 1946, 1968, 1969, 1970, 2078], "mathbin": [686, 689, 690, 941, 953, 1902], "doubletensor": [686, 687, 688, 689, 690, 941, 1865, 2080, 2083], "tensorfloat32": [686, 689, 941, 953, 1364, 1374, 1450, 1451, 1452, 1453, 1454, 1455, 1510, 1604, 1605, 1606, 1607, 1608, 1609, 1646, 1867, 2042, 2054], "6311": 686, "0503": 686, "9768": [686, 2051], "0362": 686, "1653": 686, "8185": 686, "4255": [686, 1408], "6760": 686, "9453": 686, "5743": 686, "8202": 686, "3691": 686, "0943": 686, "1109": [686, 1476, 1887], "4730": [686, 1941], "histor": [687, 1062, 1462, 2041, 2051, 2056], "2312": [687, 1905], "6496": 687, "1312": 687, "0428": 687, "4292": 687, "1030": 687, "5369": 687, "9829": 687, "0430": 687, "8635": 688, "6391": 688, "6174": 688, "7617": 688, "5879": 688, "7388": 688, "8353": 688, "6249": 688, "6511": 688, "8716": 689, "4671": 689, "3746": 689, "7573": 689, "9555": 689, "8681": 689, "3768": 690, "5565": 690, "otim": [691, 1290, 1473, 1628], "conj": [692, 989, 1122, 1123, 1125, 1127, 1134, 1136, 1140, 1141, 1143, 1299, 1300, 1306, 1308, 1327, 1847, 1848, 2011, 2044, 2048, 2062, 2083, 2103], "mh": [692, 964, 965, 966, 1306, 1924, 2011, 2062, 2081, 2083], "lvert": [694, 1258, 1572, 1666, 2084], "rvert": [694, 1258, 2084], "leq": [694, 942, 943, 990, 1124, 1126, 1258, 1290, 1294, 1309, 1315, 1442, 1464, 1526, 1528, 1530, 1613, 1665, 1668, 1877, 1920, 2037, 2078], "elementwis": [694, 990, 1021, 1048, 1049, 1149, 1151, 1423, 1485, 1486, 1487, 1690, 1967, 2013, 2032, 2048, 2078], "07": [694, 819, 820, 821, 822, 825, 964, 1109, 1307, 1310, 1315, 1327, 1328, 1334, 1357, 1360, 1727, 1776, 1783, 1881, 1886, 1924, 2061], "09": [694, 1783, 1795, 2017, 2084], "8177": 695, "4878": 695, "2491": 695, "9130": 695, "7158": 695, "1775": 695, "0992": 695, "4817": 695, "0053": 695, "0164": 695, "3738": 695, "0507": [695, 2061], "9700": 695, "1106": 695, "0318": 695, "0816": [695, 1359], "6451": 696, "4866": [696, 2090], "2987": 696, "3312": 696, "5744": 696, "2980": [696, 2032], "8397": 696, "2713": 696, "9128": 696, "9214": 696, "7268": 696, "2995": 696, "9023": [696, 1300], "4853": 696, "9075": 696, "6165": 696, "180": [698, 1090, 1831], "14159": [698, 1939], "135": 698, "45": [698, 1438, 1439, 1486, 1487, 1563, 1761, 2061], "ao": [700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 2067, 2068, 2069], "batch_norm": [700, 701, 1279, 2011, 2062], "fuse": [700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 728, 729, 792, 793, 802, 804, 805, 806, 814, 848, 860, 861, 973, 1283, 1284, 1681, 1720, 1721, 1722, 1723, 1724, 1725, 1779, 1780, 1781, 1793, 1867, 2023, 2030, 2033, 2061, 2063, 2067, 2068, 2069, 2070, 2099, 2101, 2107], "bn": [702, 703, 704, 705, 706, 707, 814, 861, 1106, 1279, 1722, 1724, 2056, 2063, 2067, 2068], "qat": [712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 730, 731, 732, 733, 792, 793, 847, 2067, 2068, 2069], "dilat": [712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 730, 731, 738, 739, 740, 741, 742, 743, 772, 773, 774, 782, 783, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1499, 1500, 1501, 1502, 1503, 1504, 1516, 1517, 1518, 1575, 1604, 1605, 1606, 1607, 1608, 1609, 1623, 1654, 1655, 1656, 1699, 1828, 1829, 2011, 2061, 2103], "padding_mod": [712, 713, 714, 715, 716, 717, 718, 719, 725, 726, 727, 730, 731, 738, 739, 740, 741, 742, 743, 772, 773, 774, 1450, 1451, 1452, 1453, 1454, 1455, 1499, 1500, 1501, 1502, 1503, 1504, 1629, 2011, 2103], "momentum": [712, 713, 714, 715, 716, 717, 723, 724, 736, 737, 751, 752, 753, 1437, 1438, 1439, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1563, 1599, 1639, 1784, 1791, 1793, 1799, 1805, 1807, 2011, 2051, 2053, 2063, 2103], "freeze_bn": [712, 713, 714, 715, 716, 717], "qconfig": [712, 713, 714, 715, 716, 717, 718, 719, 720, 730, 731, 732, 733, 788, 789, 791, 794, 795, 796, 797, 838, 839, 840, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 859, 860, 862, 863, 2088], "batchnorm1d": [712, 715, 1496, 1563, 1599, 2056, 2069], "fakequant": [712, 713, 714, 715, 716, 717, 718, 719, 720, 730, 731, 732, 733, 802, 863], "weight_fake_qu": [712, 713, 714, 715, 716, 717, 718, 719, 730, 731], "quant": [712, 713, 714, 715, 716, 717, 718, 719, 720, 730, 731, 732, 790, 792, 793, 838, 862, 863, 1120, 1121, 2067, 2068], "batchnorm3d": [714, 717, 719, 724, 1498, 1563, 1599, 2069], "num_featur": [723, 724, 736, 737, 751, 752, 753, 1269, 1437, 1438, 1439, 1485, 1486, 1487, 1496, 1497, 1498, 1505, 1506, 1507, 1523, 1563, 1631, 2051], "qint8": [728, 729, 756, 761, 764, 765, 772, 773, 774, 781, 792, 794, 799, 820, 842, 859, 860, 862, 863, 1774, 1825, 1826, 2067, 2069, 2070, 2079, 2083, 2084], "from_float": [732, 738, 739, 740, 745, 746, 756, 764, 797, 817, 823, 826, 838, 2067], "qparams_dict": [732, 738, 739, 740, 764], "hidden_s": [734, 760, 761, 765, 1474, 1475, 1493, 1494, 1539, 1540, 1541, 2011], "batch_first": [734, 735, 760, 1474, 1493, 1529, 1539, 1540, 1567, 1569, 1571, 1755, 1757, 1758, 1760, 2011, 2046], "bidirect": [734, 760, 1474, 1493, 1539, 1540, 2011], "_lstmlayer": 734, "nnqa": 734, "h0": [734, 760, 762, 1474, 1493, 1539], "c0": [734, 762, 1493, 2108], "hn": [734, 760, 762, 1474, 1475, 1493, 1539], "cn": [734, 762, 1269, 1493, 1836], "weight_ih": [734, 1475, 1494, 1539, 1541], "weight_hh": [734, 1475, 1494, 1539, 1541], "embed_dim": [735, 1529], "num_head": [735, 1529, 1583, 2011], "add_bias_kv": [735, 1529], "add_zero_attn": [735, 1529, 2011], "kdim": [735, 1529], "vdim": [735, 1529], "dequant": [735, 788, 790, 792, 793, 799, 801, 862, 2011, 2062, 2068, 2070, 2084, 2087], "mha": [735, 1529, 2009], "conver": 735, "key_padding_mask": [735, 1529, 2011], "need_weight": [735, 1529, 2011], "attn_mask": [735, 1529, 1567, 1681, 2011], "average_attn_weight": [735, 1529, 2011], "is_caus": [735, 1529, 1570, 1571, 1586, 1681, 2011], "attn_output_weight": [735, 1529], "unmask": [735, 1567], "attn_weight": [735, 1529, 1681], "head": [735, 1427, 1529, 1567, 1569, 1571], "attn_output": [735, 1529], "quint8": [738, 739, 740, 741, 742, 743, 745, 746, 756, 772, 773, 774, 781, 792, 794, 799, 819, 820, 821, 822, 825, 827, 860, 862, 1774, 1825, 1826, 1827, 1828, 1829, 2067, 2069, 2070, 2079, 2083, 2084], "learnabl": [738, 739, 740, 741, 742, 743, 745, 746, 756, 760, 764, 1437, 1438, 1439, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1465, 1466, 1474, 1475, 1477, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1531, 1538, 1539, 1541, 1563, 1621, 1674, 1712, 2051, 2063], "q_input": [738, 739, 740, 741, 742, 743, 772, 773, 774], "quantize_per_tensor": [738, 739, 740, 741, 742, 743, 756, 757, 758, 772, 773, 774, 1827, 1828, 1829, 2011, 2062, 2067], "unequ": [739, 740, 741, 742, 743, 1451, 1452, 1454, 1455], "50": [739, 741, 742, 743, 772, 824, 1325, 1433, 1434, 1442, 1450, 1451, 1452, 1454, 1455, 1470, 1471, 1490, 1491, 1492, 1516, 1517, 1518, 1574, 1606, 1607, 1609, 1613, 1624, 1625, 1792, 1936, 2032, 2042, 2082, 2099], "56": [740, 1959, 2077, 2102], "output_pad": [741, 742, 743, 1453, 1454, 1455, 1502, 1503, 1504, 1607, 1608, 1609, 2011, 2103], "qnnpack": [741, 742, 756, 764, 856, 857, 860, 862, 863, 2067, 2069], "convtranspose2d": [741, 1503, 1608, 1720, 1961, 2069], "nnq": [741, 742, 743, 788, 789, 790, 865, 2067], "downsampl": [741, 742, 743, 1454, 1576, 1594, 1629, 1640], "upsampl": [741, 742, 743, 779, 786, 787, 819, 1454, 1577, 1578, 1594, 1629, 1640, 1701, 1702], "fbgemm": [742, 743, 756, 764, 833, 856, 857, 860, 862, 863, 2017, 2067, 2068, 2099, 2100], "cubic": [743, 1471, 1625, 1629], "num_embed": [745, 746, 1465, 1466, 1621], "embedding_dim": [745, 746, 1465, 1466, 1495, 1620, 1621], "padding_idx": [745, 1465, 1466, 1620, 1621, 2011, 2103], "scale_grad_by_freq": [745, 746, 1465, 1466, 1620, 1621, 2011, 2103], "_weight": [745, 746, 1465, 1466, 1784, 1790, 2107], "overwritten": [745, 746, 756, 764, 797, 842, 862, 2039, 2044, 2084, 2093], "_embed": [745, 746], "_dim": [745, 746, 1465], "include_last_offset": [746, 1466, 1621, 2011, 2103], "embedding_bag": [746, 2011, 2062], "floatfunct": [747, 2067], "activation_post_process": [747, 799, 2067], "add_relu": [747, 748, 757, 2023, 2062, 2087], "add_scalar": [747, 748, 757, 2062, 2082, 2087], "mul_scalar": [747, 748, 757, 2062, 2087], "collector": 748, "f_add": 748, "num_channel": [749, 1477, 2031], "normalized_shap": [754, 1495, 1538, 1643, 1678, 1712, 2011, 2032, 2103], "elementwise_affin": [754, 1495, 1538, 1712], "negative_slop": [755, 780, 1509, 1644, 1645, 2011, 2037, 2103], "slope": [755, 780, 1509, 1555, 2037], "bias_": [756, 764], "_featur": [756, 764, 781, 1427, 1440, 1508, 1510, 1600, 1646], "from_refer": [756, 764], "ref_qlinear": [756, 764], "output_scal": [756, 759, 1827, 2011], "output_zero_point": [756, 759, 1827, 2011], "q_add": 757, "qint32": [757, 758, 1774, 1825, 1826, 2067, 2070, 2079, 2083, 2084], "x_0": [758, 1946], "gate": [760, 761, 1473, 1474, 1475, 1493, 1553, 1628, 1684], "r_t": [760, 1474, 1790], "w_": [760, 1425, 1426, 1429, 1430, 1433, 1434, 1436, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1454, 1455, 1458, 1470, 1471, 1474, 1475, 1491, 1492, 1493, 1494, 1517, 1518, 1520, 1521, 1530, 1535, 1536, 1539, 1541, 1545, 1546, 1547, 1548, 1549, 1550, 1576, 1577, 1578, 1579, 1580, 1581, 1625, 1629], "x_t": [760, 896, 900, 901, 906, 907, 1437, 1438, 1439, 1474, 1485, 1486, 1487, 1493, 1539, 1563, 1778], "b_": [760, 1474, 1475, 1493, 1494, 1511, 1539, 1541, 1941, 2077], "hr": [760, 1474, 1475, 1493, 2048], "h_": [760, 1425, 1426, 1429, 1430, 1433, 1434, 1440, 1445, 1446, 1448, 1449, 1451, 1452, 1454, 1455, 1470, 1471, 1474, 1475, 1491, 1492, 1493, 1510, 1517, 1518, 1519, 1520, 1521, 1535, 1536, 1539, 1541, 1546, 1547, 1549, 1550, 1576, 1577, 1578, 1580, 1581, 1600, 1625, 1629], "z_t": [760, 1474], "iz": [760, 1474, 1475], "hz": [760, 1017, 1474, 1475, 2082], "n_t": [760, 1474], "odot": [760, 1474, 1475, 1493, 1494], "h_t": [760, 1474, 1493, 1539], "hadamard": [760, 1474, 1475, 1493, 1494], "multilay": [760, 1474, 1493, 2059], "_t": [760, 1474, 1493, 1791, 1793, 2044, 2063], "b_ih": [760, 1474, 1475, 1493, 1494, 1539, 1541, 2011], "b_hh": [760, 1474, 1475, 1493, 1494, 1539, 1541, 2011], "h_0": [760, 1474, 1493, 1494, 1539], "seq_len": [760, 1474, 1493, 1529, 1539], "pack_padded_sequ": [760, 1474, 1493, 1539, 1754, 1756, 1757, 2046], "num_direct": [760, 1474, 1493, 1539], "h_n": [760, 1474, 1493, 1539], "_size": [760, 1424, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1470, 1471, 1474, 1475, 1490, 1491, 1492, 1493, 1494, 1516, 1517, 1518, 1519, 1520, 1521, 1539, 1541, 1575, 1625], "_layer": [760, 1474, 1493, 1539], "_direct": 760, "output1": [760, 1427, 2038, 2061], "output2": [760, 1427], "weight_ih_l": [760, 1474, 1493, 1539], "w_ir": [760, 1474], "w_iz": [760, 1474], "w_in": [760, 1474], "weight_hh_l": [760, 1474, 1493, 1539], "w_hr": [760, 1474], "w_hz": [760, 1474], "w_hn": [760, 1474], "bias_ih_l": [760, 1474, 1493, 1539], "b_ir": [760, 1474], "b_iz": [760, 1474], "b_in": [760, 1474], "bias_hh_l": [760, 1474, 1493, 1539], "b_hr": [760, 1474], "b_hz": [760, 1474], "b_hn": [760, 1474], "mathcal": [760, 1440, 1450, 1451, 1452, 1453, 1454, 1455, 1465, 1466, 1474, 1475, 1493, 1494, 1508, 1510, 1539, 1541, 1542, 1563, 1836, 2037, 2048], "subtli": [760, 1474, 1793], "gru": [761, 1475, 1540, 2011, 2042, 2062, 2067, 2069], "cell": [761, 763, 765, 1474, 1475, 1493, 1494, 1539, 1541], "hx": [761, 763, 765, 1475, 1494, 1541, 2011], "cx": [763, 1494, 2011], "nonlinear": [765, 1435, 1456, 1482, 1539, 1541, 1551, 2009, 2037, 2077], "elman": [765, 1539, 1541], "adaptiveavgpool2d": [766, 1589, 1961, 2069], "adaptiveavgpool3d": [767, 1590, 1961, 2069], "ceil_mod": [768, 769, 782, 783, 1432, 1433, 1434, 1490, 1491, 1492, 1516, 1517, 1518, 1596, 1597, 1598, 1650, 1651, 1652, 1654, 1655, 1656, 1828, 1829, 2011, 2103], "count_include_pad": [768, 769, 1432, 1433, 1434, 1596, 1597, 1598, 2011, 2103], "divisor_overrid": [768, 769, 1433, 1434, 1597, 1598, 2011, 2103], "kh": [768, 769, 773, 774, 1433, 1434, 1470, 1471, 1517, 1518, 1597, 1598, 1605, 1606, 1608, 1609, 1624, 1625, 1655, 1656], "kw": [768, 769, 773, 774, 1433, 1434, 1470, 1471, 1517, 1518, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1624, 1625, 1654, 1655, 1656], "sh": [768, 769, 773, 774, 1597, 1598, 1605, 1606, 1608, 1609, 1655, 1656, 2108], "sw": [768, 769, 772, 773, 774, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1654, 1655, 1656], "avgpool2d": [768, 1597, 2069], "_channel": [768, 769, 772, 773, 774, 1450, 1451, 1452, 1453, 1454, 1455, 1477, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1654, 1655, 1656, 2072], "ih": [768, 769, 773, 774, 1539, 1541, 1597, 1598, 1605, 1606, 1608, 1609, 1655, 1656], "iw": [768, 769, 772, 773, 774, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609, 1654, 1655, 1656], "padh": [768, 769, 773, 774, 1597, 1598, 1605, 1606, 1608, 1609], "padw": [768, 769, 772, 773, 774, 1596, 1597, 1598, 1604, 1605, 1606, 1607, 1608, 1609], "kd": [769, 774, 1434, 1518], "padd": [769, 774], "formul": [770, 1441, 1464, 1478, 1513, 1560, 1561, 1648, 1666, 1681, 2048, 2077], "min_": [771, 1305, 1306, 1315, 1333, 1924], "max_": [771, 1516, 1517, 1518, 1728, 1762], "convolv": [772, 773, 774, 1450, 1451, 1452, 1453, 1454, 1455, 1499, 1500, 1501, 1502, 1503, 1504, 1604, 1605, 1606, 1607, 1608, 1609], "dw": [772, 773, 774, 1604, 1605, 1606, 1607, 1608, 1609], "qf": [772, 773, 774], "dtype_input": [772, 773, 774], "dtype_filt": [772, 773, 774], "q_filter": [772, 773, 774], "dh": [773, 774, 1605, 1606, 1608, 1609], "dd": 774, "scale_factor": [779, 785, 786, 787, 1576, 1577, 1578, 1640, 1681, 1700, 1701, 1702, 2011, 2103], "align_corn": [779, 785, 786, 1576, 1577, 1594, 1629, 1640, 1700, 1701, 2011, 2103], "height": [779, 785, 1433, 1434, 1451, 1452, 1454, 1455, 1491, 1492, 1517, 1518, 1530, 1558, 1576, 1640, 1700, 2031], "spatial": [779, 785, 786, 787, 961, 1126, 1438, 1469, 1495, 1535, 1536, 1558, 1575, 1576, 1577, 1578, 1594, 1602, 1629, 1640, 1670, 1671, 1672, 1700, 1701, 1702], "pixel": [779, 785, 787, 1451, 1458, 1461, 1462, 1463, 1467, 1530, 1535, 1536, 1576, 1594, 1629, 1640, 1700, 1702], "corner": [779, 785, 952, 1576, 1584, 1585, 1586, 1594, 1629, 1640, 1700, 2059], "leakyrelu": [780, 1524, 1644, 2051, 2069], "_slope": [780, 1509, 1644, 2037], "xa": [781, 1319, 1330, 1331, 1332, 1510, 1646], "return_indic": [782, 783, 1428, 1429, 1430, 1470, 1471, 1516, 1517, 1518, 1519, 1520, 1521, 1591, 1592, 1593, 1624, 1625, 1654, 1655, 1656, 2011], "maxpool1d": [782, 1519, 1654, 1657, 2069], "linearli": [785, 1171, 1328, 1576, 1700, 1802, 1823, 2046, 2063, 2070], "neighbour": [787, 1511, 1640, 1702], "stub": [788, 789, 2064], "calibr": [788, 789, 797, 838, 839, 858, 860, 862, 2038, 2067, 2068, 2070, 2088], "quantstub": [790, 2067], "dequantstub": [790, 2067], "quantwrapp": 791, "backend_config": [792, 793, 794, 795, 796, 817, 818, 860, 861, 862, 863, 2088], "backendpatternconfig": [792, 862], "blob": [792, 1164, 2048, 2050, 2082, 2107], "dtypeconfig": [792, 793, 795, 862], "observationtyp": [792, 793, 862, 2069], "weighted_int8_dtype_config": [792, 862], "input_dtyp": [792, 794, 862, 2069], "output_dtyp": [792, 794, 862, 2069, 2103], "weight_dtyp": [792, 794, 862, 2069], "bias_dtyp": [792, 794, 2069], "fuse_conv2d_relu": 792, "is_qat": [792, 793], "convrelu2d": [792, 2069], "linear_config": 792, "set_observation_typ": [792, 793, 862], "output_use_different_observer_as_input": [792, 793, 796, 862, 2069], "add_dtype_config": [792, 793, 862], "set_root_modul": [792, 793], "set_qat_modul": [792, 793], "set_reference_quantized_modul": [792, 793], "conv_relu_config": 792, "set_fused_modul": [792, 793], "set_fuser_method": [792, 793], "fused_conv_relu_config": 792, "my_backend": [792, 2094], "set_backend_pattern_config": [792, 862], "from_dict": [792, 793, 794, 815, 816, 817, 855], "backend_config_dict": [792, 2067], "set_nam": 792, "to_dict": [792, 793, 794, 815, 816, 817, 855], "backendconfig": [793, 818, 860, 862, 2070], "dtype_config": [793, 2069], "backend_pattern_config_dict": 793, "observation_typ": [793, 2069], "qat_modul": [793, 2069], "reference_quantized_modul": 793, "fused_modul": [793, 2069], "fuser_method": [793, 814, 2069], "pattern_complex_format": 793, "set_dtype_config": 793, "fuser": [793, 1283, 2010], "fuse_linear_relu": 793, "linearrelu": [793, 2069], "8bea7180a8ba3c279f2c9b050f2a69a6": 793, "understood": [793, 960], "output_share_observer_with_input": [793, 796, 2069], "renam": [793, 1962, 1964, 2011, 2017, 2030, 2031, 2062, 2102], "quantdequantstub": 793, "set_pattern": 793, "is_dynam": [794, 799, 819, 820, 821, 822, 824, 825, 826, 2069], "quant1": 794, "dequant1": 794, "fp32_linear": 794, "quant2": 794, "dequant2": 794, "bracket": [794, 2073], "dtype_config1": 794, "dtype_config2": 794, "dtypewithconstraint": [794, 2069], "quant_min_lower_bound": [794, 795, 2069], "quant_max_upper_bound": [794, 795, 2069], "255": [794, 802, 1120, 1121, 1160, 1629, 1640, 1700, 2067, 2069, 2082], "input_dtype_with_constraint": 794, "scale_min_lower_bound": [794, 795, 2069], "scale_max_upper_bound": [794, 795, 2069], "dtype_config_dict": 794, "bias_typ": [794, 862], "scale_exact_match": [795, 2069], "zero_point_exact_match": [795, 2069], "quant_min": [795, 799, 802, 819, 820, 821, 822, 825, 826, 1120, 1121, 2011, 2067], "quant_max": [795, 799, 802, 819, 820, 821, 822, 825, 826, 1120, 1121, 2011, 2067], "fixedqparamsobserv": 795, "fixedqparamsfakequant": 795, "input_output_not_observ": [796, 2069], "remove_qconfig": 797, "is_refer": 797, "convert_custom_config_dict": [797, 815, 2067], "from_observ": [797, 815, 2067], "observed_to_quantized_custom_module_class": [797, 815, 2067], "observedcustommodul": [797, 815, 817, 838, 2067], "quantizedcustommodul": [797, 815], "calib_data": 798, "fake_quant": [799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 863, 1120, 1121, 2088], "movingaverageminmaxobserv": [799, 802, 822], "observer_kwarg": [799, 802], "x_out": [799, 802], "quanti": 799, "choose_qparam": 799, "dq": 799, "fake_quant_en": 799, "observer_en": 799, "calculate_qparam": [800, 819, 820, 824], "extra_repr": [801, 1269, 1523, 1538, 1712, 2044], "qscheme": [802, 819, 820, 821, 822, 825, 826, 827, 2011, 2062, 2067, 2070, 2084], "fake_qu": [803, 807, 808, 809, 2067], "default_fake_qu": 804, "default_per_channel_weight_fake_qu": 805, "default_weight_fake_qu": 806, "histogram": [807, 819, 831, 1230, 1232, 2011, 2062, 2082], "memoryless": [808, 809], "averaging_const": [808, 809, 821, 822, 2011], "modules_to_fus": 814, "fuser_func": 814, "fuse_known_modul": 814, "fuse_custom_config_dict": [814, 816], "convmodul": 814, "bnmodul": 814, "convbnmodul": 814, "additional_fuser_method_map": 814, "fuse_conv_bn": [814, 2069], "conv1": [814, 1281, 1523, 1552, 2010, 2059, 2067, 2082], "bn1": 814, "relu1": [814, 1552, 1703], "fused_m": 814, "custom_config": [815, 816, 817, 818], "convert_fx": [815, 2067, 2088], "convert_custom_config": [815, 860, 2067], "set_observed_to_quantized_map": 815, "set_preserved_attribut": [815, 816, 817], "attr1": [815, 816, 817, 2061], "attr2": [815, 816, 817, 2061], "floatcustommodul": [815, 817], "weight_onli": [815, 860, 2022, 2067], "preserved_attribut": [815, 816, 817], "observed_class": [815, 817], "quantized_class": 815, "quant_typ": [815, 817], "quanttyp": [815, 817], "fuse_fx": [816, 2067], "fuse_custom_config": [816, 861], "convertcustomconfig": [816, 860], "prepare_fx": [817, 840, 860, 863, 2067, 2088], "prepare_qat_fx": [817, 860, 2067], "prepare_custom_config": [817, 818, 862, 863, 2067], "set_standalone_module_nam": 817, "module1": [817, 855, 2042], "qconfig_map": [817, 818, 855, 856, 857, 860, 862, 863, 2067], "child_prepare_custom_config": 817, "set_standalone_module_class": 817, "mystandalonemodul": 817, "set_float_to_observed_map": 817, "set_non_traceable_module_nam": 817, "module2": [817, 855, 2042], "module3": [817, 2042], "set_non_traceable_module_class": 817, "nontraceablemodule1": 817, "nontraceablemodule2": 817, "set_input_quantized_index": 817, "set_output_quantized_index": 817, "prepare_custom_config_dict": [817, 838, 840, 2067], "standalone_module_nam": 817, "standalone_module_class": 817, "module_class": 817, "float_to_observed_custom_module_class": [817, 838, 2067], "non_traceable_module_nam": 817, "non_traceable_module_class": 817, "input_quantized_idx": 817, "output_quantized_idx": 817, "float_class": 817, "qconfigmap": [818, 856, 857, 860, 862, 2067, 2070], "preparecustomconfig": [818, 862], "2048": [819, 1567, 1569, 1571, 2042], "upsample_r": 819, "per_tensor_affin": [819, 820, 821, 1826, 1827, 1828, 1829, 2067, 2070], "reduce_rang": [819, 820, 821, 822, 825, 827, 2011, 2067, 2068], "factory_kwarg": [819, 820, 825], "1920928955078125e": [819, 820, 821, 822, 825], "finfo": [819, 820, 821, 822, 825, 1324, 1327, 1423, 1538, 1712, 2009, 2084], "minmaxobserv": [819, 821, 825, 842, 862, 863, 2070], "x_": [820, 821, 995, 1116, 1343, 1344, 1346, 1349, 1357, 1436, 1458, 1513, 1530, 1557, 1559, 1687, 1901, 1903, 1946, 2039, 2070, 2078], "q_": [820, 2070], "x_orig": 820, "reset_min_max_v": [820, 825], "ch_axi": [822, 825, 2011], "per_channel_affin": [822, 825, 1825, 2067, 2070], "custom_op_nam": [823, 826], "with_arg": [824, 842, 862, 863], "_callable_arg": 824, "_with_arg": 824, "foo_build": 824, "foo_instance1": 824, "foo_instance2": 824, "with_callable_arg": 824, "_with_callable_arg": 824, "cur_tim": 824, "get_time_func": 824, "dan": 824, "creation_tim": 824, "compute_dtyp": 826, "ptq": [831, 2067, 2068, 2070], "obs_dict": 837, "get_observer_state_dict": 837, "allow_list": [838, 2087], "observer_non_leaf_module_list": 838, "preemptiv": [838, 839, 1713], "propagate_qconfig_": 840, "qconfig_dict": [840, 855], "pt2e": 841, "export_util": 841, "my_qconfig": 842, "default_observ": 842, "default_qat_config": 848, "set_glob": [855, 860, 862, 2067], "set_object_typ": [855, 860, 862], "set_module_name_regex": 855, "regex": 855, "set_module_nam": [855, 860, 862], "set_module_name_object_type_ord": 855, "global_qconfig": 855, "qconfig1": 855, "qconfig2": 855, "qconfig3": 855, "object_typ": 855, "module_name_regex": 855, "module_name_object_type_ord": 855, "conv0": 855, "x86": [856, 857, 1868, 2067, 2069], "run_arg": [858, 864], "qconfig_spec": 859, "quantize_fx": [860, 861, 862, 863, 2067, 2088], "_remove_qconfig": 860, "qconfig_from_prepar": 860, "prepared_model": [860, 862, 863], "xnnpack": [860, 2023, 2067], "get_default_backend_config": [860, 862, 863], "quantized_model": 860, "fusion_pattern": 861, "fusecustomconfig": 861, "_equalization_config": 862, "get_default_qconfig_map": [862, 2067], "float_model": [862, 863, 2067, 2087], "data_load": [862, 863, 1799, 1805, 2053, 2067], "get_default_qconfig": [862, 863, 2067], "linear_pattern_config": 862, "suer": 862, "sample_inference_data": [862, 2067], "get_default_qat_qconfig_map": [863, 2067], "load_weight": 863, "train_data": 863, "get_default_qat_qconfig": [863, 2067], "custom_module_class_map": 865, "lceil": [866, 962], "rceil": [866, 962], "adjac": [866, 952, 1461, 1462, 1463, 1467, 1839, 2077, 2106], "set_default_dtyp": [866, 942, 951, 1107, 1109, 1119, 1124, 1142, 1158, 1161, 1216, 1227, 1228, 1289, 1772, 1832, 1836, 1839, 1865, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2006], "get_default_dtyp": [866, 1340, 1356, 1774, 1839, 2079, 2080, 2112], "set_default_devic": [866, 942, 951, 1107, 1109, 1119, 1124, 1142, 1158, 1161, 1227, 1228, 1289, 1340, 1356, 1772, 1832, 1834, 1836, 1838, 1839, 1865, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1906, 1907, 1908, 1909, 1910, 1911, 1950, 1952, 2006, 2080], "5000": [866, 881, 887, 888, 889, 944, 968, 1124, 1126, 1127, 1134, 1137, 1142, 1152, 1154, 1155, 1156, 1223, 1229, 1232, 1295, 1321, 1340, 1414, 1416, 1447, 1448, 1466, 1576, 1824, 1828, 1829, 1830, 1839, 1843, 2078, 2083], "maxim": [875, 1367, 1456, 1519, 1520, 1521, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1791, 1792, 1793, 1794, 2077, 2099, 2108], "3398": 875, "2663": [875, 2042], "2686": 875, "2450": 875, "7401": 875, "8805": 875, "3402": 875, "1936": 875, "4907": [875, 1357], "3948": [875, 990], "0691": 875, "3132": 875, "6092": 875, "5419": 875, "2993": [875, 1923], "3195": 875, "1139": 876, "2254": 876, "1381": [876, 1923], "3687": 876, "1975": [876, 2032], "0102": 876, "4732": 876, "9240": 876, "1207": [876, 1408], "7506": 876, "0213": 876, "7809": 876, "2960": 876, "9384": 876, "1438": 876, "ascend": [877, 1126, 1306, 1308, 1337, 1392, 1859, 1896, 1957], "0785": 877, "5267": 877, "8521": 877, "4065": 877, "1598": 877, "0788": 877, "0745": 877, "2700": 877, "2208": 877, "0722": 877, "7064": 877, "2564": 877, "0669": 877, "2318": 877, "8229": 877, "9280": 877, "lexicograph": [878, 1767, 2013, 2077], "9039": 879, "6291": 879, "0795": [879, 1824, 2051], "1586": 879, "1939": [879, 2044], "4900": 879, "1909": 879, "7503": 879, "9355": 879, "histori": [880, 881, 1173, 1783, 1939, 2009, 2020, 2032, 2044, 2046, 2073], "dlpack": [881, 1157, 2009], "frombuff": [881, 1863], "data_ptr": [881, 927, 2017, 2030, 2079, 2081], "addbackward0": [881, 2051, 2056], "__array_interface__": [881, 2099], "5962": 882, "4985": 882, "4396": 882, "4525": [882, 2032], "6387": 882, "4552": 882, "sine": [883, 1879, 1889, 1891], "1606": 883, "4267": 883, "0899": 883, "0250": 883, "1599": 883, "1534": 883, "9435": 883, "8990": [883, 1101], "arctang": [884, 885], "2341": 884, "2539": 884, "6256": 884, "6448": 884, "2299": 884, "2487": 884, "5591": [884, 913], "5727": 884, "quadrant": 885, "9041": [885, 961], "0196": [885, 961], "3108": [885, 961], "4423": [885, 961], "9833": 885, "0811": 885, "9743": 885, "4151": 885, "tangent": [886, 895, 899, 900, 1170, 1171, 1564, 1937, 1938], "9385": 886, "2968": 886, "8591": 886, "1871": 886, "7253": 886, "3060": 886, "2899": 886, "1893": 886, "needs_input_grad": [890, 906, 907, 2044], "setup_context": [891, 901, 902, 903, 904, 905, 906, 907, 2017, 2045], "save_for_forward": [891, 901, 906, 907, 2045], "grad_input": [892, 901, 903, 905, 906, 907, 925, 1269, 1523, 2044, 2051], "underneath": [893, 906, 907], "generate_vmap_rul": [893, 906, 907, 2045], "grad_tensor": [894, 915, 2011, 2042], "grad_vari": 894, "forward_ad": [895, 896], "primal": [895, 900, 1166, 1170, 1171, 1174], "unpack_du": [895, 896, 899], "dual": [895, 896, 897, 899, 900, 1766, 2045], "make_du": [896, 900, 901, 906, 907], "your_fn": 896, "grad_aft": 896, "dual_level": [899, 900, 901, 906, 907], "apply_jvp": 901, "mark_dirti": [901, 906, 907, 927, 2044], "x_npy": [901, 902, 906], "once_differenti": [901, 902, 903, 904, 905, 906, 907, 2044], "mark_non_differenti": [901, 906, 907, 2044, 2045], "g1": [901, 903, 905, 906, 907, 2042, 2074], "g2": [901, 903, 905, 906, 907, 2042, 2074], "oppos": [901, 904, 906, 907, 2045], "weren": [901, 904, 906], "grad_out": [901, 904, 906, 907, 2011, 2048, 2103], "gx": [901, 904, 906], "gy": [901, 904, 906], "gz": [901, 904, 906, 2066], "y_t": [901, 906, 907], "fwad": [901, 906, 907], "a_dual": [901, 906, 907], "set_materialize_grad": [901, 906, 907, 2044], "simplefunc": [901, 905, 906, 907], "induc": [901, 905, 906, 907, 1629, 1668, 2037, 2095], "backward_extend": 907, "forward_extend": 907, "outer_jacobian_strategi": 909, "disconnect": [909, 910, 911, 912, 913, 914], "cliff": [909, 911, 915], "_debug_only_display_vmap_fallback_warn": [909, 915], "pow_reduc": [909, 910, 913], "2265": 909, "8221": 909, "9456": [909, 943], "2550": 909, "viewbackward": [909, 911, 2047], "pow_adder_reduc": [909, 910, 913], "func_output": [910, 912, 913, 914], "1448": 910, "0239": 910, "6456": 910, "4988": 910, "4310": 910, "sumbackward0": [910, 913, 2044], "3030": 910, "vhp": 910, "batched_grad": 911, "exp_reduc": [911, 912, 914], "4917": 911, "4352": 911, "4369": 911, "3799": 911, "exp_add": 911, "8052": 911, "3963": 911, "3090": 912, "6742": 912, "9114": 912, "2106": 912, "sumbackward1": [912, 914], "squeezebackward1": 912, "adder": [912, 914], "2399": 912, "5005": 912, "0689": 913, "2431": 913, "0989": 913, "4456": 913, "8053": [913, 1854], "7817": 914, "2458": 914, "7830": 914, "7782": 914, "4458": 914, "3962": 914, "3042": [914, 1327], "6354": 914, "1288": [914, 1882, 1917], "0652": 914, "5483": 914, "5035": 914, "2046": [914, 990, 2044], "1292": 914, "1432": 914, "3059": 914, "3225": 914, "6652": 914, "7753": 914, "0152": 914, "4225": 914, "3340": 914, "only_input": 915, "allow_unus": [915, 2011], "is_grads_batch": 915, "materialize_grad": 915, "require_grad": [915, 2013, 2039], "inferencemod": [916, 2039, 2090], "bump": 916, "_version": [916, 2062], "doubler": [916, 1110, 1766], "is_train": [917, 2086], "gradgradcheck": [919, 920, 2044], "06": [920, 921, 1310, 1315, 1316, 1327, 1328, 1333, 1476, 1532, 1572, 1575, 1626, 1697, 1778, 1792, 1924, 2011, 2084], "raise_except": [920, 921, 2017], "nondet_tol": [920, 921], "check_undefined_grad": [920, 921], "check_grad_dtyp": [920, 921], "check_batched_grad": [920, 921], "check_batched_forward_grad": 920, "check_forward_ad": 920, "check_backward_ad": 920, "fast_mod": [920, 921, 2048], "differenc": [920, 2044], "perturb": [920, 921, 2048], "gen_non_contig_grad_output": 921, "check_fwd_over_rev": 921, "check_rev_over_rev": 921, "noncontigu": [921, 1048, 2084], "inaccuraci": 921, "clonebackward0": 923, "gi": [925, 926, 2051], "removablehandl": [925, 926, 1269, 1523, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 2064], "88446": 929, "profilerstep": 929, "optimizer1step": 929, "optimizer2step": 929, "optimizer1": [929, 2038], "current_step": 929, "erase_step_count": 929, "increment_step": 929, "_kineto_step": 929, "init_step_count": 929, "eventlist": [932, 933], "group_by_stack_n": [933, 2066], "roof": 933, "functioneventavg": [933, 935], "node_id": 936, "77": 936, "47": 936, "470u": 936, "73": 936, "465u": 936, "03": [936, 964, 1347, 1880, 1881, 1886], "121": 936, "891u": 936, "324u": 936, "421u": 936, "503u": 936, "234": [936, 2017], "344u": 936, "000u": 936, "profiler_util": [937, 938, 939, 940], "elapsed_u": 937, "mem_record": 939, "in_interv": 939, "start_u": 939, "end_u": 939, "shallow": [940, 1269, 1459, 1523, 1572, 1573, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "default_factori": [940, 2107], "__missing__": 940, "fromkei": [940, 1533], "keyerror": 940, "popitem": [940, 1533, 2062], "lifo": 940, "setdefault": [940, 1533, 2062], "window_length": [942, 951, 1227, 1228, 1289, 2011], "2n": [942, 1877, 2077], "_length": [942, 951, 1227, 1228, 1266, 1442, 1920], "sim": [943, 1537, 1673, 1816, 1836], "pseudorandom": [943, 1409, 1769, 1813, 1816, 1832, 1834, 1836, 1838, 1925], "1737": 943, "0950": [943, 1902], "3609": 943, "7148": 943, "0289": [943, 1949], "2676": 943, "8937": 943, "7202": 943, "2500": [944, 1124, 1126, 1127, 1137, 1142, 1340, 1576, 1830], "7500": [944, 1127, 1137, 1156, 1223, 1325, 1340, 1576, 1830, 1885], "AND": [945, 1188, 1351, 2013, 2039], "OR": [948, 1205, 1353, 2013, 2032], "xor": [950, 1354, 2013], "blackman": [951, 1887], "arrang": 952, "broadcast_tensor": [954, 2011, 2062], "out_int32": [957, 1859, 2011], "opposit": [957, 1127, 1129, 1567, 1924, 1945], "formal": [957, 1859, 2020, 2031, 2047, 2076], "eg": [957, 1852, 1859, 2107], "from_": [958, 2011], "tensor_a": [959, 972], "tensor_b": 959, "6580": 960, "0969": 960, "4614": 960, "1034": [960, 1106], "5790": 960, "1497": 960, "compute_mod": [961, 2103], "use_mm_for_euclid_dist_if_necessari": 961, "distanc": [961, 1266, 1305, 1306, 1333, 1482, 1532, 1572, 1573, 1670, 1698, 1799, 1920, 1924, 2009], "infti": [961, 1266, 1321, 1435, 1490, 1491, 1492, 1555, 1670, 1790, 2078], "use_mm_for_euclid_dist": 961, "donot_use_mm_for_euclid_dist": 961, "minkowski": [961, 1670], "ham": [961, 1227, 1670, 1883], "closest": [961, 1670], "xn": [961, 1670], "4821": [961, 964], "059": 961, "0590": 961, "1763": [961, 1842], "4713": [961, 1842], "6986": [961, 1842], "3702": [961, 1842], "1193": [961, 1359], "0959": 961, "7138": 961, "8322": 961, "2830": [961, 1951], "3791": 961, "6341": 962, "4208": 962, "0900": 962, "5826": 962, "clr": [963, 1799], "3375": 963, "9790": 963, "1119": 963, "6577": 963, "5609": [963, 1620], "5095": 963, "2614": 963, "4038": 963, "3378": [963, 1951], "4982": 963, "2457": [963, 1372], "2561": 963, "4684": 963, "7163": 963, "9647": 963, "8917": [963, 1350], "3213": [963, 1346], "2284": [963, 1086], "8615": 963, "2816": 963, "tu": 964, "mt": [964, 1299, 1306, 1308, 1312, 1313, 1314, 1319, 1328, 1823, 1924, 2011, 2020, 2062, 2081, 2083], "4112": 964, "7486": 964, "4551": 964, "3544": 964, "6724": 964, "5528": 964, "0592": [964, 2051], "9371": 964, "5487": 964, "7023": 964, "3842e": [964, 1315], "hermitian": [965, 966, 991, 1122, 1123, 1125, 1127, 1128, 1129, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1299, 1300, 1305, 1306, 1308, 1312, 1313, 1314, 1324, 1327, 1333, 2011], "9314": 965, "2251": [965, 1005, 1302, 1344], "0889": 965, "4439": 965, "2122": 965, "1412": 965, "6358e": 965, "lh": [966, 1315], "1625": 966, "6097": 966, "8398": 966, "2387": [966, 991], "3771": [966, 1316], "4173": 966, "1626": [966, 1005, 1302], "6881e": 966, "tensor_split": [967, 1104, 1233, 1974, 2011, 2062, 2081], "min_valu": [968, 1481], "max_valu": [968, 1481, 2011], "_valu": [968, 1427, 1719, 1909, 2044, 2062, 2077], "7120": 968, "1734": [968, 1244], "0478": [968, 1976], "0922": 968, "3333": [968, 1223, 1232, 1576, 1577, 1939], "horizont": [971, 1233, 1235, 2063, 2065, 2099], "hstack": [971, 2011, 2062, 2077], "with_replac": [972, 2011], "combinations_with_replac": 972, "fullgraph": [973, 2099, 2108], "cache_size_limit": [973, 2099, 2108], "list_backend": [973, 2089, 2094, 2101], "compiler_custom_backend": 973, "triton": [973, 2045, 2089, 2093, 2097, 2099, 2101, 2106, 2108], "_inductor": [973, 2099, 2108], "list_mode_opt": 973, "epilogue_fus": 973, "max_autotun": 973, "fallback_random": [973, 2099, 2108], "shape_pad": 973, "graph_diagram": 973, "pictur": 973, "list_opt": 973, "_glibcxx_use_cxx11_abi": 974, "bypass": [975, 1106, 2017, 2032, 2042, 2044, 2100, 2106], "rand_foo": 978, "compiler_cudagraph_tre": 978, "external_util": 980, "stricter": [981, 1409, 2100], "is_compil": [981, 2100], "exclude_tag": 982, "flip": [988, 1147, 1148, 1337, 2011, 2062, 2063, 2099, 2103], "writeabl": [988, 989], "is_conj": [988, 1847, 2011, 2062], "geq": [990, 1212, 1301, 1309, 1432, 1433, 1434, 1458, 1509, 1530, 1542, 1612, 1665, 1727, 2037, 2078], "signbit": [990, 2011, 2062, 2077, 2103], "2557": 990, "0026": 990, "5387": 990, "4740": 990, "9244": 990, "7079": 990, "2778": 990, "0249": [990, 1345], "5719": 990, "0059": 990, "2600": 990, "4475": 990, "9567": [990, 1305, 1923], "5757": 990, "1751": 990, "0742": 990, "2998": 990, "1054": 990, "2373": 990, "3190": [990, 2042], "1128": [990, 1327, 1493], "pearson": 991, "coeffici": [991, 1227, 1778, 1780, 1781, 1782, 1784, 1790, 1794, 1882, 1883, 1884, 1948], "r_": [991, 1941], "ij": [991, 1106, 1349, 1357, 1371, 1526, 1901], "c_": [991, 1450, 1451, 1452, 1453, 1454, 1455, 1493, 1535, 1536], "jj": 991, "cov": [991, 2011, 2062], "2678": [991, 1465], "0908": 991, "3766": 991, "2780": 991, "5812": 991, "1535": [991, 1465], "2350": 991, "3582": 991, "4309": 992, "2706": 992, "8562": 992, "9796": [992, 1315], "1395": 992, "2957": 992, "6553": 992, "5574": 992, "1632": 993, "1835": 993, "6979": 993, "7325": [993, 1096], "0133": 993, "7860": 993, "2536": 993, "2805": 993, "sleef": [993, 1891], "y_": [995, 1116, 1343, 1344, 1346, 1436, 1458, 1488, 1901, 1946, 2039, 2078], "_w": [995, 1470], "w_i": [995, 1309], "mu_x": 995, "mu_i": [995, 1784], "w_ia_i": 995, "whichev": [995, 1175, 1629, 1824, 1973, 2042], "w_ix_": 995, "mathbb": [995, 1223, 1299, 1301, 1305, 1306, 1307, 1308, 1309, 1310, 1315, 1316, 1319, 1321, 1328, 1330, 1332, 1333, 1458, 1530, 1727], "bessel": [995, 1289, 1886, 1918, 1919, 1968, 1969, 2078], "unbias": [995, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1563, 1918, 1919, 1968, 1969, 2011, 2103], "corrcoef": [995, 2011, 2062], "6667": [995, 1232, 1576, 1577, 1844, 1877, 2056], "fw": 995, "4282": 995, "0255": [995, 1093], "4144": [995, 2042], "4169": 995, "streamcontext": [1003, 1081, 1406, 2004, 2009], "abstractcontextmanag": 1003, "3956": [1005, 1302], "1455": [1005, 1302, 2057], "6895": [1005, 1302], "5849": [1005, 1302], "3599": [1005, 1302], "7180": [1005, 1302], "0521": [1005, 1302], "1339": [1005, 1302], "0225": [1005, 1302, 1315], "0257": [1005, 1302], "4725": [1005, 1302], "1479": [1005, 1302], "7005": [1005, 1302], "9757": [1005, 1302], "3904": [1005, 1302], "3726": [1005, 1302], "1836": [1005, 1302], "9688": [1005, 1302], "7153": [1005, 1302, 2078], "2159": [1005, 1302], "0844": [1005, 1302], "5281": [1005, 1302], "6120": [1005, 1302], "4490": [1005, 1302], "5687": [1005, 1302], "9792": [1005, 1087, 1302], "8304": [1005, 1302], "3037": [1005, 1302, 2051], "5650": [1005, 1302], "2329": [1005, 1302], "9883": [1005, 1302], "0551": [1005, 1302], "capture_begin": [1006, 2042], "capture_error_mod": [1006, 1040], "make_graphed_cal": [1006, 2042], "graph_pool_handl": [1006, 1040, 1051], "other_graph_inst": [1006, 1040, 1051], "cudastreamcapturemod": [1006, 1040], "thread_loc": [1006, 1040], "cudamalloc": [1006, 1040, 1062, 2042, 2110], "unsaf": [1006, 1040, 1341, 1730, 1733, 2011, 2042, 2064], "capture_end": [1006, 2042], "replai": [1006, 1040, 2042, 2059, 2066, 2093, 2096, 2108], "debug_dump": 1006, "debug_path": 1006, "enable_debug_mod": 1006, "path_to_so_fil": 1007, "alloc_fn_nam": 1007, "free_fn_nam": 1007, "enable_tim": [1008, 1382, 1978, 2042], "interprocess": 1008, "marker": [1008, 1382, 1978], "elapsed_tim": [1008, 1382, 1978, 2042], "end_ev": [1008, 1382, 1978, 2042], "elaps": [1008, 1382, 1978, 2026], "from_ipc_handl": 1008, "reconstruct": [1008, 1359, 1435, 1436, 2048, 2056, 2064, 2096], "ipc": [1008, 1044], "ipc_handl": 1008, "cudaeventsynchron": 1008, "cudastreamwaitev": [1008, 1009, 1011], "stream_ptr": 1009, "cudastream_t": [1009, 2042], "record_ev": [1009, 1011, 1979], "cudastreamsynchron": [1009, 1011], "wait_ev": [1009, 1011, 1979], "interoper": 1013, "caching_allocator_delet": 1013, "mem_ptr": 1014, "caching_allocator_alloc": 1014, "peer_devic": 1015, "_cudaalloc": 1016, "clock": 1017, "sm": 1017, "hertz": 1017, "smi": [1017, 1030, 1058, 1064, 1069, 1083, 1084, 2042, 2046, 2049], "buffer_s": 1019, "10485760": 1019, "chunk_siz": [1022, 1169, 1175, 1973], "cublashandle_t": 1023, "unoccupi": [1030, 1381, 1986], "cudamallocasync": [1031, 1062, 2042], "_cudadeviceproperti": 1035, "gencod": 1036, "cuda_graph": 1040, "ordinari": [1042, 1713, 1964, 2038], "code_str": [1048, 1049], "temp": 1048, "typenam": [1048, 1049], "my_kernel": [1048, 1049], "jitted_fn": [1048, 1049], "create_jit_fn": [1048, 1049], "util_fn": 1048, "gelu": [1048, 1553, 1567, 1569, 1571, 1684, 2011, 2032, 2062, 2103], "my_gelu": 1048, "my_lib": [1048, 2017, 2057], "impl": [1048, 1275, 2017], "num_output": 1049, "sample_arg": 1051, "num_warmup_it": 1051, "allow_unused_input": 1051, "datadistributedparallel": 1051, "amp": [1051, 1964, 2009, 2038, 2102, 2105, 2108], "autocast": [1051, 1529, 2009, 2042, 2044, 2108], "insuffici": [1052, 1996, 2095, 2108], "manual_seed_al": [1052, 1964, 1996], "occupi": [1054, 1058, 1070, 1378, 1511, 1647, 2042, 2049, 2112], "reset_peak_memory_stat": [1054, 1056, 1070, 1071], "max_memory_reserv": [1055, 2042, 2049], "cudamemgetinfo": 1057, "memory_reserv": [1059, 2042, 2049], "snapshot": [1061, 2009, 2013, 2042, 2049], "large_pool": 1062, "small_pool": 1062, "allocated_byt": 1062, "reserved_byt": 1062, "active_byt": 1062, "inactive_split": 1062, "inactive_split_byt": 1062, "octob": 1062, "1mb": [1062, 2110], "num_alloc_retri": 1062, "num_oom": 1062, "num_sync_all_stream": 1062, "synchronize_and_free_ev": 1062, "num_device_alloc": 1062, "cumemmap": 1062, "num_device_fre": 1062, "cumemunmap": 1062, "cudafre": [1062, 2042, 2110], "assist": [1062, 2043, 2083], "max_split_s": 1062, "oversize_alloc": 1062, "oversize_seg": 1062, "requested_byt": 1062, "abbrevi": 1063, "percent": [1064, 1084, 2102], "msg": [1065, 1066, 1068, 1184, 2066, 2084], "instantan": [1065, 2066], "ascii": [1065, 1068, 1341, 2013, 2066], "sensor": [1069, 1083], "mw": 1069, "milliwatt": 1069, "fermi": 1069, "max_memory_alloc": [1070, 2042, 2049], "max_memory_cach": 1071, "memory_stat": [1072, 2042, 2049], "seed_al": [1073, 1998], "environment": [1075, 2102], "total_memori": [1076, 1389], "debug_mod": [1080, 1866], "centigrad": 1083, "x_3": [1085, 1086, 1087, 1088, 1337], "3449": 1085, "5447": 1085, "0685": 1085, "5104": [1085, 2042], "1706": 1085, "2259": 1085, "4696": 1085, "3284": 1085, "9946": 1085, "8209": 1085, "6628": 1086, "0975": 1086, "2680": [1086, 2041], "3298": [1086, 1093], "4220": 1086, "3885": 1086, "1762": 1086, "9165": 1086, "6684": [1086, 1246], "6001": 1087, "2069": 1087, "1919": 1087, "6727": [1087, 1100], "0062": 1087, "4126": 1087, "2129": 1087, "4206": 1087, "1968": [1087, 2078], "1241": 1087, "0238": 1087, "0233": [1087, 1831], "0157": 1087, "0158": [1087, 1924], "0065": 1087, "0014": [1087, 2078], "0006": 1087, "46": [1088, 1227, 1882], "49": [1088, 1149, 1325, 2041], "74": 1088, "83": 1088, "trapezoid": [1089, 1947, 2011, 2062], "360": 1090, "2832": 1090, "diagflat": [1093, 2011, 2062], "5950": 1093, "0872": 1093, "4264": 1093, "1064": [1093, 2051], "8795": 1093, "2429": 1093, "1374": 1093, "1029": 1093, "6482": 1093, "6300": 1093, "5410": 1094, "2934": 1094, "1788": [1094, 2078], "5684": 1094, "0845": [1094, 1891, 2051], "3986": 1094, "2956": [1095, 1302], "9068": 1095, "1695": 1095, "2094": [1095, 2042], "3018": 1095, "1516": 1095, "9342": 1095, "0854": 1096, "1431": 1096, "1752": 1096, "8536": 1096, "0905": 1096, "0360": [1096, 1408], "6927": 1096, "3735": 1096, "4945": 1096, "2631": [1096, 1392, 2042], "3755": 1096, "5977": [1096, 2044], "8172": 1096, "1065": [1096, 2051], "0401": 1096, "2235": [1096, 1923], "7938": 1096, "3081": 1096, "6166": 1096, "2335": 1096, "0500": 1096, "7336": 1096, "3836": 1096, "1015": 1096, "emb": [1097, 1862, 1892], "5393": 1100, "8675": 1100, "5916": 1100, "6321": 1100, "0967": 1100, "0511": 1100, "6295": 1100, "8360": 1100, "6973": 1100, "6537": 1100, "dividend": [1101, 1151, 1154, 1843, 1953], "true_divid": [1101, 2011, 2062], "3810": [1101, 1231], "2774": 1101, "2972": 1101, "3719": 1101, "4637": [1101, 2044], "7620": 1101, "5548": 1101, "5944": 1101, "7438": 1101, "9274": 1101, "3711": 1101, "9353": 1101, "4605": 1101, "2917": 1101, "1815": [1101, 1350], "0111": [1101, 1880], "9805": 1101, "5923": 1101, "1062": 1101, "4581": [1101, 1309], "7759": 1101, "2344": 1101, "1830": 1101, "0313": 1101, "1908": 1101, "4757": 1101, "8032": 1101, "2930": 1101, "8113": 1101, "2308": 1101, "4620": [1101, 1976], "6051": 1101, "5676": 1101, "2639": 1101, "2260": 1101, "4509": [1101, 1323], "2086": 1101, "1322": 1101, "9764": 1101, "9564": 1101, "3484": 1101, "2278": 1101, "1068": [1101, 1244], "4678": 1101, "3938": [1101, 1934], "depthwis": [1104, 1105, 1450, 1451, 1452], "atleast_3d": [1105, 2011, 2062], "notat": [1106, 1488, 1871, 2014, 2051, 2083], "einstein": 1106, "summat": [1106, 1266, 1349, 1357, 2077], "subscript": [1106, 2014, 2053], "jk": [1106, 2102], "ik": [1106, 1342, 1901], "za": 1106, "alphabet": [1106, 1613, 2072], "arrow": [1106, 2074], "ki": 1106, "ellipsi": [1106, 2013, 2014, 2031], "fourth": 1106, "whitespac": [1106, 2014], "opt_einsum": [1106, 2009], "_the_": 1106, "disclaim": 1106, "sublist": [1106, 2108], "52": 1106, "op1": [1106, 2013], "sublist1": 1106, "op2": [1106, 2013], "sublist2": 1106, "subslist_out": 1106, "2104": 1106, "7952": 1106, "2433": 1106, "4545": 1106, "1156": 1106, "2897": [1106, 2051], "3918": 1106, "4963": 1106, "3744": 1106, "9381": 1106, "2685": 1106, "6070": 1106, "7208": 1106, "8058": 1106, "4419": 1106, "0936": 1106, "1713": 1106, "4291": 1106, "5802": 1106, "7350": [1106, 2078], "5704": 1106, "4290": 1106, "9323": 1106, "4480": 1106, "bij": 1106, "bjk": 1106, "bik": 1106, "0564": 1106, "5904": 1106, "2023": 1106, "1271": 1106, "6706": [1106, 1824], "8097": 1106, "8025": 1106, "1183": 1106, "2239": [1106, 1329], "3107": 1106, "5756": 1106, "2354": 1106, "4558": 1106, "3460": 1106, "5087": 1106, "8530": [1106, 1447, 1579], "8153": 1106, "8787": 1106, "3839": [1106, 1972], "2112": [1106, 1949], "3728": 1106, "1131": [1106, 1821], "0921": 1106, "8305": 1106, "ji": 1106, "anm": 1106, "bm": 1106, "ba": 1106, "3430": [1106, 1350], "2405": 1106, "4494": 1106, "3311": 1106, "5201": 1106, "0356": 1106, "4064e": 1107, "8000e": 1107, "3493e": 1107, "5751e": 1107, "1428e": 1107, "5955e": 1107, "9683e": 1109, "1239e": 1109, "0705e": 1109, "orig_func": [1110, 1766], "set_grad_en": [1110, 2011, 2062, 2086], "tripler": [1110, 1766], "elsewher": [1111, 1119, 1212, 1226, 1259, 1261, 1262, 1265, 1294, 1358, 1420, 1902, 2008], "_max": [1120, 1121, 2067], "_min": [1120, 1121, 2067], "nearbi": [1120, 1121], "_int": [1120, 1121], "_point": [1120, 1121], "2525": 1120, "0466": 1120, "3491": [1120, 1323], "2168": [1120, 1941], "5906": [1120, 2078], "6258": 1120, "6444": 1120, "0542": 1120, "0475": [1120, 2078], "0486": 1120, "3405": 1120, "6134": [1120, 1372], "6323": 1120, "0552": 1121, "9730": 1121, "3973": 1121, "0780": 1121, "4000": [1121, 1124, 1133, 1142, 1576, 1827, 1877], "fourier": [1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1266, 1887, 1920, 2009], "rfft": [1122, 1127, 1137, 1141, 1142, 1143], "chalf": [1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1137, 1138, 1139, 2011, 2062, 2083], "sm53": [1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143], "ortho": [1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1342], "orthonorm": [1122, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1143, 1333, 1727, 1924], "ifft": [1122, 1126, 1127, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139], "fftn": [1123, 1126, 1132, 1135, 1143], "rfft2": [1123, 1138], "ifft2": [1123, 1135], "two_fft": [1123, 1125, 1135, 1141, 1143], "check_strid": [1123, 1125, 1126, 1131, 1132, 1137, 1138, 1139, 1141, 1143, 2084], "nyquist": [1124, 1126, 1134, 1136, 1140, 1141, 1142, 1143], "i_1": [1125, 1143, 1290], "i_n": [1125, 1143, 1175, 1290, 1941, 1973], "rfftn": [1125, 1129, 1135, 1139, 1141], "ifftn": [1125, 1131, 1136], "reorder": [1126, 1325, 2047], "rearrang": [1126, 1133, 1443, 1535, 1536, 1671, 1672, 2031], "fftfreq": [1126, 1133, 1142], "9000": [1126, 1939], "8000": [1126, 1414, 1576, 1824, 1877], "uncent": 1126, "ifftshift": 1126, "x_center": 1126, "x_uncent": 1126, "fft_uncent": 1126, "fft_center": 1126, "x_centered_2": 1126, "ihfft": [1127, 1135, 1136], "irfft": [1127, 1139, 1140], "symmetri": [1127, 1129, 1920], "transformed_dim_s": [1127, 1137], "0000j": [1127, 1134, 1137, 1299, 1300, 1305, 1306, 1308, 1817, 1874], "1250": [1127, 1392], "1720j": 1127, "0406j": 1127, "2809": 1127, "6250": [1127, 1137, 1156, 1576], "9691": 1127, "hfftn": [1128, 1136], "last_dim_s": [1128, 1129, 1138, 1139, 2103], "ihfft2": 1128, "roundtrip": [1128, 1129, 1137, 1138, 1139], "ihfftn": [1129, 1135], "irfftn": [1129, 1138, 1143], "fft2": [1131, 1141], "two_ifft": [1131, 1132, 1136], "fftshift": 1133, "hfft": 1134, "6882j": 1134, "1625j": 1134, "hfft2": 1135, "8602j": 1137, "2031j": 1137, "1562": 1137, "3511": 1137, "7812": 1137, "2114": 1137, "irfft2": 1141, "wider": [1149, 2010, 2013, 2063, 2077], "2500e": 1149, "1000e": 1149, "7656e": 1149, "lfloor": [1150, 1155, 1427, 1432, 1433, 1434, 1450, 1451, 1452, 1469, 1490, 1491, 1492, 1516, 1517, 1518, 1575, 1576, 1577, 1578, 1598, 1668, 1839, 1920], "rfloor": [1150, 1155, 1427, 1432, 1433, 1434, 1450, 1451, 1452, 1469, 1490, 1491, 1492, 1516, 1517, 1518, 1575, 1576, 1577, 1578, 1598, 1668, 1839, 1920], "8166": 1150, "5308": 1150, "2530": 1150, "2091": 1150, "7000": [1152, 1466, 1876], "3000": [1153, 1465, 1876, 2042], "entrywis": [1154, 1843], "modulu": [1154, 1329, 1843], "operatornam": [1155, 1305, 1306, 1307, 1308, 1325, 1333, 1435, 1436, 1442, 1482, 1483, 1489, 1514, 1555, 1573, 1836, 1876], "8750": [1156, 1576], "sizeof": [1158, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 2079], "map_shar": [1158, 2056, 2079], "map_priv": [1158, 2056, 2079], "mmap": [1158, 1341, 2029, 2056, 2079], "tofil": 1158, "t_map": 1158, "char": [1160, 1774, 2030, 2079, 2099], "parameter_and_buffer_dict": 1163, "tie_weight": [1163, 1763], "submodule_nam": [1163, 1763], "parameter_nam": [1163, 1763], "ti": [1163, 1763, 1852, 2017, 2047, 2098], "ty": [1163, 1763], "foo_ti": [1163, 1763], "new_a": [1163, 1763], "grad_weight": [1163, 2044], "detached_param": 1163, "parameters_and_buffer_dict": 1163, "intermediate_upd": 1164, "mutations_and_view": 1164, "proxy_tensor": [1164, 2017, 2098, 2108], "make_fx": [1164, 2017, 2095, 2108], "inpt": 1164, "f_trace": 1164, "f_no_mutations_trac": 1164, "f_no_mutations_and_views_trac": 1164, "a_1": [1164, 1290], "view_1": 1164, "view_copi": [1164, 2011, 2062, 2086], "view_copy_1": 1164, "as_strid": [1164, 2011, 2062, 2081, 2103], "native_funct": [1164, 2044, 2103], "yaml": [1164, 2044, 2103], "aux": [1165, 1166, 1168, 1169, 1170, 1174], "my_loss_func": 1165, "y_pred": [1165, 2042], "loss_per_sampl": 1165, "y_true": 1165, "autodiff": [1168, 1169, 1170, 1328], "jacobian_f": [1168, 1169], "f_x": [1168, 1169], "jacboian": [1168, 1169], "expectedx": [1168, 1169], "expectedi": [1168, 1169], "_preallocate_and_copi": 1169, "jvp_out": 1170, "wish": [1170, 1915, 2017, 2038, 2042, 2044, 2045], "jvp_fn": 1171, "optimiz": [1173, 2010], "l1": [1173, 1482, 1483, 1555, 1638, 1685, 1738, 1747, 2051, 2056], "l2": [1173, 1483, 1514, 1555, 1777, 1778, 1779, 1780, 1782, 1784, 1790, 1791, 1793, 2038], "vjpfunc": 1174, "unsuccessfulli": [1175, 1973], "rummag": [1175, 1973], "batched_dot": [1175, 1973], "jacobian_row": [1175, 1973], "get_vjp": [1175, 1973], "n1": [1175, 1845, 1973], "n0": [1175, 1973], "batched_pow": [1175, 1973], "autobatch": [1175, 1973], "symbolic_shap": [1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 2009, 2095], "symbol_to_sourc": 1178, "var_to_v": 1178, "marked_dynam": 1178, "source_name_to_debug_nam": 1178, "solver": [1178, 2009, 2054], "expr": [1178, 1184, 1191, 1198], "tautologi": 1178, "add_equ": 1178, "forced_speci": 1178, "prettify_result": 1178, "original_signatur": 1178, "constraint_violation_error": 1178, "violat": [1178, 1184, 2042, 2045], "erro": 1178, "remove_redundant_dynamic_result": 1178, "rewrite_with_congru": 1178, "congruenc": 1178, "ration": 1178, "inequ": [1178, 1191], "_disable_forced_speci": [1178, 1184], "duck": [1179, 1184, 2044, 2064], "nb": [1179, 1188, 1191, 1193, 1195, 1283], "simplic": [1179, 1733, 2072, 2073], "varieti": [1179, 2042, 2073], "assume_static_by_default": [1179, 1185], "mark_dynamic_dim": 1179, "warn_onli": [1181, 1183, 1188, 1961], "source_pair": 1181, "derived_equ": 1181, "phantom_symbol": 1181, "forest": 1181, "transit": [1181, 1269, 1371, 1523, 1920, 2009, 2010, 2089], "phantom": 1181, "unback": [1182, 1184, 1193, 1194, 1196, 1197, 1204, 1205, 1206, 2098], "unspeci": 1183, "unspec": 1183, "brittl": 1183, "strictminmaxconstraint": 1183, "should_record_ev": 1184, "tracked_fak": 1184, "add_var_to_v": 1184, "bind_symbol": 1184, "littl": [1184, 2044, 2056, 2074], "evaluate_guard": 1184, "cleanest": 1184, "shenanigan": 1184, "bound_sympi": 1184, "size_oblivi": 1184, "check_equ": 1184, "create_symbol": 1184, "dimdynam": [1184, 1187], "constraint_dim": 1184, "do_not_specialize_zero_on": 1184, "symbolic_context": [1184, 1186, 1187], "create_symbolic_sizes_strides_storage_offset": [1184, 1186, 1187, 1190], "create_symboolnod": 1184, "create_symfloatnod": 1184, "create_symintnod": 1184, "create_unbacked_symbool": 1184, "create_unbacked_symfloat": 1184, "create_unbacked_symint": 1184, "create_unspecified_symbol": 1184, "specialz": 1184, "create_unspecified_symint_and_symbol": 1184, "defer_runtime_assert": 1184, "orig_expr": 1184, "fx_node": 1184, "evaluate_expr": [1184, 2096], "expect_r": 1184, "forcing_spec": 1184, "evaluate_guards_express": 1184, "produce_guards_express": 1184, "evaluate_guards_for_arg": 1184, "ignore_stat": 1184, "format_guard": 1184, "freeze_runtime_assert": 1184, "discharg": [1184, 1194], "get_axiom": 1184, "get_impl": 1184, "compute_hint": 1184, "booleanatom": 1184, "get_nontrivial_guard": 1184, "ignore_fresh_unbacked_symbol": 1184, "is_unbacked_symint": 1184, "produce_guard": 1184, "source_ref": 1184, "input_context": 1184, "equalities_input": 1184, "_simplifi": 1184, "localsourc": [1184, 2096], "boilerpl": [1184, 2051, 2064], "nice": [1184, 1450, 1451, 1452, 1453, 1454, 1455, 1469, 1516, 1517, 1518, 1575, 2031, 2039, 2042, 2064, 2096], "set_unbacked_var_to_v": 1184, "propagate_real_tensor": [1184, 1193], "resort": [1184, 2042, 2048, 2064], "size_hint": [1184, 2101], "allow_non": 1184, "suppress_guard": 1184, "allow_scalar_output": 1185, "allow_dynamic_output_shape_op": 1185, "specialize_zero_on": 1185, "duck_shap": 1185, "prefer_deferred_runtime_asserts_over_guard": 1185, "faketensor": [1185, 2017, 2059, 2098], "dynamic_s": [1186, 1187, 1189], "constraint_s": [1186, 1187, 1189], "view_base_context": [1186, 1187, 1189], "tensor_sourc": [1186, 1189], "shape_env_to_source_to_symbol_cach": [1186, 1189], "statelesssymboliccontext": 1186, "owner": [1186, 2008, 2044, 2062, 2072, 2073], "lifecycl": [1186, 2098], "shape_env": [1186, 1193, 1206, 1207], "dimconstraint": 1187, "vr": 1188, "relaxedunspecconstraint": 1188, "unsoundli": [1188, 1194], "inner_context": 1189, "canonic": 1191, "rh": [1191, 1315, 1360], "Ors": 1191, "cnf": 1191, "subexpr": 1191, "25924": 1191, "retrac": [1192, 1206, 1277, 2096], "example_valu": 1193, "old_example_valu": 1193, "peek": [1193, 2017], "freshli": 1193, "unbacked_var_to_v": 1193, "lie": [1194, 1557, 1559, 1687, 1903, 2078, 2082, 2098], "intersect": 1194, "fairli": [1194, 2053, 2065, 2095, 2099, 2101], "perfectli": [1194, 1867, 2042, 2065], "definitely_tru": 1196, "parallel_or": 1197, "parallel_and": 1197, "circuit": 1197, "oblivi": 1198, "118579": 1198, "free_symbol": 1199, "maxsiz": 1203, "sym_and": 1209, "sparse_grad": [1210, 2011, 2103], "tau": [1213, 1309, 1631, 1779, 1793, 1810, 1811, 1880, 2011], "elementari": [1213, 2039, 2048], "reflector": [1213, 1727, 1811], "household": [1213, 1309, 1727, 1811], "householder_product": [1213, 1727, 1810], "gel": [1213, 1315], "set_deterministic_debug_mod": [1217, 1961], "mtia": [1218, 1394, 1395, 1396, 1400, 2009, 2066], "fork_rng": [1222, 2009, 2071], "edge_ord": [1223, 2011], "rightarrow": 1223, "closer": [1223, 1573, 1824, 2044, 2051, 2067, 2101, 2102], "interior": 1223, "theorem": 1223, "h_l": 1223, "h_r": 1223, "neighbor": [1223, 1266, 1576, 1578, 1920], "xi_1": 1223, "xi_2": 1223, "approx": [1223, 1925, 2048], "80": [1223, 1325, 1803, 1871, 2042, 2063], "halv": 1223, "coord": 1223, "54": [1227, 1484, 1883], "hann_window": [1227, 1920, 2011, 2015, 2062], "hann": [1228, 1883], "hist": [1231, 1232, 2011], "bin_edg": [1231, 1232, 2011], "9524": 1231, "leftmost": [1232, 2032], "leg": 1236, "triangl": [1236, 2082], "hypotenus": 1236, "4031": 1236, "gammainc": [1238, 2078], "gammaincc": [1239, 2078], "index_reduce_": [1243, 2011], "1427": 1244, "0231": 1244, "5414": 1244, "0009": 1244, "4664": [1244, 1941], "2647": 1244, "1228": 1244, "6571": 1244, "7230": 1244, "6004": 1244, "multidimension": [1246, 1339, 1485], "8173": 1246, "0874": 1246, "1784": 1246, "3279": 1246, "7894": 1246, "4682": 1246, "7159": 1246, "1506": 1246, "4034": 1246, "3657": 1246, "0387": 1246, "9892": 1246, "1774": 1246, "3261": 1246, "3917": 1246, "4537": [1246, 1703], "7493": 1246, "1724": 1246, "2291": 1246, "5749": 1246, "2267": 1246, "7920": 1246, "3607": 1246, "3701": 1246, "3666": 1246, "5850": [1246, 1300], "7242": 1246, "9837": 1246, "1560": 1246, "2907": 1246, "6785": 1246, "5671": [1246, 1301], "5452": 1246, "6912": 1246, "5509": 1246, "1782": 1246, "9843": 1246, "7366": 1246, "5672": [1246, 1769], "5115": 1246, "4864": 1246, "2476": 1246, "4337": 1246, "6347": 1246, "1748": 1246, "3567": [1246, 1300], "6558": 1246, "2469": [1246, 2051], "5787": [1246, 1350], "typecheck": [1256, 2062], "mypi": [1256, 2012, 2013], "warn_alwai": 1257, "set_warn_alwai": 1257, "nonfinit": 1258, "test_el": [1260, 2011], "assume_uniqu": [1260, 2011], "0j": [1265, 1970], "nola": 1266, "envelop": 1266, "hop": [1266, 1920], "shorter": [1266, 2061, 2072], "griffin": 1266, "ieee": [1266, 1476, 1887, 2054], "tran": 1266, "assp": 1266, "vol": [1266, 1476, 1887], "236": 1266, "apr": 1266, "1984": 1266, "slide": [1266, 1432, 1433, 1434, 1469, 1516, 1517, 1518, 1575, 1623, 1654, 1655, 1656, 1699, 1828, 1829, 1920], "fft_size": 1266, "scriptmodul": [1267, 1268, 1273, 1277, 1279, 1280, 1281, 1285, 1286, 1776, 2010, 2012, 2023, 2061], "attributemodul": 1267, "names_ag": 1267, "get_debug_st": 1268, "graphexecutorst": 1268, "_extra_fil": [1268, 1269, 1277, 1280, 2050], "save_to_buff": 1268, "add_modul": [1269, 1523], "init_weight": [1269, 1523, 2051], "buf": [1269, 1523], "20l": [1269, 1523], "1l": [1269, 1523], "5l": [1269, 1523], "pretti": [1269, 1775, 1871, 2010, 2094, 2098], "syntax": [1269, 2010, 2013, 2064, 2100], "code_with_const": 1269, "constmap": 1269, "get_buff": [1269, 1523], "attributeerror": [1269, 1523, 2044, 2067], "get_extra_st": [1269, 1523], "set_extra_st": [1269, 1523], "get_paramet": [1269, 1523], "net_b": [1269, 1523], "net_c": [1269, 1523], "inlined_graph": 1269, "ipu": [1269, 1523, 2017, 2056], "remove_dupl": [1269, 1523], "named_children": [1269, 1523, 2051], "conv4": [1269, 1523], "conv5": [1269, 1523], "memo": [1269, 1523, 2098], "register_backward_hook": [1269, 1523], "register_full_backward_hook": [1269, 1523, 1708, 2051], "register_forward_hook": [1269, 1523, 1706, 2051], "with_kwarg": [1269, 1523], "always_cal": [1269, 1523, 1706], "fire": [1269, 1523, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794, 2043, 2050, 2104], "register_module_forward_hook": [1269, 1523, 2051], "register_forward_pre_hook": [1269, 1459, 1523, 1707, 2051], "forward_pr": [1269, 1523], "register_module_forward_pre_hook": [1269, 1523, 2051], "register_module_full_backward_hook": [1269, 1523, 1704, 2039, 2051], "register_full_backward_pre_hook": [1269, 1523, 1709, 2051], "register_module_full_backward_pre_hook": [1269, 1523, 2051], "register_load_state_dict_post_hook": [1269, 1523, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "incompatible_kei": [1269, 1523], "register_modul": [1269, 1523, 1710], "register_paramet": [1269, 1523, 1711, 2044, 2051], "register_state_dict_pre_hook": [1269, 1523, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "keep_var": [1269, 1523], "gan": [1269, 1523, 1728, 1762], "share_memori": [1269, 1523, 2053], "share_memory_": [1269, 1523, 2029, 2079], "4d": [1269, 1438, 1469, 1486, 1523, 1576, 1623, 1640, 1668, 1700, 1720, 1721, 1827], "1913": [1269, 1523], "3420": [1269, 1523], "5113": [1269, 1523, 1941], "2325": [1269, 1302, 1523], "gpu1": [1269, 1523], "1914": [1269, 1523], "5112": [1269, 1523, 2042], "3741": [1269, 1523], "2382": [1269, 1408, 1523], "5593": [1269, 1523], "4443": [1269, 1523], "6122": [1269, 1523], "1150": [1269, 1523], "dst_type": [1269, 1523], "set_to_non": [1269, 1523, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 2042], "the_typ": 1270, "the_valu": 1270, "script_bar": 1272, "addmod": 1272, "preserved_attr": 1273, "optimize_numer": 1273, "optimize_for_infer": [1273, 2094], "run_frozen_optim": 1273, "scripted_modul": [1273, 1281, 2056], "frozen_modul": 1273, "modified_tensor": 1273, "mymodule2": 1273, "dump_alias_db": 1273, "training_method": 1274, "testcod": [1275, 1276, 1277, 1280, 2012], "interfacetyp": 1275, "impl1": 1275, "impl2": 1275, "user_fn": 1275, "user_fn_jit": 1275, "target_typ": 1276, "key1": 1276, "val1": 1276, "key2": 1276, "val2": 1276, "_restore_shap": 1277, "scriptfunct": [1277, 1281, 1282, 1285, 2061], "readlin": [1277, 1341, 2064], "other_method": 1279, "lesser": [1279, 2039, 2041], "extent": [1279, 2041, 2077], "frozen_mod": 1279, "_frames_up": 1281, "_rcb": 1281, "scriptdict": 1281, "scriptlist": 1281, "test_sum": 1281, "scripted_fn": [1281, 2010], "conv2": [1281, 1523, 1552, 2010, 2059, 2067], "some_entry_point": 1281, "python_only_fn": 1281, "testnnmodul": 1281, "pdt_model": 1281, "scripted_model": [1281, 2064], "un": [1283, 1442, 2067], "unfus": 1283, "check_trac": [1285, 1286], "check_input": [1285, 1286, 2010], "check_toler": [1285, 1286], "_force_outplac": [1285, 1286], "_module_class": [1285, 1286], "_compilation_unit": [1285, 1286], "compilationunit": [1285, 1286], "example_kwarg_input": 1285, "_store_input": [1285, 1286], "trace_modul": [1285, 2010, 2013], "untrack": 1285, "checker": [1285, 1286, 2013, 2061], "traced_foo": [1285, 2010], "example_weight": [1285, 1286], "example_forward_input": [1285, 1286], "example_inputs_is_kwarg": 1286, "method2": 1286, "example_method2_input": 1286, "weighted_kernel_sum": 1286, "use_memory_effici": 1287, "memory_effici": 1287, "scriptabl": 1287, "kaiser": [1289, 1567, 1569, 1571], "i_0": [1289, 1290, 1886, 1941, 2078], "zeroth": [1289, 1886, 2078], "out_i": 1289, "kroneck": 1290, "a_0": 1290, "a_n": 1290, "b_0": 1290, "b_1": 1290, "b_n": 1290, "k_0": [1290, 1941], "k_1": 1290, "k_n": 1290, "j_0": 1290, "j_1": 1290, "j_n": 1290, "k_t": 1290, "i_t": [1290, 1493, 1792], "b_t": 1290, "j_t": 1290, "bmatrix": 1290, "a_": [1290, 1361, 1511, 1941], "cdot": [1290, 1315, 1327, 1435, 1436, 1457, 1458, 1480, 1488, 1526, 1527, 1528, 1529, 1530, 1567, 1611, 1634, 1817, 1920, 2078, 2084], "vdot": [1290, 1337, 1338, 2011, 2062], "ddot": [1290, 1337], "kth": 1291, "full_lik": [1295, 2011, 2015, 2017, 2062], "logarithm": [1298, 1303, 1329, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1356, 1442, 1613, 1648, 1900, 2078], "gamma": [1298, 1437, 1438, 1439, 1477, 1485, 1486, 1487, 1495, 1538, 1563, 1712, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1793, 1795, 1799, 1800, 1803, 1808, 1809, 1827, 2009, 2011, 2061, 2062, 2063, 2078], "5724": [1298, 2078], "1208": [1298, 2078], "mathrlap": [1299, 1305, 1306, 1307, 1308, 1316, 1319, 1328, 1330, 1332, 1333, 1727], "qquad": [1299, 1301, 1305, 1306, 1307, 1308, 1309, 1316, 1319, 1328, 1330, 1332, 1333, 1727], "eigenvalu": [1299, 1305, 1306, 1307, 1308, 1321, 1324, 1327, 1332, 1333, 1342, 1813, 2011], "resp": [1299, 1306, 1308, 1332, 1333, 1350], "5266": 1299, "9586": 1299, "0626j": 1299, "4160": 1299, "5895": 1299, "2322": 1299, "2976j": 1299, "4928": [1299, 1941], "4692e": 1299, "8747e": 1299, "check_error": [1300, 1311, 1313, 1318, 1331, 2011], "performantli": 1300, "3792": 1300, "9831j": 1300, "8757": 1300, "5425": 1300, "6374j": 1300, "kappa": 1301, "_p": [1301, 1532], "frobeniu": [1301, 1315, 1322, 1326, 1768], "nuc": [1301, 1322, 1326, 1339, 1739, 1748, 1768], "nuclear": [1301, 1322, 1326, 1768], "sigma_1": [1301, 1315, 1324, 1327], "sigma_n": 1301, "kappa_2": 1301, "kappa_": 1301, "4142": [1301, 1326, 1768, 1817], "1623": [1301, 1322], "2426": [1301, 1326, 1768], "7071": [1301, 1879], "5917": 1301, "9941": 1302, "5132": 1302, "5681": 1302, "4653": 1302, "4507": 1302, "4119": 1302, "6163": 1302, "1073": 1302, "3957": 1302, "9666": [1302, 1620], "0840": 1302, "3357": 1302, "2139": 1302, "slogdet": [1303, 1350, 2011, 2062], "0934": 1303, "1990": [1303, 1350], "4099": [1303, 1350], "7386": [1303, 1350], "diagonaliz": [1305, 1307], "eigenvector": [1305, 1306, 1342, 2011], "neq": [1305, 1306, 1309, 1333, 1420, 1526, 1528, 1778, 1779, 1780, 1782, 1784, 1790, 1791, 1793, 1797, 1924], "phi": [1305, 1306, 1333, 1472, 1627, 1924], "shall": [1305, 1306, 1333, 1730, 1734], "lambda_i": [1305, 1306, 1321], "lambda_j": [1305, 1306], "eigval": [1305, 2011], "9828": [1305, 1949, 2051], "3889j": 1305, "4617": 1305, "3010j": 1305, "1662": 1305, "7435j": 1305, "6139": 1305, "0562j": 1305, "1226": [1305, 1307], "5738j": [1305, 1307], "7537": [1305, 1307], "1286j": [1305, 1307], "9218": 1305, "1882": 1305, "2220j": 1305, "0270": 1305, "3867j": 1305, "7119e": 1305, "2841e": 1305, "uplo": [1306, 1308, 2011], "unitari": [1306, 1309, 1328, 1333, 1727, 1811], "ill": [1306, 1594, 2054], "eigvalsh": [1306, 1324], "9228": [1306, 1308], "2029": [1306, 1308], "0862j": [1306, 1308], "3464": [1306, 1308], "3277": [1306, 1308], "9415": [1306, 1308], "0846": 1306, "9964": 1306, "9170": 1306, "3898j": 1306, "0331j": 1306, "1062e": 1306, "5423e": 1306, "polynomi": [1307, 1308, 1806, 2099], "_n": [1307, 1308, 1310, 1727, 2044], "4576e": [1307, 1334], "5797": 1308, "4629": 1308, "1605": 1308, "3780": 1308, "1113": [1308, 2051], "7381": 1308, "h_1h_2": 1309, "h_k": 1309, "h_i": [1309, 1558], "_m": [1309, 1727], "tau_i": 1309, "8034": 1309, "4184j": 1309, "2588": 1309, "0174j": 1309, "6853": 1309, "7953j": 1309, "0790": 1309, "5620j": 1309, "6989j": 1309, "5360": 1309, "1193j": 1309, "3877": 1309, "6691j": 1309, "3512": 1309, "3024j": 1309, "4766": 1309, "5783j": 1309, "0361": [1309, 2051], "6587j": 1309, "6396": [1309, 2051], "1612j": 1309, "3693": 1309, "4481j": 1309, "aa": 1310, "pinv": [1310, 1315, 1815], "moor": [1310, 1327], "penros": [1310, 1327], "ainv": [1310, 1311, 1331, 1335], "1921e": 1310, "9073e": [1310, 1575], "5107e": 1310, "ldl": [1312, 1314], "indefinit": [1312, 2022], "ld": [1312, 1313, 1314, 2011], "sytrf": [1312, 1313], "ldl_solv": 1312, "ldl_factor_ex": [1312, 1314], "2079": [1312, 1313, 2078], "2414": [1312, 1313], "9428": [1312, 1313], "4554": [1312, 1313], "3264": [1312, 1313], "3823": [1312, 1313], "5884": [1312, 1313], "9595": [1312, 1313, 1879], "2695": [1312, 1313], "8513": [1312, 1313], "1633": [1312, 1313], "ldl_factor": 1313, "rcond": [1315, 1327, 1815, 2011], "_f": 1315, "gelsi": 1315, "gelsd": 1315, "gelss": 1315, "tridiagon": 1315, "sigma_i": [1315, 1333, 1924], "residu": [1315, 1342, 2011, 2051], "singular_valu": [1315, 2011], "0838": [1315, 2051], "2275": [1315, 1392], "3844": 1315, "5499": 1315, "1175": 1315, "9102": 1315, "0870": 1315, "6772": 1315, "7758": 1315, "5109": 1315, "4382": 1315, "3769": 1315, "1818": 1315, "3450": 1315, "0806": [1315, 2051], "3967": 1315, "3994": 1315, "1521": 1315, "1473": 1315, "9194": 1315, "0458": 1315, "6705": [1315, 1374], "1802": 1315, "4086": 1315, "5152e": 1315, "zero_": [1315, 1620, 2011, 2030, 2031, 2051, 2077], "almost": [1316, 1317, 2057, 2096, 2098, 2106], "5007": 1316, "9755": 1316, "0489": 1316, "9644": [1316, 1369], "9605e": 1316, "0376e": 1316, "lu_factor_ex": [1317, 1359], "lu_unpack": [1317, 1359, 2011, 2062], "b1": 1317, "b2": [1317, 2042, 2049], "getrf": [1318, 1331], "adjoint": [1319, 2011, 2062, 2081, 2083], "_exp": 1321, "7183": [1321, 2051], "3891": 1321, "8660": 1321, "ord": [1322, 1326, 1339, 1768, 2011, 2013, 2062], "la": [1322, 1326, 1339, 2051], "2829": 1322, "2627": 1322, "0756": 1323, "4980": 1323, "6617": 1323, "4994": 1323, "9980": 1323, "2731": 1323, "8001": 1323, "2640": 1323, "4571": 1323, "5511": 1323, "0163": [1323, 1369], "5292": 1323, "4899": 1323, "0822": 1323, "2773": [1323, 2032], "varepsilon": [1324, 1327, 1572], "tol": [1324, 1342, 2011], "fewest": 1325, "bc": [1325, 2021, 2063], "75000": 1325, "26": [1325, 1798, 2096, 2097, 2108], "148": 1325, "vector_norm": [1326, 1768], "matrix_norm": [1326, 1339, 1728, 1768], "7460": [1326, 1768], "3485": 1326, "8570e": 1326, "8480": 1326, "2361": [1326, 1768, 1769], "7417": [1326, 1768], "computation": [1327, 2048], "5495": [1327, 1392], "0979": 1327, "4092": 1327, "4132": [1327, 1885], "1143": 1327, "3662": 1327, "6374": 1327, "9294": 1327, "3269": [1327, 2051], "5745": [1327, 1918, 1919, 1968, 1969], "0382": [1327, 1408], "5922": 1327, "6759": 1327, "0600": 1327, "1933": 1327, "2090": 1327, "0903": 1327, "0817": 1327, "4752": [1327, 1923], "7124": 1327, "1631": 1327, "2272": 1327, "1356": 1327, "3933": 1327, "5023": 1327, "0308": 1327, "1725": 1327, "5216": 1327, "apinv": 1327, "5633e": 1327, "0830e": 1327, "wide": [1328, 1333, 1727, 1881, 2041, 2044, 2051, 2063, 2099], "51": [1328, 1521, 1823], "167": [1328, 1823], "68": [1328, 1823, 2010, 2012], "8571": [1328, 1823], "3943": [1328, 1823], "3314": [1328, 1823], "4286": [1328, 1823], "9029": [1328, 1823], "0343": [1328, 1823], "2857": [1328, 1823], "1714": [1328, 1823, 2051], "9429": [1328, 1823], "175": [1328, 1823], "q2": 1328, "r2": [1328, 1563], "6099e": 1328, "2158e": 1328, "logabsdet": [1329, 2011], "0032": 1329, "1219": [1329, 1842], "6690": 1329, "1161": 1329, "4053": 1329, "6218": [1329, 1938], "9273": 1329, "0082": 1329, "7576": 1329, "logdet": [1329, 2011, 2062], "linalg_slogdet": [1329, 2011, 2062], "2776": 1329, "solve_ex": 1330, "solve_triangular": [1330, 1948], "expand_a": [1330, 2011, 2044, 2062, 2081], "rectangular": [1332, 1333, 1361, 1920, 2037, 2059], "triu_": [1332, 2011], "tril_": [1332, 2011], "full_matric": [1333, 1334, 1733, 1924, 2011, 2103], "vh": [1333, 1733, 1924, 2011, 2103], "gesvdj": [1333, 1334, 1924], "jacobi": 1333, "gesvda": [1333, 1334], "gesvd": [1333, 1334, 1924], "u_k": 1333, "v_k": 1333, "sigma_j": [1333, 1924], "eigendecomposit": 1333, "0486e": 1333, "0957e": 1333, "5139": 1334, "1087": 1334, "1066": 1334, "ind": [1335, 1336, 2011, 2045], "tensorsolv": 1335, "ndim": [1335, 1336, 2030, 2032, 2077, 2083, 2097], "atensorinv": 1335, "movedim": [1336, 1376, 2011, 2045, 2062, 2081], "tensorinv": 1336, "vandermond": [1337, 1967], "pmatrix": 1337, "x_n": [1337, 1435, 1436, 1482, 1483, 1489, 1514, 1555, 1946, 2039], "125": [1337, 1542, 1967, 2011], "overlin": [1338, 1970], "3223": 1338, "2815": 1338, "1944": [1338, 2051], "4345": 1339, "pickle_modul": [1341, 1855], "weights_onli": [1341, 2008, 2024, 2056], "pickle_load_arg": 1341, "register_packag": [1341, 2056], "binaryio": [1341, 1855, 2064], "mmape": 1341, "untrust": [1341, 2008, 2024, 2064], "tamper": [1341, 2064], "surg": 1341, "unicodedecodeerror": 1341, "codec": 1341, "0x": 1341, "latin1": 1341, "byte_arrai": 1341, "niter": [1342, 1813, 1925], "ortho_iparam": 1342, "ortho_fparam": 1342, "ortho_bparam": 1342, "knyazev": 1342, "knyazev2001": 1342, "stathopoulosetal2002": 1342, "converg": [1342, 1555, 1727, 1780, 1781, 1805, 2038, 2051, 2054], "precondition": 1342, "eigenpair": 1342, "criterion": [1342, 1435, 1436, 1456, 1458, 1483, 1489, 1514, 1515, 1526, 1527, 1528, 1555, 1556, 1572, 1573, 1798, 1830, 2046], "fep": 1342, "eigenproblem": 1342, "iparam": 1342, "fparam": 1342, "bparam": 1342, "ivar": 1342, "fvar": 1342, "bvar": 1342, "tvar": 1342, "istep": 1342, "converged_count": 1342, "rerr": 1342, "force_stop": 1342, "2001": 1342, "precondit": 1342, "eigensolv": 1342, "siam": 1342, "sci": 1342, "517": 1342, "541": 1342, "epub": 1342, "doi": [1342, 1476, 1887], "1137": 1342, "s1064827500366124": 1342, "andrea": 1342, "stathopoulo": 1342, "kesheng": 1342, "2002": [1342, 1887], "2165": 1342, "2182": 1342, "s1064827500370883": 1342, "duerschetal2018": 1342, "jed": 1342, "duersch": 1342, "meiyu": 1342, "shao": 1342, "chao": 1342, "ming": 1342, "gu": 1342, "c655": 1342, "c676": 1342, "17m1129830": 1342, "log_": [1343, 1344, 1345, 1346, 2011, 2030], "7767": 1343, "3234": 1343, "2156": 1343, "2411": 1343, "5739": 1343, "5637": 1343, "4640": 1343, "1952": 1343, "4226": 1343, "5204": [1343, 1832], "5224": 1344, "9354": 1344, "7257": 1344, "1301": 1344, "2820": 1344, "0290": 1344, "1392": 1344, "8857": 1344, "6476": 1344, "0090": [1345, 1421, 1819, 2078], "9923": 1345, "5372": 1345, "2492": 1345, "8653": 1345, "7055": 1345, "7705": 1345, "2225": 1345, "8419": 1346, "8003": [1346, 2055], "9971": 1346, "5287": 1346, "0490": 1346, "2483": 1346, "0042": 1346, "9196": 1346, "3504": [1346, 1941], "logsumexp": [1347, 2011, 2030, 2062, 2078], "3069": 1347, "6867": 1347, "8731": 1347, "30000": 1347, "1269e": 1347, "log_2": 1348, "logaddexp": [1348, 2011, 2062], "limits_": 1349, "42296738": 1349, "04462666": 1349, "86278635": 1349, "94622083": 1349, "05277811": 1349, "39202815": 1349, "83525007": 1349, "84492621": 1349, "06084887": 1349, "06844475": 1349, "2611": [1350, 1938], "9254": 1350, "6213": [1350, 2051], "6843": 1350, "3242": 1350, "9665": 1350, "4539": 1350, "0887": [1350, 2078], "1336": 1350, "4025": 1350, "7089": [1350, 1465], "9032": 1350, "3031": 1350, "2589": 1356, "1135": 1356, "5481": [1356, 1369, 2051], "9566": 1356, "sum_j": [1357, 1513, 1557, 1559, 1687, 1903, 2078], "0593": [1357, 2051], "5696": 1357, "6859e": 1357, "compute_pivot": 1359, "transposit": [1359, 1945, 2077], "perm": 1359, "a_lu": 1359, "5558": 1359, "1684": 1359, "1551": 1359, "1940": 1359, "6189": 1359, "5497": 1359, "4526": 1359, "2526": 1359, "3285": 1359, "7988": 1359, "7175": 1359, "9701": 1359, "2634": 1359, "9255": 1359, "3459": 1359, "00000e": 1360, "8312": 1360, "unpack_data": [1361, 2011], "unpack_pivot": [1361, 2011], "l_": [1361, 1424, 1428, 1432, 1436, 1450, 1451, 1452, 1453, 1490, 1516], "u_": [1361, 1778, 1782], "3552": [1363, 1621], "3825": 1363, "8297": 1363, "3477": 1363, "2035": [1363, 1918, 1919, 1968, 1969], "2252": [1363, 2078], "5002": 1363, "6248": [1363, 1372], "1307": 1363, "0608": [1363, 1896], "1244": 1363, "0139": 1363, "6763": 1367, "7445": 1367, "2369": 1367, "argmax": [1367, 1427, 1516, 1654, 1655, 1656, 1936, 2011, 2062, 2103], "max_indic": 1367, "2360": 1367, "2942": 1367, "1222": [1367, 2051], "8475": 1367, "1949": 1367, "1127": 1367, "6702": 1367, "5717": 1367, "9207": 1367, "1297": 1367, "8768": 1367, "6172": 1367, "6060": 1367, "2432": 1367, "3288": 1369, "3367": [1369, 1917], "nanmean": [1369, 2011, 2062], "3841": 1369, "6320": 1369, "4254": 1369, "7384": 1369, "0131": 1369, "6549": [1369, 1879], "4279": 1369, "3350": 1369, "7694": 1369, "5600": [1369, 1576], "0842": 1369, "9580": 1369, "3623": 1369, "2343": [1369, 2032], "5085": 1369, "4599": 1369, "1807": 1369, "5219": 1370, "5212": 1370, "2202": 1370, "2505": 1370, "3982": 1370, "9948": 1370, "3518": 1370, "3131": 1370, "3180": [1370, 2077], "6993": 1370, "0436": 1370, "0438": 1370, "2270": 1370, "2751": 1370, "7303": 1370, "2192": 1370, "3321": 1370, "2488": 1370, "0778": 1370, "9510": 1370, "7048": 1370, "4742": [1370, 1954, 2078], "7125": [1370, 1905], "plot": [1371, 2041, 2066, 2082, 2110], "t_0": [1371, 1798], "t_": [1371, 1471, 1625, 1797, 1798, 2011, 2077, 2098], "s_0": 1371, "s_": [1371, 1425, 1426, 1468, 1574], "g_0": 1371, "g_": [1371, 1782, 1792, 1793], "g_i": 1371, "t_i": 1371, "0d": [1371, 1515], "xy": 1371, "50276": 1371, "cartesian_prod": [1371, 2011, 2062], "grid_x": 1371, "grid_i": 1371, "dstack": [1371, 2011, 2062, 2077], "matplotlib": [1371, 2082], "pyplot": 1371, "plt": 1371, "plot_surfac": 1371, "6750": 1372, "0857": [1372, 1951], "7197": [1372, 1976], "argmin": [1372, 2011, 2062, 2103], "min_indic": [1372, 2011], "1334": 1372, "2803": 1372, "4644": [1372, 1918, 1919, 1968, 1969], "2635": [1372, 2051], "3651": 1372, "0384": 1372, "0128": 1372, "7015": 1372, "1153": 1372, "9849": 1372, "1458": [1372, 2078], "5788": 1372, "deduc": [1374, 2077], "4851": 1374, "5037": 1374, "3633": 1374, "0760": 1374, "3362": [1376, 1377], "8437": [1376, 1377], "9627": [1376, 1377], "1727": [1376, 1377], "5173": [1376, 1377], "1398": [1376, 1377], "mpsalloc": [1378, 1380], "metal": [1380, 1389, 2023, 2027, 2052], "mpsgraph": 1380, "wait_until_complet": [1385, 1386], "signpost": [1385, 1386, 1387], "xcode": 1386, "recommendedmaxworkingsets": 1389, "unlimit": [1389, 2042], "1321": 1392, "4370": [1392, 2077], "1289": 1392, "0527": 1392, "3077": [1392, 1914], "0881": 1392, "1259": 1392, "0284": 1392, "2015": [1408, 2037, 2051], "6087": 1408, "1494": 1408, "5491": 1408, "260": 1408, "8663": 1408, "3137": 1408, "0700": 1408, "8378": 1408, "5146": 1408, "1216": 1408, "5244": 1408, "5767": 1408, "1363": 1408, "5877": 1408, "5083": 1408, "1614": 1408, "1645": 1408, "7021": 1408, "0085": 1408, "0367": 1408, "1567": 1408, "4312": 1408, "1019": 1408, "4394": 1408, "8753": 1408, "_sampl": 1409, "n_sampl": 1409, "prob_dist": 1409, "0404": 1411, "6361": 1411, "multigammaln": [1412, 2078], "4028e": 1413, "38": [1413, 2097], "1400e": 1413, "isnan": [1414, 2011, 2062, 2077, 2103], "midpoint": [1416, 1824], "weakli": [1418, 1419, 2078], "to_spars": [1419, 1901, 2011, 2055, 2062, 2077], "2262": [1421, 1819], "0682": [1421, 1819], "2866": [1421, 1819], "3940": [1421, 1819], "5x7": [1425, 1429], "7x7": [1425, 1429], "10x7": [1425, 1429], "cube": [1426, 1430, 1830], "d_": [1426, 1430, 1434, 1446, 1449, 1452, 1455, 1492, 1518, 1521, 1547, 1550, 1576, 1581, 1629, 1949, 1950, 1951, 1952], "5x7x9": [1426, 1430], "7x7x7": [1426, 1430], "7x9x8": [1426, 1430], "n_class": 1427, "cutoff": [1427, 2037], "div_valu": 1427, "head_bia": 1427, "edouard": 1427, "grave": [1427, 1442], "armand": 1427, "joulin": 1427, "moustapha": 1427, "cissu00e9": 1427, "grangier": 1427, "hervu00e9": 1427, "ju00e9g": 1427, "imbalanc": 1427, "zipf": 1427, "law": 1427, "102": [1427, 2102], "1001": 1427, "1002": 1427, "_class": 1427, "maxunpool1d": [1428, 1516, 1657, 1961], "maxunpool2d": [1429, 1470, 1517, 1658, 1961], "maxunpool3d": [1430, 1471, 1518, 1659, 1961], "selu": [1431, 1467, 1622, 2011, 2037, 2061, 2062], "n_i": [1432, 1433, 1434, 1450, 1451, 1452, 1516, 1517, 1518, 1572, 1573], "c_j": [1432, 1433, 1434, 1516, 1517, 1518], "size_averag": [1435, 1436, 1456, 1458, 1482, 1488, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1601, 1602, 1610, 1612, 1637, 1641, 1642, 1653, 1661, 1662, 1663, 1664, 1665, 1673, 1685, 1686, 1697, 2011], "unreduc": [1435, 1436, 1458, 1483, 1489, 1514, 1530, 1555, 1573], "ell": [1435, 1436, 1458, 1482, 1483, 1489, 1514, 1530, 1555, 1573], "l_1": [1435, 1436, 1458, 1482, 1483, 1489, 1514, 1530, 1555, 1573], "l_n": [1435, 1436, 1458, 1482, 1483, 1489, 1514, 1530, 1555, 1573], "w_n": [1435, 1436, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887], "y_n": [1435, 1436, 1458, 1482, 1483, 1489, 1514, 1530, 1555, 1946, 2039], "lim_": [1435, 2039], "secondli": 1435, "rescal": [1435, 1436, 1458, 1527, 1528, 1530, 1557, 1559, 1601, 1602, 1612, 1665, 1733, 1762], "nbatch": [1435, 1436], "meantim": [1435, 1436, 1456, 1458, 1482, 1489, 1514, 1515, 1526, 1527, 1528, 1530, 1537, 1555, 1556, 1572, 1601, 1602, 1612, 1641, 1665, 1673, 2108], "pos_weight": [1436, 1602, 2011], "recal": [1436, 2044, 2082], "ell_c": 1436, "l_c": 1436, "p_c": 1436, "imbal": 1436, "pai": [1436, 1602, 2057, 2081], "spacial": 1436, "random_": [1436, 1458, 1530, 1602, 2011, 2030, 2086], "hat": [1437, 1438, 1439, 1485, 1486, 1487, 1563], "terminologi": [1437, 1438, 1439, 1563], "5d": [1439, 1487, 1576, 1629, 1640, 1668, 1700], "volumetr": [1439, 1563, 1576, 1629, 1640, 1700, 1701, 1702], "spatio": [1439, 1563], "in1_featur": 1440, "in2_featur": 1440, "in1": [1440, 1600], "in2": [1440, 1600], "blank": [1442, 1613, 2011, 2014], "zero_infin": [1442, 1613, 2011], "connectionist": [1442, 1613], "unseg": 1442, "longest": [1442, 1755, 1757, 1758, 2046], "input_length": [1442, 1613, 2011, 2046], "target_length": [1442, 1613, 2011], "s_n": 1442, "target_n": 1442, "unbatch": [1442, 1458, 1469, 1474, 1485, 1493, 1529, 1539, 1567, 1623], "s_min": 1442, "toronto": 1442, "edu": [1442, 1830], "icml_2006": 1442, "background": [1442, 1453, 1629, 1668, 2053, 2072], "channel_shuffl": [1443, 2011, 2062], "_left": [1444, 1445, 1446, 1447, 1448, 1449, 1545, 1546, 1547, 1548, 1549, 1550, 1579, 1580, 1581, 1668], "_right": [1444, 1445, 1446, 1447, 1448, 1449, 1545, 1546, 1547, 1548, 1549, 1550, 1579, 1580, 1581, 1668], "_top": [1445, 1446, 1448, 1449, 1546, 1547, 1549, 1550, 1580, 1581, 1668], "_bottom": [1445, 1446, 1448, 1449, 1546, 1547, 1549, 1550, 1580, 1581, 1668], "_front": [1446, 1449, 1547, 1550, 1581, 1668], "_back": [1446, 1449, 1547, 1550, 1581, 1668], "320": [1446, 1550], "480": [1446, 1550], "0491": [1447, 1579], "7152": [1447, 1579], "0749": [1447, 1579], "3287": [1447, 1579], "8966": [1447, 1579], "1466": [1447, 1579], "2771": [1447, 1579], "6616": [1447, 1579], "4523": [1447, 1579], "1255": [1447, 1579], "6372": [1447, 1579, 1924], "1182": [1447, 1579], "8652": [1447, 1579], "6585": 1448, "4320": [1448, 1934], "8701": 1448, "4649": 1448, "_j": [1450, 1451], "star": [1450, 1451, 1452, 2013], "uue0": 1450, "trou": [1450, 1451, 1452, 1453, 1454, 1455, 1469, 1575], "harder": [1450, 1451, 1452, 1453, 1454, 1455, 1469, 1517, 1518, 1575], "u00e0": [1451, 1452, 1453, 1454, 1455, 1469, 1575], "prod_": [1451, 1452, 1454, 1455, 1468, 1574, 1784], "out_j": 1452, "deconvolut": [1453, 1454, 1455, 1607, 1608, 1609], "_pad": [1453, 1454, 1455], "semi": [1456, 1482, 2009, 2037], "supervis": [1456, 1482], "vert": [1457, 1532, 1611], "_2": [1457, 1611, 1728, 1762], "ast_1": [1457, 1473], "ast_2": [1457, 1473], "ignore_index": [1458, 1530, 1612, 1665, 2011], "unbalanc": [1458, 1530], "d_1": [1458, 1530, 1612, 1665], "d_2": [1458, 1530, 1612, 1665], "d_k": [1458, 1530, 1612, 1665], "_index": [1458, 1530], "logsoftmax": [1458, 1530, 1557, 1648], "nllloss": [1458, 1557, 1665, 1687, 1961], "blend": 1458, "smooth": [1458, 1483, 1555, 1560, 1612, 1638, 1685, 1791], "w_c": 1458, "rethink": [1458, 1612], "incept": [1458, 1612], "spectral_norm": [1459, 1752], "neuron": 1460, "detector": 1460, "dropout1d": [1462, 2011], "_freez": 1465, "sparseadam": [1465, 2063], "0251": 1465, "6902": [1465, 1821], "7172": 1465, "6431": 1465, "0748": 1465, "6969": 1465, "4970": 1465, "3448": 1465, "9685": 1465, "3677": 1465, "7265": 1465, "1685": 1465, "4362": 1465, "4004": [1465, 1905], "9400": 1465, "9124": 1465, "3616": 1465, "1151": 1465, "0309": 1465, "9315": 1465, "1655": [1465, 2042], "9897": [1465, 2044], "0635": 1465, "7895": 1465, "0364": 1465, "6778": 1465, "5803": 1465, "from_pretrain": [1465, 1466, 2101], "bag": [1466, 1621], "per_sample_weight": [1466, 1621, 2011, 2103], "embedding_sum": 1466, "8861": 1466, "4350": 1466, "0523": 1466, "1306": 1466, "5798": 1466, "0044": 1466, "7082": [1466, 1621], "2145": [1466, 1621], "6251": [1466, 1621], "6500": 1466, "satur": [1467, 1622], "alphadropout": [1467, 1595], "160": [1468, 2063], "unfold": [1469, 2011, 2062, 2081], "prod_d": [1469, 1575], "neighborhood": [1469, 1575], "col2im": [1469, 2011, 2062, 2103], "fold_param": [1469, 1575], "input_on": [1469, 1575], "output_ratio": [1470, 1471, 1624, 1625, 2011], "_random_sampl": [1470, 1471, 1624, 1625, 2011], "ben": [1470, 1471, 1624, 1625], "graham": [1470, 1471, 1624, 1625], "oh": [1470, 1471, 1624, 1625], "ow": [1470, 1471, 1624, 1625], "_ratio": [1470, 1471, 1625], "_h": 1470, "13x12": [1470, 1624], "kt": [1471, 1598, 1606, 1609, 1625, 1656], "ot": [1471, 1625], "13x12x11": [1471, 1625], "044715": [1472, 1627], "pack_sequ": [1474, 1493, 1539, 1757, 1759], "bias_ih": [1475, 1494, 1539, 1541], "bias_hh": [1475, 1494, 1539, 1541], "homoscedast": [1476, 1626], "heteroscedast": [1476, 1626], "nix": 1476, "weigend": 1476, "1994": 1476, "icnn": 1476, "94": 1476, "orlando": 1476, "fl": 1476, "usa": [1476, 2082], "374138": 1476, "instancenorm": [1477, 2069], "shrinkag": [1478, 1561, 1632, 1690], "mobilenetv3": [1480, 1634], "_val": 1481, "dissimilar": 1482, "l1loss": [1483, 1555, 1642], "outlier": [1483, 1555, 2067, 2068], "huber": [1483, 1555, 1638], "smoothl1loss": [1483, 1638, 1685], "insensit": 1484, "unused_argument1": 1484, "unused_argument2": 1484, "ingredi": [1485, 1486, 1487], "styliz": [1485, 1486, 1487], "rgb": [1486, 1487, 2082], "log_target": [1488, 1641, 2011], "kl": [1488, 1641, 2009], "summaris": 1488, "loss_pointwis": 1488, "batchmean": [1488, 1641], "kl_loss": 1488, "mae": 1489, "proj_siz": [1493, 1540], "f_t": [1493, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "hf": [1493, 1494], "g_t": [1493, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "ig": [1493, 1494], "hg": [1493, 1494], "o_t": 1493, "ho": [1493, 1494], "c_t": 1493, "forget": [1493, 2012, 2013], "1402": 1493, "c_0": [1493, 1494], "proj": 1493, "c_n": 1493, "w_ii": 1493, "w_if": 1493, "w_ig": 1493, "w_io": 1493, "w_hi": 1493, "w_hf": 1493, "w_hg": 1493, "w_ho": 1493, "b_ii": 1493, "b_if": 1493, "b_ig": 1493, "b_io": 1493, "b_hi": 1493, "b_hf": 1493, "b_hg": 1493, "b_ho": 1493, "weight_hr_l": 1493, "_revers": 1493, "h_1": 1494, "c_1": 1494, "time_step": 1494, "_shape": [1495, 1538, 1712], "sentence_length": 1495, "lazymodulemixin": [1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508], "cls_to_becom": [1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1716], "convtranspose1d": [1502, 1607, 1961, 2069], "convtranspose3d": [1504, 1609, 1721, 1961, 2069], "instancenorm1d": [1505, 1639, 2069], "instancenorm2d": [1506, 1639, 2069], "instancenorm3d": [1507, 1639, 2069], "uninitializedparamet": [1508, 1703, 2009], "lrn": 1511, "signal_2d": 1511, "signal_4d": 1511, "output_2d": 1511, "output_4d": 1511, "x_j": [1513, 1557, 1559, 1687, 1903, 2048, 2078], "80827": [1519, 1520, 1521], "unpool": [1519, 1520, 1521], "maxpool3d": [1521, 1656, 1659, 1961, 2069], "unpooled_output": 1521, "t_destin": 1523, "lrelu": [1524, 2051], "hing": [1526, 1528], "sum_i": [1527, 1528, 1556], "nelement": [1527, 1556], "jointli": 1529, "multihead": [1529, 1569], "concat": [1529, 2011, 2047, 2062], "head_1": 1529, "head_h": 1529, "head_i": 1529, "qw_i": 1529, "kw_i": 1529, "vw_i": 1529, "inference_mod": [1529, 1571], "nestedtensor": [1529, 1571, 2032], "multihead_attn": 1529, "e_q": 1529, "e_k": 1529, "e_v": 1529, "_head": [1529, 1567], "merge_mask": 1529, "mask_typ": 1529, "merged_mask": 1529, "nll": 1530, "num_paramet": 1531, "nchannel": 1531, "decai": [1531, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 1800, 1802, 1803, 1806, 1807, 1809, 1880, 2063], "legitim": [1531, 1629, 2045], "vert_p": 1532, "upscale_factor": [1535, 1671, 2011], "upscal": 1535, "video": [1535, 1536, 2031, 2082, 2097], "shi": [1535, 1536], "2016": [1535, 1536, 1573], "_factor": [1535, 1536, 1576, 1577, 1578], "pixel_shuffl": [1535, 2011, 2062, 2069], "downscale_factor": [1536, 1672, 2011], "pixelshuffl": [1536, 1671, 1672, 2069], "downscal": 1536, "pixel_unshuffl": [1536, 2011, 2062, 2069], "log_input": [1537, 1673, 2011], "poisson": [1537, 1673, 1880, 2009, 2011, 2062], "stirl": [1537, 1673], "rm": [1538, 1572, 1573, 1712], "rms_norm": [1538, 1712, 2011, 2062], "hh": [1539, 1541], "h_t_minus_1": 1539, "flatten_paramet": 1540, "3333333333333333": [1542, 1796, 1802, 2011], "leaki": [1542, 1679, 2037], "rectifi": [1542, 1543, 1675, 2037], "empir": 1542, "crelu": 1543, "1603": 1543, "05201": 1543, "6732632423543772848170429916717": [1551, 1682], "0507009873554804934193349852946": [1551, 1682], "kaiming_norm": 1551, "kaiming_normal_": [1551, 2009, 2015, 2037], "initialis": 1551, "calculate_gain": [1551, 2009, 2015, 2037], "modulelist": [1552, 2051], "cascad": 1552, "relu2": [1552, 1703], "swish": [1553, 1684], "coin": [1553, 1684], "cnn": [1555, 2067], "ross": 1555, "girshick": 1555, "quadrat": [1555, 2046], "huberloss": [1555, 1638], "w_j": 1558, "soft": [1561, 1631, 1690], "softshrinkag": 1561, "convert_sync_batchnorm": 1563, "r1": 1563, "sync_bn_network": 1563, "ddp_sync_bn_network": 1563, "sync_bn_modul": 1563, "d_model": [1567, 1568, 1569, 1570, 1571], "nhead": [1567, 1568, 1569, 1570, 1571], "num_encoder_lay": 1567, "num_decoder_lay": 1567, "dim_feedforward": [1567, 1569, 1571], "custom_encod": 1567, "custom_decod": 1567, "layer_norm_ep": [1567, 1569, 1571], "norm_first": [1567, 1569, 1571], "ashish": [1567, 1569, 1571], "vaswani": [1567, 1569, 1571], "noam": [1567, 1569, 1571], "shazeer": [1567, 1569, 1571], "niki": [1567, 1569, 1571], "parmar": [1567, 1569, 1571], "jakob": [1567, 1569, 1571], "uszkoreit": [1567, 1569, 1571], "llion": [1567, 1569, 1571], "jone": [1567, 1569, 1571], "aidan": [1567, 1569, 1571], "gomez": [1567, 1569, 1571], "lukasz": [1567, 1569, 1571], "illia": [1567, 1569, 1571], "polosukhin": [1567, 1569, 1571], "6000": [1567, 1569, 1571, 1576, 1827, 1874, 1877], "6010": [1567, 1569, 1571], "feedforward": [1567, 1569, 1571, 2037], "transformer_model": 1567, "word_language_model": 1567, "src_mask": [1567, 1571], "tgt_mask": [1567, 1568, 1569], "memory_mask": [1567, 1568, 1569], "src_key_padding_mask": [1567, 1570, 1571], "tgt_key_padding_mask": [1567, 1568, 1569], "memory_key_padding_mask": [1567, 1568, 1569], "src_is_caus": 1567, "tgt_is_caus": [1567, 1568, 1569], "memory_is_caus": [1567, 1568, 1569], "_mask": [1567, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751], "_key_padding_mask": 1567, "generate_square_subsequent_mask": 1567, "sz": 1567, "decoder_lay": [1568, 1569], "transformerdecoderlay": 1568, "transformer_decod": 1568, "encoder_lay": [1570, 1571], "enable_nested_tensor": 1570, "mask_check": 1570, "bert": [1570, 2101], "1810": 1570, "04805": 1570, "transformerencoderlay": 1570, "transformer_encod": 1570, "triplet": [1572, 1573, 1697, 1698], "x3": 1572, "balnta": [1572, 1573], "riba": [1572, 1573], "a_i": [1572, 1573, 1882], "p_i": [1572, 1573], "rvert_p": [1572, 1666], "tripletmarginwithdistanceloss": [1572, 1698], "triplet_loss": [1572, 1573], "distance_funct": [1573, 1698], "l_i": 1573, "tripletmarginloss": [1573, 1697], "l_p": [1573, 1666], "pairwisedist": [1573, 1669], "penal": [1573, 2051, 2063], "distant": 1573, "anchor_id": 1573, "positive_id": 1573, "negative_id": 1573, "l_infin": 1573, "bmva": 1573, "bmvc": 1573, "paper119": 1573, "unflattened_s": 1574, "namedtensor": 1574, "namedshap": 1574, "u_1": 1574, "u_n": 1574, "u_i": 1574, "im2col": [1575, 2011, 2062], "2x3": 1575, "3x4": 1575, "inp_unf": 1575, "out_unf": 1575, "recompute_scale_factor": [1576, 1640], "bicub": [1576, 1629, 1640, 1700, 1961], "trilinear": [1576, 1629, 1640, 1700, 1961], "input_3x3": 1576, "4375": 1576, "8125": 1576, "9375": 1576, "2400": [1576, 1941], "1200": [1576, 1852, 2042], "8800": 1576, "4400": [1576, 1941], "7200": 1576, "0400": 1576, "2800": [1576, 1874], "3600": 1576, "5200": 1576, "6400": 1576, "1678": 1580, "4418": 1580, "9466": [1580, 2078], "9604": 1580, "4219": 1580, "5241": 1580, "9162": 1580, "5436": [1580, 1941], "6446": 1580, "sdpa_kernel": [1582, 1681], "flash_attent": [1582, 1587], "cudnn_attent": 1582, "seq_len_q": 1583, "seq_len_kv": 1583, "causalvari": 1583, "constru": 1583, "causal_upper_left": 1583, "causal_lower_right": 1583, "bsz": 1583, "seqlen_q": 1583, "seqlen_kv": 1583, "head_dim": 1583, "attn_bia": [1583, 1681], "upper_left": [1584, 1586], "lower_right": [1584, 1585], "diagonal_offset": [1584, 1585], "causalbia": [1585, 1586], "sdpbackend": 1587, "adaptiveavgpool1d": [1588, 2069], "tripl": [1590, 1593], "adaptivemaxpool1d": 1591, "adaptivemaxpool2d": [1592, 1961], "adaptivemaxpool3d": 1593, "avgpool1d": [1596, 2069], "st": [1598, 1606, 1609, 1656, 2108], "avgpool3d": [1598, 1961, 2069], "iT": [1598, 1606, 1609], "padt": [1598, 1606, 1609], "score": [1602, 1681, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748, 2009], "dt": [1606, 1609, 2078, 2108], "out_padw": [1607, 1608, 1609], "out_padh": [1608, 1609], "out_padt": 1609, "cosineembeddingloss": 1610, "ctcloss": [1613, 1961], "charact": [1613, 1871, 2010, 2013, 2031, 2072], "elu": [1619, 2011, 2061, 2062, 2069], "embedding_matrix": [1620, 1621], "8490": 1620, "9625": 1620, "6753": 1620, "7761": 1620, "6108": 1620, "6246": 1620, "9751": 1620, "3618": 1620, "4161": [1620, 2077], "2419": 1620, "7383": 1620, "0237": 1620, "7794": 1620, "0528": 1620, "3385": 1620, "8612": 1620, "1867": 1620, "5384": 1620, "8720": 1620, "6262": 1620, "7471": 1620, "embeddingbag": [1621, 1961, 2067, 2069, 2083], "3397": 1621, "5545": 1621, "5893": 1621, "4386": 1621, "5882": 1621, "featurealphadropout": 1622, "gaussiannllloss": 1626, "border": 1629, "affine_grid": [1629, 2011], "extrema": 1629, "pil": [1629, 1640], "overshoot": [1629, 1640, 1700], "gumbel": [1631, 2009], "y_hard": 1631, "y_soft": 1631, "hardtanh": [1636, 2011, 2023, 2062, 2069, 2103], "hingeembeddingloss": 1637, "use_input_stat": [1639, 2011], "antialia": 1640, "anti": 1640, "pillow": [1640, 2082], "buggi": 1640, "inter_nearest": 1640, "104157": 1640, "kldivloss": 1641, "batchsiz": [1641, 1906, 1907, 1908, 1910, 1911, 2077], "leaky_relu": [1645, 2011, 2037, 2062, 2069, 2103], "localresponsenorm": 1647, "_stacklevel": [1648, 1687, 1688, 2011, 2017], "lppool1d": 1650, "lppool2d": 1651, "lppool3d": 1652, "marginrankingloss": 1653, "max_unpool1d": [1654, 2011], "multimarginloss": 1662, "multilabelmarginloss": 1663, "multilabelsoftmarginloss": 1664, "n_0": 1666, "n_": 1666, "n_k": 1666, "everywher": [1667, 1920, 2063], "circularpad2d": 1668, "constantpad2d": 1668, "reflectionpad2d": [1668, 1961], "replicationpad2d": [1668, 1961], "t4d": 1668, "p1d": 1668, "p2d": 1668, "p3d": 1668, "pixelunshuffl": [1672, 2069], "poissonnllloss": 1673, "rrelu": [1680, 2011, 2062], "dropout_p": [1681, 2011], "temp_mask": 1681, "mymodel": [1681, 2013, 2038, 2053, 2059], "ev": 1681, "legend": 1681, "softmarginloss": 1686, "module_kwarg": 1696, "upsample_trilinear": 1701, "fo": 1701, "spatia": 1702, "mixin": [1703, 2009], "dry": 1703, "lazymlp": 1703, "lazylinear": 1703, "lazy_mlp": 1703, "8832e": 1703, "5636e": 1703, "1598e": 1703, "5637e": 1703, "8788e": 1703, "0042e": 1703, "0019": 1703, "lazymodul": 1703, "full_mlp": 1703, "3837": [1703, 1821], "0907": 1703, "6708": 1703, "5223": 1703, "9028": 1703, "2851": 1703, "6813": 1703, "5766": 1703, "8678": 1703, "1320": 1703, "2938": 1703, "0679": [1703, 1951], "2793": [1703, 1769], "1088": 1703, "1795": 1703, "2301": 1703, "2807": 1703, "2479": 1703, "1091": 1703, "has_uninitialized_param": 1703, "initialize_paramet": 1703, "check_reduct": 1713, "delay_all_reduce_named_param": 1713, "param_to_hook_all_reduc": 1713, "optimizer_param": 1713, "loss_func": [1713, 2072], "consume_prefix_in_state_dict_if_pres": 1713, "nccl2": 1713, "dictat": [1713, 2013], "megabyt": 1713, "mb": [1713, 2042], "detach_": [1713, 2011, 2030, 2069, 2077], "ddp_logging_data": 1713, "can_set_static_graph": 1713, "model_ddp": 1713, "_get_ddp_logging_data": 1713, "divide_by_initial_world_s": 1713, "caught": [1713, 2029], "syncbatchnorm": 1713, "deplet": 1713, "pariti": 1713, "another_input": 1713, "predivid": 1713, "noop": 1713, "encode_and_decod": 1713, "encoded_tensor": 1713, "decoded_tensor": 1713, "error_if_nonfinit": [1717, 1718], "clip_valu": 1719, "nhwc": [1720, 1721, 2080, 2082], "outweigh": [1720, 1721, 1794, 2108], "_convnd": 1722, "conv_w": 1723, "conv_b": 1723, "bn_rm": [1723, 1725], "bn_rv": [1723, 1725], "bn_ep": [1723, 1725], "bn_w": [1723, 1725], "bn_b": [1723, 1725], "linear_w": 1725, "linear_b": 1725, "orthogonal_map": 1727, "use_trivi": 1727, "qq": 1727, "matrix_exp": [1727, 2011, 2062], "caylei": 1727, "thin": [1727, 1823], "manifold": 1727, "register_parametr": [1727, 1728, 1730, 1731, 1762, 2033], "orth_linear": 1727, "parametrizedlinear": [1727, 1728, 1729], "moduledict": [1727, 1728, 1729, 2012, 2051], "parametrizationlist": [1727, 1728, 1729, 1733], "_orthogon": 1727, "9332e": 1727, "n_power_iter": [1728, 1762], "sn": [1728, 1762], "discrimin": [1728, 1762], "adversari": [1728, 1762], "lipschitz": 1728, "reimplement": [1728, 1762, 2096], "_spectralnorm": 1728, "convtranspos": [1728, 1762], "snm": 1728, "0081": 1728, "amaxbackward0": 1728, "decoupl": [1729, 1765, 1781, 1784, 1790], "1602": [1729, 1765], "07868": [1729, 1765], "_weightnorm": 1729, "original0": [1729, 1730, 1733, 1765], "original1": [1729, 1730, 1733, 1765], "tensor_nam": [1730, 1732, 1733, 1734], "right_invers": [1730, 1733], "out_rnn": 1731, "rnn_cell": 1731, "inbuilt": 1733, "unparametr": 1733, "rankon": 1733, "surject": 1733, "s0_sqrt": 1733, "linear_rank_on": 1733, "matrix_rank": 1733, "leave_parametr": 1734, "unparametris": 1734, "prune": [1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 2033, 2077], "skeleton": 1735, "compute_mask": [1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742], "importance_scor": [1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1747, 1748], "apply_mask": [1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742], "pruned_tensor": [1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742], "default_mask": [1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742], "_orig": [1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751], "undon": [1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1751], "unprun": [1738, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750], "basepruningmethod": [1740, 1746], "add_pruning_method": 1740, "pruning_typ": [1740, 1744], "unstructur": [1740, 1744], "ravel": [1740, 2011, 2062], "nonmask": 1740, "bias_mask": [1743, 1745], "pruning_method": 1744, "parameters_to_prun": 1744, "l1unstructur": 1744, "parameters_to_vector": 1744, "forward_pre_hook": [1746, 2051], "random_unstructur": [1746, 1751], "odict_kei": 1747, "weight_orig": 1747, "weight_mask": [1747, 1750], "columns_prun": 1749, "t_modul": [1752, 1753, 1762, 1765], "weight_norm": 1753, "sorted_indic": [1754, 1756, 1757, 1759], "unsorted_indic": [1754, 1756, 1757, 1759], "abc": [1754, 2013], "axbc": 1754, "throughout": [1754, 2048, 2051, 2067, 2096], "conform": [1754, 2051], "is_cuda": [1754, 2030, 2062, 2079], "enforce_sort": [1755, 1756, 1757], "unsort": [1755, 1756, 1859], "shortest": 1755, "uncondition": [1755, 2008, 2044, 2109], "pad_sequ": [1756, 1760, 2011, 2062], "padding_valu": [1757, 1758, 2011], "total_length": [1757, 2046], "seq_unpack": 1757, "lens_unpack": 1757, "packed_sequ": 1759, "unpacked_sequ": 1759, "padded_sequ": 1760, "unpad": 1760, "unstack": 1760, "as_tensor": [1760, 1939, 2011, 2032, 2044, 2062, 2082, 2083, 2084], "unpadded_sequ": 1760, "module_cl": [1761, 2072], "5846e": 1761, "29": [1761, 1887, 2061], "8307e": 1761, "5250e": 1761, "1210e": 1761, "4677e": 1761, "5915e": 1761, "4013e": 1761, "weight_u": 1762, "parameters_and_buff": 1763, "reparamater": 1763, "weight_g": [1765, 2011], "weight_v": 1765, "modern": [1765, 2054, 2092, 2099], "bother": 1765, "102999": 1765, "remove_parametr": 1765, "as_tupl": [1767, 1976], "complexfloat": [1768, 1774], "0425": 1769, "7969": 1769, "2925": 1769, "7229": 1769, "2134": 1769, "0505": 1769, "1408": 1769, "0563": 1769, "0566": 1769, "0732": [1769, 1941], "0687": 1769, "1177": 1769, "2303": [1769, 1917], "1552": 1769, "6148": 1769, "6535": 1769, "8318": 1769, "3987": 1769, "9544": [1769, 1831], "6048": 1769, "7909": 1769, "120": [1771, 2082], "from_valu": 1774, "onnx_typ": 1774, "tensorprotodatatyp": 1774, "torch_c_value_with_type_float": 1774, "from_dtyp": 1774, "jit_type_bas": 1774, "safer": [1774, 2020], "onnxexportererror": [1774, 2059, 2061], "from_onnx_typ": 1774, "_onnx": 1774, "symbolicvalueerror": 1774, "onnx_compat": 1774, "scalar_nam": 1774, "complexhalf": 1774, "complexdoubl": 1774, "float8e5m2": 1774, "float8e4m3fn": 1774, "float8e5m2fnuz": 1774, "float8e4m3fnuz": 1774, "torch_nam": 1774, "int8_t": 1774, "int16_t": 1774, "float8_e5m2": [1774, 2079, 2083], "float8_e4m3fn": [1774, 2079, 2083], "float8_e5m2fnuz": [1774, 2079], "float8_e4m3fnuz": [1774, 2079], "verif": [1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 2061], "params_dict": 1775, "export_opt": [1775, 2059], "_excluded_node_kind": 1775, "frozenset": [1775, 2013], "scalarimplicit": [1775, 2062], "prim": [1775, 2010, 2061, 2062], "listconstruct": [1775, 2010], "all_mismatch_leaf_graph_info": 1775, "essential_node_count": 1775, "subgraph": [1775, 2039, 2043, 2061, 2064, 2088, 2097, 2098, 2108], "essential_node_kind": 1775, "export_repro": 1775, "repro_dir": 1775, "repro": [1775, 2099, 2108], "test_": 1775, "test_data_set_0": 1775, "input_0": [1775, 2061], "pb": [1775, 2061], "input_1": [1775, 2061], "output_0": 1775, "output_1": 1775, "find_mismatch": [1775, 2061], "exhibit": [1775, 2061, 2095, 2108], "verificationopt": [1775, 2061], "find_partit": 1775, "has_mismatch": 1775, "pretty_print_mismatch": 1775, "pretty_print_tre": 1775, "graph_info": [1775, 2061], "__2": [1775, 2061], "__1": [1775, 2061], "__3": [1775, 2061], "110": [1775, 2061], "verify_export": 1775, "onnx_graph": 1775, "onnx_out": 1775, "pt_out": 1775, "ignore_non": 1776, "check_shap": 1776, "check_dtyp": [1776, 2084], "onnxbackend": 1776, "onnx_runtime_cpu": 1776, "remained_onnx_input_idx": 1776, "acceptable_error_percentag": 1776, "percentag": [1776, 1805, 1880, 2067], "weight_decai": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794, 2051, 2063], "1e6": 1777, "tensorlist": [1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "prohibit": [1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793, 2042, 2056], "impair": [1777, 1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "ungraph": [1777, 1778, 1780, 1781, 1782, 1784, 1790, 1791, 1792], "removeablehandl": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "register_load_state_dict_pre_hook": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "register_state_dict_post_hook": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "register_step_post_hook": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "register_step_pre_hook": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "new_arg": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "new_kwarg": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1790, 1791, 1792, 1793, 1794], "momentum_buff": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1787, 1790, 1791, 1792, 1793, 1794], "reevalu": [1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1788, 1790, 1791, 1792, 1793, 1794, 2063], "rho": 1778, "110mm": [1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "4pt": [1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "textbf": [1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "theta_0": [1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "v_0": [1778, 1780, 1781, 1784, 1790, 1791], "leftarrow": [1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "u_0": [1778, 1782], "hspace": [1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "5mm": [1778, 1779, 1780, 1781, 1782, 1784, 1791, 1792, 1793], "nabla_": [1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "theta_": [1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "10mm": [1778, 1779, 1780, 1781, 1782, 1784, 1791, 1792, 1793], "v_t": [1778, 1780, 1781, 1784, 1790, 1791], "v_": [1778, 1780, 1781, 1784, 1790, 1791, 1793], "2_t": [1778, 1779, 1780, 1781, 1784, 1790, 1791], "21mm": 1778, "u_t": [1778, 1782], "theta_t": [1778, 1779, 1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "oscil": 1778, "lr_decai": 1779, "initial_accumulator_valu": 1779, "12mm": [1779, 1790], "_sum_0": 1779, "tild": [1779, 1791], "_sum_t": 1779, "_sum_": 1779, "subgradi": 1779, "999": [1780, 1781, 1782, 1784, 1790, 1794, 2056, 2063], "amsgrad": [1780, 1781], "beta_1": [1780, 1781, 1782, 1784, 1790], "beta_2": [1780, 1781, 1782, 1784, 1790], "13mm": [1780, 1781, 1782, 1784, 1790, 1791, 1792, 1793], "textit": [1780, 1781, 1784, 1790, 1793], "m_0": [1780, 1781, 1782, 1784, 1790], "widehat": [1780, 1781, 1784, 1790], "m_t": [1780, 1781, 1782, 1784, 1790], "m_": [1780, 1781, 1782, 1784, 1790, 2077], "002": [1782, 1784], "t_1": 1782, "2e": [1782, 1784], "max_it": 1783, "max_ev": 1783, "tolerance_grad": 1783, "tolerance_chang": 1783, "history_s": 1783, "line_search_fn": 1783, "bfg": 1783, "minfunc": 1783, "intens": [1783, 2054], "param_byt": 1783, "strong_wolf": 1783, "momentum_decai": 1784, "004": 1784, "decoupled_weight_decai": [1784, 1790], "gamma_t": 1784, "psi": [1784, 2078], "_decai": [1784, 1790], "15mm": [1784, 1792, 1793], "mu_t": 1784, "96": 1784, "mu_": 1784, "11mm": 1784, "incorpor": [1784, 1879, 2067], "nesterov": [1784, 1793], "4e": 1784, "nadamw": 1784, "weightdecai": 1790, "18mm": 1790, "rho_": 1790, "6mm": 1790, "rho_t": 1790, "t_2": 1790, "l_t": 1790, "radamw": 1790, "_0": [1791, 2045, 2064, 2110], "av": 1791, "8mm": 1791, "3mm": 1791, "lectur": 1791, "hinton": 1791, "step_siz": [1792, 1809], "resili": [1792, 2054], "eta_": [1792, 1797, 1798], "etaplu": 1792, "etaminu": 1792, "gamma_": [1792, 2078], "0_": 1792, "eta_0": 1792, "i_": [1792, 1941], "eta_t": [1792, 1797, 1798], "dampen": 1793, "sutskev": 1793, "veloc": 1793, "conflat": 1794, "is_spars": [1794, 2030, 2062, 2077, 2079], "maskedtensor": [1794, 2077], "rig": 1794, "insist": 1794, "lr_schedul": [1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 2063], "chainabl": [1795, 1805], "081": 1795, "729": [1795, 1808], "6561": [1795, 1971], "59049": 1795, "scheduler1": [1795, 1808, 2063], "constantlr": [1795, 1808], "total_it": [1795, 1796, 1802, 1806, 1808], "scheduler2": [1795, 1808, 2063], "exponentiallr": [1795, 1808, 2063], "get_last_lr": [1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809], "print_lr": [1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809], "is_verbos": [1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809], "__dict__": [1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809], "last_epoch": [1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809], "mileston": [1796, 1802, 1803, 1808, 2063], "simultan": [1796, 1797, 1802, 1803, 1809, 2039, 2072], "025": [1796, 1802], "t_max": [1797, 2063], "eta_min": [1797, 1798], "anneal": [1797, 1798, 1805, 2063], "cur": [1797, 1798], "sgdr": [1797, 1798], "2k": 1797, "sole": 1797, "t_mult": 1798, "base_lr": [1799, 1805], "max_lr": [1799, 1805], "step_size_up": 1799, "step_size_down": 1799, "scale_fn": 1799, "scale_mod": 1799, "cycle_momentum": [1799, 1805], "base_momentum": [1799, 1805], "max_momentum": [1799, 1805], "cyclic": 1799, "forth": [1799, 1967, 2008, 2066, 2093], "amplitud": [1799, 1805], "triangular2": 1799, "exp_rang": 1799, "bckenstler": 1799, "train_batch": [1799, 1805], "get_lr": 1799, "lr_lambda": [1801, 1804], "lambda1": 1801, "lambda2": 1801, "start_factor": 1802, "end_factor": 1802, "03125": 1802, "0375": 1802, "04375": 1802, "005": [1803, 1809], "lmbda": 1804, "total_step": 1805, "steps_per_epoch": 1805, "pct_start": 1805, "anneal_strategi": [1805, 2063], "div_factor": 1805, "final_div_factor": 1805, "three_phas": 1805, "1cycl": 1805, "fastai": 1805, "unpublish": 1805, "initial_lr": 1805, "min_lr": [1805, 1807], "1e4": 1805, "annihil": 1805, "00075": 1806, "00050": 1806, "00025": 1806, "patienc": 1807, "threshold_mod": 1807, "cooldown": 1807, "stagnat": 1807, "new_lr": 1807, "baselin": 1807, "intoler": 1807, "optimum": 1807, "dynamic_threshold": 1807, "val_loss": 1807, "81": 1808, "pca": [1813, 2077], "overestim": [1813, 1925], "nathan": [1813, 1925], "halko": [1813, 1925], "gunnar": [1813, 1925], "martinsson": [1813, 1925], "tropp": [1813, 1925], "probabilist": [1813, 1925], "0909": [1813, 1925], "4061": [1813, 1925], "na": [1813, 1925], "cmath": [1817, 2011], "4142j": 1817, "4331": 1820, "2475": [1820, 1923], "6834": 1820, "2791": 1820, "1875": 1820, "5561": 1820, "4670": 1820, "8020": 1821, "5428": 1821, "5854": 1821, "5261": [1821, 1924], "1857": 1821, "2498": 1821, "1646": [1821, 2042], "0705": [1821, 2044], "0629": 1821, "2962": 1821, "0821": [1821, 1880], "1831": 1821, "type1": [1822, 2011], "type2": [1822, 2011], "2117": 1824, "9765": 1824, "1707": 1824, "4884": 1824, "5661": 1824, "5795": 1824, "5280": 1824, "9206": 1824, "quantization_schem": [1825, 1826, 1827, 1828, 1829], "int_repr": [1825, 1826, 2011, 2062], "nchw": [1827, 2082], "qx": [1827, 1828, 1829], "00001": 1827, "max_pool1d": [1828, 2011, 2062, 2069], "max_pool2d": [1829, 2011, 2059, 2062, 2069], "quasirandom": 1830, "scrambl": 1830, "sobol": 1830, "quasi": 1830, "21201": 1830, "web": 1830, "unsw": 1830, "au": [1830, 2064], "fkuo": 1830, "owen": 1830, "niederreit": 1830, "xing": 1830, "466": 1830, "489": 1830, "decemb": 1830, "1998": 1830, "zh": 1830, "vychisl": 1830, "phy": 1830, "784": 1830, "802": 1830, "1967": 1830, "soboleng": 1830, "draw_base2": 1830, "base2": 1830, "fast_forward": 1830, "142": 1831, "283": 1831, "570": 1831, "359": 1831, "9894": 1831, "2503": 1832, "3525": 1832, "5673": 1832, "8237": 1832, "5781": 1832, "6879": 1832, "3816": 1832, "7249": 1832, "0998": 1832, "im": [1836, 2039], "1436": 1836, "9966": 1836, "3426": 1836, "6366": 1836, "5954": 1836, "8929": 1836, "0923": 1836, "1719": 1836, "4709": 1836, "1996": 1836, "4595": 1842, "4314": 1842, "n2": 1845, "n3": 1845, "negat": [1848, 1933, 2013], "is_neg": [1848, 2011, 2062], "equidist": 1852, "inexact": 1852, "1234567": 1852, "1230": 1852, "vstack": [1853, 2011, 2062, 2077], "0370": 1854, "2970": 1854, "5420": 1854, "9105": 1854, "8351": 1854, "pickle_protocol": [1855, 2064], "default_protocol": 1855, "_use_new_zipfile_seri": [1855, 2056], "zipfil": [1855, 2064], "sorted_sequ": [1859, 2011], "sorter": [1859, 2011], "sorted_sequence_1d": 1859, "select_copi": [1861, 2011, 2062], "92701": [1863, 2080], "get_default_devic": 1863, "henry2019": 1867, "briefli": [1867, 2047], "nine": 1867, "fma": 1867, "10x": 1867, "1904": 1867, "06376": 1867, "denorm": [1868, 2054], "sse3": 1868, "aarch64": 1868, "323": 1868, "88131e": 1868, "324": 1868, "interop": 1869, "intraop": 1870, "edgeitem": 1871, "linewidth": 1871, "sci_mod": 1871, "shamelessli": 1871, "repr": [1871, 2013], "sane": 1871, "_tensor_str": 1871, "_formatt": 1871, "12345": 1871, "1235": 1871, "excess": [1873, 2099], "24j": 1874, "8000j": 1874, "9600j": 1874, "4472": [1874, 2051], "8944j": 1874, "expit": [1875, 2078], "2222": [1877, 1939], "4444": 1877, "8889": 1877, "4901e": 1878, "4000e": 1878, "0077e": 1878, "4923e": 1878, "waveform": [1879, 1880, 1881], "1564": 1879, "4540": 1879, "8910": 1879, "9877": 1879, "1423": [1879, 1902], "4154": 1879, "8413": [1879, 2078], "0302": 1880, "2231": 1880, "6065": 1880, "5400e": 1880, "3546e": 1880, "4788e": 1880, "8316e": 1880, "02": [1880, 1881, 1886], "3534e": 1880, "0065e": [1881, 1886], "1875e": [1881, 1886], "3937e": [1881, 1886], "2465e": [1881, 1886], "8250e": [1881, 1886], "9858e": [1881, 1886], "1365e": [1881, 1886], "8659e": [1881, 1886], "4658e": [1881, 1886], "3941e": [1881, 1886], "5400": 1882, "3376": 1882, "4200": 1882, "9136": 1882, "wit": [1882, 2010], "0955": [1882, 1883, 1885], "3455": [1882, 1883, 1885], "6545": [1882, 1883, 1885], "9045": [1882, 1883, 1885], "0800": [1883, 1884], "1876": [1883, 1884], "4601": [1883, 1884], "7700": [1883, 1884], "9723": [1883, 1884], "1679": 1884, "3979": 1884, "6821": 1884, "9121": 1884, "1170": 1885, "9698": 1885, "36358": 1887, "z_n": [1887, 2039], "48917": 1887, "2z_n": 1887, "13659": 1887, "3z_n": 1887, "01064": 1887, "4z_n": 1887, "u03c0": 1887, "sidelob": 1887, "transact": 1887, "acoust": 1887, "speech": 1887, "84": 1887, "91": 1887, "feb": 1887, "1981": 1887, "tassp": 1887, "1163506": 1887, "heinzel": 1887, "spectrum": [1887, 2054, 2111], "dft": 1887, "februari": 1887, "holomet": 1887, "fnal": 1887, "gov": 1887, "gh_fft": 1887, "nutal": 1887, "general_ham": 1887, "6280e": 1887, "2698e": 1887, "1052e": 1887, "9826e": 1887, "5461": [1889, 2051], "1347": 1889, "7266": 1889, "2746": 1889, "5194": 1889, "1343": 1889, "4032": 1889, "2711": 1889, "5380": 1891, "8632": 1891, "1265": 1891, "9399": 1891, "5644": 1891, "9744": 1891, "1268": 1891, "2162": 1896, "6719": 1896, "3332": 1896, "5793": [1896, 2051], "0061": 1896, "6058": 1896, "9497": 1896, "5071": 1896, "3343": 1896, "9553": 1896, "0960": 1896, "derivati": [1897, 1901], "to_sparse_coo": 1898, "sparsr": 1899, "run_my_model": 1899, "prev_checks_en": 1899, "is_en": [1899, 1906, 1907, 1908, 1909, 1910, 1911], "check_invari": [1899, 1906, 1907, 1908, 1909, 1910, 1911, 2077], "sparse_csr_tensor": [1899, 2011, 2062, 2077], "z_": [1901, 2039, 2078], "bigoplus_": 1901, "kj": 1901, "bigoplu": 1901, "sparseaddmmbackward0": 1901, "y1": [1901, 2059, 2093], "sparsemmreduceimplbackward0": 1901, "y2": [1901, 2059, 2093], "sparsiti": [1902, 2009, 2020, 2037], "spy": 1902, "2847": 1902, "7805": 1902, "1900": [1902, 2055], "to_dens": [1902, 1904, 2011, 2062, 2077], "3903": 1902, "x_k": 1903, "6438": 1905, "6467": 1905, "3411": 1905, "0918": 1905, "5348": 1905, "0634": 1905, "0494": 1905, "0646": 1905, "1844": 1905, "1276": 1905, "1874": 1905, "6334": 1905, "9682": 1905, "5340": 1905, "7483": 1905, "4512": 1905, "4073": 1905, "8901": 1905, "3183": 1905, "7539": 1905, "6596": 1905, "ncolblock": [1906, 2077], "array_list": [1906, 1907, 1908, 1910, 1911], "nrow": [1906, 1907, 1908, 1910, 1911, 2077], "ncol": [1906, 1907, 1908, 1910, 1911, 2077], "denses": [1906, 1907, 1908, 1910, 1911, 2077], "check_sparse_tensor_invari": [1906, 1907, 1908, 1909, 1910, 1911, 2077], "nrowblock": [1907, 2077], "compressed_indic": [1908, 2011, 2077], "plain_indic": [1908, 2011, 2077], "compressed_dim_s": [1908, 2077], "is_coalesc": [1909, 2011, 2062, 2077], "rdinat": 1909, "prerequisit": [1909, 2043], "coalescion": 1909, "sparsetensor": 1909, "_indic": [1909, 2062, 2077, 2099], "0755": [1913, 1914], "0226": [1913, 1914], "0831": [1913, 1914], "4806": [1913, 1914], "0112": 1913, "2883": 1913, "6933": 1913, "0457": 1914, "0069": 1914, "2310": 1914, "2345": [1917, 1949], "1229": 1917, "1863": 1917, "2959": [1918, 1919, 1968, 1969], "8101": [1918, 1919, 1968, 1969], "5027": [1918, 1919, 1968, 1969], "3270": [1918, 1919, 1968, 1969], "5905": [1918, 1919, 1968, 1969], "6538": [1918, 1919, 1968, 1969, 2051], "3330": [1918, 1919, 1968, 1969], "5596": [1918, 1919, 1968, 1969], "6548": [1918, 1919, 1968, 1969], "1264": [1918, 1919, 1968, 1969], "5080": [1918, 1919, 1924, 1968, 1969, 2051], "6420": [1918, 1919, 1968, 1969], "1992": [1918, 1919, 1968, 1969], "0311": [1918, 2078], "7477": 1918, "2204": 1918, "9087": 1918, "2620": 1919, "0028": [1919, 1945], "0957": 1919, "6038": 1919, "0645": [1919, 1969], "4485": [1919, 1969], "8707": [1919, 1969], "0665": [1919, 1969], "taper": 1920, "librosa": 1920, "omega": 1920, "win": [1920, 2039], "_fft": [1920, 2011], "1133": 1923, "2958": 1923, "5475": 1923, "0569": 1923, "0737": 1923, "3429": 1923, "9138": 1923, "9337": 1923, "6864": [1923, 1949], "1132": 1923, "7892": 1923, "1003": 1923, "5688": 1923, "3637": 1923, "9906": 1923, "5197": 1923, "4598": 1923, "3708": 1923, "6217": 1923, "435": 1923, "1335": 1923, "3135": 1923, "gesdd": 1924, "conquer": 1924, "gesvdjbatch": 1924, "fortran": 1924, "2364": 1924, "7752": 1924, "7201": 1924, "7394": 1924, "0504": 1924, "3371": 1924, "5296": 1924, "3550": 1924, "5569": 1924, "2445": 1924, "1414": 1924, "4027": 1924, "0287": 1924, "5434": 1924, "1946": 1924, "8833": 1924, "3679": 1924, "4296": 1924, "2890": 1924, "6604": 1924, "2717": 1924, "2618": 1924, "4234": 1924, "2481": 1924, "4733": 1924, "3289": [1924, 2056], "0315": 1924, "7806": 1924, "0199": 1924, "8766": 1924, "4809": 1924, "4054": 1924, "7600": 1924, "8611": 1924, "2594": 1924, "4373": 1924, "6531e": 1924, "a_big": 1924, "6503e": 1924, "swapax": [1927, 2011, 2062, 2081], "1995": 1934, "4608": 1934, "7702": 1934, "4875": 1934, "9158": 1934, "5872": 1934, "6929": 1934, "6932": 1934, "take_along_axi": [1936, 2045], "max_idx": 1936, "sorted_idx": 1936, "2027": 1937, "7687": 1937, "4412": 1937, "3856": 1937, "5930": 1937, "9859": 1937, "4722": 1937, "3366": 1937, "8986": 1938, "7279": 1938, "1745": [1938, 2044], "7156": 1938, "8257": 1938, "2553": 1938, "11111": 1939, "222222": 1939, "3333333": 1939, "1111": 1939, "array_split": 1940, "i_d": 1941, "k_": 1941, "4532": 1941, "4874": 1941, "5018": 1941, "4796": [1941, 2055], "5162": 1941, "5306": 1941, "2922": 1941, "7556": 1941, "2741": 1941, "3161": 1941, "0704": 1941, "0187": 1941, "4079": 1941, "3126": 1941, "8744": 1941, "8223": 1941, "9445": 1941, "4117": 1941, "7780": 1941, "7193": 1941, "4867": 1941, "3204": 1941, "5513": 1941, "4737": [1941, 1972], "2850": 1941, "2573": 1941, "5997": 1941, "sparsebsr": 1945, "sparsecsc": 1945, "sparsebsc": 1945, "9893": 1945, "5809": 1945, "1669": 1945, "7299": 1945, "4942": [1945, 2051], "y_0": 1946, "x_diff": 1946, "y_diff": 1946, "riemann": [1946, 2039, 2048, 2078], "badli": 1948, "cloned_coeffici": 1948, "1527": 1948, "0753": 1948, "7986": 1948, "0210": 1948, "3513": 1948, "5492": 1948, "7403": 1948, "0243": 1948, "7841": 1948, "9046": 1948, "5405": 1948, "9320": 1948, "9270": 1948, "2826": 1948, "lbrace": [1949, 1950, 1951, 1952], "rbrace": [1949, 1950, 1951, 1952], "0813": 1949, "8619": 1949, "7105": 1949, "0935": 1949, "1380": 1949, "3409": [1949, 2055], "2219": 1949, "5653": 1949, "2521": 1949, "2544": 1949, "3461": 1949, "4785": 1949, "4477": 1949, "6049": 1949, "6368": 1949, "8775": 1949, "7145": 1949, "1502": 1949, "2716": 1949, "1243": 1949, "5413": 1949, "3615": 1949, "0614": 1949, "7344": 1949, "3164": 1949, "7648": 1949, "4024": 1949, "0978": 1949, "col": [1950, 1952, 2011], "2309": 1951, "5207": 1951, "0049": 1951, "2072": 1951, "0680": 1951, "6602": 1951, "3480": 1951, "5211": 1951, "4573": 1951, "5876": 1951, "0794": [1951, 2078], "8373": 1951, "6654": 1951, "2604": 1951, "5235": 1951, "2447": 1951, "9556": 1951, "2919": 1951, "1768": 1951, "4333": 1951, "3146": [1951, 2051], "6576": 1951, "0432": 1951, "9348": [1951, 2078], "4410": 1951, "9888": 1951, "3337": 1951, "6556": 1951, "4798": 1951, "5466": 1954, "8008": 1954, "9079": 1954, "unique_consecut": [1957, 2011, 2062], "inverse_indic": [1957, 1958], "a_unique_dim0": 1957, "5678": [1959, 2072], "78": 1959, "alon": [1961, 2012, 2064], "put_": [1961, 2011], "index_add": [1961, 2011, 2062], "index_select": [1961, 2011, 2062, 2077, 2103], "fractionalmaxpool2d": 1961, "fractionalmaxpool3d": 1961, "reflectionpad1d": 1961, "reflectionpad3d": 1961, "replicationpad1d": 1961, "replicationpad3d": 1961, "histc": [1961, 2011, 2062], "bincount": [1961, 2011, 2062], "kthvalu": [1961, 2011, 2030, 2062], "avg_pool3d_backward_cuda": 1961, "for_tensor": 1962, "for_modul": 1962, "for_packed_sequ": 1962, "for_storag": 1962, "unsupported_dtyp": 1962, "privateuse1": [1962, 1964, 2066, 2071], "rename_privateuse1_backend": [1962, 2009], "is_foo": 1962, "frames_to_skip": 1963, "maximum_number_of_fram": 1963, "_register_device_modul": 1964, "backendmodul": 1964, "get_amp_supported_dtyp": 1964, "_is_in_bad_fork": 1964, "bad_fork": 1964, "get_rng_stat": [1964, 2009, 2071], "set_rng_stat": [1964, 2009, 2071], "extend_dispatch": 1964, "pytorch_open_registration_exampl": 1964, "nicer": 1965, "slot": [1966, 2092, 2109], "alexandr": 1967, "theophil": 1967, "0631": 1968, "5590": 1968, "4893": 1968, "8258": 1968, "5926": 1969, "0056": 1969, "3646": 1969, "vecdot": 1970, "mi": [1971, 1972], "6116": 1971, "5772": [1971, 2078], "4606": 1971, "9120": 1971, "0786": 1971, "7497": 1971, "6623": 1971, "5772j": 1971, "9120j": 1971, "7497j": 1971, "6623j": 1971, "3839j": 1972, "2098": 1972, "6699j": 1972, "3470": 1972, "9451j": 1972, "5174": 1972, "3136j": 1972, "6699": 1972, "9451": 1972, "3136": 1972, "vertic": [1974, 1975, 2063, 2065, 2082, 2099], "atleast_2d": [1975, 2011, 2062], "3139": 1976, "3898": 1976, "1657": 1976, "0383": 1976, "8785": 1976, "1089": 1976, "_xpudeviceproperti": 1989, "hubconf": 2008, "entrypoint_nam": 2008, "_resnet18": 2008, "smoother": [2008, 2020], "load_state_dict_from_url": [2008, 2024], "2gb": 2008, "relative_path_to_checkpoint": 2008, "pth": [2008, 2024, 2056], "dirnam": 2008, "__file__": [2008, 2057, 2064, 2101], "5c106cde": [2008, 2024], "force_reload": 2008, "skip_valid": 2008, "trust_repo": 2008, "repo_own": 2008, "repo_nam": 2008, "ref": [2008, 2077, 2095, 2108], "torchhub": 2008, "github_token": 2008, "mute": 2008, "repo_or_dir": 2008, "resnet50": [2008, 2082, 2101], "resnet50_weight": 2008, "imagenet1k_v1": 2008, "download_url_to_fil": 2008, "hash_prefix": 2008, "temporary_fil": 2008, "sha256": [2008, 2024], "s3": [2008, 2024, 2057], "amazonaw": [2008, 2024, 2057], "model_dir": [2008, 2024], "check_hash": [2008, 2024], "hub_dir": [2008, 2024], "get_dir": [2008, 2024], "ext": [2008, 2024], "eight": [2008, 2024], "hash": [2008, 2011, 2013, 2024, 2062], "succinct": 2008, "set_dir": 2008, "path_to_hub_dir": 2008, "torch_hom": 2008, "xdg_cache_hom": [2008, 2042], "reiniti": [2008, 2021], "path_importer_cach": 2008, "subpackag": [2008, 2064], "offend": [2008, 2100], "classifi": [2009, 2013, 2061, 2063, 2067, 2082], "pypi": 2009, "conda": [2009, 2057], "hip": 2009, "javadoc": 2009, "uninitializedbuff": 2009, "anomali": 2009, "can_device_access_p": 2009, "current_blas_handl": 2009, "device_of": 2009, "get_arch_list": 2009, "get_device_cap": 2009, "get_device_nam": 2009, "get_device_properti": 2009, "get_gencode_flag": 2009, "get_sync_debug_mod": 2009, "ipc_collect": 2009, "memory_usag": 2009, "set_stream": 2009, "set_sync_debug_mod": 2009, "power_draw": 2009, "clock_rat": 2009, "outofmemoryerror": 2009, "jiter": 2009, "sanit": 2009, "_record_memory_histori": [2009, 2110], "_snapshot": [2009, 2110], "_dump_snapshot": [2009, 2110], "empty_cach": [2009, 2042, 2049, 2110], "set_per_process_memory_fract": 2009, "current_allocated_memori": 2009, "driver_allocated_memori": 2009, "deferredmtiacallerror": 2009, "idiom": [2009, 2057], "nnpack": 2009, "openmp": [2009, 2041, 2057, 2085, 2097, 2099], "xeon": [2009, 2041, 2105], "pathwis": 2009, "exponentialfamili": 2009, "binomi": [2009, 2011, 2062], "chi2": 2009, "continuousbernoulli": 2009, "dirichlet": 2009, "fishersnedecor": 2009, "halfcauchi": 2009, "halfnorm": 2009, "inversegamma": 2009, "kumaraswami": 2009, "lkjcholeski": 2009, "laplac": 2009, "lognorm": 2009, "lowrankmultivariatenorm": 2009, "mixturesamefamili": 2009, "multinomi": [2009, 2011, 2062], "multivariatenorm": 2009, "negativebinomi": 2009, "onehotcategor": 2009, "relaxedbernoulli": 2009, "logitrelaxedbernoulli": 2009, "relaxedonehotcategor": 2009, "studentt": 2009, "transformeddistribut": 2009, "vonmis": 2009, "weibul": 2009, "wishart": 2009, "hub": [2009, 2024, 2101], "misc": 2009, "normal_": [2009, 2011, 2030, 2037, 2042, 2086], "constant_": [2009, 2037], "ones_": [2009, 2037], "zeros_": [2009, 2037], "eye_": [2009, 2015, 2037], "dirac_": [2009, 2015, 2037], "xavier_uniform_": [2009, 2037], "xavier_normal_": [2009, 2037, 2051], "kaiming_uniform_": [2009, 2037], "trunc_normal_": [2009, 2037], "orthogonal_": [2009, 2015, 2037, 2051], "sparse_": [2009, 2037], "swa": 2009, "ema": 2009, "powersgd": 2009, "remotemodul": 2009, "doublestorag": [2009, 2079], "floatstorag": [2009, 2079], "halfstorag": [2009, 2079], "longstorag": [2009, 2079], "intstorag": [2009, 2079], "shortstorag": [2009, 2079], "charstorag": [2009, 2079], "bytestorag": [2009, 2079], "boolstorag": [2009, 2079], "bfloat16storag": [2009, 2079], "complexdoublestorag": [2009, 2079], "complexfloatstorag": [2009, 2079], "quint8storag": [2009, 2079], "qint8storag": [2009, 2079], "qint32storag": [2009, 2079], "quint4x2storag": [2009, 2079], "quint2x4storag": [2009, 2079], "make_tensor": [2009, 2084], "assert_allclos": [2009, 2084], "generate_methods_for_privateuse1_backend": 2009, "get_cpp_backtrac": 2009, "set_modul": 2009, "sampler": 2009, "mobile_optim": 2009, "optimize_for_mobil": [2009, 2023], "model_zoo": 2009, "load_url": [2009, 2024], "tensorboard": [2009, 2026, 2066], "summarywrit": [2009, 2026, 2082], "module_track": 2009, "moduletrack": [2009, 2025], "iinfo": 2009, "__config__": [2009, 2041], "__future__": 2009, "set_log": [2009, 2019, 2108], "miscellan": [2009, 2111], "torchdata": 2009, "torchserv": 2009, "torchtext": 2009, "xla": [2009, 2017, 2056, 2080, 2095], "disadvantag": 2010, "gentl": 2010, "beam": 2010, "traced_bar": 2010, "myscriptmodul": 2010, "103": [2010, 2012], "939": [2010, 2012], "116": [2010, 2012], "779": [2010, 2012], "123": [2010, 2012], "my_script_modul": [2010, 2012], "ins": 2010, "pytorch_jit": 2010, "traced_fn": 2010, "disable_jit_exampl": 2010, "printer": 2010, "rv": 2010, "rv0": 2010, "rv1": 2010, "ssa": 2010, "block0": 2010, "block1": 2010, "loop_in_traced_fn": 2010, "input_tupl": 2010, "fill_row_zero": 2010, "tracerwarn": 2010, "nr": 2010, "09115803241729736": 2010, "6782537698745728": 2010, "cpu_model": 2010, "gpu_model": 2010, "sample_input_cpu": 2010, "sample_input_gpu": 2010, "traced_cpu": 2010, "traced_gpu": 2010, "use_gpu": 2010, "__constants__": [2010, 2012], "my_module_inst": 2010, "redeclar": 2010, "nn_module_inst": 2010, "my_scripted_model": 2010, "pep": [2010, 2012, 2061, 2097], "526": [2010, 2012, 2061], "script_method": 2010, "implicitly_compiled_method": 2010, "another_forward": 2010, "unused_method": 2010, "some_fn": 2010, "ever": [2010, 2079, 2110], "some_fn2": 2010, "some_fn3": 2010, "some_fn4": 2010, "my_dict": [2010, 2012], "my_int": [2010, 2012], "my_const": 2010, "make_dict": 2010, "nnc": 2010, "nvfuser": 2010, "__and__": 2011, "__iand__": 2011, "__ilshift__": 2011, "__ior__": 2011, "__irshift__": 2011, "__ixor__": 2011, "__lshift__": 2011, "__or__": 2011, "__rshift__": 2011, "__xor__": 2011, "absolute_": 2011, "acos_": [2011, 2030], "addbmm_": 2011, "addcdiv_": 2011, "addcmul_": 2011, "addmv_": [2011, 2030], "addr_": 2011, "align_a": [2011, 2030, 2031, 2062], "align_to": [2011, 2030, 2031, 2062], "ellipsis_idx": 2011, "aminmax": [2011, 2062], "arccos_": 2011, "arccosh_": 2011, "arcsin_": [2011, 2077], "arcsinh_": 2011, "arctan2_": 2011, "arctan_": 2011, "arctanh_": 2011, "argwher": [2011, 2062], "as_strided_": 2011, "as_strided_scatt": [2011, 2062, 2103], "asin_": [2011, 2030, 2077], "asinh_": [2011, 2030], "atan_": [2011, 2030], "atanh_": [2011, 2030], "baddbmm_": 2011, "bernoulli_": [2011, 2030, 2086], "bitwise_and_": 2011, "bitwise_left_shift_": 2011, "bitwise_not_": [2011, 2030], "bitwise_or_": 2011, "bitwise_right_shift_": 2011, "bitwise_xor_": 2011, "broadcast_to": [2011, 2062], "cauchy_": [2011, 2030, 2086], "ceil_": [2011, 2030], "clamp_max": [2011, 2062], "clamp_max_": 2011, "clamp_min": [2011, 2062], "clamp_min_": 2011, "clip_": 2011, "conj_physical_": 2011, "copysign_": 2011, "cos_": [2011, 2030, 2039], "cosh_": [2011, 2030], "count_nonzero": [2011, 2062], "cummax": [2011, 2062], "cummin": [2011, 2062], "cumprod_": 2011, "cumsum_": 2011, "deg2rad": [2011, 2030, 2062, 2077], "deg2rad_": [2011, 2030, 2077], "outdim": 2011, "diagonal_scatt": [2011, 2062], "digamma_": [2011, 2030], "div_": [2011, 2030, 2077], "divide_": 2011, "dsplit": [2011, 2062], "eq_": 2011, "erf_": [2011, 2030], "erfc_": [2011, 2030], "erfinv_": [2011, 2030], "exp2": [2011, 2062, 2078, 2082, 2103], "exp2_": 2011, "exp_": [2011, 2030], "expm1_": [2011, 2030], "exponential_": [2011, 2030, 2086], "fill_diagonal_": 2011, "fix_": 2011, "fliplr": [2011, 2062], "flipud": [2011, 2062], "float_power_": 2011, "floor_": [2011, 2030], "floor_divide_": [2011, 2077], "fmax": [2011, 2062, 2103], "fmin": [2011, 2062, 2103], "fmod_": 2011, "frac_": [2011, 2030], "frexp": [2011, 2062, 2103], "gcd_": 2011, "ge_": 2011, "ger": [2011, 2062], "get_devic": [2011, 2030, 2062, 2077, 2079, 2080], "greater_": 2011, "greater_equal_": 2011, "gt_": 2011, "hardshrink": [2011, 2062], "heavisid": [2011, 2062], "heaviside_": 2011, "hsplit": [2011, 2062, 2081], "hypot_": 2011, "i0_": 2011, "igamma_": 2011, "igammac_": 2011, "index_fil": [2011, 2030, 2062], "index_reduc": [2011, 2062], "is_complex": [2011, 2059, 2062, 2077, 2080], "is_contigu": [2011, 2030, 2062, 2081], "is_floating_point": [2011, 2030, 2062, 2077, 2080], "is_infer": [2011, 2062], "is_same_s": [2011, 2062, 2077], "is_set_to": [2011, 2062], "is_sign": [2011, 2030, 2062, 2077], "isclos": [2011, 2062], "isfinit": [2011, 2054, 2062, 2103], "isinf": [2011, 2062, 2077, 2103], "isneginf": [2011, 2062, 2077], "isposinf": [2011, 2062, 2077], "isreal": [2011, 2062], "istft": [2011, 2062], "kron": [2011, 2062], "lcm_": 2011, "ldexp_": 2011, "le_": 2011, "lerp_": 2011, "less_": 2011, "less_equal_": 2011, "lgamma_": 2011, "log10_": [2011, 2030], "log1p_": [2011, 2030, 2077], "log2_": [2011, 2030], "log_normal_": [2011, 2030, 2086], "logaddexp2": [2011, 2062], "logcumsumexp": [2011, 2062], "logical_and_": 2011, "logical_not_": [2011, 2030], "logical_or_": 2011, "logical_xor_": 2011, "logit_": 2011, "lt_": 2011, "masked_fil": [2011, 2030, 2032, 2062, 2077], "masked_scatt": [2011, 2062], "masked_select": [2011, 2030, 2062], "matrix_pow": [2011, 2062], "moveaxi": [2011, 2062], "msort": [2011, 2062], "multiply_": 2011, "mvlgamma_": 2011, "nan_to_num_": 2011, "nanmedian": [2011, 2030, 2062], "nansum": [2011, 2062], "narrow_copi": [2011, 2062, 2077], "ne_": 2011, "neg_": [2011, 2030, 2077], "negative_": [2011, 2077], "new_empty_strid": [2011, 2062], "new_ful": [2011, 2042, 2062], "new_on": [2011, 2062], "nextafter_": 2011, "nonzero_stat": [2011, 2062], "not_equal_": 2011, "polygamma_": 2011, "pow_": [2011, 2030], "q_per_channel_scal": [2011, 2062], "q_per_channel_zero_point": [2011, 2062], "q_scale": [2011, 2062], "q_zero_point": [2011, 2062], "rad2deg": [2011, 2030, 2062, 2077], "rad2deg_": [2011, 2030, 2077], "reciprocal_": [2011, 2030], "record_stream": [2011, 2042, 2062], "refine_nam": [2011, 2030, 2031, 2062], "relu_": [2011, 2069], "remainder_": 2011, "rename_": [2011, 2030, 2031], "renorm_": 2011, "reshape_a": [2011, 2032, 2062, 2081], "resize_a": [2011, 2062], "the_templ": 2011, "resize_as_": [2011, 2030, 2077], "resize_as_sparse_": 2011, "retains_grad": [2011, 2062], "roll": [2011, 2062], "rot90": [2011, 2062], "round_": [2011, 2030], "rsqrt_": [2011, 2030], "select_scatt": [2011, 2062, 2103], "sgn_": [2011, 2030], "sigmoid_": [2011, 2030, 2069], "sign_": [2011, 2030], "sinc_": 2011, "sinh_": [2011, 2030], "slice_invers": [2011, 2062], "slice_scatt": [2011, 2062, 2103], "smm": [2011, 2062, 2077], "sparse_resize_": 2011, "sparse_resize_and_clear_": 2011, "split_with_s": [2011, 2062, 2081, 2103], "sqrt_": [2011, 2030], "square_": 2011, "squeeze_": [2011, 2069], "sspaddmm": [2011, 2062, 2077], "sub_": [2011, 2030, 2077], "subtract_": 2011, "sum_to_s": [2011, 2062], "swapaxes_": 2011, "swapdim": [2011, 2062, 2081], "swapdims_": 2011, "take_along_dim": [2011, 2062], "tan_": [2011, 2030], "tanh_": [2011, 2030, 2069], "tensor_indices_or_sect": 2011, "to_mkldnn": [2011, 2062], "to_padded_tensor": [2011, 2032, 2062], "to_sparse_bsc": [2011, 2062], "to_sparse_bsr": [2011, 2062, 2077], "to_sparse_csc": [2011, 2062, 2077], "transpose_": [2011, 2077], "true_divide_": 2011, "trunc_": [2011, 2030], "type_a": [2011, 2030, 2062], "out0": [2011, 2056], "unsafe_chunk": [2011, 2062], "unsafe_split": [2011, 2062], "unsafe_split_with_s": [2011, 2062], "unsqueeze_": [2011, 2069], "view_a": [2011, 2062, 2081], "vsplit": [2011, 2062, 2081], "xlogy_": 2011, "adaptive_avg_pool2d": [2011, 2044, 2062, 2069], "adaptive_max_pool1d_with_indic": [2011, 2044], "adaptive_max_pool2d_with_indic": 2011, "adaptive_max_pool3d_with_indic": 2011, "alpha_dropout": [2011, 2062], "assert_int_or_pair": 2011, "arg_nam": 2011, "binary_cross_entropi": [2011, 2062], "binary_cross_entropy_with_logit": [2011, 2062], "celu": [2011, 2062], "dropout2d": 2011, "dropout3d": 2011, "feature_alpha_dropout": [2011, 2062], "fractional_max_pool2d_with_indic": 2011, "fractional_max_pool3d_with_indic": 2011, "gaussian_nll_loss": 2011, "glu": [2011, 2062], "gumbel_softmax": 2011, "hardsigmoid": [2011, 2062, 2069], "hardswish": [2011, 2062, 2069], "huber_loss": [2011, 2062], "instance_norm": [2011, 2062, 2069], "local_response_norm": 2011, "lp_pool1d": 2011, "lp_pool2d": 2011, "lp_pool3d": 2011, "max_pool1d_with_indic": [2011, 2062], "max_pool3d_with_indic": [2011, 2062, 2103], "mish": [2011, 2062], "multi_head_attention_forward": 2011, "embed_dim_to_check": 2011, "in_proj_weight": 2011, "in_proj_bia": 2011, "bias_k": 2011, "bias_v": 2011, "out_proj_weight": 2011, "out_proj_bia": 2011, "use_separate_proj_weight": 2011, "q_proj_weight": 2011, "k_proj_weight": 2011, "v_proj_weight": 2011, "static_k": 2011, "static_v": 2011, "multilabel_soft_margin_loss": 2011, "relu6": [2011, 2062, 2069], "silu": [2011, 2032, 2062], "softsign": 2011, "tanhshrink": 2011, "adaptive_avg_pool1d": [2011, 2044, 2062, 2069, 2103], "adaptive_max_pool1d": [2011, 2044, 2062], "affine_grid_gener": [2011, 2062], "alias_copi": [2011, 2062], "align_tensor": [2011, 2062], "alpha_dropout_": 2011, "as_strided_copi": [2011, 2062], "atleast_1d": [2011, 2062], "avg_pool1d": [2011, 2062, 2069, 2103], "bartlett_window": [2011, 2015, 2062], "cudnn_en": 2011, "batch_norm_backward_elemt": 2011, "invstd": 2011, "sum_di": 2011, "sum_dy_xmu": 2011, "batch_norm_backward_reduc": 2011, "input_g": 2011, "bias_g": 2011, "out3": 2011, "batch_norm_elemt": [2011, 2062], "batch_norm_gather_stat": [2011, 2062], "batch_norm_gather_stats_with_count": [2011, 2062], "batch_norm_stat": [2011, 2062], "batch_norm_update_stat": [2011, 2062], "blackman_window": [2011, 2015, 2062], "block_diag": [2011, 2062], "can_cast": [2011, 2062], "ccol_indices_copi": [2011, 2062], "celu_": 2011, "choose_qparams_optim": [2011, 2062], "n_bin": 2011, "bit_width": 2011, "col_indices_copi": [2011, 2062], "column_stack": [2011, 2062], "constant_pad_nd": [2011, 2062, 2103], "conv_tbc": [2011, 2062], "crow_indices_copi": [2011, 2062], "cudnn_affine_grid_gener": [2011, 2062], "cudnn_batch_norm": [2011, 2062], "exponential_average_factor": 2011, "cudnn_convolut": [2011, 2062], "cudnn_convolution_add_relu": [2011, 2062], "cudnn_convolution_relu": [2011, 2062], "cudnn_convolution_transpos": [2011, 2062], "cudnn_grid_sampl": [2011, 2062], "cudnn_is_accept": [2011, 2062], "cumulative_trapezoid": [2011, 2062], "detach_copi": [2011, 2062, 2107], "diagonal_copi": [2011, 2062], "dropout_": [2011, 2023], "embedding_renorm_": 2011, "physical_layout": [2011, 2103], "empty_quant": [2011, 2062], "anyenumtyp": 2011, "expand_copi": [2011, 2062], "fake_quantize_per_channel_affin": [2011, 2062], "fbgemm_linear_fp16_weight": [2011, 2062], "packed_weight": 2011, "fbgemm_linear_fp16_weight_fp32_activ": [2011, 2062], "fbgemm_linear_int8_weight": [2011, 2062], "col_offset": 2011, "weight_scal": 2011, "weight_zero_point": 2011, "fbgemm_linear_int8_weight_fp32_activ": [2011, 2062], "fbgemm_linear_quantize_weight": [2011, 2062], "fbgemm_pack_gemm_matrix_fp16": [2011, 2062], "fbgemm_pack_quantized_matrix": [2011, 2062], "feature_alpha_dropout_": 2011, "feature_dropout": [2011, 2062], "feature_dropout_": 2011, "frobenius_norm": [2011, 2062], "from_fil": [2011, 2062, 2079], "fused_moving_avg_obs_fake_qu": [2011, 2062], "observer_on": 2011, "fake_quant_on": 2011, "running_min": 2011, "running_max": 2011, "per_row_fake_qu": 2011, "symmetric_qu": 2011, "interpolation_mod": [2011, 2103], "has_bias": 2011, "gru_cel": [2011, 2062], "w_ih": 2011, "w_hh": 2011, "hamming_window": [2011, 2015, 2062], "histogramdd": [2011, 2062], "hspmm": [2011, 2062, 2077], "indices_copi": [2011, 2062], "is_autocast_cpu_en": [2011, 2062], "is_autocast_en": [2011, 2062], "is_grad_en": [2011, 2062], "is_vulkan_avail": [2011, 2062], "isin": [2011, 2062], "kaiser_window": [2011, 2062], "lstm_cell": [2011, 2062], "meshgrid": [2011, 2062], "miopen_batch_norm": [2011, 2062], "miopen_convolut": [2011, 2062], "miopen_convolution_add_relu": [2011, 2062], "miopen_convolution_relu": [2011, 2062], "miopen_convolution_transpos": [2011, 2062], "miopen_depthwise_convolut": [2011, 2062], "miopen_rnn": [2011, 2062], "weight_stride0": 2011, "dropout_st": 2011, "out4": 2011, "mkldnn_adaptive_avg_pool2d": [2011, 2062], "mkldnn_convolut": [2011, 2062], "mkldnn_linear_backward_weight": 2011, "bias_defin": 2011, "mkldnn_max_pool2d": [2011, 2062], "mkldnn_max_pool3d": [2011, 2062], "mkldnn_rnn_layer": [2011, 2062], "weight0": 2011, "weight1": 2011, "weight2": 2011, "weight3": 2011, "hx_": 2011, "cx_": 2011, "native_batch_norm": [2011, 2062], "save_mean": 2011, "save_invstd": 2011, "native_channel_shuffl": [2011, 2062], "native_dropout": [2011, 2062, 2103], "native_group_norm": [2011, 2062, 2103], "hxw": [2011, 2103], "native_layer_norm": [2011, 2062, 2103], "native_norm": [2011, 2062, 2077], "norm_except_dim": [2011, 2062], "nuclear_norm": [2011, 2062], "pairwise_dist": [2011, 2062], "permute_copi": [2011, 2062], "promote_typ": [2011, 2062, 2084], "quantize_per_channel": [2011, 2062, 2067], "quantize_per_tensor_dynam": [2011, 2062, 2067], "quantized_batch_norm": [2011, 2062], "quantized_gru_cel": [2011, 2062], "packed_ih": 2011, "packed_hh": 2011, "col_offsets_ih": 2011, "col_offsets_hh": 2011, "scale_ih": 2011, "scale_hh": 2011, "zero_point_ih": 2011, "zero_point_hh": 2011, "quantized_lstm_cel": [2011, 2062], "quantized_max_pool1d": [2011, 2062], "quantized_max_pool2d": [2011, 2062], "quantized_max_pool3d": [2011, 2062], "quantized_rnn_relu_cel": [2011, 2062], "quantized_rnn_tanh_cel": [2011, 2062], "rand_lik": [2011, 2015, 2042, 2062, 2086, 2093], "randint_lik": [2011, 2015, 2062, 2086], "randn_lik": [2011, 2015, 2032, 2062, 2086], "randperm": [2011, 2015, 2062, 2086, 2103], "result_typ": [2011, 2062], "scalar1": 2011, "scalar2": 2011, "rnn_relu": [2011, 2062], "rnn_relu_cel": [2011, 2062], "rnn_tanh": [2011, 2062], "rnn_tanh_cel": [2011, 2062], "row_indices_copi": [2011, 2062], "row_stack": [2011, 2062], "rrelu_": 2011, "rsub": [2011, 2062], "scalar_tensor": [2011, 2062, 2103], "searchsort": [2011, 2062], "segment_reduc": [2011, 2062], "selu_": 2011, "slice_copi": [2011, 2062], "sparse_bsc_tensor": [2011, 2062, 2077], "sparse_bsr_tensor": [2011, 2062, 2077], "sparse_compressed_tensor": [2011, 2062, 2077], "sparse_csc_tensor": [2011, 2062, 2077], "split_copi": [2011, 2062], "split_with_sizes_copi": [2011, 2062], "squeeze_copi": [2011, 2062], "std_mean": [2011, 2030, 2062], "sym_constrain_range_for_s": [2011, 2062], "t_copi": [2011, 2062], "threshold_": 2011, "transpose_copi": [2011, 2062], "trapz": [2011, 2062], "tril_indic": [2011, 2015, 2062], "triu_indic": [2011, 2015, 2062], "unbind_copi": [2011, 2062], "unfold_copi": [2011, 2062], "unsqueeze_copi": [2011, 2062], "values_copi": [2011, 2062], "vander": [2011, 2015, 2062], "var_mean": [2011, 2030, 2062], "view_as_complex_copi": [2011, 2062], "view_as_real_copi": [2011, 2062], "_nn": 2011, "adaptive_max_pool2d": [2011, 2062], "avg_pool2d": [2011, 2062, 2069, 2103], "conv_depthwise3d": [2011, 2062], "cross_entropy_loss": [2011, 2062], "input_scal": 2011, "elu_": 2011, "flatten_dense_tensor": [2011, 2062], "random_sampl": 2011, "gelu_": 2011, "hardsigmoid_": [2011, 2069], "hardswish_": 2011, "hardtanh_": [2011, 2069], "leaky_relu_": 2011, "log_sigmoid": [2011, 2062], "mish_": 2011, "mkldnn_linear": [2011, 2062], "mkldnn_reorder_conv2d_weight": [2011, 2062], "mkldnn_reorder_conv3d_weight": [2011, 2062], "nll_loss2d": [2011, 2062], "nll_loss_nd": [2011, 2062], "reflection_pad3d": [2011, 2062, 2103], "relu6_": 2011, "rrelu_with_nois": [2011, 2062], "rrelu_with_noise_": 2011, "silu_": 2011, "slow_conv3d": [2011, 2062], "slow_conv_dilated2d": [2011, 2062], "slow_conv_dilated3d": [2011, 2062], "slow_conv_transpose2d": [2011, 2062], "slow_conv_transpose3d": [2011, 2062], "softshrink": [2011, 2062], "thnn_conv2d": [2011, 2062], "unflatten_dense_tensor": [2011, 2062], "upsample_bicubic2d": [2011, 2062], "scales_h": 2011, "scales_w": 2011, "upsample_bilinear2d": [2011, 2062, 2103], "upsample_linear1d": [2011, 2062], "upsample_nearest1d": [2011, 2062], "upsample_nearest2d": [2011, 2062, 2103], "upsample_nearest3d": [2011, 2062], "scales_d": 2011, "upsample_trilinear3d": [2011, 2062], "fft_fftfreq": [2011, 2062], "fft_fftshift": [2011, 2062], "fft_hfft2": [2011, 2062], "fft_hfftn": [2011, 2062], "fft_ifftshift": [2011, 2062], "fft_ihfft2": [2011, 2062], "fft_ihfftn": [2011, 2062], "fft_rfftfreq": [2011, 2062], "_linalg": 2011, "linalg_cross": [2011, 2062], "linalg_det": [2011, 2062], "linalg_diagon": [2011, 2062], "eigvec": 2011, "linalg_ldl_factor": [2011, 2062], "linalg_ldl_factor_ex": [2011, 2062], "linalg_ldl_solv": [2011, 2062], "linalg_lu": [2011, 2062], "linalg_lu_factor": [2011, 2062], "linalg_lu_factor_ex": [2011, 2062], "linalg_lu_solv": [2011, 2062], "linalg_matmul": [2011, 2062], "linalg_matrix_exp": [2011, 2062], "linalg_matrix_pow": [2011, 2062], "linalg_multi_dot": [2011, 2062], "linalg_norm": [2011, 2062], "linalg_pinv": [2011, 2062], "linalg_solve_ex": [2011, 2062], "linalg_solve_triangular": [2011, 2062], "linalg_vand": [2011, 2062], "linalg_vecdot": [2011, 2062], "linalg_vector_norm": [2011, 2062], "_nest": 2011, "nested_to_padded_tensor": [2011, 2062], "_spars": 2011, "sparse_sampled_addmm": [2011, 2062], "_special": 2011, "special_airy_ai": [2011, 2062], "special_bessel_j0": [2011, 2062], "special_bessel_j1": [2011, 2062], "special_bessel_y0": [2011, 2062], "special_bessel_y1": [2011, 2062], "special_chebyshev_polynomial_t": [2011, 2062], "special_chebyshev_polynomial_u": [2011, 2062], "special_chebyshev_polynomial_v": [2011, 2062], "special_chebyshev_polynomial_w": [2011, 2062], "special_digamma": [2011, 2062], "special_entr": [2011, 2062], "special_erf": [2011, 2062], "special_erfc": [2011, 2062], "special_erfcx": [2011, 2062], "special_erfinv": [2011, 2062], "special_exp2": [2011, 2062], "special_expit": [2011, 2062], "special_expm1": [2011, 2062], "special_gammainc": [2011, 2062], "special_gammaincc": [2011, 2062], "special_gammaln": [2011, 2062], "special_hermite_polynomial_h": [2011, 2062], "special_i0": [2011, 2062], "special_i1": [2011, 2062], "special_laguerre_polynomial_l": [2011, 2062], "special_legendre_polynomial_p": [2011, 2062], "special_log1p": [2011, 2062], "special_log_ndtr": [2011, 2062], "special_log_softmax": [2011, 2062], "special_logit": [2011, 2062], "special_logsumexp": [2011, 2062], "special_modified_bessel_i0": [2011, 2062], "special_modified_bessel_i1": [2011, 2062], "special_modified_bessel_k0": [2011, 2062], "special_modified_bessel_k1": [2011, 2062], "special_multigammaln": [2011, 2062], "special_ndtr": [2011, 2062], "special_ndtri": [2011, 2062], "special_polygamma": [2011, 2062], "special_psi": [2011, 2062], "special_round": [2011, 2062], "special_scaled_modified_bessel_k0": [2011, 2062], "special_scaled_modified_bessel_k1": [2011, 2062], "special_shifted_chebyshev_polynomial_t": [2011, 2062], "special_shifted_chebyshev_polynomial_u": [2011, 2062], "special_shifted_chebyshev_polynomial_v": [2011, 2062], "special_shifted_chebyshev_polynomial_w": [2011, 2062], "special_sinc": [2011, 2062], "special_softmax": [2011, 2062], "special_spherical_bessel_j0": [2011, 2062], "special_xlog1pi": [2011, 2062], "special_xlogi": [2011, 2062], "special_zeta": [2011, 2062], "tval": 2011, "is_accept": 2011, "rect": 2011, "magic": [2011, 2014, 2086, 2098], "__complex__": 2011, "__float__": 2011, "__int__": 2011, "hex": [2011, 2013, 2062], "__hex__": 2011, "oct": [2011, 2062], "__oct__": 2011, "divmod": [2011, 2013, 2062], "chr": [2011, 2013, 2062], "int_float": 2011, "float_int": 2011, "fab": [2011, 2062], "int_int": 2011, "float_float": 2011, "complex_complex": 2011, "int_complex": 2011, "complex_int": 2011, "float_complex": 2011, "complex_float": [2011, 2079], "scalar_scalar": 2011, "int_to_int": 2011, "modf": [2011, 2062], "mathremaind": [2011, 2062], "programm": [2012, 2013, 2067], "tn": 2012, "subtyp": 2012, "an_error": 2012, "noreturn": [2012, 2013], "classvar": [2012, 2013], "anystr": [2012, 2013], "nomin": 2012, "newtyp": [2012, 2013], "tup": [2012, 2013], "emptydatastructur": 2012, "my_list": 2012, "aug_add_x": 2012, "inc": [2012, 2013], "assign_x": [2012, 2013], "polymorph": 2012, "sum_pair": 2012, "red": [2012, 2013], "green": [2012, 2013, 2100], "enum_fn": [2012, 2013], "my_variable_nam": 2012, "top_level_method": 2012, "other_help": 2012, "ten": [2012, 2082], "my_submodul": 2012, "tuple_or_list": 2012, "a_tupl": 2012, "is_script": [2012, 2013, 2062], "unsupported_linear_op": 2012, "is_trac": [2012, 2013], "univers": 2012, "typing_extens": 2012, "a_dict": 2012, "some_dict": 2012, "delimit": [2013, 2014], "tstype": 2013, "tsmoduletyp": 2013, "tsalltyp": 2013, "tsmetatyp": 2013, "tsprimitivetyp": 2013, "tsstructuraltyp": 2013, "tsnominaltyp": 2013, "myclass": [2013, 2064], "printabl": [2013, 2064], "sortabl": 2013, "nevertheless": [2013, 2074], "inc_first_el": 2013, "cpufloattyp": 2013, "tstupl": 2013, "tsnamedtupl": 2013, "tslist": 2013, "tsdict": 2013, "tsoption": 2013, "tsunion": 2013, "tsfutur": 2013, "tsrref": 2013, "tsawait": 2013, "await": [2013, 2014, 2072], "keytyp": 2013, "tensortyp": [2013, 2107], "_await": 2013, "mytupl": 2013, "scripted_inc": 2013, "_annotatednamedtupl": 2013, "_namedtupleannot": 2013, "_unannotatednamedtupl": 2013, "mistak": [2013, 2046, 2098], "nameerror": 2013, "remedi": 2013, "tsbuiltinclass": 2013, "tscustomclass": 2013, "tsenum": 2013, "tstensor": 2013, "subtensor": [2013, 2044, 2109], "subwithtorchfunct": 2013, "script_g": 2013, "tsclassdef": 2013, "methoddefinit": 2013, "__torch__": [2013, 2061], "class2": 2013, "tsenumdef": 2013, "tsenumtyp": 2013, "memberidentifi": 2013, "intenum": 2013, "intflag": 2013, "basecolor": 2013, "compli": [2013, 2064], "classbodydefinit": 2013, "moduleobj": 2013, "testmodul": 2013, "dosometh": 2013, "strateg": 2013, "congruent": 2013, "python3": 2013, "unannot": 2013, "python3annot": 2013, "paramannot": 2013, "returnannot": 2013, "funcormethodbodi": 2013, "mypyannot": 2013, "localvarannot": 2013, "setval": 2013, "moduletyp": [2013, 2064], "classidentifi": 2013, "instanceattridentifi": 2013, "offset_": 2013, "tsstructualtyp": 2013, "grammar": 2013, "chapter": [2013, 2048], "floattyp": 2013, "inttyp": 2013, "stringtyp": 2013, "devicetyp": 2013, "bullet": 2013, "tupletyp": 2013, "listtyp": 2013, "enclosur": 2013, "parenth_form": 2013, "list_displai": 2013, "dict_displai": 2013, "legal": 2013, "stringliter": 2013, "floatnumb": 2013, "expression_list": 2013, "list_comprehens": 2013, "comp_for": 2013, "target_list": 2013, "or_expr": 2013, "key_datum_list": 2013, "dict_comprehens": 2013, "key_datum": 2013, "ongo": [2013, 2061, 2070, 2072], "enclos": 2013, "datum": [2013, 2088], "attributeref": 2013, "slice_list": 2013, "slice_item": 2013, "proper_slic": 2013, "argument_list": 2013, "desugar": [2013, 2098], "u_expr": 2013, "tightli": [2013, 2051], "m_expr": 2013, "a_expr": 2013, "shift_expr": 2013, "and_expr": 2013, "xor_expr": 2013, "comp_oper": 2013, "__contains__": 2013, "or_test": 2013, "and_test": 2013, "not_test": 2013, "conditional_express": 2013, "starred_item": 2013, "expression_stmt": 2013, "starred_express": 2013, "assignment_express": 2013, "assignment_stmt": 2013, "augmented_assignment_stmt": 2013, "augtarget": 2013, "augop": 2013, "annotated_assignment_stmt": 2013, "raise_stmt": 2013, "assert_stmt": 2013, "return_stmt": 2013, "del_stmt": 2013, "pass_stmt": 2013, "print_stmt": 2013, "break_stmt": 2013, "continue_stmt": 2013, "if_stmt": 2013, "while_stmt": 2013, "for_stmt": 2013, "with_stmt": 2013, "with_item": 2013, "tuple_stmt": 2013, "getattr_stmt": 2013, "hasattr_stmt": 2013, "zip_stmt": 2013, "iterable1": 2013, "iterable2": 2013, "enumerate_stmt": 2013, "five": [2013, 2056], "add_stat_valu": 2013, "sugaredvalu": 2013, "honor": 2013, "__abs__": 2013, "bytearrai": 2013, "delattr": 2013, "exec": 2013, "__index__": 2013, "isint": 2013, "issubclass": [2013, 2044], "ndigit": 2013, "__import__": [2013, 2064], "notimpl": [2013, 2014, 2044, 2098], "rpc_sync": [2013, 2062, 2072, 2073, 2074], "synonym": 2013, "_fork": [2013, 2041], "_wait": [2013, 2041], "lexic": 2014, "indent": 2014, "coroutin": [2014, 2096], "__del__": [2014, 2039], "__bytes__": 2014, "__slots__": 2014, "metaclass": 2014, "mro": 2014, "__r": 2014, "__": [2014, 2107], "bytesliter": 2014, "imagnumb": 2014, "parenthes": 2014, "ifs": 2014, "customiz": [2014, 2087, 2097, 2111], "compound": 2014, "adaptivelogsoftmaxwithloss": 2015, "gdoc": 2017, "opcheck": 2017, "torch_librari": [2017, 2090], "test_util": 2017, "test_schema": 2017, "test_autograd_registr": 2017, "test_faketensor": 2017, "test_aot_dispatch_dynam": 2017, "opoverloadpacket": 2017, "customopdef": 2017, "custom_op": [2017, 2061, 2098], "mylib": 2017, "numpy_mul": 2017, "mutates_arg": 2017, "numpy_add": 2017, "x_np": 2017, "z_np": 2017, "numpy_sin": 2017, "register_fak": 2017, "register_autograd": 2017, "sample_input": [2017, 2051], "718": 2017, "my_linear": [2017, 2025], "collis": 2017, "prone": [2017, 2029, 2053, 2098], "y_np": 2017, "numpy_sin_cpu": 2017, "numpy_sin_inplac": 2017, "register_kernel": 2017, "x_cpu": [2017, 2042], "x_cuda": 2017, "backward_fn": 2017, "functionctx": 2017, "keyword_only_input": 2017, "setup_context_fn": 2017, "googl": 2017, "1w": 2017, "t6wz8iy8foi0vm8bf44pdbgs283qvpeljzwieqwq": 2017, "custom_linear": 2017, "_subclass": [2017, 2021, 2059, 2095, 2098], "fake_tensor": [2017, 2059, 2095, 2098], "faketensormod": [2017, 2059, 2095, 2098], "custom_nonzero": 2017, "get_ctx": 2017, "new_dynamic_s": 2017, "tracing_mod": 2017, "impl_abstract": [2017, 2098], "qualnam": 2017, "abstractimplctx": 2017, "2020": 2017, "colab": [2017, 2064, 2098], "dispatch_kei": [2017, 2097], "keynam": 2017, "alias_analysi": 2017, "conserv": [2017, 2020, 2042, 2098], "with_keyset": 2017, "fallthrough_kernel": 2017, "fallthrough": 2017, "div_cpu": 2017, "impl_": 2017, "operator_nam": 2017, "mysin": 2017, "off_by_default": 2019, "_registr": 2019, "spammi": [2019, 2097, 2108], "compiled_autograd": 2019, "born": 2020, "citizen": 2020, "afterthought": 2020, "intuit": [2020, 2101], "alik": 2020, "grai": 2020, "systemat": 2020, "onboard": 2020, "maskedarrai": 2020, "masked_tensor": 2020, "faithfulli": [2021, 2095], "principl": [2021, 2042, 2099], "meta_util": 2021, "undocu": 2021, "fidel": 2021, "torch_force_weights_only_load": 2022, "torch_autograd_shutdown_wait_limit": 2022, "mobil": [2023, 2067, 2099], "blocklist": [2023, 2064], "mobileoptimizertyp": 2023, "conv_bn_fus": 2023, "correspondingli": 2023, "prepack": [2023, 2062], "insert_fold_prepack_op": 2023, "arm": [2023, 2067], "remove_dropout": 2023, "hoist": 2023, "hoist_conv_packed_param": 2023, "fuse_add_relu": 2023, "vulkan": 2023, "vulkan_automatic_gpu_transf": 2023, "freeze_modul": 2023, "script_modul": 2023, "optimization_blocklist": 2023, "preserved_method": 2023, "_mobileoptimizertyp": 2023, "recursivescriptmodul": [2023, 2056], "download": [2024, 2057, 2082, 2101], "friendli": 2025, "flopcountermod": 2025, "is_bw": 2025, "infrequ": 2026, "window_s": 2026, "max_sampl": 2026, "cap": 2026, "hasn": [2026, 2064], "_monitor": 2026, "data_value_t": 2026, "eventhandlerhandl": 2026, "register_event_handl": 2026, "unregister_event_handl": 2026, "tensorboardeventhandl": 2026, "shader": [2027, 2052], "processor": [2027, 2099], "metalperformanceshad": 2027, "shared_memori": 2029, "abruptli": 2029, "get_all_sharing_strategi": 2029, "get_sharing_strategi": 2029, "set_sharing_strategi": 2029, "new_strategi": 2029, "di": [2029, 2093, 2096, 2097], "abnorm": [2029, 2053], "forev": [2029, 2043], "asap": 2029, "queue_2": 2029, "x_clone": 2029, "segfault": [2029, 2054, 2098], "shm_open": [2029, 2079], "seriou": [2029, 2042, 2098], "torch_shm_manag": 2029, "unnot": 2029, "spawncontext": 2029, "has_nam": 2030, "is_shar": [2030, 2079], "is_sparse_csr": [2030, 2062, 2079], "is_tensor": [2030, 2077], "items": [2030, 2062], "unifies_names_from_input_tensor": 2030, "nbyte": [2030, 2062, 2079], "ndimens": 2030, "register_post_accumulate_grad_hook": [2030, 2039], "position": [2030, 2031], "unnam": [2030, 2031], "misalign": 2030, "inher": 2030, "collaps": [2030, 2062, 2103], "disappear": 2030, "img": [2031, 2082], "renamed_img": 2031, "coexist": 2031, "wildcard": [2031, 2064, 2107], "somewher": [2031, 2050], "scale_channel": 2031, "more_img": 2031, "named_tensor": 2031, "named_img": 2031, "flat_img": 2031, "named_flat_img": 2031, "unflattened_named_img": 2031, "grad_loss": 2031, "8107": 2031, "6357": 2031, "0783": 2031, "rename_map": 2031, "greedili": 2031, "unment": 2031, "49152": 2031, "datastructur": 2032, "seamless": 2032, "nested_tensor": 2032, "nt": 2032, "vein": 2032, "as_nested_tensor": 2032, "irregular": 2032, "indistinguish": 2032, "2286": 2032, "4842": 2032, "7827": 2032, "6745": [2032, 2078], "0658": 2032, "1247": 2032, "4078": 2032, "8083": 2032, "2871": 2032, "5559": 2032, "9885": 2032, "4074": 2032, "4855": 2032, "0733": 2032, "8285": 2032, "6858": 2032, "7030": 2032, "3481": 2032, "0236": 2032, "jag": [2032, 2095], "fake_grad": 2032, "nt2": 2032, "6862": 2032, "1282": 2032, "1031": 2032, "0464": 2032, "3276": 2032, "9967": 2032, "0054": 2032, "8972": 2032, "9174": 2032, "4995": 2032, "8546": 2032, "7194": 2032, "2918": 2032, "1846": 2032, "8793": 2032, "5183": 2032, "6447": 2032, "8009": 2032, "8468": 2032, "9832": 2032, "5272": 2032, "pt_infer": 2032, "pt_larg": 2032, "pt_small": 2032, "bitwidth": [2033, 2051, 2067, 2077], "asymmetr": [2033, 2067, 2070], "alter": [2034, 2038, 2044, 2104], "attention_bias": 2036, "sacrific": [2037, 2042], "dirac": 2037, "xavier": 2037, "glorot": 2037, "bengio": 2037, "fan": 2037, "_in": 2037, "_out": [2037, 2048, 2103], "fan_in": 2037, "kaim": 2037, "delv": 2037, "surpass": 2037, "he": 2037, "_mode": 2037, "fan_out": 2037, "redrawn": 2037, "sax": 2037, "2013": 2037, "marten": 2037, "scaler": [2038, 2042], "clip_grad_value_": 2038, "unscale_": 2038, "optimizer2": 2038, "batch_per_it": 2038, "iters_to_accumul": 2038, "num_proc": 2038, "grad_param": 2038, "grad_norm": 2038, "scaled_grad_param": 2038, "inv_scal": 2038, "get_scal": 2038, "proce": [2038, 2042, 2072, 2108], "optimizer0": 2038, "output0": 2038, "model0": 2038, "model1": 2038, "loss0": 2038, "loss1": 2038, "hundr": [2038, 2050, 2108], "imped": 2038, "poor": [2038, 2039], "dp_model": 2038, "imported_funct": 2038, "mymm": 2038, "myfloat32func": 2038, "fwd_output": 2038, "cleaner": 2039, "mapsto": 2039, "educ": 2039, "_save": 2039, "_saved_self": 2039, "convex": 2039, "concav": 2039, "togglabl": 2039, "drawback": 2039, "0011": 2039, "dirti": [2039, 2096], "hogwild": 2039, "train_fn": 2039, "graphtask": 2039, "copyslic": 2039, "mutex": 2039, "gotten": 2039, "curiou": 2039, "\u2102": 2039, "yj": 2039, "holomorph": 2039, "fulfil": [2039, 2045, 2064, 2095], "homomorph": 2039, "mathematician": 2039, "studi": [2039, 2066], "beauti": 2039, "somewhat": [2039, 2042, 2077], "0906": 2039, "4835": 2039, "audio": [2039, 2082, 2096], "\u211d": 2039, "_output": 2039, "vj": 2039, "handi": [2039, 2042], "selfdeletingtempfil": 2039, "tmp_dir": 2039, "uuid": 2039, "uuid4": 2039, "temp_fil": 2039, "forbidden": 2039, "savedtensor": 2039, "_raw_saved_": 2039, "_raw_saved_self": 2039, "save_on_disk_threshold": 2039, "tensor_or_sctf": 2039, "_saved_oth": 2039, "4th": 2040, "backcompat": 2040, "broadcast_warn": 2040, "userwarn": 2040, "compute_z": 2041, "w_z": 2041, "w_y": 2041, "tbb": 2041, "aten_thread": 2041, "omp": 2041, "mkl_thread": 2041, "mkldnn_cpu_runtim": 2041, "use_mkldnn": 2041, "use_tbb": 2041, "use_openmp": 2041, "ON": [2041, 2049, 2050], "set_num_interop_thread": 2041, "get_num_interop_thread": 2041, "set_num_thread": [2041, 2053], "get_num_thread": 2041, "omp_num_thread": [2041, 2085], "mkl_num_thread": [2041, 2085], "e5": 2041, "oversubscript": 2041, "memory manag": 2042, "optimize pytorch": 2042, "irrespect": 2042, "spread": 2042, "cuda2": [2042, 2049], "broadli": [2042, 2067], "set_float_32_matmul_precis": 2042, "a100": [2042, 2105, 2108], "a_ful": 2042, "10240": 2042, "b_full": 2042, "ab_ful": 2042, "7277": 2042, "ab_tf32": 2042, "016": 2042, "ga100": 2042, "1747": 2042, "relative_error": 2042, "0022": 2042, "ab_fp32": 2042, "0031": 2042, "000039": 2042, "7x": 2042, "globalcontext": 2042, "setallowtf32cubla": 2042, "setallowtf32cudnn": 2042, "bench_gemm_transform": 2042, "allow_fp16_reduc": 2042, "4048": 2042, "1634": 2042, "1639": 2042, "4056": 2042, "1670": 2042, "1661": 2042, "4080": 2042, "1664": 2042, "1658": 2042, "1651": 2042, "4104": 2042, "1677": 2042, "1674": 2042, "4128": 2042, "1796": [2042, 2051], "2519": 2042, "5096": 2042, "2144": 2042, "2149": 2042, "2766": 2042, "5120": 2042, "2142": 2042, "9728": 2042, "3875": 2042, "5779": 2042, "16384": [2042, 2101], "6182": 2042, "9656": 2042, "setallowfp16reductioncubla": 2042, "instabl": 2042, "setallowbf16reductioncubla": 2042, "invis": [2042, 2096, 2099, 2108], "start_ev": 2042, "elapsed_time_m": 2042, "pointless": 2042, "exploit": 2042, "paragraph": [2042, 2048], "initial_grad": 2042, "memory_alloc": [2042, 2049], "memory_snapshot": [2042, 2049], "memcheck": 2042, "option2": 2042, "value2": 2042, "max_split_size_mb": 2042, "borderlin": 2042, "memory_summari": 2042, "roundup_power2_divis": 2042, "1280": 2042, "1536": 2042, "1792": 2042, "256mb": 2042, "512mb": 2042, "1gb": [2042, 2106], "knob": [2042, 2095], "garbage_collection_threshold": 2042, "reclaim": [2042, 2093], "release_cached_block": 2042, "unfavor": 2042, "expandable_seg": 2042, "2mb": 2042, "sliver": 2042, "pinned_use_cuda_host_regist": 2042, "cudahostregist": 2042, "cudahostalloc": 2042, "malloc": [2042, 2110], "pinned_num_register_thread": 2042, "cuda_runtime_api": 2042, "iostream": [2042, 2090], "fpic": 2042, "my_malloc": 2042, "ssize_t": 2042, "ptr": 2042, "cout": [2042, 2090], "endl": [2042, 2050, 2090], "my_fre": 2042, "cudapluggablealloc": 2042, "new_alloc": 2042, "change_current_alloc": 2042, "_cuda_clearcublasworkspac": 2042, "lru": 2042, "geometri": 2042, "1023": 2042, "zeta": [2042, 2062, 2078, 2103], "use_pytorch_kernel_cach": 2042, "pytorch_kernel_cache_path": 2042, "store_tru": 2042, "disable_cuda": 2042, "assess": 2042, "cudagetdevicecount": 2042, "cuinit": 2042, "nvmldevicegetcount_v2": 2042, "poison": 2042, "aforement": [2042, 2053], "train_load": [2042, 2053], "x_gpu": 2042, "x_cpu_long": 2042, "y_cpu": 2042, "y_gpu": 2042, "y_cpu_long": 2042, "new_tensor": 2042, "overus": 2042, "cudagraphlaunch": 2042, "elid": 2042, "versatil": 2042, "static_input": 2042, "static_output": 2042, "sophist": [2042, 2063], "register_generator_st": 2042, "virtual": [2042, 2079], "d_in": 2042, "d_out": 2042, "640": 2042, "static_target": 2042, "static_y_pr": 2042, "static_loss": 2042, "real_input": [2042, 2098], "real_target": 2042, "refil": 2042, "rejoin": 2042, "cuda_work": 2042, "nsight": 2042, "reorgan": 2042, "graphabl": 2042, "illeg": [2042, 2095], "needlessli": [2042, 2095], "econom": 2042, "static_out_1": 2042, "g1_workload": 2042, "static_in_1": 2042, "static_out_2": 2042, "g2_workload": 2042, "static_in_2": 2042, "real_data_1": 2042, "real_data_2": 2042, "occasion": [2042, 2077, 2098], "29500": [2043, 2065, 2072, 2073], "dive": [2043, 2048, 2064, 2097, 2102], "grad0": 2043, "grad1": 2043, "bucket1": 2043, "bucket0": 2043, "hurt": 2043, "kick": [2043, 2072, 2073, 2105], "earliest": 2043, "unreadi": 2043, "perspect": [2043, 2047, 2054, 2073], "hpp": 2043, "processgroupgloo": 2043, "processgroupmpi": 2043, "_sync_param": 2043, "autograd_hook": 2043, "prepare_for_backward": 2043, "optimize_ddp": 2043, "linearfunct": 2044, "grad_bia": 2044, "mulconst": 2044, "mycub": [2044, 2045], "grad_dx": [2044, 2045], "my_cub": [2044, 2045], "input_featur": 2044, "output_featur": 2044, "__array_function__": [2044, 2099], "nep": [2044, 2099], "0018": 2044, "scalartensor": 2044, "handled_funct": 2044, "mandat": 2044, "update_wrapp": 2044, "ensure_tensor": 2044, "metadatatensor": 2044, "__add__": 2044, "subtensor2": 2044, "othersubtensor": 2044, "loggingtensor": 2044, "permiss": 2044, "_metadata": 2044, "ndata": 2044, "ministri": 2044, "silli": 2044, "superclass": 2044, "troublesom": 2044, "face": [2044, 2064, 2082, 2098], "_get_overridable_funct": 2044, "get_overridable_funct": [2044, 2109], "func_dict": 2044, "nn_func": 2044, "labori": 2044, "_get_testing_overrid": 2044, "get_testing_overrid": [2044, 2109], "override_dict": 2044, "dummy_add": 2044, "get_ignored_funct": [2044, 2109], "__torch_dispatch__": [2044, 2077, 2098], "outdat": 2044, "redispatch": [2044, 2098], "dispatchkei": 2044, "zerotensor": 2044, "compositeimplicitautograd": 2044, "func_nam": [2044, 2072], "overload_nam": 2044, "exot": 2044, "zoo": 2044, "torchfunctionmod": 2044, "_python_dispatch": 2044, "torchdispatchmod": 2044, "resolve_nam": [2044, 2109], "functionlog": 2044, "dispatchlog": 2044, "7164": 2044, "9336": 2044, "4287": 2044, "7989": 2044, "2169": 2044, "7474": 2044, "5624": 2044, "5970": 2044, "4328": 2044, "9794": 2044, "3490": 2044, "8671": 2044, "8573": 2044, "4338": 2044, "4948": 2044, "1249": 2044, "3307": 2044, "2151": 2044, "6018": 2044, "9060": 2044, "2974": 2044, "7708": 2044, "6668": 2044, "0352": 2044, "7948": 2044, "6023": 2044, "4303": 2044, "2036": 2044, "6831": 2044, "8120": 2044, "5949": 2044, "5416": 2044, "3335": 2044, "5897": 2044, "custom_vjp": 2045, "custom_jvp": 2045, "to_numpi": 2045, "numpysort": 2045, "ind_inv": 2045, "_1": [2045, 2064], "numpytak": 2045, "numpy_sort": 2045, "ggx": 2045, "vmappabl": 2045, "x_bdim": 2045, "ind_bdim": 2045, "ind_inv_bdim": 2045, "expanded_x": 2045, "expanded_ind": 2045, "expanded_ind_inv": 2045, "new_dim": 2045, "logical_dim": 2045, "maybe_expand_bdim_at_front": 2045, "pseudocod": 2045, "rapidli": [2046, 2053, 2059, 2060], "fortun": [2046, 2108], "abridg": 2046, "total_loss": 2046, "extrud": 2046, "phenomenon": 2046, "plenti": [2046, 2096], "bptt": 2046, "repackag": 2046, "nm": 2046, "blow": 2046, "rememb": [2046, 2053, 2063], "elf": 2046, "grep": [2046, 2092, 2096], "run_model": 2046, "recoveri": 2046, "data_parallel": 2046, "pad_packed_sequ": 2046, "padded_input": 2046, "packed_input": 2046, "packed_output": 2046, "my_lstm": 2046, "dp_m": 2046, "padding_input": 2046, "flava": 2047, "sooner": 2047, "llm": 2047, "6b": 2047, "2b": 2047, "8gb": 2047, "1x": 2047, "24gb": 2047, "total_transformer_block_params_in_b": 2047, "dtype_byt": 2047, "num_gpu": 2047, "gb": 2047, "2x": [2047, 2082, 2102], "record_funct": [2047, 2106], "recordstream": 2047, "flat_param": 2047, "splitwithsizesbackward": 2047, "4gb": 2047, "6gb": 2047, "_another_": 2047, "_could_": 2047, "ur": 2048, "ui": [2048, 2082, 2102, 2105], "j_f": 2048, "calculu": 2048, "cw": 2048, "bigger": 2048, "58eb23378f2a376565a66ac32c93a316c45b6131": 2048, "l99": 2048, "l105": 2048, "ds_dx": 2048, "compute_gradi": 2048, "ds_dy": 2048, "conj_w_d": 2048, "w_d": 2048, "d_idx": 2048, "albeit": 2048, "wonder": 2048, "amd": [2049, 2089], "dialect": 2049, "portabl": 2049, "rocmdoc": 2049, "programming_guid": 2049, "hip_api_guid": 2049, "cuda_vers": 2049, "cudaruntimegetvers": 2049, "cudadrivergetvers": 2049, "hip_vers": 2049, "hipruntimegetvers": 2049, "hipdrivergetvers": 2049, "11000": 2049, "use_rocm": 2049, "rocm_vers": 2049, "40300": 2049, "cmake": [2049, 2057, 2090], "drocm_force_enable_gpu_assert": 2049, "addglobalcallback": 2050, "recordfunct": 2050, "ivalu": 2050, "threadlocaldebuginfo": 2050, "debuginfoguard": 2050, "recordfunctioncallback": 2050, "onfunctionent": 2050, "onfunctionexit": 2050, "needsinput": 2050, "samplingprob": 2050, "enablerecordfunct": 2050, "cerr": 2050, "broader": [2050, 2086], "inject": 2050, "setapiusagehandl": 2050, "setapiusagelogg": 2050, "event_nam": 2050, "c10_log_api_usage_onc": 2050, "my_api": 2050, "_log_api_usage_onc": 2050, "archiv": [2050, 2056], "akin": [2050, 2090], "jpeg": 2050, "camera": [2050, 2082], "setexportmoduleextrafileshook": 2050, "extrafilesmap": 2050, "producer_info": 2050, "getenv": 2050, "getsourc": 2050, "precompil": 2050, "pyc": 2050, "loos": 2050, "elabor": 2051, "tpu": 2051, "mylinear": 2051, "0413": 2051, "2057": 2051, "0597": 2051, "8247": 2051, "1045": 2051, "4299": 2051, "5457": 2051, "4793": 2051, "3634": 2051, "8525": 2051, "6749": 2051, "l0": [2051, 2056, 2096], "deeper": [2051, 2064], "bignet": 2051, "big_net": 2051, "dynamicnet": 2051, "dynamic_net": 2051, "2051": 2051, "7601": 2051, "1963": 2051, "4354": 2051, "6598": 2051, "4446": 2051, "4628": 2051, "8774": 2051, "6848": 2051, "5458": 2051, "4647": 2051, "5310": 2051, "0609": 2051, "0940": 2051, "1266": 2051, "0623": 2051, "3508": 2051, "0550": 2051, "5317": 2051, "5562": 2051, "4028": 2051, "6942": 2051, "0140": 2051, "0329": 2051, "1160": 2051, "0434": 2051, "3889": 2051, "1613": 2051, "6340": 2051, "3887": 2051, "9979": 2051, "0767": 2051, "3526": 2051, "8756": 2051, "5847": 2051, "6016": 2051, "1608": 2051, "0829": 2051, "6338": 2051, "9239": 2051, "6943": 2051, "5034": 2051, "0268": 2051, "4489": 2051, "9403": 2051, "1571": [2051, 2056], "2509": 2051, "5052": 2051, "3088": 2051, "4951": 2051, "3381": 2051, "5166": 2051, "beginn": 2051, "examples_nn": 2051, "polynomial_modul": 2051, "teach": 2051, "0013": [2051, 2078], "0030": 2051, "0008": 2051, "modalmodul": 2051, "6614": 2051, "2669": 2051, "0617": 2051, "4519": 2051, "two_layer_net_optim": 2051, "blitz": 2051, "neural_networks_tutori": 2051, "autograd_tutori": 2051, "new_net": 2051, "runningmean": 2051, "1041": 2051, "0647": 2051, "1515": 2051, "m_load": 2051, "unserialized_th": 2051, "statefulmodul": 2051, "param3": 2051, "param_list": 2051, "parameterlist": 2051, "param_dict": 2051, "parameterdict": 2051, "buffer1": 2051, "buffer2": 2051, "buffer3": 2051, "0322": 2051, "9066": 2051, "1409": 2051, "4852": 2051, "6949": 2051, "2911": 2051, "1044": 2051, "4202": 2051, "1953": 2051, "5299": 2051, "8747": 2051, "6289": 2051, "4898": 2051, "6434": 2051, "5187": 2051, "0346": 2051, "4077": 2051, "4324": 2051, "7022": 2051, "3915": 2051, "6176": 2051, "6062": 2051, "5992": 2051, "4452": 2051, "2843": 2051, "3710": 2051, "3947": 2051, "saving_loading_model": 2051, "what_is_state_dict": 2051, "skip_init": 2051, "skip_param_init": 2051, "forward_hook": [2051, 2104], "backward_hook": [2051, 2104], "new_grad_input": 2051, "5059": 2051, "8158": 2051, "2390": 2051, "0043": 2051, "addmmbackward": 2051, "forward_pre_hook_handl": 2051, "5752": 2051, "7421": 2051, "forward_hook_handl": 2051, "0980": 2051, "4666": 2051, "0256": 2051, "4497": 2051, "5046": 2051, "combat": 2051, "mps_devic": 2052, "yourfavoritenet": 2052, "a3c": 2053, "set_start_method": 2053, "simplequeu": 2053, "cope": 2053, "eleg": 2053, "num_process": 2053, "inappropri": 2053, "vcpu": 2053, "htop": 2053, "exceed": 2053, "competit": 2053, "oversubscrib": 2053, "mnist_hogwild": 2053, "dataloader_kwarg": 2053, "train_epoch": 2053, "30x": 2053, "boost": [2053, 2092], "754": 2054, "1e20": 2054, "4142e": 2054, "struggl": 2054, "benign": 2054, "v_dot2": 2054, "mfma": 2054, "fp64": 2054, "rocbla": 2054, "miopen": 2054, "rocblas_internal_fp16_alt_impl": 2054, "miopen_debug_convolution_attrib_fp16_alt_impl": 2054, "_convbackend": 2054, "slownd": 2054, "slownd_transpos": 2054, "slownd_dil": 2054, "slownd_dilated_transpos": 2054, "convbackend": 2054, "miopendepthwis": 2054, "miopentranspos": 2054, "svd_lowrank": [2055, 2077], "22modul": 2055, "20determin": 2055, "index_add_cuda_": 2055, "1509": 2055, "8027": 2055, "0333": 2055, "1444": 2055, "rese": 2055, "seed_work": 2055, "worker_se": 2055, "train_dataset": 2055, "tensor_dict": 2056, "loaded_numb": 2056, "loaded_even": 2056, "loaded_smal": 2056, "num_batches_track": 2056, "bn_state_dict": 2056, "new_bn": 2056, "out0_relu": 2056, "1400": 2056, "4563": 2056, "0271": 2056, "4406": 2056, "2827": 2056, "4588": 2056, "2031": 2056, "1316": 2056, "6533": 2056, "3413": 2056, "1112": 2056, "m_state_dict": 2056, "new_m": 2056, "zip64": 2056, "pkl": [2056, 2064], "byteord": 2056, "original_nam": 2056, "controlflowmodul": 2056, "controlflowmodule_trac": 2056, "3793": 2056, "controlflowmodule_script": 2056, "tagger": 2056, "ipu_tag": 2056, "ipu_deseri": 2056, "startswith": [2056, 2062], "get_default_load_endian": 2056, "loadendian": 2056, "default_load_endian": 2056, "set_default_load_endian": 2056, "endian": 2056, "get_default_mmap_opt": 2056, "default_mmap_opt": 2056, "set_default_mmap_opt": 2056, "add_safe_glob": 2056, "safe_glob": 2056, "clear_safe_glob": 2056, "get_safe_glob": 2056, "rem": 2057, "7z": 2057, "curl": 2057, "ossci": 2057, "mkl_2020": 2057, "aoa": 2057, "omkl": 2057, "cuda_prefix": 2057, "cuda102": 2057, "magma_2": 2057, "4_": 2057, "omagma": 2057, "cmake_include_path": 2057, "cd": [2057, 2064, 2090, 2108], "magma_hom": 2057, "studio": [2057, 2059], "pip": [2057, 2059, 2060, 2061, 2082, 2097], "cmake_gener": 2057, "ffi": 2057, "create_extens": 2057, "_ext": 2057, "define_macro": 2057, "relative_to": 2057, "c99": 2057, "x86_x64": 2057, "packagesnotfounderror": 2057, "anaconda": 2057, "noarch": 2057, "continuum": 2057, "pkg": 2057, "pro": [2057, 2082], "msys2": 2057, "importerror": [2057, 2064], "dll": 2057, "vc2017": 2057, "vc": 2057, "vs2017_runtim": 2057, "mkl_fft": 2057, "intel_openmp": 2057, "vs2017": 2057, "openbla": 2057, "forg": 2057, "emerg": [2057, 2095], "bootstrap": 2057, "forgotten": 2057, "freeze_support": 2057, "forkingpickl": 2057, "brokenpipeerror": 2057, "errno": 2057, "couldn": [2057, 2061], "torch_14808_1591070686": 2057, "thalloc": 2057, "tdr": 2057, "thcudacheck": 2057, "csrc": [2057, 2090, 2095, 2096], "storageshar": 2057, "microsoft": [2058, 2067], "flavor": 2058, "polish": [2058, 2059], "exportopt": 2059, "onnxregistri": 2059, "extractor": 2059, "fxgraphextractor": 2059, "onnxfakecontext": 2059, "onnxprogram": 2059, "onnxprogramseri": 2059, "upgrad": [2059, 2063, 2084], "perceptron": 2059, "mlpmodel": 2059, "fc0": 2059, "fc3": 2059, "97": [2059, 2078], "onnx_program": 2059, "dynamo_export": [2059, 2061], "model_proto": 2059, "modelproto": 2059, "complianc": 2059, "protobuf": [2059, 2061], "netron": 2059, "icon": 2059, "viewer": [2059, 2110], "parseabl": 2059, "fxe0007": 2059, "fxe0011": 2059, "fxe0012": 2059, "fxe0013": 2059, "fxe0014": 2059, "fxe0015": 2059, "fxe0016": 2059, "model_arg": 2059, "model_kwarg": 2059, "my_simple_model": 2059, "my_dynamic_model": 2059, "tensor_typ": 2059, "elem_typ": 2059, "dim_param": [2059, 2061], "arg0_dim_0": 2059, "arg0_dim_1": 2059, "arg0_dim_2": 2059, "fake_context": 2059, "onnx_registri": 2059, "diagnostic_opt": 2059, "enable_fake_mod": 2059, "xdoctest": [2059, 2060], "torch_doctest_onnx": [2059, 2060], "my_nn_modul": 2059, "my_model_without_initi": 2059, "WITH": [2059, 2061], "my_model_with_initi": 2059, "model_st": 2059, "input_adapt": 2059, "output_adapt": 2059, "diagnostic_context": 2059, "export_except": 2059, "model_signatur": 2059, "model_torch": 2059, "io_adapt": 2059, "inputadapt": 2059, "outputadapt": 2059, "diagnosticcontext": 2059, "adapt_torch_inputs_to_onnx": 2059, "model_with_state_dict": 2059, "func_nested_input": 2059, "x_dict": 2059, "y_tupl": 2059, "y3": 2059, "adapt_torch_outputs_to_onnx": 2059, "model_output": 2059, "func_returning_tupl": 2059, "pt_output": 2059, "inputadaptstep": 2059, "outputadaptstep": 2059, "pprint": 2059, "9216": [2059, 2061], "p_conv1_weight": 2059, "p_conv2_weight": 2059, "p_fc1_weight": 2059, "p_fc2_weight": 2059, "b_my_buffer2": 2059, "b_my_buffer1": 2059, "_log_softmax": [2059, 2062, 2103], "include_initi": 2059, "bufferediobas": 2059, "safetensor": 2059, "safe_open": 2059, "save_diagnost": 2059, "protobufonnxprogramseri": 2059, "serializetostr": 2059, "exported_model": 2059, "onnxruntimeopt": 2059, "session_opt": 2059, "execution_provid": 2059, "execution_provider_opt": 2059, "onnxruntim": [2059, 2060, 2061, 2067], "sessionopt": 2059, "invalidexportoptionserror": 2059, "get_op_funct": 2059, "is_registered_op": 2059, "register_op": 2059, "tracedonnxfunct": 2059, "sctip": 2059, "warnings_as_error": 2059, "is_onnxrt_backend_support": 2060, "onnxrt": [2060, 2089], "dummy_input": 2061, "input_nam": 2061, "actual_input_1": 2061, "learned_": 2061, "output_nam": 2061, "learned_0": 2061, "learned_1": 2061, "learned_2": 2061, "learned_3": 2061, "learned_14": 2061, "learned_15": 2061, "kernel_shap": 2061, "transb": 2061, "check_model": 2061, "printable_graph": 2061, "ort": 2061, "ort_sess": 2061, "inferencesess": 2061, "astyp": 2061, "seq_length": 2061, "real_seq_length": 2061, "experienc": 2061, "new_data": 2061, "hope": [2061, 2096, 2102], "symbolic_opset": 2061, "symbolic_opset9": 2061, "_variablefunct": 2061, "pyi": 2061, "checkout": 2061, "___torch_mangle_0": 2061, "alpha_f": 2061, "myrelu": 2061, "value_t": 2061, "pythonop": [2061, 2062], "mylogexp": 2061, "operator_export_typ": 2061, "onnx_fallthrough": 2061, "onnx_aten_fallback": 2061, "onnx_opset": 2061, "opset15": 2061, "custom_opset": 2061, "67326": 2061, "alphax": 2061, "castlik": 2061, "gammax": 2061, "settyp": 2061, "custom_selu": 2061, "jit_util": 2061, "graphcontext": 2061, "onnxscript_op": 2061, "register_custom_op_symbol": 2061, "symbolic_nam": 2061, "symbolic_fn": 2061, "Be": [2061, 2105], "symbolic_help": 2061, "symbolic_foo_forward": 2061, "custom_domain": 2061, "attr1_f": 2061, "attr2_i": 2061, "foo_forward": 2061, "foomodel": 2061, "example_input1": 2061, "caffe2": [2061, 2082], "torch_script_graph": 2061, "unconvertible_op": 2061, "dynamic_ax": 2061, "export_param": 2061, "trainingmod": 2061, "operatorexporttyp": 2061, "do_constant_fold": 2061, "keep_initializers_as_input": 2061, "export_modules_as_funct": 2061, "autograd_inlin": 2061, "OF": 2061, "input_i": 2061, "input_z": 2061, "fileno": 2061, "untrain": 2061, "doc_str": 2061, "onnx_aten": 2061, "summodul": 2061, "dim_valu": 2061, "my_custom_axis_nam": 2061, "sum_dynamic_axes_1": 2061, "deduplicate_initi": 2061, "74765": 2061, "checkererror": 2061, "unsupportedoperatorerror": 2061, "export_to_pretty_str": 2061, "export_typ": 2061, "google_print": 2061, "add_node_nam": 2061, "nodeproto": 2061, "debugstr": 2061, "contrib": 2061, "test_aten_embedding_2": 2061, "test_oper": 2061, "unregister_custom_op_symbol": 2061, "select_model_mode_for_export": 2061, "is_in_onnx_export": 2061, "middl": [2061, 2096], "enable_log": 2061, "disable_log": 2061, "graphinfo": 2061, "incorrect_relu_symbolic_funct": 2061, "2328854203224182": 2061, "699536174352349": 2061, "u2713": 2061, "constantchunk": 2062, "__and_": 2062, "__contains_": 2062, "__derive_index": 2062, "__getitem_": 2062, "__interpol": 2062, "__is_": 2062, "__isnot_": 2062, "__lshift_": 2062, "__not_": 2062, "__or_": 2062, "__range_length": 2062, "__rshift_": 2062, "__xor_": 2062, "_cast_byt": 2062, "_cast_char": 2062, "_cast_doubl": 2062, "_cast_float": 2062, "_cast_half": 2062, "_cast_int": 2062, "_cast_long": 2062, "_cast_short": 2062, "_conj": 2062, "_convolution_mod": 2062, "_dim_arang": 2062, "_pack_padded_sequ": 2062, "_pad_packed_sequ": 2062, "_reshape_from_tensor": 2062, "_sample_dirichlet": 2062, "_set_item": 2062, "_shape_as_tensor": 2062, "_standard_gamma": 2062, "_uniqu": 2062, "_unique2": 2062, "_weight_norm": 2062, "conv1d_relu": 2062, "conv2d_relu": 2062, "conv3d_relu": 2062, "embedding_renorm": 2062, "floordiv": [2062, 2069], "linear_relu": [2062, 2069], "nonzero_numpi": 2062, "numpy_t": 2062, "unchecked_cast": 2062, "unique_dim": 2062, "_c10d_function": 2062, "all_gather_into_tensor_coalesc": 2062, "all_gather_into_tensor_out": 2062, "all_reduce_coalesc": 2062, "reduce_scatter_tensor_coalesc": 2062, "wait_tensor": 2062, "_c10d_functional_autograd": 2062, "_dtensor": 2062, "shard_dim_alltoal": 2062, "_quantiz": 2062, "conv2d_prepack": 2062, "conv3d_prepack": 2062, "conv_transpose1d_prepack": 2062, "conv_transpose2d_prepack": 2062, "conv_transpose3d_prepack": 2062, "linear_dynam": 2062, "linear_prepack": 2062, "linear_prepack_fp16": 2062, "linear_prepack_fp16_legaci": 2062, "linear_prepack_legaci": 2062, "wrapped_fbgemm_linear_fp16_weight": 2062, "wrapped_fbgemm_pack_gemm_matrix_fp16": 2062, "_test": 2062, "get_first": 2062, "compleximplicit": 2062, "floatimplicit": 2062, "intimplicit": 2062, "__iand_": 2062, "__ilshift_": 2062, "__ior_": 2062, "__irshift_": 2062, "__ixor_": 2062, "__round_to_zero_floordiv": 2062, "__upsampl": 2062, "__upsample_bilinear": 2062, "__upsample_nearest": 2062, "_adaptive_avg_pool2d": [2062, 2103], "_adaptive_avg_pool3d": [2062, 2103], "_add_batch_dim": 2062, "_add_relu": 2062, "_addmm_activ": 2062, "_aminmax": 2062, "_amp_foreach_non_finite_check_and_unscal": 2062, "_amp_update_scal": 2062, "_assert_async": 2062, "_assert_tensor_metadata": 2062, "_autocast_to_full_precis": 2062, "_autocast_to_reduced_precis": 2062, "_batch_norm_impl_index": 2062, "_batch_norm_no_upd": 2062, "_batch_norm_with_upd": 2062, "_batch_norm_with_update_funct": 2062, "_cdist_forward": [2062, 2103], "_cholesky_solve_help": 2062, "_choose_qparams_per_tensor": 2062, "_chunk_cat": 2062, "_coalesc": 2062, "_compute_linear_combin": 2062, "_conj_copi": 2062, "_conj_phys": 2062, "_conv_depthwise2d": 2062, "_convert_indices_from_coo_to_csr": 2062, "_convert_indices_from_csr_to_coo": 2062, "_convert_weight_to_int4pack": 2062, "_copy_from": 2062, "_copy_from_and_res": 2062, "_cslt_compress": 2062, "_cslt_sparse_mm": 2062, "_cslt_sparse_mm_search": 2062, "_ctc_loss": 2062, "_cudnn_ctc_loss": 2062, "_cudnn_init_dropout_st": 2062, "_cudnn_rnn": 2062, "_cudnn_rnn_flatten_weight": 2062, "_cufft_clear_plan_cach": 2062, "_cufft_get_plan_cache_max_s": 2062, "_cufft_get_plan_cache_s": 2062, "_cufft_set_plan_cache_max_s": 2062, "_cummax_help": 2062, "_cummin_help": 2062, "_debug_has_internal_overlap": 2062, "_dimi": 2062, "_dimv": 2062, "_dirichlet_grad": 2062, "_efficient_attention_forward": 2062, "_efficientzerotensor": 2062, "_embedding_bag": [2062, 2103], "_embedding_bag_forward_onli": 2062, "_empty_affine_quant": 2062, "_empty_per_channel_affine_quant": 2062, "_euclidean_dist": 2062, "_fake_quantize_learnable_per_channel_affin": 2062, "_fake_quantize_learnable_per_tensor_affin": 2062, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 2062, "_fft_c2c": 2062, "_fft_c2r": 2062, "_fft_r2c": 2062, "_fill_mem_eff_dropout_mask": 2062, "_flash_attention_forward": 2062, "_foobar": [2062, 2108], "_foreach_ab": 2062, "_foreach_aco": 2062, "_foreach_add": 2062, "_foreach_addcdiv": 2062, "_foreach_addcmul": 2062, "_foreach_asin": 2062, "_foreach_atan": 2062, "_foreach_ceil": 2062, "_foreach_clamp_max": 2062, "_foreach_clamp_min": 2062, "_foreach_copi": 2062, "_foreach_co": 2062, "_foreach_cosh": 2062, "_foreach_div": 2062, "_foreach_erf": 2062, "_foreach_erfc": 2062, "_foreach_exp": 2062, "_foreach_expm1": 2062, "_foreach_floor": 2062, "_foreach_frac": 2062, "_foreach_lerp": 2062, "_foreach_lgamma": 2062, "_foreach_log": 2062, "_foreach_log10": 2062, "_foreach_log1p": 2062, "_foreach_log2": 2062, "_foreach_maximum": 2062, "_foreach_minimum": 2062, "_foreach_mul": 2062, "_foreach_neg": 2062, "_foreach_norm": 2062, "_foreach_pow": 2062, "_foreach_reciproc": 2062, "_foreach_round": 2062, "_foreach_sigmoid": 2062, "_foreach_sign": 2062, "_foreach_sin": 2062, "_foreach_sinh": 2062, "_foreach_sqrt": 2062, "_foreach_sub": 2062, "_foreach_tan": 2062, "_foreach_tanh": 2062, "_foreach_trunc": 2062, "_foreach_zero": 2062, "_functional_assert_async": 2062, "_functional_assert_scalar": 2062, "_functional_sym_constrain_rang": 2062, "_functional_sym_constrain_range_for_s": 2062, "_fused_adagrad": 2062, "_fused_adam": 2062, "_fused_adamw": 2062, "_fused_dropout": 2062, "_fused_moving_avg_obs_fq_help": 2062, "_fused_moving_avg_obs_fq_helper_funct": 2062, "_fused_sdp_choic": 2062, "_fused_sgd": 2062, "_fw_primal": 2062, "_fw_primal_copi": 2062, "_get_cpu_cap": 2062, "_get_tracing_st": 2062, "_grad_sum_to_s": 2062, "_has_compatible_shallow_copy_typ": 2062, "_has_same_storage_numel": 2062, "_histogramdd_bin_edg": 2062, "_histogramdd_from_bin_ct": 2062, "_histogramdd_from_bin_tensor": 2062, "_index_put_impl": 2062, "_indices_copi": 2062, "_infer_s": 2062, "_int_mm": 2062, "_is_all_tru": 2062, "_is_any_tru": 2062, "_is_zerotensor": 2062, "_lazy_clon": 2062, "_linalg_check_error": 2062, "_linalg_det": 2062, "_linalg_eigh": 2062, "_linalg_eigv": 2062, "_linalg_slogdet": 2062, "_linalg_solve_ex": 2062, "_linalg_svd": 2062, "_list_to_tensor": 2062, "_local_scalar_dens": [2062, 2103], "_logcumsumexp": 2062, "_lstm_mp": 2062, "_make_dep_token": 2062, "_make_du": 2062, "_make_dual_copi": 2062, "_make_per_channel_quantized_tensor": 2062, "_make_per_tensor_quantized_tensor": 2062, "_masked_scal": 2062, "_masked_softmax": 2062, "_mixed_dtypes_linear": 2062, "_mkldnn_reshap": 2062, "_mkldnn_transpos": 2062, "_mps_convolut": 2062, "_mps_convolution_transpos": 2062, "_native_batch_norm_legit": [2062, 2103], "_native_batch_norm_legit_funct": 2062, "_native_batch_norm_legit_no_train": [2062, 2103], "_native_multi_head_attent": 2062, "_ncf_unsqueez": 2062, "_ncf_view": 2062, "_neg_view": 2062, "_neg_view_copi": 2062, "_nested_compute_contiguous_strides_offset": 2062, "_nested_from_pad": 2062, "_nested_from_padded_and_nested_exampl": 2062, "_nested_get_jagged_dummi": 2062, "_nested_get_length": 2062, "_nested_get_offset": 2062, "_nested_get_ragged_idx": 2062, "_nested_get_valu": 2062, "_nested_get_values_copi": 2062, "_nested_tensor_from_mask": 2062, "_nested_tensor_from_mask_left_align": 2062, "_nested_tensor_from_tensor_list": 2062, "_nested_tensor_s": 2062, "_nested_tensor_softmax_with_shap": 2062, "_nested_tensor_storage_offset": 2062, "_nested_tensor_strid": 2062, "_nested_view_from_buff": 2062, "_nested_view_from_buffer_copi": 2062, "_nested_view_from_jag": 2062, "_nested_view_from_jagged_copi": 2062, "_new_zeros_with_same_feature_meta": 2062, "_nnpack_avail": 2062, "_nnpack_spatial_convolut": 2062, "_no_grad_embedding_renorm": 2062, "_no_grad_fil": 2062, "_no_grad_norm": 2062, "_no_grad_uniform": 2062, "_no_grad_zero": 2062, "_pack_sequ": 2062, "_pad_circular": 2062, "_pad_enum": 2062, "_pdist_forward": [2062, 2103], "_pin_memori": 2062, "_prelu_kernel": 2062, "_print": 2062, "_propagate_xla_data": 2062, "_remove_batch_dim": 2062, "_reshape_alia": 2062, "_reshape_alias_copi": 2062, "_reshape_copi": 2062, "_resize_output": 2062, "_rowwise_prun": 2062, "_saturate_weight_to_fp16": 2062, "_scaled_dot_product_attention_math": 2062, "_scaled_dot_product_cudnn_attent": 2062, "_scaled_dot_product_efficient_attent": 2062, "_scaled_dot_product_flash_attent": 2062, "_scaled_dot_product_flash_attention_for_cpu": 2062, "_scaled_mm": 2062, "_size_if_not_equ": 2062, "_slow_conv2d_forward": 2062, "_sobol_engine_draw": 2062, "_sobol_engine_ff": 2062, "_sobol_engine_initialize_st": 2062, "_sobol_engine_scrambl": 2062, "_softmax": [2062, 2078, 2103], "_sparse_addmm": 2062, "_sparse_broadcast_to": 2062, "_sparse_broadcast_to_copi": 2062, "_sparse_bsc_tensor_unsaf": 2062, "_sparse_bsr_tensor_unsaf": 2062, "_sparse_compressed_tensor_unsaf": 2062, "_sparse_compressed_tensor_with_dim": 2062, "_sparse_coo_tensor_unsaf": 2062, "_sparse_coo_tensor_with_dim": 2062, "_sparse_coo_tensor_with_dims_and_tensor": 2062, "_sparse_csc_tensor_unsaf": 2062, "_sparse_csr_prod": 2062, "_sparse_csr_sum": 2062, "_sparse_csr_tensor_unsaf": 2062, "_sparse_log_softmax": 2062, "_sparse_mask_project": 2062, "_sparse_mm": 2062, "_sparse_mm_reduce_impl": 2062, "_sparse_semi_structured_addmm": 2062, "_sparse_semi_structured_appli": 2062, "_sparse_semi_structured_apply_dens": 2062, "_sparse_semi_structured_linear": 2062, "_sparse_semi_structured_mm": 2062, "_sparse_semi_structured_til": 2062, "_sparse_softmax": 2062, "_sparse_sparse_matmul": 2062, "_sparse_sum": 2062, "_spdiag": 2062, "_standard_gamma_grad": 2062, "_tensor_to_list": 2062, "_test_ambiguous_default": 2062, "_test_autograd_multiple_dispatch": 2062, "_test_autograd_multiple_dispatch_view": 2062, "_test_autograd_multiple_dispatch_view_copi": 2062, "_test_check_tensor": 2062, "_test_functorch_fallback": 2062, "_test_optional_filled_intlist": 2062, "_test_optional_floatlist": 2062, "_test_optional_intlist": 2062, "_test_parallel_materi": 2062, "_test_serialization_subcmul": 2062, "_test_string_default": 2062, "_test_warn_in_autograd": 2062, "_thnn_fused_gru_cel": 2062, "_thnn_fused_lstm_cel": 2062, "_to_copi": [2062, 2103], "_to_cpu": 2062, "_to_dens": 2062, "_to_spars": 2062, "_to_sparse_bsc": 2062, "_to_sparse_bsr": 2062, "_to_sparse_csc": 2062, "_to_sparse_csr": 2062, "_to_sparse_semi_structur": 2062, "_transform_bias_rescale_qkv": 2062, "_transformer_encoder_layer_fwd": 2062, "_trilinear": 2062, "_triton_multi_head_attent": 2062, "_triton_scaled_dot_attent": 2062, "_unpack_du": 2062, "_unsafe_index": 2062, "_unsafe_index_put": 2062, "_unsafe_view": 2062, "_unwrap_opt": 2062, "_upsample_bicubic2d_aa": 2062, "_upsample_bilinear2d_aa": 2062, "_upsample_nearest_exact1d": 2062, "_upsample_nearest_exact2d": 2062, "_upsample_nearest_exact3d": 2062, "_use_cudnn_ctc_loss": 2062, "_use_cudnn_rnn_flatten_weight": 2062, "_validate_compressed_sparse_indic": 2062, "_validate_sparse_bsc_tensor_arg": 2062, "_validate_sparse_bsr_tensor_arg": 2062, "_validate_sparse_compressed_tensor_arg": 2062, "_validate_sparse_coo_tensor_arg": 2062, "_validate_sparse_csc_tensor_arg": 2062, "_validate_sparse_csr_tensor_arg": 2062, "_values_copi": 2062, "_weight_int4pack_mm": 2062, "_weight_int8pack_mm": 2062, "_weight_norm_interfac": 2062, "capit": 2062, "confirmed_by_own": [2062, 2072], "convolution_overrid": 2062, "copy_sparse_to_spars": 2062, "endswith": 2062, "expandtab": 2062, "fake_quantize_per_channel_affine_cachemask": 2062, "fake_quantize_per_tensor_affine_cachemask": 2062, "fill_diagon": 2062, "glu_jvp": 2062, "has_torch_funct": [2062, 2109], "is_non_overlapping_and_dens": 2062, "is_own": [2062, 2072], "is_strides_like_format": 2062, "isalnum": 2062, "isalpha": 2062, "isdecim": 2062, "isdigit": 2062, "isidentifi": 2062, "islow": 2062, "isnumer": 2062, "isprint": 2062, "isspac": 2062, "istitl": 2062, "isupp": 2062, "lift_fresh": 2062, "ljust": 2062, "local_valu": [2062, 2065, 2072], "log_sigmoid_forward": 2062, "lstrip": 2062, "matrix_h": 2062, "nll_loss2d_forward": 2062, "nll_loss_forward": 2062, "normal_funct": 2062, "owner_nam": [2062, 2072], "percentformat": 2062, "quantized_gru": 2062, "quantized_lstm": 2062, "resize_as_spars": 2062, "rfind": 2062, "rindex": 2062, "rjust": 2062, "rpartit": 2062, "rsplit": 2062, "rstrip": 2062, "set_data": 2062, "slow_conv3d_forward": 2062, "sparse_res": 2062, "sparse_resize_and_clear": 2062, "splitlin": 2062, "swapcas": 2062, "sym_numel": [2062, 2103], "sym_storage_offset": [2062, 2103], "sym_strid": [2062, 2103], "unique_dim_consecut": 2062, "zfill": 2062, "_allgather_bas": 2062, "_reduce_scatter_bas": 2062, "allgath": 2062, "allgather_coalesc": 2062, "allgather_into_tensor_coalesc": 2062, "allreduce_coalesc": 2062, "alltoal": 2062, "alltoall_bas": 2062, "recv_any_sourc": 2062, "debugprim": 2062, "load_tensor": 2062, "_alloc_from_pool": 2062, "_mm_plus_mm": 2062, "_reinterpret_tensor": 2062, "accumulate_grad": 2062, "resize_storage_byt": 2062, "_mkl_linear": 2062, "_mkl_reorder_linear_weight": 2062, "_convolution_pointwis": 2062, "_convolution_transpose_pointwis": 2062, "_is_mkldnn_acl_support": 2062, "_is_mkldnn_bf16_support": 2062, "_is_mkldnn_fp16_support": 2062, "_linear_pointwis": 2062, "_reorder_convolution_transpose_weight": 2062, "_reorder_convolution_weight": 2062, "_reorder_linear_weight": 2062, "_reorder_mkldnn_rnn_layer_weight": 2062, "mkldnn_prepack": 2062, "conv2d_run": 2062, "qconv1d_pointwis": 2062, "qconv2d_pointwis": 2062, "qconv3d_pointwis": 2062, "qconv_prepack": 2062, "qlinear_pointwis": 2062, "qlinear_prepack": 2062, "conv2d_clamp_prepack": 2062, "conv2d_clamp_run": 2062, "conv2d_transpose_clamp_prepack": 2062, "conv2d_transpose_clamp_run": 2062, "linear_clamp_prepack": 2062, "linear_clamp_run": 2062, "unpack_prepacked_sizes_conv2d": 2062, "unpack_prepacked_sizes_linear": 2062, "addstatvalu": 2062, "autogradadd": 2062, "autogradallnonzero": 2062, "autogradallzero": 2062, "autogradanynonzero": 2062, "autogradzero": 2062, "bailout": [2062, 2095], "bailouttempl": 2062, "broadcastmkldnntensor": 2062, "broadcasts": 2062, "chunksiz": 2062, "constantmkldnntensor": 2062, "differentiablegraph": 2062, "enumnam": 2062, "enumvalu": 2062, "fallbackgraph": 2062, "fusedconcat": 2062, "fusiongroup": 2062, "ifthenels": 2062, "ignoredpythonop": 2062, "mkldnnclamp": 2062, "mkldnnhardsigmoid": 2062, "mkldnnhardswish": 2062, "mkldnnhardtanh": 2062, "mkldnnlayernorm": 2062, "mkldnnscalarmul": 2062, "mmbatchsid": 2062, "mmtreereduc": 2062, "modulecontainerindex": 2062, "numtotensor": 2062, "raiseexcept": 2062, "reductions": 2062, "requiresgradcheck": 2062, "staticruntimecopyout": 2062, "staticsubgraph": 2062, "stringindex": 2062, "tensorexprdynamicgroup": 2062, "tensorexprdynamicguard": 2062, "tensorexprgroup": 2062, "timepoint": 2062, "tupleindex": 2062, "tupleunpack": 2062, "varconcat": 2062, "varstack": 2062, "awaitable_nowait": 2062, "awaitable_wait": 2062, "is_cpu": 2062, "is_ipu": 2062, "is_maia": 2062, "is_mkldnn": 2062, "is_mp": 2062, "is_mtia": 2062, "is_nest": 2062, "is_quant": 2062, "is_vulkan": 2062, "is_xla": 2062, "is_xpu": 2062, "onednnfusiongroup": 2062, "onednnfusionguard": 2062, "profile_ivalu": 2062, "rangelist": 2062, "rpc_remot": 2062, "unchecked_unwrap_opt": 2062, "_make_token": [2062, 2103], "_sink_token": [2062, 2103], "bessel_i0": [2062, 2103], "bessel_i1": [2062, 2103], "bessel_j0": [2062, 2078, 2103], "bessel_j1": [2062, 2078, 2103], "broadcast_in_dim": [2062, 2103], "cbrt": [2062, 2103], "collapse_view": [2062, 2103], "convert_element_typ": [2062, 2103], "copy_strid": [2062, 2103], "copy_to": [2062, 2103], "device_put": [2062, 2103], "erf_inv": [2062, 2103], "erfcx": [2062, 2078, 2103], "fft_c2c": [2062, 2103], "fft_c2r": [2062, 2103], "fft_r2c": [2062, 2103], "iota": [2062, 2103], "maximum_valu": [2062, 2103], "minimum_valu": [2062, 2103], "ndtri": [2062, 2078, 2103], "rev": [2062, 2103], "shift_left": [2062, 2103], "shift_right_arithmet": [2062, 2103], "slice_in_dim": [2062, 2103], "spherical_bessel_j0": [2062, 2078, 2103], "view_of": [2062, 2103], "view_of_dtyp": [2062, 2103], "xor_sum": [2062, 2103], "_call_end_callbacks_on_jit_fut": 2062, "_record_function_ent": 2062, "_record_function_enter_new": 2062, "_record_function_exit": 2062, "_bfloat16quantizedtofloat": 2062, "_floattobfloat16quant": 2062, "add_out": 2062, "add_relu_out": 2062, "add_scalar_out": 2062, "add_scalar_relu": 2062, "add_scalar_relu_out": 2062, "batch_norm1d": 2062, "batch_norm1d_relu": 2062, "batch_norm2d": 2062, "batch_norm2d_relu": 2062, "batch_norm3d": 2062, "batch_norm3d_relu": 2062, "batch_norm_relu": 2062, "cat_out": 2062, "cat_relu": 2062, "cat_relu_out": 2062, "conv1d_dynam": 2062, "conv1d_prepack": 2062, "conv1d_unpack": 2062, "conv2d_add": 2062, "conv2d_add_relu": 2062, "conv2d_dil": 2062, "conv2d_dynam": 2062, "conv2d_group": 2062, "conv2d_output_pad": 2062, "conv2d_pad": 2062, "conv2d_strid": 2062, "conv2d_transpos": 2062, "conv2d_unpack": 2062, "conv2d_unpack_s": 2062, "conv3d_dil": 2062, "conv3d_dynam": 2062, "conv3d_group": 2062, "conv3d_output_pad": 2062, "conv3d_pad": 2062, "conv3d_strid": 2062, "conv3d_transpos": 2062, "conv3d_unpack": 2062, "conv_prepack": 2062, "conv_transpose1d_dynam": 2062, "conv_transpose1d_unpack": 2062, "conv_transpose2d_dil": 2062, "conv_transpose2d_dynam": 2062, "conv_transpose2d_group": 2062, "conv_transpose2d_output_pad": 2062, "conv_transpose2d_pad": 2062, "conv_transpose2d_strid": 2062, "conv_transpose2d_transpos": 2062, "conv_transpose2d_unpack": 2062, "conv_transpose3d_dil": 2062, "conv_transpose3d_dynam": 2062, "conv_transpose3d_group": 2062, "conv_transpose3d_output_pad": 2062, "conv_transpose3d_pad": 2062, "conv_transpose3d_strid": 2062, "conv_transpose3d_transpos": 2062, "conv_transpose3d_unpack": 2062, "conv_unpack": 2062, "embedding_4bit": 2062, "embedding_bag_2bit_prepack": 2062, "embedding_bag_2bit_rowwise_offset": 2062, "embedding_bag_2bit_unpack": 2062, "embedding_bag_4bit": 2062, "embedding_bag_4bit_prepack": 2062, "embedding_bag_4bit_rowwise_offset": 2062, "embedding_bag_4bit_unpack": 2062, "embedding_bag_byt": 2062, "embedding_bag_byte_prepack": 2062, "embedding_bag_byte_rowwise_offset": 2062, "embedding_bag_byte_unpack": 2062, "embedding_bag_prepack": 2062, "embedding_bag_unpack": 2062, "embedding_byt": 2062, "linear_dynamic_fp16": 2062, "linear_dynamic_fp16_unpacked_weight": 2062, "linear_leaky_relu": 2062, "linear_relu_dynam": 2062, "linear_relu_dynamic_fp16": 2062, "linear_tanh": 2062, "linear_unpack": 2062, "linear_unpack_fp16": 2062, "linear_with_input_q_dq_qweight_dq_output_fp32": 2062, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 2062, "make_quantized_cell_param": 2062, "make_quantized_cell_params_dynam": 2062, "make_quantized_cell_params_fp16": 2062, "mul_out": 2062, "mul_relu": 2062, "mul_relu_out": 2062, "mul_scalar_out": 2062, "mul_scalar_relu": 2062, "mul_scalar_relu_out": 2062, "quantized_gru_cell_dynam": 2062, "quantized_lstm_cell_dynam": 2062, "quantized_rnn_relu_cell_dynam": 2062, "quantized_rnn_tanh_cell_dynam": 2062, "rngprim": 2062, "philox_rand": 2062, "qlinear": 2062, "qlinear_dynam": 2062, "qlinear_relu": 2062, "qlinear_relu_dynam": 2062, "qlinear_unpack": 2062, "static_runtim": 2062, "vartupleunpack": 2062, "clamp_nan_to_num": 2062, "create_owned_ref": 2062, "dequantize_copi": 2062, "dict_unpack": 2062, "expand_dims_copi": 2062, "flatten_copi": 2062, "fused_equally_split": 2062, "reshape_copi": 2062, "select_tensor": 2062, "signed_log1p": 2062, "to_copi": 2062, "to_maybe_copy_out": 2062, "var1": 2063, "var2": 2063, "bias_param": 2063, "adadelta": 2063, "adamax": 2063, "asgd": 2063, "nadam": 2063, "radam": 2063, "rmsprop": 2063, "rprop": 2063, "reducelronplateau": 2063, "multisteplr": 2063, "swa_util": 2063, "averagedmodel": 2063, "swalr": 2063, "update_bn": 2063, "optima": 2063, "polyak": 2063, "averaged_model": 2063, "multi_avg_fn": 2063, "get_ema_multi_avg_fn": 2063, "textrm": 2063, "update_paramet": 2063, "avg_fn": 2063, "_foreach": 2063, "ema_model": 2063, "ema_avg": 2063, "averaged_model_paramet": 2063, "model_paramet": 2063, "num_averag": 2063, "swa_schedul": 2063, "anneal_epoch": 2063, "swa_lr": 2063, "swa_model": 2063, "cosineannealinglr": 2063, "swa_start": 2063, "test_input": 2063, "secur": 2064, "unpackag": 2064, "exercis": 2064, "unzip": 2064, "my_packag": 2064, "freeli": 2064, "94304870911616": 2064, "94304900784016": 2064, "extern_modul": 2064, "model_1": 2064, "myzip": 2064, "file_byt": 2064, "writestr": 2064, "new_file_byt": 2064, "vim": 2064, "vimrc": 2064, "bufreadcmd": 2064, "brows": 2064, "amatch": 2064, "vi": 2064, "packageimport": 2064, "queryabl": 2064, "glob": 2064, "packageexport": 2064, "pe": 2064, "save_pickl": 2064, "has_fil": 2064, "importer_file_structur": 2064, "package_a": 2064, "get_rdep": 2064, "all_path": 2064, "dependency_graph_str": 2064, "save_text": 2064, "save_binari": 2064, "my_resourc": 2064, "config_stuff": 2064, "raw_data": 2064, "my_byt": 2064, "complementari": [2064, 2078], "load_pickl": 2064, "load_text": 2064, "load_binari": 2064, "my_tensor": 2064, "__reduce_package__": 2064, "my_str": 2064, "time_import": 2064, "time_export": 2064, "pickler": 2064, "persistent_id": 2064, "persistent_load": 2064, "generated_module_nam": 2064, "get_unique_id": 2064, "clock_gettim": 2064, "unpackage_foo": 2064, "depickl": 2064, "foo_1": 2064, "foo_2": 2064, "foo_packag": 2064, "foo_collect": 2064, "foo1": 2064, "foo2": 2064, "imported_foo": 2064, "9857706": 2064, "650140837": 2064, "652698385": 2064, "__torch_package__": 2064, "is_in_packag": 2064, "userexcept": 2064, "unpackageableexcept": 2064, "loaded_modul": 2064, "import_modul": 2064, "save_source_str": 2064, "save_modul": 2064, "textwrap": 2064, "dedent": 2064, "my_funct": 2064, "is_packag": 2064, "importlib": 2064, "my_pickl": 2064, "get_my_resourc": 2064, "read_text": 2064, "torch_package_import": 2064, "get_my_pickl": 2064, "is_from_packag": 2064, "stdlib": 2064, "my_test": 2064, "f2": [2064, 2065], "sys_import": 2064, "script_model": 2064, "mixed_model": 2064, "python_model_with_scripted_submodul": 2064, "loaded_script": 2064, "loaded_mix": 2064, "convention": 2064, "94286146172688": 2064, "94286146172784": 2064, "consult": [2064, 2095], "essai": 2064, "another_packag": 2064, "pickletool": 2064, "ast": 2064, "deni": 2064, "my_export": 2064, "my_interned_modul": 2064, "package_export": 2064, "my_externed_modul": 2064, "my_mocked_modul": 2064, "unwant": [2064, 2082], "hodg": 2064, "podg": 2064, "bazel": 2064, "buck": 2064, "my_class_inst": 2064, "imported_myclass": 2064, "okai": 2064, "torch_package_0": 2064, "handle_me_this_wai": 2064, "inadvert": 2064, "pun": 2064, "packagingerror": 2064, "dependency_graph": 2064, "emptymatcherror": 2064, "allow_empti": 2064, "_sysimport": 2064, "hermet": 2064, "scan": 2064, "orderedimport": 2064, "add_depend": 2064, "graphviz": 2064, "lang": 2064, "denied_modul": 2064, "my_subpackag": 2064, "digraph": 2064, "externed_modul": 2064, "interned_modul": 2064, "mocked_modul": 2064, "register_extern_hook": 2064, "register_intern_hook": 2064, "register_mock_hook": 2064, "myobject": 2064, "save_source_fil": 2064, "file_or_directori": 2064, "my_subsubpackag": 2064, "file_or_buff": 2064, "module_allow": 2064, "pytorchfileread": 2064, "python_vers": 2064, "is_dir": 2064, "suffer": 2065, "allevi": [2065, 2099], "microbatch": 2065, "bubbl": 2065, "except_last": 2065, "deferred_batch_norm": 2065, "torchgpip": 2065, "withdevic": 2065, "fc": [2065, 2067], "init_rpc": [2065, 2072, 2073], "output_rref": 2065, "fed": [2065, 2082], "nochunk": 2065, "resnext": 2065, "till": 2065, "skippabl": 2065, "1to3": 2065, "f1": 2065, "layer3": 2065, "skip_1to3": 2065, "f3": 2065, "alic": 2065, "bob": 2065, "carol": 2065, "stashstashpop": 2065, "f_alic": 2065, "f_bob": 2065, "verify_skipp": 2065, "unmatch": [2065, 2088], "fairscal": 2065, "_kinetoprofil": 2066, "execution_trace_observ": 2066, "profileract": 2066, "export_memory_timelin": 2066, "executiontraceobserv": 2066, "add_metadata": 2066, "add_metadata_json": 2066, "unaggreg": 2066, "suffix": [2066, 2082, 2083], "png": 2066, "gzip": 2066, "numbyt": 2066, "increment_vers": 2066, "_memory_profil": 2066, "export_stack": 2066, "self_cuda_time_tot": 2066, "preset_metadata_json": 2066, "preset": 2066, "on_trace_readi": 2066, "record_and_sav": 2066, "tensorboard_trace_handl": 2066, "dir_nam": 2066, "logdir": [2066, 2082], "plugin": [2066, 2082, 2094], "code_to_profil": 2066, "row_limit": 2066, "trace_handl": 2066, "test_trace_": 2066, "step_num": 2066, "code_iteration_to_profil": 2066, "register_callback": 2066, "execution_trac": 2066, "test_execution_trace_with_kineto": 2066, "test_profil": 2066, "_itraceobserv": 2066, "skip_first": 2066, "worker_nam": [2066, 2072], "use_gzip": 2066, "range_push": 2066, "range_pop": 2066, "4x": 2067, "88": [2067, 2102], "14k": 2067, "domin": 2067, "previous_layer_fp32": 2067, "linear_fp32": 2067, "activation_fp32": 2067, "next_layer_fp32": 2067, "linear_weight_fp32": 2067, "linear_int8_w_fp32_inp": 2067, "linear_weight_int8": 2067, "ptdq": 2067, "model_fp32": 2067, "model_int8": 2067, "quantize_dynam": 2067, "input_fp32": 2067, "previous_layer_int8": 2067, "linear_with_activation_int8": 2067, "next_layer_int8": 2067, "ptsq": 2067, "minmax": 2067, "l2norm": 2067, "model_fp32_fus": 2067, "fuse_modul": [2067, 2068], "model_fp32_prepar": 2067, "fq": 2067, "prepare_qat": 2067, "training_loop": 2067, "requant": 2067, "linear1": 2067, "custom_qconfig": 2067, "fxptq": 2067, "model_fp": 2067, "usermodel": 2067, "model_to_quant": 2067, "default_dynamic_qconfig": 2067, "model_prepar": 2067, "model_quant": 2067, "model_fus": 2067, "quantize_pt2": 2067, "prepare_pt2": 2067, "_export": [2067, 2090], "capture_pre_autograd_graph": 2067, "xnnpackquant": 2067, "get_symmetric_quantization_config": 2067, "prepare_qat_pt2": 2067, "convert_pt2": 2067, "per_tensor_symmetr": [2067, 2070], "per_channel_symmetr": [2067, 2070], "per_channel_scal": 2067, "per_channel_zero_point": 2067, "quantized_tensor": 2067, "qengin": 2067, "in4": 2067, "tensorrt": [2067, 2089, 2094, 2099], "fx2trt": 2067, "float_modul": [2067, 2087], "staticquantcustommodul": 2067, "observed_modul": 2067, "default_qconfig": [2067, 2088], "vnni": 2067, "test_quantized_op": 2067, "testquantizedop": 2067, "test_custom_module_lstm": 2067, "test_quantize_fx": 2067, "testquantizefx": 2067, "test_static_lstm": 2067, "some_oper": 2067, "e2": 2067, "thnn_conv2d_forward": 2067, "quantizedcpu": 2067, "some_qconfig": 2067, "linearpackedparam": 2067, "_modul": 2067, "prepare_orig": 2067, "quantized_orig": 2067, "scripted_quant": 2067, "fp32_op": 2068, "int8_op": 2068, "cooperlak": 2068, "audit": 2068, "op_fp32": 2068, "op_int8": 2068, "_numeric_suit": 2068, "_numeric_suite_fx": 2068, "0x7f8ddb8d6880": 2069, "0x7f8db539f0d0": 2069, "0x7f8db539f160": 2069, "num_tensor_args_to_observation_typ": 2069, "convbn1d": 2069, "0x7f8db2bc9e50": 2069, "reference_quantized_module_for_root": 2069, "fuse_convtranspose_bn": 2069, "0x7f8db2bd2040": 2069, "linearbn1d": 2069, "fuse_linear_bn": 2069, "0x7f8db2bc9f70": 2069, "convbn2d": 2069, "convbn3d": 2069, "bnrelu2d": 2069, "bnrelu3d": 2069, "input_type_to_index": 2069, "conv_fus": 2069, "convbnrelu1d": 2069, "convbnrelu2d": 2069, "convbnrelu3d": 2069, "convrelu1d": 2069, "convrelu3d": 2069, "0x7f8db539f1f0": 2069, "0x7f8db539f820": 2069, "quint4x2": [2069, 2079, 2083, 2084], "embedding_op": 2069, "0x7f8db53a2790": 2069, "00390625": 2069, "0x7f8db53a2040": 2069, "0x7f8db53a21f0": 2069, "0x7f8db539f700": 2069, "0x7f8db53a25e0": 2069, "0x7f8db5318f70": 2069, "0x7f8db53a2670": 2069, "0x7f8db539f9d0": 2069, "linear_fus": 2069, "_sequential_wrapper2": 2069, "0x7f8de2a68430": 2069, "0x7f8db539f5e0": 2069, "0x7f8dad080e50": 2069, "fuse_conv_bn_relu": 2069, "0x7f8db2bc9ee0": 2069, "0x7f8dad080ee0": 2069, "0x7f8dad080f70": 2069, "0x7f8dad08f040": 2069, "0x7f8dad08f0d0": 2069, "0x7f8dad08f160": 2069, "0x7f8dad08f1f0": 2069, "0x7f8dad08f280": 2069, "0x7f8dad08f310": 2069, "0x7f8dad08f3a0": 2069, "0x7f8dad08f430": 2069, "0x7f8db539f790": 2069, "0078125": 2069, "customconfig": 2070, "custom_module_config": 2070, "_caller": 2071, "_devices_kw": 2071, "slowli": 2071, "unind": 2071, "shortcom": 2072, "stitch": 2072, "rpc_backend_opt": 2072, "trainer3": 2072, "parameterserver2": 2072, "backendtyp": 2072, "rpcbackendopt": 2072, "rpcagent": 2072, "transmit": 2072, "calle": [2072, 2074], "_set_rpc_timeout": 2072, "worker0": 2072, "my_script_add": 2072, "wire": 2072, "fut2": 2072, "meth": 2072, "grace": 2072, "userrref": [2072, 2074], "async_execut": 2072, "paus": 2072, "outmost": 2072, "async_add_chain": 2072, "worker2": 2072, "script_add": 2072, "async_add": 2072, "asyncexecutionclass": 2072, "static_async_add": 2072, "class_async_add": 2072, "ret_fut": 2072, "bound_async_add": 2072, "rpc_timeout": 2072, "incid": [2072, 2074], "nvlink": 2072, "multiplex": 2072, "tensorpiperpcbackendopt": 2072, "num_worker_thread": 2072, "device_map": 2072, "_transport": 2072, "tensorpipeag": 2072, "set_device_map": 2072, "intermitt": 2072, "backoff": 2072, "pyrref": 2072, "type_hint": 2072, "_distributed_rpc": 2072, "dist_autograd_ctx_id": 2072, "ctx_id": 2072, "ownerrref": [2072, 2074], "remote_modul": 2072, "forward_async": 2072, "remote_devic": 2072, "workernam": 2072, "ps0": 2072, "remote_linear_modul": 2072, "get_module_rref": 2072, "remote_paramet": 2072, "my_add": [2073, 2109], "t4": 2073, "t5": 2073, "autograd_message_id": 2073, "autograd_context_id": 2073, "send1": 2073, "kickoff": 2073, "recv2": 2073, "heard": 2073, "send2": 2073, "recv1": 2073, "dist_autograd_simpl": 2073, "random_tensor": 2073, "_run_process": 2073, "dst_rank": 2073, "dst_name": 2073, "run_process": 2073, "rrefid": 2074, "transient": 2074, "udf": 2074, "deliveri": 2074, "knowledg": 2074, "danger": 2074, "ancestor": 2074, "trickier": 2074, "forkid": 2074, "ack": 2074, "solid": 2074, "followup": 2074, "lil": 2077, "stark": 2077, "9093": 2077, "1411": 2077, "7568": 2077, "9589": 2077, "2794": 2077, "catastroph": 2077, "9900": 2077, "metadata_mask": 2077, "rce": 2077, "rc": 2077, "62": 2077, "to_sparse_semi_structur": 2077, "1x4": 2077, "16x16": 2077, "a_spars": 2077, "sparsesemistructuredtensor": 2077, "000": 2077, "400": 2077, "s2": 2077, "plain_dim_s": 2077, "lp64": 2077, "280": 2077, "310": 2077, "sp": 2077, "9078": 2077, "conception": 2077, "sparsesemistructur": 2077, "lobpcg": 2077, "geneig": 2077, "pca_lowrank": 2077, "kindli": 2077, "airy_ai": 2078, "airi": 2078, "9635": 2078, "entr": 2078, "3466": 2078, "int_": 2078, "8427": 2078, "0561": 2078, "4769": 2078, "9213": 2078, "8858": 2078, "7683": 2078, "7481": 2078, "2920": 2078, "int_0": 2078, "gammaln": 2078, "a1": 2078, "a2": 2078, "3528": 2078, "5665": 2078, "6472": 2078, "4335": 2078, "2650": 2078, "2661": 2078, "2796": 2078, "8808": 2078, "3019": 2078, "4658": 2078, "3085": 2078, "2430": 2078, "2070": 2078, "i1": 2078, "5652": 2078, "9534": 2078, "7595": 2078, "2153": 2078, "log_ndtr": 2078, "_ndtr": 2078, "6077": 2078, "7832": 2078, "841": 2078, "6931": 2078, "1728": 2078, "023": 2078, "9331": 2078, "6486": 2078, "1523": 2078, "6516": 2078, "6352": 2078, "6131": 2078, "7169": 2078, "6261": 2078, "displaystyl": 2078, "undefiend": 2078, "6835": 2078, "8474": 2078, "1929": 2078, "7162": 2078, "4180": 2078, "3928": 2078, "4007": 2078, "7586": 2078, "3901": 2078, "5049": 2078, "ndtr": 2078, "0228": 2078, "1587": 2078, "9772": 2078, "9987": 2078, "2p": 2078, "64493": 2078, "4041": 2078, "8288": 2078, "4939": 2078, "4091": 2078, "8863": 2078, "771": 2078, "scaled_modified_bessel_k0": 2078, "scaled_modified_bessel_k1": 2078, "2948": 2078, "0267": 2078, "1566": 2078, "9186": 2078, "8631": 2078, "0259": 2078, "1300": 2078, "spheric": 2078, "xlog1pi": 2078, "3863": 2078, "1972": 2078, "6094": 2078, "2189": 2078, "8283": 2078, "7726": 2078, "0986": 2078, "1589": 2078, "hurwitz": 2078, "6449": 2078, "0823": 2078, "untyp": 2079, "wrap_storag": 2079, "complex_doubl": 2079, "from_buff": 2079, "is_hpu": 2079, "pickle_storage_typ": 2079, "byteswap": 2079, "posix": 2079, "shm_unlink": 2079, "unlink": 2079, "quint2x4": [2079, 2084], "twelv": 2080, "halftensor": [2080, 2083], "bfloat16tensor": [2080, 2083], "chartensor": [2080, 2083], "shorttensor": [2080, 2083], "binary16": [2080, 2083], "significand": [2080, 2083], "float_tensor": 2080, "double_tensor": 2080, "complex_float_tensor": 2080, "complex_double_tensor": 2080, "int_tensor": 2080, "long_tensor": 2080, "uint_tensor": 2080, "bool_tensor": 2080, "long_zerodim": 2080, "int_zerodim": 2080, "cuda1": 2080, "channels_last_3d": 2080, "ndhwc": 2080, "blogpost": [2081, 2096], "totensor": 2082, "trainset": 2082, "mnist": 2082, "mnist_train": 2082, "trainload": 2082, "grayscal": 2082, "make_grid": 2082, "add_imag": 2082, "add_graph": 2082, "clutter": 2082, "n_iter": 2082, "purge_step": 2082, "max_queu": 2082, "flush_sec": 2082, "filename_suffix": 2082, "current_datetime_hostnam": 2082, "exp1": 2082, "global_step": 2082, "purg": 2082, "event_file_writ": 2082, "eventfilewrit": 2082, "may04_22": 2082, "54_": 2082, "macbook": 2082, "my_experi": 2082, "lr_0": 2082, "1_batch_16": 2082, "locallr_0": 2082, "scalar_valu": 2082, "walltim": 2082, "new_styl": 2082, "double_precis": 2082, "blobnam": 2082, "simple_valu": 2082, "main_tag": 2082, "tag_scalar_dict": 2082, "run_14h": 2082, "xsinx": 2082, "xcosx": 2082, "tanx": 2082, "add_histogram": 2082, "max_bin": 2082, "img_tensor": 2082, "dataformat": 2082, "chw": 2082, "hwc": 2082, "hw": 2082, "wh": 2082, "3xhxw": 2082, "img_hwc": 2082, "my_imag": 2082, "my_image_hwc": 2082, "img_batch": 2082, "my_image_batch": 2082, "add_figur": 2082, "add_video": 2082, "vid_tensor": 2082, "fp": 2082, "moviepi": 2082, "add_audio": 2082, "snd_tensor": 2082, "sample_r": 2082, "44100": 2082, "add_text": 2082, "text_str": 2082, "input_to_model": 2082, "use_strict_trac": 2082, "add_embed": 2082, "label_img": 2082, "metadata_head": 2082, "projector": 2082, "kwlist": 2082, "add_pr_curv": 2082, "num_threshold": 2082, "pr_curv": 2082, "add_custom_scalar": 2082, "chart": 2082, "categorynam": 2082, "chartnam": 2082, "listofproperti": 2082, "multilin": 2082, "taiwan": 2082, "twse": 2082, "0050": 2082, "2330": 2082, "dow": 2082, "aaa": 2082, "bbb": 2082, "ccc": 2082, "nasdaq": 2082, "add_mesh": 2082, "config_dict": 2082, "threej": 2082, "vertex": 2082, "number_of_vertic": 2082, "vertices_tensor": 2082, "colors_tensor": 2082, "faces_tensor": 2082, "my_mesh": 2082, "add_hparam": 2082, "hparam_dict": 2082, "metric_dict": 2082, "hparam_domain_discret": 2082, "run_nam": 2082, "hparam": 2082, "bsize": 2082, "uint16": [2083, 2099], "uint32": [2083, 2099], "uint64": [2083, 2099], "e4m3": 2083, "e5m2": 2083, "asid": 2083, "58734": 2083, "2209": 2083, "05433": 2083, "tini": [2083, 2084, 2102, 2112], "_like": 2083, "allow_subclass": 2084, "check_devic": 2084, "check_layout": 2084, "6e": 2084, "3e": 2084, "assert_equ": 2084, "000000000000001e": 2084, "1e0": 2084, "argh": 2084, "nfooter": 2084, "66": 2084, "footer": 2084, "exclude_zero": 2084, "1205": 2084, "2282": 2084, "6380": 2084, "default_gener": 2086, "click": [2086, 2105, 2106], "is_integ": 2086, "data_dependent_output": 2086, "dynamic_output_shap": 2086, "inplace_view": 2086, "needs_fixed_stride_ord": 2086, "nondeterministic_bitwis": 2086, "nondeterministic_seed": 2086, "pt2_compliant_tag": 2086, "compare_weight": 2087, "float_dict": 2087, "quantized_dict": 2087, "wt_compare_dict": 2087, "qmodel": 2087, "compute_error": 2087, "weight_dict": 2087, "get_logger_dict": 2087, "shadowlogg": 2087, "outputlogg": [2087, 2088], "target_dict": 2087, "q_modul": 2087, "logger_cl": [2087, 2088], "prepare_model_with_stub": 2087, "module_swap_list": 2087, "q_model": 2087, "ob_dict": 2087, "compare_model_stub": 2087, "quantizablebasicblock": 2087, "get_matching_activ": 2087, "act_dict": 2087, "prepare_model_output": 2087, "compare_model_output": 2087, "act_compare_dict": 2087, "weight_comparison": 2088, "extract_weight": 2088, "sqnr": 2088, "extend_logger_results_with_comparison": 2088, "compute_sqnr": 2088, "mp_n": 2088, "mq_n": 2088, "add_logg": 2088, "act_comparison": 2088, "extract_logger_info": 2088, "mp_shadows_mq": 2088, "add_shadow_logg": 2088, "shadow_act_comparison": 2088, "extract_shadow_logger_info": 2088, "ref_node_nam": 2088, "prev_node_nam": 2088, "model_nam": 2088, "ref_nam": 2088, "prev_node_target_typ": 2088, "ref_node_target_typ": 2088, "results_typ": 2088, "index_within_arg": 2088, "index_of_arg": 2088, "qconfig_str": 2088, "outputcomparisonlogg": 2088, "x_ref": 2088, "nstracer": 2088, "skipped_module_nam": 2088, "skipped_module_class": 2088, "model_name_a": 2088, "model_a": 2088, "model_name_b": 2088, "model_b": 2088, "base_name_to_sets_of_related_op": 2088, "unmatchable_types_map": 2088, "op_to_type_to_weight_extraction_fn": 2088, "nsresultstyp": 2088, "name_a": 2088, "name_b": 2088, "should_log_input": 2088, "model_a_with_logg": 2088, "model_b_with_logg": 2088, "model_name_to_use_for_layer_nam": 2088, "node_type_to_io_type_map": 2088, "model_a_shadows_b": 2088, "model_name_1": 2088, "model_name_2": 2088, "comparison_fn": 2088, "comparison_nam": 2088, "prepare_n_shadows_model": 2088, "qconfig_multi_map": 2088, "custom_prepare_fn": 2088, "custom_prepare_kwarg": 2088, "custom_trac": 2088, "args_kwargs_m": 2088, "op_m": 2088, "output_m": 2088, "op_m_n": 2088, "log_m_n": 2088, "log_m_0": 2088, "qconfig_n": 2088, "args_m": 2088, "op_m_prepared_with_qconfig_n": 2088, "out_m_n": 2088, "kwargs_m": 2088, "docblock": 2088, "loggers_set_en": 2088, "loggers_set_save_activ": 2088, "save_activ": 2088, "convert_n_shadows_model": 2088, "custom_convert_fn": 2088, "custom_convert_kwarg": 2088, "extract_results_n_shadows_model": 2088, "print_comparisons_n_shadows_model": 2088, "compute_normalized_l2_error": 2088, "compute_cosine_similar": 2088, "surfac": 2089, "openai": 2089, "ipex": 2089, "torch_tensorrt": 2089, "tvm": 2089, "apach": 2089, "openvino": 2089, "aotinductor": 2089, "dashboard": [2089, 2097, 2102], "nnmodul": 2089, "craft": 2090, "aot_compil": 2090, "batch_dim": 2090, "so_path": 2090, "aot_inductor": 2090, "output_path": 2090, "getcwd": 2090, "model_container_runner_cuda": 2090, "model_container_runner_cpu": 2090, "aotimodelcontainerrunnercuda": 2090, "aotimodelcontainerrunnercpu": 2090, "kcuda": 2090, "kcpu": 2090, "aoti_runn": 2090, "runner": 2090, "inputs2": 2090, "cmakelist": 2090, "aoti_exampl": 2090, "cmake_minimum_requir": 2090, "fatal_error": 2090, "find_packag": 2090, "add_execut": 2090, "add_custom_command": 2090, "cmake_current_source_dir": 2090, "target_link_librari": 2090, "set_properti": 2090, "cxx_standard": 2090, "cmake_prefix_path": 2090, "mkdir": 2090, "5184": 2090, "4462": 2090, "4611": 2090, "4744": 2090, "4811": 2090, "4938": 2090, "4193": 2090, "cudafloattyp": 2090, "4883": 2090, "4703": 2090, "simd": 2092, "isa": 2092, "amx": 2092, "collect_env": 2092, "avx512f": 2092, "avx512bw": 2092, "avx512_vnni": 2092, "amx_til": 2092, "amx_bf16": 2092, "amx_int8": 2092, "debut": 2093, "cachingalloc": 2093, "cudagraph_tre": 2093, "unintend": 2093, "prematur": 2093, "mark_step_begin": 2093, "footgun": [2093, 2098], "my_custom_backend": 2094, "f_opt": 2094, "my_compil": [2094, 2097], "torch_dynamo_backend": 2094, "your_modul": 2094, "minifi": [2094, 2099], "aot_autograd": 2094, "fw_compil": 2094, "bw_compil": 2094, "make_boxed_func": 2094, "model_opt": 2094, "0x7f1a894649a8": 2094, "mockmodul": 2094, "optimized_mod": 2094, "toy_exampl": [2094, 2097, 2099, 2108], "abs_1": [2094, 2097], "0x7f8d259298a0": 2094, "superior": 2094, "optimize_for_inference_compil": 2094, "code_to_acceler": 2094, "lookup_backend": 2094, "trt_compil": 2094, "inductor_compil": 2094, "recognit": 2095, "induct": 2095, "mark_dynam": [2095, 2096], "shapeenv": [2095, 2098], "reusabl": 2095, "plumb": 2095, "symnodeimpl": 2095, "python_symnod": 2095, "_meta_registr": 2095, "decomp": [2095, 2098], "primtorch": [2095, 2098], "apparatu": 2095, "precomput": 2095, "constrain_rang": 2095, "wherebi": 2095, "blame": 2096, "insan": 2096, "backtrac": [2096, 2098, 2108], "blindli": 2096, "arduou": 2096, "mse": 2096, "l_x_": 2096, "l_y_": 2096, "l_n_": 2096, "sequel": 2096, "_convert_frame_assert": 2096, "variabletrack": 2096, "listvari": 2096, "constantvari": [2096, 2099, 2108], "tensorvari": [2096, 2099, 2108], "variablebuild": 2096, "_wrap": 2096, "userdefinedobjectvari": 2096, "sourcebuild": 2096, "load_glob": [2096, 2097], "torchingraphfunctionvari": 2096, "instructortranslatorbas": 2096, "symbolic_convert": [2096, 2108], "instructiontranslatorbas": 2096, "build_list": 2096, "inst": 2096, "popn": 2096, "argval": 2096, "mutable_loc": 2096, "mutableloc": 2096, "instructiontransl": 2096, "wrap_fx_proxi": 2096, "overkil": 2096, "___check_type_id": 2096, "94334122025024": 2096, "9433": 2096, "getitemsourc": 2096, "94439025877664": 2096, "94439025840192": 2096, "saw": 2096, "l_a_": [2096, 2097], "l_b_": [2096, 2097], "__compiled_fn_1": 2096, "check_tensor": [2096, 2097], "maybe_mark_dynam": 2096, "mark_stat": 2096, "rout": 2096, "symnodevari": 2096, "812": 2096, "django": 2096, "rust": 2096, "choke": 2096, "doctr_det_predictor": 2096, "cv2": 2096, "postprocess": 2096, "confess": 2096, "revisit": 2096, "__compiled_fn_0": [2096, 2097], "load_fast": [2096, 2097], "store_fast": [2096, 2097], "graph_out_0": 2096, "load_const": [2096, 2097], "binary_subscr": 2096, "__resume_at_14_1": 2096, "rot_two": 2096, "resume_in_fn": 2096, "__compiled_fn_2": 2096, "unpack_sequ": [2096, 2097], "l6": 2096, "l8": 2096, "l20": 2096, "l22": 2096, "hamper": 2096, "ride": 2096, "demystifi": 2096, "literatur": 2096, "eval_fram": [2096, 2097], "lingo": 2096, "interestingli": 2096, "523": 2097, "watch": 2097, "kaichao": 2097, "_dynamo_dynamic_indic": 2097, "utils_devic": 2097, "___skip_backend_check": 2097, "___current_backend": 2097, "___lookup_backend": 2097, "140355900538256": 2097, "dispatchkeyset": 2097, "backendselect": 2097, "adinplaceorview": 2097, "autogradcpu": 2097, "recaptur": 2097, "decompil": 2097, "depyf": 2097, "eval_with_kei": 2097, "0x7f9ca082f8a0": 2097, "load_method": 2097, "binary_add": 2097, "binary_true_divid": 2097, "compare_op": 2097, "pop_jump_if_fals": 2097, "binary_multipli": 2097, "__resume_at_30_1": 2097, "__resume_at_38_2": 2097, "__temp_1": 2097, "youkaichao": 2097, "__resume_at_": 2097, "jump_absolut": 2097, "resume_at": 2097, "_debug_get_cache_entry_list": 2097, "__code__": 2097, "codetyp": 2097, "innermost_fn": 2097, "cache_entri": 2097, "check_fn": 2097, "code_part": 2097, "___guarded_cod": 2097, "___check_global_st": 2097, "140215810860528": 2097, "___check_tensor": 2097, "tensor_check_nam": 2097, "co_freevar": 2097, "__closure__": 2097, "___is_grad_en": 2097, "___are_deterministic_algorithms_en": 2097, "___is_torch_function_en": 2097, "value_a": 2097, "value_b": 2097, "__self__": 2097, "compiled_exampl": 2097, "get_cache_entri": 2097, "recompile_and_add_another_cache_entri": 2097, "trash": 2098, "subclass_zoo": 2098, "bunch": 2098, "from_real_tensor": 2098, "fakeifi": 2098, "dispatch_devic": 2098, "ly": 2098, "derefer": 2098, "in_kernel_invocation_manag": 2098, "unwrap": 2098, "test_fake_tensor": 2098, "fake_mod": 2098, "fake_x": 2098, "fake_i": 2098, "fake_z": 2098, "_guard": 2098, "detect_fake_mod": 2098, "fake_arg": 2098, "maybe_disable_fake_tensor_mod": 2098, "nich": 2098, "faketensorprop": 2098, "fake_tensor_prop": 2098, "propagate_dont_convert_input": 2098, "fake_input": 2098, "real_tensor": 2098, "annoi": 2098, "somehow": 2098, "fakecopymod": 2098, "gave": 2098, "fakeif": 2098, "tension": 2098, "analys": 2098, "metaconvert": 2098, "die": 2098, "saroufim": 2099, "evalfram": 2099, "usercod": 2099, "rob": 2099, "diminish": 2099, "vast": 2099, "250k": 2099, "aitempl": 2099, "aot_eag": [2099, 2108], "compile_tim": [2099, 2106, 2108], "torch_compile_debug": [2099, 2101], "troubl": [2099, 2100, 2108], "compileprofil": [2099, 2108], "profiler_model": [2099, 2108], "traffic": 2099, "frozen_toy_exampl": 2099, "multiprocessor": 2099, "some_fun": [2099, 2108], "insurmount": [2099, 2108], "woo": [2099, 2108], "framesummari": [2099, 2108], "generic_jump": [2099, 2108], "torch_dynamo_resume_in_toy_example_at_5": [2099, 2108], "torchdynamo_dynamic_shap": 2099, "cv": 2099, "app": 2099, "unnecessarili": 2099, "cold": [2099, 2105], "visibli": 2099, "torchdynamo_repro_level": [2099, 2108], "bisect": [2099, 2108], "torchdynamo_repro_aft": [2099, 2108], "dramat": [2099, 2108], "wrapper_fn": 2099, "my_fn": 2099, "pitfal": 2099, "_indices_from": 2099, "recarrai": 2099, "float128": 2099, "complex256": 2099, "esoter": 2099, "ufunc": 2099, "poly1d": 2099, "__array_wrap__": 2099, "ctype": 2099, "numpy_fn": 2099, "tweak": 2099, "wrap_numpi": 2099, "charg": 2099, "oop": 2099, "costli": 2099, "daunt": 2099, "diagnos": 2099, "pinpoint": 2099, "discern": 2099, "trace_numpi": 2099, "_numpi": 2099, "uncommon": 2099, "finer": 2099, "a_fn": [2099, 2100], "aa_fn": [2099, 2100], "ab_fn": [2099, 2100], "handel": 2100, "unblock": 2100, "nnthi": 2100, "black": 2100, "nnnote": 2100, "screen": [2100, 2106], "is_dynamo_compil": 2100, "b_fn": 2100, "white": 2100, "new_fn": 2101, "famou": 2101, "crunch": 2101, "torchinductor_": 2101, "your_usernam": 2101, "triton_meta": 2101, "i32": 2101, "mutated_arg_nam": 2101, "instance_descriptor": 2101, "divisible_by_16": 2101, "equal_to_1": 2101, "triton_": [2101, 2106], "in_ptr0": 2101, "out_ptr0": 2101, "xnumel": 2101, "xblock": 2101, "tl": 2101, "constexpr": 2101, "xoffset": 2101, "program_id": 2101, "xindex": 2101, "xmask": 2101, "tmp0": 2101, "tmp1": 2101, "tmp2": 2101, "v0": 2101, "opt_model": 2101, "timm": [2101, 2105], "berttoken": 2101, "bertmodel": 2101, "uncas": 2101, "me": 2101, "encoded_input": 2101, "return_tensor": 2101, "trigonometri": 2101, "skim": 2101, "create_model": 2101, "resnext101_32x8d": 2101, "torchinductor_unique_kernel_nam": 2102, "triton_poi_fused_cat_155": 2102, "poi": 2102, "torchinductor_benchmark_kernel": 2102, "har": 2102, "torchinductor_max_autotun": 2102, "mixnet_l": 2102, "timm_model": 2102, "torchinductor_shunt": 2102, "qz": 2102, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 2102, "shunting314": 2102, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 2102, "48efc83b12ec3ead950052e4a0220b10": 2102, "compiled_module_profil": 2102, "browser": [2102, 2106], "zoom": [2102, 2106, 2110], "distort": [2102, 2106], "densenet121": 2102, "69": 2102, "cutlass": 2102, "57": 2102, "ff": 2102, "justifi": 2102, "triton_red_fus": 2102, "__native_batch_norm_legit_functional_16": 2102, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 2102, "_adaptive_avg_pool2d_backward": 2103, "half_to_float": 2103, "no_stat": 2103, "start_step": 2103, "avg_pool2d_backward": 2103, "convolution_backward": 2103, "bias_siz": 2103, "output_mask": 2103, "scalar_mod": 2103, "tensor_mod": 2103, "embedding_dense_backward": 2103, "num_weight": 2103, "max_pool2d_with_indices_backward": 2103, "native_group_norm_backward": 2103, "rstd": 2103, "native_layer_norm_backward": 2103, "tensor_scalar": 2103, "tensor_tensor": 2103, "dim_int": 2103, "dim_intlist": 2103, "broadcast_dimens": 2103, "start_indic": 2103, "limit_indic": 2103, "start_index": 2103, "limit_index": 2103, "outer_length": 2103, "constabl": 2104, "_forward_pre_hook": 2104, "_backward_pre_hook": 2104, "_backward_hook": 2104, "_state_dict_hook": 2104, "load_": 2104, "avoiabl": 2104, "skip_nnmodule_hook_guard": 2104, "pre_backward": 2104, "warn_onc": 2104, "hui": 2105, "nightli": 2105, "night": 2105, "40gb": [2105, 2108], "2ghz": 2105, "torchbench": 2105, "trend": 2105, "droplist": 2105, "with_cudagraph": 2105, "toosl": 2106, "ncu": 2106, "model_c": 2106, "fwd_bwd": 2106, "scroll": 2106, "shortcut": 2106, "compiledfunctionbackward": 2106, "ac2g": 2106, "dropdown": 2106, "525": 2106, "_init_for_cuda_graph": 2106, "warmup_compil": 2106, "fn_c": 2106, "trace_compil": 2106, "meanwhil": 2106, "clue": 2106, "synthet": 2106, "modelwithbreak": 2106, "create_sequenti": 2106, "mod1": 2106, "mod2": 2106, "mod3": 2106, "mod4": 2106, "trace_break": 2106, "culaunchkernel": 2106, "cudalaunchkernel": 2106, "unique_kernel_nam": 2106, "sit": 2107, "replace_add_with_mul": 2107, "insert_relu_after_add": 2107, "new_relu_nod": 2107, "replaceaddwithmul": 2107, "transformed_graph_modul": 2107, "replaceaddwithmulsub": 2107, "mul_r": 2107, "removedetachpass": 2107, "args_map": 2107, "_schema": 2107, "kwarg_onli": 2107, "scalartotensorpass": 2107, "try_coerc": 2107, "replace_pattern": 2107, "replaced_pattern": 2107, "replace_pattern_with_filt": 2107, "replacedpattern": 2107, "passmanag": 2107, "pass_manag": 2107, "pm": 2107, "replace_add_with_div": 2107, "replace_div_with_mul": 2107, "run_checks_after_each_pass": 2107, "suppress_check_failur": 2107, "graph_module_out": 2107, "set_check": 2107, "check_div_target": 2107, "add_check": 2107, "subgraphmatch": 2107, "matcher_util": 2107, "match_output": 2107, "match_placehold": 2107, "remove_overlapping_match": 2107, "ignore_liter": 2107, "largemodel": 2107, "_bia": 2107, "large_model_graph": 2107, "patternmodel": 2107, "_weight_1": 2107, "_bias_1": 2107, "pattern_graph": 2107, "subgraph_match": 2107, "match_result": 2107, "internalmatch": 2107, "placeholder_nod": 2107, "returning_nod": 2107, "capabilitybasedpartition": 2107, "l34": 2107, "operator_support": 2107, "operatorsupportbas": 2107, "allows_single_node_partit": 2107, "non_compute_op": 2107, "_oper": 2107, "allowed_single_node_partition_op": 2107, "ll28c1": 2107, "l28c1": 2107, "is_node_support": 2107, "l150": 2107, "any_chain": 2107, "l164": 2107, "addmuloperatorsupport": 2107, "capability_partition": 2107, "op_support": 2107, "partition_list": 2107, "propose_partit": 2107, "fused_graph_modul": 2107, "fuse_partit": 2107, "lazo": 2108, "torchdynamo_verbos": 2108, "replay_record_en": 2108, "torchdynamo_debug_funct": 2108, "test_assertion_error": 2108, "compiled_test_assertion_error": 2108, "convert_fram": 2108, "mlazo": 2108, "837": 2108, "build_map": 2108, "log_level": 2108, "thousand": 2108, "test_backend_error": 2108, "compiled_test_backend_error": 2108, "decomp_fn": 2108, "810": 2108, "repro_aft": 2108, "minifier_launch": 2108, "base_dir": 2108, "rand_strid": 2108, "0a0": 2108, "gitfddfc44": 2108, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 2108, "2022": 2108, "thu_feb_10_18": 2108, "41_pst_2022": 2108, "v11": 2108, "cuda_11": 2108, "r11": 2108, "30978841_0": 2108, "sxm4": 2108, "compile_fx": 2108, "compile_fx_inn": 2108, "toy_compil": 2108, "debug_util": 2108, "run_fwd_maybe_bwd": 2108, "opt_mod": 2108, "rg": 2108, "test_model": 2108, "debug_dir_root": 2108, "torch_compile_debug_dir": 2108, "run_2023_03_01_08_20_52_143510": 2108, "pid_180167": 2108, "model__0_forward_1": 2108, "aot_model___0_debug": 2108, "fx_graph_read": 2108, "fx_graph_runn": 2108, "fx_graph_transform": 2108, "ir_post_fus": 2108, "ir_pre_fus": 2108, "fx_graph": 2108, "buf1": 2108, "schedulernod": 2108, "computedbuff": 2108, "memorydep": 2108, "unmet_depend": 2108, "buf0": 2108, "met_depend": 2108, "primals_2": 2108, "buf1_loop_bodi": 2108, "var_rang": 2108, "z0": 2108, "index0": 2108, "index1": 2108, "get_index": 2108, "get_index_1": 2108, "load_1": 2108, "get_index_2": 2108, "compiled_fun": 2108, "hinder": 2108, "explanation_verbos": 2108, "out_guard": 2108, "ops_per_graph": 2108, "compiled_toi": 2108, "torchdynamo_extended_debug_guard_ad": 2108, "torchdynamo_extended_debug_create_symbol": 2108, "torchdynamo_extended_debug_cpp": 2108, "torchinductor_force_disable_cach": 2108, "force_disable_cach": 2108, "as_subclass": 2109, "handle_torch_funct": 2109, "public_api": 2109, "relevant_arg": 2109, "has_torch_function_unari": 2109, "is_tensor_lik": 2109, "notatensor": 2109, "tensorlik": 2109, "is_tensor_method_or_properti": 2109, "__get__": 2109, "__module__": 2109, "wrap_torch_funct": 2109, "drag": 2110, "interactiv": 2110, "memory_viz": 2110, "run_your_cod": 2110, "my_snapshot": 2110, "javascript": 2110, "upload": 2110, "pan": 2110, "mous": 2110, "slider": 2110, "b7f064c000000_0": 2110, "7f064c000000": 2110, "max_entri": 2110, "_memory_viz": 2110, "2u": 2110, "50n": 2110, "currenli": 2110, "typeddict": 2110, "device_trac": 2110, "traceentri": 2110, "total_s": 2110, "segment_typ": 2110, "allocated_s": 2110, "active_s": 2110, "active_awaiting_fre": 2110, "requested_s": 2110, "active_alloc": 2110, "took": 2110, "free_request": 2110, "free_complet": 2110, "segment_alloc": 2110, "segment_fre": 2110, "coorel": 2110, "device_fre": 2110, "dump_snapshot": 2110, "interplai": 2111, "smallest_norm": 2112, "subnorm": 2112, "denormal_numb": 2112, "tailor": 2114}, "objects": {"": [[2086, 0, 0, "-", "torch"], [2010, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[2079, 1, 1, "", "BFloat16Storage"], [2079, 1, 1, "", "BoolStorage"], [2079, 1, 1, "", "ByteStorage"], [2079, 1, 1, "", "CharStorage"], [2079, 1, 1, "", "ComplexDoubleStorage"], [2079, 1, 1, "", "ComplexFloatStorage"], [2079, 1, 1, "", "DoubleStorage"], [2079, 1, 1, "", "FloatStorage"], [88, 1, 1, "", "Generator"], [2079, 1, 1, "", "HalfStorage"], [2079, 1, 1, "", "IntStorage"], [2079, 1, 1, "", "LongStorage"], [2079, 1, 1, "", "QInt32Storage"], [2079, 1, 1, "", "QInt8Storage"], [2079, 1, 1, "", "QUInt2x4Storage"], [2079, 1, 1, "", "QUInt4x2Storage"], [2079, 1, 1, "", "QUInt8Storage"], [2079, 1, 1, "", "ShortStorage"], [2076, 1, 1, "", "Size"], [2086, 1, 1, "", "SymBool"], [2086, 1, 1, "", "SymFloat"], [2086, 1, 1, "", "SymInt"], [2086, 1, 1, "", "Tag"], [2083, 1, 1, "", "Tensor"], [2079, 1, 1, "", "TypedStorage"], [2079, 1, 1, "", "UntypedStorage"], [13, 0, 0, "-", "__config__"], [60, 0, 0, "-", "__future__"], [624, 5, 1, "", "_assert"], [625, 5, 1, "", "_foreach_abs"], [626, 5, 1, "", "_foreach_abs_"], [627, 5, 1, "", "_foreach_acos"], [628, 5, 1, "", "_foreach_acos_"], [629, 5, 1, "", "_foreach_asin"], [630, 5, 1, "", "_foreach_asin_"], [631, 5, 1, "", "_foreach_atan"], [632, 5, 1, "", "_foreach_atan_"], [633, 5, 1, "", "_foreach_ceil"], [634, 5, 1, "", "_foreach_ceil_"], [635, 5, 1, "", "_foreach_cos"], [636, 5, 1, "", "_foreach_cos_"], [637, 5, 1, "", "_foreach_cosh"], [638, 5, 1, "", "_foreach_cosh_"], [639, 5, 1, "", "_foreach_erf"], [640, 5, 1, "", "_foreach_erf_"], [641, 5, 1, "", "_foreach_erfc"], [642, 5, 1, "", "_foreach_erfc_"], [643, 5, 1, "", "_foreach_exp"], [644, 5, 1, "", "_foreach_exp_"], [645, 5, 1, "", "_foreach_expm1"], [646, 5, 1, "", "_foreach_expm1_"], [647, 5, 1, "", "_foreach_floor"], [648, 5, 1, "", "_foreach_floor_"], [649, 5, 1, "", "_foreach_frac"], [650, 5, 1, "", "_foreach_frac_"], [651, 5, 1, "", "_foreach_lgamma"], [652, 5, 1, "", "_foreach_lgamma_"], [653, 5, 1, "", "_foreach_log"], [654, 5, 1, "", "_foreach_log10"], [655, 5, 1, "", "_foreach_log10_"], [656, 5, 1, "", "_foreach_log1p"], [657, 5, 1, "", "_foreach_log1p_"], [658, 5, 1, "", "_foreach_log2"], [659, 5, 1, "", "_foreach_log2_"], [660, 5, 1, "", "_foreach_log_"], [661, 5, 1, "", "_foreach_neg"], [662, 5, 1, "", "_foreach_neg_"], [663, 5, 1, "", "_foreach_reciprocal"], [664, 5, 1, "", "_foreach_reciprocal_"], [665, 5, 1, "", "_foreach_round"], [666, 5, 1, "", "_foreach_round_"], [667, 5, 1, "", "_foreach_sigmoid"], [668, 5, 1, "", "_foreach_sigmoid_"], [669, 5, 1, "", "_foreach_sin"], [670, 5, 1, "", "_foreach_sin_"], [671, 5, 1, "", "_foreach_sinh"], [672, 5, 1, "", "_foreach_sinh_"], [673, 5, 1, "", "_foreach_sqrt"], [674, 5, 1, "", "_foreach_sqrt_"], [675, 5, 1, "", "_foreach_tan"], [676, 5, 1, "", "_foreach_tan_"], [677, 5, 1, "", "_foreach_trunc"], [678, 5, 1, "", "_foreach_trunc_"], [679, 5, 1, "", "_foreach_zero_"], [2019, 0, 0, "-", "_logging"], [681, 5, 1, "", "abs"], [682, 5, 1, "", "absolute"], [683, 5, 1, "", "acos"], [684, 5, 1, "", "acosh"], [685, 5, 1, "", "add"], [686, 5, 1, "", "addbmm"], [687, 5, 1, "", "addcdiv"], [688, 5, 1, "", "addcmul"], [689, 5, 1, "", "addmm"], [690, 5, 1, "", "addmv"], [691, 5, 1, "", "addr"], [692, 5, 1, "", "adjoint"], [693, 5, 1, "", "all"], [694, 5, 1, "", "allclose"], [695, 5, 1, "", "amax"], [696, 5, 1, "", "amin"], [697, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [698, 5, 1, "", "angle"], [699, 5, 1, "", "any"], [2067, 0, 0, "-", "ao"], [866, 5, 1, "", "arange"], [867, 5, 1, "", "arccos"], [868, 5, 1, "", "arccosh"], [869, 5, 1, "", "arcsin"], [870, 5, 1, "", "arcsinh"], [871, 5, 1, "", "arctan"], [872, 5, 1, "", "arctan2"], [873, 5, 1, "", "arctanh"], [874, 5, 1, "", "are_deterministic_algorithms_enabled"], [875, 5, 1, "", "argmax"], [876, 5, 1, "", "argmin"], [877, 5, 1, "", "argsort"], [878, 5, 1, "", "argwhere"], [879, 5, 1, "", "as_strided"], [880, 5, 1, "", "as_tensor"], [881, 5, 1, "", "asarray"], [882, 5, 1, "", "asin"], [883, 5, 1, "", "asinh"], [884, 5, 1, "", "atan"], [885, 5, 1, "", "atan2"], [886, 5, 1, "", "atanh"], [887, 5, 1, "", "atleast_1d"], [888, 5, 1, "", "atleast_2d"], [889, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [941, 5, 1, "", "baddbmm"], [942, 5, 1, "", "bartlett_window"], [943, 5, 1, "", "bernoulli"], [944, 5, 1, "", "bincount"], [945, 5, 1, "", "bitwise_and"], [946, 5, 1, "", "bitwise_left_shift"], [947, 5, 1, "", "bitwise_not"], [948, 5, 1, "", "bitwise_or"], [949, 5, 1, "", "bitwise_right_shift"], [950, 5, 1, "", "bitwise_xor"], [951, 5, 1, "", "blackman_window"], [952, 5, 1, "", "block_diag"], [953, 5, 1, "", "bmm"], [954, 5, 1, "", "broadcast_shapes"], [955, 5, 1, "", "broadcast_tensors"], [956, 5, 1, "", "broadcast_to"], [957, 5, 1, "", "bucketize"], [958, 5, 1, "", "can_cast"], [959, 5, 1, "", "cartesian_prod"], [960, 5, 1, "", "cat"], [961, 5, 1, "", "cdist"], [962, 5, 1, "", "ceil"], [963, 5, 1, "", "chain_matmul"], [964, 5, 1, "", "cholesky"], [965, 5, 1, "", "cholesky_inverse"], [966, 5, 1, "", "cholesky_solve"], [967, 5, 1, "", "chunk"], [968, 5, 1, "", "clamp"], [969, 5, 1, "", "clip"], [970, 5, 1, "", "clone"], [971, 5, 1, "", "column_stack"], [972, 5, 1, "", "combinations"], [973, 5, 1, "", "compile"], [974, 5, 1, "", "compiled_with_cxx11_abi"], [2091, 0, 0, "-", "compiler"], [984, 5, 1, "", "complex"], [985, 5, 1, "", "concat"], [986, 5, 1, "", "concatenate"], [987, 5, 1, "", "cond"], [988, 5, 1, "", "conj"], [989, 5, 1, "", "conj_physical"], [2086, 0, 0, "-", "contrib"], [990, 5, 1, "", "copysign"], [991, 5, 1, "", "corrcoef"], [992, 5, 1, "", "cos"], [993, 5, 1, "", "cosh"], [994, 5, 1, "", "count_nonzero"], [995, 5, 1, "", "cov"], [16, 0, 0, "-", "cpu"], [1005, 5, 1, "", "cross"], [17, 0, 0, "-", "cuda"], [1085, 5, 1, "", "cummax"], [1086, 5, 1, "", "cummin"], [1087, 5, 1, "", "cumprod"], [1088, 5, 1, "", "cumsum"], [1089, 5, 1, "", "cumulative_trapezoid"], [1090, 5, 1, "", "deg2rad"], [1091, 5, 1, "", "dequantize"], [1092, 5, 1, "", "det"], [2080, 1, 1, "", "device"], [1093, 5, 1, "", "diag"], [1094, 5, 1, "", "diag_embed"], [1095, 5, 1, "", "diagflat"], [1096, 5, 1, "", "diagonal"], [1097, 5, 1, "", "diagonal_scatter"], [1098, 5, 1, "", "diff"], [1099, 5, 1, "", "digamma"], [1100, 5, 1, "", "dist"], [27, 0, 0, "-", "distributed"], [34, 0, 0, "-", "distributions"], [1101, 5, 1, "", "div"], [1102, 5, 1, "", "divide"], [1103, 5, 1, "", "dot"], [1104, 5, 1, "", "dsplit"], [1105, 5, 1, "", "dstack"], [2080, 1, 1, "", "dtype"], [1106, 5, 1, "", "einsum"], [1107, 5, 1, "", "empty"], [1108, 5, 1, "", "empty_like"], [1109, 5, 1, "", "empty_strided"], [1110, 1, 1, "", "enable_grad"], [1111, 5, 1, "", "eq"], [1112, 5, 1, "", "equal"], [1113, 5, 1, "", "erf"], [1114, 5, 1, "", "erfc"], [1115, 5, 1, "", "erfinv"], [1116, 5, 1, "", "exp"], [1117, 5, 1, "", "exp2"], [1118, 5, 1, "", "expm1"], [50, 0, 0, "-", "export"], [1119, 5, 1, "", "eye"], [1120, 5, 1, "", "fake_quantize_per_channel_affine"], [1121, 5, 1, "", "fake_quantize_per_tensor_affine"], [52, 0, 0, "-", "fft"], [1144, 5, 1, "", "fix"], [1145, 5, 1, "", "flatten"], [1146, 5, 1, "", "flip"], [1147, 5, 1, "", "fliplr"], [1148, 5, 1, "", "flipud"], [1149, 5, 1, "", "float_power"], [1150, 5, 1, "", "floor"], [1151, 5, 1, "", "floor_divide"], [1152, 5, 1, "", "fmax"], [1153, 5, 1, "", "fmin"], [1154, 5, 1, "", "fmod"], [1155, 5, 1, "", "frac"], [1156, 5, 1, "", "frexp"], [1157, 5, 1, "", "from_dlpack"], [1158, 5, 1, "", "from_file"], [1159, 5, 1, "", "from_numpy"], [1160, 5, 1, "", "frombuffer"], [1161, 5, 1, "", "full"], [1162, 5, 1, "", "full_like"], [55, 0, 0, "-", "func"], [2086, 0, 0, "-", "functional"], [61, 0, 0, "-", "futures"], [62, 0, 0, "-", "fx"], [1210, 5, 1, "", "gather"], [1211, 5, 1, "", "gcd"], [1212, 5, 1, "", "ge"], [1213, 5, 1, "", "geqrf"], [1214, 5, 1, "", "ger"], [1215, 5, 1, "", "get_default_device"], [1216, 5, 1, "", "get_default_dtype"], [1217, 5, 1, "", "get_deterministic_debug_mode"], [1218, 5, 1, "", "get_device_module"], [1219, 5, 1, "", "get_float32_matmul_precision"], [1220, 5, 1, "", "get_num_interop_threads"], [1221, 5, 1, "", "get_num_threads"], [1222, 5, 1, "", "get_rng_state"], [1223, 5, 1, "", "gradient"], [1224, 5, 1, "", "greater"], [1225, 5, 1, "", "greater_equal"], [1226, 5, 1, "", "gt"], [1227, 5, 1, "", "hamming_window"], [1228, 5, 1, "", "hann_window"], [1229, 5, 1, "", "heaviside"], [1230, 5, 1, "", "histc"], [1231, 5, 1, "", "histogram"], [1232, 5, 1, "", "histogramdd"], [1233, 5, 1, "", "hsplit"], [1234, 5, 1, "", "hspmm"], [1235, 5, 1, "", "hstack"], [2008, 0, 0, "-", "hub"], [1236, 5, 1, "", "hypot"], [1237, 5, 1, "", "i0"], [1238, 5, 1, "", "igamma"], [1239, 5, 1, "", "igammac"], [1240, 5, 1, "", "imag"], [1241, 5, 1, "", "index_add"], [1242, 5, 1, "", "index_copy"], [1243, 5, 1, "", "index_reduce"], [1244, 5, 1, "", "index_select"], [1245, 5, 1, "", "initial_seed"], [1246, 5, 1, "", "inner"], [1247, 5, 1, "", "inverse"], [1248, 5, 1, "", "is_complex"], [1249, 5, 1, "", "is_conj"], [1250, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1251, 5, 1, "", "is_floating_point"], [1252, 5, 1, "", "is_grad_enabled"], [1253, 5, 1, "", "is_inference_mode_enabled"], [1254, 5, 1, "", "is_nonzero"], [1255, 5, 1, "", "is_storage"], [1256, 5, 1, "", "is_tensor"], [1257, 5, 1, "", "is_warn_always_enabled"], [1258, 5, 1, "", "isclose"], [1259, 5, 1, "", "isfinite"], [1260, 5, 1, "", "isin"], [1261, 5, 1, "", "isinf"], [1262, 5, 1, "", "isnan"], [1263, 5, 1, "", "isneginf"], [1264, 5, 1, "", "isposinf"], [1265, 5, 1, "", "isreal"], [1266, 5, 1, "", "istft"], [2010, 0, 0, "-", "jit"], [1289, 5, 1, "", "kaiser_window"], [1290, 5, 1, "", "kron"], [1291, 5, 1, "", "kthvalue"], [2080, 1, 1, "", "layout"], [1292, 5, 1, "", "lcm"], [1293, 5, 1, "", "ldexp"], [1294, 5, 1, "", "le"], [1295, 5, 1, "", "lerp"], [1296, 5, 1, "", "less"], [1297, 5, 1, "", "less_equal"], [1298, 5, 1, "", "lgamma"], [2017, 0, 0, "-", "library"], [2018, 0, 0, "-", "linalg"], [1340, 5, 1, "", "linspace"], [1341, 5, 1, "", "load"], [1342, 5, 1, "", "lobpcg"], [1343, 5, 1, "", "log"], [1344, 5, 1, "", "log10"], [1345, 5, 1, "", "log1p"], [1346, 5, 1, "", "log2"], [1347, 5, 1, "", "logaddexp"], [1348, 5, 1, "", "logaddexp2"], [1349, 5, 1, "", "logcumsumexp"], [1350, 5, 1, "", "logdet"], [1351, 5, 1, "", "logical_and"], [1352, 5, 1, "", "logical_not"], [1353, 5, 1, "", "logical_or"], [1354, 5, 1, "", "logical_xor"], [1355, 5, 1, "", "logit"], [1356, 5, 1, "", "logspace"], [1357, 5, 1, "", "logsumexp"], [1358, 5, 1, "", "lt"], [1359, 5, 1, "", "lu"], [1360, 5, 1, "", "lu_solve"], [1361, 5, 1, "", "lu_unpack"], [1362, 5, 1, "", "manual_seed"], [2020, 0, 0, "-", "masked"], [1363, 5, 1, "", "masked_select"], [1364, 5, 1, "", "matmul"], [1365, 5, 1, "", "matrix_exp"], [1366, 5, 1, "", "matrix_power"], [1367, 5, 1, "", "max"], [1368, 5, 1, "", "maximum"], [1369, 5, 1, "", "mean"], [1370, 5, 1, "", "median"], [2080, 1, 1, "", "memory_format"], [1371, 5, 1, "", "meshgrid"], [1372, 5, 1, "", "min"], [1373, 5, 1, "", "minimum"], [1374, 5, 1, "", "mm"], [1375, 5, 1, "", "mode"], [2026, 0, 0, "-", "monitor"], [1376, 5, 1, "", "moveaxis"], [1377, 5, 1, "", "movedim"], [2027, 0, 0, "-", "mps"], [1392, 5, 1, "", "msort"], [2028, 0, 0, "-", "mtia"], [1408, 5, 1, "", "mul"], [1409, 5, 1, "", "multinomial"], [1410, 5, 1, "", "multiply"], [2029, 0, 0, "-", "multiprocessing"], [1411, 5, 1, "", "mv"], [1412, 5, 1, "", "mvlgamma"], [1413, 5, 1, "", "nan_to_num"], [1414, 5, 1, "", "nanmean"], [1415, 5, 1, "", "nanmedian"], [1416, 5, 1, "", "nanquantile"], [1417, 5, 1, "", "nansum"], [1418, 5, 1, "", "narrow"], [1419, 5, 1, "", "narrow_copy"], [1420, 5, 1, "", "ne"], [1421, 5, 1, "", "neg"], [1422, 5, 1, "", "negative"], [2032, 0, 0, "-", "nested"], [1423, 5, 1, "", "nextafter"], [2033, 0, 0, "-", "nn"], [1766, 1, 1, "", "no_grad"], [1767, 5, 1, "", "nonzero"], [1768, 5, 1, "", "norm"], [1769, 5, 1, "", "normal"], [1770, 5, 1, "", "not_equal"], [1771, 5, 1, "", "numel"], [1772, 5, 1, "", "ones"], [1773, 5, 1, "", "ones_like"], [2061, 0, 0, "-", "onnx"], [2063, 0, 0, "-", "optim"], [1810, 5, 1, "", "orgqr"], [1811, 5, 1, "", "ormqr"], [1812, 5, 1, "", "outer"], [2109, 0, 0, "-", "overrides"], [2064, 0, 0, "-", "package"], [1813, 5, 1, "", "pca_lowrank"], [1814, 5, 1, "", "permute"], [1815, 5, 1, "", "pinverse"], [1816, 5, 1, "", "poisson"], [1817, 5, 1, "", "polar"], [1818, 5, 1, "", "polygamma"], [1819, 5, 1, "", "positive"], [1820, 5, 1, "", "pow"], [1821, 5, 1, "", "prod"], [2066, 0, 0, "-", "profiler"], [1822, 5, 1, "", "promote_types"], [1823, 5, 1, "", "qr"], [1824, 5, 1, "", "quantile"], [2070, 0, 0, "-", "quantization"], [1825, 5, 1, "", "quantize_per_channel"], [1826, 5, 1, "", "quantize_per_tensor"], [1827, 5, 1, "", "quantized_batch_norm"], [1828, 5, 1, "", "quantized_max_pool1d"], [1829, 5, 1, "", "quantized_max_pool2d"], [2086, 0, 0, "-", "quasirandom"], [1831, 5, 1, "", "rad2deg"], [1832, 5, 1, "", "rand"], [1833, 5, 1, "", "rand_like"], [1834, 5, 1, "", "randint"], [1835, 5, 1, "", "randint_like"], [1836, 5, 1, "", "randn"], [1837, 5, 1, "", "randn_like"], [2071, 0, 0, "-", "random"], [1838, 5, 1, "", "randperm"], [1839, 5, 1, "", "range"], [1840, 5, 1, "", "ravel"], [1841, 5, 1, "", "real"], [1842, 5, 1, "", "reciprocal"], [1843, 5, 1, "", "remainder"], [1844, 5, 1, "", "renorm"], [1845, 5, 1, "", "repeat_interleave"], [1846, 5, 1, "", "reshape"], [1847, 5, 1, "", "resolve_conj"], [1848, 5, 1, "", "resolve_neg"], [1849, 5, 1, "", "result_type"], [2086, 0, 0, "-", "return_types"], [1850, 5, 1, "", "roll"], [1851, 5, 1, "", "rot90"], [1852, 5, 1, "", "round"], [1853, 5, 1, "", "row_stack"], [1854, 5, 1, "", "rsqrt"], [1855, 5, 1, "", "save"], [1856, 5, 1, "", "scatter"], [1857, 5, 1, "", "scatter_add"], [1858, 5, 1, "", "scatter_reduce"], [1859, 5, 1, "", "searchsorted"], [1860, 5, 1, "", "seed"], [1861, 5, 1, "", "select"], [1862, 5, 1, "", "select_scatter"], [2086, 0, 0, "-", "serialization"], [1863, 5, 1, "", "set_default_device"], [1864, 5, 1, "", "set_default_dtype"], [1865, 5, 1, "", "set_default_tensor_type"], [1866, 5, 1, "", "set_deterministic_debug_mode"], [1867, 5, 1, "", "set_float32_matmul_precision"], [1868, 5, 1, "", "set_flush_denormal"], [1869, 5, 1, "", "set_num_interop_threads"], [1870, 5, 1, "", "set_num_threads"], [1871, 5, 1, "", "set_printoptions"], [1872, 5, 1, "", "set_rng_state"], [1873, 5, 1, "", "set_warn_always"], [1874, 5, 1, "", "sgn"], [1875, 5, 1, "", "sigmoid"], [1876, 5, 1, "", "sign"], [2075, 0, 0, "-", "signal"], [1888, 5, 1, "", "signbit"], [1889, 5, 1, "", "sin"], [1890, 5, 1, "", "sinc"], [1891, 5, 1, "", "sinh"], [1892, 5, 1, "", "slice_scatter"], [1893, 5, 1, "", "slogdet"], [1894, 5, 1, "", "smm"], [1895, 5, 1, "", "softmax"], [1896, 5, 1, "", "sort"], [2077, 0, 0, "-", "sparse"], [1906, 5, 1, "", "sparse_bsc_tensor"], [1907, 5, 1, "", "sparse_bsr_tensor"], [1908, 5, 1, "", "sparse_compressed_tensor"], [1909, 5, 1, "", "sparse_coo_tensor"], [1910, 5, 1, "", "sparse_csc_tensor"], [1911, 5, 1, "", "sparse_csr_tensor"], [2078, 0, 0, "-", "special"], [1912, 5, 1, "", "split"], [1913, 5, 1, "", "sqrt"], [1914, 5, 1, "", "square"], [1915, 5, 1, "", "squeeze"], [1916, 5, 1, "", "sspaddmm"], [1917, 5, 1, "", "stack"], [1918, 5, 1, "", "std"], [1919, 5, 1, "", "std_mean"], [1920, 5, 1, "", "stft"], [2086, 0, 0, "-", "storage"], [1921, 5, 1, "", "sub"], [1922, 5, 1, "", "subtract"], [1923, 5, 1, "", "sum"], [1924, 5, 1, "", "svd"], [1925, 5, 1, "", "svd_lowrank"], [1926, 5, 1, "", "swapaxes"], [1927, 5, 1, "", "swapdims"], [1928, 5, 1, "", "sym_float"], [1929, 5, 1, "", "sym_int"], [1930, 5, 1, "", "sym_ite"], [1931, 5, 1, "", "sym_max"], [1932, 5, 1, "", "sym_min"], [1933, 5, 1, "", "sym_not"], [1934, 5, 1, "", "t"], [1935, 5, 1, "", "take"], [1936, 5, 1, "", "take_along_dim"], [1937, 5, 1, "", "tan"], [1938, 5, 1, "", "tanh"], [1939, 5, 1, "", "tensor"], [1940, 5, 1, "", "tensor_split"], [1941, 5, 1, "", "tensordot"], [2084, 0, 0, "-", "testing"], [1942, 5, 1, "", "tile"], [1943, 5, 1, "", "topk"], [2086, 0, 0, "-", "torch_version"], [1944, 5, 1, "", "trace"], [1945, 5, 1, "", "transpose"], [1946, 5, 1, "", "trapezoid"], [1947, 5, 1, "", "trapz"], [1948, 5, 1, "", "triangular_solve"], [1949, 5, 1, "", "tril"], [1950, 5, 1, "", "tril_indices"], [1951, 5, 1, "", "triu"], [1952, 5, 1, "", "triu_indices"], [1953, 5, 1, "", "true_divide"], [1954, 5, 1, "", "trunc"], [2086, 0, 0, "-", "types"], [1955, 5, 1, "", "unbind"], [1956, 5, 1, "", "unflatten"], [1957, 5, 1, "", "unique"], [1958, 5, 1, "", "unique_consecutive"], [1959, 5, 1, "", "unravel_index"], [1960, 5, 1, "", "unsqueeze"], [1961, 5, 1, "", "use_deterministic_algorithms"], [2113, 0, 0, "-", "utils"], [1967, 5, 1, "", "vander"], [1968, 5, 1, "", "var"], [1969, 5, 1, "", "var_mean"], [1970, 5, 1, "", "vdot"], [2086, 0, 0, "-", "version"], [1971, 5, 1, "", "view_as_complex"], [1972, 5, 1, "", "view_as_real"], [1973, 5, 1, "", "vmap"], [1974, 5, 1, "", "vsplit"], [1975, 5, 1, "", "vstack"], [1976, 5, 1, "", "where"], [1977, 5, 1, "", "xlogy"], [2114, 0, 0, "-", "xpu"], [2006, 5, 1, "", "zeros"], [2007, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[2079, 2, 1, "", "dtype"]], "torch.BoolStorage": [[2079, 2, 1, "", "dtype"]], "torch.ByteStorage": [[2079, 2, 1, "", "dtype"]], "torch.CharStorage": [[2079, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[2079, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[2079, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[2079, 2, 1, "", "dtype"]], "torch.FloatStorage": [[2079, 2, 1, "", "dtype"]], "torch.Generator": [[88, 3, 1, "", "clone_state"], [88, 2, 1, "", "device"], [88, 3, 1, "", "get_state"], [88, 3, 1, "", "graphsafe_get_state"], [88, 3, 1, "", "graphsafe_set_state"], [88, 3, 1, "", "initial_seed"], [88, 3, 1, "", "manual_seed"], [88, 3, 1, "", "seed"], [88, 3, 1, "", "set_state"]], "torch.HalfStorage": [[2079, 2, 1, "", "dtype"]], "torch.IntStorage": [[2079, 2, 1, "", "dtype"]], "torch.LongStorage": [[2079, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[2079, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[2079, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[2079, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[2079, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[2079, 2, 1, "", "dtype"]], "torch.ShortStorage": [[2079, 2, 1, "", "dtype"]], "torch.Size": [[2076, 3, 1, "", "count"], [2076, 3, 1, "", "index"], [2076, 3, 1, "", "numel"]], "torch.SymFloat": [[2086, 3, 1, "", "is_integer"]], "torch.Tag": [[2086, 4, 1, "", "name"]], "torch.Tensor": [[2083, 2, 1, "", "H"], [2083, 2, 1, "", "T"], [89, 3, 1, "", "abs"], [90, 3, 1, "", "abs_"], [91, 3, 1, "", "absolute"], [92, 3, 1, "", "absolute_"], [93, 3, 1, "", "acos"], [94, 3, 1, "", "acos_"], [95, 3, 1, "", "acosh"], [96, 3, 1, "", "acosh_"], [97, 3, 1, "", "add"], [98, 3, 1, "", "add_"], [99, 3, 1, "", "addbmm"], [100, 3, 1, "", "addbmm_"], [101, 3, 1, "", "addcdiv"], [102, 3, 1, "", "addcdiv_"], [103, 3, 1, "", "addcmul"], [104, 3, 1, "", "addcmul_"], [105, 3, 1, "", "addmm"], [106, 3, 1, "", "addmm_"], [107, 3, 1, "", "addmv"], [108, 3, 1, "", "addmv_"], [109, 3, 1, "", "addr"], [110, 3, 1, "", "addr_"], [111, 3, 1, "", "adjoint"], [2031, 3, 1, "", "align_as"], [2031, 3, 1, "", "align_to"], [112, 3, 1, "", "all"], [113, 3, 1, "", "allclose"], [114, 3, 1, "", "amax"], [115, 3, 1, "", "amin"], [116, 3, 1, "", "aminmax"], [117, 3, 1, "", "angle"], [118, 3, 1, "", "any"], [119, 3, 1, "", "apply_"], [120, 3, 1, "", "arccos"], [121, 3, 1, "", "arccos_"], [122, 3, 1, "", "arccosh"], [123, 3, 1, "", "arccosh_"], [124, 3, 1, "", "arcsin"], [125, 3, 1, "", "arcsin_"], [126, 3, 1, "", "arcsinh"], [127, 3, 1, "", "arcsinh_"], [128, 3, 1, "", "arctan"], [129, 3, 1, "", "arctan2"], [130, 3, 1, "", "arctan2_"], [131, 3, 1, "", "arctan_"], [132, 3, 1, "", "arctanh"], [133, 3, 1, "", "arctanh_"], [134, 3, 1, "", "argmax"], [135, 3, 1, "", "argmin"], [136, 3, 1, "", "argsort"], [137, 3, 1, "", "argwhere"], [138, 3, 1, "", "as_strided"], [139, 3, 1, "", "as_subclass"], [140, 3, 1, "", "asin"], [141, 3, 1, "", "asin_"], [142, 3, 1, "", "asinh"], [143, 3, 1, "", "asinh_"], [144, 3, 1, "", "atan"], [145, 3, 1, "", "atan2"], [146, 3, 1, "", "atan2_"], [147, 3, 1, "", "atan_"], [148, 3, 1, "", "atanh"], [149, 3, 1, "", "atanh_"], [150, 3, 1, "", "backward"], [151, 3, 1, "", "baddbmm"], [152, 3, 1, "", "baddbmm_"], [153, 3, 1, "", "bernoulli"], [154, 3, 1, "", "bernoulli_"], [155, 3, 1, "", "bfloat16"], [156, 3, 1, "", "bincount"], [157, 3, 1, "", "bitwise_and"], [158, 3, 1, "", "bitwise_and_"], [159, 3, 1, "", "bitwise_left_shift"], [160, 3, 1, "", "bitwise_left_shift_"], [161, 3, 1, "", "bitwise_not"], [162, 3, 1, "", "bitwise_not_"], [163, 3, 1, "", "bitwise_or"], [164, 3, 1, "", "bitwise_or_"], [165, 3, 1, "", "bitwise_right_shift"], [166, 3, 1, "", "bitwise_right_shift_"], [167, 3, 1, "", "bitwise_xor"], [168, 3, 1, "", "bitwise_xor_"], [169, 3, 1, "", "bmm"], [170, 3, 1, "", "bool"], [171, 3, 1, "", "broadcast_to"], [172, 3, 1, "", "byte"], [173, 3, 1, "", "cauchy_"], [174, 3, 1, "", "ccol_indices"], [175, 3, 1, "", "cdouble"], [176, 3, 1, "", "ceil"], [177, 3, 1, "", "ceil_"], [178, 3, 1, "", "cfloat"], [179, 3, 1, "", "chalf"], [180, 3, 1, "", "char"], [181, 3, 1, "", "cholesky"], [182, 3, 1, "", "cholesky_inverse"], [183, 3, 1, "", "cholesky_solve"], [184, 3, 1, "", "chunk"], [185, 3, 1, "", "clamp"], [186, 3, 1, "", "clamp_"], [187, 3, 1, "", "clip"], [188, 3, 1, "", "clip_"], [189, 3, 1, "", "clone"], [190, 3, 1, "", "coalesce"], [191, 3, 1, "", "col_indices"], [192, 3, 1, "", "conj"], [193, 3, 1, "", "conj_physical"], [194, 3, 1, "", "conj_physical_"], [195, 3, 1, "", "contiguous"], [196, 3, 1, "", "copy_"], [197, 3, 1, "", "copysign"], [198, 3, 1, "", "copysign_"], [199, 3, 1, "", "corrcoef"], [200, 3, 1, "", "cos"], [201, 3, 1, "", "cos_"], [202, 3, 1, "", "cosh"], [203, 3, 1, "", "cosh_"], [204, 3, 1, "", "count_nonzero"], [205, 3, 1, "", "cov"], [206, 3, 1, "", "cpu"], [207, 3, 1, "", "cross"], [208, 3, 1, "", "crow_indices"], [209, 3, 1, "", "cuda"], [210, 3, 1, "", "cummax"], [211, 3, 1, "", "cummin"], [212, 3, 1, "", "cumprod"], [213, 3, 1, "", "cumprod_"], [214, 3, 1, "", "cumsum"], [215, 3, 1, "", "cumsum_"], [216, 3, 1, "", "data_ptr"], [217, 3, 1, "", "deg2rad"], [218, 3, 1, "", "dense_dim"], [219, 3, 1, "", "dequantize"], [220, 3, 1, "", "det"], [221, 3, 1, "", "detach"], [222, 3, 1, "", "detach_"], [223, 2, 1, "", "device"], [224, 3, 1, "", "diag"], [225, 3, 1, "", "diag_embed"], [226, 3, 1, "", "diagflat"], [227, 3, 1, "", "diagonal"], [228, 3, 1, "", "diagonal_scatter"], [229, 3, 1, "", "diff"], [230, 3, 1, "", "digamma"], [231, 3, 1, "", "digamma_"], [232, 3, 1, "", "dim"], [233, 3, 1, "", "dim_order"], [234, 3, 1, "", "dist"], [235, 3, 1, "", "div"], [236, 3, 1, "", "div_"], [237, 3, 1, "", "divide"], [238, 3, 1, "", "divide_"], [239, 3, 1, "", "dot"], [240, 3, 1, "", "double"], [241, 3, 1, "", "dsplit"], [242, 3, 1, "", "element_size"], [243, 3, 1, "", "eq"], [244, 3, 1, "", "eq_"], [245, 3, 1, "", "equal"], [246, 3, 1, "", "erf"], [247, 3, 1, "", "erf_"], [248, 3, 1, "", "erfc"], [249, 3, 1, "", "erfc_"], [250, 3, 1, "", "erfinv"], [251, 3, 1, "", "erfinv_"], [252, 3, 1, "", "exp"], [253, 3, 1, "", "exp_"], [254, 3, 1, "", "expand"], [255, 3, 1, "", "expand_as"], [256, 3, 1, "", "expm1"], [257, 3, 1, "", "expm1_"], [258, 3, 1, "", "exponential_"], [259, 3, 1, "", "fill_"], [260, 3, 1, "", "fill_diagonal_"], [261, 3, 1, "", "fix"], [262, 3, 1, "", "fix_"], [263, 3, 1, "", "flatten"], [264, 3, 1, "", "flip"], [265, 3, 1, "", "fliplr"], [266, 3, 1, "", "flipud"], [267, 3, 1, "", "float"], [268, 3, 1, "", "float_power"], [269, 3, 1, "", "float_power_"], [270, 3, 1, "", "floor"], [271, 3, 1, "", "floor_"], [272, 3, 1, "", "floor_divide"], [273, 3, 1, "", "floor_divide_"], [274, 3, 1, "", "fmax"], [275, 3, 1, "", "fmin"], [276, 3, 1, "", "fmod"], [277, 3, 1, "", "fmod_"], [278, 3, 1, "", "frac"], [279, 3, 1, "", "frac_"], [280, 3, 1, "", "frexp"], [281, 3, 1, "", "gather"], [282, 3, 1, "", "gcd"], [283, 3, 1, "", "gcd_"], [284, 3, 1, "", "ge"], [285, 3, 1, "", "ge_"], [286, 3, 1, "", "geometric_"], [287, 3, 1, "", "geqrf"], [288, 3, 1, "", "ger"], [289, 3, 1, "", "get_device"], [290, 2, 1, "", "grad"], [291, 3, 1, "", "greater"], [292, 3, 1, "", "greater_"], [293, 3, 1, "", "greater_equal"], [294, 3, 1, "", "greater_equal_"], [295, 3, 1, "", "gt"], [296, 3, 1, "", "gt_"], [297, 3, 1, "", "half"], [298, 3, 1, "", "hardshrink"], [299, 3, 1, "", "heaviside"], [300, 3, 1, "", "histc"], [301, 3, 1, "", "histogram"], [302, 3, 1, "", "hsplit"], [303, 3, 1, "", "hypot"], [304, 3, 1, "", "hypot_"], [305, 3, 1, "", "i0"], [306, 3, 1, "", "i0_"], [307, 3, 1, "", "igamma"], [308, 3, 1, "", "igamma_"], [309, 3, 1, "", "igammac"], [310, 3, 1, "", "igammac_"], [311, 2, 1, "", "imag"], [312, 3, 1, "", "index_add"], [313, 3, 1, "", "index_add_"], [314, 3, 1, "", "index_copy"], [315, 3, 1, "", "index_copy_"], [316, 3, 1, "", "index_fill"], [317, 3, 1, "", "index_fill_"], [318, 3, 1, "", "index_put"], [319, 3, 1, "", "index_put_"], [320, 3, 1, "", "index_reduce"], [321, 3, 1, "", "index_reduce_"], [322, 3, 1, "", "index_select"], [323, 3, 1, "", "indices"], [324, 3, 1, "", "inner"], [325, 3, 1, "", "int"], [326, 3, 1, "", "int_repr"], [327, 3, 1, "", "inverse"], [328, 3, 1, "", "is_coalesced"], [329, 3, 1, "", "is_complex"], [330, 3, 1, "", "is_conj"], [331, 3, 1, "", "is_contiguous"], [332, 2, 1, "", "is_cuda"], [333, 3, 1, "", "is_floating_point"], [334, 3, 1, "", "is_inference"], [335, 2, 1, "", "is_leaf"], [336, 2, 1, "", "is_meta"], [337, 3, 1, "", "is_pinned"], [338, 2, 1, "", "is_quantized"], [339, 3, 1, "", "is_set_to"], [340, 3, 1, "", "is_shared"], [341, 3, 1, "", "is_signed"], [342, 2, 1, "", "is_sparse"], [343, 2, 1, "", "is_sparse_csr"], [344, 3, 1, "", "isclose"], [345, 3, 1, "", "isfinite"], [346, 3, 1, "", "isinf"], [347, 3, 1, "", "isnan"], [348, 3, 1, "", "isneginf"], [349, 3, 1, "", "isposinf"], [350, 3, 1, "", "isreal"], [351, 3, 1, "", "istft"], [352, 3, 1, "", "item"], [353, 2, 1, "", "itemsize"], [354, 3, 1, "", "kthvalue"], [355, 3, 1, "", "lcm"], [356, 3, 1, "", "lcm_"], [357, 3, 1, "", "ldexp"], [358, 3, 1, "", "ldexp_"], [359, 3, 1, "", "le"], [360, 3, 1, "", "le_"], [361, 3, 1, "", "lerp"], [362, 3, 1, "", "lerp_"], [363, 3, 1, "", "less"], [364, 3, 1, "", "less_"], [365, 3, 1, "", "less_equal"], [366, 3, 1, "", "less_equal_"], [367, 3, 1, "", "lgamma"], [368, 3, 1, "", "lgamma_"], [369, 3, 1, "", "log"], [370, 3, 1, "", "log10"], [371, 3, 1, "", "log10_"], [372, 3, 1, "", "log1p"], [373, 3, 1, "", "log1p_"], [374, 3, 1, "", "log2"], [375, 3, 1, "", "log2_"], [376, 3, 1, "", "log_"], [377, 3, 1, "", "log_normal_"], [378, 3, 1, "", "logaddexp"], [379, 3, 1, "", "logaddexp2"], [380, 3, 1, "", "logcumsumexp"], [381, 3, 1, "", "logdet"], [382, 3, 1, "", "logical_and"], [383, 3, 1, "", "logical_and_"], [384, 3, 1, "", "logical_not"], [385, 3, 1, "", "logical_not_"], [386, 3, 1, "", "logical_or"], [387, 3, 1, "", "logical_or_"], [388, 3, 1, "", "logical_xor"], [389, 3, 1, "", "logical_xor_"], [390, 3, 1, "", "logit"], [391, 3, 1, "", "logit_"], [392, 3, 1, "", "logsumexp"], [393, 3, 1, "", "long"], [394, 3, 1, "", "lt"], [395, 3, 1, "", "lt_"], [396, 3, 1, "", "lu"], [397, 3, 1, "", "lu_solve"], [2083, 2, 1, "", "mH"], [2083, 2, 1, "", "mT"], [398, 3, 1, "", "map_"], [399, 3, 1, "", "masked_fill"], [400, 3, 1, "", "masked_fill_"], [401, 3, 1, "", "masked_scatter"], [402, 3, 1, "", "masked_scatter_"], [403, 3, 1, "", "masked_select"], [404, 3, 1, "", "matmul"], [405, 3, 1, "", "matrix_exp"], [406, 3, 1, "", "matrix_power"], [407, 3, 1, "", "max"], [408, 3, 1, "", "maximum"], [409, 3, 1, "", "mean"], [410, 3, 1, "", "median"], [411, 3, 1, "", "min"], [412, 3, 1, "", "minimum"], [413, 3, 1, "", "mm"], [414, 3, 1, "", "mode"], [415, 3, 1, "", "module_load"], [416, 3, 1, "", "moveaxis"], [417, 3, 1, "", "movedim"], [418, 3, 1, "", "msort"], [419, 3, 1, "", "mul"], [420, 3, 1, "", "mul_"], [421, 3, 1, "", "multinomial"], [422, 3, 1, "", "multiply"], [423, 3, 1, "", "multiply_"], [424, 3, 1, "", "mv"], [425, 3, 1, "", "mvlgamma"], [426, 3, 1, "", "mvlgamma_"], [2031, 2, 1, "", "names"], [427, 3, 1, "", "nan_to_num"], [428, 3, 1, "", "nan_to_num_"], [429, 3, 1, "", "nanmean"], [430, 3, 1, "", "nanmedian"], [431, 3, 1, "", "nanquantile"], [432, 3, 1, "", "nansum"], [433, 3, 1, "", "narrow"], [434, 3, 1, "", "narrow_copy"], [435, 2, 1, "", "nbytes"], [436, 2, 1, "", "ndim"], [437, 3, 1, "", "ndimension"], [438, 3, 1, "", "ne"], [439, 3, 1, "", "ne_"], [440, 3, 1, "", "neg"], [441, 3, 1, "", "neg_"], [442, 3, 1, "", "negative"], [443, 3, 1, "", "negative_"], [444, 3, 1, "", "nelement"], [445, 3, 1, "", "new_empty"], [446, 3, 1, "", "new_full"], [447, 3, 1, "", "new_ones"], [448, 3, 1, "", "new_tensor"], [449, 3, 1, "", "new_zeros"], [450, 3, 1, "", "nextafter"], [451, 3, 1, "", "nextafter_"], [452, 3, 1, "", "nonzero"], [453, 3, 1, "", "norm"], [454, 3, 1, "", "normal_"], [455, 3, 1, "", "not_equal"], [456, 3, 1, "", "not_equal_"], [457, 3, 1, "", "numel"], [458, 3, 1, "", "numpy"], [459, 3, 1, "", "orgqr"], [460, 3, 1, "", "ormqr"], [461, 3, 1, "", "outer"], [462, 3, 1, "", "permute"], [463, 3, 1, "", "pin_memory"], [464, 3, 1, "", "pinverse"], [465, 3, 1, "", "polygamma"], [466, 3, 1, "", "polygamma_"], [467, 3, 1, "", "positive"], [468, 3, 1, "", "pow"], [469, 3, 1, "", "pow_"], [470, 3, 1, "", "prod"], [471, 3, 1, "", "put_"], [472, 3, 1, "", "q_per_channel_axis"], [473, 3, 1, "", "q_per_channel_scales"], [474, 3, 1, "", "q_per_channel_zero_points"], [475, 3, 1, "", "q_scale"], [476, 3, 1, "", "q_zero_point"], [477, 3, 1, "", "qr"], [478, 3, 1, "", "qscheme"], [479, 3, 1, "", "quantile"], [480, 3, 1, "", "rad2deg"], [481, 3, 1, "", "random_"], [482, 3, 1, "", "ravel"], [483, 2, 1, "", "real"], [484, 3, 1, "", "reciprocal"], [485, 3, 1, "", "reciprocal_"], [486, 3, 1, "", "record_stream"], [2031, 3, 1, "", "refine_names"], [487, 3, 1, "", "register_hook"], [488, 3, 1, "", "register_post_accumulate_grad_hook"], [489, 3, 1, "", "remainder"], [490, 3, 1, "", "remainder_"], [2031, 3, 1, "", "rename"], [2031, 3, 1, "", "rename_"], [491, 3, 1, "", "renorm"], [492, 3, 1, "", "renorm_"], [493, 3, 1, "", "repeat"], [494, 3, 1, "", "repeat_interleave"], [495, 2, 1, "", "requires_grad"], [496, 3, 1, "", "requires_grad_"], [497, 3, 1, "", "reshape"], [498, 3, 1, "", "reshape_as"], [499, 3, 1, "", "resize_"], [500, 3, 1, "", "resize_as_"], [501, 3, 1, "", "resolve_conj"], [502, 3, 1, "", "resolve_neg"], [503, 3, 1, "", "retain_grad"], [504, 2, 1, "", "retains_grad"], [505, 3, 1, "", "roll"], [506, 3, 1, "", "rot90"], [507, 3, 1, "", "round"], [508, 3, 1, "", "round_"], [509, 3, 1, "", "row_indices"], [510, 3, 1, "", "rsqrt"], [511, 3, 1, "", "rsqrt_"], [512, 3, 1, "", "scatter"], [513, 3, 1, "", "scatter_"], [514, 3, 1, "", "scatter_add"], [515, 3, 1, "", "scatter_add_"], [516, 3, 1, "", "scatter_reduce"], [517, 3, 1, "", "scatter_reduce_"], [518, 3, 1, "", "select"], [519, 3, 1, "", "select_scatter"], [520, 3, 1, "", "set_"], [521, 3, 1, "", "sgn"], [522, 3, 1, "", "sgn_"], [523, 2, 1, "", "shape"], [524, 3, 1, "", "share_memory_"], [525, 3, 1, "", "short"], [526, 3, 1, "", "sigmoid"], [527, 3, 1, "", "sigmoid_"], [528, 3, 1, "", "sign"], [529, 3, 1, "", "sign_"], [530, 3, 1, "", "signbit"], [531, 3, 1, "", "sin"], [532, 3, 1, "", "sin_"], [533, 3, 1, "", "sinc"], [534, 3, 1, "", "sinc_"], [535, 3, 1, "", "sinh"], [536, 3, 1, "", "sinh_"], [537, 3, 1, "", "size"], [538, 3, 1, "", "slice_scatter"], [539, 3, 1, "", "slogdet"], [540, 3, 1, "", "smm"], [541, 3, 1, "", "softmax"], [542, 3, 1, "", "sort"], [543, 3, 1, "", "sparse_dim"], [544, 3, 1, "", "sparse_mask"], [545, 3, 1, "", "sparse_resize_"], [546, 3, 1, "", "sparse_resize_and_clear_"], [547, 3, 1, "", "split"], [548, 3, 1, "", "sqrt"], [549, 3, 1, "", "sqrt_"], [550, 3, 1, "", "square"], [551, 3, 1, "", "square_"], [552, 3, 1, "", "squeeze"], [553, 3, 1, "", "squeeze_"], [554, 3, 1, "", "sspaddmm"], [555, 3, 1, "", "std"], [556, 3, 1, "", "stft"], [557, 3, 1, "", "storage"], [558, 3, 1, "", "storage_offset"], [559, 3, 1, "", "storage_type"], [560, 3, 1, "", "stride"], [561, 3, 1, "", "sub"], [562, 3, 1, "", "sub_"], [563, 3, 1, "", "subtract"], [564, 3, 1, "", "subtract_"], [565, 3, 1, "", "sum"], [566, 3, 1, "", "sum_to_size"], [567, 3, 1, "", "svd"], [568, 3, 1, "", "swapaxes"], [569, 3, 1, "", "swapdims"], [570, 3, 1, "", "t"], [571, 3, 1, "", "t_"], [572, 3, 1, "", "take"], [573, 3, 1, "", "take_along_dim"], [574, 3, 1, "", "tan"], [575, 3, 1, "", "tan_"], [576, 3, 1, "", "tanh"], [577, 3, 1, "", "tanh_"], [578, 3, 1, "", "tensor_split"], [579, 3, 1, "", "tile"], [580, 3, 1, "", "to"], [581, 3, 1, "", "to_dense"], [582, 3, 1, "", "to_mkldnn"], [583, 3, 1, "", "to_sparse"], [584, 3, 1, "", "to_sparse_bsc"], [585, 3, 1, "", "to_sparse_bsr"], [586, 3, 1, "", "to_sparse_coo"], [587, 3, 1, "", "to_sparse_csc"], [588, 3, 1, "", "to_sparse_csr"], [589, 3, 1, "", "tolist"], [590, 3, 1, "", "topk"], [591, 3, 1, "", "trace"], [592, 3, 1, "", "transpose"], [593, 3, 1, "", "transpose_"], [594, 3, 1, "", "triangular_solve"], [595, 3, 1, "", "tril"], [596, 3, 1, "", "tril_"], [597, 3, 1, "", "triu"], [598, 3, 1, "", "triu_"], [599, 3, 1, "", "true_divide"], [600, 3, 1, "", "true_divide_"], [601, 3, 1, "", "trunc"], [602, 3, 1, "", "trunc_"], [603, 3, 1, "", "type"], [604, 3, 1, "", "type_as"], [605, 3, 1, "", "unbind"], [606, 3, 1, "", "unflatten"], [607, 3, 1, "", "unfold"], [608, 3, 1, "", "uniform_"], [609, 3, 1, "", "unique"], [610, 3, 1, "", "unique_consecutive"], [611, 3, 1, "", "unsqueeze"], [612, 3, 1, "", "unsqueeze_"], [613, 3, 1, "", "untyped_storage"], [614, 3, 1, "", "values"], [615, 3, 1, "", "var"], [616, 3, 1, "", "vdot"], [617, 3, 1, "", "view"], [618, 3, 1, "", "view_as"], [619, 3, 1, "", "vsplit"], [620, 3, 1, "", "where"], [621, 3, 1, "", "xlogy"], [622, 3, 1, "", "xlogy_"], [623, 3, 1, "", "zero_"]], "torch.TypedStorage": [[2079, 3, 1, "", "bfloat16"], [2079, 3, 1, "", "bool"], [2079, 3, 1, "", "byte"], [2079, 3, 1, "", "char"], [2079, 3, 1, "", "clone"], [2079, 3, 1, "", "complex_double"], [2079, 3, 1, "", "complex_float"], [2079, 3, 1, "", "copy_"], [2079, 3, 1, "", "cpu"], [2079, 3, 1, "", "cuda"], [2079, 3, 1, "", "data_ptr"], [2079, 4, 1, "", "device"], [2079, 3, 1, "", "double"], [2079, 2, 1, "", "dtype"], [2079, 3, 1, "", "element_size"], [2079, 4, 1, "", "filename"], [2079, 3, 1, "", "fill_"], [2079, 3, 1, "", "float"], [2079, 3, 1, "", "float8_e4m3fn"], [2079, 3, 1, "", "float8_e4m3fnuz"], [2079, 3, 1, "", "float8_e5m2"], [2079, 3, 1, "", "float8_e5m2fnuz"], [2079, 3, 1, "", "from_buffer"], [2079, 3, 1, "", "from_file"], [2079, 3, 1, "", "get_device"], [2079, 3, 1, "", "half"], [2079, 3, 1, "", "hpu"], [2079, 3, 1, "", "int"], [2079, 4, 1, "", "is_cuda"], [2079, 4, 1, "", "is_hpu"], [2079, 3, 1, "", "is_pinned"], [2079, 3, 1, "", "is_shared"], [2079, 2, 1, "", "is_sparse"], [2079, 3, 1, "", "long"], [2079, 3, 1, "", "nbytes"], [2079, 3, 1, "", "pickle_storage_type"], [2079, 3, 1, "", "pin_memory"], [2079, 3, 1, "", "resizable"], [2079, 3, 1, "", "resize_"], [2079, 3, 1, "", "share_memory_"], [2079, 3, 1, "", "short"], [2079, 3, 1, "", "size"], [2079, 3, 1, "", "to"], [2079, 3, 1, "", "tolist"], [2079, 3, 1, "", "type"], [2079, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[2079, 3, 1, "", "bfloat16"], [2079, 3, 1, "", "bool"], [2079, 3, 1, "", "byte"], [2079, 3, 1, "", "byteswap"], [2079, 3, 1, "", "char"], [2079, 3, 1, "", "clone"], [2079, 3, 1, "", "complex_double"], [2079, 3, 1, "", "complex_float"], [2079, 3, 1, "", "copy_"], [2079, 3, 1, "", "cpu"], [2079, 3, 1, "", "cuda"], [2079, 3, 1, "", "data_ptr"], [2079, 2, 1, "", "device"], [2079, 3, 1, "", "double"], [2079, 3, 1, "", "element_size"], [2079, 4, 1, "", "filename"], [2079, 3, 1, "", "fill_"], [2079, 3, 1, "", "float"], [2079, 3, 1, "", "float8_e4m3fn"], [2079, 3, 1, "", "float8_e4m3fnuz"], [2079, 3, 1, "", "float8_e5m2"], [2079, 3, 1, "", "float8_e5m2fnuz"], [2079, 3, 1, "", "from_buffer"], [2079, 3, 1, "", "from_file"], [2079, 3, 1, "", "get_device"], [2079, 3, 1, "", "half"], [2079, 3, 1, "", "hpu"], [2079, 3, 1, "", "int"], [2079, 4, 1, "", "is_cuda"], [2079, 4, 1, "", "is_hpu"], [2079, 3, 1, "", "is_pinned"], [2079, 3, 1, "", "is_shared"], [2079, 2, 1, "", "is_sparse"], [2079, 2, 1, "", "is_sparse_csr"], [2079, 3, 1, "", "long"], [2079, 3, 1, "", "mps"], [2079, 3, 1, "", "nbytes"], [2079, 3, 1, "", "new"], [2079, 3, 1, "", "pin_memory"], [2079, 3, 1, "", "resizable"], [2079, 3, 1, "", "resize_"], [2079, 3, 1, "", "share_memory_"], [2079, 3, 1, "", "short"], [2079, 3, 1, "", "size"], [2079, 3, 1, "", "to"], [2079, 3, 1, "", "tolist"], [2079, 3, 1, "", "type"], [2079, 3, 1, "", "untyped"]], "torch.__config__": [[13, 5, 1, "", "parallel_info"], [13, 5, 1, "", "show"]], "torch.__future__": [[60, 5, 1, "", "get_overwrite_module_params_on_conversion"], [60, 5, 1, "", "get_swap_module_params_on_conversion"], [60, 5, 1, "", "set_overwrite_module_params_on_conversion"], [60, 5, 1, "", "set_swap_module_params_on_conversion"]], "torch._higher_order_ops.cond": [[12, 5, 1, "", "cond"]], "torch._logging": [[680, 5, 1, "", "set_logs"]], "torch.amp": [[0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "grad_scaler"]], "torch.amp.autocast_mode": [[0, 5, 1, "", "is_autocast_available"]], "torch.ao": [[2067, 0, 0, "-", "nn"], [2067, 0, 0, "-", "ns"], [2067, 0, 0, "-", "pruning"], [2067, 0, 0, "-", "quantization"]], "torch.ao.nn": [[2070, 0, 0, "-", "intrinsic"], [2070, 0, 0, "-", "qat"], [2067, 0, 0, "-", "quantizable"], [2067, 0, 0, "-", "quantized"], [2067, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[700, 1, 1, "", "BNReLU2d"], [701, 1, 1, "", "BNReLU3d"], [702, 1, 1, "", "ConvBn1d"], [703, 1, 1, "", "ConvBn2d"], [704, 1, 1, "", "ConvBn3d"], [705, 1, 1, "", "ConvBnReLU1d"], [706, 1, 1, "", "ConvBnReLU2d"], [707, 1, 1, "", "ConvBnReLU3d"], [708, 1, 1, "", "ConvReLU1d"], [709, 1, 1, "", "ConvReLU2d"], [710, 1, 1, "", "ConvReLU3d"], [711, 1, 1, "", "LinearReLU"], [2070, 0, 0, "-", "modules"], [2070, 0, 0, "-", "qat"], [2070, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.modules": [[2067, 0, 0, "-", "fused"]], "torch.ao.nn.intrinsic.qat": [[712, 1, 1, "", "ConvBn1d"], [713, 1, 1, "", "ConvBn2d"], [714, 1, 1, "", "ConvBn3d"], [715, 1, 1, "", "ConvBnReLU1d"], [716, 1, 1, "", "ConvBnReLU2d"], [717, 1, 1, "", "ConvBnReLU3d"], [718, 1, 1, "", "ConvReLU2d"], [719, 1, 1, "", "ConvReLU3d"], [720, 1, 1, "", "LinearReLU"], [721, 1, 1, "", "freeze_bn_stats"], [2070, 0, 0, "-", "modules"], [722, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.qat.modules": [[2067, 0, 0, "-", "conv_fused"], [2067, 0, 0, "-", "linear_fused"], [2067, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized": [[723, 1, 1, "", "BNReLU2d"], [724, 1, 1, "", "BNReLU3d"], [725, 1, 1, "", "ConvReLU1d"], [726, 1, 1, "", "ConvReLU2d"], [727, 1, 1, "", "ConvReLU3d"], [728, 1, 1, "", "LinearReLU"], [2070, 0, 0, "-", "dynamic"], [2070, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[729, 1, 1, "", "LinearReLU"], [2070, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2067, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules": [[2067, 0, 0, "-", "bn_relu"], [2067, 0, 0, "-", "conv_add"], [2067, 0, 0, "-", "conv_relu"], [2067, 0, 0, "-", "linear_relu"]], "torch.ao.nn.qat": [[730, 1, 1, "", "Conv2d"], [731, 1, 1, "", "Conv3d"], [732, 1, 1, "", "Linear"], [2070, 0, 0, "-", "dynamic"], [2070, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[732, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[733, 1, 1, "", "Linear"], [2070, 0, 0, "-", "modules"]], "torch.ao.nn.qat.dynamic.modules": [[2067, 0, 0, "-", "linear"]], "torch.ao.nn.qat.modules": [[2067, 0, 0, "-", "conv"], [2067, 0, 0, "-", "embedding_ops"], [2067, 0, 0, "-", "linear"]], "torch.ao.nn.quantizable": [[734, 1, 1, "", "LSTM"], [735, 1, 1, "", "MultiheadAttention"], [2067, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[735, 3, 1, "", "dequantize"], [735, 3, 1, "", "forward"]], "torch.ao.nn.quantizable.modules": [[2067, 0, 0, "-", "activation"], [2067, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized": [[736, 1, 1, "", "BatchNorm2d"], [737, 1, 1, "", "BatchNorm3d"], [738, 1, 1, "", "Conv1d"], [739, 1, 1, "", "Conv2d"], [740, 1, 1, "", "Conv3d"], [741, 1, 1, "", "ConvTranspose1d"], [742, 1, 1, "", "ConvTranspose2d"], [743, 1, 1, "", "ConvTranspose3d"], [744, 1, 1, "", "ELU"], [745, 1, 1, "", "Embedding"], [746, 1, 1, "", "EmbeddingBag"], [747, 1, 1, "", "FXFloatFunctional"], [748, 1, 1, "", "FloatFunctional"], [749, 1, 1, "", "GroupNorm"], [750, 1, 1, "", "Hardswish"], [751, 1, 1, "", "InstanceNorm1d"], [752, 1, 1, "", "InstanceNorm2d"], [753, 1, 1, "", "InstanceNorm3d"], [754, 1, 1, "", "LayerNorm"], [755, 1, 1, "", "LeakyReLU"], [756, 1, 1, "", "Linear"], [757, 1, 1, "", "QFunctional"], [758, 1, 1, "", "ReLU6"], [759, 1, 1, "", "Sigmoid"], [2070, 0, 0, "-", "dynamic"], [2070, 0, 0, "-", "functional"], [2070, 0, 0, "-", "modules"], [2067, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[738, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[739, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[740, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[745, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[746, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[756, 3, 1, "", "from_float"], [756, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[760, 1, 1, "", "GRU"], [761, 1, 1, "", "GRUCell"], [762, 1, 1, "", "LSTM"], [763, 1, 1, "", "LSTMCell"], [764, 1, 1, "", "Linear"], [765, 1, 1, "", "RNNCell"], [2070, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[764, 3, 1, "", "from_float"], [764, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic.modules": [[2067, 0, 0, "-", "conv"], [2067, 0, 0, "-", "linear"], [2067, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized.functional": [[766, 1, 1, "", "adaptive_avg_pool2d"], [767, 1, 1, "", "adaptive_avg_pool3d"], [768, 1, 1, "", "avg_pool2d"], [769, 1, 1, "", "avg_pool3d"], [770, 1, 1, "", "celu"], [771, 1, 1, "", "clamp"], [772, 1, 1, "", "conv1d"], [773, 1, 1, "", "conv2d"], [774, 1, 1, "", "conv3d"], [775, 1, 1, "", "elu"], [776, 1, 1, "", "hardsigmoid"], [777, 1, 1, "", "hardswish"], [778, 1, 1, "", "hardtanh"], [779, 1, 1, "", "interpolate"], [780, 1, 1, "", "leaky_relu"], [781, 1, 1, "", "linear"], [782, 1, 1, "", "max_pool1d"], [783, 1, 1, "", "max_pool2d"], [784, 1, 1, "", "threshold"], [785, 1, 1, "", "upsample"], [786, 1, 1, "", "upsample_bilinear"], [787, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.modules": [[2067, 0, 0, "-", "activation"], [2067, 0, 0, "-", "batchnorm"], [2067, 0, 0, "-", "conv"], [2067, 0, 0, "-", "dropout"], [2067, 0, 0, "-", "embedding_ops"], [2067, 0, 0, "-", "functional_modules"], [2067, 0, 0, "-", "linear"], [2067, 0, 0, "-", "normalization"], [2067, 0, 0, "-", "rnn"], [2067, 0, 0, "-", "utils"]], "torch.ao.nn.quantized.reference": [[2067, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.reference.modules": [[2067, 0, 0, "-", "conv"], [2067, 0, 0, "-", "linear"], [2067, 0, 0, "-", "rnn"], [2067, 0, 0, "-", "sparse"], [2067, 0, 0, "-", "utils"]], "torch.ao.nn.sparse": [[2067, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[2067, 0, 0, "-", "dynamic"], [2067, 0, 0, "-", "linear"], [2067, 0, 0, "-", "utils"]], "torch.ao.nn.sparse.quantized.dynamic": [[2067, 0, 0, "-", "linear"]], "torch.ao.ns": [[2087, 0, 0, "-", "_numeric_suite"], [2088, 0, 0, "-", "_numeric_suite_fx"], [2067, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[2087, 1, 1, "", "Logger"], [2087, 1, 1, "", "OutputLogger"], [2087, 1, 1, "", "Shadow"], [2087, 1, 1, "", "ShadowLogger"], [2087, 5, 1, "", "compare_model_outputs"], [2087, 5, 1, "", "compare_model_stub"], [2087, 5, 1, "", "compare_weights"], [2087, 5, 1, "", "get_logger_dict"], [2087, 5, 1, "", "get_matching_activations"], [2087, 5, 1, "", "prepare_model_outputs"], [2087, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[2087, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[2087, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[2087, 3, 1, "", "add"], [2087, 3, 1, "", "add_relu"], [2087, 3, 1, "", "add_scalar"], [2087, 3, 1, "", "cat"], [2087, 3, 1, "", "forward"], [2087, 3, 1, "", "mul"], [2087, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[2087, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[2088, 1, 1, "", "NSTracer"], [2088, 1, 1, "", "OutputComparisonLogger"], [2088, 1, 1, "", "OutputLogger"], [2088, 5, 1, "", "add_loggers"], [2088, 5, 1, "", "add_shadow_loggers"], [2088, 5, 1, "", "convert_n_shadows_model"], [2088, 5, 1, "", "extend_logger_results_with_comparison"], [2088, 5, 1, "", "extract_logger_info"], [2088, 5, 1, "", "extract_results_n_shadows_model"], [2088, 5, 1, "", "extract_shadow_logger_info"], [2088, 5, 1, "", "extract_weights"], [2088, 5, 1, "", "loggers_set_enabled"], [2088, 5, 1, "", "loggers_set_save_activations"], [2088, 5, 1, "", "prepare_n_shadows_model"], [2088, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[2088, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[2088, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[2088, 3, 1, "", "forward"]], "torch.ao.ns.fx": [[2067, 0, 0, "-", "graph_matcher"], [2067, 0, 0, "-", "graph_passes"], [2067, 0, 0, "-", "mappings"], [2067, 0, 0, "-", "n_shadows_utils"], [2067, 0, 0, "-", "ns_types"], [2067, 0, 0, "-", "pattern_utils"], [2067, 0, 0, "-", "qconfig_multi_mapping"], [2067, 0, 0, "-", "utils"], [2067, 0, 0, "-", "weight_utils"]], "torch.ao.ns.fx.utils": [[2088, 5, 1, "", "compute_cosine_similarity"], [2088, 5, 1, "", "compute_normalized_l2_error"], [2088, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[2067, 0, 0, "-", "scheduler"], [2067, 0, 0, "-", "sparsifier"]], "torch.ao.pruning.scheduler": [[2067, 0, 0, "-", "base_scheduler"], [2067, 0, 0, "-", "cubic_scheduler"], [2067, 0, 0, "-", "lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2067, 0, 0, "-", "base_sparsifier"], [2067, 0, 0, "-", "nearly_diagonal_sparsifier"], [2067, 0, 0, "-", "utils"], [2067, 0, 0, "-", "weight_norm_sparsifier"]], "torch.ao.quantization": [[788, 1, 1, "", "DeQuantStub"], [789, 1, 1, "", "QuantStub"], [790, 1, 1, "", "QuantWrapper"], [791, 1, 1, "", "add_quant_dequant"], [2067, 0, 0, "-", "backend_config"], [797, 1, 1, "", "convert"], [798, 1, 1, "", "default_eval_fn"], [2067, 0, 0, "-", "fake_quantize"], [2067, 0, 0, "-", "fuse_modules"], [2067, 0, 0, "-", "fuser_method_mappings"], [2067, 0, 0, "-", "fx"], [2067, 0, 0, "-", "observer"], [838, 1, 1, "", "prepare"], [839, 1, 1, "", "prepare_qat"], [840, 1, 1, "", "propagate_qconfig_"], [2070, 0, 0, "-", "pt2e"], [2067, 0, 0, "-", "qconfig"], [2067, 0, 0, "-", "qconfig_mapping"], [2067, 0, 0, "-", "quant_type"], [2067, 0, 0, "-", "quantization_mappings"], [858, 1, 1, "", "quantize"], [859, 1, 1, "", "quantize_dynamic"], [2067, 0, 0, "-", "quantize_fx"], [2067, 0, 0, "-", "quantize_jit"], [2067, 0, 0, "-", "quantize_pt2e"], [864, 1, 1, "", "quantize_qat"], [2070, 0, 0, "-", "quantizer"], [2067, 0, 0, "-", "stubs"], [865, 1, 1, "", "swap_module"], [2067, 0, 0, "-", "utils"]], "torch.ao.quantization.backend_config": [[792, 1, 1, "", "BackendConfig"], [793, 1, 1, "", "BackendPatternConfig"], [794, 1, 1, "", "DTypeConfig"], [795, 1, 1, "", "DTypeWithConstraints"], [796, 1, 1, "", "ObservationType"], [2067, 0, 0, "-", "backend_config"], [2067, 0, 0, "-", "executorch"], [2067, 0, 0, "-", "fbgemm"], [2067, 0, 0, "-", "native"], [2067, 0, 0, "-", "observation_type"], [2067, 0, 0, "-", "onednn"], [2067, 0, 0, "-", "qnnpack"], [2067, 0, 0, "-", "tensorrt"], [2067, 0, 0, "-", "utils"], [2067, 0, 0, "-", "x86"]], "torch.ao.quantization.backend_config.BackendConfig": [[792, 4, 1, "", "configs"], [792, 3, 1, "", "from_dict"], [792, 3, 1, "", "set_backend_pattern_config"], [792, 3, 1, "", "set_backend_pattern_configs"], [792, 3, 1, "", "set_name"], [792, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[793, 3, 1, "", "add_dtype_config"], [793, 3, 1, "", "from_dict"], [793, 3, 1, "", "set_dtype_configs"], [793, 3, 1, "", "set_fused_module"], [793, 3, 1, "", "set_fuser_method"], [793, 3, 1, "", "set_observation_type"], [793, 3, 1, "", "set_pattern"], [793, 3, 1, "", "set_qat_module"], [793, 3, 1, "", "set_reference_quantized_module"], [793, 3, 1, "", "set_root_module"], [793, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[794, 3, 1, "", "from_dict"], [794, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[796, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [796, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [796, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[799, 1, 1, "", "FakeQuantize"], [800, 1, 1, "", "FakeQuantizeBase"], [801, 1, 1, "", "FixedQParamsFakeQuantize"], [802, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [803, 2, 1, "", "default_fake_quant"], [804, 2, 1, "", "default_fused_act_fake_quant"], [805, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [806, 2, 1, "", "default_fused_wt_fake_quant"], [807, 2, 1, "", "default_histogram_fake_quant"], [808, 2, 1, "", "default_per_channel_weight_fake_quant"], [809, 2, 1, "", "default_weight_fake_quant"], [810, 1, 1, "", "disable_fake_quant"], [811, 1, 1, "", "disable_observer"], [812, 1, 1, "", "enable_fake_quant"], [813, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize": [[801, 3, 1, "", "extra_repr"]], "torch.ao.quantization.fuse_modules": [[814, 1, 1, "", "fuse_modules"]], "torch.ao.quantization.fx": [[2067, 0, 0, "-", "convert"], [2067, 0, 0, "-", "custom_config"], [2067, 0, 0, "-", "fuse"], [2067, 0, 0, "-", "fuse_handler"], [2067, 0, 0, "-", "graph_module"], [2067, 0, 0, "-", "lower_to_fbgemm"], [2067, 0, 0, "-", "lower_to_qnnpack"], [2067, 0, 0, "-", "lstm_utils"], [2067, 0, 0, "-", "match_utils"], [2067, 0, 0, "-", "pattern_utils"], [2067, 0, 0, "-", "prepare"], [2067, 0, 0, "-", "qconfig_mapping_utils"], [2067, 0, 0, "-", "quantize_handler"], [2067, 0, 0, "-", "tracer"], [2067, 0, 0, "-", "utils"]], "torch.ao.quantization.fx.custom_config": [[815, 1, 1, "", "ConvertCustomConfig"], [816, 1, 1, "", "FuseCustomConfig"], [817, 1, 1, "", "PrepareCustomConfig"], [818, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[815, 3, 1, "", "from_dict"], [815, 3, 1, "", "set_observed_to_quantized_mapping"], [815, 3, 1, "", "set_preserved_attributes"], [815, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[816, 3, 1, "", "from_dict"], [816, 3, 1, "", "set_preserved_attributes"], [816, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[817, 3, 1, "", "from_dict"], [817, 3, 1, "", "set_float_to_observed_mapping"], [817, 3, 1, "", "set_input_quantized_indexes"], [817, 3, 1, "", "set_non_traceable_module_classes"], [817, 3, 1, "", "set_non_traceable_module_names"], [817, 3, 1, "", "set_output_quantized_indexes"], [817, 3, 1, "", "set_preserved_attributes"], [817, 3, 1, "", "set_standalone_module_class"], [817, 3, 1, "", "set_standalone_module_name"], [817, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[819, 1, 1, "", "HistogramObserver"], [820, 1, 1, "", "MinMaxObserver"], [821, 1, 1, "", "MovingAverageMinMaxObserver"], [822, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [823, 1, 1, "", "NoopObserver"], [824, 1, 1, "", "ObserverBase"], [825, 1, 1, "", "PerChannelMinMaxObserver"], [826, 1, 1, "", "PlaceholderObserver"], [827, 1, 1, "", "RecordingObserver"], [828, 2, 1, "", "default_debug_observer"], [829, 2, 1, "", "default_dynamic_quant_observer"], [830, 2, 1, "", "default_float_qparams_observer"], [831, 2, 1, "", "default_histogram_observer"], [832, 2, 1, "", "default_observer"], [833, 2, 1, "", "default_per_channel_weight_observer"], [834, 2, 1, "", "default_placeholder_observer"], [835, 2, 1, "", "default_weight_observer"], [836, 1, 1, "", "get_observer_state_dict"], [837, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[820, 3, 1, "", "calculate_qparams"], [820, 3, 1, "", "forward"], [820, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[824, 3, 1, "", "with_args"], [824, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[825, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[2067, 0, 0, "-", "duplicate_dq_pass"], [2067, 0, 0, "-", "export_utils"], [2070, 0, 0, "-", "generate_numeric_debug_handle"], [2067, 0, 0, "-", "graph_utils"], [2067, 0, 0, "-", "port_metadata_pass"], [2067, 0, 0, "-", "prepare"], [2067, 0, 0, "-", "qat_utils"], [2070, 0, 0, "-", "representation"], [2067, 0, 0, "-", "utils"]], "torch.ao.quantization.pt2e.export_utils": [[841, 1, 1, "", "model_is_exported"]], "torch.ao.quantization.pt2e.representation": [[2067, 0, 0, "-", "rewrite"]], "torch.ao.quantization.qconfig": [[842, 1, 1, "", "QConfig"], [843, 2, 1, "", "default_activation_only_qconfig"], [844, 2, 1, "", "default_debug_qconfig"], [845, 2, 1, "", "default_dynamic_qconfig"], [846, 2, 1, "", "default_per_channel_qconfig"], [847, 2, 1, "", "default_qat_qconfig"], [848, 2, 1, "", "default_qat_qconfig_v2"], [849, 2, 1, "", "default_qconfig"], [850, 2, 1, "", "default_weight_only_qconfig"], [851, 2, 1, "", "float16_dynamic_qconfig"], [852, 2, 1, "", "float16_static_qconfig"], [853, 2, 1, "", "float_qparams_weight_only_qconfig"], [854, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[855, 1, 1, "", "QConfigMapping"], [856, 1, 1, "", "get_default_qat_qconfig_mapping"], [857, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[855, 3, 1, "", "from_dict"], [855, 3, 1, "", "set_global"], [855, 3, 1, "", "set_module_name"], [855, 3, 1, "", "set_module_name_object_type_order"], [855, 3, 1, "", "set_module_name_regex"], [855, 3, 1, "", "set_object_type"], [855, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[860, 1, 1, "", "convert_fx"], [861, 1, 1, "", "fuse_fx"], [862, 1, 1, "", "prepare_fx"], [863, 1, 1, "", "prepare_qat_fx"]], "torch.ao.quantization.quantizer": [[2067, 0, 0, "-", "composable_quantizer"], [2067, 0, 0, "-", "embedding_quantizer"], [2067, 0, 0, "-", "quantizer"], [2067, 0, 0, "-", "utils"], [2067, 0, 0, "-", "x86_inductor_quantizer"], [2067, 0, 0, "-", "xnnpack_quantizer"], [2067, 0, 0, "-", "xnnpack_quantizer_utils"]], "torch.autograd": [[1, 1, 1, "", "Function"], [1, 0, 0, "-", "anomaly_mode"], [894, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [1, 0, 0, "-", "forward_ad"], [1, 0, 0, "-", "function"], [1, 0, 0, "-", "functional"], [915, 5, 1, "", "grad"], [1, 0, 0, "-", "grad_mode"], [1, 0, 0, "-", "gradcheck"], [1, 0, 0, "-", "graph"], [1, 0, 0, "-", "profiler"], [1, 0, 0, "-", "profiler_legacy"], [1, 0, 0, "-", "profiler_util"], [1, 1, 1, "", "set_detect_anomaly"], [1, 0, 0, "-", "variable"]], "torch.autograd.Function": [[890, 3, 1, "", "backward"], [891, 3, 1, "", "forward"], [892, 3, 1, "", "jvp"], [893, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[895, 1, 1, "", "UnpackedDualTensor"], [896, 1, 1, "", "dual_level"], [897, 5, 1, "", "enter_dual_level"], [898, 5, 1, "", "exit_dual_level"], [899, 5, 1, "", "make_dual"], [900, 5, 1, "", "unpack_dual"]], "torch.autograd.forward_ad.UnpackedDualTensor": [[895, 3, 1, "", "count"], [895, 3, 1, "", "index"], [895, 2, 1, "", "primal"], [895, 2, 1, "", "tangent"]], "torch.autograd.function": [[901, 1, 1, "", "BackwardCFunction"], [906, 1, 1, "", "InplaceFunction"], [907, 1, 1, "", "NestedIOFunction"], [908, 5, 1, "", "once_differentiable"]], "torch.autograd.function.BackwardCFunction": [[901, 3, 1, "", "apply"], [901, 3, 1, "", "apply_jvp"], [901, 3, 1, "", "mark_dirty"], [901, 3, 1, "", "mark_non_differentiable"], [901, 3, 1, "", "save_for_backward"], [901, 3, 1, "", "save_for_forward"], [901, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.FunctionCtx": [[902, 3, 1, "", "mark_dirty"], [903, 3, 1, "", "mark_non_differentiable"], [904, 3, 1, "", "save_for_backward"], [905, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.InplaceFunction": [[906, 3, 1, "", "backward"], [906, 3, 1, "", "forward"], [906, 3, 1, "", "jvp"], [906, 3, 1, "", "mark_dirty"], [906, 3, 1, "", "mark_non_differentiable"], [906, 3, 1, "", "save_for_backward"], [906, 3, 1, "", "save_for_forward"], [906, 3, 1, "", "set_materialize_grads"], [906, 3, 1, "", "setup_context"], [906, 3, 1, "", "vjp"], [906, 3, 1, "", "vmap"]], "torch.autograd.function.NestedIOFunction": [[907, 3, 1, "", "backward"], [907, 3, 1, "", "backward_extended"], [907, 3, 1, "", "forward"], [907, 3, 1, "", "forward_extended"], [907, 3, 1, "", "jvp"], [907, 3, 1, "", "mark_dirty"], [907, 3, 1, "", "mark_non_differentiable"], [907, 3, 1, "", "save_for_backward"], [907, 3, 1, "", "save_for_forward"], [907, 4, 1, "", "saved_tensors"], [907, 3, 1, "", "set_materialize_grads"], [907, 3, 1, "", "setup_context"], [907, 3, 1, "", "vjp"], [907, 3, 1, "", "vmap"]], "torch.autograd.functional": [[909, 5, 1, "", "hessian"], [910, 5, 1, "", "hvp"], [911, 5, 1, "", "jacobian"], [912, 5, 1, "", "jvp"], [913, 5, 1, "", "vhp"], [914, 5, 1, "", "vjp"]], "torch.autograd.grad_mode": [[916, 1, 1, "", "inference_mode"], [917, 1, 1, "", "set_grad_enabled"], [918, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.grad_mode.inference_mode": [[916, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_grad_enabled": [[917, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_multithreading_enabled": [[918, 3, 1, "", "clone"]], "torch.autograd.gradcheck": [[919, 6, 1, "", "GradcheckError"], [920, 5, 1, "", "gradcheck"], [921, 5, 1, "", "gradgradcheck"]], "torch.autograd.graph": [[1, 1, 1, "", "GradientEdge"], [1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 5, 1, "", "get_gradient_edge"], [927, 5, 1, "", "increment_version"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.graph.Node": [[922, 3, 1, "", "metadata"], [923, 3, 1, "", "name"], [924, 4, 1, "", "next_functions"], [925, 3, 1, "", "register_hook"], [926, 3, 1, "", "register_prehook"]], "torch.autograd.profiler": [[928, 1, 1, "", "EnforceUnique"], [929, 1, 1, "", "KinetoStepTracker"], [1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [930, 5, 1, "", "load_nvprof"], [931, 5, 1, "", "parse_nvprof_trace"], [1, 1, 1, "", "profile"], [936, 1, 1, "", "record_function"]], "torch.autograd.profiler.EnforceUnique": [[928, 3, 1, "", "see"]], "torch.autograd.profiler.KinetoStepTracker": [[929, 3, 1, "", "current_step"], [929, 3, 1, "", "erase_step_count"], [929, 3, 1, "", "increment_step"], [929, 3, 1, "", "init_step_count"]], "torch.autograd.profiler.profile": [[932, 3, 1, "", "export_chrome_trace"], [933, 3, 1, "", "key_averages"], [934, 4, 1, "", "self_cpu_time_total"], [935, 3, 1, "", "total_average"]], "torch.autograd.profiler_util": [[937, 1, 1, "", "Interval"], [938, 1, 1, "", "Kernel"], [939, 1, 1, "", "MemRecordsAcc"], [940, 1, 1, "", "StringTable"]], "torch.autograd.profiler_util.Interval": [[937, 3, 1, "", "elapsed_us"]], "torch.autograd.profiler_util.Kernel": [[938, 3, 1, "", "count"], [938, 2, 1, "", "device"], [938, 2, 1, "", "duration"], [938, 3, 1, "", "index"], [938, 2, 1, "", "name"]], "torch.autograd.profiler_util.MemRecordsAcc": [[939, 3, 1, "", "in_interval"]], "torch.autograd.profiler_util.StringTable": [[940, 3, 1, "", "clear"], [940, 3, 1, "", "copy"], [940, 2, 1, "", "default_factory"], [940, 3, 1, "", "fromkeys"], [940, 3, 1, "", "get"], [940, 3, 1, "", "items"], [940, 3, 1, "", "keys"], [940, 3, 1, "", "pop"], [940, 3, 1, "", "popitem"], [940, 3, 1, "", "setdefault"], [940, 3, 1, "", "update"], [940, 3, 1, "", "values"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mha"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "nnpack"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPAParams"], [2, 5, 1, "", "can_use_efficient_attention"], [2, 5, 1, "", "can_use_flash_attention"], [2, 5, 1, "", "cudnn_sdp_enabled"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_cudnn_sdp"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_blas_library"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 0, 0, "-", "rnn"], [2, 5, 1, "", "version"]], "torch.backends.mha": [[2, 5, 1, "", "get_fastpath_enabled"], [2, 5, 1, "", "set_fastpath_enabled"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.nnpack": [[2, 5, 1, "", "flags"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "set_flags"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.backends.xeon": [[2, 0, 0, "-", "run_cpu"]], "torch.compiler": [[975, 5, 1, "", "allow_in_graph"], [976, 5, 1, "", "assume_constant_result"], [977, 5, 1, "", "compile"], [978, 5, 1, "", "cudagraph_mark_step_begin"], [979, 5, 1, "", "disable"], [980, 5, 1, "", "is_compiling"], [981, 5, 1, "", "is_dynamo_compiling"], [982, 5, 1, "", "list_backends"], [983, 5, 1, "", "reset"]], "torch.cpu": [[996, 1, 1, "", "Stream"], [997, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [998, 5, 1, "", "current_device"], [999, 5, 1, "", "current_stream"], [1000, 5, 1, "", "device_count"], [1001, 5, 1, "", "is_available"], [1002, 5, 1, "", "set_device"], [1003, 5, 1, "", "stream"], [1004, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda": [[1006, 1, 1, "", "CUDAGraph"], [1007, 1, 1, "", "CUDAPluggableAllocator"], [1008, 1, 1, "", "Event"], [1009, 1, 1, "", "ExternalStream"], [1010, 6, 1, "", "OutOfMemoryError"], [1011, 1, 1, "", "Stream"], [1012, 1, 1, "", "StreamContext"], [18, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [1013, 5, 1, "", "caching_allocator_alloc"], [1014, 5, 1, "", "caching_allocator_delete"], [1015, 5, 1, "", "can_device_access_peer"], [1016, 5, 1, "", "change_current_allocator"], [1017, 5, 1, "", "clock_rate"], [17, 0, 0, "-", "comm"], [1023, 5, 1, "", "current_blas_handle"], [1024, 5, 1, "", "current_device"], [1025, 5, 1, "", "current_stream"], [1026, 5, 1, "", "default_stream"], [1027, 1, 1, "", "device"], [1028, 5, 1, "", "device_count"], [1029, 1, 1, "", "device_of"], [1030, 5, 1, "", "empty_cache"], [17, 0, 0, "-", "error"], [1031, 5, 1, "", "get_allocator_backend"], [1032, 5, 1, "", "get_arch_list"], [1033, 5, 1, "", "get_device_capability"], [1034, 5, 1, "", "get_device_name"], [1035, 5, 1, "", "get_device_properties"], [1036, 5, 1, "", "get_gencode_flags"], [1037, 5, 1, "", "get_rng_state"], [1038, 5, 1, "", "get_rng_state_all"], [1039, 5, 1, "", "get_sync_debug_mode"], [1040, 1, 1, "", "graph"], [1041, 5, 1, "", "graph_pool_handle"], [17, 0, 0, "-", "graphs"], [1042, 5, 1, "", "init"], [1043, 5, 1, "", "initial_seed"], [1044, 5, 1, "", "ipc_collect"], [1045, 5, 1, "", "is_available"], [1046, 5, 1, "", "is_current_stream_capturing"], [1047, 5, 1, "", "is_initialized"], [17, 0, 0, "-", "jiterator"], [1050, 5, 1, "", "list_gpu_processes"], [1051, 5, 1, "", "make_graphed_callables"], [1052, 5, 1, "", "manual_seed"], [1053, 5, 1, "", "manual_seed_all"], [1054, 5, 1, "", "max_memory_allocated"], [1055, 5, 1, "", "max_memory_cached"], [1056, 5, 1, "", "max_memory_reserved"], [1057, 5, 1, "", "mem_get_info"], [17, 0, 0, "-", "memory"], [1058, 5, 1, "", "memory_allocated"], [1059, 5, 1, "", "memory_cached"], [1060, 5, 1, "", "memory_reserved"], [1061, 5, 1, "", "memory_snapshot"], [1062, 5, 1, "", "memory_stats"], [1063, 5, 1, "", "memory_summary"], [1064, 5, 1, "", "memory_usage"], [17, 0, 0, "-", "nccl"], [17, 0, 0, "-", "nvtx"], [1069, 5, 1, "", "power_draw"], [17, 0, 0, "-", "profiler"], [17, 0, 0, "-", "random"], [1070, 5, 1, "", "reset_max_memory_allocated"], [1071, 5, 1, "", "reset_max_memory_cached"], [1072, 5, 1, "", "reset_peak_memory_stats"], [1073, 5, 1, "", "seed"], [1074, 5, 1, "", "seed_all"], [1075, 5, 1, "", "set_device"], [1076, 5, 1, "", "set_per_process_memory_fraction"], [1077, 5, 1, "", "set_rng_state"], [1078, 5, 1, "", "set_rng_state_all"], [1079, 5, 1, "", "set_stream"], [1080, 5, 1, "", "set_sync_debug_mode"], [17, 0, 0, "-", "sparse"], [1081, 5, 1, "", "stream"], [17, 0, 0, "-", "streams"], [1082, 5, 1, "", "synchronize"], [1083, 5, 1, "", "temperature"], [1084, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[1006, 3, 1, "", "capture_begin"], [1006, 3, 1, "", "capture_end"], [1006, 3, 1, "", "debug_dump"], [1006, 3, 1, "", "enable_debug_mode"], [1006, 3, 1, "", "pool"], [1006, 3, 1, "", "replay"], [1006, 3, 1, "", "reset"]], "torch.cuda.Event": [[1008, 3, 1, "", "elapsed_time"], [1008, 3, 1, "", "from_ipc_handle"], [1008, 3, 1, "", "ipc_handle"], [1008, 3, 1, "", "query"], [1008, 3, 1, "", "record"], [1008, 3, 1, "", "synchronize"], [1008, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[1009, 3, 1, "", "query"], [1009, 3, 1, "", "record_event"], [1009, 3, 1, "", "synchronize"], [1009, 3, 1, "", "wait_event"], [1009, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[1011, 3, 1, "", "query"], [1011, 3, 1, "", "record_event"], [1011, 3, 1, "", "synchronize"], [1011, 3, 1, "", "wait_event"], [1011, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[18, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "common"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda.comm": [[1018, 5, 1, "", "broadcast"], [1019, 5, 1, "", "broadcast_coalesced"], [1020, 5, 1, "", "gather"], [1021, 5, 1, "", "reduce_add"], [1022, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1048, 5, 1, "", "_create_jit_fn"], [1049, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[2110, 5, 1, "", "_dump_snapshot"], [2110, 5, 1, "", "_record_memory_history"], [2110, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1065, 5, 1, "", "mark"], [1066, 5, 1, "", "range"], [1067, 5, 1, "", "range_pop"], [1068, 5, 1, "", "range_push"]], "torch.distributed": [[27, 1, 1, "", "Backend"], [27, 1, 1, "", "DistBackendError"], [27, 1, 1, "", "DistError"], [27, 1, 1, "", "DistNetworkError"], [27, 1, 1, "", "DistStoreError"], [27, 1, 1, "", "FileStore"], [23, 1, 1, "", "GradBucket"], [27, 1, 1, "", "HashStore"], [27, 1, 1, "", "P2POp"], [27, 1, 1, "", "PrefixStore"], [27, 1, 1, "", "ReduceOp"], [27, 1, 1, "", "Store"], [27, 1, 1, "", "TCPStore"], [27, 1, 1, "", "Work"], [27, 0, 0, "-", "algorithms"], [27, 5, 1, "", "all_gather"], [27, 5, 1, "", "all_gather_into_tensor"], [27, 5, 1, "", "all_gather_object"], [27, 5, 1, "", "all_reduce"], [27, 5, 1, "", "all_to_all"], [27, 5, 1, "", "all_to_all_single"], [27, 0, 0, "-", "argparse_util"], [2072, 0, 0, "-", "autograd"], [27, 5, 1, "", "barrier"], [27, 5, 1, "", "batch_isend_irecv"], [27, 5, 1, "", "breakpoint"], [27, 5, 1, "", "broadcast"], [27, 5, 1, "", "broadcast_object_list"], [27, 0, 0, "-", "c10d_logger"], [29, 0, 0, "-", "checkpoint"], [27, 0, 0, "-", "collective_utils"], [27, 0, 0, "-", "constants"], [27, 0, 0, "-", "device_mesh"], [27, 0, 0, "-", "distributed_c10d"], [27, 0, 0, "-", "elastic"], [53, 0, 0, "-", "fsdp"], [27, 5, 1, "", "gather"], [27, 5, 1, "", "gather_object"], [27, 5, 1, "", "get_backend"], [27, 5, 1, "", "get_global_rank"], [27, 5, 1, "", "get_group_rank"], [27, 5, 1, "", "get_process_group_ranks"], [27, 5, 1, "", "get_rank"], [27, 5, 1, "", "get_world_size"], [27, 5, 1, "", "init_process_group"], [27, 5, 1, "", "irecv"], [27, 5, 1, "", "is_available"], [27, 5, 1, "", "is_gloo_available"], [27, 5, 1, "", "is_initialized"], [27, 5, 1, "", "is_mpi_available"], [27, 5, 1, "", "is_nccl_available"], [27, 5, 1, "", "is_torchelastic_launched"], [27, 5, 1, "", "isend"], [27, 0, 0, "-", "launch"], [27, 0, 0, "-", "launcher"], [27, 0, 0, "-", "logging_handlers"], [27, 5, 1, "", "monitored_barrier"], [27, 5, 1, "", "new_group"], [27, 0, 0, "-", "nn"], [31, 0, 0, "-", "optim"], [27, 0, 0, "-", "pipeline"], [32, 0, 0, "-", "pipelining"], [27, 5, 1, "", "recv"], [27, 5, 1, "", "recv_object_list"], [27, 5, 1, "", "reduce"], [27, 1, 1, "", "reduce_op"], [27, 5, 1, "", "reduce_scatter"], [27, 5, 1, "", "reduce_scatter_tensor"], [27, 0, 0, "-", "remote_device"], [27, 0, 0, "-", "rendezvous"], [2072, 0, 0, "-", "rpc"], [46, 0, 0, "-", "run"], [27, 5, 1, "", "scatter"], [27, 5, 1, "", "scatter_object_list"], [27, 5, 1, "", "send"], [27, 5, 1, "", "send_object_list"], [27, 0, 0, "-", "tensor"], [27, 0, 0, "-", "utils"]], "torch.distributed.Backend": [[27, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[23, 5, 1, "", "buffer"], [23, 5, 1, "", "gradients"], [23, 5, 1, "", "index"], [23, 5, 1, "", "is_last"], [23, 5, 1, "", "parameters"], [23, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[27, 5, 1, "", "add"], [27, 5, 1, "", "compare_set"], [27, 5, 1, "", "delete_key"], [27, 5, 1, "", "get"], [27, 5, 1, "", "num_keys"], [27, 5, 1, "", "set"], [27, 5, 1, "", "set_timeout"], [27, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[28, 1, 1, "", "Join"], [28, 1, 1, "", "JoinHook"], [28, 1, 1, "", "Joinable"], [27, 0, 0, "-", "ddp_comm_hooks"], [27, 0, 0, "-", "join"], [27, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[28, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[28, 3, 1, "", "main_hook"], [28, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[28, 4, 1, "", "join_device"], [28, 3, 1, "", "join_hook"], [28, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks": [[27, 0, 0, "-", "ddp_zero_hook"], [27, 0, 0, "-", "debugging_hooks"], [27, 0, 0, "-", "default_hooks"], [27, 0, 0, "-", "mixed_precision_hooks"], [27, 0, 0, "-", "optimizer_overlap_hooks"], [27, 0, 0, "-", "post_localSGD_hook"], [27, 0, 0, "-", "powerSGD_hook"], [27, 0, 0, "-", "quantization_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[23, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[23, 5, 1, "", "allreduce_hook"], [23, 5, 1, "", "bf16_compress_hook"], [23, 5, 1, "", "bf16_compress_wrapper"], [23, 5, 1, "", "fp16_compress_hook"], [23, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[23, 1, 1, "", "PowerSGDState"], [23, 5, 1, "", "batched_powerSGD_hook"], [23, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[23, 3, 1, "", "__getstate__"], [23, 3, 1, "", "__setstate__"]], "torch.distributed.algorithms.model_averaging": [[27, 0, 0, "-", "averagers"], [27, 0, 0, "-", "hierarchical_model_averager"], [27, 0, 0, "-", "utils"]], "torch.distributed.autograd": [[2072, 5, 1, "", "backward"], [2072, 1, 1, "", "context"], [2072, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[29, 1, 1, "", "DefaultLoadPlanner"], [29, 1, 1, "", "DefaultSavePlanner"], [29, 1, 1, "", "FileSystemReader"], [29, 1, 1, "", "FileSystemWriter"], [29, 1, 1, "", "LoadPlan"], [29, 1, 1, "", "LoadPlanner"], [29, 1, 1, "", "ReadItem"], [29, 1, 1, "", "SavePlan"], [29, 1, 1, "", "SavePlanner"], [29, 1, 1, "", "StorageReader"], [29, 1, 1, "", "StorageWriter"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "default_planner"], [27, 0, 0, "-", "filesystem"], [29, 0, 0, "-", "format_utils"], [29, 0, 0, "-", "logger"], [29, 0, 0, "-", "logging_handlers"], [27, 0, 0, "-", "metadata"], [27, 0, 0, "-", "optimizer"], [27, 0, 0, "-", "planner"], [27, 0, 0, "-", "planner_helpers"], [27, 0, 0, "-", "resharding"], [29, 0, 0, "-", "staging"], [27, 0, 0, "-", "state_dict"], [27, 0, 0, "-", "state_dict_loader"], [27, 0, 0, "-", "state_dict_saver"], [27, 0, 0, "-", "stateful"], [27, 0, 0, "-", "storage"], [27, 0, 0, "-", "utils"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[29, 3, 1, "", "lookup_tensor"], [29, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[29, 3, 1, "", "lookup_object"], [29, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.FileSystemReader": [[29, 4, 1, "", "checkpoint_id"]], "torch.distributed.checkpoint.FileSystemWriter": [[29, 3, 1, "", "stage"]], "torch.distributed.checkpoint.LoadPlanner": [[29, 3, 1, "", "commit_tensor"], [29, 3, 1, "", "create_global_plan"], [29, 3, 1, "", "create_local_plan"], [29, 3, 1, "", "finish_plan"], [29, 3, 1, "", "load_bytes"], [29, 3, 1, "", "resolve_bytes"], [29, 3, 1, "", "resolve_tensor"], [29, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[29, 3, 1, "", "create_global_plan"], [29, 3, 1, "", "create_local_plan"], [29, 3, 1, "", "finish_plan"], [29, 3, 1, "", "resolve_data"], [29, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[29, 3, 1, "", "prepare_global_plan"], [29, 3, 1, "", "prepare_local_plan"], [29, 3, 1, "", "read_data"], [29, 3, 1, "", "read_metadata"], [29, 3, 1, "", "reset"], [29, 3, 1, "", "set_up_storage_reader"], [29, 3, 1, "", "validate_checkpoint_id"]], "torch.distributed.checkpoint.StorageWriter": [[29, 3, 1, "", "finish"], [29, 3, 1, "", "prepare_global_plan"], [29, 3, 1, "", "prepare_local_plan"], [29, 3, 1, "", "reset"], [29, 3, 1, "", "set_up_storage_writer"], [29, 3, 1, "", "storage_meta"], [29, 3, 1, "", "validate_checkpoint_id"], [29, 3, 1, "", "write_data"]], "torch.distributed.checkpoint.format_utils": [[29, 1, 1, "", "BroadcastingTorchSaveReader"], [29, 1, 1, "", "DynamicMetaLoadPlanner"], [29, 5, 1, "", "dcp_to_torch_save"], [29, 5, 1, "", "torch_save_to_dcp"]], "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader": [[29, 3, 1, "", "prepare_global_plan"], [29, 3, 1, "", "prepare_local_plan"], [29, 3, 1, "", "read_data"], [29, 3, 1, "", "read_metadata"], [29, 3, 1, "", "reset"], [29, 3, 1, "", "set_up_storage_reader"], [29, 3, 1, "", "validate_checkpoint_id"]], "torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner": [[29, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.planner": [[29, 1, 1, "", "WriteItem"]], "torch.distributed.checkpoint.planner.WriteItem": [[29, 3, 1, "", "tensor_storage_size"]], "torch.distributed.checkpoint.staging": [[29, 1, 1, "", "AsyncStager"], [29, 1, 1, "", "BlockingAsyncStager"]], "torch.distributed.checkpoint.staging.AsyncStager": [[29, 4, 1, "", "should_synchronize_after_execute"], [29, 3, 1, "", "stage"], [29, 3, 1, "", "synchronize_staging"]], "torch.distributed.checkpoint.staging.BlockingAsyncStager": [[29, 3, 1, "", "stage"], [29, 3, 1, "", "synchronize_staging"]], "torch.distributed.checkpoint.state_dict": [[29, 1, 1, "", "StateDictOptions"], [29, 5, 1, "", "get_model_state_dict"], [29, 5, 1, "", "get_optimizer_state_dict"], [29, 5, 1, "", "get_state_dict"], [29, 5, 1, "", "set_model_state_dict"], [29, 5, 1, "", "set_optimizer_state_dict"], [29, 5, 1, "", "set_state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[29, 5, 1, "", "load"], [29, 5, 1, "", "load_state_dict"]], "torch.distributed.checkpoint.state_dict_saver": [[29, 5, 1, "", "async_save"], [29, 5, 1, "", "save"], [29, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.stateful": [[29, 1, 1, "", "Stateful"]], "torch.distributed.checkpoint.stateful.Stateful": [[29, 3, 1, "", "load_state_dict"], [29, 3, 1, "", "state_dict"]], "torch.distributed.device_mesh": [[27, 1, 1, "", "DeviceMesh"], [27, 5, 1, "", "init_device_mesh"]], "torch.distributed.elastic": [[36, 0, 0, "-", "agent"], [39, 0, 0, "-", "events"], [42, 0, 0, "-", "metrics"], [43, 0, 0, "-", "multiprocessing"], [45, 0, 0, "-", "rendezvous"], [48, 0, 0, "-", "timer"], [27, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[36, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[36, 1, 1, "", "ElasticAgent"], [36, 1, 1, "", "SimpleElasticAgent"], [36, 1, 1, "", "Worker"], [36, 1, 1, "", "WorkerGroup"], [36, 1, 1, "", "WorkerSpec"], [36, 1, 1, "", "WorkerState"], [27, 0, 0, "-", "api"], [36, 0, 0, "-", "health_check_server"], [27, 0, 0, "-", "local_elastic_agent"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[36, 3, 1, "", "get_worker_group"], [36, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[36, 3, 1, "", "_assign_worker_ranks"], [36, 3, 1, "", "_exit_barrier"], [36, 3, 1, "", "_initialize_workers"], [36, 3, 1, "", "_monitor_workers"], [36, 3, 1, "", "_rendezvous"], [36, 3, 1, "", "_restart_workers"], [36, 3, 1, "", "_shutdown"], [36, 3, 1, "", "_start_workers"], [36, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[36, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[36, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[36, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.health_check_server": [[36, 1, 1, "", "HealthCheckServer"], [36, 5, 1, "", "create_healthcheck_server"]], "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer": [[36, 3, 1, "", "start"], [36, 3, 1, "", "stop"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[36, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events": [[27, 0, 0, "-", "api"], [39, 5, 1, "", "get_logging_handler"], [27, 0, 0, "-", "handlers"], [39, 5, 1, "", "record"]], "torch.distributed.elastic.events.api": [[39, 1, 1, "", "Event"], [39, 2, 1, "", "EventMetadataValue"], [39, 1, 1, "", "EventSource"]], "torch.distributed.elastic.metrics": [[27, 0, 0, "-", "api"], [42, 5, 1, "", "configure"], [42, 5, 1, "", "prof"], [42, 5, 1, "", "put_metric"]], "torch.distributed.elastic.metrics.api": [[42, 1, 1, "", "ConsoleMetricHandler"], [42, 1, 1, "", "MetricHandler"], [42, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.multiprocessing": [[27, 0, 0, "-", "api"], [38, 0, 0, "-", "errors"], [27, 0, 0, "-", "redirects"], [43, 5, 1, "", "start_processes"], [47, 0, 0, "-", "subprocess_handler"], [27, 0, 0, "-", "tail_log"]], "torch.distributed.elastic.multiprocessing.api": [[43, 1, 1, "", "DefaultLogsSpecs"], [43, 1, 1, "", "LogsDest"], [43, 1, 1, "", "LogsSpecs"], [43, 1, 1, "", "MultiprocessContext"], [43, 1, 1, "", "PContext"], [43, 1, 1, "", "RunProcsResult"], [43, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs": [[43, 3, 1, "", "reify"]], "torch.distributed.elastic.multiprocessing.api.LogsSpecs": [[43, 3, 1, "", "reify"]], "torch.distributed.elastic.multiprocessing.errors": [[38, 1, 1, "", "ChildFailedError"], [38, 1, 1, "", "ErrorHandler"], [38, 1, 1, "", "ProcessFailure"], [27, 0, 0, "-", "error_handler"], [27, 0, 0, "-", "handlers"], [38, 5, 1, "", "record"]], "torch.distributed.elastic.multiprocessing.subprocess_handler": [[47, 0, 0, "-", "handlers"], [47, 0, 0, "-", "subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers": [[47, 5, 1, "", "get_subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler": [[47, 1, 1, "", "SubprocessHandler"]], "torch.distributed.elastic.rendezvous": [[45, 1, 1, "", "RendezvousClosedError"], [45, 1, 1, "", "RendezvousConnectionError"], [45, 1, 1, "", "RendezvousError"], [45, 1, 1, "", "RendezvousGracefulExitError"], [45, 1, 1, "", "RendezvousHandler"], [45, 1, 1, "", "RendezvousHandlerRegistry"], [45, 1, 1, "", "RendezvousParameters"], [45, 1, 1, "", "RendezvousStateError"], [45, 1, 1, "", "RendezvousTimeoutError"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "c10d_rendezvous_backend"], [27, 0, 0, "-", "dynamic_rendezvous"], [27, 0, 0, "-", "etcd_rendezvous"], [27, 0, 0, "-", "etcd_rendezvous_backend"], [27, 0, 0, "-", "etcd_server"], [27, 0, 0, "-", "etcd_store"], [45, 0, 0, "-", "registry"], [27, 0, 0, "-", "static_tcp_rendezvous"], [27, 0, 0, "-", "utils"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[45, 3, 1, "", "get_backend"], [45, 3, 1, "", "get_run_id"], [45, 3, 1, "", "is_closed"], [45, 3, 1, "", "next_rendezvous"], [45, 3, 1, "", "num_nodes_waiting"], [45, 3, 1, "", "set_closed"], [45, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[45, 3, 1, "", "create_handler"], [45, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[45, 3, 1, "", "get"], [45, 3, 1, "", "get_as_bool"], [45, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[45, 1, 1, "", "C10dRendezvousBackend"], [45, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[45, 3, 1, "", "get_state"], [45, 4, 1, "", "name"], [45, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[45, 1, 1, "", "DynamicRendezvousHandler"], [45, 1, 1, "", "RendezvousBackend"], [45, 1, 1, "", "RendezvousTimeout"], [45, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[45, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[45, 3, 1, "", "get_state"], [45, 4, 1, "", "name"], [45, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[45, 4, 1, "", "close"], [45, 4, 1, "", "heartbeat"], [45, 4, 1, "", "join"], [45, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[45, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[45, 1, 1, "", "EtcdRendezvousBackend"], [45, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[45, 3, 1, "", "get_state"], [45, 4, 1, "", "name"], [45, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[45, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[45, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[45, 3, 1, "", "add"], [45, 3, 1, "", "check"], [45, 3, 1, "", "get"], [45, 3, 1, "", "set"], [45, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[48, 1, 1, "", "FileTimerClient"], [48, 1, 1, "", "FileTimerServer"], [48, 1, 1, "", "LocalTimerClient"], [48, 1, 1, "", "LocalTimerServer"], [48, 1, 1, "", "TimerClient"], [48, 1, 1, "", "TimerRequest"], [48, 1, 1, "", "TimerServer"], [27, 0, 0, "-", "api"], [48, 5, 1, "", "configure"], [48, 0, 0, "-", "debug_info_logging"], [48, 5, 1, "", "expires"], [27, 0, 0, "-", "file_based_local_timer"], [27, 0, 0, "-", "local_timer"]], "torch.distributed.elastic.timer.TimerClient": [[48, 3, 1, "", "acquire"], [48, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[48, 3, 1, "", "clear_timers"], [48, 3, 1, "", "get_expired_timers"], [48, 3, 1, "", "register_timers"]], "torch.distributed.elastic.timer.debug_info_logging": [[48, 5, 1, "", "log_debug_info_for_expired_timers"]], "torch.distributed.elastic.utils": [[27, 0, 0, "-", "api"], [27, 0, 0, "-", "data"], [27, 0, 0, "-", "distributed"], [27, 0, 0, "-", "log_level"], [27, 0, 0, "-", "logging"], [27, 0, 0, "-", "store"]], "torch.distributed.elastic.utils.data": [[27, 0, 0, "-", "cycling_iterator"], [27, 0, 0, "-", "elastic_distributed_sampler"]], "torch.distributed.fsdp": [[53, 1, 1, "", "BackwardPrefetch"], [53, 1, 1, "", "CPUOffload"], [53, 1, 1, "", "FullOptimStateDictConfig"], [53, 1, 1, "", "FullStateDictConfig"], [53, 1, 1, "", "FullyShardedDataParallel"], [53, 1, 1, "", "LocalOptimStateDictConfig"], [53, 1, 1, "", "LocalStateDictConfig"], [53, 1, 1, "", "MixedPrecision"], [53, 1, 1, "", "OptimStateDictConfig"], [53, 1, 1, "", "ShardedOptimStateDictConfig"], [53, 1, 1, "", "ShardedStateDictConfig"], [53, 1, 1, "", "ShardingStrategy"], [53, 1, 1, "", "StateDictConfig"], [53, 1, 1, "", "StateDictSettings"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "fully_sharded_data_parallel"], [27, 0, 0, "-", "sharded_grad_scaler"], [27, 0, 0, "-", "wrap"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "check_is_root"], [53, 3, 1, "", "clip_grad_norm_"], [53, 3, 1, "", "flatten_sharded_optim_state_dict"], [53, 3, 1, "", "forward"], [53, 3, 1, "", "fsdp_modules"], [53, 3, 1, "", "full_optim_state_dict"], [53, 3, 1, "", "get_state_dict_type"], [53, 4, 1, "", "module"], [53, 3, 1, "", "named_buffers"], [53, 3, 1, "", "named_parameters"], [53, 3, 1, "", "no_sync"], [53, 3, 1, "", "optim_state_dict"], [53, 3, 1, "", "optim_state_dict_to_load"], [53, 3, 1, "", "register_comm_hook"], [53, 3, 1, "", "rekey_optim_state_dict"], [53, 3, 1, "", "scatter_full_optim_state_dict"], [53, 3, 1, "", "set_state_dict_type"], [53, 3, 1, "", "shard_full_optim_state_dict"], [53, 3, 1, "", "sharded_optim_state_dict"], [53, 3, 1, "", "state_dict_type"], [53, 3, 1, "", "summon_full_params"]], "torch.distributed.launcher": [[27, 0, 0, "-", "api"]], "torch.distributed.nn": [[27, 0, 0, "-", "api"], [27, 0, 0, "-", "functional"], [27, 0, 0, "-", "jit"]], "torch.distributed.nn.api": [[27, 0, 0, "-", "remote_module"]], "torch.distributed.nn.api.remote_module": [[2072, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[2072, 3, 1, "", "get_module_rref"], [2072, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[27, 0, 0, "-", "instantiator"], [27, 0, 0, "-", "templates"]], "torch.distributed.nn.jit.templates": [[27, 0, 0, "-", "remote_module_template"]], "torch.distributed.optim": [[31, 1, 1, "", "DistributedOptimizer"], [31, 1, 1, "", "PostLocalSGDOptimizer"], [31, 1, 1, "", "ZeroRedundancyOptimizer"], [27, 0, 0, "-", "apply_optimizer_in_backward"], [27, 0, 0, "-", "functional_adadelta"], [27, 0, 0, "-", "functional_adagrad"], [27, 0, 0, "-", "functional_adam"], [27, 0, 0, "-", "functional_adamax"], [27, 0, 0, "-", "functional_adamw"], [27, 0, 0, "-", "functional_rmsprop"], [27, 0, 0, "-", "functional_rprop"], [27, 0, 0, "-", "functional_sgd"], [27, 0, 0, "-", "named_optimizer"], [27, 0, 0, "-", "optimizer"], [27, 0, 0, "-", "post_localSGD_optimizer"], [27, 0, 0, "-", "utils"], [27, 0, 0, "-", "zero_redundancy_optimizer"]], "torch.distributed.optim.DistributedOptimizer": [[31, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[31, 3, 1, "", "load_state_dict"], [31, 3, 1, "", "state_dict"], [31, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[31, 3, 1, "", "add_param_group"], [31, 3, 1, "", "consolidate_state_dict"], [31, 4, 1, "", "join_device"], [31, 3, 1, "", "join_hook"], [31, 4, 1, "", "join_process_group"], [31, 3, 1, "", "load_state_dict"], [31, 3, 1, "", "state_dict"], [31, 3, 1, "", "step"]], "torch.distributed.pipeline": [[27, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[2065, 1, 1, "", "Pipe"], [27, 0, 0, "-", "batchnorm"], [27, 0, 0, "-", "checkpoint"], [27, 0, 0, "-", "copy"], [27, 0, 0, "-", "dependency"], [27, 0, 0, "-", "microbatch"], [27, 0, 0, "-", "phony"], [27, 0, 0, "-", "pipe"], [27, 0, 0, "-", "pipeline"], [27, 0, 0, "-", "skip"], [27, 0, 0, "-", "stream"], [27, 0, 0, "-", "utils"], [27, 0, 0, "-", "worker"]], "torch.distributed.pipeline.sync.Pipe": [[2065, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip": [[27, 0, 0, "-", "layout"], [27, 0, 0, "-", "namespace"], [27, 0, 0, "-", "portal"], [27, 0, 0, "-", "skippable"], [27, 0, 0, "-", "tracker"]], "torch.distributed.pipeline.sync.skip.skippable": [[2065, 1, 1, "", "pop"], [2065, 5, 1, "", "skippable"], [2065, 1, 1, "", "stash"], [2065, 5, 1, "", "verify_skippables"]], "torch.distributed.pipelining": [[32, 1, 1, "", "ArgsChunkSpec"], [32, 1, 1, "", "KwargsChunkSpec"], [32, 1, 1, "", "Pipe"], [32, 0, 0, "-", "PipelineSchedule"], [32, 1, 1, "", "SplitPoint"], [32, 5, 1, "", "annotate_split_points"], [32, 0, 0, "-", "microbatch"], [32, 5, 1, "", "pipe_split"], [32, 5, 1, "", "pipeline"]], "torch.distributed.pipelining.PipelineSchedule": [[32, 1, 1, "", "Schedule1F1B"], [32, 1, 1, "", "ScheduleGPipe"], [32, 1, 1, "", "ScheduleInterleaved1F1B"], [32, 1, 1, "", "ScheduleLoopedBFS"]], "torch.distributed.pipelining.microbatch": [[32, 1, 1, "", "TensorChunkSpec"], [32, 5, 1, "", "merge_chunks"], [32, 5, 1, "", "split_args_kwargs_into_chunks"]], "torch.distributed.rpc": [[2072, 1, 1, "", "BackendType"], [2072, 1, 1, "", "PyRRef"], [2072, 1, 1, "", "RpcBackendOptions"], [2072, 1, 1, "", "TensorPipeRpcBackendOptions"], [2072, 1, 1, "", "WorkerInfo"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "backend_registry"], [27, 0, 0, "-", "constants"], [27, 0, 0, "-", "functions"], [2072, 5, 1, "", "get_worker_info"], [2072, 5, 1, "", "init_rpc"], [27, 0, 0, "-", "internal"], [27, 0, 0, "-", "options"], [2072, 5, 1, "", "remote"], [2072, 5, 1, "", "rpc_async"], [2072, 5, 1, "", "rpc_sync"], [27, 0, 0, "-", "rref_proxy"], [27, 0, 0, "-", "server_process_global_profiler"], [2072, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[2072, 3, 1, "", "backward"], [2072, 3, 1, "", "confirmed_by_owner"], [2072, 3, 1, "", "is_owner"], [2072, 3, 1, "", "local_value"], [2072, 3, 1, "", "owner"], [2072, 3, 1, "", "owner_name"], [2072, 3, 1, "", "remote"], [2072, 3, 1, "", "rpc_async"], [2072, 3, 1, "", "rpc_sync"], [2072, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[2072, 4, 1, "", "init_method"], [2072, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[2072, 4, 1, "", "device_maps"], [2072, 4, 1, "", "devices"], [2072, 4, 1, "", "init_method"], [2072, 4, 1, "", "num_worker_threads"], [2072, 4, 1, "", "rpc_timeout"], [2072, 3, 1, "", "set_device_map"], [2072, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[2072, 4, 1, "", "id"], [2072, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[2072, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[33, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel": [[33, 1, 1, "", "ColwiseParallel"], [33, 1, 1, "", "PrepareModuleInput"], [33, 1, 1, "", "PrepareModuleOutput"], [33, 1, 1, "", "RowwiseParallel"], [33, 1, 1, "", "SequenceParallel"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "ddp"], [27, 0, 0, "-", "fsdp"], [27, 0, 0, "-", "input_reshard"], [27, 0, 0, "-", "loss"], [33, 5, 1, "", "loss_parallel"], [33, 5, 1, "", "parallelize_module"], [27, 0, 0, "-", "style"]], "torch.distributions": [[34, 0, 0, "-", "bernoulli"], [34, 0, 0, "-", "beta"], [34, 0, 0, "-", "binomial"], [34, 0, 0, "-", "categorical"], [34, 0, 0, "-", "cauchy"], [34, 0, 0, "-", "chi2"], [34, 0, 0, "-", "constraint_registry"], [34, 0, 0, "-", "constraints"], [34, 0, 0, "-", "continuous_bernoulli"], [34, 0, 0, "-", "dirichlet"], [34, 0, 0, "-", "distribution"], [34, 0, 0, "-", "exp_family"], [34, 0, 0, "-", "exponential"], [34, 0, 0, "-", "fishersnedecor"], [34, 0, 0, "-", "gamma"], [34, 0, 0, "-", "geometric"], [34, 0, 0, "-", "gumbel"], [34, 0, 0, "-", "half_cauchy"], [34, 0, 0, "-", "half_normal"], [34, 0, 0, "-", "independent"], [34, 0, 0, "-", "inverse_gamma"], [34, 0, 0, "-", "kl"], [34, 0, 0, "-", "kumaraswamy"], [34, 0, 0, "-", "laplace"], [34, 0, 0, "-", "lkj_cholesky"], [34, 0, 0, "-", "log_normal"], [34, 0, 0, "-", "logistic_normal"], [34, 0, 0, "-", "lowrank_multivariate_normal"], [34, 0, 0, "-", "mixture_same_family"], [34, 0, 0, "-", "multinomial"], [34, 0, 0, "-", "multivariate_normal"], [34, 0, 0, "-", "negative_binomial"], [34, 0, 0, "-", "normal"], [34, 0, 0, "-", "one_hot_categorical"], [34, 0, 0, "-", "pareto"], [34, 0, 0, "-", "poisson"], [34, 0, 0, "-", "relaxed_bernoulli"], [34, 0, 0, "-", "relaxed_categorical"], [34, 0, 0, "-", "studentT"], [34, 0, 0, "-", "transformed_distribution"], [34, 0, 0, "-", "transforms"], [34, 0, 0, "-", "uniform"], [34, 0, 0, "-", "utils"], [34, 0, 0, "-", "von_mises"], [34, 0, 0, "-", "weibull"], [34, 0, 0, "-", "wishart"]], "torch.distributions.bernoulli": [[34, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "enumerate_support"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_enumerate_support"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "param_shape"], [34, 4, 1, "", "probs"], [34, 3, 1, "", "sample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.beta": [[34, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[34, 2, 1, "", "arg_constraints"], [34, 4, 1, "", "concentration0"], [34, 4, 1, "", "concentration1"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.binomial": [[34, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "enumerate_support"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_enumerate_support"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "param_shape"], [34, 4, 1, "", "probs"], [34, 3, 1, "", "sample"], [34, 4, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.categorical": [[34, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "enumerate_support"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_enumerate_support"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "param_shape"], [34, 4, 1, "", "probs"], [34, 3, 1, "", "sample"], [34, 4, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[34, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.chi2": [[34, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[34, 2, 1, "", "arg_constraints"], [34, 4, 1, "", "df"], [34, 3, 1, "", "expand"]], "torch.distributions.constraint_registry": [[34, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[34, 3, 1, "", "register"]], "torch.distributions.constraints": [[34, 1, 1, "", "Constraint"], [34, 2, 1, "", "cat"], [34, 2, 1, "", "dependent_property"], [34, 2, 1, "", "greater_than"], [34, 2, 1, "", "greater_than_eq"], [34, 2, 1, "", "half_open_interval"], [34, 2, 1, "", "independent"], [34, 2, 1, "", "integer_interval"], [34, 2, 1, "", "interval"], [34, 2, 1, "", "less_than"], [34, 2, 1, "", "multinomial"], [34, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[34, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[34, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "param_shape"], [34, 4, 1, "", "probs"], [34, 3, 1, "", "rsample"], [34, 3, 1, "", "sample"], [34, 4, 1, "", "stddev"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[34, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.distribution": [[34, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[34, 4, 1, "", "arg_constraints"], [34, 4, 1, "", "batch_shape"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "enumerate_support"], [34, 4, 1, "", "event_shape"], [34, 3, 1, "", "expand"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "perplexity"], [34, 3, 1, "", "rsample"], [34, 3, 1, "", "sample"], [34, 3, 1, "", "sample_n"], [34, 3, 1, "", "set_default_validate_args"], [34, 4, 1, "", "stddev"], [34, 4, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[34, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[34, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[34, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 4, 1, "", "stddev"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[34, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.gamma": [[34, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.geometric": [[34, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "probs"], [34, 3, 1, "", "sample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[34, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "stddev"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[34, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "scale"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[34, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "scale"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.independent": [[34, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "enumerate_support"], [34, 3, 1, "", "expand"], [34, 4, 1, "", "has_enumerate_support"], [34, 4, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 3, 1, "", "sample"], [34, 4, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.inverse_gamma": [[34, 1, 1, "", "InverseGamma"]], "torch.distributions.inverse_gamma.InverseGamma": [[34, 2, 1, "", "arg_constraints"], [34, 4, 1, "", "concentration"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "rate"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.kl": [[34, 5, 1, "", "kl_divergence"], [34, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[34, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.laplace": [[34, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 4, 1, "", "stddev"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[34, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "expand"], [34, 3, 1, "", "log_prob"], [34, 3, 1, "", "sample"], [34, 2, 1, "", "support"]], "torch.distributions.log_normal": [[34, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 4, 1, "", "loc"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "scale"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[34, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[34, 2, 1, "", "arg_constraints"], [34, 4, 1, "", "covariance_matrix"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "precision_matrix"], [34, 3, 1, "", "rsample"], [34, 4, 1, "", "scale_tril"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[34, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 4, 1, "", "component_distribution"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mixture_distribution"], [34, 3, 1, "", "sample"], [34, 4, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[34, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "param_shape"], [34, 4, 1, "", "probs"], [34, 3, 1, "", "sample"], [34, 4, 1, "", "support"], [34, 2, 1, "", "total_count"], [34, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[34, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[34, 2, 1, "", "arg_constraints"], [34, 4, 1, "", "covariance_matrix"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "precision_matrix"], [34, 3, 1, "", "rsample"], [34, 4, 1, "", "scale_tril"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[34, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "expand"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "param_shape"], [34, 4, 1, "", "probs"], [34, 3, 1, "", "sample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.normal": [[34, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 3, 1, "", "sample"], [34, 4, 1, "", "stddev"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[34, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "enumerate_support"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_enumerate_support"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "param_shape"], [34, 4, 1, "", "probs"], [34, 3, 1, "", "sample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.pareto": [[34, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.poisson": [[34, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "expand"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "sample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[34, 1, 1, "", "LogitRelaxedBernoulli"], [34, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "expand"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "param_shape"], [34, 4, 1, "", "probs"], [34, 3, 1, "", "rsample"], [34, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "probs"], [34, 2, 1, "", "support"], [34, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[34, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 4, 1, "", "logits"], [34, 4, 1, "", "probs"], [34, 2, 1, "", "support"], [34, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[34, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[34, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "expand"], [34, 4, 1, "", "has_rsample"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 3, 1, "", "rsample"], [34, 3, 1, "", "sample"], [34, 4, 1, "", "support"]], "torch.distributions.transforms": [[34, 1, 1, "", "AbsTransform"], [34, 1, 1, "", "AffineTransform"], [34, 1, 1, "", "CatTransform"], [34, 1, 1, "", "ComposeTransform"], [34, 1, 1, "", "CorrCholeskyTransform"], [34, 1, 1, "", "CumulativeDistributionTransform"], [34, 1, 1, "", "ExpTransform"], [34, 1, 1, "", "IndependentTransform"], [34, 1, 1, "", "LowerCholeskyTransform"], [34, 1, 1, "", "PositiveDefiniteTransform"], [34, 1, 1, "", "PowerTransform"], [34, 1, 1, "", "ReshapeTransform"], [34, 1, 1, "", "SigmoidTransform"], [34, 1, 1, "", "SoftmaxTransform"], [34, 1, 1, "", "SoftplusTransform"], [34, 1, 1, "", "StackTransform"], [34, 1, 1, "", "StickBreakingTransform"], [34, 1, 1, "", "TanhTransform"], [34, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[34, 3, 1, "", "forward_shape"], [34, 4, 1, "", "inv"], [34, 3, 1, "", "inverse_shape"], [34, 3, 1, "", "log_abs_det_jacobian"], [34, 4, 1, "", "sign"]], "torch.distributions.uniform": [[34, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "cdf"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "icdf"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "rsample"], [34, 4, 1, "", "stddev"], [34, 4, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[34, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 3, 1, "", "sample"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.weibull": [[34, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[34, 2, 1, "", "arg_constraints"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.distributions.wishart": [[34, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[34, 2, 1, "", "arg_constraints"], [34, 4, 1, "", "covariance_matrix"], [34, 3, 1, "", "entropy"], [34, 3, 1, "", "expand"], [34, 2, 1, "", "has_rsample"], [34, 3, 1, "", "log_prob"], [34, 4, 1, "", "mean"], [34, 4, 1, "", "mode"], [34, 4, 1, "", "precision_matrix"], [34, 3, 1, "", "rsample"], [34, 4, 1, "", "scale_tril"], [34, 2, 1, "", "support"], [34, 4, 1, "", "variance"]], "torch.export": [[50, 2, 1, "", "Constraint"], [50, 1, 1, "", "ExportBackwardSignature"], [50, 1, 1, "", "ExportGraphSignature"], [50, 1, 1, "", "ExportedProgram"], [50, 1, 1, "", "ModuleCallEntry"], [50, 1, 1, "", "ModuleCallSignature"], [50, 0, 0, "-", "custom_obj"], [50, 5, 1, "", "dims"], [50, 0, 0, "-", "dynamic_shapes"], [50, 5, 1, "", "export"], [50, 0, 0, "-", "exported_program"], [50, 0, 0, "-", "graph_signature"], [50, 5, 1, "", "load"], [50, 5, 1, "", "register_dataclass"], [50, 5, 1, "", "save"], [50, 0, 0, "-", "unflatten"]], "torch.export.ExportedProgram": [[50, 3, 1, "", "buffers"], [50, 3, 1, "", "module"], [50, 3, 1, "", "named_buffers"], [50, 3, 1, "", "named_parameters"], [50, 3, 1, "", "parameters"], [50, 3, 1, "", "run_decompositions"]], "torch.export.dynamic_shapes": [[50, 5, 1, "", "Dim"], [50, 1, 1, "", "ShapesCollection"], [50, 5, 1, "", "dynamic_dim"]], "torch.export.dynamic_shapes.ShapesCollection": [[50, 3, 1, "", "dynamic_shapes"]], "torch.export.graph_signature": [[50, 1, 1, "", "CustomObjArgument"], [50, 1, 1, "", "ExportGraphSignature"], [50, 1, 1, "", "InputKind"], [50, 1, 1, "", "InputSpec"], [50, 1, 1, "", "OutputKind"], [50, 1, 1, "", "OutputSpec"]], "torch.export.graph_signature.ExportGraphSignature": [[50, 3, 1, "", "get_replace_hook"], [50, 3, 1, "", "replace_all_uses"]], "torch.export.unflatten": [[50, 1, 1, "", "FlatArgsAdapter"], [50, 1, 1, "", "InterpreterModule"], [50, 5, 1, "", "unflatten"]], "torch.export.unflatten.FlatArgsAdapter": [[50, 3, 1, "", "adapt"]], "torch.fft": [[1122, 5, 1, "", "fft"], [1123, 5, 1, "", "fft2"], [1124, 5, 1, "", "fftfreq"], [1125, 5, 1, "", "fftn"], [1126, 5, 1, "", "fftshift"], [1127, 5, 1, "", "hfft"], [1128, 5, 1, "", "hfft2"], [1129, 5, 1, "", "hfftn"], [1130, 5, 1, "", "ifft"], [1131, 5, 1, "", "ifft2"], [1132, 5, 1, "", "ifftn"], [1133, 5, 1, "", "ifftshift"], [1134, 5, 1, "", "ihfft"], [1135, 5, 1, "", "ihfft2"], [1136, 5, 1, "", "ihfftn"], [1137, 5, 1, "", "irfft"], [1138, 5, 1, "", "irfft2"], [1139, 5, 1, "", "irfftn"], [1140, 5, 1, "", "rfft"], [1141, 5, 1, "", "rfft2"], [1142, 5, 1, "", "rfftfreq"], [1143, 5, 1, "", "rfftn"]], "torch.func": [[1163, 5, 1, "", "functional_call"], [1164, 5, 1, "", "functionalize"], [1165, 5, 1, "", "grad"], [1166, 5, 1, "", "grad_and_value"], [1167, 5, 1, "", "hessian"], [1168, 5, 1, "", "jacfwd"], [1169, 5, 1, "", "jacrev"], [1170, 5, 1, "", "jvp"], [1171, 5, 1, "", "linearize"], [1172, 5, 1, "", "replace_all_batch_norm_modules_"], [1173, 5, 1, "", "stack_module_state"], [1174, 5, 1, "", "vjp"], [1175, 5, 1, "", "vmap"]], "torch.futures": [[61, 1, 1, "", "Future"], [61, 5, 1, "", "collect_all"], [61, 5, 1, "", "wait_all"]], "torch.futures.Future": [[61, 3, 1, "", "add_done_callback"], [61, 3, 1, "", "done"], [61, 3, 1, "", "set_exception"], [61, 3, 1, "", "set_result"], [61, 3, 1, "", "then"], [61, 3, 1, "", "value"], [61, 3, 1, "", "wait"]], "torch.fx": [[62, 1, 1, "", "Graph"], [62, 1, 1, "", "GraphModule"], [62, 1, 1, "", "Interpreter"], [62, 1, 1, "", "Node"], [62, 1, 1, "", "Proxy"], [62, 1, 1, "", "Tracer"], [62, 1, 1, "", "Transformer"], [62, 0, 0, "-", "annotate"], [62, 0, 0, "-", "config"], [62, 0, 0, "-", "experimental"], [62, 0, 0, "-", "graph"], [62, 0, 0, "-", "graph_module"], [62, 0, 0, "-", "immutable_collections"], [62, 0, 0, "-", "interpreter"], [62, 0, 0, "-", "node"], [62, 0, 0, "-", "operator_schemas"], [62, 0, 0, "-", "passes"], [62, 0, 0, "-", "proxy"], [62, 5, 1, "", "replace_pattern"], [62, 0, 0, "-", "subgraph_rewriter"], [62, 5, 1, "", "symbolic_trace"], [62, 0, 0, "-", "tensor_type"], [62, 0, 0, "-", "traceback"], [62, 5, 1, "", "wrap"]], "torch.fx.Graph": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "call_function"], [62, 3, 1, "", "call_method"], [62, 3, 1, "", "call_module"], [62, 3, 1, "", "create_node"], [62, 3, 1, "", "eliminate_dead_code"], [62, 3, 1, "", "erase_node"], [62, 3, 1, "", "find_nodes"], [62, 3, 1, "", "get_attr"], [62, 3, 1, "", "graph_copy"], [62, 3, 1, "", "inserting_after"], [62, 3, 1, "", "inserting_before"], [62, 3, 1, "", "lint"], [62, 3, 1, "", "node_copy"], [62, 4, 1, "", "nodes"], [62, 3, 1, "", "on_generate_code"], [62, 3, 1, "", "output"], [62, 3, 1, "", "placeholder"], [62, 3, 1, "", "print_tabular"], [62, 3, 1, "", "process_inputs"], [62, 3, 1, "", "process_outputs"], [62, 3, 1, "", "python_code"], [62, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "add_submodule"], [62, 4, 1, "", "code"], [62, 3, 1, "", "delete_all_unused_submodules"], [62, 3, 1, "", "delete_submodule"], [62, 4, 1, "", "graph"], [62, 3, 1, "", "print_readable"], [62, 3, 1, "", "recompile"], [62, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[62, 3, 1, "", "boxed_run"], [62, 3, 1, "", "call_function"], [62, 3, 1, "", "call_method"], [62, 3, 1, "", "call_module"], [62, 3, 1, "", "fetch_args_kwargs_from_env"], [62, 3, 1, "", "fetch_attr"], [62, 3, 1, "", "get_attr"], [62, 3, 1, "", "map_nodes_to_values"], [62, 3, 1, "", "output"], [62, 3, 1, "", "placeholder"], [62, 3, 1, "", "run"], [62, 3, 1, "", "run_node"]], "torch.fx.Node": [[62, 4, 1, "", "all_input_nodes"], [62, 3, 1, "", "append"], [62, 4, 1, "", "args"], [62, 3, 1, "", "format_node"], [62, 3, 1, "", "insert_arg"], [62, 3, 1, "", "is_impure"], [62, 4, 1, "", "kwargs"], [62, 4, 1, "", "next"], [62, 3, 1, "", "normalized_arguments"], [62, 3, 1, "", "prepend"], [62, 4, 1, "", "prev"], [62, 3, 1, "", "replace_all_uses_with"], [62, 3, 1, "", "replace_input_with"], [62, 4, 1, "", "stack_trace"], [62, 3, 1, "", "update_arg"], [62, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[62, 3, 1, "", "call_module"], [62, 3, 1, "", "create_arg"], [62, 3, 1, "", "create_args_for_root"], [62, 3, 1, "", "create_node"], [62, 3, 1, "", "create_proxy"], [62, 3, 1, "", "get_fresh_qualname"], [62, 3, 1, "", "getattr"], [62, 3, 1, "", "is_leaf_module"], [62, 3, 1, "", "iter"], [62, 3, 1, "", "keys"], [62, 3, 1, "", "path_of_module"], [62, 3, 1, "", "proxy"], [62, 3, 1, "", "to_bool"], [62, 3, 1, "", "trace"]], "torch.fx.Transformer": [[62, 3, 1, "", "call_function"], [62, 3, 1, "", "call_module"], [62, 3, 1, "", "get_attr"], [62, 3, 1, "", "placeholder"], [62, 3, 1, "", "transform"]], "torch.fx.experimental": [[62, 0, 0, "-", "accelerator_partitioner"], [62, 0, 0, "-", "const_fold"], [62, 0, 0, "-", "debug"], [62, 0, 0, "-", "graph_gradual_typechecker"], [62, 0, 0, "-", "merge_matmul"], [62, 0, 0, "-", "meta_tracer"], [62, 0, 0, "-", "migrate_gradual_types"], [62, 0, 0, "-", "normalize"], [62, 0, 0, "-", "optimization"], [62, 0, 0, "-", "partitioner_utils"], [62, 0, 0, "-", "proxy_tensor"], [62, 0, 0, "-", "recording"], [62, 0, 0, "-", "refinement_types"], [62, 0, 0, "-", "rewriter"], [62, 0, 0, "-", "schema_type_annotation"], [62, 0, 0, "-", "sym_node"], [63, 0, 0, "-", "symbolic_shapes"], [62, 0, 0, "-", "unification"], [62, 0, 0, "-", "unify_refinements"], [62, 0, 0, "-", "validator"]], "torch.fx.experimental.migrate_gradual_types": [[62, 0, 0, "-", "constraint"], [62, 0, 0, "-", "constraint_generator"], [62, 0, 0, "-", "constraint_transformation"], [62, 0, 0, "-", "operation"], [62, 0, 0, "-", "transform_to_z3"], [62, 0, 0, "-", "util"], [62, 0, 0, "-", "z3_types"]], "torch.fx.experimental.symbolic_shapes": [[1176, 1, 1, "", "CallMethodKey"], [1177, 1, 1, "", "ConvertIntKey"], [1178, 1, 1, "", "DimConstraints"], [1179, 1, 1, "", "DimDynamic"], [1180, 1, 1, "", "DivideByKey"], [1181, 1, 1, "", "EqualityConstraint"], [1182, 1, 1, "", "PropagateUnbackedSymInts"], [1183, 1, 1, "", "RelaxedUnspecConstraint"], [1184, 1, 1, "", "ShapeEnv"], [1185, 1, 1, "", "ShapeEnvSettings"], [1186, 1, 1, "", "StatefulSymbolicContext"], [1187, 1, 1, "", "StatelessSymbolicContext"], [1188, 1, 1, "", "StrictMinMaxConstraint"], [1189, 1, 1, "", "SubclassSymbolicContext"], [1190, 1, 1, "", "SymbolicContext"], [1191, 5, 1, "", "canonicalize_bool_expr"], [1192, 5, 1, "", "check_consistent"], [1193, 5, 1, "", "compute_unbacked_bindings"], [1194, 5, 1, "", "constrain_range"], [1195, 5, 1, "", "constrain_unify"], [1196, 5, 1, "", "definitely_false"], [1197, 5, 1, "", "definitely_true"], [1198, 5, 1, "", "guard_size_oblivious"], [1199, 5, 1, "", "has_free_symbols"], [1200, 5, 1, "", "hint_int"], [1201, 5, 1, "", "is_concrete_bool"], [1202, 5, 1, "", "is_concrete_int"], [1203, 5, 1, "", "lru_cache"], [1204, 5, 1, "", "parallel_and"], [1205, 5, 1, "", "parallel_or"], [1206, 5, 1, "", "rebind_unbacked"], [1207, 5, 1, "", "resolve_unbacked_bindings"], [1208, 5, 1, "", "statically_known_true"], [1209, 5, 1, "", "sym_eq"]], "torch.fx.experimental.symbolic_shapes.CallMethodKey": [[1176, 3, 1, "", "get"]], "torch.fx.experimental.symbolic_shapes.ConvertIntKey": [[1177, 3, 1, "", "get"]], "torch.fx.experimental.symbolic_shapes.DimConstraints": [[1178, 3, 1, "", "add"], [1178, 3, 1, "", "add_equality"], [1178, 3, 1, "", "forced_specializations"], [1178, 3, 1, "", "prettify_results"], [1178, 3, 1, "", "remove_redundant_dynamic_results"], [1178, 3, 1, "", "rewrite_with_congruences"], [1178, 3, 1, "", "solve"]], "torch.fx.experimental.symbolic_shapes.DivideByKey": [[1180, 3, 1, "", "get"]], "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts": [[1182, 3, 1, "", "boxed_run"], [1182, 3, 1, "", "call_function"], [1182, 3, 1, "", "call_method"], [1182, 3, 1, "", "call_module"], [1182, 3, 1, "", "fetch_args_kwargs_from_env"], [1182, 3, 1, "", "fetch_attr"], [1182, 3, 1, "", "get_attr"], [1182, 3, 1, "", "map_nodes_to_values"], [1182, 3, 1, "", "output"], [1182, 3, 1, "", "placeholder"], [1182, 3, 1, "", "run"], [1182, 3, 1, "", "run_node"]], "torch.fx.experimental.symbolic_shapes.ShapeEnv": [[1184, 3, 1, "", "add_var_to_val"], [1184, 3, 1, "", "bind_symbols"], [1184, 3, 1, "", "bound_sympy"], [1184, 3, 1, "", "check_equal"], [1184, 3, 1, "", "cleanup"], [1184, 3, 1, "", "create_symbol"], [1184, 3, 1, "", "create_symbolic_sizes_strides_storage_offset"], [1184, 3, 1, "", "create_symboolnode"], [1184, 3, 1, "", "create_symfloatnode"], [1184, 3, 1, "", "create_symintnode"], [1184, 3, 1, "", "create_unbacked_symbool"], [1184, 3, 1, "", "create_unbacked_symfloat"], [1184, 3, 1, "", "create_unbacked_symint"], [1184, 3, 1, "", "create_unspecified_symbol"], [1184, 3, 1, "", "create_unspecified_symint_and_symbol"], [1184, 3, 1, "", "defer_runtime_assert"], [1184, 3, 1, "", "evaluate_expr"], [1184, 3, 1, "", "evaluate_guards_expression"], [1184, 3, 1, "", "evaluate_guards_for_args"], [1184, 3, 1, "", "format_guards"], [1184, 3, 1, "", "freeze"], [1184, 3, 1, "", "freeze_runtime_asserts"], [1184, 3, 1, "", "get_axioms"], [1184, 3, 1, "", "get_implications"], [1184, 3, 1, "", "get_nontrivial_guards"], [1184, 3, 1, "", "ignore_fresh_unbacked_symbols"], [1184, 3, 1, "", "is_unbacked_symint"], [1184, 3, 1, "", "produce_guards"], [1184, 3, 1, "", "produce_guards_expression"], [1184, 3, 1, "", "replace"], [1184, 3, 1, "", "set_unbacked_var_to_val"], [1184, 3, 1, "", "simplify"], [1184, 3, 1, "", "size_hint"], [1184, 3, 1, "", "suppress_guards"]], "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint": [[1188, 3, 1, "", "render"]], "torch.fx.experimental.unification": [[62, 0, 0, "-", "core"], [62, 0, 0, "-", "dispatch"], [62, 0, 0, "-", "match"], [62, 0, 0, "-", "more"], [62, 0, 0, "-", "multipledispatch"], [62, 0, 0, "-", "unification_tools"], [62, 0, 0, "-", "utils"], [62, 0, 0, "-", "variable"]], "torch.fx.experimental.unification.multipledispatch": [[62, 0, 0, "-", "conflict"], [62, 0, 0, "-", "core"], [62, 0, 0, "-", "dispatcher"], [62, 0, 0, "-", "utils"], [62, 0, 0, "-", "variadic"]], "torch.fx.passes": [[62, 0, 0, "-", "annotate_getitem_nodes"], [62, 0, 0, "-", "backends"], [62, 0, 0, "-", "dialect"], [62, 0, 0, "-", "fake_tensor_prop"], [62, 0, 0, "-", "graph_drawer"], [62, 0, 0, "-", "graph_manipulation"], [62, 0, 0, "-", "infra"], [62, 0, 0, "-", "net_min_base"], [62, 0, 0, "-", "operator_support"], [62, 0, 0, "-", "param_fetch"], [62, 0, 0, "-", "pass_manager"], [62, 0, 0, "-", "reinplace"], [62, 0, 0, "-", "runtime_assert"], [62, 0, 0, "-", "shape_prop"], [62, 0, 0, "-", "split_module"], [62, 0, 0, "-", "split_utils"], [62, 0, 0, "-", "splitter_base"], [62, 0, 0, "-", "tests"], [62, 0, 0, "-", "tools_common"], [62, 0, 0, "-", "utils"]], "torch.fx.passes.backends": [[62, 0, 0, "-", "cudagraphs"]], "torch.fx.passes.dialect": [[62, 0, 0, "-", "common"]], "torch.fx.passes.dialect.common": [[62, 0, 0, "-", "cse_pass"]], "torch.fx.passes.infra": [[62, 0, 0, "-", "partitioner"], [62, 0, 0, "-", "pass_base"], [62, 0, 0, "-", "pass_manager"]], "torch.fx.passes.tests": [[62, 0, 0, "-", "test_pass_manager"]], "torch.fx.passes.utils": [[62, 0, 0, "-", "common"], [62, 0, 0, "-", "fuser_utils"], [62, 0, 0, "-", "matcher_utils"], [62, 0, 0, "-", "matcher_with_name_node_map_utils"], [62, 0, 0, "-", "source_matcher_utils"]], "torch.hub": [[2008, 5, 1, "", "download_url_to_file"], [2008, 5, 1, "", "get_dir"], [2008, 5, 1, "", "help"], [2008, 5, 1, "", "list"], [2008, 5, 1, "", "load"], [2008, 5, 1, "", "load_state_dict_from_url"], [2008, 5, 1, "", "set_dir"]], "torch.jit": [[1267, 1, 1, "", "Attribute"], [1268, 1, 1, "", "ScriptFunction"], [1269, 1, 1, "", "ScriptModule"], [1270, 5, 1, "", "annotate"], [2010, 0, 0, "-", "annotations"], [1271, 5, 1, "", "enable_onednn_fusion"], [2010, 5, 1, "", "export"], [1272, 5, 1, "", "fork"], [1273, 5, 1, "", "freeze"], [2010, 0, 0, "-", "frontend"], [2010, 0, 0, "-", "generate_bytecode"], [1274, 5, 1, "", "ignore"], [1275, 5, 1, "", "interface"], [2012, 5, 1, "", "is_scripting"], [2012, 5, 1, "", "is_tracing"], [1276, 5, 1, "", "isinstance"], [1277, 5, 1, "", "load"], [2010, 0, 0, "-", "mobile"], [1278, 5, 1, "", "onednn_fusion_enabled"], [1279, 5, 1, "", "optimize_for_inference"], [2010, 0, 0, "-", "quantized"], [1280, 5, 1, "", "save"], [1281, 5, 1, "", "script"], [1282, 5, 1, "", "script_if_tracing"], [1283, 5, 1, "", "set_fusion_strategy"], [1284, 1, 1, "", "strict_fusion"], [2011, 0, 0, "-", "supported_ops"], [1285, 5, 1, "", "trace"], [1286, 5, 1, "", "trace_module"], [2015, 0, 0, "-", "unsupported_tensor_ops"], [1287, 5, 1, "", "unused"], [1288, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1267, 3, 1, "", "count"], [1267, 3, 1, "", "index"], [1267, 2, 1, "", "type"], [1267, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1268, 3, 1, "", "get_debug_state"], [1268, 3, 1, "", "save"], [1268, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1269, 3, 1, "", "add_module"], [1269, 3, 1, "", "apply"], [1269, 3, 1, "", "bfloat16"], [1269, 3, 1, "", "buffers"], [1269, 3, 1, "", "children"], [1269, 4, 1, "", "code"], [1269, 4, 1, "", "code_with_constants"], [1269, 3, 1, "", "compile"], [1269, 3, 1, "", "cpu"], [1269, 3, 1, "", "cuda"], [1269, 3, 1, "", "double"], [1269, 3, 1, "", "eval"], [1269, 3, 1, "", "extra_repr"], [1269, 3, 1, "", "float"], [1269, 3, 1, "", "get_buffer"], [1269, 3, 1, "", "get_extra_state"], [1269, 3, 1, "", "get_parameter"], [1269, 3, 1, "", "get_submodule"], [1269, 4, 1, "", "graph"], [1269, 3, 1, "", "half"], [1269, 4, 1, "", "inlined_graph"], [1269, 3, 1, "", "ipu"], [1269, 3, 1, "", "load_state_dict"], [1269, 3, 1, "", "modules"], [1269, 3, 1, "", "named_buffers"], [1269, 3, 1, "", "named_children"], [1269, 3, 1, "", "named_modules"], [1269, 3, 1, "", "named_parameters"], [1269, 3, 1, "", "parameters"], [1269, 3, 1, "", "register_backward_hook"], [1269, 3, 1, "", "register_buffer"], [1269, 3, 1, "", "register_forward_hook"], [1269, 3, 1, "", "register_forward_pre_hook"], [1269, 3, 1, "", "register_full_backward_hook"], [1269, 3, 1, "", "register_full_backward_pre_hook"], [1269, 3, 1, "", "register_load_state_dict_post_hook"], [1269, 3, 1, "", "register_module"], [1269, 3, 1, "", "register_parameter"], [1269, 3, 1, "", "register_state_dict_pre_hook"], [1269, 3, 1, "", "requires_grad_"], [1269, 3, 1, "", "save"], [1269, 3, 1, "", "set_extra_state"], [1269, 3, 1, "", "share_memory"], [1269, 3, 1, "", "state_dict"], [1269, 3, 1, "", "to"], [1269, 3, 1, "", "to_empty"], [1269, 3, 1, "", "train"], [1269, 3, 1, "", "type"], [1269, 3, 1, "", "xpu"], [1269, 3, 1, "", "zero_grad"]], "torch.library": [[2017, 1, 1, "", "Library"], [2017, 5, 1, "", "custom_op"], [2017, 5, 1, "", "define"], [2017, 5, 1, "", "fallthrough_kernel"], [2017, 5, 1, "", "get_ctx"], [2017, 5, 1, "", "impl"], [2017, 5, 1, "", "impl_abstract"], [2017, 5, 1, "", "opcheck"], [2017, 5, 1, "", "register_autograd"], [2017, 5, 1, "", "register_fake"], [2017, 5, 1, "", "register_kernel"]], "torch.library.Library": [[2017, 3, 1, "", "define"], [2017, 3, 1, "", "impl"]], "torch.linalg": [[1299, 5, 1, "", "cholesky"], [1300, 5, 1, "", "cholesky_ex"], [1301, 5, 1, "", "cond"], [1302, 5, 1, "", "cross"], [1303, 5, 1, "", "det"], [1304, 5, 1, "", "diagonal"], [1305, 5, 1, "", "eig"], [1306, 5, 1, "", "eigh"], [1307, 5, 1, "", "eigvals"], [1308, 5, 1, "", "eigvalsh"], [1309, 5, 1, "", "householder_product"], [1310, 5, 1, "", "inv"], [1311, 5, 1, "", "inv_ex"], [1312, 5, 1, "", "ldl_factor"], [1313, 5, 1, "", "ldl_factor_ex"], [1314, 5, 1, "", "ldl_solve"], [1315, 5, 1, "", "lstsq"], [1316, 5, 1, "", "lu"], [1317, 5, 1, "", "lu_factor"], [1318, 5, 1, "", "lu_factor_ex"], [1319, 5, 1, "", "lu_solve"], [1320, 5, 1, "", "matmul"], [1321, 5, 1, "", "matrix_exp"], [1322, 5, 1, "", "matrix_norm"], [1323, 5, 1, "", "matrix_power"], [1324, 5, 1, "", "matrix_rank"], [1325, 5, 1, "", "multi_dot"], [1326, 5, 1, "", "norm"], [1327, 5, 1, "", "pinv"], [1328, 5, 1, "", "qr"], [1329, 5, 1, "", "slogdet"], [1330, 5, 1, "", "solve"], [1331, 5, 1, "", "solve_ex"], [1332, 5, 1, "", "solve_triangular"], [1333, 5, 1, "", "svd"], [1334, 5, 1, "", "svdvals"], [1335, 5, 1, "", "tensorinv"], [1336, 5, 1, "", "tensorsolve"], [1337, 5, 1, "", "vander"], [1338, 5, 1, "", "vecdot"], [1339, 5, 1, "", "vector_norm"]], "torch.masked": [[2020, 0, 0, "-", "maskedtensor"]], "torch.masked.maskedtensor": [[2020, 0, 0, "-", "binary"], [2020, 0, 0, "-", "core"], [2020, 0, 0, "-", "creation"], [2020, 0, 0, "-", "passthrough"], [2020, 0, 0, "-", "reductions"], [2020, 0, 0, "-", "unary"]], "torch.monitor": [[2026, 1, 1, "", "Aggregation"], [2026, 1, 1, "", "Event"], [2026, 1, 1, "", "EventHandlerHandle"], [2026, 1, 1, "", "Stat"], [2026, 1, 1, "", "TensorboardEventHandler"], [2026, 1, 1, "", "data_value_t"], [2026, 5, 1, "", "log_event"], [2026, 5, 1, "", "register_event_handler"], [2026, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[2026, 4, 1, "", "name"]], "torch.monitor.Event": [[2026, 3, 1, "", "__init__"], [2026, 4, 1, "", "data"], [2026, 4, 1, "", "name"], [2026, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[2026, 3, 1, "", "__init__"], [2026, 3, 1, "", "add"], [2026, 4, 1, "", "count"], [2026, 3, 1, "", "get"], [2026, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[2026, 3, 1, "", "__init__"]], "torch.mps": [[1378, 5, 1, "", "current_allocated_memory"], [1379, 5, 1, "", "device_count"], [1380, 5, 1, "", "driver_allocated_memory"], [1381, 5, 1, "", "empty_cache"], [2027, 0, 0, "-", "event"], [1383, 5, 1, "", "get_rng_state"], [1384, 5, 1, "", "manual_seed"], [2027, 0, 0, "-", "profiler"], [1388, 5, 1, "", "seed"], [1389, 5, 1, "", "set_per_process_memory_fraction"], [1390, 5, 1, "", "set_rng_state"], [1391, 5, 1, "", "synchronize"]], "torch.mps.event": [[1382, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1382, 3, 1, "", "elapsed_time"], [1382, 3, 1, "", "query"], [1382, 3, 1, "", "record"], [1382, 3, 1, "", "synchronize"], [1382, 3, 1, "", "wait"]], "torch.mps.profiler": [[1385, 5, 1, "", "profile"], [1386, 5, 1, "", "start"], [1387, 5, 1, "", "stop"]], "torch.mtia": [[1393, 6, 1, "", "DeferredMtiaCallError"], [1394, 1, 1, "", "Event"], [1395, 1, 1, "", "Stream"], [1396, 1, 1, "", "StreamContext"], [1397, 5, 1, "", "current_device"], [1398, 5, 1, "", "current_stream"], [1399, 5, 1, "", "default_stream"], [1400, 1, 1, "", "device"], [1401, 5, 1, "", "device_count"], [1402, 5, 1, "", "init"], [1403, 5, 1, "", "is_available"], [1404, 5, 1, "", "is_initialized"], [1405, 5, 1, "", "set_stream"], [1406, 5, 1, "", "stream"], [1407, 5, 1, "", "synchronize"]], "torch.multiprocessing": [[2029, 1, 1, "", "SpawnContext"], [2029, 5, 1, "", "get_all_sharing_strategies"], [2029, 5, 1, "", "get_sharing_strategy"], [2029, 0, 0, "-", "pool"], [2029, 0, 0, "-", "queue"], [2029, 0, 0, "-", "reductions"], [2029, 5, 1, "", "set_sharing_strategy"], [2029, 0, 0, "-", "spawn"]], "torch.multiprocessing.SpawnContext": [[2029, 3, 1, "", "join"]], "torch.multiprocessing.spawn": [[2029, 5, 1, "", "spawn"]], "torch.nested": [[2032, 5, 1, "", "as_nested_tensor"], [2032, 5, 1, "", "nested_tensor"], [2032, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1424, 1, 1, "", "AdaptiveAvgPool1d"], [1425, 1, 1, "", "AdaptiveAvgPool2d"], [1426, 1, 1, "", "AdaptiveAvgPool3d"], [1427, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1428, 1, 1, "", "AdaptiveMaxPool1d"], [1429, 1, 1, "", "AdaptiveMaxPool2d"], [1430, 1, 1, "", "AdaptiveMaxPool3d"], [1431, 1, 1, "", "AlphaDropout"], [1432, 1, 1, "", "AvgPool1d"], [1433, 1, 1, "", "AvgPool2d"], [1434, 1, 1, "", "AvgPool3d"], [1435, 1, 1, "", "BCELoss"], [1436, 1, 1, "", "BCEWithLogitsLoss"], [1437, 1, 1, "", "BatchNorm1d"], [1438, 1, 1, "", "BatchNorm2d"], [1439, 1, 1, "", "BatchNorm3d"], [1440, 1, 1, "", "Bilinear"], [1441, 1, 1, "", "CELU"], [1442, 1, 1, "", "CTCLoss"], [1443, 1, 1, "", "ChannelShuffle"], [1444, 1, 1, "", "CircularPad1d"], [1445, 1, 1, "", "CircularPad2d"], [1446, 1, 1, "", "CircularPad3d"], [1447, 1, 1, "", "ConstantPad1d"], [1448, 1, 1, "", "ConstantPad2d"], [1449, 1, 1, "", "ConstantPad3d"], [1450, 1, 1, "", "Conv1d"], [1451, 1, 1, "", "Conv2d"], [1452, 1, 1, "", "Conv3d"], [1453, 1, 1, "", "ConvTranspose1d"], [1454, 1, 1, "", "ConvTranspose2d"], [1455, 1, 1, "", "ConvTranspose3d"], [1456, 1, 1, "", "CosineEmbeddingLoss"], [1457, 1, 1, "", "CosineSimilarity"], [1458, 1, 1, "", "CrossEntropyLoss"], [1459, 1, 1, "", "DataParallel"], [1460, 1, 1, "", "Dropout"], [1461, 1, 1, "", "Dropout1d"], [1462, 1, 1, "", "Dropout2d"], [1463, 1, 1, "", "Dropout3d"], [1464, 1, 1, "", "ELU"], [1465, 1, 1, "", "Embedding"], [1466, 1, 1, "", "EmbeddingBag"], [1467, 1, 1, "", "FeatureAlphaDropout"], [1468, 1, 1, "", "Flatten"], [1469, 1, 1, "", "Fold"], [1470, 1, 1, "", "FractionalMaxPool2d"], [1471, 1, 1, "", "FractionalMaxPool3d"], [1472, 1, 1, "", "GELU"], [1473, 1, 1, "", "GLU"], [1474, 1, 1, "", "GRU"], [1475, 1, 1, "", "GRUCell"], [1476, 1, 1, "", "GaussianNLLLoss"], [1477, 1, 1, "", "GroupNorm"], [1478, 1, 1, "", "Hardshrink"], [1479, 1, 1, "", "Hardsigmoid"], [1480, 1, 1, "", "Hardswish"], [1481, 1, 1, "", "Hardtanh"], [1482, 1, 1, "", "HingeEmbeddingLoss"], [1483, 1, 1, "", "HuberLoss"], [1484, 1, 1, "", "Identity"], [1485, 1, 1, "", "InstanceNorm1d"], [1486, 1, 1, "", "InstanceNorm2d"], [1487, 1, 1, "", "InstanceNorm3d"], [1488, 1, 1, "", "KLDivLoss"], [1489, 1, 1, "", "L1Loss"], [1490, 1, 1, "", "LPPool1d"], [1491, 1, 1, "", "LPPool2d"], [1492, 1, 1, "", "LPPool3d"], [1493, 1, 1, "", "LSTM"], [1494, 1, 1, "", "LSTMCell"], [1495, 1, 1, "", "LayerNorm"], [1496, 1, 1, "", "LazyBatchNorm1d"], [1497, 1, 1, "", "LazyBatchNorm2d"], [1498, 1, 1, "", "LazyBatchNorm3d"], [1499, 1, 1, "", "LazyConv1d"], [1500, 1, 1, "", "LazyConv2d"], [1501, 1, 1, "", "LazyConv3d"], [1502, 1, 1, "", "LazyConvTranspose1d"], [1503, 1, 1, "", "LazyConvTranspose2d"], [1504, 1, 1, "", "LazyConvTranspose3d"], [1505, 1, 1, "", "LazyInstanceNorm1d"], [1506, 1, 1, "", "LazyInstanceNorm2d"], [1507, 1, 1, "", "LazyInstanceNorm3d"], [1508, 1, 1, "", "LazyLinear"], [1509, 1, 1, "", "LeakyReLU"], [1510, 1, 1, "", "Linear"], [1511, 1, 1, "", "LocalResponseNorm"], [1512, 1, 1, "", "LogSigmoid"], [1513, 1, 1, "", "LogSoftmax"], [1514, 1, 1, "", "MSELoss"], [1515, 1, 1, "", "MarginRankingLoss"], [1516, 1, 1, "", "MaxPool1d"], [1517, 1, 1, "", "MaxPool2d"], [1518, 1, 1, "", "MaxPool3d"], [1519, 1, 1, "", "MaxUnpool1d"], [1520, 1, 1, "", "MaxUnpool2d"], [1521, 1, 1, "", "MaxUnpool3d"], [1522, 1, 1, "", "Mish"], [1523, 1, 1, "", "Module"], [1524, 1, 1, "", "ModuleDict"], [1525, 1, 1, "", "ModuleList"], [1526, 1, 1, "", "MultiLabelMarginLoss"], [1527, 1, 1, "", "MultiLabelSoftMarginLoss"], [1528, 1, 1, "", "MultiMarginLoss"], [1529, 1, 1, "", "MultiheadAttention"], [1530, 1, 1, "", "NLLLoss"], [1531, 1, 1, "", "PReLU"], [1532, 1, 1, "", "PairwiseDistance"], [1533, 1, 1, "", "ParameterDict"], [1534, 1, 1, "", "ParameterList"], [1535, 1, 1, "", "PixelShuffle"], [1536, 1, 1, "", "PixelUnshuffle"], [1537, 1, 1, "", "PoissonNLLLoss"], [1538, 1, 1, "", "RMSNorm"], [1539, 1, 1, "", "RNN"], [1540, 1, 1, "", "RNNBase"], [1541, 1, 1, "", "RNNCell"], [1542, 1, 1, "", "RReLU"], [1543, 1, 1, "", "ReLU"], [1544, 1, 1, "", "ReLU6"], [1545, 1, 1, "", "ReflectionPad1d"], [1546, 1, 1, "", "ReflectionPad2d"], [1547, 1, 1, "", "ReflectionPad3d"], [1548, 1, 1, "", "ReplicationPad1d"], [1549, 1, 1, "", "ReplicationPad2d"], [1550, 1, 1, "", "ReplicationPad3d"], [1551, 1, 1, "", "SELU"], [1552, 1, 1, "", "Sequential"], [1553, 1, 1, "", "SiLU"], [1554, 1, 1, "", "Sigmoid"], [1555, 1, 1, "", "SmoothL1Loss"], [1556, 1, 1, "", "SoftMarginLoss"], [1557, 1, 1, "", "Softmax"], [1558, 1, 1, "", "Softmax2d"], [1559, 1, 1, "", "Softmin"], [1560, 1, 1, "", "Softplus"], [1561, 1, 1, "", "Softshrink"], [1562, 1, 1, "", "Softsign"], [1563, 1, 1, "", "SyncBatchNorm"], [1564, 1, 1, "", "Tanh"], [1565, 1, 1, "", "Tanhshrink"], [1566, 1, 1, "", "Threshold"], [1567, 1, 1, "", "Transformer"], [1568, 1, 1, "", "TransformerDecoder"], [1569, 1, 1, "", "TransformerDecoderLayer"], [1570, 1, 1, "", "TransformerEncoder"], [1571, 1, 1, "", "TransformerEncoderLayer"], [1572, 1, 1, "", "TripletMarginLoss"], [1573, 1, 1, "", "TripletMarginWithDistanceLoss"], [1574, 1, 1, "", "Unflatten"], [1575, 1, 1, "", "Unfold"], [1576, 1, 1, "", "Upsample"], [1577, 1, 1, "", "UpsamplingBilinear2d"], [1578, 1, 1, "", "UpsamplingNearest2d"], [1579, 1, 1, "", "ZeroPad1d"], [1580, 1, 1, "", "ZeroPad2d"], [1581, 1, 1, "", "ZeroPad3d"], [2034, 0, 0, "-", "attention"], [2033, 0, 0, "-", "backends"], [2033, 0, 0, "-", "common_types"], [2033, 0, 0, "-", "cpp"], [2033, 0, 0, "-", "functional"], [2033, 0, 0, "-", "grad"], [2033, 0, 0, "-", "init"], [2070, 0, 0, "-", "intrinsic"], [2033, 0, 0, "-", "modules"], [2033, 0, 0, "-", "parallel"], [2033, 0, 0, "-", "parameter"], [2070, 0, 0, "-", "qat"], [2070, 0, 0, "-", "quantizable"], [2070, 0, 0, "-", "quantized"], [2033, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1427, 3, 1, "", "log_prob"], [1427, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1465, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1466, 3, 1, "", "forward"], [1466, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1496, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1497, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1498, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1499, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1500, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1501, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1502, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1503, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1504, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1505, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1506, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1507, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1508, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1523, 3, 1, "", "add_module"], [1523, 3, 1, "", "apply"], [1523, 3, 1, "", "bfloat16"], [1523, 3, 1, "", "buffers"], [1523, 3, 1, "", "children"], [1523, 3, 1, "", "compile"], [1523, 3, 1, "", "cpu"], [1523, 3, 1, "", "cuda"], [1523, 3, 1, "", "double"], [1523, 3, 1, "", "eval"], [1523, 3, 1, "", "extra_repr"], [1523, 3, 1, "", "float"], [1523, 3, 1, "", "forward"], [1523, 3, 1, "", "get_buffer"], [1523, 3, 1, "", "get_extra_state"], [1523, 3, 1, "", "get_parameter"], [1523, 3, 1, "", "get_submodule"], [1523, 3, 1, "", "half"], [1523, 3, 1, "", "ipu"], [1523, 3, 1, "", "load_state_dict"], [1523, 3, 1, "", "modules"], [1523, 3, 1, "", "named_buffers"], [1523, 3, 1, "", "named_children"], [1523, 3, 1, "", "named_modules"], [1523, 3, 1, "", "named_parameters"], [1523, 3, 1, "", "parameters"], [1523, 3, 1, "", "register_backward_hook"], [1523, 3, 1, "", "register_buffer"], [1523, 3, 1, "", "register_forward_hook"], [1523, 3, 1, "", "register_forward_pre_hook"], [1523, 3, 1, "", "register_full_backward_hook"], [1523, 3, 1, "", "register_full_backward_pre_hook"], [1523, 3, 1, "", "register_load_state_dict_post_hook"], [1523, 3, 1, "", "register_module"], [1523, 3, 1, "", "register_parameter"], [1523, 3, 1, "", "register_state_dict_pre_hook"], [1523, 3, 1, "", "requires_grad_"], [1523, 3, 1, "", "set_extra_state"], [1523, 3, 1, "", "share_memory"], [1523, 3, 1, "", "state_dict"], [1523, 3, 1, "", "to"], [1523, 3, 1, "", "to_empty"], [1523, 3, 1, "", "train"], [1523, 3, 1, "", "type"], [1523, 3, 1, "", "xpu"], [1523, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1524, 3, 1, "", "clear"], [1524, 3, 1, "", "items"], [1524, 3, 1, "", "keys"], [1524, 3, 1, "", "pop"], [1524, 3, 1, "", "update"], [1524, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1525, 3, 1, "", "append"], [1525, 3, 1, "", "extend"], [1525, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1529, 3, 1, "", "forward"], [1529, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1533, 3, 1, "", "clear"], [1533, 3, 1, "", "copy"], [1533, 3, 1, "", "fromkeys"], [1533, 3, 1, "", "get"], [1533, 3, 1, "", "items"], [1533, 3, 1, "", "keys"], [1533, 3, 1, "", "pop"], [1533, 3, 1, "", "popitem"], [1533, 3, 1, "", "setdefault"], [1533, 3, 1, "", "update"], [1533, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1534, 3, 1, "", "append"], [1534, 3, 1, "", "extend"]], "torch.nn.RMSNorm": [[1538, 3, 1, "", "extra_repr"], [1538, 3, 1, "", "forward"], [1538, 3, 1, "", "reset_parameters"]], "torch.nn.RNNBase": [[1540, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1552, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1563, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1567, 3, 1, "", "forward"], [1567, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1568, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1569, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1570, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1571, 3, 1, "", "forward"]], "torch.nn.attention": [[1582, 1, 1, "", "SDPBackend"], [2035, 0, 0, "-", "bias"], [1587, 5, 1, "", "sdpa_kernel"]], "torch.nn.attention.SDPBackend": [[1582, 4, 1, "", "name"]], "torch.nn.attention.bias": [[1583, 1, 1, "", "CausalBias"], [1584, 1, 1, "", "CausalVariant"], [1585, 5, 1, "", "causal_lower_right"], [1586, 5, 1, "", "causal_upper_left"]], "torch.nn.backends": [[2033, 0, 0, "-", "thnn"]], "torch.nn.functional": [[1588, 5, 1, "", "adaptive_avg_pool1d"], [1589, 5, 1, "", "adaptive_avg_pool2d"], [1590, 5, 1, "", "adaptive_avg_pool3d"], [1591, 5, 1, "", "adaptive_max_pool1d"], [1592, 5, 1, "", "adaptive_max_pool2d"], [1593, 5, 1, "", "adaptive_max_pool3d"], [1594, 5, 1, "", "affine_grid"], [1595, 5, 1, "", "alpha_dropout"], [1596, 5, 1, "", "avg_pool1d"], [1597, 5, 1, "", "avg_pool2d"], [1598, 5, 1, "", "avg_pool3d"], [1599, 5, 1, "", "batch_norm"], [1600, 5, 1, "", "bilinear"], [1601, 5, 1, "", "binary_cross_entropy"], [1602, 5, 1, "", "binary_cross_entropy_with_logits"], [1603, 5, 1, "", "celu"], [1604, 5, 1, "", "conv1d"], [1605, 5, 1, "", "conv2d"], [1606, 5, 1, "", "conv3d"], [1607, 5, 1, "", "conv_transpose1d"], [1608, 5, 1, "", "conv_transpose2d"], [1609, 5, 1, "", "conv_transpose3d"], [1610, 5, 1, "", "cosine_embedding_loss"], [1611, 5, 1, "", "cosine_similarity"], [1612, 5, 1, "", "cross_entropy"], [1613, 5, 1, "", "ctc_loss"], [1614, 5, 1, "", "dropout"], [1615, 5, 1, "", "dropout1d"], [1616, 5, 1, "", "dropout2d"], [1617, 5, 1, "", "dropout3d"], [1618, 5, 1, "", "elu"], [1619, 5, 1, "", "elu_"], [1620, 5, 1, "", "embedding"], [1621, 5, 1, "", "embedding_bag"], [1622, 5, 1, "", "feature_alpha_dropout"], [1623, 5, 1, "", "fold"], [1624, 5, 1, "", "fractional_max_pool2d"], [1625, 5, 1, "", "fractional_max_pool3d"], [1626, 5, 1, "", "gaussian_nll_loss"], [1627, 5, 1, "", "gelu"], [1628, 5, 1, "", "glu"], [1629, 5, 1, "", "grid_sample"], [1630, 5, 1, "", "group_norm"], [1631, 5, 1, "", "gumbel_softmax"], [1632, 5, 1, "", "hardshrink"], [1633, 5, 1, "", "hardsigmoid"], [1634, 5, 1, "", "hardswish"], [1635, 5, 1, "", "hardtanh"], [1636, 5, 1, "", "hardtanh_"], [1637, 5, 1, "", "hinge_embedding_loss"], [1638, 5, 1, "", "huber_loss"], [1639, 5, 1, "", "instance_norm"], [1640, 5, 1, "", "interpolate"], [1641, 5, 1, "", "kl_div"], [1642, 5, 1, "", "l1_loss"], [1643, 5, 1, "", "layer_norm"], [1644, 5, 1, "", "leaky_relu"], [1645, 5, 1, "", "leaky_relu_"], [1646, 5, 1, "", "linear"], [1647, 5, 1, "", "local_response_norm"], [1648, 5, 1, "", "log_softmax"], [1649, 5, 1, "", "logsigmoid"], [1650, 5, 1, "", "lp_pool1d"], [1651, 5, 1, "", "lp_pool2d"], [1652, 5, 1, "", "lp_pool3d"], [1653, 5, 1, "", "margin_ranking_loss"], [1654, 5, 1, "", "max_pool1d"], [1655, 5, 1, "", "max_pool2d"], [1656, 5, 1, "", "max_pool3d"], [1657, 5, 1, "", "max_unpool1d"], [1658, 5, 1, "", "max_unpool2d"], [1659, 5, 1, "", "max_unpool3d"], [1660, 5, 1, "", "mish"], [1661, 5, 1, "", "mse_loss"], [1662, 5, 1, "", "multi_margin_loss"], [1663, 5, 1, "", "multilabel_margin_loss"], [1664, 5, 1, "", "multilabel_soft_margin_loss"], [1665, 5, 1, "", "nll_loss"], [1666, 5, 1, "", "normalize"], [1667, 5, 1, "", "one_hot"], [1668, 5, 1, "", "pad"], [1669, 5, 1, "", "pairwise_distance"], [1670, 5, 1, "", "pdist"], [1671, 5, 1, "", "pixel_shuffle"], [1672, 5, 1, "", "pixel_unshuffle"], [1673, 5, 1, "", "poisson_nll_loss"], [1674, 5, 1, "", "prelu"], [1675, 5, 1, "", "relu"], [1676, 5, 1, "", "relu6"], [1677, 5, 1, "", "relu_"], [1678, 5, 1, "", "rms_norm"], [1679, 5, 1, "", "rrelu"], [1680, 5, 1, "", "rrelu_"], [1681, 5, 1, "", "scaled_dot_product_attention"], [1682, 5, 1, "", "selu"], [1683, 5, 1, "", "sigmoid"], [1684, 5, 1, "", "silu"], [1685, 5, 1, "", "smooth_l1_loss"], [1686, 5, 1, "", "soft_margin_loss"], [1687, 5, 1, "", "softmax"], [1688, 5, 1, "", "softmin"], [1689, 5, 1, "", "softplus"], [1690, 5, 1, "", "softshrink"], [1691, 5, 1, "", "softsign"], [1692, 5, 1, "", "tanh"], [1693, 5, 1, "", "tanhshrink"], [1694, 5, 1, "", "threshold"], [1695, 5, 1, "", "threshold_"], [1697, 5, 1, "", "triplet_margin_loss"], [1698, 5, 1, "", "triplet_margin_with_distance_loss"], [1699, 5, 1, "", "unfold"], [1700, 5, 1, "", "upsample"], [1701, 5, 1, "", "upsample_bilinear"], [1702, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[2037, 5, 1, "", "calculate_gain"], [2037, 5, 1, "", "constant_"], [2037, 5, 1, "", "dirac_"], [2037, 5, 1, "", "eye_"], [2037, 5, 1, "", "kaiming_normal_"], [2037, 5, 1, "", "kaiming_uniform_"], [2037, 5, 1, "", "normal_"], [2037, 5, 1, "", "ones_"], [2037, 5, 1, "", "orthogonal_"], [2037, 5, 1, "", "sparse_"], [2037, 5, 1, "", "trunc_normal_"], [2037, 5, 1, "", "uniform_"], [2037, 5, 1, "", "xavier_normal_"], [2037, 5, 1, "", "xavier_uniform_"], [2037, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[2070, 0, 0, "-", "modules"], [2070, 0, 0, "-", "qat"], [2070, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.modules": [[2067, 0, 0, "-", "fused"]], "torch.nn.intrinsic.qat": [[2070, 0, 0, "-", "modules"]], "torch.nn.intrinsic.qat.modules": [[2067, 0, 0, "-", "conv_fused"], [2067, 0, 0, "-", "linear_fused"], [2067, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized": [[2070, 0, 0, "-", "dynamic"], [2070, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[2070, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2067, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized.modules": [[2067, 0, 0, "-", "bn_relu"], [2067, 0, 0, "-", "conv_relu"], [2067, 0, 0, "-", "linear_relu"]], "torch.nn.modules": [[2033, 0, 0, "-", "activation"], [2033, 0, 0, "-", "adaptive"], [2033, 0, 0, "-", "batchnorm"], [2033, 0, 0, "-", "channelshuffle"], [2033, 0, 0, "-", "container"], [2033, 0, 0, "-", "conv"], [2033, 0, 0, "-", "distance"], [2033, 0, 0, "-", "dropout"], [2033, 0, 0, "-", "flatten"], [2033, 0, 0, "-", "fold"], [2033, 0, 0, "-", "instancenorm"], [2033, 0, 0, "-", "lazy"], [2033, 0, 0, "-", "linear"], [2033, 0, 0, "-", "loss"], [2033, 0, 0, "-", "module"], [2033, 0, 0, "-", "normalization"], [2033, 0, 0, "-", "padding"], [2033, 0, 0, "-", "pixelshuffle"], [2033, 0, 0, "-", "pooling"], [2033, 0, 0, "-", "rnn"], [2033, 0, 0, "-", "sparse"], [2033, 0, 0, "-", "transformer"], [2033, 0, 0, "-", "upsampling"], [2033, 0, 0, "-", "utils"]], "torch.nn.modules.lazy": [[1703, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1703, 3, 1, "", "has_uninitialized_params"], [1703, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1704, 5, 1, "", "register_module_backward_hook"], [1705, 5, 1, "", "register_module_buffer_registration_hook"], [1706, 5, 1, "", "register_module_forward_hook"], [1707, 5, 1, "", "register_module_forward_pre_hook"], [1708, 5, 1, "", "register_module_full_backward_hook"], [1709, 5, 1, "", "register_module_full_backward_pre_hook"], [1710, 5, 1, "", "register_module_module_registration_hook"], [1711, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.modules.normalization.RMSNorm": [[1712, 3, 1, "", "extra_repr"], [1712, 3, 1, "", "forward"], [1712, 3, 1, "", "reset_parameters"]], "torch.nn.parallel": [[1713, 1, 1, "", "DistributedDataParallel"], [2033, 0, 0, "-", "comm"], [1696, 5, 1, "", "data_parallel"], [2033, 0, 0, "-", "distributed"], [2033, 0, 0, "-", "parallel_apply"], [2033, 0, 0, "-", "replicate"], [2033, 0, 0, "-", "scatter_gather"]], "torch.nn.parallel.DistributedDataParallel": [[1713, 3, 1, "", "join"], [1713, 3, 1, "", "join_hook"], [1713, 3, 1, "", "no_sync"], [1713, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1714, 1, 1, "", "Parameter"], [1715, 1, 1, "", "UninitializedBuffer"], [1716, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1716, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[2070, 0, 0, "-", "dynamic"], [2070, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[2070, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic.modules": [[2067, 0, 0, "-", "linear"]], "torch.nn.qat.modules": [[2067, 0, 0, "-", "conv"], [2067, 0, 0, "-", "embedding_ops"], [2067, 0, 0, "-", "linear"]], "torch.nn.quantizable": [[2070, 0, 0, "-", "modules"]], "torch.nn.quantizable.modules": [[2067, 0, 0, "-", "activation"], [2067, 0, 0, "-", "rnn"]], "torch.nn.quantized": [[2070, 0, 0, "-", "dynamic"], [2067, 0, 0, "-", "functional"], [2070, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[2070, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic.modules": [[2067, 0, 0, "-", "conv"], [2067, 0, 0, "-", "linear"], [2067, 0, 0, "-", "rnn"]], "torch.nn.quantized.modules": [[2067, 0, 0, "-", "activation"], [2067, 0, 0, "-", "batchnorm"], [2067, 0, 0, "-", "conv"], [2067, 0, 0, "-", "dropout"], [2067, 0, 0, "-", "embedding_ops"], [2067, 0, 0, "-", "functional_modules"], [2067, 0, 0, "-", "linear"], [2067, 0, 0, "-", "normalization"], [2067, 0, 0, "-", "rnn"], [2067, 0, 0, "-", "utils"]], "torch.nn.utils": [[2033, 0, 0, "-", "clip_grad"], [1717, 5, 1, "", "clip_grad_norm"], [1718, 5, 1, "", "clip_grad_norm_"], [1719, 5, 1, "", "clip_grad_value_"], [1720, 5, 1, "", "convert_conv2d_weight_memory_format"], [1721, 5, 1, "", "convert_conv3d_weight_memory_format"], [2033, 0, 0, "-", "convert_parameters"], [1722, 5, 1, "", "fuse_conv_bn_eval"], [1723, 5, 1, "", "fuse_conv_bn_weights"], [1724, 5, 1, "", "fuse_linear_bn_eval"], [1725, 5, 1, "", "fuse_linear_bn_weights"], [2033, 0, 0, "-", "fusion"], [2033, 0, 0, "-", "init"], [2033, 0, 0, "-", "memory_format"], [1726, 5, 1, "", "parameters_to_vector"], [2033, 0, 0, "-", "parametrizations"], [2033, 0, 0, "-", "parametrize"], [2033, 0, 0, "-", "prune"], [1752, 5, 1, "", "remove_spectral_norm"], [1753, 5, 1, "", "remove_weight_norm"], [2033, 0, 0, "-", "rnn"], [1761, 5, 1, "", "skip_init"], [1762, 5, 1, "", "spectral_norm"], [2033, 0, 0, "-", "stateless"], [1764, 5, 1, "", "vector_to_parameters"], [1765, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1727, 5, 1, "", "orthogonal"], [1728, 5, 1, "", "spectral_norm"], [1729, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrize": [[1730, 1, 1, "", "ParametrizationList"], [1731, 5, 1, "", "cached"], [1732, 5, 1, "", "is_parametrized"], [1733, 5, 1, "", "register_parametrization"], [1734, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1730, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1735, 1, 1, "", "BasePruningMethod"], [1736, 1, 1, "", "CustomFromMask"], [1737, 1, 1, "", "Identity"], [1738, 1, 1, "", "L1Unstructured"], [1739, 1, 1, "", "LnStructured"], [1740, 1, 1, "", "PruningContainer"], [1741, 1, 1, "", "RandomStructured"], [1742, 1, 1, "", "RandomUnstructured"], [1743, 5, 1, "", "custom_from_mask"], [1744, 5, 1, "", "global_unstructured"], [1745, 5, 1, "", "identity"], [1746, 5, 1, "", "is_pruned"], [1747, 5, 1, "", "l1_unstructured"], [1748, 5, 1, "", "ln_structured"], [1749, 5, 1, "", "random_structured"], [1750, 5, 1, "", "random_unstructured"], [1751, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1735, 3, 1, "", "apply"], [1735, 3, 1, "", "apply_mask"], [1735, 3, 1, "", "compute_mask"], [1735, 3, 1, "", "prune"], [1735, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1736, 3, 1, "", "apply"], [1736, 3, 1, "", "apply_mask"], [1736, 3, 1, "", "prune"], [1736, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1737, 3, 1, "", "apply"], [1737, 3, 1, "", "apply_mask"], [1737, 3, 1, "", "prune"], [1737, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1738, 3, 1, "", "apply"], [1738, 3, 1, "", "apply_mask"], [1738, 3, 1, "", "prune"], [1738, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1739, 3, 1, "", "apply"], [1739, 3, 1, "", "apply_mask"], [1739, 3, 1, "", "compute_mask"], [1739, 3, 1, "", "prune"], [1739, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1740, 3, 1, "", "add_pruning_method"], [1740, 3, 1, "", "apply"], [1740, 3, 1, "", "apply_mask"], [1740, 3, 1, "", "compute_mask"], [1740, 3, 1, "", "prune"], [1740, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1741, 3, 1, "", "apply"], [1741, 3, 1, "", "apply_mask"], [1741, 3, 1, "", "compute_mask"], [1741, 3, 1, "", "prune"], [1741, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1742, 3, 1, "", "apply"], [1742, 3, 1, "", "apply_mask"], [1742, 3, 1, "", "prune"], [1742, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1754, 1, 1, "", "PackedSequence"], [1755, 5, 1, "", "pack_padded_sequence"], [1756, 5, 1, "", "pack_sequence"], [1757, 5, 1, "", "pad_packed_sequence"], [1758, 5, 1, "", "pad_sequence"], [1759, 5, 1, "", "unpack_sequence"], [1760, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1754, 2, 1, "", "batch_sizes"], [1754, 3, 1, "", "count"], [1754, 2, 1, "", "data"], [1754, 3, 1, "", "index"], [1754, 4, 1, "", "is_cuda"], [1754, 3, 1, "", "is_pinned"], [1754, 2, 1, "", "sorted_indices"], [1754, 3, 1, "", "to"], [1754, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1763, 5, 1, "", "functional_call"]], "torch.onnx": [[2059, 1, 1, "", "DiagnosticOptions"], [2059, 1, 1, "", "ExportOptions"], [2059, 1, 1, "", "InvalidExportOptionsError"], [1774, 1, 1, "", "JitScalarType"], [2059, 1, 1, "", "ONNXProgram"], [2059, 1, 1, "", "ONNXProgramSerializer"], [2059, 1, 1, "", "ONNXRuntimeOptions"], [2059, 1, 1, "", "OnnxExporterError"], [2059, 1, 1, "", "OnnxRegistry"], [2061, 5, 1, "", "disable_log"], [2059, 5, 1, "", "dynamo_export"], [2059, 5, 1, "", "enable_fake_mode"], [2061, 5, 1, "", "enable_log"], [2058, 0, 0, "-", "errors"], [2061, 5, 1, "", "export"], [2061, 5, 1, "", "export_to_pretty_string"], [2061, 5, 1, "", "is_in_onnx_export"], [2060, 5, 1, "", "is_onnxrt_backend_supported"], [2058, 0, 0, "-", "operators"], [2061, 5, 1, "", "register_custom_op_symbolic"], [2061, 5, 1, "", "select_model_mode_for_export"], [2058, 0, 0, "-", "symbolic_caffe2"], [2058, 0, 0, "-", "symbolic_helper"], [2058, 0, 0, "-", "symbolic_opset10"], [2058, 0, 0, "-", "symbolic_opset11"], [2058, 0, 0, "-", "symbolic_opset12"], [2058, 0, 0, "-", "symbolic_opset13"], [2058, 0, 0, "-", "symbolic_opset14"], [2058, 0, 0, "-", "symbolic_opset15"], [2058, 0, 0, "-", "symbolic_opset16"], [2058, 0, 0, "-", "symbolic_opset17"], [2058, 0, 0, "-", "symbolic_opset18"], [2058, 0, 0, "-", "symbolic_opset19"], [2058, 0, 0, "-", "symbolic_opset20"], [2058, 0, 0, "-", "symbolic_opset7"], [2058, 0, 0, "-", "symbolic_opset8"], [2058, 0, 0, "-", "symbolic_opset9"], [2061, 5, 1, "", "unregister_custom_op_symbolic"], [2058, 0, 0, "-", "utils"], [2058, 0, 0, "-", "verification"]], "torch.onnx.JitScalarType": [[1774, 3, 1, "", "dtype"], [1774, 3, 1, "", "from_dtype"], [1774, 3, 1, "", "from_onnx_type"], [1774, 3, 1, "", "from_value"], [1774, 3, 1, "", "onnx_compatible"], [1774, 3, 1, "", "onnx_type"], [1774, 3, 1, "", "scalar_name"], [1774, 3, 1, "", "torch_name"]], "torch.onnx.ONNXProgram": [[2059, 3, 1, "", "adapt_torch_inputs_to_onnx"], [2059, 3, 1, "", "adapt_torch_outputs_to_onnx"], [2059, 4, 1, "", "diagnostic_context"], [2059, 4, 1, "", "fake_context"], [2059, 4, 1, "", "model_proto"], [2059, 4, 1, "", "model_signature"], [2059, 3, 1, "", "save"], [2059, 3, 1, "", "save_diagnostics"]], "torch.onnx.ONNXProgramSerializer": [[2059, 3, 1, "", "serialize"]], "torch.onnx.OnnxRegistry": [[2059, 3, 1, "", "get_op_functions"], [2059, 3, 1, "", "is_registered_op"], [2059, 4, 1, "", "opset_version"], [2059, 3, 1, "", "register_op"]], "torch.onnx.verification": [[1775, 1, 1, "", "GraphInfo"], [1776, 1, 1, "", "VerificationOptions"], [2061, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1775, 3, 1, "", "all_mismatch_leaf_graph_info"], [1775, 3, 1, "", "clear"], [1775, 3, 1, "", "essential_node_count"], [1775, 3, 1, "", "essential_node_kinds"], [1775, 3, 1, "", "export_repro"], [1775, 3, 1, "", "find_mismatch"], [1775, 3, 1, "", "find_partition"], [1775, 3, 1, "", "has_mismatch"], [1775, 3, 1, "", "pretty_print_mismatch"], [1775, 3, 1, "", "pretty_print_tree"], [1775, 3, 1, "", "verify_export"]], "torch.optim": [[1777, 1, 1, "", "ASGD"], [1778, 1, 1, "", "Adadelta"], [1779, 1, 1, "", "Adagrad"], [1780, 1, 1, "", "Adam"], [1781, 1, 1, "", "AdamW"], [1782, 1, 1, "", "Adamax"], [1783, 1, 1, "", "LBFGS"], [1784, 1, 1, "", "NAdam"], [2063, 1, 1, "", "Optimizer"], [1790, 1, 1, "", "RAdam"], [1791, 1, 1, "", "RMSprop"], [1792, 1, 1, "", "Rprop"], [1793, 1, 1, "", "SGD"], [1794, 1, 1, "", "SparseAdam"], [2063, 0, 0, "-", "adadelta"], [2063, 0, 0, "-", "adagrad"], [2063, 0, 0, "-", "adam"], [2063, 0, 0, "-", "adamax"], [2063, 0, 0, "-", "adamw"], [2063, 0, 0, "-", "asgd"], [2063, 0, 0, "-", "lbfgs"], [2063, 0, 0, "-", "lr_scheduler"], [2063, 0, 0, "-", "nadam"], [2063, 0, 0, "-", "optimizer"], [2063, 0, 0, "-", "radam"], [2063, 0, 0, "-", "rmsprop"], [2063, 0, 0, "-", "rprop"], [2063, 0, 0, "-", "sgd"], [2063, 0, 0, "-", "sparse_adam"], [2063, 0, 0, "-", "swa_utils"]], "torch.optim.ASGD": [[1777, 3, 1, "", "add_param_group"], [1777, 3, 1, "", "load_state_dict"], [1777, 3, 1, "", "register_load_state_dict_post_hook"], [1777, 3, 1, "", "register_load_state_dict_pre_hook"], [1777, 3, 1, "", "register_state_dict_post_hook"], [1777, 3, 1, "", "register_state_dict_pre_hook"], [1777, 3, 1, "", "register_step_post_hook"], [1777, 3, 1, "", "register_step_pre_hook"], [1777, 3, 1, "", "state_dict"], [1777, 3, 1, "", "step"], [1777, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1778, 3, 1, "", "add_param_group"], [1778, 3, 1, "", "load_state_dict"], [1778, 3, 1, "", "register_load_state_dict_post_hook"], [1778, 3, 1, "", "register_load_state_dict_pre_hook"], [1778, 3, 1, "", "register_state_dict_post_hook"], [1778, 3, 1, "", "register_state_dict_pre_hook"], [1778, 3, 1, "", "register_step_post_hook"], [1778, 3, 1, "", "register_step_pre_hook"], [1778, 3, 1, "", "state_dict"], [1778, 3, 1, "", "step"], [1778, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1779, 3, 1, "", "add_param_group"], [1779, 3, 1, "", "load_state_dict"], [1779, 3, 1, "", "register_load_state_dict_post_hook"], [1779, 3, 1, "", "register_load_state_dict_pre_hook"], [1779, 3, 1, "", "register_state_dict_post_hook"], [1779, 3, 1, "", "register_state_dict_pre_hook"], [1779, 3, 1, "", "register_step_post_hook"], [1779, 3, 1, "", "register_step_pre_hook"], [1779, 3, 1, "", "state_dict"], [1779, 3, 1, "", "step"], [1779, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1780, 3, 1, "", "add_param_group"], [1780, 3, 1, "", "load_state_dict"], [1780, 3, 1, "", "register_load_state_dict_post_hook"], [1780, 3, 1, "", "register_load_state_dict_pre_hook"], [1780, 3, 1, "", "register_state_dict_post_hook"], [1780, 3, 1, "", "register_state_dict_pre_hook"], [1780, 3, 1, "", "register_step_post_hook"], [1780, 3, 1, "", "register_step_pre_hook"], [1780, 3, 1, "", "state_dict"], [1780, 3, 1, "", "step"], [1780, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1781, 3, 1, "", "add_param_group"], [1781, 3, 1, "", "load_state_dict"], [1781, 3, 1, "", "register_load_state_dict_post_hook"], [1781, 3, 1, "", "register_load_state_dict_pre_hook"], [1781, 3, 1, "", "register_state_dict_post_hook"], [1781, 3, 1, "", "register_state_dict_pre_hook"], [1781, 3, 1, "", "register_step_post_hook"], [1781, 3, 1, "", "register_step_pre_hook"], [1781, 3, 1, "", "state_dict"], [1781, 3, 1, "", "step"], [1781, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1782, 3, 1, "", "add_param_group"], [1782, 3, 1, "", "load_state_dict"], [1782, 3, 1, "", "register_load_state_dict_post_hook"], [1782, 3, 1, "", "register_load_state_dict_pre_hook"], [1782, 3, 1, "", "register_state_dict_post_hook"], [1782, 3, 1, "", "register_state_dict_pre_hook"], [1782, 3, 1, "", "register_step_post_hook"], [1782, 3, 1, "", "register_step_pre_hook"], [1782, 3, 1, "", "state_dict"], [1782, 3, 1, "", "step"], [1782, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1783, 3, 1, "", "add_param_group"], [1783, 3, 1, "", "load_state_dict"], [1783, 3, 1, "", "register_load_state_dict_post_hook"], [1783, 3, 1, "", "register_load_state_dict_pre_hook"], [1783, 3, 1, "", "register_state_dict_post_hook"], [1783, 3, 1, "", "register_state_dict_pre_hook"], [1783, 3, 1, "", "register_step_post_hook"], [1783, 3, 1, "", "register_step_pre_hook"], [1783, 3, 1, "", "state_dict"], [1783, 3, 1, "", "step"], [1783, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1784, 3, 1, "", "add_param_group"], [1784, 3, 1, "", "load_state_dict"], [1784, 3, 1, "", "register_load_state_dict_post_hook"], [1784, 3, 1, "", "register_load_state_dict_pre_hook"], [1784, 3, 1, "", "register_state_dict_post_hook"], [1784, 3, 1, "", "register_state_dict_pre_hook"], [1784, 3, 1, "", "register_step_post_hook"], [1784, 3, 1, "", "register_step_pre_hook"], [1784, 3, 1, "", "state_dict"], [1784, 3, 1, "", "step"], [1784, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1785, 3, 1, "", "add_param_group"], [1786, 3, 1, "", "load_state_dict"], [1787, 3, 1, "", "state_dict"], [1788, 3, 1, "", "step"], [1789, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1790, 3, 1, "", "add_param_group"], [1790, 3, 1, "", "load_state_dict"], [1790, 3, 1, "", "register_load_state_dict_post_hook"], [1790, 3, 1, "", "register_load_state_dict_pre_hook"], [1790, 3, 1, "", "register_state_dict_post_hook"], [1790, 3, 1, "", "register_state_dict_pre_hook"], [1790, 3, 1, "", "register_step_post_hook"], [1790, 3, 1, "", "register_step_pre_hook"], [1790, 3, 1, "", "state_dict"], [1790, 3, 1, "", "step"], [1790, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1791, 3, 1, "", "add_param_group"], [1791, 3, 1, "", "load_state_dict"], [1791, 3, 1, "", "register_load_state_dict_post_hook"], [1791, 3, 1, "", "register_load_state_dict_pre_hook"], [1791, 3, 1, "", "register_state_dict_post_hook"], [1791, 3, 1, "", "register_state_dict_pre_hook"], [1791, 3, 1, "", "register_step_post_hook"], [1791, 3, 1, "", "register_step_pre_hook"], [1791, 3, 1, "", "state_dict"], [1791, 3, 1, "", "step"], [1791, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1792, 3, 1, "", "add_param_group"], [1792, 3, 1, "", "load_state_dict"], [1792, 3, 1, "", "register_load_state_dict_post_hook"], [1792, 3, 1, "", "register_load_state_dict_pre_hook"], [1792, 3, 1, "", "register_state_dict_post_hook"], [1792, 3, 1, "", "register_state_dict_pre_hook"], [1792, 3, 1, "", "register_step_post_hook"], [1792, 3, 1, "", "register_step_pre_hook"], [1792, 3, 1, "", "state_dict"], [1792, 3, 1, "", "step"], [1792, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1793, 3, 1, "", "add_param_group"], [1793, 3, 1, "", "load_state_dict"], [1793, 3, 1, "", "register_load_state_dict_post_hook"], [1793, 3, 1, "", "register_load_state_dict_pre_hook"], [1793, 3, 1, "", "register_state_dict_post_hook"], [1793, 3, 1, "", "register_state_dict_pre_hook"], [1793, 3, 1, "", "register_step_post_hook"], [1793, 3, 1, "", "register_step_pre_hook"], [1793, 3, 1, "", "state_dict"], [1793, 3, 1, "", "step"], [1793, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1794, 3, 1, "", "add_param_group"], [1794, 3, 1, "", "load_state_dict"], [1794, 3, 1, "", "register_load_state_dict_post_hook"], [1794, 3, 1, "", "register_load_state_dict_pre_hook"], [1794, 3, 1, "", "register_state_dict_post_hook"], [1794, 3, 1, "", "register_state_dict_pre_hook"], [1794, 3, 1, "", "register_step_post_hook"], [1794, 3, 1, "", "register_step_pre_hook"], [1794, 3, 1, "", "state_dict"], [1794, 3, 1, "", "step"], [1794, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1795, 1, 1, "", "ChainedScheduler"], [1796, 1, 1, "", "ConstantLR"], [1797, 1, 1, "", "CosineAnnealingLR"], [1798, 1, 1, "", "CosineAnnealingWarmRestarts"], [1799, 1, 1, "", "CyclicLR"], [1800, 1, 1, "", "ExponentialLR"], [1801, 1, 1, "", "LambdaLR"], [1802, 1, 1, "", "LinearLR"], [1803, 1, 1, "", "MultiStepLR"], [1804, 1, 1, "", "MultiplicativeLR"], [1805, 1, 1, "", "OneCycleLR"], [1806, 1, 1, "", "PolynomialLR"], [1807, 1, 1, "", "ReduceLROnPlateau"], [1808, 1, 1, "", "SequentialLR"], [1809, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1795, 3, 1, "", "get_last_lr"], [1795, 3, 1, "", "load_state_dict"], [1795, 3, 1, "", "print_lr"], [1795, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1796, 3, 1, "", "get_last_lr"], [1796, 3, 1, "", "load_state_dict"], [1796, 3, 1, "", "print_lr"], [1796, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1797, 3, 1, "", "get_last_lr"], [1797, 3, 1, "", "load_state_dict"], [1797, 3, 1, "", "print_lr"], [1797, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1798, 3, 1, "", "get_last_lr"], [1798, 3, 1, "", "load_state_dict"], [1798, 3, 1, "", "print_lr"], [1798, 3, 1, "", "state_dict"], [1798, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1799, 3, 1, "", "get_last_lr"], [1799, 3, 1, "", "get_lr"], [1799, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1800, 3, 1, "", "get_last_lr"], [1800, 3, 1, "", "load_state_dict"], [1800, 3, 1, "", "print_lr"], [1800, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1801, 3, 1, "", "get_last_lr"], [1801, 3, 1, "", "load_state_dict"], [1801, 3, 1, "", "print_lr"], [1801, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1802, 3, 1, "", "get_last_lr"], [1802, 3, 1, "", "load_state_dict"], [1802, 3, 1, "", "print_lr"], [1802, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1803, 3, 1, "", "get_last_lr"], [1803, 3, 1, "", "load_state_dict"], [1803, 3, 1, "", "print_lr"], [1803, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1804, 3, 1, "", "get_last_lr"], [1804, 3, 1, "", "load_state_dict"], [1804, 3, 1, "", "print_lr"], [1804, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1805, 3, 1, "", "get_last_lr"], [1805, 3, 1, "", "load_state_dict"], [1805, 3, 1, "", "print_lr"], [1805, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1806, 3, 1, "", "get_last_lr"], [1806, 3, 1, "", "load_state_dict"], [1806, 3, 1, "", "print_lr"], [1806, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ReduceLROnPlateau": [[1807, 3, 1, "", "get_last_lr"], [1807, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.SequentialLR": [[1808, 3, 1, "", "get_last_lr"], [1808, 3, 1, "", "load_state_dict"], [1808, 3, 1, "", "print_lr"], [1808, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1809, 3, 1, "", "get_last_lr"], [1809, 3, 1, "", "load_state_dict"], [1809, 3, 1, "", "print_lr"], [1809, 3, 1, "", "state_dict"]], "torch.overrides": [[2109, 5, 1, "", "get_ignored_functions"], [2109, 5, 1, "", "get_overridable_functions"], [2109, 5, 1, "", "get_testing_overrides"], [2109, 5, 1, "", "handle_torch_function"], [2109, 5, 1, "", "has_torch_function"], [2109, 5, 1, "", "is_tensor_like"], [2109, 5, 1, "", "is_tensor_method_or_property"], [2109, 5, 1, "", "resolve_name"], [2109, 5, 1, "", "wrap_torch_function"]], "torch.package": [[2064, 1, 1, "", "Directory"], [2064, 1, 1, "", "EmptyMatchError"], [2064, 1, 1, "", "PackageExporter"], [2064, 1, 1, "", "PackageImporter"], [2064, 1, 1, "", "PackagingError"], [2064, 0, 0, "-", "analyze"], [2064, 0, 0, "-", "file_structure_representation"], [2064, 0, 0, "-", "find_file_dependencies"], [2064, 0, 0, "-", "glob_group"], [2064, 0, 0, "-", "importer"], [2064, 0, 0, "-", "package_exporter"], [2064, 0, 0, "-", "package_importer"]], "torch.package.Directory": [[2064, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[2064, 3, 1, "", "__init__"], [2064, 3, 1, "", "add_dependency"], [2064, 3, 1, "", "all_paths"], [2064, 3, 1, "", "close"], [2064, 3, 1, "", "denied_modules"], [2064, 3, 1, "", "deny"], [2064, 3, 1, "", "dependency_graph_string"], [2064, 3, 1, "", "extern"], [2064, 3, 1, "", "externed_modules"], [2064, 3, 1, "", "get_rdeps"], [2064, 3, 1, "", "get_unique_id"], [2064, 3, 1, "", "intern"], [2064, 3, 1, "", "interned_modules"], [2064, 3, 1, "", "mock"], [2064, 3, 1, "", "mocked_modules"], [2064, 3, 1, "", "register_extern_hook"], [2064, 3, 1, "", "register_intern_hook"], [2064, 3, 1, "", "register_mock_hook"], [2064, 3, 1, "", "save_binary"], [2064, 3, 1, "", "save_module"], [2064, 3, 1, "", "save_pickle"], [2064, 3, 1, "", "save_source_file"], [2064, 3, 1, "", "save_source_string"], [2064, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[2064, 3, 1, "", "__init__"], [2064, 3, 1, "", "file_structure"], [2064, 3, 1, "", "id"], [2064, 3, 1, "", "import_module"], [2064, 3, 1, "", "load_binary"], [2064, 3, 1, "", "load_pickle"], [2064, 3, 1, "", "load_text"], [2064, 3, 1, "", "python_version"]], "torch.package.analyze": [[2064, 0, 0, "-", "find_first_use_of_broken_modules"], [2064, 0, 0, "-", "is_from_package"], [2064, 0, 0, "-", "trace_dependencies"]], "torch.profiler": [[2066, 1, 1, "", "ProfilerAction"], [2066, 1, 1, "", "ProfilerActivity"], [2066, 1, 1, "", "_KinetoProfile"], [2066, 0, 0, "-", "itt"], [2066, 1, 1, "", "profile"], [2066, 0, 0, "-", "profiler"], [2066, 0, 0, "-", "python_tracer"], [2066, 5, 1, "", "schedule"], [2066, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[2066, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[2066, 3, 1, "", "add_metadata"], [2066, 3, 1, "", "add_metadata_json"], [2066, 3, 1, "", "events"], [2066, 3, 1, "", "export_chrome_trace"], [2066, 3, 1, "", "export_memory_timeline"], [2066, 3, 1, "", "export_stacks"], [2066, 3, 1, "", "key_averages"], [2066, 3, 1, "", "preset_metadata_json"]], "torch.profiler.itt": [[2066, 5, 1, "", "is_available"], [2066, 5, 1, "", "mark"], [2066, 5, 1, "", "range_pop"], [2066, 5, 1, "", "range_push"]], "torch.profiler.profile": [[2066, 3, 1, "", "step"]], "torch.quantization": [[2067, 0, 0, "-", "fake_quantize"], [2067, 0, 0, "-", "fuse_modules"], [2067, 0, 0, "-", "fuser_method_mappings"], [2070, 0, 0, "-", "fx"], [2067, 0, 0, "-", "observer"], [2067, 0, 0, "-", "qconfig"], [2067, 0, 0, "-", "quant_type"], [2067, 0, 0, "-", "quantization_mappings"], [2067, 0, 0, "-", "quantize"], [2067, 0, 0, "-", "quantize_fx"], [2067, 0, 0, "-", "quantize_jit"], [2067, 0, 0, "-", "stubs"], [2067, 0, 0, "-", "utils"]], "torch.quantization.fx": [[2067, 0, 0, "-", "convert"], [2067, 0, 0, "-", "fuse"], [2067, 0, 0, "-", "fusion_patterns"], [2067, 0, 0, "-", "graph_module"], [2067, 0, 0, "-", "match_utils"], [2067, 0, 0, "-", "pattern_utils"], [2067, 0, 0, "-", "prepare"], [2067, 0, 0, "-", "quantization_patterns"], [2067, 0, 0, "-", "quantization_types"], [2067, 0, 0, "-", "utils"]], "torch.quasirandom": [[1830, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1830, 3, 1, "", "draw"], [1830, 3, 1, "", "draw_base2"], [1830, 3, 1, "", "fast_forward"], [1830, 3, 1, "", "reset"]], "torch.random": [[2071, 5, 1, "", "fork_rng"], [2071, 5, 1, "", "get_rng_state"], [2071, 5, 1, "", "initial_seed"], [2071, 5, 1, "", "manual_seed"], [2071, 5, 1, "", "seed"], [2071, 5, 1, "", "set_rng_state"]], "torch.serialization": [[2056, 5, 1, "", "add_safe_globals"], [2056, 5, 1, "", "clear_safe_globals"], [2056, 5, 1, "", "get_default_load_endianness"], [2056, 5, 1, "", "get_default_mmap_options"], [2056, 5, 1, "", "get_safe_globals"], [2056, 5, 1, "", "register_package"], [2056, 5, 1, "", "set_default_load_endianness"], [2056, 5, 1, "", "set_default_mmap_options"]], "torch.signal": [[2075, 0, 0, "-", "windows"]], "torch.signal.windows": [[1877, 5, 1, "", "bartlett"], [1878, 5, 1, "", "blackman"], [1879, 5, 1, "", "cosine"], [1880, 5, 1, "", "exponential"], [1881, 5, 1, "", "gaussian"], [1882, 5, 1, "", "general_cosine"], [1883, 5, 1, "", "general_hamming"], [1884, 5, 1, "", "hamming"], [1885, 5, 1, "", "hann"], [1886, 5, 1, "", "kaiser"], [1887, 5, 1, "", "nuttall"], [2086, 0, 0, "-", "windows"]], "torch.sparse": [[1897, 5, 1, "", "addmm"], [1898, 5, 1, "", "as_sparse_gradcheck"], [1899, 1, 1, "", "check_sparse_tensor_invariants"], [1900, 5, 1, "", "log_softmax"], [1901, 5, 1, "", "mm"], [1902, 5, 1, "", "sampled_addmm"], [2086, 0, 0, "-", "semi_structured"], [1903, 5, 1, "", "softmax"], [1904, 5, 1, "", "spdiags"], [1905, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1899, 3, 1, "", "disable"], [1899, 3, 1, "", "enable"], [1899, 3, 1, "", "is_enabled"]], "torch.special": [[2078, 5, 1, "", "airy_ai"], [2078, 5, 1, "", "bessel_j0"], [2078, 5, 1, "", "bessel_j1"], [2078, 5, 1, "", "digamma"], [2078, 5, 1, "", "entr"], [2078, 5, 1, "", "erf"], [2078, 5, 1, "", "erfc"], [2078, 5, 1, "", "erfcx"], [2078, 5, 1, "", "erfinv"], [2078, 5, 1, "", "exp2"], [2078, 5, 1, "", "expit"], [2078, 5, 1, "", "expm1"], [2078, 5, 1, "", "gammainc"], [2078, 5, 1, "", "gammaincc"], [2078, 5, 1, "", "gammaln"], [2078, 5, 1, "", "i0"], [2078, 5, 1, "", "i0e"], [2078, 5, 1, "", "i1"], [2078, 5, 1, "", "i1e"], [2078, 5, 1, "", "log1p"], [2078, 5, 1, "", "log_ndtr"], [2078, 5, 1, "", "log_softmax"], [2078, 5, 1, "", "logit"], [2078, 5, 1, "", "logsumexp"], [2078, 5, 1, "", "multigammaln"], [2078, 5, 1, "", "ndtr"], [2078, 5, 1, "", "ndtri"], [2078, 5, 1, "", "polygamma"], [2078, 5, 1, "", "psi"], [2078, 5, 1, "", "round"], [2078, 5, 1, "", "scaled_modified_bessel_k0"], [2078, 5, 1, "", "scaled_modified_bessel_k1"], [2078, 5, 1, "", "sinc"], [2078, 5, 1, "", "softmax"], [2078, 5, 1, "", "spherical_bessel_j0"], [2078, 5, 1, "", "xlog1py"], [2078, 5, 1, "", "xlogy"], [2078, 5, 1, "", "zeta"]], "torch.testing": [[2084, 5, 1, "", "assert_allclose"], [2084, 5, 1, "", "assert_close"], [2084, 5, 1, "", "make_tensor"]], "torch.torch": [[2086, 2, 1, "", "default_generator"], [2112, 1, 1, "", "finfo"], [2112, 1, 1, "", "iinfo"]], "torch.utils": [[2086, 0, 0, "-", "backcompat"], [2113, 0, 0, "-", "backend_registration"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [2113, 0, 0, "-", "bundled_inputs"], [2113, 0, 0, "-", "checkpoint"], [2113, 0, 0, "-", "collect_env"], [2113, 0, 0, "-", "cpp_backtrace"], [2113, 0, 0, "-", "cpp_extension"], [22, 0, 0, "-", "data"], [26, 0, 0, "-", "deterministic"], [2113, 0, 0, "-", "dlpack"], [2113, 0, 0, "-", "file_baton"], [2113, 0, 0, "-", "flop_counter"], [1962, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1963, 5, 1, "", "get_cpp_backtrace"], [2086, 0, 0, "-", "hipify"], [2113, 0, 0, "-", "hooks"], [2016, 0, 0, "-", "jit"], [2113, 0, 0, "-", "mkldnn"], [2113, 0, 0, "-", "mobile_optimizer"], [2086, 0, 0, "-", "model_dump"], [2024, 0, 0, "-", "model_zoo"], [2025, 0, 0, "-", "module_tracker"], [1964, 5, 1, "", "rename_privateuse1_backend"], [1965, 5, 1, "", "set_module"], [2113, 0, 0, "-", "show_pickle"], [1966, 5, 1, "", "swap_tensors"], [2082, 0, 0, "-", "tensorboard"], [2113, 0, 0, "-", "throughput_benchmark"], [2086, 0, 0, "-", "viz"], [2113, 0, 0, "-", "weak"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "Compare"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.Compare": [[3, 3, 1, "", "colorize"], [3, 3, 1, "", "extend_results"], [3, 3, 1, "", "highlight_warnings"], [3, 3, 1, "", "print"], [3, 3, 1, "", "trim_significant_figures"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "adaptive_autorange"], [3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.examples": [[2113, 0, 0, "-", "blas_compare_setup"], [2113, 0, 0, "-", "compare"], [2113, 0, 0, "-", "fuzzer"], [2113, 0, 0, "-", "op_benchmark"], [2113, 0, 0, "-", "simple_timeit"], [2113, 0, 0, "-", "spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers": [[2113, 0, 0, "-", "binary"], [2113, 0, 0, "-", "sparse_binary"], [2113, 0, 0, "-", "sparse_unary"], [2113, 0, 0, "-", "spectral"], [2113, 0, 0, "-", "unary"]], "torch.utils.benchmark.utils": [[2113, 0, 0, "-", "common"], [2113, 0, 0, "-", "compare"], [2113, 0, 0, "-", "compile"], [2113, 0, 0, "-", "cpp_jit"], [2113, 0, 0, "-", "fuzzer"], [2113, 0, 0, "-", "sparse_fuzzer"], [2113, 0, 0, "-", "timer"], [3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[2113, 0, 0, "-", "timer_interface"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"], [5, 5, 1, "", "set_checkpoint_debug_enabled"]], "torch.utils.cpp_extension": [[14, 5, 1, "", "BuildExtension"], [14, 5, 1, "", "CUDAExtension"], [14, 5, 1, "", "CppExtension"], [14, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [14, 5, 1, "", "include_paths"], [14, 5, 1, "", "is_ninja_available"], [14, 5, 1, "", "load"], [14, 5, 1, "", "load_inline"], [14, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[22, 1, 1, "", "BatchSampler"], [22, 1, 1, "", "ChainDataset"], [22, 1, 1, "", "ConcatDataset"], [22, 1, 1, "", "DataLoader"], [22, 1, 1, "", "Dataset"], [22, 1, 1, "", "IterableDataset"], [22, 1, 1, "", "RandomSampler"], [22, 1, 1, "", "Sampler"], [22, 1, 1, "", "SequentialSampler"], [22, 1, 1, "", "StackDataset"], [22, 1, 1, "", "Subset"], [22, 1, 1, "", "SubsetRandomSampler"], [22, 1, 1, "", "TensorDataset"], [22, 1, 1, "", "WeightedRandomSampler"], [2113, 0, 0, "-", "backward_compatibility"], [2113, 0, 0, "-", "dataloader"], [22, 0, 0, "-", "datapipes"], [2113, 0, 0, "-", "dataset"], [22, 5, 1, "", "default_collate"], [22, 5, 1, "", "default_convert"], [2113, 0, 0, "-", "distributed"], [22, 5, 1, "", "get_worker_info"], [2113, 0, 0, "-", "graph"], [2113, 0, 0, "-", "graph_settings"], [22, 5, 1, "", "random_split"], [2113, 0, 0, "-", "sampler"]], "torch.utils.data._utils.collate": [[22, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[22, 0, 0, "-", "dataframe"], [2113, 0, 0, "-", "datapipe"], [2113, 0, 0, "-", "gen_pyi"], [22, 0, 0, "-", "iter"], [22, 0, 0, "-", "map"], [22, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.dataframe": [[2113, 0, 0, "-", "dataframe_wrapper"], [2113, 0, 0, "-", "dataframes"], [2113, 0, 0, "-", "datapipes"], [2113, 0, 0, "-", "structures"]], "torch.utils.data.datapipes.iter": [[2113, 0, 0, "-", "callable"], [2113, 0, 0, "-", "combinatorics"], [2113, 0, 0, "-", "combining"], [2113, 0, 0, "-", "filelister"], [2113, 0, 0, "-", "fileopener"], [2113, 0, 0, "-", "grouping"], [2113, 0, 0, "-", "routeddecoder"], [2113, 0, 0, "-", "selecting"], [2113, 0, 0, "-", "sharding"], [2113, 0, 0, "-", "streamreader"], [2113, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.map": [[2113, 0, 0, "-", "callable"], [2113, 0, 0, "-", "combinatorics"], [2113, 0, 0, "-", "combining"], [2113, 0, 0, "-", "grouping"], [2113, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.utils": [[2113, 0, 0, "-", "common"], [2113, 0, 0, "-", "decoder"], [2113, 0, 0, "-", "snapshot"]], "torch.utils.data.distributed": [[22, 1, 1, "", "DistributedSampler"]], "torch.utils.deterministic": [[26, 2, 1, "", "fill_uninitialized_memory"]], "torch.utils.dlpack": [[35, 5, 1, "", "from_dlpack"], [35, 5, 1, "", "to_dlpack"]], "torch.utils.hipify": [[2113, 0, 0, "-", "constants"], [2113, 0, 0, "-", "cuda_to_hip_mappings"], [2113, 0, 0, "-", "hipify_python"], [2113, 0, 0, "-", "version"]], "torch.utils.jit": [[2113, 0, 0, "-", "log_extract"]], "torch.utils.mobile_optimizer": [[2023, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[2024, 5, 1, "", "load_url"]], "torch.utils.module_tracker": [[2025, 1, 1, "", "ModuleTracker"]], "torch.utils.tensorboard": [[2113, 0, 0, "-", "summary"], [2113, 0, 0, "-", "writer"]], "torch.utils.tensorboard.writer": [[2082, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[2082, 3, 1, "", "__init__"], [2082, 3, 1, "", "add_audio"], [2082, 3, 1, "", "add_custom_scalars"], [2082, 3, 1, "", "add_embedding"], [2082, 3, 1, "", "add_figure"], [2082, 3, 1, "", "add_graph"], [2082, 3, 1, "", "add_histogram"], [2082, 3, 1, "", "add_hparams"], [2082, 3, 1, "", "add_image"], [2082, 3, 1, "", "add_images"], [2082, 3, 1, "", "add_mesh"], [2082, 3, 1, "", "add_pr_curve"], [2082, 3, 1, "", "add_scalar"], [2082, 3, 1, "", "add_scalars"], [2082, 3, 1, "", "add_text"], [2082, 3, 1, "", "add_video"], [2082, 3, 1, "", "close"], [2082, 3, 1, "", "flush"]], "torch.xpu": [[1978, 1, 1, "", "Event"], [1979, 1, 1, "", "Stream"], [1980, 1, 1, "", "StreamContext"], [1981, 5, 1, "", "current_device"], [1982, 5, 1, "", "current_stream"], [1983, 1, 1, "", "device"], [1984, 5, 1, "", "device_count"], [1985, 1, 1, "", "device_of"], [1986, 5, 1, "", "empty_cache"], [1987, 5, 1, "", "get_device_capability"], [1988, 5, 1, "", "get_device_name"], [1989, 5, 1, "", "get_device_properties"], [1990, 5, 1, "", "get_rng_state"], [1991, 5, 1, "", "get_rng_state_all"], [1992, 5, 1, "", "init"], [1993, 5, 1, "", "initial_seed"], [1994, 5, 1, "", "is_available"], [1995, 5, 1, "", "is_initialized"], [1996, 5, 1, "", "manual_seed"], [1997, 5, 1, "", "manual_seed_all"], [2114, 0, 0, "-", "random"], [1998, 5, 1, "", "seed"], [1999, 5, 1, "", "seed_all"], [2000, 5, 1, "", "set_device"], [2001, 5, 1, "", "set_rng_state"], [2002, 5, 1, "", "set_rng_state_all"], [2003, 5, 1, "", "set_stream"], [2004, 5, 1, "", "stream"], [2114, 0, 0, "-", "streams"], [2005, 5, 1, "", "synchronize"]], "torch.xpu.Event": [[1978, 3, 1, "", "elapsed_time"], [1978, 3, 1, "", "query"], [1978, 3, 1, "", "record"], [1978, 3, 1, "", "synchronize"], [1978, 3, 1, "", "wait"]], "torch.xpu.Stream": [[1979, 3, 1, "", "query"], [1979, 3, 1, "", "record_event"], [1979, 3, 1, "", "synchronize"], [1979, 3, 1, "", "wait_event"], [1979, 3, 1, "", "wait_stream"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 22, 2010, 2038, 2045], "mix": [0, 2010, 2038], "precis": [0, 2038, 2042, 2054], "packag": [0, 1, 15, 27, 2029, 2057, 2064], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14, 16, 17, 22, 25, 26, 27, 29, 30, 32, 33, 34, 35, 46, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 72, 73, 74, 75, 76, 77, 78, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 897, 898, 899, 900, 902, 903, 904, 905, 908, 909, 910, 911, 912, 913, 914, 915, 919, 920, 921, 922, 923, 924, 925, 926, 927, 930, 931, 932, 933, 934, 935, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1583, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1785, 1786, 1787, 1788, 1789, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1981, 1982, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2013, 2015, 2016, 2017, 2018, 2019, 2020, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2032, 2033, 2034, 2035, 2036, 2037, 2042, 2044, 2045, 2049, 2054, 2056, 2058, 2061, 2063, 2064, 2066, 2070, 2071, 2075, 2076, 2077, 2078, 2079, 2080, 2082, 2083, 2084, 2086, 2087, 2088, 2089, 2090, 2091, 2099, 2100, 2106, 2109, 2111, 2112, 2113, 2114], "amp": [0, 2042], "autocast": [0, 2038], "gradient": [0, 1, 59, 1223, 2038, 2039, 2045, 2086, 2099], "scale": [0, 2038, 2050], "op": [0, 12, 84, 2015, 2017, 2038, 2061, 2086], "refer": [0, 12, 18, 50, 51, 55, 62, 2010, 2012, 2013, 2014, 2026, 2031, 2049, 2059, 2064, 2066, 2067, 2070, 2074, 2083, 2091, 2110], "elig": 0, "cuda": [0, 2, 10, 17, 18, 19, 209, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 2029, 2038, 2042, 2046, 2049, 2053, 2055, 2057, 2093, 2099, 2106, 2110], "specif": [0, 22, 51, 2077], "behavior": [0, 22, 2039, 2048], "can": [0, 2039, 2046, 2099, 2105], "float16": 0, "float32": 0, "promot": [0, 7, 86], "widest": 0, "input": [0, 50, 2030, 2038, 2048], "type": [0, 22, 51, 86, 603, 2012, 2013, 2044, 2061, 2064, 2083, 2112], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1602], "over": [0, 8, 2012], "binary_cross_entropi": [0, 1601], "cpu": [0, 2, 10, 16, 206, 998, 999, 1000, 1001, 1002, 1003, 1004, 2039, 2041, 2053, 2067, 2092], "bfloat16": [0, 155], "differenti": [1, 2039], "autograd": [1, 10, 11, 15, 58, 890, 891, 892, 893, 894, 897, 898, 899, 900, 902, 903, 904, 905, 908, 909, 910, 911, 912, 913, 914, 915, 919, 920, 921, 922, 923, 924, 925, 926, 927, 930, 931, 932, 933, 934, 935, 2031, 2038, 2039, 2044, 2045, 2061, 2072, 2073], "forward": [1, 891, 2044, 2073], "mode": [1, 46, 56, 414, 1375, 2039, 2044, 2048, 2061, 2067, 2073], "function": [1, 27, 34, 52, 54, 55, 57, 59, 62, 82, 85, 890, 891, 892, 893, 902, 903, 904, 905, 908, 909, 910, 911, 912, 913, 914, 1164, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 2010, 2011, 2012, 2013, 2015, 2018, 2020, 2030, 2032, 2033, 2036, 2038, 2039, 2045, 2048, 2056, 2061, 2070, 2077, 2078, 2099, 2109], "higher": 1, "level": [1, 10, 84, 2017, 2070], "api": [1, 10, 12, 15, 18, 30, 32, 39, 50, 55, 58, 62, 2009, 2010, 2013, 2017, 2026, 2031, 2041, 2042, 2044, 2049, 2050, 2059, 2061, 2064, 2065, 2066, 2067, 2070, 2091, 2095, 2096, 2098, 2099, 2100, 2110], "local": [1, 2013, 2039, 2086, 2105, 2107], "disabl": [1, 22, 979, 2010, 2039, 2086, 2099, 2100], "comput": [1, 59, 2039, 2054, 2073, 2086, 2099], "default": [1, 22, 23, 2012, 2039, 2042, 2048, 2069, 2096], "layout": [1, 2080], "manual": 1, "In": [1, 8, 2039, 2040, 2086], "place": [1, 58, 2030, 2039, 2040, 2061, 2086], "oper": [1, 10, 23, 27, 50, 58, 78, 87, 2012, 2013, 2018, 2020, 2030, 2031, 2032, 2039, 2044, 2050, 2057, 2061, 2062, 2067, 2077, 2083, 2086, 2098, 2106], "tensor": [1, 11, 15, 33, 50, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 1939, 2011, 2015, 2018, 2021, 2029, 2030, 2031, 2032, 2039, 2044, 2056, 2061, 2067, 2070, 2077, 2080, 2081, 2083, 2086, 2098], "correct": [1, 62, 2039], "check": [1, 36, 62, 2010, 2039, 2049, 2105], "variabl": [1, 19, 24, 27, 46, 2010, 2012, 2013, 2022, 2085, 2102, 2111], "deprec": 1, "context": [1, 28, 43, 68, 2073], "method": [1, 38, 39, 42, 48, 2011, 2012, 2015, 2061, 2070, 2077], "mixin": 1, "custom": [1, 37, 48, 62, 2013, 2017, 2038, 2042, 2044, 2045, 2051, 2061, 2063, 2064, 2067, 2094], "util": [1, 3, 4, 5, 10, 14, 22, 26, 27, 32, 35, 55, 57, 1084, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1962, 1963, 1964, 1965, 1966, 2016, 2023, 2024, 2025, 2033, 2034, 2056, 2070, 2082, 2086, 2088, 2107, 2113], "numer": [1, 2048, 2054, 2068], "profil": [1, 27, 930, 931, 932, 933, 934, 935, 1385, 1386, 1387, 2027, 2050, 2051, 2066, 2102, 2106, 2108], "debug": [1, 23, 24, 27, 48, 62, 84, 2010, 2067, 2068, 2094, 2099, 2108], "anomali": 1, "detect": 1, "graph": [1, 17, 50, 51, 62, 79, 922, 923, 924, 925, 926, 927, 1040, 2010, 2039, 2042, 2067, 2093, 2096, 2099, 2106, 2107, 2108], "backend": [2, 27, 45, 46, 2010, 2049, 2052, 2060, 2067, 2069, 2072, 2089, 2092, 2094, 2108], "cudnn": 2, "mha": 2, "mp": [2, 10, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 2027, 2052], "mkl": 2, "mkldnn": [2, 10], "nnpack": 2, "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 2055, 2102], "bottleneck": 4, "checkpoint": [5, 23, 29], "pytorch": [6, 7, 8, 9, 10, 15, 25, 27, 50, 58, 2009, 2010, 2011, 2015, 2039, 2042, 2044, 2055, 2056, 2061, 2065, 2067, 2070, 2089, 2093, 2104, 2105, 2108], "govern": [6, 9, 10], "build": [6, 7, 10, 2041, 2050, 2051, 2057], "ci": [6, 10], "how": [6, 23, 56, 2008, 2039, 2044, 2063, 2064, 2097, 2098, 2099, 2105], "add": [6, 9, 97, 685], "new": [6, 7, 9, 2017], "maintain": [6, 9, 10], "contribut": [7, 2058], "guid": 7, "process": [7, 9, 22, 43, 2038], "get": [7, 30, 2061, 2089, 2099, 2101], "start": [7, 30, 43, 1386, 2089, 2101, 2108], "propos": 7, "featur": [7, 2050, 2051, 2099], "report": [7, 2046], "issu": [7, 2010, 2059, 2106], "implement": [7, 36, 45, 48, 2008, 2043, 2048, 2061, 2068, 2070, 2074, 2096, 2098], "fix": [7, 46, 56, 261, 1144], "bug": 7, "ad": [7, 2044, 2061, 2096], "tutori": [7, 10, 2064, 2065, 2072], "improv": [7, 2051], "document": [7, 30, 2009], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 62, 2010, 2042, 2064, 2099], "readabl": 7, "test": [7, 2013, 2017, 2044, 2064, 2084, 2105], "case": [7, 2010], "make": [7, 9, 2093, 2096], "codebas": 7, "more": [7, 50, 54, 2072, 2089], "robust": 7, "triag": 7, "about": [7, 2039, 2072, 2098], "sourc": [7, 2055, 2057, 2064], "develop": [7, 50, 2009, 2058, 2089], "common": [7, 27, 62, 2050, 2067], "mistak": 7, "To": 7, "avoid": [7, 2053, 2055, 2061, 2064], "frequent": [7, 2010, 2046, 2061, 2067, 2099], "ask": [7, 2010, 2046, 2061, 2067, 2099], "question": [7, 2010, 2046, 2061, 2067, 2099], "On": [7, 23, 2012], "python": [7, 8, 27, 50, 58, 65, 66, 67, 68, 69, 70, 71, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2017, 2044, 2055, 2061, 2096], "doc": [7, 10, 2049], "c": [7, 10, 15, 2017, 2039, 2044, 2049, 2056, 2061, 2090], "overview": [7, 18, 50, 62, 2058, 2059, 2064, 2066, 2077, 2094, 2097], "design": [8, 2013, 2043, 2072, 2073, 2074], "philosophi": 8, "principl": [8, 9], "1": [8, 46, 56, 2010, 2045, 2096], "usabl": 8, "perform": [8, 10, 2051, 2056, 2098, 2105, 2106, 2108], "2": [8, 56, 2010, 2042, 2045, 2046, 2067, 2070, 2104, 2105, 2108], "simpl": [8, 2012, 2013, 2051, 2059, 2073], "easi": 8, "3": [8, 46, 56], "first": [8, 2064], "best": [8, 2042, 2053, 2067, 2092], "class": [8, 38, 62, 2010, 2012, 2013, 2015, 2061, 2063, 2064, 2083], "languag": [8, 2009, 2010, 2012, 2013, 2014], "interoper": 8, "mechan": [9, 2036, 2039, 2048], "summari": [9, 2067], "modul": [9, 10, 55, 57, 62, 1523, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 2010, 2011, 2012, 2013, 2015, 2033, 2039, 2044, 2051, 2056, 2064, 2067, 2104], "core": [9, 10, 2103], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 2013], "confirm": 9, "remov": [9, 1751, 2030], "The": [9, 62, 2013, 2039, 2095], "re": [9, 2064], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 46, 56, 2099], "controversi": 9, "gener": [9, 17, 28, 58, 62, 88, 2040, 2045, 2055, 2067, 2068, 2086, 2096, 2097, 2110, 2114], "polici": [9, 2095], "faq": [9, 2057], "respons": 10, "nn": [10, 55, 57, 1583, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 2012, 2013, 2033, 2034, 2035, 2036, 2037, 2039, 2042, 2044, 2056, 2070, 2077, 2104], "optim": [10, 11, 31, 1785, 1786, 1787, 1788, 1789, 2038, 2039, 2042, 2063, 2072, 2073, 2086], "compil": [10, 57, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 2042, 2089, 2090, 2091, 2099, 2100, 2106, 2108], "jit": [10, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 2010, 2013, 2016], "torchscript": [10, 15, 2010, 2011, 2012, 2013, 2015, 2041, 2050, 2058, 2061, 2062, 2064], "fx": [10, 62, 63, 79, 80, 81, 83, 86, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 2051, 2067, 2070, 2088], "torchdynamo": [10, 2043, 2058, 2059, 2060, 2093, 2100, 2108], "distribut": [10, 27, 29, 30, 31, 32, 33, 34, 46, 2033, 2036, 2043, 2049, 2051, 2072, 2073, 2099], "rng": 10, "multiprocess": [10, 43, 2029, 2042, 2053, 2057], "dataload": [10, 2055], "linear": [10, 11, 732, 733, 756, 764, 781, 1171, 1510, 1646, 2033, 2036, 2054, 2077], "algebra": [10, 11, 2054, 2077], "linalg": [10, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 2018, 2054], "spars": [10, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 2033, 2036, 2077], "nestedtensor": 10, "nest": [10, 2032], "maskedtensor": [10, 2020], "mask": [10, 2020], "fast": [10, 52, 2048, 2073], "fourier": [10, 52], "transform": [10, 32, 34, 52, 54, 55, 57, 59, 62, 1567, 2033, 2044, 2051, 2099, 2107], "fft": [10, 52, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143], "inductor": 10, "gpu": [10, 27, 2033, 2036, 2038, 2046, 2065, 2102], "triton": [10, 2102], "nvfuser": 10, "amd": [10, 2054], "rocm": [10, 2049], "hip": [10, 2049], "tool": [10, 17, 2068, 2077], "c10": 10, "dispatch": 10, "onnx": [10, 79, 80, 87, 2058, 2059, 2060, 2061, 2062], "export": [10, 50, 51, 2058, 2059, 2061, 2064, 2067, 2070, 2086, 2090, 2099], "mobil": 10, "edg": [10, 2010, 2064], "model": [10, 15, 32, 50, 71, 2008, 2038, 2046, 2050, 2059, 2063, 2064, 2065, 2067, 2070, 2090, 2095, 2101, 2102], "compress": [10, 2077], "window": [10, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2057, 2075], "appl": 10, "m1": 10, "powerpc": 10, "aarch64": 10, "librari": [10, 2009, 2017, 2055], "xla": 10, "torchserv": 10, "torchvis": [10, 56], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 984, 2039, 2048], "number": [11, 17, 46, 2039, 2041, 2046, 2055, 2086, 2114], "creat": [11, 2010, 2017, 2031], "transit": [11, 46], "from": [11, 46, 57, 62, 2008, 2017, 2030, 2057, 2061, 2064], "old": 11, "represent": [11, 79], "access": [11, 2012, 2064, 2108], "real": [11, 483, 1841, 2048], "imag": [11, 311, 1240], "angl": [11, 117, 698], "ab": [11, 89, 681], "serial": [11, 50, 2056, 2086], "control": [12, 50, 58, 62, 69, 2055, 2086, 2100], "flow": [12, 50, 58, 62, 69, 2067, 2086], "cond": [12, 72, 987, 1301], "exampl": [12, 32, 40, 50, 62, 2038, 2043, 2044, 2045, 2059, 2061, 2073, 2094], "invari": 12, "higher_ord": 12, "__config__": 13, "cpp_extens": 14, "extend": [15, 36, 2017, 2044, 2045, 2108], "extens": [15, 17, 2044, 2050, 2057], "author": [15, 62], "stream": [16, 17, 18, 996, 1003, 1011, 1081, 1395, 1406, 1979, 2004, 2028, 2042, 2114], "event": [16, 17, 37, 39, 1008, 1382, 1394, 1978, 2027, 2028, 2114], "random": [17, 22, 58, 2046, 2055, 2071, 2086, 2114], "commun": [17, 23, 27, 2009, 2047], "collect": [17, 27], "beta": [17, 34], "memori": [17, 22, 2042, 2046, 2049, 2051, 2055, 2110], "manag": [17, 28, 68, 2029, 2042, 2049, 2064, 2107], "nvidia": [17, 2054], "nvtx": [17, 1065, 1066, 1067, 1068], "jiter": [17, 1048, 1049], "sanit": [17, 18], "prototyp": [17, 2067, 2068], "usag": [18, 30, 46, 2042, 2045, 2050, 2051, 2057, 2104, 2110], "environ": [19, 24, 27, 46, 2022, 2050, 2064, 2085, 2102, 2111], "data": [22, 50, 58, 70, 2013, 2043, 2046, 2061, 2068, 2083], "dataset": 22, "map": [22, 76, 2049], "style": 22, "iter": [22, 2012], "load": [22, 1277, 1341, 2008, 2056, 2064, 2067], "order": [22, 2039], "sampler": 22, "batch": [22, 56, 2054, 2063], "non": [22, 50, 62, 2033, 2036, 2039, 2042, 2054, 2064, 2067], "work": [22, 55, 2021, 2038, 2046, 2077, 2098, 2099, 2106], "collate_fn": 22, "singl": [22, 46, 2038], "multi": [22, 27, 46, 2033, 2036], "platform": 22, "pin": [22, 2042], "ddp": 23, "hook": [23, 2039, 2051, 2104], "us": [23, 27, 32, 62, 2012, 2039, 2042, 2044, 2048, 2059, 2061, 2063, 2064, 2065, 2067, 2077, 2099, 2101, 2106, 2108, 2110], "what": [23, 32, 51, 54, 56, 59, 2020, 2039, 2064, 2097, 2099, 2105, 2106], "doe": [23, 2039, 2098, 2099], "powersgd": 23, "state": [23, 2051, 2064, 2110], "acknowledg": [23, 2065], "deploi": 25, "ha": 25, "been": 25, "move": 25, "multipi": 25, "determinist": 26, "come": [27, 2039], "which": [27, 2039, 2099], "choos": 27, "network": [27, 2042, 2046, 2051], "interfac": [27, 1275, 2049], "other": [27, 2033, 2055, 2064, 2077, 2086, 2098], "nccl": [27, 2042], "basic": [27, 2013, 2031, 2045, 2072, 2083, 2106], "initi": [27, 2033, 2051, 2083], "tcp": 27, "share": [27, 2029, 2042, 2064, 2074], "file": [27, 2029, 2056, 2064], "system": [27, 2013, 2029, 2045], "post": [27, 2067], "shutdown": 27, "reiniti": 27, "kei": [27, 79, 2057], "valu": [27, 74, 614, 2012, 2013, 2054, 2069, 2074], "store": [27, 45], "group": 27, "devicemesh": 27, "point": [27, 2050], "synchron": [27, 1004, 1082, 1391, 1407, 2005], "asynchron": [27, 2013, 2042, 2053], "third": 27, "parti": 27, "launch": [27, 46, 2106], "spawn": [27, 2029], "applic": 27, "breakpoint": 27, "monitor": [27, 2026], "barrier": 27, "torch_distributed_debug": 27, "log": [27, 48, 369, 1343, 2050], "join": [28, 2086], "elast": [30, 36, 46], "advanc": [30, 2051], "plugin": 30, "pipelin": [32, 2065], "parallel": [32, 33, 1696, 2042, 2043, 2046, 2065, 2086], "why": [32, 54, 59, 2042, 2048, 2064, 2077, 2099], "i": [32, 51, 59, 2020, 2039, 2064, 2097, 2098, 2099, 2105], "techniqu": 32, "explain": 32, "split": [32, 547, 1912], "pipelineschedul": 32, "execut": [32, 2013, 2039, 2042, 2064, 2065, 2099], "microbatch": 32, "schedul": [32, 2063], "probabl": 34, "score": 34, "pathwis": 34, "deriv": [34, 2039], "exponentialfamili": 34, "bernoulli": [34, 153, 943], "binomi": 34, "categor": 34, "cauchi": 34, "chi2": 34, "continuousbernoulli": 34, "dirichlet": 34, "exponenti": [34, 1880], "fishersnedecor": 34, "gamma": 34, "geometr": 34, "gumbel": 34, "halfcauchi": 34, "halfnorm": 34, "independ": 34, "inversegamma": 34, "kumaraswami": 34, "lkjcholeski": 34, "laplac": 34, "lognorm": 34, "lowrankmultivariatenorm": 34, "mixturesamefamili": 34, "multinomi": [34, 421, 1409], "multivariatenorm": 34, "negativebinomi": 34, "normal": [34, 1666, 1769, 2033, 2063], "onehotcategor": 34, "pareto": 34, "poisson": [34, 1816], "relaxedbernoulli": 34, "logitrelaxedbernoulli": 34, "relaxedonehotcategor": 34, "studentt": 34, "transformeddistribut": 34, "uniform": 34, "vonmis": 34, "weibul": 34, "wishart": 34, "kl": 34, "diverg": [34, 2015], "constraint": [34, 2042], "registri": [34, 45, 87], "dlpack": 35, "agent": 36, "server": [36, 45, 48], "concept": 36, "watchdog": 36, "health": 36, "launcher": 37, "rendezv": [37, 45, 46], "handler": [37, 42, 45, 2046], "metric": [37, 42], "error": [38, 2046, 2057, 2067, 2068, 2108], "propag": [38, 2031], "object": [39, 71, 2064], "torchelast": 41, "kubernet": 41, "multipl": [43, 2038, 2042, 2044, 2065], "worker": [43, 46, 2046], "quickstart": 44, "except": [45, 2046], "dynam": [45, 50, 58, 62, 73, 74, 2067, 2070, 2095, 2098], "c10d": 45, "etcd": 45, "legaci": 45, "torchrun": 46, "node": [46, 51, 80, 83, 86, 922, 923, 924, 925, 926, 2039], "stack": [46, 1917, 2067], "fault": 46, "toler": 46, "size": [46, 537, 2032, 2047, 2076], "failur": 46, "min": [46, 411, 1372], "max": [46, 407, 1367], "4": [46, 56], "up": [46, 2099], "membership": [46, 2013], "note": [46, 79, 2009, 2013, 2042, 2047, 2067, 2072], "definit": [46, 2013], "deploy": [46, 2050], "import": [46, 2008, 2057, 2064, 2098], "notic": [46, 2008], "subprocess": [47, 2029], "handl": [47, 2099], "retriev": 47, "subprocesshandl": 47, "expir": 48, "timer": 48, "client": 48, "write": [48, 62, 2039, 2044, 2061, 2107], "info": [48, 2112], "train": [49, 2038, 2051, 2053, 2067, 2099], "script": [49, 1281, 2010, 2057, 2061], "exist": 50, "framework": [50, 2064, 2072], "an": [50, 2008, 2061, 2063, 2064], "strict": 50, "express": [50, 2012, 2013], "special": [50, 2013, 2039, 2078, 2096], "shape": [50, 58, 73, 523, 2061, 2095, 2096, 2098], "primit": [50, 2013], "contain": [50, 2033], "limit": [50, 58, 62, 2008, 2045, 2061, 2093, 2100, 2104], "break": [50, 2012, 2013, 2096, 2099, 2106, 2108], "depend": [50, 58, 2059, 2064, 2073], "miss": 50, "meta": [50, 2013, 2021], "kernel": [50, 938, 2049, 2067, 2102, 2106], "read": [50, 54, 2061, 2089, 2105], "addit": [50, 79], "link": 50, "user": [50, 2064, 2074, 2089], "deep": [50, 2089, 2096], "dive": [50, 2089, 2096], "ir": [51, 2103, 2107], "assumpt": [51, 2074], "exportedprogram": 51, "call_funct": 51, "metadata": [51, 922, 2050], "placehold": 51, "output": [51, 2048, 2096], "get_attr": 51, "symint": [51, 2095], "faketensor": 51, "pytre": 51, "abl": 51, "helper": 52, "fullyshardeddataparallel": 53, "func": [54, 55, 57, 59, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 2044, 2045, 2099], "ar": [54, 59, 2008, 2039, 2064, 2096, 2099], "compos": [54, 59, 2094], "patch": [56, 2064], "norm": [56, 453, 1326, 1768], "": [56, 2064, 2099, 2105], "happen": 56, "option": [56, 2012, 2041, 2057, 2063], "batchnorm": 56, "paramet": [56, 1714, 2012, 2063], "functorch": [56, 57], "eval": [56, 2039], "migrat": [57, 2010], "make_funct": 57, "combine_state_for_ensembl": 57, "ux": 58, "vmap": [58, 59, 893, 1175, 1973, 2044, 2045, 2099], "mutat": [58, 77, 2086], "arbitrari": [58, 2064], "structur": [58, 70, 2013, 2077], "out": [58, 2030, 2046], "item": [58, 352], "nonzero": [58, 452, 1767], "friend": 58, "whirlwind": 59, "tour": 59, "grad": [59, 290, 915, 1165, 2039, 2042, 2099], "auto": 59, "vector": 59, "vjp": [59, 914, 1174], "jacobian": [59, 911], "product": [59, 2018, 2099], "jvp": [59, 892, 912, 1170, 2045], "jacrev": [59, 1169], "jacfwd": [59, 1168], "hessian": [59, 909, 1167], "__future__": 60, "futur": 61, "A": [62, 2051, 2059, 2096], "quick": 62, "primer": 62, "manipul": [62, 2031], "direct": 62, "subgraph": [62, 2107], "rewrit": [62, 2107], "With": [62, 2015], "replace_pattern": 62, "proxi": 62, "retrac": 62, "interpret": [62, 2010], "pattern": [62, 2012, 2061, 2064], "introduct": [62, 2020, 2032, 2067, 2096], "pitfal": [62, 2061], "pdb": 62, "print": [62, 2012, 2013], "to_fold": 62, "graphmodul": 62, "avail": 62, "debugg": 62, "symbol": [62, 82, 85, 2061, 2067, 2086, 2096], "trace": [62, 591, 1285, 1944, 2010, 2061, 2066, 2067, 2099, 2100, 2106], "static": [62, 2061, 2067, 2096], "tracer": [62, 2010], "leaf": 62, "miscellanea": 62, "experiment": [63, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 2018], "symbolic_shap": [63, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209], "exportdb": 64, "tag": [64, 2086], "support": [64, 2011, 2013, 2020, 2030, 2031, 2032, 2045, 2061, 2062, 2067, 2077, 2099, 2104], "assume_constant_result": [64, 75, 976], "autograd_funct": 64, "class_method": 64, "cond_branch_class_method": [64, 72, 73], "cond_branch_nested_funct": [64, 72, 73], "cond_branch_nonlocal_vari": [64, 72, 73], "cond_closed_over_vari": [64, 67, 72], "cond_operand": [64, 72, 73], "cond_pred": [64, 72, 73], "constrain_as_size_exampl": [64, 74, 75], "constrain_as_value_exampl": [64, 74, 75], "decor": 64, "dictionari": [64, 70, 2013], "dynamic_shape_assert": [64, 65], "dynamic_shape_constructor": [64, 73], "dynamic_shape_if_guard": [64, 69, 73], "dynamic_shape_map": [64, 73, 76], "dynamic_shape_sl": [64, 73], "dynamic_shape_view": [64, 73], "fn_with_kwarg": [64, 70], "list_contain": [64, 65, 70, 73], "list_unpack": [64, 69, 70], "nested_funct": [64, 67], "null_context_manag": [64, 68], "pytree_flatten": 64, "scalar_output": [64, 73], "specialized_attribut": 64, "static_for_loop": [64, 69], "static_if": [64, 69], "tensor_setattr": [64, 66], "type_reflection_method": [64, 66], "user_input_mut": [64, 77], "Not": [64, 2015], "yet": 64, "dynamic_shape_round": [64, 66, 73], "model_attr_mut": [64, 71], "optional_input": [64, 71], "torch_sym_min": [64, 78], "assert": [65, 2013, 2049], "builtin": [66, 2011], "closur": [67, 2063], "escap": [75, 2099], "hatch": [75, 2099], "fxe0007": 79, "fxe0008": 80, "fxe0010": 81, "pass": [81, 2013, 2042, 2053, 2067, 2073, 2107], "fxe0011": 82, "call": [82, 2012, 2013, 2045, 2099], "fxe0012": 83, "unsupport": [83, 2012, 2013, 2015, 2061, 2062], "analysi": 83, "fxe0013": 84, "fxe0014": 85, "find": [85, 87, 2064, 2106], "opschema": 85, "match": [85, 2012, 2031], "fxe0015": 86, "insert": 86, "fxe0016": 87, "overload": 87, "abs_": 90, "absolut": [91, 682], "absolute_": 92, "aco": [93, 683], "acos_": 94, "acosh": [95, 684], "acosh_": 96, "add_": 98, "addbmm": [99, 686], "addbmm_": 100, "addcdiv": [101, 687], "addcdiv_": 102, "addcmul": [103, 688], "addcmul_": 104, "addmm": [105, 689, 1897], "addmm_": 106, "addmv": [107, 690], "addmv_": 108, "addr": [109, 691], "addr_": 110, "adjoint": [111, 692], "all": [112, 693, 2044, 2061, 2063], "allclos": [113, 694], "amax": [114, 695], "amin": [115, 696], "aminmax": [116, 697], "ani": [118, 699, 2013, 2099, 2105], "apply_": 119, "arcco": [120, 867], "arccos_": 121, "arccosh": [122, 868], "arccosh_": 123, "arcsin": [124, 869], "arcsin_": 125, "arcsinh": [126, 870], "arcsinh_": 127, "arctan": [128, 871], "arctan2": [129, 872], "arctan2_": 130, "arctan_": 131, "arctanh": [132, 873], "arctanh_": 133, "argmax": [134, 875], "argmin": [135, 876], "argsort": [136, 877], "argwher": [137, 878], "as_strid": [138, 879], "as_subclass": 139, "asin": [140, 882], "asin_": 141, "asinh": [142, 883], "asinh_": 143, "atan": [144, 884], "atan2": [145, 885], "atan2_": 146, "atan_": 147, "atanh": [148, 886], "atanh_": 149, "backward": [150, 890, 894, 2039, 2040, 2042, 2048, 2073], "baddbmm": [151, 941], "baddbmm_": 152, "bernoulli_": 154, "bincount": [156, 944], "bitwise_and": [157, 945], "bitwise_and_": 158, "bitwise_left_shift": [159, 946], "bitwise_left_shift_": 160, "bitwise_not": [161, 947], "bitwise_not_": 162, "bitwise_or": [163, 948], "bitwise_or_": 164, "bitwise_right_shift": [165, 949], "bitwise_right_shift_": 166, "bitwise_xor": [167, 950], "bitwise_xor_": 168, "bmm": [169, 953], "bool": 170, "broadcast_to": [171, 956], "byte": 172, "cauchy_": 173, "ccol_indic": 174, "cdoubl": 175, "ceil": [176, 962], "ceil_": 177, "cfloat": 178, "chalf": 179, "char": 180, "choleski": [181, 964, 1299], "cholesky_invers": [182, 965], "cholesky_solv": [183, 966], "chunk": [184, 967], "clamp": [185, 771, 968], "clamp_": 186, "clip": [187, 969, 2038], "clip_": 188, "clone": [189, 970], "coalesc": 190, "col_indic": 191, "conj": [192, 988], "conj_phys": [193, 989], "conj_physical_": 194, "contigu": 195, "copy_": 196, "copysign": [197, 990], "copysign_": 198, "corrcoef": [199, 991], "co": [200, 992], "cos_": 201, "cosh": [202, 993], "cosh_": 203, "count_nonzero": [204, 994], "cov": [205, 995], "cross": [207, 1005, 1302, 2039], "crow_indic": 208, "cummax": [210, 1085], "cummin": [211, 1086], "cumprod": [212, 1087], "cumprod_": 213, "cumsum": [214, 1088], "cumsum_": 215, "data_ptr": 216, "deg2rad": [217, 1090], "dense_dim": 218, "dequant": [219, 1091, 2067], "det": [220, 1092, 1303], "detach": 221, "detach_": 222, "devic": [223, 1027, 1400, 1983, 2021, 2042, 2054, 2080], "diag": [224, 1093], "diag_emb": [225, 1094], "diagflat": [226, 1095], "diagon": [227, 1096, 1304], "diagonal_scatt": [228, 1097], "diff": [229, 1098], "digamma": [230, 1099], "digamma_": 231, "dim": [232, 2030], "dim_ord": 233, "dist": [234, 1100], "div": [235, 1101, 2056], "div_": 236, "divid": [237, 1102], "divide_": 238, "dot": [239, 1103], "doubl": 240, "dsplit": [241, 1104], "element_s": 242, "eq": [243, 1111], "eq_": 244, "equal": [245, 1112], "erf": [246, 1113], "erf_": 247, "erfc": [248, 1114], "erfc_": 249, "erfinv": [250, 1115], "erfinv_": 251, "exp": [252, 1116], "exp_": 253, "expand": 254, "expand_a": 255, "expm1": [256, 1118], "expm1_": 257, "exponential_": 258, "fill_": 259, "fill_diagonal_": 260, "fix_": 262, "flatten": [263, 1145, 1468], "flip": [264, 1146], "fliplr": [265, 1147], "flipud": [266, 1148], "float": [267, 2056], "float_pow": [268, 1149], "float_power_": 269, "floor": [270, 1150], "floor_": 271, "floor_divid": [272, 1151], "floor_divide_": 273, "fmax": [274, 1152], "fmin": [275, 1153], "fmod": [276, 1154], "fmod_": 277, "frac": [278, 1155], "frac_": 279, "frexp": [280, 1156], "gather": [281, 1020, 1210], "gcd": [282, 1211], "gcd_": 283, "ge": [284, 1212], "ge_": 285, "geometric_": 286, "geqrf": [287, 1213], "ger": [288, 1214], "get_devic": 289, "greater": [291, 1224], "greater_": 292, "greater_equ": [293, 1225], "greater_equal_": 294, "gt": [295, 1226], "gt_": 296, "half": 297, "hardshrink": [298, 1478, 1632], "heavisid": [299, 1229], "histc": [300, 1230], "histogram": [301, 1231], "hsplit": [302, 1233], "hypot": [303, 1236], "hypot_": 304, "i0": [305, 1237], "i0_": 306, "igamma": [307, 1238], "igamma_": 308, "igammac": [309, 1239], "igammac_": 310, "index_add": [312, 1241], "index_add_": 313, "index_copi": [314, 1242], "index_copy_": 315, "index_fil": 316, "index_fill_": 317, "index_put": 318, "index_put_": 319, "index_reduc": [320, 1243], "index_reduce_": 321, "index_select": [322, 1244], "indic": [323, 2009], "inner": [324, 1246], "int": [325, 2096], "int_repr": 326, "invers": [327, 1247, 2018], "is_coalesc": 328, "is_complex": [329, 1248], "is_conj": [330, 1249], "is_contigu": 331, "is_cuda": 332, "is_floating_point": [333, 1251], "is_infer": 334, "is_leaf": 335, "is_meta": 336, "is_pin": 337, "is_quant": 338, "is_set_to": 339, "is_shar": 340, "is_sign": 341, "is_spars": 342, "is_sparse_csr": 343, "isclos": [344, 1258], "isfinit": [345, 1259], "isinf": [346, 1261], "isnan": [347, 1262], "isneginf": [348, 1263], "isposinf": [349, 1264], "isreal": [350, 1265], "istft": [351, 1266], "items": 353, "kthvalu": [354, 1291], "lcm": [355, 1292], "lcm_": 356, "ldexp": [357, 1293], "ldexp_": 358, "le": [359, 1294], "le_": 360, "lerp": [361, 1295], "lerp_": 362, "less": [363, 1296], "less_": 364, "less_equ": [365, 1297], "less_equal_": 366, "lgamma": [367, 1298], "lgamma_": 368, "log10": [370, 1344], "log10_": 371, "log1p": [372, 1345], "log1p_": 373, "log2": [374, 1346], "log2_": 375, "log_": 376, "log_normal_": 377, "logaddexp": [378, 1347], "logaddexp2": [379, 1348], "logcumsumexp": [380, 1349], "logdet": [381, 1350], "logical_and": [382, 1351], "logical_and_": 383, "logical_not": [384, 1352], "logical_not_": 385, "logical_or": [386, 1353], "logical_or_": 387, "logical_xor": [388, 1354], "logical_xor_": 389, "logit": [390, 1355], "logit_": 391, "logsumexp": [392, 1357], "long": 393, "lt": [394, 1358], "lt_": 395, "lu": [396, 1316, 1359], "lu_solv": [397, 1319, 1360], "map_": 398, "masked_fil": 399, "masked_fill_": 400, "masked_scatt": 401, "masked_scatter_": 402, "masked_select": [403, 1363], "matmul": [404, 1320, 1364], "matrix_exp": [405, 1321, 1365], "matrix_pow": [406, 1323, 1366], "maximum": [408, 1368], "mean": [409, 1369], "median": [410, 1370], "minimum": [412, 1373], "mm": [413, 1374, 1901], "module_load": 415, "moveaxi": [416, 1376], "movedim": [417, 1377], "msort": [418, 1392], "mul": [419, 1408], "mul_": 420, "multipli": [422, 1410], "multiply_": 423, "mv": [424, 1411], "mvlgamma": [425, 1412], "mvlgamma_": 426, "nan_to_num": [427, 1413], "nan_to_num_": 428, "nanmean": [429, 1414], "nanmedian": [430, 1415], "nanquantil": [431, 1416], "nansum": [432, 1417], "narrow": [433, 1418], "narrow_copi": [434, 1419], "nbyte": 435, "ndim": 436, "ndimens": 437, "ne": [438, 1420], "ne_": 439, "neg": [440, 442, 1421, 1422], "neg_": 441, "negative_": 443, "nelement": 444, "new_empti": 445, "new_ful": 446, "new_on": 447, "new_tensor": 448, "new_zero": 449, "nextaft": [450, 1423], "nextafter_": 451, "normal_": 454, "not_equ": [455, 1770], "not_equal_": 456, "numel": [457, 1771], "numpi": [458, 2061, 2099], "orgqr": [459, 1810], "ormqr": [460, 1811], "outer": [461, 1812], "permut": [462, 1814, 2030], "pin_memori": 463, "pinvers": [464, 1815], "polygamma": [465, 1818], "polygamma_": 466, "posit": [467, 1819], "pow": [468, 1820], "pow_": 469, "prod": [470, 1821], "put_": 471, "q_per_channel_axi": 472, "q_per_channel_scal": 473, "q_per_channel_zero_point": 474, "q_scale": 475, "q_zero_point": 476, "qr": [477, 1328, 1823], "qscheme": 478, "quantil": [479, 1824], "rad2deg": [480, 1831], "random_": 481, "ravel": [482, 1840], "reciproc": [484, 1842], "reciprocal_": 485, "record_stream": 486, "register_hook": [487, 925], "register_post_accumulate_grad_hook": 488, "remaind": [489, 1843], "remainder_": 490, "renorm": [491, 1844], "renorm_": 492, "repeat": 493, "repeat_interleav": [494, 1845], "requires_grad": [495, 2039], "requires_grad_": 496, "reshap": [497, 1846], "reshape_a": 498, "resize_": 499, "resize_as_": 500, "resolve_conj": [501, 1847], "resolve_neg": [502, 1848], "retain_grad": 503, "retains_grad": 504, "roll": [505, 1850], "rot90": [506, 1851], "round": [507, 1852], "round_": 508, "row_indic": 509, "rsqrt": [510, 1854], "rsqrt_": 511, "scatter": [512, 1022, 1856], "scatter_": 513, "scatter_add": [514, 1857], "scatter_add_": 515, "scatter_reduc": [516, 1858], "scatter_reduce_": 517, "select": [518, 1861, 2020], "select_scatt": [519, 1862], "set_": 520, "sgn": [521, 1874], "sgn_": 522, "share_memory_": 524, "short": 525, "sigmoid": [526, 759, 1554, 1683, 1875], "sigmoid_": 527, "sign": [528, 1876], "sign_": 529, "signbit": [530, 1888], "sin": [531, 1889], "sin_": 532, "sinc": [533, 1890], "sinc_": 534, "sinh": [535, 1891], "sinh_": 536, "slice_scatt": [538, 1892], "slogdet": [539, 1329, 1893], "smm": [540, 1894], "softmax": [541, 1557, 1687, 1895, 1903], "sort": [542, 1896], "sparse_dim": 543, "sparse_mask": 544, "sparse_resize_": 545, "sparse_resize_and_clear_": 546, "sqrt": [548, 1913], "sqrt_": 549, "squar": [550, 1914], "square_": 551, "squeez": [552, 1915], "squeeze_": 553, "sspaddmm": [554, 1916], "std": [555, 1918], "stft": [556, 1920], "storag": [557, 2079], "storage_offset": 558, "storage_typ": 559, "stride": 560, "sub": [561, 1921], "sub_": 562, "subtract": [563, 1922], "subtract_": 564, "sum": [565, 1905, 1923, 2033], "sum_to_s": 566, "svd": [567, 1333, 1924], "swapax": [568, 1926], "swapdim": [569, 1927], "t": [570, 1934, 2013, 2046, 2099], "t_": 571, "take": [572, 1935, 2063], "take_along_dim": [573, 1936], "tan": [574, 1937], "tan_": 575, "tanh": [576, 1564, 1692, 1938], "tanh_": 577, "tensor_split": [578, 1940], "tile": [579, 1942], "to_dens": 581, "to_mkldnn": 582, "to_spars": 583, "to_sparse_bsc": 584, "to_sparse_bsr": 585, "to_sparse_coo": 586, "to_sparse_csc": 587, "to_sparse_csr": 588, "tolist": 589, "topk": [590, 1943], "transpos": [592, 1945], "transpose_": 593, "triangular_solv": [594, 1948], "tril": [595, 1949], "tril_": 596, "triu": [597, 1951], "triu_": 598, "true_divid": [599, 1953], "true_divide_": 600, "trunc": [601, 1954], "trunc_": 602, "type_a": 604, "unbind": [605, 1955, 2032], "unflatten": [606, 1574, 1956], "unfold": [607, 1575, 1699], "uniform_": 608, "uniqu": [609, 1957], "unique_consecut": [610, 1958], "unsqueez": [611, 1960], "unsqueeze_": 612, "untyped_storag": 613, "var": [615, 1968], "vdot": [616, 1970], "view": [617, 2020, 2056, 2081, 2106], "view_a": 618, "vsplit": [619, 1974], "where": [620, 1976, 2008], "xlogi": [621, 1977], "xlogy_": 622, "zero_": 623, "_assert": 624, "_foreach_ab": 625, "_foreach_abs_": 626, "_foreach_aco": 627, "_foreach_acos_": 628, "_foreach_asin": 629, "_foreach_asin_": 630, "_foreach_atan": 631, "_foreach_atan_": 632, "_foreach_ceil": 633, "_foreach_ceil_": 634, "_foreach_co": 635, "_foreach_cos_": 636, "_foreach_cosh": 637, "_foreach_cosh_": 638, "_foreach_erf": 639, "_foreach_erf_": 640, "_foreach_erfc": 641, "_foreach_erfc_": 642, "_foreach_exp": 643, "_foreach_exp_": 644, "_foreach_expm1": 645, "_foreach_expm1_": 646, "_foreach_floor": 647, "_foreach_floor_": 648, "_foreach_frac": 649, "_foreach_frac_": 650, "_foreach_lgamma": 651, "_foreach_lgamma_": 652, "_foreach_log": 653, "_foreach_log10": 654, "_foreach_log10_": 655, "_foreach_log1p": 656, "_foreach_log1p_": 657, "_foreach_log2": 658, "_foreach_log2_": 659, "_foreach_log_": 660, "_foreach_neg": 661, "_foreach_neg_": 662, "_foreach_reciproc": 663, "_foreach_reciprocal_": 664, "_foreach_round": 665, "_foreach_round_": 666, "_foreach_sigmoid": 667, "_foreach_sigmoid_": 668, "_foreach_sin": 669, "_foreach_sin_": 670, "_foreach_sinh": 671, "_foreach_sinh_": 672, "_foreach_sqrt": 673, "_foreach_sqrt_": 674, "_foreach_tan": 675, "_foreach_tan_": 676, "_foreach_trunc": 677, "_foreach_trunc_": 678, "_foreach_zero_": 679, "_log": [680, 2019], "set_log": 680, "bnrelu2d": [700, 723], "bnrelu3d": [701, 724], "convbn1d": [702, 712], "convbn2d": [703, 713], "convbn3d": [704, 714], "convbnrelu1d": [705, 715], "convbnrelu2d": [706, 716], "convbnrelu3d": [707, 717], "convrelu1d": [708, 725], "convrelu2d": [709, 718, 726], "convrelu3d": [710, 719, 727], "linearrelu": [711, 720, 728, 729], "freeze_bn_stat": 721, "update_bn_stat": 722, "conv2d": [730, 739, 773, 1451, 1605], "conv3d": [731, 740, 774, 1452, 1606], "lstm": [734, 762, 1493, 2055], "multiheadattent": [735, 1529], "batchnorm2d": [736, 1438], "batchnorm3d": [737, 1439], "conv1d": [738, 772, 1450, 1604], "convtranspose1d": [741, 1453], "convtranspose2d": [742, 1454], "convtranspose3d": [743, 1455], "elu": [744, 775, 1464, 1618], "embed": [745, 1465, 1620], "embeddingbag": [746, 1466], "fxfloatfunct": 747, "floatfunct": 748, "groupnorm": [749, 1477], "hardswish": [750, 777, 1480, 1634], "instancenorm1d": [751, 1485], "instancenorm2d": [752, 1486], "instancenorm3d": [753, 1487], "layernorm": [754, 1495], "leakyrelu": [755, 1509], "qfunction": 757, "relu6": [758, 1544, 1676], "gru": [760, 1474], "grucel": [761, 1475], "lstmcell": [763, 1494], "rnncell": [765, 1541], "adaptive_avg_pool2d": [766, 1589], "adaptive_avg_pool3d": [767, 1590], "avg_pool2d": [768, 1597], "avg_pool3d": [769, 1598], "celu": [770, 1441, 1603], "hardsigmoid": [776, 1479, 1633], "hardtanh": [778, 1481, 1635], "interpol": [779, 1640], "leaky_relu": [780, 1644], "max_pool1d": [782, 1654], "max_pool2d": [783, 1655], "threshold": [784, 1566, 1694], "upsampl": [785, 1576, 1700], "upsample_bilinear": [786, 1701], "upsample_nearest": [787, 1702], "dequantstub": 788, "quantstub": 789, "quantwrapp": 790, "add_quant_dequ": 791, "backendconfig": 792, "backendpatternconfig": 793, "dtypeconfig": 794, "dtypewithconstraint": 795, "observationtyp": 796, "convert": [797, 2098], "default_eval_fn": 798, "fakequant": [799, 2067], "fakequantizebas": 800, "fixedqparamsfakequant": 801, "fusedmovingavgobsfakequant": 802, "default_fake_qu": 803, "default_fused_act_fake_qu": 804, "default_fused_per_channel_wt_fake_qu": 805, "default_fused_wt_fake_qu": 806, "default_histogram_fake_qu": 807, "default_per_channel_weight_fake_qu": 808, "default_weight_fake_qu": 809, "disable_fake_qu": 810, "disable_observ": 811, "enable_fake_qu": 812, "enable_observ": 813, "fuse_modul": 814, "convertcustomconfig": 815, "fusecustomconfig": 816, "preparecustomconfig": 817, "standalonemoduleconfigentri": 818, "histogramobserv": 819, "minmaxobserv": 820, "movingaverageminmaxobserv": 821, "movingaverageperchannelminmaxobserv": 822, "noopobserv": 823, "observerbas": 824, "perchannelminmaxobserv": 825, "placeholderobserv": 826, "recordingobserv": 827, "default_debug_observ": 828, "default_dynamic_quant_observ": 829, "default_float_qparams_observ": 830, "default_histogram_observ": 831, "default_observ": 832, "default_per_channel_weight_observ": 833, "default_placeholder_observ": 834, "default_weight_observ": 835, "get_observer_state_dict": 836, "load_observer_state_dict": 837, "prepar": [838, 2067, 2070], "prepare_qat": 839, "propagate_qconfig": 840, "model_is_export": 841, "qconfig": [842, 2067, 2070], "default_activation_only_qconfig": 843, "default_debug_qconfig": 844, "default_dynamic_qconfig": 845, "default_per_channel_qconfig": 846, "default_qat_qconfig": 847, "default_qat_qconfig_v2": 848, "default_qconfig": 849, "default_weight_only_qconfig": 850, "float16_dynamic_qconfig": 851, "float16_static_qconfig": 852, "float_qparams_weight_only_qconfig": 853, "per_channel_dynamic_qconfig": 854, "qconfigmap": 855, "get_default_qat_qconfig_map": 856, "get_default_qconfig_map": 857, "quantiz": [858, 2033, 2051, 2061, 2067, 2068, 2069, 2070], "quantize_dynam": 859, "convert_fx": 860, "fuse_fx": 861, "prepare_fx": 862, "prepare_qat_fx": 863, "quantize_qat": 864, "swap_modul": 865, "arang": 866, "are_deterministic_algorithms_en": 874, "as_tensor": 880, "asarrai": 881, "atleast_1d": 887, "atleast_2d": 888, "atleast_3d": 889, "unpackeddualtensor": 895, "dual_level": 896, "forward_ad": [897, 898, 899, 900], "enter_dual_level": 897, "exit_dual_level": 898, "make_du": 899, "unpack_du": 900, "backwardcfunct": 901, "functionctx": [902, 903, 904, 905], "mark_dirti": 902, "mark_non_differenti": 903, "save_for_backward": 904, "set_materialize_grad": 905, "inplacefunct": 906, "nestediofunct": 907, "once_differenti": 908, "hvp": 910, "vhp": 913, "inference_mod": 916, "set_grad_en": 917, "set_multithreading_en": 918, "gradcheck": [919, 920, 921, 2048], "gradcheckerror": 919, "gradgradcheck": [921, 2048], "name": [923, 2012, 2030, 2031], "next_funct": 924, "register_prehook": 926, "increment_vers": 927, "enforceuniqu": 928, "kinetosteptrack": 929, "load_nvprof": 930, "parse_nvprof_trac": 931, "export_chrome_trac": 932, "key_averag": 933, "self_cpu_time_tot": 934, "total_averag": 935, "record_funct": 936, "interv": 937, "memrecordsacc": 939, "stringtabl": 940, "bartlett_window": 942, "blackman_window": 951, "block_diag": 952, "broadcast_shap": 954, "broadcast_tensor": 955, "bucket": 957, "can_cast": 958, "cartesian_prod": 959, "cat": 960, "cdist": 961, "chain_matmul": 963, "column_stack": 971, "combin": [972, 2044], "compiled_with_cxx11_abi": 974, "allow_in_graph": [975, 2100], "cudagraph_mark_step_begin": 978, "is_compil": 980, "is_dynamo_compil": 981, "list_backend": 982, "reset": 983, "concat": 985, "concaten": 986, "streamcontext": [997, 1012, 1396, 1980], "current_devic": [998, 1024, 1397, 1981], "current_stream": [999, 1025, 1398, 1982], "device_count": [1000, 1028, 1379, 1401, 1984], "is_avail": [1001, 1045, 1403, 1994], "set_devic": [1002, 1075, 2000], "cudagraph": [1006, 2093], "cudapluggablealloc": 1007, "externalstream": 1009, "outofmemoryerror": 1010, "caching_allocator_alloc": 1013, "caching_allocator_delet": 1014, "can_device_access_p": 1015, "change_current_alloc": 1016, "clock_rat": 1017, "comm": [1018, 1019, 1020, 1021, 1022], "broadcast": [1018, 2040], "broadcast_coalesc": 1019, "reduce_add": 1021, "current_blas_handl": 1023, "default_stream": [1026, 1399], "device_of": [1029, 1985], "empty_cach": [1030, 1381, 1986], "get_allocator_backend": 1031, "get_arch_list": 1032, "get_device_cap": [1033, 1987], "get_device_nam": [1034, 1988], "get_device_properti": [1035, 1989], "get_gencode_flag": 1036, "get_rng_stat": [1037, 1222, 1383, 1990], "get_rng_state_al": [1038, 1991], "get_sync_debug_mod": 1039, "graph_pool_handl": 1041, "init": [1042, 1402, 1992, 2037], "initial_se": [1043, 1245, 1993], "ipc_collect": 1044, "is_current_stream_captur": 1046, "is_initi": [1047, 1404, 1995], "_create_jit_fn": 1048, "_create_multi_output_jit_fn": 1049, "list_gpu_process": 1050, "make_graphed_cal": 1051, "manual_se": [1052, 1362, 1384, 1996], "manual_seed_al": [1053, 1997], "max_memory_alloc": 1054, "max_memory_cach": 1055, "max_memory_reserv": 1056, "mem_get_info": 1057, "memory_alloc": 1058, "memory_cach": 1059, "memory_reserv": 1060, "memory_snapshot": 1061, "memory_stat": 1062, "memory_summari": 1063, "memory_usag": 1064, "mark": 1065, "rang": [1066, 1839, 2012], "range_pop": 1067, "range_push": 1068, "power_draw": 1069, "reset_max_memory_alloc": 1070, "reset_max_memory_cach": 1071, "reset_peak_memory_stat": 1072, "seed": [1073, 1388, 1860, 1998], "seed_al": [1074, 1999], "set_per_process_memory_fract": [1076, 1389], "set_rng_stat": [1077, 1390, 1872, 2001], "set_rng_state_al": [1078, 2002], "set_stream": [1079, 1405, 2003], "set_sync_debug_mod": 1080, "temperatur": 1083, "cumulative_trapezoid": 1089, "dstack": 1105, "einsum": 1106, "empti": 1107, "empty_lik": 1108, "empty_strid": 1109, "enable_grad": 1110, "exp2": 1117, "ey": 1119, "fake_quantize_per_channel_affin": 1120, "fake_quantize_per_tensor_affin": 1121, "fft2": 1123, "fftfreq": 1124, "fftn": 1125, "fftshift": 1126, "hfft": 1127, "hfft2": 1128, "hfftn": 1129, "ifft": 1130, "ifft2": 1131, "ifftn": 1132, "ifftshift": 1133, "ihfft": 1134, "ihfft2": 1135, "ihfftn": 1136, "irfft": 1137, "irfft2": 1138, "irfftn": 1139, "rfft": 1140, "rfft2": 1141, "rfftfreq": 1142, "rfftn": 1143, "from_dlpack": 1157, "from_fil": 1158, "from_numpi": 1159, "frombuff": 1160, "full": [1161, 2056], "full_lik": 1162, "functional_cal": [1163, 1763], "grad_and_valu": 1166, "replace_all_batch_norm_modules_": 1172, "stack_module_st": 1173, "callmethodkei": 1176, "convertintkei": 1177, "dimconstraint": 1178, "dimdynam": [1179, 2095], "dividebykei": 1180, "equalityconstraint": 1181, "propagateunbackedsymint": 1182, "relaxedunspecconstraint": 1183, "shapeenv": 1184, "shapeenvset": 1185, "statefulsymboliccontext": 1186, "statelesssymboliccontext": 1187, "strictminmaxconstraint": 1188, "subclasssymboliccontext": 1189, "symboliccontext": 1190, "canonicalize_bool_expr": 1191, "check_consist": 1192, "compute_unbacked_bind": 1193, "constrain_rang": 1194, "constrain_unifi": 1195, "definitely_fals": 1196, "definitely_tru": 1197, "guard_size_oblivi": 1198, "has_free_symbol": 1199, "hint_int": 1200, "is_concrete_bool": 1201, "is_concrete_int": 1202, "lru_cach": 1203, "parallel_and": 1204, "parallel_or": 1205, "rebind_unback": 1206, "resolve_unbacked_bind": 1207, "statically_known_tru": 1208, "sym_eq": 1209, "get_default_devic": 1215, "get_default_dtyp": 1216, "get_deterministic_debug_mod": 1217, "get_device_modul": 1218, "get_float32_matmul_precis": 1219, "get_num_interop_thread": 1220, "get_num_thread": 1221, "hamming_window": 1227, "hann_window": 1228, "histogramdd": 1232, "hspmm": 1234, "hstack": 1235, "is_deterministic_algorithms_warn_only_en": 1250, "is_grad_en": 1252, "is_inference_mode_en": 1253, "is_nonzero": 1254, "is_storag": 1255, "is_tensor": 1256, "is_warn_always_en": 1257, "isin": 1260, "attribut": [1267, 2010, 2012, 2013, 2015, 2080], "scriptfunct": 1268, "scriptmodul": [1269, 2056], "annot": [1270, 2013], "enable_onednn_fus": 1271, "fork": 1272, "freez": 1273, "ignor": 1274, "isinst": 1276, "onednn_fusion_en": 1278, "optimize_for_infer": 1279, "save": [1280, 1855, 2008, 2039, 2050, 2056, 2067], "script_if_trac": 1282, "set_fusion_strategi": 1283, "strict_fus": 1284, "trace_modul": 1286, "unus": 1287, "wait": 1288, "kaiser_window": 1289, "kron": 1290, "cholesky_ex": 1300, "eig": 1305, "eigh": 1306, "eigval": 1307, "eigvalsh": 1308, "householder_product": 1309, "inv": 1310, "inv_ex": 1311, "ldl_factor": 1312, "ldl_factor_ex": 1313, "ldl_solv": 1314, "lstsq": 1315, "lu_factor": 1317, "lu_factor_ex": 1318, "matrix_norm": 1322, "matrix_rank": 1324, "multi_dot": 1325, "pinv": 1327, "solv": 1330, "solve_ex": 1331, "solve_triangular": 1332, "svdval": 1334, "tensorinv": 1335, "tensorsolv": 1336, "vander": [1337, 1967], "vecdot": 1338, "vector_norm": 1339, "linspac": 1340, "lobpcg": 1342, "logspac": 1356, "lu_unpack": 1361, "meshgrid": 1371, "current_allocated_memori": 1378, "driver_allocated_memori": 1380, "stop": 1387, "mtia": [1393, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 2028], "deferredmtiacallerror": 1393, "adaptiveavgpool1d": 1424, "adaptiveavgpool2d": 1425, "adaptiveavgpool3d": 1426, "adaptivelogsoftmaxwithloss": 1427, "adaptivemaxpool1d": 1428, "adaptivemaxpool2d": 1429, "adaptivemaxpool3d": 1430, "alphadropout": 1431, "avgpool1d": 1432, "avgpool2d": 1433, "avgpool3d": 1434, "bceloss": 1435, "bcewithlogitsloss": 1436, "batchnorm1d": 1437, "bilinear": [1440, 1600], "ctcloss": 1442, "channelshuffl": 1443, "circularpad1d": 1444, "circularpad2d": 1445, "circularpad3d": 1446, "constantpad1d": 1447, "constantpad2d": 1448, "constantpad3d": 1449, "cosineembeddingloss": 1456, "cosinesimilar": 1457, "crossentropyloss": 1458, "dataparallel": [1459, 2033, 2036, 2038, 2042], "dropout": [1460, 1614, 2033, 2036], "dropout1d": [1461, 1615], "dropout2d": [1462, 1616], "dropout3d": [1463, 1617], "featurealphadropout": 1467, "fold": [1469, 1623], "fractionalmaxpool2d": 1470, "fractionalmaxpool3d": 1471, "gelu": [1472, 1627], "glu": [1473, 1628], "gaussiannllloss": 1476, "hingeembeddingloss": 1482, "huberloss": 1483, "ident": [1484, 1737, 1745, 2013, 2046], "kldivloss": 1488, "l1loss": 1489, "lppool1d": 1490, "lppool2d": 1491, "lppool3d": 1492, "lazybatchnorm1d": 1496, "lazybatchnorm2d": 1497, "lazybatchnorm3d": 1498, "lazyconv1d": 1499, "lazyconv2d": 1500, "lazyconv3d": 1501, "lazyconvtranspose1d": 1502, "lazyconvtranspose2d": 1503, "lazyconvtranspose3d": 1504, "lazyinstancenorm1d": 1505, "lazyinstancenorm2d": 1506, "lazyinstancenorm3d": 1507, "lazylinear": 1508, "localresponsenorm": 1511, "logsigmoid": [1512, 1649], "logsoftmax": 1513, "mseloss": 1514, "marginrankingloss": 1515, "maxpool1d": 1516, "maxpool2d": 1517, "maxpool3d": 1518, "maxunpool1d": 1519, "maxunpool2d": 1520, "maxunpool3d": 1521, "mish": [1522, 1660], "moduledict": [1524, 2013], "modulelist": [1525, 2012, 2013], "multilabelmarginloss": 1526, "multilabelsoftmarginloss": 1527, "multimarginloss": 1528, "nllloss": 1530, "prelu": [1531, 1674], "pairwisedist": 1532, "parameterdict": 1533, "parameterlist": 1534, "pixelshuffl": 1535, "pixelunshuffl": 1536, "poissonnllloss": 1537, "rmsnorm": [1538, 1712], "rnn": [1539, 1755, 1756, 1757, 1758, 1759, 1760, 2055], "rnnbase": 1540, "rrelu": [1542, 1679], "relu": [1543, 1675], "reflectionpad1d": 1545, "reflectionpad2d": 1546, "reflectionpad3d": 1547, "replicationpad1d": 1548, "replicationpad2d": 1549, "replicationpad3d": 1550, "selu": [1551, 1682], "sequenti": 1552, "silu": [1553, 1684], "smoothl1loss": 1555, "softmarginloss": 1556, "softmax2d": 1558, "softmin": [1559, 1688], "softplu": [1560, 1689], "softshrink": [1561, 1690], "softsign": [1562, 1691], "syncbatchnorm": 1563, "tanhshrink": [1565, 1693], "transformerdecod": 1568, "transformerdecoderlay": 1569, "transformerencod": 1570, "transformerencoderlay": 1571, "tripletmarginloss": 1572, "tripletmarginwithdistanceloss": 1573, "upsamplingbilinear2d": 1577, "upsamplingnearest2d": 1578, "zeropad1d": 1579, "zeropad2d": 1580, "zeropad3d": 1581, "sdpbackend": 1582, "attent": [1583, 1585, 1586, 1587, 2034, 2035, 2036], "bia": [1583, 1585, 1586, 2035], "causalbia": [1583, 2035], "causalvari": 1584, "causal_lower_right": 1585, "causal_upper_left": 1586, "sdpa_kernel": 1587, "adaptive_avg_pool1d": 1588, "adaptive_max_pool1d": 1591, "adaptive_max_pool2d": 1592, "adaptive_max_pool3d": 1593, "affine_grid": 1594, "alpha_dropout": 1595, "avg_pool1d": 1596, "batch_norm": 1599, "conv_transpose1d": 1607, "conv_transpose2d": 1608, "conv_transpose3d": 1609, "cosine_embedding_loss": 1610, "cosine_similar": 1611, "cross_entropi": 1612, "ctc_loss": 1613, "elu_": 1619, "embedding_bag": 1621, "feature_alpha_dropout": 1622, "fractional_max_pool2d": 1624, "fractional_max_pool3d": 1625, "gaussian_nll_loss": 1626, "grid_sampl": 1629, "group_norm": 1630, "gumbel_softmax": 1631, "hardtanh_": 1636, "hinge_embedding_loss": 1637, "huber_loss": 1638, "instance_norm": 1639, "kl_div": 1641, "l1_loss": 1642, "layer_norm": 1643, "leaky_relu_": 1645, "local_response_norm": 1647, "log_softmax": [1648, 1900], "lp_pool1d": 1650, "lp_pool2d": 1651, "lp_pool3d": 1652, "margin_ranking_loss": 1653, "max_pool3d": 1656, "max_unpool1d": 1657, "max_unpool2d": 1658, "max_unpool3d": 1659, "mse_loss": 1661, "multi_margin_loss": 1662, "multilabel_margin_loss": 1663, "multilabel_soft_margin_loss": 1664, "nll_loss": 1665, "one_hot": 1667, "pad": [1668, 2033], "pairwise_dist": 1669, "pdist": 1670, "pixel_shuffl": 1671, "pixel_unshuffl": 1672, "poisson_nll_loss": 1673, "relu_": 1677, "rms_norm": 1678, "rrelu_": 1680, "scaled_dot_product_attent": 1681, "smooth_l1_loss": 1685, "soft_margin_loss": 1686, "threshold_": 1695, "data_parallel": [1696, 2036], "triplet_margin_loss": 1697, "triplet_margin_with_distance_loss": 1698, "lazymodulemixin": 1703, "register_module_backward_hook": 1704, "register_module_buffer_registration_hook": 1705, "register_module_forward_hook": 1706, "register_module_forward_pre_hook": 1707, "register_module_full_backward_hook": 1708, "register_module_full_backward_pre_hook": 1709, "register_module_module_registration_hook": 1710, "register_module_parameter_registration_hook": 1711, "distributeddataparallel": [1713, 2038, 2042, 2043], "uninitializedbuff": 1715, "uninitializedparamet": 1716, "clip_grad_norm": 1717, "clip_grad_norm_": 1718, "clip_grad_value_": 1719, "convert_conv2d_weight_memory_format": 1720, "convert_conv3d_weight_memory_format": 1721, "fuse_conv_bn_ev": 1722, "fuse_conv_bn_weight": 1723, "fuse_linear_bn_ev": 1724, "fuse_linear_bn_weight": 1725, "parameters_to_vector": 1726, "parametr": [1727, 1728, 1729, 1731, 1732, 1733, 1734, 2051], "orthogon": 1727, "spectral_norm": [1728, 1762], "weight_norm": [1729, 1765], "parametrizationlist": 1730, "cach": [1731, 2008, 2042, 2049, 2108], "is_parametr": 1732, "register_parametr": 1733, "remove_parametr": 1734, "basepruningmethod": 1735, "customfrommask": 1736, "l1unstructur": 1738, "lnstructur": 1739, "pruningcontain": 1740, "randomstructur": 1741, "randomunstructur": 1742, "prune": [1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 2051], "custom_from_mask": 1743, "global_unstructur": 1744, "is_prun": 1746, "l1_unstructur": 1747, "ln_structur": 1748, "random_structur": 1749, "random_unstructur": 1750, "remove_spectral_norm": 1752, "remove_weight_norm": 1753, "packedsequ": 1754, "pack_padded_sequ": 1755, "pack_sequ": 1756, "pad_packed_sequ": 1757, "pad_sequ": 1758, "unpack_sequ": 1759, "unpad_sequ": 1760, "skip_init": 1761, "stateless": 1763, "vector_to_paramet": 1764, "no_grad": 1766, "ones": [1772, 2099], "ones_lik": 1773, "jitscalartyp": 1774, "graphinfo": 1775, "verificationopt": 1776, "asgd": 1777, "adadelta": 1778, "adagrad": 1779, "adam": 1780, "adamw": 1781, "adamax": 1782, "lbfg": 1783, "nadam": 1784, "add_param_group": 1785, "load_state_dict": 1786, "state_dict": [1787, 2104], "step": [1788, 2063, 2101], "zero_grad": 1789, "radam": 1790, "rmsprop": 1791, "rprop": 1792, "sgd": 1793, "sparseadam": 1794, "chainedschedul": 1795, "constantlr": 1796, "cosineannealinglr": 1797, "cosineannealingwarmrestart": 1798, "cycliclr": 1799, "exponentiallr": 1800, "lambdalr": 1801, "linearlr": 1802, "multisteplr": 1803, "multiplicativelr": 1804, "onecyclelr": 1805, "polynomiallr": 1806, "reducelronplateau": 1807, "sequentiallr": 1808, "steplr": 1809, "pca_lowrank": 1813, "polar": 1817, "promote_typ": 1822, "quantize_per_channel": 1825, "quantize_per_tensor": 1826, "quantized_batch_norm": 1827, "quantized_max_pool1d": 1828, "quantized_max_pool2d": 1829, "sobolengin": 1830, "rand": 1832, "rand_lik": 1833, "randint": 1834, "randint_lik": 1835, "randn": 1836, "randn_lik": 1837, "randperm": 1838, "result_typ": 1849, "row_stack": 1853, "searchsort": 1859, "set_default_devic": 1863, "set_default_dtyp": 1864, "set_default_tensor_typ": 1865, "set_deterministic_debug_mod": 1866, "set_float32_matmul_precis": 1867, "set_flush_denorm": 1868, "set_num_interop_thread": 1869, "set_num_thread": 1870, "set_printopt": 1871, "set_warn_alwai": 1873, "signal": [1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 2075], "bartlett": 1877, "blackman": 1878, "cosin": 1879, "gaussian": 1881, "general_cosin": 1882, "general_ham": 1883, "ham": 1884, "hann": 1885, "kaiser": 1886, "nuttal": 1887, "as_sparse_gradcheck": 1898, "check_sparse_tensor_invari": 1899, "sampled_addmm": 1902, "spdiag": 1904, "sparse_bsc_tensor": 1906, "sparse_bsr_tensor": 1907, "sparse_compressed_tensor": 1908, "sparse_coo_tensor": 1909, "sparse_csc_tensor": 1910, "sparse_csr_tensor": 1911, "std_mean": 1919, "svd_lowrank": 1925, "sym_float": 1928, "sym_int": 1929, "sym_it": 1930, "sym_max": 1931, "sym_min": 1932, "sym_not": 1933, "tensordot": 1941, "trapezoid": 1946, "trapz": 1947, "tril_indic": 1950, "triu_indic": 1952, "unravel_index": 1959, "use_deterministic_algorithm": 1961, "generate_methods_for_privateuse1_backend": 1962, "get_cpp_backtrac": 1963, "rename_privateuse1_backend": 1964, "set_modul": 1965, "swap_tensor": 1966, "var_mean": 1969, "view_as_complex": 1971, "view_as_r": 1972, "vstack": 1975, "xpu": [1981, 1982, 1984, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2114], "zero": 2006, "zeros_lik": 2007, "hub": 2008, "publish": 2008, "entrypoint": 2008, "run": [2008, 2105], "my": [2008, 2039, 2046, 2064, 2099, 2105], "download": 2008, "logic": [2008, 2012], "known": [2008, 2010], "bind": 2009, "tabl": [2009, 2056], "built": [2010, 2011, 2013, 2061], "comparison": [2010, 2012, 2013, 2086, 2093], "inspect": [2010, 2059, 2097], "warn": 2010, "appendix": [2010, 2013], "recurs": 2010, "constant": [2010, 2012], "fusion": 2010, "math": [2011, 2086], "construct": [2012, 2013, 2015, 2032, 2063, 2077], "refin": [2012, 2013], "enum": [2012, 2013], "tupl": [2012, 2013], "liter": [2012, 2013], "list": [2012, 2013, 2061], "dict": 2012, "arithmet": [2012, 2013], "subscript": [2012, 2013], "slice": [2012, 2013, 2054, 2086], "ternari": [2012, 2013], "cast": 2012, "statement": [2012, 2013], "assign": [2012, 2013], "If": 2012, "while": [2012, 2013], "loop": 2012, "For": 2012, "continu": [2012, 2013], "return": [2012, 2013, 2046, 2074], "resolut": [2012, 2013], "lookup": 2012, "defin": [2012, 2044, 2045], "terminologi": 2013, "instanc": 2013, "when": [2013, 2039, 2044, 2061, 2067, 2077, 2099], "signatur": 2013, "expr": 2013, "convers": [2013, 2032], "atom": 2013, "identifi": [2013, 2099, 2108], "parenthes": 2013, "form": 2013, "displai": 2013, "primari": 2013, "power": 2013, "unari": [2013, 2020, 2077], "bitwis": 2013, "binari": [2013, 2020], "shift": 2013, "boolean": 2013, "condit": 2013, "augment": 2013, "rais": 2013, "del": 2013, "compound": 2013, "els": 2013, "getattr": 2013, "hasattr": 2013, "zip": [2013, 2064], "enumer": 2013, "rule": [2013, 2031, 2045, 2059], "remot": [2013, 2074], "procedur": 2013, "program": 2013, "coverag": [2014, 2030, 2044], "properti": [2015, 2018], "correctli": 2015, "bound": 2015, "schema": 2015, "between": [2015, 2064, 2099], "low": 2017, "matrix": [2018, 2067], "decomposit": 2018, "solver": 2018, "misc": 2018, "motiv": [2020, 2095, 2098], "reduct": [2020, 2042, 2054, 2086], "idiom": 2021, "miscellan": 2022, "mobile_optim": 2023, "model_zoo": 2024, "module_track": 2025, "strategi": [2029, 2063], "descriptor": 2029, "file_descriptor": 2029, "file_system": 2029, "keep": [2030, 2064], "dimens": [2030, 2031], "unifi": 2030, "contract": 2030, "awai": 2030, "factori": 2030, "variant": 2030, "semant": [2031, 2040, 2042, 2049, 2056], "infer": [2031, 2039, 2041, 2056, 2090], "explicit": 2031, "align": 2031, "current": 2031, "subsystem": 2031, "constructor": 2032, "convolut": [2033, 2036, 2054, 2055], "layer": 2033, "pool": [2033, 2036], "activ": [2033, 2036, 2110], "weight": [2033, 2063], "nonlinear": 2033, "recurr": [2033, 2046], "distanc": [2033, 2036], "loss": [2033, 2036, 2038], "vision": [2033, 2036], "shuffl": 2033, "lazi": 2033, "alias": 2033, "submodul": 2034, "typic": 2038, "unscal": 2038, "accumul": 2038, "penalti": 2038, "one": 2038, "per": [2038, 2063], "need": [2038, 2099], "particular": [2038, 2039], "dtype": [2038, 2056, 2070, 2080], "encod": 2039, "histori": [2039, 2110], "set": [2039, 2061], "No": 2039, "evalu": [2039, 2048, 2096], "multithread": 2039, "concurr": 2039, "determin": [2039, 2055], "retain": 2039, "thread": [2039, 2041, 2085], "safeti": 2039, "wirting": 2039, "calculu": 2039, "pictur": 2039, "conjug": 2039, "own": 2039, "formula": 2039, "domain": 2039, "regist": [2039, 2094], "whether": [2039, 2064], "fire": 2039, "differ": [2039, 2061, 2099], "modifi": 2039, "compat": 2040, "runtim": [2041, 2046, 2108], "tune": 2041, "tensorfloat": [2042, 2049, 2054], "32": [2042, 2049, 2054, 2057], "tf32": [2042, 2049, 2054], "amper": [2042, 2054], "later": [2042, 2054, 2064], "reduc": [2042, 2054], "fp16": [2042, 2054], "gemm": [2042, 2054], "bf16": [2042, 2054], "bc": 2042, "pytorch_cuda_alloc_conf": 2042, "alloc": [2042, 2046, 2110], "cubla": 2042, "workspac": 2042, "cufft": 2042, "plan": [2042, 2049], "just": 2042, "time": [2042, 2090, 2102, 2106, 2108], "practic": [2042, 2053, 2067, 2092], "agnost": 2042, "buffer": [2042, 2047, 2053], "instead": 2042, "whole": [2042, 2099], "captur": 2042, "partial": 2042, "9": 2042, "6": 2042, "across": [2042, 2056], "intern": [2043, 2061, 2064, 2095, 2097], "processgroup": 2043, "ddpoptim": 2043, "separ": 2044, "setup_context": 2044, "like": [2044, 2064], "subclass": [2044, 2098], "wrapper": 2044, "__torch_function__": 2044, "overrid": [2044, 2109], "nativ": [2044, 2067, 2069], "anoth": 2045, "specifi": 2045, "gotcha": 2045, "staticmethod": 2045, "isn": 2046, "freed": 2046, "properli": 2046, "loader": 2046, "doesn": 2046, "fsdp": 2047, "prefetch": 2047, "nuanc": 2047, "payload": 2047, "notat": 2048, "background": [2048, 2073, 2074, 2093], "inform": [2048, 2072, 2107], "analyt": 2048, "u": 2048, "reus": [2049, 2053], "hipfft": 2049, "rocfft": 2049, "enabl": 2049, "larg": 2050, "fleet": 2050, "wide": 2050, "attach": 2050, "consider": 2050, "block": 2051, "neural": 2051, "tip": [2053, 2068], "fight": 2053, "deadlock": 2053, "through": 2053, "queue": 2053, "e": 2053, "g": 2053, "hogwild": 2053, "oversubscript": 2053, "accuraci": [2054, 2067, 2068, 2108], "extrem": 2054, "finit": 2054, "instinct": 2054, "mi200": 2054, "reproduc": 2055, "nondeterminist": 2055, "algorithm": [2055, 2063, 2073], "fill": 2055, "uniniti": 2055, "content": [2056, 2064], "preserv": 2056, "format": [2056, 2064], "them": [2056, 2064], "version": 2056, "integ": 2056, "divis": 2056, "alwai": [2056, 2096], "includ": [2057, 2064], "compon": 2057, "speed": [2057, 2099], "One": [2057, 2107], "instal": 2057, "cffi": 2057, "cpp": 2057, "found": 2057, "win": 2057, "channel": 2057, "without": 2057, "claus": 2057, "protect": 2057, "broken": 2057, "pipe": [2057, 2065], "driver": 2057, "shut": 2057, "down": 2057, "ipc": 2057, "base": [2058, 2059, 2061, 2063, 2107], "gui": 2059, "diagnos": [2059, 2108], "sarif": 2059, "diagnost": 2059, "alexnet": 2061, "v": 2061, "index": [2061, 2086], "aten": [2061, 2103, 2107], "inlin": 2061, "discov": 2061, "unconvert": 2061, "onc": 2061, "adjust": 2063, "learn": 2063, "rate": 2063, "averag": 2063, "swa": 2063, "ema": 2063, "care": 2063, "put": 2063, "togeth": 2063, "your": 2064, "do": [2064, 2097, 2099], "see": [2064, 2099], "insid": [2064, 2099], "treat": 2064, "archiv": 2064, "file_structur": 2064, "given": 2064, "wa": 2064, "resourc": [2064, 2098], "distinguish": 2064, "explan": 2064, "analyz": 2064, "extern": 2064, "mock": 2064, "refactor": 2064, "sharp": 2064, "global": 2064, "isol": 2064, "each": [2064, 2098], "mangl": 2064, "skip": 2065, "connect": 2065, "intel": 2066, "instrument": 2066, "technologi": 2066, "eager": 2067, "awar": 2067, "mainten": 2067, "engin": 2067, "observ": [2067, 2070], "hardwar": 2067, "configur": [2067, 2069], "insensit": 2068, "int8": 2068, "sensit": 2068, "ao": [2070, 2087, 2088], "top": 2070, "quantize_fx": 2070, "qconfig_map": 2070, "backend_config": 2070, "custom_config": 2070, "pt2e": 2070, "0": [2070, 2096, 2104, 2105, 2108], "export_util": 2070, "relat": [2070, 2098], "fake_quant": 2070, "intrins": 2070, "qat": 2070, "scheme": 2070, "rpc": 2072, "tensorpip": 2072, "rref": [2072, 2074], "remotemodul": 2072, "record": 2073, "dure": 2073, "smart": 2073, "end": 2073, "protocol": 2074, "lifetim": 2074, "reason": 2074, "scenario": 2074, "owner": 2074, "argument": 2074, "sparsiti": 2077, "semi": 2077, "acceler": 2077, "coo": 2077, "hybrid": 2077, "uncoalesc": 2077, "csr": 2077, "csc": 2077, "bsr": 2077, "bsc": 2077, "memory_format": 2080, "tensorboard": 2082, "creation": 2086, "sampl": 2086, "quasi": 2086, "pointwis": 2086, "spectral": 2086, "bla": 2086, "lapack": 2086, "foreach": 2086, "path": 2086, "n": [2087, 2088], "_numeric_suit": 2087, "_numeric_suite_fx": 2088, "howto": 2089, "vendor": 2089, "aotinductor": 2090, "ahead": 2090, "Of": 2090, "ed": 2090, "x86": 2092, "tree": 2093, "integr": 2093, "callabl": 2093, "previou": 2093, "after": 2094, "aotautograd": 2094, "speedi": 2094, "abridg": 2095, "public": 2095, "guard": [2095, 2096, 2097], "overal": [2095, 2098], "architectur": [2095, 2098], "unback": 2095, "dynamo": [2096, 2097], "gentl": 2096, "pep": 2096, "523": 2096, "frame": 2096, "cpython": 2096, "sound": 2096, "duck": 2096, "complet": 2096, "conclus": 2096, "footnot": 2096, "artifact": 2097, "fake": 2098, "bit": 2098, "detail": 2098, "individu": [2098, 2102], "characterist": 2098, "interact": 2098, "you": 2099, "still": 2099, "crash": 2099, "slow": 2099, "recompil": [2099, 2108], "am": 2099, "speedup": 2099, "caus": [2099, 2108], "didn": 2099, "incorrect": 2099, "result": 2099, "oom": 2099, "besid": 2099, "via": 2099, "under": 2099, "some": 2099, "did": 2099, "fine": [2099, 2100], "grain": [2099, 2100], "_dynamo": [2099, 2100], "disallow_in_graph": [2099, 2100], "_dynamo_skip": 2099, "pretrain": 2101, "next": 2101, "torchinductor": [2102, 2105, 2108], "relev": 2102, "breakdown": 2102, "prim": 2103, "nnmodul": 2104, "__call__": 2104, "dashboard": 2105, "measur": 2105, "pr": 2105, "affect": 2105, "befor": 2105, "merg": 2105, "understand": [2106, 2110], "around": 2106, "region": 2106, "compiledfunct": 2106, "overhead": 2106, "x": 2107, "none": 2107, "partition": 2107, "matcher": 2107, "capabl": 2107, "troubleshoot": 2108, "titl": 2108, "minifi": 2108, "torch_compile_debug": 2108, "excess": 2108, "cold": 2108, "corrupt": 2108, "snapshot": 2110, "visual": 2110, "timelin": 2110, "finfo": 2112, "iinfo": 2112}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.conj": [[192, "torch-tensor-conj"]], "torch.Tensor.cosh": [[202, "torch-tensor-cosh"]], "torch.Tensor.bitwise_or_": [[164, "torch-tensor-bitwise-or"]], "torch.Tensor.conj_physical_": [[194, "torch-tensor-conj-physical"]], "torch.Tensor.char": [[180, "torch-tensor-char"]], "torch.Tensor.bitwise_xor": [[167, "torch-tensor-bitwise-xor"]], "torch.Tensor.bool": [[170, "torch-tensor-bool"]], "torch.Tensor.bitwise_or": [[163, "torch-tensor-bitwise-or"]], "torch.Tensor.chunk": [[184, "torch-tensor-chunk"]], "torch.Tensor.bitwise_xor_": [[168, "torch-tensor-bitwise-xor"]], "torch.Tensor.coalesce": [[190, "torch-tensor-coalesce"]], "torch.Tensor.bitwise_and_": [[158, "torch-tensor-bitwise-and"]], "torch.Tensor.bmm": [[169, "torch-tensor-bmm"]], "torch.Tensor.copysign": [[197, "torch-tensor-copysign"]], "torch.Tensor.cos": [[200, "torch-tensor-cos"]], "torch.Tensor.cauchy_": [[173, "torch-tensor-cauchy"]], "torch.Tensor.ceil": [[176, "torch-tensor-ceil"]], "torch.Tensor.corrcoef": [[199, "torch-tensor-corrcoef"]], "torch.Tensor.ceil_": [[177, "torch-tensor-ceil"]], "torch.Tensor.bitwise_not": [[161, "torch-tensor-bitwise-not"]], "torch.Tensor.cdouble": [[175, "torch-tensor-cdouble"]], "torch.Tensor.cholesky_inverse": [[182, "torch-tensor-cholesky-inverse"]], "torch.Tensor.cholesky": [[181, "torch-tensor-cholesky"]], "torch.Tensor.bernoulli_": [[154, "torch-tensor-bernoulli"]], "torch.Tensor.bitwise_left_shift": [[159, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.cos_": [[201, "torch-tensor-cos"]], "torch.Tensor.cfloat": [[178, "torch-tensor-cfloat"]], "torch.Tensor.ccol_indices": [[174, "torch-tensor-ccol-indices"]], "torch.Tensor.bernoulli": [[153, "torch-tensor-bernoulli"]], "torch.Tensor.bfloat16": [[155, "torch-tensor-bfloat16"]], "torch.Tensor.byte": [[172, "torch-tensor-byte"]], "torch.Tensor.copy_": [[196, "torch-tensor-copy"]], "torch.Tensor.contiguous": [[195, "torch-tensor-contiguous"]], "torch.Tensor.conj_physical": [[193, "torch-tensor-conj-physical"]], "torch.Tensor.cosh_": [[203, "torch-tensor-cosh"]], "torch.Tensor.bitwise_right_shift": [[165, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.clamp": [[185, "torch-tensor-clamp"]], "torch.Tensor.chalf": [[179, "torch-tensor-chalf"]], "torch.Tensor.bitwise_right_shift_": [[166, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.clamp_": [[186, "torch-tensor-clamp"]], "torch.Tensor.clone": [[189, "torch-tensor-clone"]], "torch.Tensor.copysign_": [[198, "torch-tensor-copysign"]], "torch.Tensor.cholesky_solve": [[183, "torch-tensor-cholesky-solve"]], "torch.Tensor.bincount": [[156, "torch-tensor-bincount"]], "torch.Tensor.bitwise_left_shift_": [[160, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bitwise_and": [[157, "torch-tensor-bitwise-and"]], "torch.Tensor.bitwise_not_": [[162, "torch-tensor-bitwise-not"]], "torch.Tensor.clip_": [[188, "torch-tensor-clip"]], "torch.Tensor.col_indices": [[191, "torch-tensor-col-indices"]], "torch.Tensor.broadcast_to": [[171, "torch-tensor-broadcast-to"]], "torch.Tensor.clip": [[187, "torch-tensor-clip"]], "torch.Tensor.argmin": [[135, "torch-tensor-argmin"]], "torch.Tensor.addmm_": [[106, "torch-tensor-addmm"]], "torch.Tensor.as_subclass": [[139, "torch-tensor-as-subclass"]], "torch.Tensor.asin": [[140, "torch-tensor-asin"]], "torch.Tensor.atanh_": [[149, "torch-tensor-atanh"]], "torch.Tensor.argsort": [[136, "torch-tensor-argsort"]], "torch.Tensor.apply_": [[119, "torch-tensor-apply"]], "torch.Tensor.atan": [[144, "torch-tensor-atan"]], "torch.Tensor.asinh": [[142, "torch-tensor-asinh"]], "torch.Tensor.backward": [[150, "torch-tensor-backward"]], "torch.Tensor.addmm": [[105, "torch-tensor-addmm"]], "torch.Tensor.arcsinh_": [[127, "torch-tensor-arcsinh"]], "torch.Tensor.atan2": [[145, "torch-tensor-atan2"]], "torch.Tensor.aminmax": [[116, "torch-tensor-aminmax"]], "torch.Tensor.argmax": [[134, "torch-tensor-argmax"]], "torch.Tensor.arctan": [[128, "torch-tensor-arctan"]], "torch.Tensor.arccosh": [[122, "torch-tensor-arccosh"]], "torch.Tensor.angle": [[117, "torch-tensor-angle"]], "torch.Tensor.arccos_": [[121, "torch-tensor-arccos"]], "torch.Tensor.as_strided": [[138, "torch-tensor-as-strided"]], "torch.Tensor.arcsin": [[124, "torch-tensor-arcsin"]], "torch.Tensor.addcmul_": [[104, "torch-tensor-addcmul"]], "torch.Tensor.asinh_": [[143, "torch-tensor-asinh"]], "torch.Tensor.all": [[112, "torch-tensor-all"]], "torch.Tensor.any": [[118, "torch-tensor-any"]], "torch.Tensor.amin": [[115, "torch-tensor-amin"]], "torch.Tensor.adjoint": [[111, "torch-tensor-adjoint"]], "torch.Tensor.arccosh_": [[123, "torch-tensor-arccosh"]], "torch.Tensor.arcsin_": [[125, "torch-tensor-arcsin"]], "torch.Tensor.addmv": [[107, "torch-tensor-addmv"]], "torch.Tensor.baddbmm": [[151, "torch-tensor-baddbmm"]], "torch.Tensor.arctan_": [[131, "torch-tensor-arctan"]], "torch.Tensor.addr": [[109, "torch-tensor-addr"]], "torch.Tensor.amax": [[114, "torch-tensor-amax"]], "torch.Tensor.atan_": [[147, "torch-tensor-atan"]], "torch.Tensor.addcdiv_": [[102, "torch-tensor-addcdiv"]], "torch.Tensor.allclose": [[113, "torch-tensor-allclose"]], "torch.Tensor.addr_": [[110, "torch-tensor-addr"]], "torch.Tensor.arctanh_": [[133, "torch-tensor-arctanh"]], "torch.Tensor.atan2_": [[146, "torch-tensor-atan2"]], "torch.Tensor.arcsinh": [[126, "torch-tensor-arcsinh"]], "torch.Tensor.arctanh": [[132, "torch-tensor-arctanh"]], "torch.Tensor.atanh": [[148, "torch-tensor-atanh"]], "torch.Tensor.asin_": [[141, "torch-tensor-asin"]], "torch.Tensor.baddbmm_": [[152, "torch-tensor-baddbmm"]], "torch.Tensor.argwhere": [[137, "torch-tensor-argwhere"]], "torch.Tensor.arccos": [[120, "torch-tensor-arccos"]], "torch.Tensor.addmv_": [[108, "torch-tensor-addmv"]], "torch.Tensor.addcmul": [[103, "torch-tensor-addcmul"]], "torch.Tensor.arctan2": [[129, "torch-tensor-arctan2"]], "torch.Tensor.arctan2_": [[130, "torch-tensor-arctan2"]], "torch.Tensor.cummax": [[210, "torch-tensor-cummax"]], "torch.Tensor.divide_": [[238, "torch-tensor-divide"]], "torch.Tensor.equal": [[245, "torch-tensor-equal"]], "torch.Tensor.exp": [[252, "torch-tensor-exp"]], "torch.Tensor.device": [[223, "torch-tensor-device"]], "torch.Tensor.exp_": [[253, "torch-tensor-exp"]], "torch.Tensor.digamma": [[230, "torch-tensor-digamma"]], "torch.Tensor.diagonal": [[227, "torch-tensor-diagonal"]], "torch.Tensor.erfinv": [[250, "torch-tensor-erfinv"]], "torch.Tensor.cumprod_": [[213, "torch-tensor-cumprod"]], "torch.Tensor.cuda": [[209, "torch-tensor-cuda"]], "torch.Tensor.dist": [[234, "torch-tensor-dist"]], "torch.Tensor.cummin": [[211, "torch-tensor-cummin"]], "torch.Tensor.erfc": [[248, "torch-tensor-erfc"]], "torch.Tensor.detach": [[221, "torch-tensor-detach"]], "torch.Tensor.dsplit": [[241, "torch-tensor-dsplit"]], "torch.Tensor.eq": [[243, "torch-tensor-eq"]], "torch.Tensor.erf": [[246, "torch-tensor-erf"]], "torch.Tensor.crow_indices": [[208, "torch-tensor-crow-indices"]], "torch.Tensor.erf_": [[247, "torch-tensor-erf"]], "torch.Tensor.cumprod": [[212, "torch-tensor-cumprod"]], "torch.Tensor.diagonal_scatter": [[228, "torch-tensor-diagonal-scatter"]], "torch.Tensor.dequantize": [[219, "torch-tensor-dequantize"]], "torch.Tensor.div_": [[236, "torch-tensor-div"]], "torch.Tensor.element_size": [[242, "torch-tensor-element-size"]], "torch.Tensor.divide": [[237, "torch-tensor-divide"]], "torch.Tensor.det": [[220, "torch-tensor-det"]], "torch.Tensor.dot": [[239, "torch-tensor-dot"]], "torch.Tensor.eq_": [[244, "torch-tensor-eq"]], "torch.Tensor.digamma_": [[231, "torch-tensor-digamma"]], "torch.Tensor.detach_": [[222, "torch-tensor-detach"]], "torch.Tensor.erfc_": [[249, "torch-tensor-erfc"]], "torch.Tensor.cumsum_": [[215, "torch-tensor-cumsum"]], "torch.Tensor.diag": [[224, "torch-tensor-diag"]], "torch.Tensor.diag_embed": [[225, "torch-tensor-diag-embed"]], "torch.Tensor.data_ptr": [[216, "torch-tensor-data-ptr"]], "torch.Tensor.diagflat": [[226, "torch-tensor-diagflat"]], "torch.Tensor.double": [[240, "torch-tensor-double"]], "torch.Tensor.diff": [[229, "torch-tensor-diff"]], "torch.Tensor.cov": [[205, "torch-tensor-cov"]], "torch.Tensor.cumsum": [[214, "torch-tensor-cumsum"]], "torch.Tensor.dense_dim": [[218, "torch-tensor-dense-dim"]], "torch.Tensor.cpu": [[206, "torch-tensor-cpu"]], "torch.Tensor.erfinv_": [[251, "torch-tensor-erfinv"]], "torch.Tensor.dim": [[232, "torch-tensor-dim"]], "torch.Tensor.cross": [[207, "torch-tensor-cross"]], "torch.Tensor.div": [[235, "torch-tensor-div"]], "torch.Tensor.dim_order": [[233, "torch-tensor-dim-order"]], "torch.Tensor.expand": [[254, "torch-tensor-expand"]], "torch.Tensor.deg2rad": [[217, "torch-tensor-deg2rad"]], "torch.Tensor.count_nonzero": [[204, "torch-tensor-count-nonzero"]], "torch.Tensor.frexp": [[280, "torch-tensor-frexp"]], "torch.Tensor.histc": [[300, "torch-tensor-histc"]], "torch.Tensor.hypot": [[303, "torch-tensor-hypot"]], "torch.Tensor.fix": [[261, "torch-tensor-fix"]], "torch.Tensor.gcd_": [[283, "torch-tensor-gcd"]], "torch.Tensor.greater_equal_": [[294, "torch-tensor-greater-equal"]], "torch.Tensor.flipud": [[266, "torch-tensor-flipud"]], "torch.Tensor.flatten": [[263, "torch-tensor-flatten"]], "torch.Tensor.hypot_": [[304, "torch-tensor-hypot"]], "torch.Tensor.gather": [[281, "torch-tensor-gather"]], "torch.Tensor.geometric_": [[286, "torch-tensor-geometric"]], "torch.Tensor.fliplr": [[265, "torch-tensor-fliplr"]], "torch.Tensor.expm1": [[256, "torch-tensor-expm1"]], "torch.Tensor.greater_equal": [[293, "torch-tensor-greater-equal"]], "torch.Tensor.histogram": [[301, "torch-tensor-histogram"]], "torch.Tensor.i0": [[305, "torch-tensor-i0"]], "torch.Tensor.fill_": [[259, "torch-tensor-fill"]], "torch.Tensor.float_power": [[268, "torch-tensor-float-power"]], "torch.Tensor.float": [[267, "torch-tensor-float"]], "torch.Tensor.half": [[297, "torch-tensor-half"]], "torch.Tensor.ge": [[284, "torch-tensor-ge"]], "torch.Tensor.get_device": [[289, "torch-tensor-get-device"]], "torch.Tensor.hsplit": [[302, "torch-tensor-hsplit"]], "torch.Tensor.expm1_": [[257, "torch-tensor-expm1"]], "torch.Tensor.fix_": [[262, "torch-tensor-fix"]], "torch.Tensor.expand_as": [[255, "torch-tensor-expand-as"]], "torch.Tensor.floor": [[270, "torch-tensor-floor"]], "torch.Tensor.hardshrink": [[298, "torch-tensor-hardshrink"]], "torch.Tensor.ger": [[288, "torch-tensor-ger"]], "torch.Tensor.ge_": [[285, "torch-tensor-ge"]], "torch.Tensor.fill_diagonal_": [[260, "torch-tensor-fill-diagonal"]], "torch.Tensor.greater_": [[292, "torch-tensor-greater"]], "torch.Tensor.fmin": [[275, "torch-tensor-fmin"]], "torch.Tensor.frac_": [[279, "torch-tensor-frac"]], "torch.Tensor.flip": [[264, "torch-tensor-flip"]], "torch.Tensor.fmod_": [[277, "torch-tensor-fmod"]], "torch.Tensor.greater": [[291, "torch-tensor-greater"]], "torch.Tensor.gt_": [[296, "torch-tensor-gt"]], "torch.Tensor.gcd": [[282, "torch-tensor-gcd"]], "torch.Tensor.fmax": [[274, "torch-tensor-fmax"]], "torch.Tensor.exponential_": [[258, "torch-tensor-exponential"]], "torch.Tensor.geqrf": [[287, "torch-tensor-geqrf"]], "torch.Tensor.fmod": [[276, "torch-tensor-fmod"]], "torch.Tensor.float_power_": [[269, "torch-tensor-float-power"]], "torch.Tensor.floor_divide_": [[273, "torch-tensor-floor-divide"]], "torch.Tensor.gt": [[295, "torch-tensor-gt"]], "torch.Tensor.frac": [[278, "torch-tensor-frac"]], "torch.Tensor.grad": [[290, "torch-tensor-grad"]], "torch.Tensor.floor_divide": [[272, "torch-tensor-floor-divide"]], "torch.Tensor.floor_": [[271, "torch-tensor-floor"]], "torch.Tensor.heaviside": [[299, "torch-tensor-heaviside"]], "torch.Tensor.igamma_": [[308, "torch-tensor-igamma"]], "torch.Tensor.index_reduce": [[320, "torch-tensor-index-reduce"]], "torch.Tensor.itemsize": [[353, "torch-tensor-itemsize"]], "torch.Tensor.inverse": [[327, "torch-tensor-inverse"]], "torch.Tensor.is_meta": [[336, "torch-tensor-is-meta"]], "torch.Tensor.igamma": [[307, "torch-tensor-igamma"]], "torch.Tensor.isposinf": [[349, "torch-tensor-isposinf"]], "torch.Tensor.lcm_": [[356, "torch-tensor-lcm"]], "torch.Tensor.is_sparse_csr": [[343, "torch-tensor-is-sparse-csr"]], "torch.Tensor.index_reduce_": [[321, "torch-tensor-index-reduce"]], "torch.Tensor.is_complex": [[329, "torch-tensor-is-complex"]], "torch.Tensor.indices": [[323, "torch-tensor-indices"]], "torch.Tensor.is_pinned": [[337, "torch-tensor-is-pinned"]], "torch.Tensor.index_fill": [[316, "torch-tensor-index-fill"]], "torch.Tensor.is_quantized": [[338, "torch-tensor-is-quantized"]], "torch.Tensor.is_shared": [[340, "torch-tensor-is-shared"]], "torch.Tensor.index_select": [[322, "torch-tensor-index-select"]], "torch.Tensor.isnan": [[347, "torch-tensor-isnan"]], "torch.Tensor.int_repr": [[326, "torch-tensor-int-repr"]], "torch.Tensor.isinf": [[346, "torch-tensor-isinf"]], "torch.Tensor.igammac": [[309, "torch-tensor-igammac"]], "torch.Tensor.istft": [[351, "torch-tensor-istft"]], "torch.Tensor.i0_": [[306, "torch-tensor-i0"]], "torch.Tensor.int": [[325, "torch-tensor-int"]], "torch.Tensor.is_contiguous": [[331, "torch-tensor-is-contiguous"]], "torch.Tensor.index_add_": [[313, "torch-tensor-index-add"]], "torch.Tensor.index_put_": [[319, "torch-tensor-index-put"]], "torch.Tensor.is_set_to": [[339, "torch-tensor-is-set-to"]], "torch.Tensor.index_put": [[318, "torch-tensor-index-put"]], "torch.Tensor.index_add": [[312, "torch-tensor-index-add"]], "torch.Tensor.index_fill_": [[317, "torch-tensor-index-fill"]], "torch.Tensor.is_coalesced": [[328, "torch-tensor-is-coalesced"]], "torch.Tensor.is_floating_point": [[333, "torch-tensor-is-floating-point"]], "torch.Tensor.is_sparse": [[342, "torch-tensor-is-sparse"]], "torch.Tensor.is_inference": [[334, "torch-tensor-is-inference"]], "torch.Tensor.is_leaf": [[335, "torch-tensor-is-leaf"]], "torch.Tensor.isclose": [[344, "torch-tensor-isclose"]], "torch.Tensor.isneginf": [[348, "torch-tensor-isneginf"]], "torch.Tensor.index_copy_": [[315, "torch-tensor-index-copy"]], "torch.Tensor.is_conj": [[330, "torch-tensor-is-conj"]], "torch.Tensor.imag": [[311, "torch-tensor-imag"]], "torch.Tensor.inner": [[324, "torch-tensor-inner"]], "torch.Tensor.item": [[352, "torch-tensor-item"]], "torch.Tensor.isfinite": [[345, "torch-tensor-isfinite"]], "torch.Tensor.isreal": [[350, "torch-tensor-isreal"]], "torch.Tensor.kthvalue": [[354, "torch-tensor-kthvalue"]], "torch.Tensor.is_cuda": [[332, "torch-tensor-is-cuda"]], "torch.Tensor.lcm": [[355, "torch-tensor-lcm"]], "torch.Tensor.is_signed": [[341, "torch-tensor-is-signed"]], "torch.Tensor.igammac_": [[310, "torch-tensor-igammac"]], "torch.Tensor.index_copy": [[314, "torch-tensor-index-copy"]], "torch.Tensor.lt": [[394, "torch-tensor-lt"]], "torch.Tensor.lgamma": [[367, "torch-tensor-lgamma"]], "torch.Tensor.lu_solve": [[397, "torch-tensor-lu-solve"]], "torch.Tensor.log2": [[374, "torch-tensor-log2"]], "torch.Tensor.matrix_power": [[406, "torch-tensor-matrix-power"]], "torch.Tensor.max": [[407, "torch-tensor-max"]], "torch.Tensor.logdet": [[381, "torch-tensor-logdet"]], "torch.Tensor.le": [[359, "torch-tensor-le"]], "torch.Tensor.log2_": [[375, "torch-tensor-log2"]], "torch.Tensor.log1p": [[372, "torch-tensor-log1p"]], "torch.Tensor.logical_xor_": [[389, "torch-tensor-logical-xor"]], "torch.Tensor.logical_or": [[386, "torch-tensor-logical-or"]], "torch.Tensor.le_": [[360, "torch-tensor-le"]], "torch.Tensor.log_normal_": [[377, "torch-tensor-log-normal"]], "torch.Tensor.logical_not": [[384, "torch-tensor-logical-not"]], "torch.Tensor.masked_select": [[403, "torch-tensor-masked-select"]], "torch.Tensor.ldexp_": [[358, "torch-tensor-ldexp"]], "torch.Tensor.lt_": [[395, "torch-tensor-lt"]], "torch.Tensor.less_equal_": [[366, "torch-tensor-less-equal"]], "torch.Tensor.matrix_exp": [[405, "torch-tensor-matrix-exp"]], "torch.Tensor.less_": [[364, "torch-tensor-less"]], "torch.Tensor.lerp_": [[362, "torch-tensor-lerp"]], "torch.Tensor.map_": [[398, "torch-tensor-map"]], "torch.Tensor.logical_and": [[382, "torch-tensor-logical-and"]], "torch.Tensor.logit": [[390, "torch-tensor-logit"]], "torch.Tensor.log10": [[370, "torch-tensor-log10"]], "torch.Tensor.log_": [[376, "torch-tensor-log"]], "torch.Tensor.lerp": [[361, "torch-tensor-lerp"]], "torch.Tensor.less": [[363, "torch-tensor-less"]], "torch.Tensor.logcumsumexp": [[380, "torch-tensor-logcumsumexp"]], "torch.Tensor.logical_not_": [[385, "torch-tensor-logical-not"]], "torch.Tensor.logit_": [[391, "torch-tensor-logit"]], "torch.Tensor.masked_fill_": [[400, "torch-tensor-masked-fill"]], "torch.Tensor.matmul": [[404, "torch-tensor-matmul"]], "torch.Tensor.logical_xor": [[388, "torch-tensor-logical-xor"]], "torch.Tensor.masked_scatter": [[401, "torch-tensor-masked-scatter"]], "torch.Tensor.long": [[393, "torch-tensor-long"]], "torch.Tensor.log": [[369, "torch-tensor-log"]], "torch.Tensor.lgamma_": [[368, "torch-tensor-lgamma"]], "torch.Tensor.log1p_": [[373, "torch-tensor-log1p"]], "torch.Tensor.logical_or_": [[387, "torch-tensor-logical-or"]], "torch.Tensor.masked_fill": [[399, "torch-tensor-masked-fill"]], "torch.Tensor.log10_": [[371, "torch-tensor-log10"]], "torch.Tensor.logsumexp": [[392, "torch-tensor-logsumexp"]], "torch.Tensor.masked_scatter_": [[402, "torch-tensor-masked-scatter"]], "torch.Tensor.logical_and_": [[383, "torch-tensor-logical-and"]], "torch.Tensor.logaddexp2": [[379, "torch-tensor-logaddexp2"]], "torch.Tensor.lu": [[396, "torch-tensor-lu"]], "torch.Tensor.ldexp": [[357, "torch-tensor-ldexp"]], "torch.Tensor.logaddexp": [[378, "torch-tensor-logaddexp"]], "torch.Tensor.less_equal": [[365, "torch-tensor-less-equal"]], "torch.tensor_split": [[1940, "torch-tensor-split"]], "torch.transpose": [[1945, "torch-transpose"]], "torch.trapz": [[1947, "torch-trapz"]], "torch.topk": [[1943, "torch-topk"]], "torch.xpu.get_device_name": [[1988, "torch-xpu-get-device-name"]], "torch.tensor": [[1939, "torch-tensor"]], "torch.tensordot": [[1941, "torch-tensordot"]], "torch.xpu.current_device": [[1981, "torch-xpu-current-device"]], "torch.vstack": [[1975, "torch-vstack"]], "torch.triangular_solve": [[1948, "torch-triangular-solve"]], "Event": [[1978, "event"], [1394, "event"], [1382, "event"], [1008, "event"]], "torch.where": [[1976, "torch-where"]], "torch.view_as_complex": [[1971, "torch-view-as-complex"]], "torch.utils.get_cpp_backtrace": [[1963, "torch-utils-get-cpp-backtrace"]], "torch.tanh": [[1938, "torch-tanh"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1962, "torch-utils-generate-methods-for-privateuse1-backend"]], "device_of": [[1985, "device-of"], [1029, "device-of"]], "torch.triu": [[1951, "torch-triu"]], "torch.tril_indices": [[1950, "torch-tril-indices"]], "torch.tril": [[1949, "torch-tril"]], "torch.xlogy": [[1977, "torch-xlogy"]], "torch.triu_indices": [[1952, "torch-triu-indices"]], "torch.unique": [[1957, "torch-unique"]], "torch.view_as_real": [[1972, "torch-view-as-real"]], "torch.vsplit": [[1974, "torch-vsplit"]], "torch.utils.swap_tensors": [[1966, "torch-utils-swap-tensors"]], "torch.unravel_index": [[1959, "torch-unravel-index"]], "torch.var": [[1968, "torch-var"]], "torch.unsqueeze": [[1960, "torch-unsqueeze"]], "torch.vdot": [[1970, "torch-vdot"]], "torch.utils.set_module": [[1965, "torch-utils-set-module"]], "Stream": [[1979, "stream"], [1395, "stream"], [1011, "stream"], [996, "stream"]], "torch.utils.rename_privateuse1_backend": [[1964, "torch-utils-rename-privateuse1-backend"]], "torch.trunc": [[1954, "torch-trunc"]], "torch.vmap": [[1973, "torch-vmap"]], "torch.tile": [[1942, "torch-tile"]], "torch.trapezoid": [[1946, "torch-trapezoid"]], "torch.vander": [[1967, "torch-vander"]], "torch.xpu.empty_cache": [[1986, "torch-xpu-empty-cache"]], "StreamContext": [[1980, "streamcontext"], [1396, "streamcontext"], [997, "streamcontext"], [1012, "streamcontext"]], "torch.trace": [[1944, "torch-trace"]], "torch.var_mean": [[1969, "torch-var-mean"]], "torch.unflatten": [[1956, "torch-unflatten"]], "torch.unique_consecutive": [[1958, "torch-unique-consecutive"]], "torch.xpu.current_stream": [[1982, "torch-xpu-current-stream"]], "torch.xpu.device_count": [[1984, "torch-xpu-device-count"]], "device": [[1983, "device"], [1400, "device"], [1027, "device"]], "torch.true_divide": [[1953, "torch-true-divide"]], "torch.use_deterministic_algorithms": [[1961, "torch-use-deterministic-algorithms"]], "torch.unbind": [[1955, "torch-unbind"]], "torch.xpu.get_device_capability": [[1987, "torch-xpu-get-device-capability"]], "torch.std": [[1918, "torch-std"]], "torch.split": [[1912, "torch-split"]], "torch.smm": [[1894, "torch-smm"]], "torch.sort": [[1896, "torch-sort"]], "torch.sparse.mm": [[1901, "torch-sparse-mm"]], "torch.sparse.sampled_addmm": [[1902, "torch-sparse-sampled-addmm"]], "torch.sparse_compressed_tensor": [[1908, "torch-sparse-compressed-tensor"]], "torch.take_along_dim": [[1936, "torch-take-along-dim"]], "torch.svd": [[1924, "torch-svd"]], "torch.square": [[1914, "torch-square"]], "torch.sqrt": [[1913, "torch-sqrt"]], "torch.sinh": [[1891, "torch-sinh"]], "torch.sparse.softmax": [[1903, "torch-sparse-softmax"]], "torch.swapaxes": [[1926, "torch-swapaxes"]], "torch.sparse_coo_tensor": [[1909, "torch-sparse-coo-tensor"]], "torch.sparse_csc_tensor": [[1910, "torch-sparse-csc-tensor"]], "torch.sin": [[1889, "torch-sin"]], "torch.sym_ite": [[1930, "torch-sym-ite"]], "torch.subtract": [[1922, "torch-subtract"]], "torch.sub": [[1921, "torch-sub"]], "torch.stft": [[1920, "torch-stft"]], "torch.sspaddmm": [[1916, "torch-sspaddmm"]], "torch.sparse.addmm": [[1897, "torch-sparse-addmm"]], "torch.softmax": [[1895, "torch-softmax"]], "torch.sparse.log_softmax": [[1900, "torch-sparse-log-softmax"]], "torch.sparse_bsc_tensor": [[1906, "torch-sparse-bsc-tensor"]], "torch.stack": [[1917, "torch-stack"]], "torch.signal.windows.nuttall": [[1887, "torch-signal-windows-nuttall"]], "torch.sym_float": [[1928, "torch-sym-float"]], "torch.sum": [[1923, "torch-sum"]], "check_sparse_tensor_invariants": [[1899, "check-sparse-tensor-invariants"]], "torch.slogdet": [[1893, "torch-slogdet"]], "torch.t": [[1934, "torch-t"]], "torch.std_mean": [[1919, "torch-std-mean"]], "torch.signbit": [[1888, "torch-signbit"]], "torch.sparse_bsr_tensor": [[1907, "torch-sparse-bsr-tensor"]], "torch.sinc": [[1890, "torch-sinc"]], "torch.sparse.sum": [[1905, "torch-sparse-sum"]], "torch.swapdims": [[1927, "torch-swapdims"]], "torch.squeeze": [[1915, "torch-squeeze"]], "torch.sparse.spdiags": [[1904, "torch-sparse-spdiags"]], "torch.sparse.as_sparse_gradcheck": [[1898, "torch-sparse-as-sparse-gradcheck"]], "torch.sym_int": [[1929, "torch-sym-int"]], "torch.sym_max": [[1931, "torch-sym-max"]], "torch.take": [[1935, "torch-take"]], "torch.svd_lowrank": [[1925, "torch-svd-lowrank"]], "torch.tan": [[1937, "torch-tan"]], "torch.sparse_csr_tensor": [[1911, "torch-sparse-csr-tensor"]], "torch.sym_not": [[1933, "torch-sym-not"]], "torch.slice_scatter": [[1892, "torch-slice-scatter"]], "torch.sym_min": [[1932, "torch-sym-min"]], "Dynamic shapes": [[2095, "dynamic-shapes"]], "Motivation": [[2095, "motivation"], [2098, "motivation"], [2020, "motivation"]], "Abridged public API": [[2095, "abridged-public-api"]], "The Guard Model": [[2095, "the-guard-model"]], "Overall architecture": [[2095, "overall-architecture"], [2098, "overall-architecture"]], "Abridged internal API": [[2095, "abridged-internal-api"]], "DimDynamic policy": [[2095, "dimdynamic-policy"]], "Unbacked SymInts": [[2095, "unbacked-symints"]], "TorchDynamo APIs for fine-grained tracing": [[2100, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[2100, "id1"]], "torch.compiler.disable": [[2100, "torch-compiler-disable"], [979, "torch-compiler-disable"]], "torch._dynamo.disallow_in_graph": [[2100, "torch-dynamo-disallow-in-graph"]], "torch.compiler.allow_in_graph": [[2100, "torch-compiler-allow-in-graph"], [975, "torch-compiler-allow-in-graph"]], "Limitations": [[2100, "limitations"], [2093, "limitations"], [2061, "limitations"]], "torch.compiler API reference": [[2091, "torch-compiler-api-reference"]], "Dynamo Overview": [[2097, "dynamo-overview"]], "Dynamo Internals": [[2097, "dynamo-internals"]], "What is a guard?": [[2097, "what-is-a-guard"]], "What is Dynamo doing?": [[2097, "what-is-dynamo-doing"]], "How to inspect artifacts generated by Dynamo?": [[2097, "how-to-inspect-artifacts-generated-by-dynamo"]], "Custom Backends": [[2094, "custom-backends"]], "Overview": [[2094, "overview"], [62, "module-torch.fx"], [50, "overview"], [18, "module-torch.cuda._sanitizer"], [2058, "overview"], [2059, "overview"], [2066, "module-torch.profiler"]], "Registering Custom Backends": [[2094, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[2094, "custom-backends-after-aotautograd"]], "Examples": [[2094, "examples"], [12, "examples"], [40, "examples"], [32, "id1"]], "Debugging Backend": [[2094, "debugging-backend"]], "Speedy Backend": [[2094, "speedy-backend"]], "Composable Backends": [[2094, "composable-backends"]], "Type Info": [[2112, "type-info"]], "torch.finfo": [[2112, "torch-finfo"]], "torch.iinfo": [[2112, "torch-iinfo"]], "Getting Started": [[2101, "getting-started"], [7, "getting-started"]], "Using a pretrained model": [[2101, "using-a-pretrained-model"]], "Next Steps": [[2101, "next-steps"]], "Torch Environment Variables": [[2111, "torch-environment-variables"]], "Fake tensor": [[2098, "fake-tensor"]], "Related work": [[2098, "related-work"]], "API: the important bits": [[2098, "api-the-important-bits"]], "Details": [[2098, "details"]], "About the tensor subclass": [[2098, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[2098, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[2098, "how-does-the-converter-work"]], "Performance characteristics": [[2098, "performance-characteristics"]], "Fake tensor of fake tensor?": [[2098, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[2098, "interaction-with-dynamic-shapes"]], "Other resources": [[2098, "other-resources"]], "torch.xpu": [[2114, "module-torch.xpu"]], "Random Number Generator": [[2114, "random-number-generator"], [17, "random-number-generator"]], "Streams and events": [[2114, "streams-and-events"], [2028, "streams-and-events"], [17, "streams-and-events"], [16, "streams-and-events"]], "PyTorch 2.0 Performance Dashboard": [[2105, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[2105, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[2105, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[2105, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[2105, "how-can-i-run-any-performance-test-locally"]], "TorchInductor GPU Profiling": [[2102, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[2102, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[2102, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[2102, "benchmark-individual-triton-kernel"]], "Best Practices for Backends": [[2092, "best-practices-for-backends"]], "x86 CPU": [[2092, "x86-cpu"]], "Frequently Asked Questions": [[2099, "frequently-asked-questions"], [2010, "frequently-asked-questions"], [7, "frequently-asked-questions"], [2046, "frequently-asked-questions"], [2061, "frequently-asked-questions"], [2067, "frequently-asked-questions"]], "Does torch.compile support training?": [[2099, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[2099, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[2099, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[2099, "why-is-my-code-crashing"]], "Why is compilation slow?": [[2099, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[2099, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[2099, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[2099, "why-am-i-not-seeing-speedups"]], "Graph Breaks": [[2099, "graph-breaks"], [2108, "graph-breaks"], [50, "graph-breaks"]], "Identifying the cause of a graph break": [[2099, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[2099, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[2099, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[2099, "why-am-i-getting-ooms"]], "Does torch.func work with torch.compile (for grad and vmap transforms)?": [[2099, "does-torch-func-work-with-torch-compile-for-grad-and-vmap-transforms"]], "Calling torch.func transform inside of a function handled with torch.compile": [[2099, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Compiling torch.func.grad with torch.compile": [[2099, "compiling-torch-func-grad-with-torch-compile"]], "Compiling torch.vmap with torch.compile": [[2099, "compiling-torch-vmap-with-torch-compile"]], "Compiling functions besides the ones which are supported (escape hatch)": [[2099, "compiling-functions-besides-the-ones-which-are-supported-escape-hatch"]], "Does NumPy work with torch.compile?": [[2099, "does-numpy-work-with-torch-compile"]], "Which NumPy features does torch.compile support?": [[2099, "which-numpy-features-does-torch-compile-support"]], "Can I compile NumPy code using torch.compile?": [[2099, "can-i-compile-numpy-code-using-torch-compile"]], "Can I execute NumPy code on CUDA and compute gradients via torch.compile?": [[2099, "can-i-execute-numpy-code-on-cuda-and-compute-gradients-via-torch-compile"]], "How do I debug NumPy code under torch.compile?": [[2099, "how-do-i-debug-numpy-code-under-torch-compile"]], "I torch.compile some NumPy code and I did not see any speed-up.": [[2099, "i-torch-compile-some-numpy-code-and-i-did-not-see-any-speed-up"]], "Which API to use for fine grain tracing?": [[2099, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[2099, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[2099, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[2099, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "torch.overrides": [[2109, "module-torch.overrides"]], "Functions": [[2109, "functions"], [2010, "functions"], [2012, "functions"], [2061, "functions"], [2078, "functions"]], "PyTorch 2.0 Troubleshooting": [[2108, "pytorch-2-0-troubleshooting"]], "Title": [[2108, "id1"]], "Diagnosing Runtime Errors": [[2108, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[2108, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[2108, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[2108, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[2108, "minifying-backend-compiler-errors"]], "Performance Profiling": [[2108, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[2108, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[2108, "torchinductor-debugging-using-torch-compile-debug"]], "Identifying the Cause of a Graph Break": [[2108, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[2108, "excessive-recompilation"]], "Accuracy Debugging": [[2108, "accuracy-debugging"]], "Extended Debugging": [[2108, "extended-debugging"]], "Cold Start Timing and Cache Corruption Debugging": [[2108, "cold-start-timing-and-cache-corruption-debugging"]], "Understanding CUDA Memory Usage": [[2110, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[2110, "generating-a-snapshot"]], "Using the visualizer": [[2110, "using-the-visualizer"]], "Active Memory Timeline": [[2110, "active-memory-timeline"]], "Allocator State History": [[2110, "allocator-state-history"]], "Snapshot API Reference": [[2110, "snapshot-api-reference"]], "Writing Graph Transformations on ATen IR": [[2107, "writing-graph-transformations-on-aten-ir"]], "Passes": [[2107, "passes"]], "Transformer": [[2107, "transformer"], [1567, "transformer"]], "One-to-One Pass": [[2107, "one-to-one-pass"]], "One-to-X Pass": [[2107, "one-to-x-pass"]], "One-to-None Pass": [[2107, "one-to-none-pass"]], "Utilizing Local Information": [[2107, "utilizing-local-information"]], "Subgraph Rewriter": [[2107, "subgraph-rewriter"]], "Pass Manager": [[2107, "pass-manager"]], "Partitioner": [[2107, "partitioner"]], "Subgraph Matcher": [[2107, "subgraph-matcher"]], "Capability Based Partitioner": [[2107, "capability-based-partitioner"]], "PyTorch 2.0 NNModule Support": [[2104, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[2104, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[2104, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[2104, "state-dict-hooks"]], "Dynamo Deep-Dive": [[2096, "dynamo-deep-dive"]], "A Gentle Introduction to Dynamo": [[2096, "a-gentle-introduction-to-dynamo"]], "PEP 523: Adding a frame evaluation API to CPython": [[2096, "pep-523-adding-a-frame-evaluation-api-to-cpython"]], "Implementing CPython in Python": [[2096, "implementing-cpython-in-python"]], "Generating the Output Graph": [[2096, "generating-the-output-graph"]], "Making Dynamo Sound: Guards": [[2096, "making-dynamo-sound-guards"]], "Symbolic Shapes": [[2096, "symbolic-shapes"]], "Static by default": [[2096, "static-by-default"]], "0, 1 are always specialized": [[2096, "are-always-specialized"]], "Duck shaping": [[2096, "duck-shaping"]], "Guards on symbolic ints": [[2096, "guards-on-symbolic-ints"]], "Making Dynamo Complete: Graph Breaks": [[2096, "making-dynamo-complete-graph-breaks"]], "Conclusion": [[2096, "conclusion"]], "Footnotes": [[2096, "footnotes"]], "torch.utils": [[2113, "module-torch.utils"]], "IRs": [[2103, "irs"]], "Core Aten IR": [[2103, "core-aten-ir"]], "Prims IR": [[2103, "prims-ir"]], "Profiling to understand torch.compile performance": [[2106, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[2106, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[2106, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[2106, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[2106, "understanding-compilation-time"]], "Finding graph breaks: \u201cTorch-Compiled Region\u201d and \u201cCompiledFunction\u201d": [[2106, "finding-graph-breaks-torch-compiled-region-and-compiledfunction"]], "Operator Kernels": [[2106, "operator-kernels"]], "Launch overhead": [[2106, "launch-overhead"]], "CUDAGraph Trees": [[2093, "cudagraph-trees"]], "CUDAGraph Background": [[2093, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[2093, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[2093, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[2093, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[2093, "cudagraph-trees-integration"]], "Comparisons": [[2093, "comparisons"], [2013, "comparisons"]], "torch.scatter": [[1856, "torch-scatter"]], "torch.select_scatter": [[1862, "torch-select-scatter"]], "torch.signal.windows.exponential": [[1880, "torch-signal-windows-exponential"]], "torch.signal.windows.bartlett": [[1877, "torch-signal-windows-bartlett"]], "torch.signal.windows.general_hamming": [[1883, "torch-signal-windows-general-hamming"]], "torch.set_warn_always": [[1873, "torch-set-warn-always"]], "torch.randperm": [[1838, "torch-randperm"]], "torch.set_rng_state": [[1872, "torch-set-rng-state"]], "torch.signal.windows.general_cosine": [[1882, "torch-signal-windows-general-cosine"]], "torch.sigmoid": [[1875, "torch-sigmoid"]], "torch.scatter_add": [[1857, "torch-scatter-add"]], "torch.set_flush_denormal": [[1868, "torch-set-flush-denormal"]], "torch.randn_like": [[1837, "torch-randn-like"]], "torch.remainder": [[1843, "torch-remainder"]], "torch.signal.windows.cosine": [[1879, "torch-signal-windows-cosine"]], "torch.set_default_device": [[1863, "torch-set-default-device"]], "torch.result_type": [[1849, "torch-result-type"]], "torch.resolve_neg": [[1848, "torch-resolve-neg"]], "torch.renorm": [[1844, "torch-renorm"]], "torch.real": [[1841, "torch-real"]], "torch.set_deterministic_debug_mode": [[1866, "torch-set-deterministic-debug-mode"]], "torch.set_printoptions": [[1871, "torch-set-printoptions"]], "torch.signal.windows.hamming": [[1884, "torch-signal-windows-hamming"]], "torch.rot90": [[1851, "torch-rot90"]], "torch.ravel": [[1840, "torch-ravel"]], "torch.signal.windows.gaussian": [[1881, "torch-signal-windows-gaussian"]], "torch.set_default_dtype": [[1864, "torch-set-default-dtype"]], "torch.scatter_reduce": [[1858, "torch-scatter-reduce"]], "torch.seed": [[1860, "torch-seed"]], "torch.set_float32_matmul_precision": [[1867, "torch-set-float32-matmul-precision"]], "torch.round": [[1852, "torch-round"]], "torch.rsqrt": [[1854, "torch-rsqrt"]], "torch.row_stack": [[1853, "torch-row-stack"]], "torch.set_num_interop_threads": [[1869, "torch-set-num-interop-threads"]], "torch.save": [[1855, "torch-save"]], "torch.signal.windows.blackman": [[1878, "torch-signal-windows-blackman"]], "torch.reciprocal": [[1842, "torch-reciprocal"]], "torch.signal.windows.hann": [[1885, "torch-signal-windows-hann"]], "torch.signal.windows.kaiser": [[1886, "torch-signal-windows-kaiser"]], "torch.searchsorted": [[1859, "torch-searchsorted"]], "torch.select": [[1861, "torch-select"]], "torch.sgn": [[1874, "torch-sgn"]], "torch.range": [[1839, "torch-range"]], "torch.sign": [[1876, "torch-sign"]], "torch.reshape": [[1846, "torch-reshape"]], "torch.randn": [[1836, "torch-randn"]], "torch.repeat_interleave": [[1845, "torch-repeat-interleave"]], "torch.resolve_conj": [[1847, "torch-resolve-conj"]], "torch.set_default_tensor_type": [[1865, "torch-set-default-tensor-type"]], "torch.set_num_threads": [[1870, "torch-set-num-threads"]], "torch.roll": [[1850, "torch-roll"]], "ExportDB": [[64, "exportdb"]], "Tags": [[64, null]], "Supported": [[64, "supported"]], "assume_constant_result": [[64, "assume-constant-result"], [75, "assume-constant-result"]], "autograd_function": [[64, "autograd-function"]], "class_method": [[64, "class-method"]], "cond_branch_class_method": [[64, "cond-branch-class-method"], [72, "cond-branch-class-method"], [73, "cond-branch-class-method"]], "cond_branch_nested_function": [[64, "cond-branch-nested-function"], [72, "cond-branch-nested-function"], [73, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[64, "cond-branch-nonlocal-variables"], [72, "cond-branch-nonlocal-variables"], [73, "cond-branch-nonlocal-variables"]], "cond_closed_over_variable": [[64, "cond-closed-over-variable"], [72, "cond-closed-over-variable"], [67, "cond-closed-over-variable"]], "cond_operands": [[64, "cond-operands"], [72, "cond-operands"], [73, "cond-operands"]], "cond_predicate": [[64, "cond-predicate"], [72, "cond-predicate"], [73, "cond-predicate"]], "constrain_as_size_example": [[64, "constrain-as-size-example"], [75, "constrain-as-size-example"], [74, "constrain-as-size-example"]], "constrain_as_value_example": [[64, "constrain-as-value-example"], [75, "constrain-as-value-example"], [74, "constrain-as-value-example"]], "decorator": [[64, "decorator"]], "dictionary": [[64, "dictionary"], [70, "dictionary"]], "dynamic_shape_assert": [[64, "dynamic-shape-assert"], [65, "dynamic-shape-assert"]], "dynamic_shape_constructor": [[64, "dynamic-shape-constructor"], [73, "dynamic-shape-constructor"]], "dynamic_shape_if_guard": [[64, "dynamic-shape-if-guard"], [73, "dynamic-shape-if-guard"], [69, "dynamic-shape-if-guard"]], "dynamic_shape_map": [[64, "dynamic-shape-map"], [73, "dynamic-shape-map"], [76, "dynamic-shape-map"]], "dynamic_shape_slicing": [[64, "dynamic-shape-slicing"], [73, "dynamic-shape-slicing"]], "dynamic_shape_view": [[64, "dynamic-shape-view"], [73, "dynamic-shape-view"]], "fn_with_kwargs": [[64, "fn-with-kwargs"], [70, "fn-with-kwargs"]], "list_contains": [[64, "list-contains"], [65, "list-contains"], [73, "list-contains"], [70, "list-contains"]], "list_unpack": [[64, "list-unpack"], [70, "list-unpack"], [69, "list-unpack"]], "nested_function": [[64, "nested-function"], [67, "nested-function"]], "null_context_manager": [[64, "null-context-manager"], [68, "null-context-manager"]], "pytree_flatten": [[64, "pytree-flatten"]], "scalar_output": [[64, "scalar-output"], [73, "scalar-output"]], "specialized_attribute": [[64, "specialized-attribute"]], "static_for_loop": [[64, "static-for-loop"], [69, "static-for-loop"]], "static_if": [[64, "static-if"], [69, "static-if"]], "tensor_setattr": [[64, "tensor-setattr"], [66, "tensor-setattr"]], "type_reflection_method": [[64, "type-reflection-method"], [66, "type-reflection-method"]], "user_input_mutation": [[64, "user-input-mutation"], [77, "user-input-mutation"]], "Not Supported Yet": [[64, "not-supported-yet"]], "dynamic_shape_round": [[64, "dynamic-shape-round"], [66, "dynamic-shape-round"], [73, "dynamic-shape-round"]], "model_attr_mutation": [[64, "model-attr-mutation"], [71, "model-attr-mutation"]], "optional_input": [[64, "optional-input"], [71, "optional-input"]], "torch_sym_min": [[64, "torch-sym-min"], [78, "torch-sym-min"]], "torch.escape-hatch": [[75, "torch-escape-hatch"]], "torch.cond": [[72, "torch-cond"], [987, "torch-cond"]], "FXE0012:unsupported-fx-node-analysis": [[83, "fxe0012-unsupported-fx-node-analysis"]], "FXE0007:fx-graph-to-onnx": [[79, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[79, "key-representations"]], "Additional Notes:": [[79, "additional-notes"]], "torch.func API Reference": [[55, "module-torch.func"]], "Function Transforms": [[55, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[55, "utilities-for-working-with-torch-nn-modules"]], "torch.Tensor.add": [[97, "torch-tensor-add"]], "torch.Tensor.acosh_": [[96, "torch-tensor-acosh"]], "UX Limitations": [[58, "ux-limitations"]], "General limitations": [[58, "general-limitations"]], "torch.autograd APIs": [[58, "torch-autograd-apis"]], "vmap limitations": [[58, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[58, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[58, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[58, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[58, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[58, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[58, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[58, "randomness"]], "python.builtin": [[66, "python-builtin"]], "Generator": [[88, "generator"]], "torch.fx.experimental": [[63, "torch-fx-experimental"]], "torch.fx.experimental.symbolic_shapes": [[63, "module-torch.fx.experimental.symbolic_shapes"]], "torch.operator": [[78, "torch-operator"]], "FXE0015:fx-node-insert-type-promotion": [[86, "fxe0015-fx-node-insert-type-promotion"]], "torch.Tensor.abs_": [[90, "torch-tensor-abs"]], "python.assert": [[65, "python-assert"]], "torch.Tensor.acos_": [[94, "torch-tensor-acos"]], "torch.func Whirlwind Tour": [[59, "torch-func-whirlwind-tour"]], "What is torch.func?": [[59, "what-is-torch-func"]], "Why composable function transforms?": [[59, "why-composable-function-transforms"], [54, "why-composable-function-transforms"]], "What are the transforms?": [[59, "what-are-the-transforms"]], "grad() (gradient computation)": [[59, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[59, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[59, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[59, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[59, "jacrev-jacfwd-and-hessian"]], "FXE0011:no-symbolic-function-for-call-function": [[82, "fxe0011-no-symbolic-function-for-call-function"]], "torch.Tensor.acos": [[93, "torch-tensor-acos"]], "torch.fft": [[52, "torch-fft"]], "Fast Fourier Transforms": [[52, "fast-fourier-transforms"]], "Helper Functions": [[52, "helper-functions"]], "torch.dynamic-shape": [[73, "torch-dynamic-shape"]], "torch.Tensor.absolute_": [[92, "torch-tensor-absolute"]], "python.closure": [[67, "python-closure"]], "torch.map": [[76, "torch-map"]], "torch.Tensor.add_": [[98, "torch-tensor-add"]], "FXE0014:find-opschema-matched-symbolic-function": [[85, "fxe0014-find-opschema-matched-symbolic-function"]], "python.context-manager": [[68, "python-context-manager"]], "torch.Tensor.absolute": [[91, "torch-tensor-absolute"]], "torch.futures": [[61, "torch-futures"]], "torch.__future__": [[60, "module-torch.__future__"]], "FXE0010:fx-pass": [[81, "fxe0010-fx-pass"]], "Patching Batch Norm": [[56, "patching-batch-norm"]], "What\u2019s happening?": [[56, "what-s-happening"]], "How to fix": [[56, "how-to-fix"]], "Option 1: Change the BatchNorm": [[56, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[56, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[56, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[56, "option-4-eval-mode"]], "FXE0008:fx-node-to-onnx": [[80, "fxe0008-fx-node-to-onnx"]], "FullyShardedDataParallel": [[53, "module-torch.distributed.fsdp"]], "torch.fx": [[62, "torch-fx"]], "Writing Transformations": [[62, "writing-transformations"]], "A Quick Primer on Graphs": [[62, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[62, "graph-manipulation"]], "Direct Graph Manipulation": [[62, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[62, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[62, "graph-manipulation-examples"]], "Proxy/Retracing": [[62, "proxy-retracing"]], "The Interpreter Pattern": [[62, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[62, "examples-of-the-interpreter-pattern"]], "Debugging": [[62, "debugging"], [2010, "debugging"]], "Introduction": [[62, "introduction"], [2020, "introduction"], [2032, "introduction"]], "Common Pitfalls in Transform Authoring": [[62, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[62, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[62, "debugging-the-generated-code"]], "Use pdb": [[62, "use-pdb"]], "Print the Generated Code": [[62, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[62, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[62, "debugging-the-transformation"]], "Available Debuggers": [[62, "available-debuggers"]], "Limitations of Symbolic Tracing": [[62, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[62, "dynamic-control-flow"]], "Static Control Flow": [[62, "static-control-flow"]], "Non-torch Functions": [[62, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[62, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[62, "leaf-modules"]], "Miscellanea": [[62, "miscellanea"]], "API Reference": [[62, "api-reference"], [2026, "module-torch.monitor"], [50, "module-torch.export"], [12, "api-reference"], [18, "api-reference"], [2064, "api-reference"], [2059, "api-reference"], [2066, "api-reference"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[87, "fxe0016-find-operator-overloads-in-onnx-registry"]], "torch.Tensor.addbmm_": [[100, "torch-tensor-addbmm"]], "python.data-structure": [[70, "python-data-structure"]], "python.object-model": [[71, "python-object-model"]], "torch.dynamic-value": [[74, "torch-dynamic-value"]], "torch.export IR Specification": [[51, "torch-export-ir-specification"]], "Assumptions": [[51, "assumptions"], [2074, "assumptions"]], "What is Export IR": [[51, "what-is-export-ir"]], "ExportedProgram": [[51, "exportedprogram"]], "Graph": [[51, "graph"]], "Node": [[51, "node"]], "call_function": [[51, "call-function"]], "Metadata": [[51, "metadata"]], "placeholder": [[51, "placeholder"]], "output": [[51, "output"]], "get_attr": [[51, "get-attr"]], "References": [[51, "references"], [2010, "references"]], "SymInt": [[51, "symint"]], "FakeTensor": [[51, "faketensor"]], "Pytree-able Types": [[51, "pytree-able-types"]], "torch.Tensor.addcdiv": [[101, "torch-tensor-addcdiv"]], "torch.func": [[54, "torch-func"]], "What are composable function transforms?": [[54, "what-are-composable-function-transforms"]], "Read More": [[54, "read-more"], [50, "read-more"], [2089, "read-more"]], "FXE0013:op-level-debugging": [[84, "fxe0013-op-level-debugging"]], "python.control-flow": [[69, "python-control-flow"]], "torch.mutation": [[77, "torch-mutation"]], "Migrating from functorch to torch.func": [[57, "migrating-from-functorch-to-torch-func"]], "function transforms": [[57, "function-transforms"]], "NN module utilities": [[57, "nn-module-utilities"]], "functorch.make_functional": [[57, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[57, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[57, "functorch-compile"]], "torch.Tensor.abs": [[89, "torch-tensor-abs"]], "torch.Tensor.acosh": [[95, "torch-tensor-acosh"]], "torch.Tensor.addbmm": [[99, "torch-tensor-addbmm"]], "torch.nn.functional.lp_pool2d": [[1651, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.pixel_shuffle": [[1671, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.margin_ranking_loss": [[1653, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.nll_loss": [[1665, "torch-nn-functional-nll-loss"]], "torch.nn.functional.poisson_nll_loss": [[1673, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.layer_norm": [[1643, "torch-nn-functional-layer-norm"]], "torch.nn.functional.max_unpool3d": [[1659, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.logsigmoid": [[1649, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.multilabel_margin_loss": [[1663, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.l1_loss": [[1642, "torch-nn-functional-l1-loss"]], "torch.nn.functional.multi_margin_loss": [[1662, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.pairwise_distance": [[1669, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.mse_loss": [[1661, "torch-nn-functional-mse-loss"]], "torch.nn.functional.max_unpool1d": [[1657, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.hardtanh": [[1635, "torch-nn-functional-hardtanh"]], "torch.nn.functional.normalize": [[1666, "torch-nn-functional-normalize"]], "torch.nn.functional.max_pool2d": [[1655, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.instance_norm": [[1639, "torch-nn-functional-instance-norm"]], "torch.nn.functional.linear": [[1646, "torch-nn-functional-linear"]], "torch.nn.functional.max_pool1d": [[1654, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.hinge_embedding_loss": [[1637, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.rms_norm": [[1678, "torch-nn-functional-rms-norm"]], "torch.nn.functional.mish": [[1660, "torch-nn-functional-mish"]], "torch.nn.functional.lp_pool1d": [[1650, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.leaky_relu": [[1644, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.max_pool3d": [[1656, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.prelu": [[1674, "torch-nn-functional-prelu"]], "torch.nn.functional.local_response_norm": [[1647, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.rrelu": [[1679, "torch-nn-functional-rrelu"]], "torch.nn.functional.interpolate": [[1640, "torch-nn-functional-interpolate"]], "torch.nn.functional.huber_loss": [[1638, "torch-nn-functional-huber-loss"]], "torch.nn.functional.kl_div": [[1641, "torch-nn-functional-kl-div"]], "torch.nn.functional.relu_": [[1677, "torch-nn-functional-relu"]], "torch.nn.functional.hardswish": [[1634, "torch-nn-functional-hardswish"]], "torch.nn.functional.pdist": [[1670, "torch-nn-functional-pdist"]], "torch.nn.functional.leaky_relu_": [[1645, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.one_hot": [[1667, "torch-nn-functional-one-hot"]], "torch.nn.functional.lp_pool3d": [[1652, "torch-nn-functional-lp-pool3d"]], "torch.nn.functional.hardsigmoid": [[1633, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.relu6": [[1676, "torch-nn-functional-relu6"]], "torch.nn.functional.pad": [[1668, "torch-nn-functional-pad"]], "torch.nn.functional.hardshrink": [[1632, "torch-nn-functional-hardshrink"]], "torch.nn.functional.hardtanh_": [[1636, "torch-nn-functional-hardtanh"]], "torch.nn.functional.max_unpool2d": [[1658, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.pixel_unshuffle": [[1672, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1664, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.log_softmax": [[1648, "torch-nn-functional-log-softmax"]], "torch.nn.functional.selu": [[1682, "torch-nn-functional-selu"]], "torch.nn.functional.relu": [[1675, "torch-nn-functional-relu"]], "torch.nn.functional.scaled_dot_product_attention": [[1681, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.rrelu_": [[1680, "torch-nn-functional-rrelu"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1708, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1705, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.functional.softmax": [[1687, "torch-nn-functional-softmax"]], "torch.nn.functional.threshold": [[1694, "torch-nn-functional-threshold"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1696, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1709, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1698, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.utils.fuse_conv_bn_eval": [[1722, "torch-nn-utils-fuse-conv-bn-eval"]], "ParametrizationList": [[1730, "parametrizationlist"]], "torch.nn.functional.tanh": [[1692, "torch-nn-functional-tanh"]], "torch.nn.functional.upsample": [[1700, "torch-nn-functional-upsample"]], "torch.nn.functional.silu": [[1684, "torch-nn-functional-silu"]], "torch.nn.functional.tanhshrink": [[1693, "torch-nn-functional-tanhshrink"]], "UninitializedParameter": [[1716, "uninitializedparameter"]], "torch.nn.functional.softsign": [[1691, "torch-nn-functional-softsign"]], "torch.nn.functional.soft_margin_loss": [[1686, "torch-nn-functional-soft-margin-loss"]], "LazyModuleMixin": [[1703, "lazymodulemixin"]], "torch.nn.modules.module.register_module_backward_hook": [[1704, "torch-nn-modules-module-register-module-backward-hook"]], "UninitializedBuffer": [[1715, "uninitializedbuffer"]], "torch.nn.utils.fuse_linear_bn_eval": [[1724, "torch-nn-utils-fuse-linear-bn-eval"]], "torch.nn.utils.parametrizations.orthogonal": [[1727, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.functional.softshrink": [[1690, "torch-nn-functional-softshrink"]], "torch.nn.utils.convert_conv3d_weight_memory_format": [[1721, "torch-nn-utils-convert-conv3d-weight-memory-format"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1711, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.utils.clip_grad_norm": [[1717, "torch-nn-utils-clip-grad-norm"]], "torch.nn.utils.parametrizations.spectral_norm": [[1728, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.functional.smooth_l1_loss": [[1685, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.softplus": [[1689, "torch-nn-functional-softplus"]], "torch.nn.utils.parametrize.register_parametrization": [[1733, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.functional.unfold": [[1699, "torch-nn-functional-unfold"]], "torch.nn.functional.sigmoid": [[1683, "torch-nn-functional-sigmoid"]], "torch.nn.modules.module.register_module_forward_hook": [[1706, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.utils.parameters_to_vector": [[1726, "torch-nn-utils-parameters-to-vector"]], "RMSNorm": [[1712, "rmsnorm"], [1538, "rmsnorm"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1710, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.utils.parametrize.cached": [[1731, "torch-nn-utils-parametrize-cached"]], "torch.nn.functional.upsample_bilinear": [[1701, "torch-nn-functional-upsample-bilinear"]], "DistributedDataParallel": [[1713, "distributeddataparallel"], [2043, "distributeddataparallel"]], "torch.nn.functional.threshold_": [[1695, "torch-nn-functional-threshold"]], "torch.nn.functional.upsample_nearest": [[1702, "torch-nn-functional-upsample-nearest"]], "torch.nn.utils.clip_grad_value_": [[1719, "torch-nn-utils-clip-grad-value"]], "torch.nn.functional.softmin": [[1688, "torch-nn-functional-softmin"]], "torch.nn.utils.fuse_conv_bn_weights": [[1723, "torch-nn-utils-fuse-conv-bn-weights"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1707, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.utils.clip_grad_norm_": [[1718, "torch-nn-utils-clip-grad-norm"]], "torch.nn.utils.convert_conv2d_weight_memory_format": [[1720, "torch-nn-utils-convert-conv2d-weight-memory-format"]], "torch.nn.utils.parametrizations.weight_norm": [[1729, "torch-nn-utils-parametrizations-weight-norm"]], "torch.nn.utils.fuse_linear_bn_weights": [[1725, "torch-nn-utils-fuse-linear-bn-weights"]], "torch.nn.utils.parametrize.is_parametrized": [[1732, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.functional.triplet_margin_loss": [[1697, "torch-nn-functional-triplet-margin-loss"]], "Parameter": [[1714, "parameter"]], "ConstantLR": [[1796, "constantlr"]], "StepLR": [[1809, "steplr"]], "torch.quantized_max_pool2d": [[1829, "torch-quantized-max-pool2d"]], "ExponentialLR": [[1800, "exponentiallr"]], "torch.orgqr": [[1810, "torch-orgqr"]], "OneCycleLR": [[1805, "onecyclelr"]], "torch.optim.Optimizer.add_param_group": [[1785, "torch-optim-optimizer-add-param-group"]], "CyclicLR": [[1799, "cycliclr"]], "torch.pca_lowrank": [[1813, "torch-pca-lowrank"]], "torch.pow": [[1820, "torch-pow"]], "SequentialLR": [[1808, "sequentiallr"]], "LambdaLR": [[1801, "lambdalr"]], "ChainedScheduler": [[1795, "chainedscheduler"]], "RAdam": [[1790, "radam"]], "ReduceLROnPlateau": [[1807, "reducelronplateau"]], "torch.optim.Optimizer.load_state_dict": [[1786, "torch-optim-optimizer-load-state-dict"]], "MultiStepLR": [[1803, "multisteplr"]], "torch.prod": [[1821, "torch-prod"]], "torch.optim.Optimizer.step": [[1788, "torch-optim-optimizer-step"]], "SparseAdam": [[1794, "sparseadam"]], "torch.promote_types": [[1822, "torch-promote-types"]], "MultiplicativeLR": [[1804, "multiplicativelr"]], "torch.randint": [[1834, "torch-randint"]], "torch.rad2deg": [[1831, "torch-rad2deg"]], "torch.quantized_max_pool1d": [[1828, "torch-quantized-max-pool1d"]], "torch.polygamma": [[1818, "torch-polygamma"]], "torch.optim.Optimizer.zero_grad": [[1789, "torch-optim-optimizer-zero-grad"]], "torch.outer": [[1812, "torch-outer"]], "torch.quantized_batch_norm": [[1827, "torch-quantized-batch-norm"]], "torch.ormqr": [[1811, "torch-ormqr"]], "torch.quantile": [[1824, "torch-quantile"]], "CosineAnnealingWarmRestarts": [[1798, "cosineannealingwarmrestarts"]], "SobolEngine": [[1830, "sobolengine"]], "SGD": [[1793, "sgd"]], "RMSprop": [[1791, "rmsprop"]], "torch.positive": [[1819, "torch-positive"]], "torch.rand_like": [[1833, "torch-rand-like"]], "torch.rand": [[1832, "torch-rand"]], "torch.poisson": [[1816, "torch-poisson"]], "torch.randint_like": [[1835, "torch-randint-like"]], "torch.pinverse": [[1815, "torch-pinverse"]], "torch.qr": [[1823, "torch-qr"]], "CosineAnnealingLR": [[1797, "cosineannealinglr"]], "torch.polar": [[1817, "torch-polar"]], "Rprop": [[1792, "rprop"]], "LinearLR": [[1802, "linearlr"]], "torch.quantize_per_tensor": [[1826, "torch-quantize-per-tensor"]], "torch.quantize_per_channel": [[1825, "torch-quantize-per-channel"]], "PolynomialLR": [[1806, "polynomiallr"]], "torch.permute": [[1814, "torch-permute"]], "torch.optim.Optimizer.state_dict": [[1787, "torch-optim-optimizer-state-dict"]], "torch.nn.functional.cosine_similarity": [[1611, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.gumbel_softmax": [[1631, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.fold": [[1623, "torch-nn-functional-fold"]], "torch.nn.functional.adaptive_max_pool3d": [[1593, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.affine_grid": [[1594, "torch-nn-functional-affine-grid"]], "torch.nn.attention.bias.causal_lower_right": [[1585, "torch-nn-attention-bias-causal-lower-right"]], "torch.nn.functional.avg_pool3d": [[1598, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.embedding": [[1620, "torch-nn-functional-embedding"]], "torch.nn.functional.conv3d": [[1606, "torch-nn-functional-conv3d"]], "torch.nn.functional.dropout": [[1614, "torch-nn-functional-dropout"]], "torch.nn.attention.bias.causal_upper_left": [[1586, "torch-nn-attention-bias-causal-upper-left"]], "torch.nn.functional.celu": [[1603, "torch-nn-functional-celu"]], "CausalVariant": [[1584, "causalvariant"]], "torch.nn.functional.group_norm": [[1630, "torch-nn-functional-group-norm"]], "torch.nn.functional.cross_entropy": [[1612, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.adaptive_avg_pool3d": [[1590, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.glu": [[1628, "torch-nn-functional-glu"]], "torch.nn.functional.adaptive_avg_pool1d": [[1588, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.adaptive_avg_pool2d": [[1589, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1602, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.fractional_max_pool2d": [[1624, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.conv1d": [[1604, "torch-nn-functional-conv1d"]], "SDPBackend": [[1582, "sdpbackend"]], "torch.nn.functional.ctc_loss": [[1613, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.feature_alpha_dropout": [[1622, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.gelu": [[1627, "torch-nn-functional-gelu"]], "torch.nn.functional.conv_transpose3d": [[1609, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.dropout1d": [[1615, "torch-nn-functional-dropout1d"]], "torch.nn.functional.conv_transpose1d": [[1607, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.dropout3d": [[1617, "torch-nn-functional-dropout3d"]], "torch.nn.functional.batch_norm": [[1599, "torch-nn-functional-batch-norm"]], "torch.nn.functional.adaptive_max_pool1d": [[1591, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.alpha_dropout": [[1595, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.elu": [[1618, "torch-nn-functional-elu"]], "torch.nn.functional.avg_pool1d": [[1596, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.dropout2d": [[1616, "torch-nn-functional-dropout2d"]], "torch.nn.functional.conv2d": [[1605, "torch-nn-functional-conv2d"]], "torch.nn.functional.gaussian_nll_loss": [[1626, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.attention.sdpa_kernel": [[1587, "torch-nn-attention-sdpa-kernel"]], "torch.nn.functional.adaptive_max_pool2d": [[1592, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.binary_cross_entropy": [[1601, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.embedding_bag": [[1621, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.bilinear": [[1600, "torch-nn-functional-bilinear"]], "torch.nn.functional.cosine_embedding_loss": [[1610, "torch-nn-functional-cosine-embedding-loss"]], "ZeroPad3d": [[1581, "zeropad3d"]], "torch.nn.functional.conv_transpose2d": [[1608, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.grid_sample": [[1629, "torch-nn-functional-grid-sample"]], "torch.nn.functional.fractional_max_pool3d": [[1625, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.attention.bias.CausalBias": [[1583, "torch-nn-attention-bias-causalbias"]], "torch.nn.functional.elu_": [[1619, "torch-nn-functional-elu"]], "torch.nn.functional.avg_pool2d": [[1597, "torch-nn-functional-avg-pool2d"]], "Adagrad": [[1779, "adagrad"]], "CustomFromMask": [[1736, "customfrommask"]], "LnStructured": [[1739, "lnstructured"]], "torch.nn.utils.prune.custom_from_mask": [[1743, "torch-nn-utils-prune-custom-from-mask"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1734, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.utils.rnn.unpack_sequence": [[1759, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.utils.prune.remove": [[1751, "torch-nn-utils-prune-remove"]], "torch.numel": [[1771, "torch-numel"]], "L1Unstructured": [[1738, "l1unstructured"]], "Adamax": [[1782, "adamax"]], "Adam": [[1780, "adam"]], "GraphInfo": [[1775, "graphinfo"]], "VerificationOptions": [[1776, "verificationoptions"]], "torch.nn.utils.prune.ln_structured": [[1748, "torch-nn-utils-prune-ln-structured"]], "PackedSequence": [[1754, "packedsequence"]], "LBFGS": [[1783, "lbfgs"]], "NAdam": [[1784, "nadam"]], "torch.nn.utils.prune.random_structured": [[1749, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.prune.global_unstructured": [[1744, "torch-nn-utils-prune-global-unstructured"]], "torch.nn.utils.prune.l1_unstructured": [[1747, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.weight_norm": [[1765, "torch-nn-utils-weight-norm"]], "BasePruningMethod": [[1735, "basepruningmethod"]], "RandomStructured": [[1741, "randomstructured"]], "torch.nn.utils.rnn.unpad_sequence": [[1760, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.prune.identity": [[1745, "torch-nn-utils-prune-identity"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1755, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.norm": [[1768, "torch-norm"]], "torch.nn.utils.stateless.functional_call": [[1763, "torch-nn-utils-stateless-functional-call"]], "torch.ones": [[1772, "torch-ones"]], "JitScalarType": [[1774, "jitscalartype"]], "Adadelta": [[1778, "adadelta"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1757, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.nn.utils.prune.random_unstructured": [[1750, "torch-nn-utils-prune-random-unstructured"]], "torch.normal": [[1769, "torch-normal"]], "torch.nn.utils.skip_init": [[1761, "torch-nn-utils-skip-init"]], "no_grad": [[1766, "no-grad"]], "torch.nn.utils.rnn.pack_sequence": [[1756, "torch-nn-utils-rnn-pack-sequence"]], "torch.ones_like": [[1773, "torch-ones-like"]], "RandomUnstructured": [[1742, "randomunstructured"]], "Identity": [[1737, "identity"], [1484, "identity"]], "torch.nn.utils.spectral_norm": [[1762, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.vector_to_parameters": [[1764, "torch-nn-utils-vector-to-parameters"]], "torch.nn.utils.remove_weight_norm": [[1753, "torch-nn-utils-remove-weight-norm"]], "torch.nonzero": [[1767, "torch-nonzero"]], "ASGD": [[1777, "asgd"]], "torch.nn.utils.remove_spectral_norm": [[1752, "torch-nn-utils-remove-spectral-norm"]], "torch.not_equal": [[1770, "torch-not-equal"]], "PruningContainer": [[1740, "pruningcontainer"]], "torch.nn.utils.prune.is_pruned": [[1746, "torch-nn-utils-prune-is-pruned"]], "AdamW": [[1781, "adamw"]], "torch.nn.utils.rnn.pad_sequence": [[1758, "torch-nn-utils-rnn-pad-sequence"]], "PairwiseDistance": [[1532, "pairwisedistance"]], "RNN": [[1539, "rnn"]], "SoftMarginLoss": [[1556, "softmarginloss"]], "Tanhshrink": [[1565, "tanhshrink"]], "SmoothL1Loss": [[1555, "smoothl1loss"]], "SELU": [[1551, "selu"]], "TransformerDecoderLayer": [[1569, "transformerdecoderlayer"]], "ZeroPad1d": [[1579, "zeropad1d"]], "PoissonNLLLoss": [[1537, "poissonnllloss"]], "TripletMarginLoss": [[1572, "tripletmarginloss"]], "UpsamplingNearest2d": [[1578, "upsamplingnearest2d"]], "RNNBase": [[1540, "rnnbase"]], "ReplicationPad2d": [[1549, "replicationpad2d"]], "Softshrink": [[1561, "softshrink"]], "Unfold": [[1575, "unfold"]], "SiLU": [[1553, "silu"]], "RReLU": [[1542, "rrelu"]], "Sigmoid": [[1554, "sigmoid"], [759, "sigmoid"]], "TripletMarginWithDistanceLoss": [[1573, "tripletmarginwithdistanceloss"]], "Upsample": [[1576, "upsample"]], "ReflectionPad2d": [[1546, "reflectionpad2d"]], "PixelUnshuffle": [[1536, "pixelunshuffle"]], "ReplicationPad3d": [[1550, "replicationpad3d"]], "NLLLoss": [[1530, "nllloss"]], "ReLU": [[1543, "relu"]], "Softmax2d": [[1558, "softmax2d"]], "Tanh": [[1564, "tanh"]], "TransformerEncoder": [[1570, "transformerencoder"]], "TransformerEncoderLayer": [[1571, "transformerencoderlayer"]], "ReflectionPad1d": [[1545, "reflectionpad1d"]], "PixelShuffle": [[1535, "pixelshuffle"]], "Threshold": [[1566, "threshold"]], "SyncBatchNorm": [[1563, "syncbatchnorm"]], "Softplus": [[1560, "softplus"]], "Unflatten": [[1574, "unflatten"]], "Softmax": [[1557, "softmax"]], "ReLU6": [[1544, "relu6"], [758, "relu6"]], "UpsamplingBilinear2d": [[1577, "upsamplingbilinear2d"]], "Softsign": [[1562, "softsign"]], "ReflectionPad3d": [[1547, "reflectionpad3d"]], "ParameterDict": [[1533, "parameterdict"]], "PReLU": [[1531, "prelu"]], "Softmin": [[1559, "softmin"]], "RNNCell": [[1541, "rnncell"], [765, "rnncell"]], "TransformerDecoder": [[1568, "transformerdecoder"]], "ZeroPad2d": [[1580, "zeropad2d"]], "ReplicationPad1d": [[1548, "replicationpad1d"]], "ParameterList": [[1534, "parameterlist"]], "Sequential": [[1552, "sequential"]], "torch.movedim": [[1377, "torch-movedim"]], "AdaptiveAvgPool2d": [[1425, "adaptiveavgpool2d"]], "torch.mps.synchronize": [[1391, "torch-mps-synchronize"]], "torch.mps.profiler.profile": [[1385, "torch-mps-profiler-profile"]], "torch.narrow_copy": [[1419, "torch-narrow-copy"]], "torch.ne": [[1420, "torch-ne"]], "AdaptiveLogSoftmaxWithLoss": [[1427, "adaptivelogsoftmaxwithloss"]], "torch.msort": [[1392, "torch-msort"]], "torch.mps.current_allocated_memory": [[1378, "torch-mps-current-allocated-memory"]], "torch.nansum": [[1417, "torch-nansum"]], "torch.mv": [[1411, "torch-mv"]], "torch.mps.device_count": [[1379, "torch-mps-device-count"]], "torch.mps.profiler.stop": [[1387, "torch-mps-profiler-stop"]], "torch.multinomial": [[1409, "torch-multinomial"]], "torch.mtia.default_stream": [[1399, "torch-mtia-default-stream"]], "torch.neg": [[1421, "torch-neg"]], "torch.mps.set_per_process_memory_fraction": [[1389, "torch-mps-set-per-process-memory-fraction"]], "torch.mtia.device_count": [[1401, "torch-mtia-device-count"]], "torch.mtia.DeferredMtiaCallError": [[1393, "torch-mtia-deferredmtiacallerror"]], "torch.mtia.current_stream": [[1398, "torch-mtia-current-stream"]], "torch.mtia.stream": [[1406, "torch-mtia-stream"]], "torch.mvlgamma": [[1412, "torch-mvlgamma"]], "torch.nanmedian": [[1415, "torch-nanmedian"]], "torch.mps.manual_seed": [[1384, "torch-mps-manual-seed"]], "torch.mps.seed": [[1388, "torch-mps-seed"]], "torch.mtia.synchronize": [[1407, "torch-mtia-synchronize"]], "torch.negative": [[1422, "torch-negative"]], "torch.narrow": [[1418, "torch-narrow"]], "torch.mtia.is_initialized": [[1404, "torch-mtia-is-initialized"]], "torch.nanquantile": [[1416, "torch-nanquantile"]], "torch.mps.set_rng_state": [[1390, "torch-mps-set-rng-state"]], "torch.mtia.set_stream": [[1405, "torch-mtia-set-stream"]], "torch.mtia.current_device": [[1397, "torch-mtia-current-device"]], "torch.nan_to_num": [[1413, "torch-nan-to-num"]], "torch.mps.profiler.start": [[1386, "torch-mps-profiler-start"]], "torch.nextafter": [[1423, "torch-nextafter"]], "AdaptiveAvgPool1d": [[1424, "adaptiveavgpool1d"]], "AdaptiveAvgPool3d": [[1426, "adaptiveavgpool3d"]], "torch.mps.empty_cache": [[1381, "torch-mps-empty-cache"]], "torch.mul": [[1408, "torch-mul"]], "torch.mps.driver_allocated_memory": [[1380, "torch-mps-driver-allocated-memory"]], "torch.mtia.is_available": [[1403, "torch-mtia-is-available"]], "torch.mps.get_rng_state": [[1383, "torch-mps-get-rng-state"]], "torch.nanmean": [[1414, "torch-nanmean"]], "torch.mtia.init": [[1402, "torch-mtia-init"]], "torch.multiply": [[1410, "torch-multiply"]], "MSELoss": [[1514, "mseloss"]], "MaxPool2d": [[1517, "maxpool2d"]], "LazyBatchNorm3d": [[1498, "lazybatchnorm3d"]], "LazyConvTranspose1d": [[1502, "lazyconvtranspose1d"]], "LogSoftmax": [[1513, "logsoftmax"]], "LazyConv1d": [[1499, "lazyconv1d"]], "InstanceNorm3d": [[1487, "instancenorm3d"], [753, "instancenorm3d"]], "InstanceNorm1d": [[1485, "instancenorm1d"], [751, "instancenorm1d"]], "LazyBatchNorm1d": [[1496, "lazybatchnorm1d"]], "LazyConv2d": [[1500, "lazyconv2d"]], "LPPool2d": [[1491, "lppool2d"]], "MultiLabelSoftMarginLoss": [[1527, "multilabelsoftmarginloss"]], "Linear": [[1510, "linear"], [764, "linear"], [733, "linear"], [732, "linear"], [756, "linear"]], "ModuleList": [[1525, "modulelist"]], "LazyInstanceNorm2d": [[1506, "lazyinstancenorm2d"]], "MaxUnpool3d": [[1521, "maxunpool3d"]], "LazyConv3d": [[1501, "lazyconv3d"]], "LazyConvTranspose3d": [[1504, "lazyconvtranspose3d"]], "MaxPool3d": [[1518, "maxpool3d"]], "LSTMCell": [[1494, "lstmcell"], [763, "lstmcell"]], "LazyBatchNorm2d": [[1497, "lazybatchnorm2d"]], "LogSigmoid": [[1512, "logsigmoid"]], "Hardsigmoid": [[1479, "hardsigmoid"]], "Module": [[1523, "module"]], "MultiheadAttention": [[1529, "multiheadattention"], [735, "multiheadattention"]], "MaxPool1d": [[1516, "maxpool1d"]], "KLDivLoss": [[1488, "kldivloss"]], "LazyLinear": [[1508, "lazylinear"]], "LocalResponseNorm": [[1511, "localresponsenorm"]], "LazyInstanceNorm3d": [[1507, "lazyinstancenorm3d"]], "L1Loss": [[1489, "l1loss"]], "LeakyReLU": [[1509, "leakyrelu"], [755, "leakyrelu"]], "LSTM": [[1493, "lstm"], [734, "lstm"], [762, "lstm"]], "LazyConvTranspose2d": [[1503, "lazyconvtranspose2d"]], "MaxUnpool1d": [[1519, "maxunpool1d"]], "LPPool1d": [[1490, "lppool1d"]], "MarginRankingLoss": [[1515, "marginrankingloss"]], "HuberLoss": [[1483, "huberloss"]], "Hardtanh": [[1481, "hardtanh"]], "HingeEmbeddingLoss": [[1482, "hingeembeddingloss"]], "MultiLabelMarginLoss": [[1526, "multilabelmarginloss"]], "LPPool3d": [[1492, "lppool3d"]], "MultiMarginLoss": [[1528, "multimarginloss"]], "MaxUnpool2d": [[1520, "maxunpool2d"]], "ModuleDict": [[1524, "moduledict"]], "LayerNorm": [[1495, "layernorm"], [754, "layernorm"]], "Mish": [[1522, "mish"]], "InstanceNorm2d": [[1486, "instancenorm2d"], [752, "instancenorm2d"]], "LazyInstanceNorm1d": [[1505, "lazyinstancenorm1d"]], "Hardswish": [[1480, "hardswish"], [750, "hardswish"]], "AdaptiveMaxPool1d": [[1428, "adaptivemaxpool1d"]], "GRU": [[1474, "gru"], [760, "gru"]], "ConstantPad2d": [[1448, "constantpad2d"]], "FeatureAlphaDropout": [[1467, "featurealphadropout"]], "Dropout3d": [[1463, "dropout3d"]], "GLU": [[1473, "glu"]], "AlphaDropout": [[1431, "alphadropout"]], "AvgPool3d": [[1434, "avgpool3d"]], "BatchNorm3d": [[1439, "batchnorm3d"], [737, "batchnorm3d"]], "AvgPool1d": [[1432, "avgpool1d"]], "ConvTranspose3d": [[1455, "convtranspose3d"], [743, "convtranspose3d"]], "Dropout": [[1460, "dropout"]], "AdaptiveMaxPool2d": [[1429, "adaptivemaxpool2d"]], "BCELoss": [[1435, "bceloss"]], "BatchNorm2d": [[1438, "batchnorm2d"], [736, "batchnorm2d"]], "CELU": [[1441, "celu"]], "ConstantPad1d": [[1447, "constantpad1d"]], "GRUCell": [[1475, "grucell"], [761, "grucell"]], "GaussianNLLLoss": [[1476, "gaussiannllloss"]], "ELU": [[1464, "elu"], [744, "elu"]], "BCEWithLogitsLoss": [[1436, "bcewithlogitsloss"]], "AdaptiveMaxPool3d": [[1430, "adaptivemaxpool3d"]], "Conv1d": [[1450, "conv1d"], [738, "conv1d"]], "Dropout2d": [[1462, "dropout2d"]], "ConvTranspose1d": [[1453, "convtranspose1d"], [741, "convtranspose1d"]], "FractionalMaxPool3d": [[1471, "fractionalmaxpool3d"]], "Flatten": [[1468, "flatten"]], "ConstantPad3d": [[1449, "constantpad3d"]], "CosineSimilarity": [[1457, "cosinesimilarity"]], "DataParallel": [[1459, "dataparallel"]], "Embedding": [[1465, "embedding"], [745, "embedding"]], "Conv3d": [[1452, "conv3d"], [740, "conv3d"], [731, "conv3d"]], "CircularPad2d": [[1445, "circularpad2d"]], "Bilinear": [[1440, "bilinear"]], "ConvTranspose2d": [[1454, "convtranspose2d"], [742, "convtranspose2d"]], "Dropout1d": [[1461, "dropout1d"]], "CTCLoss": [[1442, "ctcloss"]], "CircularPad1d": [[1444, "circularpad1d"]], "EmbeddingBag": [[1466, "embeddingbag"], [746, "embeddingbag"]], "FractionalMaxPool2d": [[1470, "fractionalmaxpool2d"]], "ChannelShuffle": [[1443, "channelshuffle"]], "CosineEmbeddingLoss": [[1456, "cosineembeddingloss"]], "CrossEntropyLoss": [[1458, "crossentropyloss"]], "Fold": [[1469, "fold"]], "Hardshrink": [[1478, "hardshrink"]], "GroupNorm": [[1477, "groupnorm"], [749, "groupnorm"]], "CircularPad3d": [[1446, "circularpad3d"]], "Conv2d": [[1451, "conv2d"], [739, "conv2d"], [730, "conv2d"]], "GELU": [[1472, "gelu"]], "AvgPool2d": [[1433, "avgpool2d"]], "BatchNorm1d": [[1437, "batchnorm1d"]], "Miscellaneous Environment Variables": [[2022, "miscellaneous-environment-variables"]], "torch.xpu.set_device": [[2000, "torch-xpu-set-device"]], "torch.xpu.synchronize": [[2005, "torch-xpu-synchronize"]], "torch.masked": [[2020, "torch-masked"]], "What is a MaskedTensor?": [[2020, "what-is-a-maskedtensor"]], "Supported Operators": [[2020, "supported-operators"]], "Unary Operators": [[2020, "unary-operators"]], "Binary Operators": [[2020, "binary-operators"]], "Reductions": [[2020, "reductions"]], "View and select functions": [[2020, "view-and-select-functions"]], "torch.mtia": [[2028, "torch-mtia"]], "torch.xpu.stream": [[2004, "torch-xpu-stream"]], "torch.zeros": [[2006, "torch-zeros"]], "TorchScript": [[2010, "torchscript"]], "Creating TorchScript Code": [[2010, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[2010, "mixing-tracing-and-scripting"]], "TorchScript Language": [[2010, "torchscript-language"]], "Built-in Functions and Modules": [[2010, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[2010, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[2010, "python-functions-and-modules"]], "Python Language Reference Comparison": [[2010, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[2010, "disable-jit-for-debugging"]], "Inspecting Code": [[2010, "inspecting-code"]], "Interpreting Graphs": [[2010, "interpreting-graphs"]], "Tracer": [[2010, "tracer"]], "Tracing Edge Cases": [[2010, "tracing-edge-cases"]], "Automatic Trace Checking": [[2010, "automatic-trace-checking"]], "Tracer Warnings": [[2010, "tracer-warnings"]], "Known Issues": [[2010, "known-issues"]], "Appendix": [[2010, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[2010, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[2010, "modules"], [2051, "modules"]], "TorchScript Classes": [[2010, "torchscript-classes"], [2012, "id2"]], "Attributes": [[2010, "attributes"]], "Constants": [[2010, "constants"]], "Variables": [[2010, "variables"], [2012, "variables"]], "Fusion Backends": [[2010, "fusion-backends"]], "Named Tensors": [[2031, "named-tensors"]], "Creating named tensors": [[2031, "creating-named-tensors"]], "Named dimensions": [[2031, "named-dimensions"]], "Name propagation semantics": [[2031, "name-propagation-semantics"]], "match semantics": [[2031, "match-semantics"]], "Basic name inference rules": [[2031, "basic-name-inference-rules"]], "Explicit alignment by names": [[2031, "explicit-alignment-by-names"]], "Manipulating dimensions": [[2031, "manipulating-dimensions"]], "Autograd support": [[2031, "autograd-support"]], "Currently supported operations and subsystems": [[2031, "currently-supported-operations-and-subsystems"]], "Operators": [[2031, "operators"]], "Subsystems": [[2031, "subsystems"]], "Named tensor API reference": [[2031, "named-tensor-api-reference"]], "torch.library": [[2017, "module-torch.library"]], "Testing custom ops": [[2017, "testing-custom-ops"]], "Creating new custom ops in Python": [[2017, "creating-new-custom-ops-in-python"]], "Extending custom ops (created from Python or C++)": [[2017, "extending-custom-ops-created-from-python-or-c"]], "Low-level APIs": [[2017, "low-level-apis"]], "torch.xpu.is_available": [[1994, "torch-xpu-is-available"]], "TorchScript Builtins": [[2011, "torchscript-builtins"]], "Supported Tensor Methods": [[2011, "supported-tensor-methods"]], "Supported PyTorch Functions": [[2011, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[2011, "torchscript-builtin-functions"]], "Python Built-in Functions": [[2011, "python-built-in-functions"]], "math Module": [[2011, "math-module"]], "TorchScript Unsupported PyTorch Constructs": [[2015, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[2015, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[2015, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[2015, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[2015, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[2015, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[2015, "pytorch-unsupported-modules-and-classes"]], "torch.nn.functional": [[2036, "torch-nn-functional"]], "Convolution functions": [[2036, "convolution-functions"]], "Pooling functions": [[2036, "pooling-functions"]], "Attention Mechanisms": [[2036, "attention-mechanisms"]], "Non-linear activation functions": [[2036, "non-linear-activation-functions"]], "Linear functions": [[2036, "linear-functions"]], "Dropout functions": [[2036, "dropout-functions"]], "Sparse functions": [[2036, "sparse-functions"]], "Distance functions": [[2036, "distance-functions"]], "Loss functions": [[2036, "loss-functions"]], "Vision functions": [[2036, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[2036, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[2036, "data-parallel"]], "TorchScript Language Reference": [[2013, "torchscript-language-reference"], [2012, "torchscript-language-reference"]], "Terminology": [[2013, "terminology"]], "Type System": [[2013, "id1"]], "TorchScript Types": [[2013, "torchscript-types"]], "Meta Types": [[2013, "meta-types"]], "Any Type": [[2013, "any-type"]], "Operators Supported for Any Type": [[2013, "operators-supported-for-any-type"]], "Design Notes": [[2013, "design-notes"], [2072, "design-notes"]], "Primitive Types": [[2013, "primitive-types"]], "Structural Types": [[2013, "structural-types"]], "Nominal Types": [[2013, "nominal-types"]], "Built-in Class": [[2013, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[2013, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[2013, "custom-class"]], "Enum Type": [[2013, "enum-type"]], "TorchScript Module Class": [[2013, "torchscript-module-class"]], "Module Instance Class": [[2013, "module-instance-class"]], "Type Annotation": [[2013, "type-annotation"]], "When to Annotate Types": [[2013, "when-to-annotate-types"]], "Annotate Function Signature": [[2013, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[2013, "annotate-variables-and-data-attributes"]], "Local Variables": [[2013, "local-variables"]], "Instance Data Attributes": [[2013, "instance-data-attributes"]], "Type Annotation APIs": [[2013, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[2013, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[2013, "type-annotation-appendix"]], "TorchScript Type System Definition": [[2013, "torchscript-type-system-definition"]], "Unsupported Typing Constructs": [[2013, "unsupported-typing-constructs"], [2012, "unsupported-typing-constructs"]], "Expressions": [[2013, "expressions"], [2012, "expressions"]], "Arithmetic Conversions": [[2013, "arithmetic-conversions"]], "Atoms": [[2013, "atoms"]], "Identifiers": [[2013, "identifiers"]], "Literals": [[2013, "literals"], [2012, "literals"]], "Parenthesized Forms": [[2013, "parenthesized-forms"]], "List and Dictionary Displays": [[2013, "list-and-dictionary-displays"]], "Primaries": [[2013, "primaries"]], "Attribute References": [[2013, "attribute-references"]], "Subscriptions": [[2013, "subscriptions"]], "Slicings": [[2013, "slicings"]], "Calls": [[2013, "calls"]], "Power Operator": [[2013, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[2013, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[2013, "binary-arithmetic-operations"]], "Shifting Operations": [[2013, "shifting-operations"]], "Binary Bitwise Operations": [[2013, "binary-bitwise-operations"]], "Value Comparisons": [[2013, "value-comparisons"]], "Membership Test Operations": [[2013, "membership-test-operations"]], "Identity Comparisons": [[2013, "identity-comparisons"]], "Boolean Operations": [[2013, "boolean-operations"]], "Conditional Expressions": [[2013, "conditional-expressions"]], "Expression Lists": [[2013, "expression-lists"]], "Simple Statements": [[2013, "simple-statements"]], "Expression Statements": [[2013, "expression-statements"]], "Assignment Statements": [[2013, "assignment-statements"]], "Augmented Assignment Statements": [[2013, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[2013, "annotated-assignment-statements"]], "The raise Statement": [[2013, "the-raise-statement"]], "The assert Statement": [[2013, "the-assert-statement"]], "The return Statement": [[2013, "the-return-statement"]], "The del Statement": [[2013, "the-del-statement"]], "The pass Statement": [[2013, "the-pass-statement"]], "The print Statement": [[2013, "the-print-statement"]], "The break Statement": [[2013, "the-break-statement"]], "The continue Statement:": [[2013, "the-continue-statement"]], "Compound Statements": [[2013, "compound-statements"]], "The if Statement": [[2013, "the-if-statement"]], "Basic if/else Statement": [[2013, "basic-if-else-statement"]], "Ternary if/else Statement": [[2013, "ternary-if-else-statement"]], "The while Statement": [[2013, "the-while-statement"]], "The for-in Statement": [[2013, "the-for-in-statement"]], "The with Statement": [[2013, "the-with-statement"]], "The tuple Statement": [[2013, "the-tuple-statement"]], "The getattr Statement": [[2013, "the-getattr-statement"]], "The hasattr Statement": [[2013, "the-hasattr-statement"]], "The zip Statement": [[2013, "the-zip-statement"]], "The enumerate Statement": [[2013, "the-enumerate-statement"]], "Python Values": [[2013, "python-values"]], "Resolution Rules": [[2013, "resolution-rules"]], "Python Built-in Functions Support": [[2013, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[2013, "id5"]], "Python Built-in Values Support": [[2013, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[2013, "id6"]], "torch.* APIs": [[2013, "torch-apis"]], "Remote Procedure Calls": [[2013, "remote-procedure-calls"]], "Asynchronous Execution": [[2013, "asynchronous-execution"]], "Type Annotations": [[2013, "type-annotations"]], "Meta Programming": [[2013, "meta-programming"]], "Type Refinement": [[2013, "type-refinement"]], "JIT Utils - torch.utils.jit": [[2016, "module-torch.utils.jit"]], "torch._logging": [[2019, "torch-logging"]], "Autograd mechanics": [[2039, "autograd-mechanics"]], "How autograd encodes the history": [[2039, "how-autograd-encodes-the-history"]], "Saved tensors": [[2039, "saved-tensors"]], "Gradients for non-differentiable functions": [[2039, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[2039, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [2086, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[2039, "setting-requires-grad"]], "Grad Modes": [[2039, "grad-modes"]], "Default Mode (Grad Mode)": [[2039, "default-mode-grad-mode"]], "No-grad Mode": [[2039, "no-grad-mode"]], "Inference Mode": [[2039, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[2039, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[2039, "in-place-operations-with-autograd"]], "In-place correctness checks": [[2039, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[2039, "multithreaded-autograd"]], "Concurrency on CPU": [[2039, "concurrency-on-cpu"]], "Non-determinism": [[2039, "non-determinism"]], "Graph retaining": [[2039, "graph-retaining"]], "Thread Safety on Autograd Node": [[2039, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[2039, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[2039, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[2039, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[2039, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[2039, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[2039, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[2039, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[2039, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[2039, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[2039, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[2039, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[2039, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[2039, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[2039, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[2039, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[2039, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "torch.nn.attention": [[2034, "module-torch.nn.attention"]], "Utils": [[2034, "utils"]], "Submodules": [[2034, "submodules"]], "Meta device": [[2021, "meta-device"]], "Idioms for working with meta tensors": [[2021, "idioms-for-working-with-meta-tensors"]], "torch.xpu.get_rng_state": [[1990, "torch-xpu-get-rng-state"]], "torch.nn.attention.bias": [[2035, "module-torch.nn.attention.bias"]], "CausalBias": [[2035, "causalbias"]], "torch.mps": [[2027, "module-torch.mps"]], "MPS Profiler": [[2027, "mps-profiler"]], "MPS Event": [[2027, "mps-event"]], "torch.xpu.manual_seed": [[1996, "torch-xpu-manual-seed"]], "CUDA Automatic Mixed Precision examples": [[2038, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[2038, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[2038, "working-with-unscaled-gradients"]], "Gradient clipping": [[2038, "gradient-clipping"]], "Working with Scaled Gradients": [[2038, "working-with-scaled-gradients"]], "Gradient accumulation": [[2038, "gradient-accumulation"]], "Gradient penalty": [[2038, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[2038, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[2038, "working-with-multiple-gpus"]], "DataParallel in a single process": [[2038, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[2038, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[2038, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[2038, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[2038, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[2038, "functions-that-need-a-particular-dtype"]], "torch.zeros_like": [[2007, "torch-zeros-like"]], "torch.xpu.set_rng_state": [[2001, "torch-xpu-set-rng-state"]], "torch.nn.init": [[2037, "torch-nn-init"]], "Named Tensors operator coverage": [[2030, "named-tensors-operator-coverage"]], "Supported Operations": [[2030, "id1"]], "Keeps input names": [[2030, "keeps-input-names"]], "Removes dimensions": [[2030, "removes-dimensions"]], "Unifies names from inputs": [[2030, "unifies-names-from-inputs"]], "Permutes dimensions": [[2030, "permutes-dimensions"]], "Contracts away dims": [[2030, "contracts-away-dims"]], "Factory functions": [[2030, "factory-functions"]], "out function and in-place variants": [[2030, "out-function-and-in-place-variants"]], "torch.xpu.is_initialized": [[1995, "torch-xpu-is-initialized"]], "Multiprocessing package - torch.multiprocessing": [[2029, "module-torch.multiprocessing"]], "Strategy management": [[2029, "strategy-management"]], "Sharing CUDA tensors": [[2029, "sharing-cuda-tensors"]], "Sharing strategies": [[2029, "sharing-strategies"]], "File descriptor - file_descriptor": [[2029, "file-descriptor-file-descriptor"]], "File system - file_system": [[2029, "file-system-file-system"]], "Spawning subprocesses": [[2029, "spawning-subprocesses"]], "torch.xpu.init": [[1992, "torch-xpu-init"]], "torch.xpu.set_rng_state_all": [[2002, "torch-xpu-set-rng-state-all"]], "torch.utils.model_zoo": [[2024, "torch-utils-model-zoo"]], "torch.linalg": [[2018, "torch-linalg"]], "Matrix Properties": [[2018, "matrix-properties"]], "Decompositions": [[2018, "decompositions"]], "Solvers": [[2018, "solvers"]], "Inverses": [[2018, "inverses"]], "Matrix Functions": [[2018, "matrix-functions"]], "Matrix Products": [[2018, "matrix-products"]], "Tensor Operations": [[2018, "tensor-operations"]], "Misc": [[2018, "misc"]], "Experimental Functions": [[2018, "experimental-functions"]], "torch.xpu.seed_all": [[1999, "torch-xpu-seed-all"]], "torch.nn": [[2033, "module-torch.nn"], [2033, "id1"]], "Containers": [[2033, "containers"]], "Convolution Layers": [[2033, "convolution-layers"]], "Pooling layers": [[2033, "pooling-layers"]], "Padding Layers": [[2033, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[2033, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[2033, "non-linear-activations-other"]], "Normalization Layers": [[2033, "normalization-layers"]], "Recurrent Layers": [[2033, "recurrent-layers"]], "Transformer Layers": [[2033, "transformer-layers"]], "Linear Layers": [[2033, "linear-layers"]], "Dropout Layers": [[2033, "dropout-layers"]], "Sparse Layers": [[2033, "sparse-layers"]], "Distance Functions": [[2033, "distance-functions"]], "Loss Functions": [[2033, "loss-functions"]], "Vision Layers": [[2033, "vision-layers"]], "Shuffle Layers": [[2033, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[2033, "module-torch.nn.parallel"]], "Utilities": [[2033, "module-torch.nn.utils"], [2086, "utilities"]], "Quantized Functions": [[2033, "quantized-functions"]], "Lazy Modules Initialization": [[2033, "lazy-modules-initialization"]], "Aliases": [[2033, "aliases"]], "torch.xpu.get_rng_state_all": [[1991, "torch-xpu-get-rng-state-all"]], "torch.xpu.get_device_properties": [[1989, "torch-xpu-get-device-properties"]], "torch.xpu.initial_seed": [[1993, "torch-xpu-initial-seed"]], "torch.nested": [[2032, "module-torch.nested"]], "Construction": [[2032, "construction"], [2077, "construction"]], "size": [[2032, "size"]], "unbind": [[2032, "unbind"]], "Nested tensor constructor and conversion functions": [[2032, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[2032, "supported-operations"], [2077, "supported-operations"]], "torch.utils.module_tracker": [[2025, "module-torch.utils.module_tracker"]], "torch.xpu.set_stream": [[2003, "torch-xpu-set-stream"]], "torch.hub": [[2008, "torch-hub"]], "Publishing models": [[2008, "publishing-models"]], "How to implement an entrypoint?": [[2008, "how-to-implement-an-entrypoint"]], "Important Notice": [[2008, "important-notice"]], "Loading models from Hub": [[2008, "loading-models-from-hub"]], "Running a loaded model:": [[2008, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[2008, "where-are-my-downloaded-models-saved"]], "Caching logic": [[2008, "caching-logic"]], "Known limitations:": [[2008, "known-limitations"]], "torch.xpu.seed": [[1998, "torch-xpu-seed"]], "torch.monitor": [[2026, "torch-monitor"]], "torch.xpu.manual_seed_all": [[1997, "torch-xpu-manual-seed-all"]], "PyTorch documentation": [[2009, "pytorch-documentation"]], "Community": [[2009, null]], "Developer Notes": [[2009, null]], "Language Bindings": [[2009, null]], "Python API": [[2009, null], [2061, "module-torch.onnx"]], "Libraries": [[2009, null]], "Indices and tables": [[2009, "indices-and-tables"]], "Types": [[2012, "supported-type"], [2061, "types"]], "Default Types": [[2012, "default-types"]], "Optional Type Refinement": [[2012, "optional-type-refinement"]], "TorchScript Enums": [[2012, "id4"]], "Named Tuples": [[2012, "named-tuples"]], "Iterables": [[2012, "iterables"]], "List Construction": [[2012, "list-construction"]], "Tuple Construction": [[2012, "tuple-construction"]], "Dict Construction": [[2012, "dict-construction"]], "Arithmetic Operators": [[2012, "arithmetic-operators"]], "Comparison Operators": [[2012, "comparison-operators"]], "Logical Operators": [[2012, "logical-operators"]], "Subscripts and Slicing": [[2012, "subscripts-and-slicing"]], "Function Calls": [[2012, "function-calls"]], "Method Calls": [[2012, "method-calls"]], "Ternary Expressions": [[2012, "ternary-expressions"]], "Casts": [[2012, "casts"]], "Accessing Module Parameters": [[2012, "accessing-module-parameters"]], "Statements": [[2012, "statements"]], "Simple Assignments": [[2012, "simple-assignments"]], "Pattern Matching Assignments": [[2012, "pattern-matching-assignments"]], "Print Statements": [[2012, "print-statements"]], "If Statements": [[2012, "if-statements"]], "While Loops": [[2012, "while-loops"]], "For loops with range": [[2012, "for-loops-with-range"]], "For loops over tuples": [[2012, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[2012, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[2012, "break-and-continue"]], "Return": [[2012, "return"]], "Variable Resolution": [[2012, "variable-resolution"]], "Use of Python Values": [[2012, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[2012, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[2012, "python-defined-constants"]], "Module Attributes": [[2012, "module-attributes"]], "Python Language Reference Coverage": [[2014, "python-language-reference-coverage"]], "torch.utils.mobile_optimizer": [[2023, "torch-utils-mobile-optimizer"]], "torch.manual_seed": [[1362, "torch-manual-seed"]], "torch.linalg.vector_norm": [[1339, "torch-linalg-vector-norm"]], "torch.linalg.tensorinv": [[1335, "torch-linalg-tensorinv"]], "torch.matmul": [[1364, "torch-matmul"]], "torch.lu_unpack": [[1361, "torch-lu-unpack"]], "torch.matrix_power": [[1366, "torch-matrix-power"]], "torch.logical_xor": [[1354, "torch-logical-xor"]], "torch.logical_or": [[1353, "torch-logical-or"]], "torch.logcumsumexp": [[1349, "torch-logcumsumexp"]], "torch.mean": [[1369, "torch-mean"]], "torch.meshgrid": [[1371, "torch-meshgrid"]], "torch.linalg.pinv": [[1327, "torch-linalg-pinv"]], "torch.log10": [[1344, "torch-log10"]], "torch.lt": [[1358, "torch-lt"]], "torch.linalg.qr": [[1328, "torch-linalg-qr"]], "torch.max": [[1367, "torch-max"]], "torch.maximum": [[1368, "torch-maximum"]], "torch.moveaxis": [[1376, "torch-moveaxis"]], "torch.linalg.svdvals": [[1334, "torch-linalg-svdvals"]], "torch.logical_and": [[1351, "torch-logical-and"]], "torch.linalg.norm": [[1326, "torch-linalg-norm"]], "torch.log": [[1343, "torch-log"]], "torch.log1p": [[1345, "torch-log1p"]], "torch.linalg.solve": [[1330, "torch-linalg-solve"]], "torch.lobpcg": [[1342, "torch-lobpcg"]], "torch.linalg.svd": [[1333, "torch-linalg-svd"]], "torch.logdet": [[1350, "torch-logdet"]], "torch.logspace": [[1356, "torch-logspace"]], "torch.lu": [[1359, "torch-lu"]], "torch.min": [[1372, "torch-min"]], "torch.mm": [[1374, "torch-mm"]], "torch.mode": [[1375, "torch-mode"]], "torch.logit": [[1355, "torch-logit"]], "torch.load": [[1341, "torch-load"]], "torch.logaddexp": [[1347, "torch-logaddexp"]], "torch.masked_select": [[1363, "torch-masked-select"]], "torch.linalg.slogdet": [[1329, "torch-linalg-slogdet"]], "torch.median": [[1370, "torch-median"]], "torch.linalg.tensorsolve": [[1336, "torch-linalg-tensorsolve"]], "torch.linalg.solve_ex": [[1331, "torch-linalg-solve-ex"]], "torch.logsumexp": [[1357, "torch-logsumexp"]], "torch.linalg.vecdot": [[1338, "torch-linalg-vecdot"]], "torch.lu_solve": [[1360, "torch-lu-solve"]], "torch.logaddexp2": [[1348, "torch-logaddexp2"]], "torch.minimum": [[1373, "torch-minimum"]], "torch.linalg.vander": [[1337, "torch-linalg-vander"]], "torch.log2": [[1346, "torch-log2"]], "torch.linspace": [[1340, "torch-linspace"]], "torch.linalg.solve_triangular": [[1332, "torch-linalg-solve-triangular"]], "torch.matrix_exp": [[1365, "torch-matrix-exp"]], "torch.logical_not": [[1352, "torch-logical-not"]], "torch.jit.isinstance": [[1276, "torch-jit-isinstance"]], "torch.linalg.matrix_rank": [[1324, "torch-linalg-matrix-rank"]], "torch.linalg.lu": [[1316, "torch-linalg-lu"]], "torch.linalg.cholesky": [[1299, "torch-linalg-cholesky"]], "torch.linalg.cholesky_ex": [[1300, "torch-linalg-cholesky-ex"]], "torch.linalg.det": [[1303, "torch-linalg-det"]], "torch.linalg.lu_solve": [[1319, "torch-linalg-lu-solve"]], "torch.jit.trace": [[1285, "torch-jit-trace"]], "torch.linalg.cond": [[1301, "torch-linalg-cond"]], "torch.linalg.matrix_power": [[1323, "torch-linalg-matrix-power"]], "torch.linalg.inv": [[1310, "torch-linalg-inv"]], "torch.linalg.eig": [[1305, "torch-linalg-eig"]], "torch.kaiser_window": [[1289, "torch-kaiser-window"]], "torch.linalg.lu_factor": [[1317, "torch-linalg-lu-factor"]], "torch.jit.set_fusion_strategy": [[1283, "torch-jit-set-fusion-strategy"]], "torch.jit.load": [[1277, "torch-jit-load"]], "strict_fusion": [[1284, "strict-fusion"]], "torch.linalg.eigh": [[1306, "torch-linalg-eigh"]], "torch.linalg.lstsq": [[1315, "torch-linalg-lstsq"]], "torch.linalg.eigvalsh": [[1308, "torch-linalg-eigvalsh"]], "torch.linalg.inv_ex": [[1311, "torch-linalg-inv-ex"]], "torch.linalg.multi_dot": [[1325, "torch-linalg-multi-dot"]], "torch.kthvalue": [[1291, "torch-kthvalue"]], "torch.linalg.matmul": [[1320, "torch-linalg-matmul"]], "torch.jit.wait": [[1288, "torch-jit-wait"]], "torch.linalg.eigvals": [[1307, "torch-linalg-eigvals"]], "torch.jit.optimize_for_inference": [[1279, "torch-jit-optimize-for-inference"]], "torch.jit.onednn_fusion_enabled": [[1278, "torch-jit-onednn-fusion-enabled"]], "torch.le": [[1294, "torch-le"]], "torch.linalg.cross": [[1302, "torch-linalg-cross"]], "torch.linalg.matrix_norm": [[1322, "torch-linalg-matrix-norm"]], "torch.kron": [[1290, "torch-kron"]], "torch.jit.script": [[1281, "torch-jit-script"]], "torch.less_equal": [[1297, "torch-less-equal"]], "torch.lerp": [[1295, "torch-lerp"]], "torch.linalg.ldl_solve": [[1314, "torch-linalg-ldl-solve"]], "torch.linalg.diagonal": [[1304, "torch-linalg-diagonal"]], "torch.linalg.lu_factor_ex": [[1318, "torch-linalg-lu-factor-ex"]], "torch.jit.save": [[1280, "torch-jit-save"]], "torch.lcm": [[1292, "torch-lcm"]], "torch.linalg.ldl_factor": [[1312, "torch-linalg-ldl-factor"]], "torch.jit.interface": [[1275, "torch-jit-interface"]], "torch.ldexp": [[1293, "torch-ldexp"]], "torch.linalg.ldl_factor_ex": [[1313, "torch-linalg-ldl-factor-ex"]], "torch.linalg.householder_product": [[1309, "torch-linalg-householder-product"]], "torch.jit.trace_module": [[1286, "torch-jit-trace-module"]], "torch.linalg.matrix_exp": [[1321, "torch-linalg-matrix-exp"]], "torch.jit.script_if_tracing": [[1282, "torch-jit-script-if-tracing"]], "torch.less": [[1296, "torch-less"]], "torch.jit.unused": [[1287, "torch-jit-unused"]], "torch.lgamma": [[1298, "torch-lgamma"]], "torch.get_num_threads": [[1221, "torch-get-num-threads"]], "torch.geqrf": [[1213, "torch-geqrf"]], "ConvertIntKey": [[1177, "convertintkey"]], "PropagateUnbackedSymInts": [[1182, "propagateunbackedsymints"]], "ShapeEnv": [[1184, "shapeenv"]], "torch.fx.experimental.symbolic_shapes.constrain_range": [[1194, "torch-fx-experimental-symbolic-shapes-constrain-range"]], "torch.fx.experimental.symbolic_shapes.guard_size_oblivious": [[1198, "torch-fx-experimental-symbolic-shapes-guard-size-oblivious"]], "torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings": [[1207, "torch-fx-experimental-symbolic-shapes-resolve-unbacked-bindings"]], "torch.fx.experimental.symbolic_shapes.is_concrete_int": [[1202, "torch-fx-experimental-symbolic-shapes-is-concrete-int"]], "torch.gradient": [[1223, "torch-gradient"]], "StrictMinMaxConstraint": [[1188, "strictminmaxconstraint"]], "torch.fx.experimental.symbolic_shapes.parallel_and": [[1204, "torch-fx-experimental-symbolic-shapes-parallel-and"]], "torch.fx.experimental.symbolic_shapes.parallel_or": [[1205, "torch-fx-experimental-symbolic-shapes-parallel-or"]], "torch.fx.experimental.symbolic_shapes.sym_eq": [[1209, "torch-fx-experimental-symbolic-shapes-sym-eq"]], "torch.get_rng_state": [[1222, "torch-get-rng-state"]], "torch.fx.experimental.symbolic_shapes.check_consistent": [[1192, "torch-fx-experimental-symbolic-shapes-check-consistent"]], "torch.get_default_dtype": [[1216, "torch-get-default-dtype"]], "torch.get_device_module": [[1218, "torch-get-device-module"]], "torch.fx.experimental.symbolic_shapes.rebind_unbacked": [[1206, "torch-fx-experimental-symbolic-shapes-rebind-unbacked"]], "torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings": [[1193, "torch-fx-experimental-symbolic-shapes-compute-unbacked-bindings"]], "torch.fx.experimental.symbolic_shapes.hint_int": [[1200, "torch-fx-experimental-symbolic-shapes-hint-int"]], "DimDynamic": [[1179, "dimdynamic"]], "torch.get_float32_matmul_precision": [[1219, "torch-get-float32-matmul-precision"]], "ShapeEnvSettings": [[1185, "shapeenvsettings"]], "StatefulSymbolicContext": [[1186, "statefulsymboliccontext"]], "torch.func.vmap": [[1175, "torch-func-vmap"]], "torch.fx.experimental.symbolic_shapes.definitely_true": [[1197, "torch-fx-experimental-symbolic-shapes-definitely-true"]], "torch.get_default_device": [[1215, "torch-get-default-device"]], "torch.fx.experimental.symbolic_shapes.statically_known_true": [[1208, "torch-fx-experimental-symbolic-shapes-statically-known-true"]], "StatelessSymbolicContext": [[1187, "statelesssymboliccontext"]], "EqualityConstraint": [[1181, "equalityconstraint"]], "RelaxedUnspecConstraint": [[1183, "relaxedunspecconstraint"]], "torch.gcd": [[1211, "torch-gcd"]], "torch.ger": [[1214, "torch-ger"]], "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr": [[1191, "torch-fx-experimental-symbolic-shapes-canonicalize-bool-expr"]], "CallMethodKey": [[1176, "callmethodkey"]], "torch.func.stack_module_state": [[1173, "torch-func-stack-module-state"]], "torch.func.vjp": [[1174, "torch-func-vjp"]], "DimConstraints": [[1178, "dimconstraints"]], "SymbolicContext": [[1190, "symboliccontext"]], "torch.fx.experimental.symbolic_shapes.is_concrete_bool": [[1201, "torch-fx-experimental-symbolic-shapes-is-concrete-bool"]], "SubclassSymbolicContext": [[1189, "subclasssymboliccontext"]], "torch.get_deterministic_debug_mode": [[1217, "torch-get-deterministic-debug-mode"]], "DivideByKey": [[1180, "dividebykey"]], "torch.fx.experimental.symbolic_shapes.lru_cache": [[1203, "torch-fx-experimental-symbolic-shapes-lru-cache"]], "torch.fx.experimental.symbolic_shapes.constrain_unify": [[1195, "torch-fx-experimental-symbolic-shapes-constrain-unify"]], "torch.fx.experimental.symbolic_shapes.definitely_false": [[1196, "torch-fx-experimental-symbolic-shapes-definitely-false"]], "torch.get_num_interop_threads": [[1220, "torch-get-num-interop-threads"]], "torch.gather": [[1210, "torch-gather"]], "torch.ge": [[1212, "torch-ge"]], "torch.fx.experimental.symbolic_shapes.has_free_symbols": [[1199, "torch-fx-experimental-symbolic-shapes-has-free-symbols"]], "torch.i0": [[1237, "torch-i0"]], "torch.hspmm": [[1234, "torch-hspmm"]], "torch.inverse": [[1247, "torch-inverse"]], "torch.jit.enable_onednn_fusion": [[1271, "torch-jit-enable-onednn-fusion"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1250, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.histogramdd": [[1232, "torch-histogramdd"]], "torch.is_warn_always_enabled": [[1257, "torch-is-warn-always-enabled"]], "torch.igammac": [[1239, "torch-igammac"]], "torch.greater_equal": [[1225, "torch-greater-equal"]], "torch.istft": [[1266, "torch-istft"]], "torch.igamma": [[1238, "torch-igamma"]], "torch.gt": [[1226, "torch-gt"]], "torch.index_add": [[1241, "torch-index-add"]], "torch.index_select": [[1244, "torch-index-select"]], "torch.jit.fork": [[1272, "torch-jit-fork"]], "torch.hann_window": [[1228, "torch-hann-window"]], "torch.is_complex": [[1248, "torch-is-complex"]], "torch.hstack": [[1235, "torch-hstack"]], "torch.isfinite": [[1259, "torch-isfinite"]], "torch.isreal": [[1265, "torch-isreal"]], "torch.isposinf": [[1264, "torch-isposinf"]], "torch.isin": [[1260, "torch-isin"]], "torch.is_conj": [[1249, "torch-is-conj"]], "torch.heaviside": [[1229, "torch-heaviside"]], "torch.histc": [[1230, "torch-histc"]], "torch.index_reduce": [[1243, "torch-index-reduce"]], "torch.is_storage": [[1255, "torch-is-storage"]], "torch.is_floating_point": [[1251, "torch-is-floating-point"]], "torch.greater": [[1224, "torch-greater"]], "torch.imag": [[1240, "torch-imag"]], "torch.inner": [[1246, "torch-inner"]], "torch.isclose": [[1258, "torch-isclose"]], "ScriptModule": [[1269, "scriptmodule"]], "torch.is_nonzero": [[1254, "torch-is-nonzero"]], "torch.histogram": [[1231, "torch-histogram"]], "torch.index_copy": [[1242, "torch-index-copy"]], "torch.is_grad_enabled": [[1252, "torch-is-grad-enabled"]], "torch.is_tensor": [[1256, "torch-is-tensor"]], "torch.isneginf": [[1263, "torch-isneginf"]], "ScriptFunction": [[1268, "scriptfunction"]], "torch.is_inference_mode_enabled": [[1253, "torch-is-inference-mode-enabled"]], "torch.jit.ignore": [[1274, "torch-jit-ignore"]], "torch.hypot": [[1236, "torch-hypot"]], "torch.hamming_window": [[1227, "torch-hamming-window"]], "Attribute": [[1267, "attribute"]], "torch.initial_seed": [[1245, "torch-initial-seed"]], "torch.jit.freeze": [[1273, "torch-jit-freeze"]], "torch.isnan": [[1262, "torch-isnan"]], "torch.hsplit": [[1233, "torch-hsplit"]], "torch.isinf": [[1261, "torch-isinf"]], "torch.jit.annotate": [[1270, "torch-jit-annotate"]], "torch.fft.fftfreq": [[1124, "torch-fft-fftfreq"]], "torch.fft.irfft": [[1137, "torch-fft-irfft"]], "torch.fft.rfft2": [[1141, "torch-fft-rfft2"]], "torch.frac": [[1155, "torch-frac"]], "torch.func.grad_and_value": [[1166, "torch-func-grad-and-value"]], "torch.fft.irfftn": [[1139, "torch-fft-irfftn"]], "torch.float_power": [[1149, "torch-float-power"]], "torch.fft.hfft": [[1127, "torch-fft-hfft"]], "torch.full": [[1161, "torch-full"]], "torch.from_dlpack": [[1157, "torch-from-dlpack"]], "torch.fmin": [[1153, "torch-fmin"]], "torch.func.grad": [[1165, "torch-func-grad"]], "torch.func.jacfwd": [[1168, "torch-func-jacfwd"]], "torch.fft.irfft2": [[1138, "torch-fft-irfft2"]], "torch.fft.fftshift": [[1126, "torch-fft-fftshift"]], "torch.fft.fftn": [[1125, "torch-fft-fftn"]], "torch.func.linearize": [[1171, "torch-func-linearize"]], "torch.fft.rfftfreq": [[1142, "torch-fft-rfftfreq"]], "torch.fft.ihfft": [[1134, "torch-fft-ihfft"]], "torch.flipud": [[1148, "torch-flipud"]], "torch.fix": [[1144, "torch-fix"]], "torch.fft.ihfft2": [[1135, "torch-fft-ihfft2"]], "torch.from_file": [[1158, "torch-from-file"]], "torch.fft.ifft": [[1130, "torch-fft-ifft"]], "torch.fft.hfftn": [[1129, "torch-fft-hfftn"]], "torch.floor": [[1150, "torch-floor"]], "torch.flip": [[1146, "torch-flip"]], "torch.fmod": [[1154, "torch-fmod"]], "torch.func.hessian": [[1167, "torch-func-hessian"]], "torch.fft.fft2": [[1123, "torch-fft-fft2"]], "torch.fft.hfft2": [[1128, "torch-fft-hfft2"]], "torch.func.functionalize": [[1164, "torch-func-functionalize"]], "torch.frombuffer": [[1160, "torch-frombuffer"]], "torch.func.jacrev": [[1169, "torch-func-jacrev"]], "torch.fliplr": [[1147, "torch-fliplr"]], "torch.floor_divide": [[1151, "torch-floor-divide"]], "torch.func.jvp": [[1170, "torch-func-jvp"]], "torch.fft.ifft2": [[1131, "torch-fft-ifft2"]], "torch.from_numpy": [[1159, "torch-from-numpy"]], "torch.full_like": [[1162, "torch-full-like"]], "torch.func.replace_all_batch_norm_modules_": [[1172, "torch-func-replace-all-batch-norm-modules"]], "torch.flatten": [[1145, "torch-flatten"]], "torch.fft.rfft": [[1140, "torch-fft-rfft"]], "torch.fft.ifftshift": [[1133, "torch-fft-ifftshift"]], "torch.fmax": [[1152, "torch-fmax"]], "torch.func.functional_call": [[1163, "torch-func-functional-call"]], "torch.fft.rfftn": [[1143, "torch-fft-rfftn"]], "torch.fft.ifftn": [[1132, "torch-fft-ifftn"]], "torch.fft.ihfftn": [[1136, "torch-fft-ihfftn"]], "torch.fft.fft": [[1122, "torch-fft-fft"]], "torch.frexp": [[1156, "torch-frexp"]], "torch.empty": [[1107, "torch-empty"]], "torch.erfc": [[1114, "torch-erfc"]], "torch.cuda.set_rng_state_all": [[1078, "torch-cuda-set-rng-state-all"]], "torch.cuda.set_stream": [[1079, "torch-cuda-set-stream"]], "torch.divide": [[1102, "torch-divide"]], "torch.cuda.reset_peak_memory_stats": [[1072, "torch-cuda-reset-peak-memory-stats"]], "torch.eye": [[1119, "torch-eye"]], "torch.exp2": [[1117, "torch-exp2"]], "torch.fake_quantize_per_channel_affine": [[1120, "torch-fake-quantize-per-channel-affine"]], "torch.fake_quantize_per_tensor_affine": [[1121, "torch-fake-quantize-per-tensor-affine"]], "enable_grad": [[1110, "enable-grad"]], "torch.empty_strided": [[1109, "torch-empty-strided"]], "torch.cuda.seed": [[1073, "torch-cuda-seed"]], "torch.cuda.reset_max_memory_cached": [[1071, "torch-cuda-reset-max-memory-cached"]], "torch.dot": [[1103, "torch-dot"]], "torch.cuda.temperature": [[1083, "torch-cuda-temperature"]], "torch.dsplit": [[1104, "torch-dsplit"]], "torch.equal": [[1112, "torch-equal"]], "torch.erf": [[1113, "torch-erf"]], "torch.cuda.utilization": [[1084, "torch-cuda-utilization"]], "torch.cummax": [[1085, "torch-cummax"]], "torch.dist": [[1100, "torch-dist"]], "torch.exp": [[1116, "torch-exp"]], "torch.cuda.seed_all": [[1074, "torch-cuda-seed-all"]], "torch.cummin": [[1086, "torch-cummin"]], "torch.cuda.stream": [[1081, "torch-cuda-stream"]], "torch.cumprod": [[1087, "torch-cumprod"]], "torch.diag_embed": [[1094, "torch-diag-embed"]], "torch.det": [[1092, "torch-det"]], "torch.eq": [[1111, "torch-eq"]], "torch.erfinv": [[1115, "torch-erfinv"]], "torch.expm1": [[1118, "torch-expm1"]], "torch.empty_like": [[1108, "torch-empty-like"]], "torch.einsum": [[1106, "torch-einsum"]], "torch.diag": [[1093, "torch-diag"]], "torch.cuda.set_device": [[1075, "torch-cuda-set-device"]], "torch.cuda.set_per_process_memory_fraction": [[1076, "torch-cuda-set-per-process-memory-fraction"]], "torch.digamma": [[1099, "torch-digamma"]], "torch.cumulative_trapezoid": [[1089, "torch-cumulative-trapezoid"]], "torch.diff": [[1098, "torch-diff"]], "torch.diagflat": [[1095, "torch-diagflat"]], "torch.div": [[1101, "torch-div"]], "torch.dstack": [[1105, "torch-dstack"]], "torch.cuda.set_rng_state": [[1077, "torch-cuda-set-rng-state"]], "torch.cuda.synchronize": [[1082, "torch-cuda-synchronize"]], "torch.cumsum": [[1088, "torch-cumsum"]], "torch.diagonal": [[1096, "torch-diagonal"]], "torch.cuda.set_sync_debug_mode": [[1080, "torch-cuda-set-sync-debug-mode"]], "torch.diagonal_scatter": [[1097, "torch-diagonal-scatter"]], "torch.dequantize": [[1091, "torch-dequantize"]], "torch.deg2rad": [[1090, "torch-deg2rad"]], "torch.cuda.get_sync_debug_mode": [[1039, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.memory_stats": [[1062, "torch-cuda-memory-stats"]], "torch.cuda.nvtx.range": [[1066, "torch-cuda-nvtx-range"]], "torch.cuda.is_available": [[1045, "torch-cuda-is-available"]], "torch.cuda.get_arch_list": [[1032, "torch-cuda-get-arch-list"]], "torch.cuda.current_device": [[1024, "torch-cuda-current-device"]], "graph": [[1040, "graph"]], "torch.cuda.init": [[1042, "torch-cuda-init"]], "torch.cuda.memory_reserved": [[1060, "torch-cuda-memory-reserved"]], "torch.cuda.default_stream": [[1026, "torch-cuda-default-stream"]], "torch.cuda.manual_seed_all": [[1053, "torch-cuda-manual-seed-all"]], "torch.cuda.ipc_collect": [[1044, "torch-cuda-ipc-collect"]], "torch.cuda.get_device_capability": [[1033, "torch-cuda-get-device-capability"]], "torch.cuda.initial_seed": [[1043, "torch-cuda-initial-seed"]], "torch.cuda.memory_summary": [[1063, "torch-cuda-memory-summary"]], "torch.cuda.current_stream": [[1025, "torch-cuda-current-stream"]], "torch.cuda.nvtx.mark": [[1065, "torch-cuda-nvtx-mark"]], "torch.cuda.max_memory_cached": [[1055, "torch-cuda-max-memory-cached"]], "torch.cuda.nvtx.range_pop": [[1067, "torch-cuda-nvtx-range-pop"]], "torch.cuda.memory_allocated": [[1058, "torch-cuda-memory-allocated"]], "torch.cuda.max_memory_reserved": [[1056, "torch-cuda-max-memory-reserved"]], "torch.cuda.get_gencode_flags": [[1036, "torch-cuda-get-gencode-flags"]], "torch.cuda.device_count": [[1028, "torch-cuda-device-count"]], "torch.cuda.get_rng_state_all": [[1038, "torch-cuda-get-rng-state-all"]], "torch.cuda.manual_seed": [[1052, "torch-cuda-manual-seed"]], "torch.cuda.current_blas_handle": [[1023, "torch-cuda-current-blas-handle"]], "torch.cuda.max_memory_allocated": [[1054, "torch-cuda-max-memory-allocated"]], "torch.cuda.memory_snapshot": [[1061, "torch-cuda-memory-snapshot"]], "torch.cuda.empty_cache": [[1030, "torch-cuda-empty-cache"]], "torch.cuda.memory_cached": [[1059, "torch-cuda-memory-cached"]], "torch.cuda.memory_usage": [[1064, "torch-cuda-memory-usage"]], "torch.cuda.mem_get_info": [[1057, "torch-cuda-mem-get-info"]], "torch.cuda.get_device_name": [[1034, "torch-cuda-get-device-name"]], "torch.cuda.make_graphed_callables": [[1051, "torch-cuda-make-graphed-callables"]], "torch.cuda.graph_pool_handle": [[1041, "torch-cuda-graph-pool-handle"]], "torch.cuda.get_device_properties": [[1035, "torch-cuda-get-device-properties"]], "torch.cuda.get_allocator_backend": [[1031, "torch-cuda-get-allocator-backend"]], "torch.cuda.get_rng_state": [[1037, "torch-cuda-get-rng-state"]], "torch.cuda.comm.scatter": [[1022, "torch-cuda-comm-scatter"]], "torch.cuda.reset_max_memory_allocated": [[1070, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.comm.gather": [[1020, "torch-cuda-comm-gather"]], "torch.cuda.jiterator._create_jit_fn": [[1048, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1049, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.nvtx.range_push": [[1068, "torch-cuda-nvtx-range-push"]], "torch.cuda.is_initialized": [[1047, "torch-cuda-is-initialized"]], "torch.cuda.list_gpu_processes": [[1050, "torch-cuda-list-gpu-processes"]], "torch.cuda.comm.reduce_add": [[1021, "torch-cuda-comm-reduce-add"]], "torch.cuda.is_current_stream_capturing": [[1046, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.power_draw": [[1069, "torch-cuda-power-draw"]], "torch.cuda.comm.broadcast": [[1018, "torch-cuda-comm-broadcast"]], "torch.conj": [[988, "torch-conj"]], "torch.cpu.device_count": [[1000, "torch-cpu-device-count"]], "torch.clone": [[970, "torch-clone"]], "torch.cpu.stream": [[1003, "torch-cpu-stream"]], "torch.compiler.assume_constant_result": [[976, "torch-compiler-assume-constant-result"]], "torch.column_stack": [[971, "torch-column-stack"]], "torch.concat": [[985, "torch-concat"]], "torch.cpu.set_device": [[1002, "torch-cpu-set-device"]], "torch.cuda.caching_allocator_delete": [[1014, "torch-cuda-caching-allocator-delete"]], "torch.complex": [[984, "torch-complex"]], "torch.compiler.list_backends": [[982, "torch-compiler-list-backends"]], "CUDAGraph": [[1006, "cudagraph"]], "torch.cuda.OutOfMemoryError": [[1010, "torch-cuda-outofmemoryerror"]], "torch.clip": [[969, "torch-clip"]], "torch.cpu.current_device": [[998, "torch-cpu-current-device"]], "torch.cuda.comm.broadcast_coalesced": [[1019, "torch-cuda-comm-broadcast-coalesced"]], "torch.cpu.current_stream": [[999, "torch-cpu-current-stream"]], "torch.compiler.reset": [[983, "torch-compiler-reset"]], "torch.cos": [[992, "torch-cos"]], "torch.cuda.change_current_allocator": [[1016, "torch-cuda-change-current-allocator"]], "torch.copysign": [[990, "torch-copysign"]], "torch.combinations": [[972, "torch-combinations"]], "torch.conj_physical": [[989, "torch-conj-physical"]], "torch.cuda.caching_allocator_alloc": [[1013, "torch-cuda-caching-allocator-alloc"]], "torch.compiler.is_compiling": [[980, "torch-compiler-is-compiling"]], "torch.cov": [[995, "torch-cov"]], "torch.cpu.is_available": [[1001, "torch-cpu-is-available"]], "torch.compiler.is_dynamo_compiling": [[981, "torch-compiler-is-dynamo-compiling"]], "torch.cuda.can_device_access_peer": [[1015, "torch-cuda-can-device-access-peer"]], "torch.compile": [[973, "torch-compile"]], "torch.compiler.compile": [[977, "torch-compiler-compile"]], "CUDAPluggableAllocator": [[1007, "cudapluggableallocator"]], "torch.concatenate": [[986, "torch-concatenate"]], "torch.corrcoef": [[991, "torch-corrcoef"]], "torch.cosh": [[993, "torch-cosh"]], "torch.cuda.clock_rate": [[1017, "torch-cuda-clock-rate"]], "torch.cpu.synchronize": [[1004, "torch-cpu-synchronize"]], "ExternalStream": [[1009, "externalstream"]], "torch.count_nonzero": [[994, "torch-count-nonzero"]], "torch.compiler.cudagraph_mark_step_begin": [[978, "torch-compiler-cudagraph-mark-step-begin"]], "torch.cross": [[1005, "torch-cross"]], "torch.compiled_with_cxx11_abi": [[974, "torch-compiled-with-cxx11-abi"]], "StringTable": [[940, "stringtable"]], "MemRecordsAcc": [[939, "memrecordsacc"]], "torch.block_diag": [[952, "torch-block-diag"]], "torch.bmm": [[953, "torch-bmm"]], "torch.clamp": [[968, "torch-clamp"]], "torch.autograd.graph.Node.register_hook": [[925, "torch-autograd-graph-node-register-hook"]], "torch.ceil": [[962, "torch-ceil"]], "torch.bucketize": [[957, "torch-bucketize"]], "record_function": [[936, "record-function"]], "torch.cholesky_solve": [[966, "torch-cholesky-solve"]], "torch.chunk": [[967, "torch-chunk"]], "Interval": [[937, "interval"]], "torch.autograd.profiler.profile.export_chrome_trace": [[932, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.autograd.graph.Node.metadata": [[922, "torch-autograd-graph-node-metadata"]], "Kernel": [[938, "kernel"]], "torch.bitwise_not": [[947, "torch-bitwise-not"]], "torch.bitwise_and": [[945, "torch-bitwise-and"]], "torch.broadcast_shapes": [[954, "torch-broadcast-shapes"]], "torch.bincount": [[944, "torch-bincount"]], "torch.cholesky": [[964, "torch-cholesky"]], "torch.bartlett_window": [[942, "torch-bartlett-window"]], "torch.autograd.gradcheck.gradcheck": [[920, "torch-autograd-gradcheck-gradcheck"]], "torch.broadcast_tensors": [[955, "torch-broadcast-tensors"]], "torch.bitwise_right_shift": [[949, "torch-bitwise-right-shift"]], "torch.cartesian_prod": [[959, "torch-cartesian-prod"]], "torch.autograd.profiler.profile.total_average": [[935, "torch-autograd-profiler-profile-total-average"]], "torch.autograd.graph.increment_version": [[927, "torch-autograd-graph-increment-version"]], "torch.bitwise_xor": [[950, "torch-bitwise-xor"]], "torch.autograd.graph.Node.name": [[923, "torch-autograd-graph-node-name"]], "torch.autograd.graph.Node.register_prehook": [[926, "torch-autograd-graph-node-register-prehook"]], "torch.baddbmm": [[941, "torch-baddbmm"]], "torch.bitwise_or": [[948, "torch-bitwise-or"]], "torch.autograd.gradcheck.gradgradcheck": [[921, "torch-autograd-gradcheck-gradgradcheck"]], "torch.bernoulli": [[943, "torch-bernoulli"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[934, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.autograd.gradcheck.GradcheckError": [[919, "torch-autograd-gradcheck-gradcheckerror"]], "torch.cdist": [[961, "torch-cdist"]], "set_multithreading_enabled": [[918, "set-multithreading-enabled"]], "torch.cholesky_inverse": [[965, "torch-cholesky-inverse"]], "torch.autograd.profiler.parse_nvprof_trace": [[931, "torch-autograd-profiler-parse-nvprof-trace"]], "torch.autograd.graph.Node.next_functions": [[924, "torch-autograd-graph-node-next-functions"]], "torch.autograd.profiler.load_nvprof": [[930, "torch-autograd-profiler-load-nvprof"]], "torch.chain_matmul": [[963, "torch-chain-matmul"]], "torch.bitwise_left_shift": [[946, "torch-bitwise-left-shift"]], "torch.can_cast": [[958, "torch-can-cast"]], "KinetoStepTracker": [[929, "kinetosteptracker"]], "torch.autograd.profiler.profile.key_averages": [[933, "torch-autograd-profiler-profile-key-averages"]], "EnforceUnique": [[928, "enforceunique"]], "torch.broadcast_to": [[956, "torch-broadcast-to"]], "torch.blackman_window": [[951, "torch-blackman-window"]], "torch.cat": [[960, "torch-cat"]], "torch.argsort": [[877, "torch-argsort"]], "torch.autograd.forward_ad.make_dual": [[899, "torch-autograd-forward-ad-make-dual"]], "torch.asin": [[882, "torch-asin"]], "torch.arctan": [[871, "torch-arctan"]], "torch.argmax": [[875, "torch-argmax"]], "torch.arccos": [[867, "torch-arccos"]], "torch.atan": [[884, "torch-atan"]], "dual_level": [[896, "dual-level"]], "torch.arcsinh": [[870, "torch-arcsinh"]], "torch.autograd.Function.vmap": [[893, "torch-autograd-function-vmap"]], "torch.as_strided": [[879, "torch-as-strided"]], "torch.autograd.functional.jvp": [[912, "torch-autograd-functional-jvp"]], "torch.autograd.Function.jvp": [[892, "torch-autograd-function-jvp"]], "torch.argmin": [[876, "torch-argmin"]], "torch.asinh": [[883, "torch-asinh"]], "torch.autograd.Function.forward": [[891, "torch-autograd-function-forward"]], "InplaceFunction": [[906, "inplacefunction"]], "set_grad_enabled": [[917, "set-grad-enabled"]], "torch.are_deterministic_algorithms_enabled": [[874, "torch-are-deterministic-algorithms-enabled"]], "UnpackedDualTensor": [[895, "unpackeddualtensor"]], "torch.autograd.grad": [[915, "torch-autograd-grad"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[905, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.autograd.functional.hessian": [[909, "torch-autograd-functional-hessian"]], "torch.autograd.forward_ad.exit_dual_level": [[898, "torch-autograd-forward-ad-exit-dual-level"]], "NestedIOFunction": [[907, "nestediofunction"]], "torch.autograd.functional.jacobian": [[911, "torch-autograd-functional-jacobian"]], "torch.arccosh": [[868, "torch-arccosh"]], "torch.arctan2": [[872, "torch-arctan2"]], "BackwardCFunction": [[901, "backwardcfunction"]], "torch.autograd.functional.hvp": [[910, "torch-autograd-functional-hvp"]], "torch.argwhere": [[878, "torch-argwhere"]], "torch.autograd.forward_ad.enter_dual_level": [[897, "torch-autograd-forward-ad-enter-dual-level"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[904, "torch-autograd-function-functionctx-save-for-backward"]], "torch.atleast_1d": [[887, "torch-atleast-1d"]], "torch.autograd.backward": [[894, "torch-autograd-backward"]], "torch.as_tensor": [[880, "torch-as-tensor"]], "torch.autograd.forward_ad.unpack_dual": [[900, "torch-autograd-forward-ad-unpack-dual"]], "torch.atleast_2d": [[888, "torch-atleast-2d"]], "torch.arctanh": [[873, "torch-arctanh"]], "torch.autograd.function.once_differentiable": [[908, "torch-autograd-function-once-differentiable"]], "torch.atleast_3d": [[889, "torch-atleast-3d"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[903, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.arcsin": [[869, "torch-arcsin"]], "inference_mode": [[916, "inference-mode"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[902, "torch-autograd-function-functionctx-mark-dirty"]], "torch.atan2": [[885, "torch-atan2"]], "torch.atanh": [[886, "torch-atanh"]], "torch.asarray": [[881, "torch-asarray"]], "torch.autograd.functional.vhp": [[913, "torch-autograd-functional-vhp"]], "torch.autograd.functional.vjp": [[914, "torch-autograd-functional-vjp"]], "torch.autograd.Function.backward": [[890, "torch-autograd-function-backward"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "Train script": [[49, "train-script"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Error Propagation": [[38, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[38, "methods-and-classes"]], "CUDA Environment Variables": [[19, "cuda-environment-variables"]], "torch::deploy has been moved to pytorch/multipy": [[25, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Distributed communication package - torch.distributed": [[27, "distributed-communication-package-torch-distributed"]], "Backends": [[27, "backends"], [2072, "backends"]], "Backends that come with PyTorch": [[27, "backends-that-come-with-pytorch"]], "Which backend to use?": [[27, "which-backend-to-use"]], "Common environment variables": [[27, "common-environment-variables"]], "Choosing the network interface to use": [[27, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[27, "other-nccl-environment-variables"]], "Basics": [[27, "basics"], [2072, "basics"]], "Initialization": [[27, "initialization"]], "TCP initialization": [[27, "tcp-initialization"]], "Shared file-system initialization": [[27, "shared-file-system-initialization"]], "Environment variable initialization": [[27, "environment-variable-initialization"]], "Post-Initialization": [[27, "post-initialization"]], "Shutdown": [[27, "shutdown"]], "Reinitialization": [[27, "reinitialization"]], "Distributed Key-Value Store": [[27, "distributed-key-value-store"]], "Groups": [[27, "groups"]], "DeviceMesh": [[27, "devicemesh"]], "Point-to-point communication": [[27, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[27, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[27, "collective-functions"]], "Profiling Collective Communication": [[27, "profiling-collective-communication"]], "Multi-GPU collective functions": [[27, "multi-gpu-collective-functions"]], "Third-party backends": [[27, "third-party-backends"]], "Launch utility": [[27, "launch-utility"]], "Spawn utility": [[27, "spawn-utility"]], "Debugging torch.distributed applications": [[27, "debugging-torch-distributed-applications"]], "Python Breakpoint": [[27, "python-breakpoint"]], "Monitored Barrier": [[27, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[27, "torch-distributed-debug"]], "Logging": [[27, "logging"]], "Elastic Agent": [[36, "module-torch.distributed.elastic.agent"]], "Server": [[36, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[36, "concepts"]], "Implementations": [[36, "implementations"], [45, "implementations"]], "Extending the Agent": [[36, "extending-the-agent"]], "Watchdog in the Agent": [[36, "watchdog-in-the-agent"]], "Health Check Server": [[36, "health-check-server"]], "Generic Join Context Manager": [[28, "generic-join-context-manager"]], "torch.cuda": [[17, "module-torch.cuda"]], "Communication collectives": [[17, "communication-collectives"]], "Graphs (beta)": [[17, "graphs-beta"]], "Memory management": [[17, "memory-management"], [2049, "memory-management"], [2042, "memory-management"]], "NVIDIA Tools Extension (NVTX)": [[17, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[17, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[17, "stream-sanitizer-prototype"]], "Expiration Timers": [[48, "module-torch.distributed.elastic.timer"]], "Client Methods": [[48, "client-methods"]], "Server/Client Implementations": [[48, "server-client-implementations"]], "Writing a custom timer server/client": [[48, "writing-a-custom-timer-server-client"]], "Debug info logging": [[48, "module-torch.distributed.elastic.timer.debug_info_logging"]], "Probability distributions - torch.distributions": [[34, "module-torch.distributions"]], "Score function": [[34, "score-function"]], "Pathwise derivative": [[34, "pathwise-derivative"]], "Distribution": [[34, "distribution"]], "ExponentialFamily": [[34, "exponentialfamily"]], "Bernoulli": [[34, "bernoulli"]], "Beta": [[34, "beta"]], "Binomial": [[34, "binomial"]], "Categorical": [[34, "categorical"]], "Cauchy": [[34, "cauchy"]], "Chi2": [[34, "chi2"]], "ContinuousBernoulli": [[34, "continuousbernoulli"]], "Dirichlet": [[34, "dirichlet"]], "Exponential": [[34, "exponential"]], "FisherSnedecor": [[34, "fishersnedecor"]], "Gamma": [[34, "gamma"]], "Geometric": [[34, "geometric"]], "Gumbel": [[34, "gumbel"]], "HalfCauchy": [[34, "halfcauchy"]], "HalfNormal": [[34, "halfnormal"]], "Independent": [[34, "independent"]], "InverseGamma": [[34, "inversegamma"]], "Kumaraswamy": [[34, "kumaraswamy"]], "LKJCholesky": [[34, "lkjcholesky"]], "Laplace": [[34, "laplace"]], "LogNormal": [[34, "lognormal"]], "LowRankMultivariateNormal": [[34, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[34, "mixturesamefamily"]], "Multinomial": [[34, "multinomial"]], "MultivariateNormal": [[34, "multivariatenormal"]], "NegativeBinomial": [[34, "negativebinomial"]], "Normal": [[34, "normal"]], "OneHotCategorical": [[34, "onehotcategorical"]], "Pareto": [[34, "pareto"]], "Poisson": [[34, "poisson"]], "RelaxedBernoulli": [[34, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[34, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[34, "relaxedonehotcategorical"]], "StudentT": [[34, "studentt"]], "TransformedDistribution": [[34, "transformeddistribution"]], "Uniform": [[34, "uniform"]], "VonMises": [[34, "vonmises"]], "Weibull": [[34, "weibull"]], "Wishart": [[34, "wishart"]], "KL Divergence": [[34, "module-torch.distributions.kl"]], "Transforms": [[34, "module-torch.distributions.transforms"]], "Constraints": [[34, "module-torch.distributions.constraints"], [2042, "constraints"]], "Constraint Registry": [[34, "module-torch.distributions.constraint_registry"]], "torch.export": [[50, "torch-export"]], "Existing frameworks": [[50, "existing-frameworks"]], "Exporting a PyTorch Model": [[50, "exporting-a-pytorch-model"]], "An Example": [[50, "an-example"]], "Non-Strict Export": [[50, "non-strict-export"]], "Expressing Dynamism": [[50, "expressing-dynamism"]], "Serialization": [[50, "serialization"], [11, "serialization"], [2086, "serialization"]], "Specializations": [[50, "specializations"]], "Input Tensor Shapes": [[50, "input-tensor-shapes"]], "Python Primitives": [[50, "python-primitives"]], "Python Containers": [[50, "python-containers"]], "Limitations of torch.export": [[50, "limitations-of-torch-export"]], "Data/Shape-Dependent Control Flow": [[50, "data-shape-dependent-control-flow"]], "Missing Meta Kernels for Operators": [[50, "missing-meta-kernels-for-operators"]], "Additional Links for Export Users": [[50, null]], "Deep Dive for PyTorch Developers": [[50, null], [2089, null]], "Control Flow - Cond": [[12, "control-flow-cond"]], "Invariants of torch.ops.higher_order.cond": [[12, "invariants-of-torch-ops-higher-order-cond"]], "Multiprocessing": [[43, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[43, "starting-multiple-workers"]], "Process Context": [[43, "process-context"]], "torch.cpu": [[16, "module-torch.cpu"]], "C++": [[15, "c"]], "TorchScript C++ API": [[15, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[15, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[15, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[15, "authoring-models-in-c"]], "Packaging for C++": [[15, "packaging-for-c"]], "torch.utils.dlpack": [[35, "torch-utils-dlpack"]], "torch.utils.data": [[22, "module-torch.utils.data"]], "Dataset Types": [[22, "dataset-types"]], "Map-style datasets": [[22, "map-style-datasets"]], "Iterable-style datasets": [[22, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[22, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[22, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[22, "automatic-batching-default"]], "Disable automatic batching": [[22, "disable-automatic-batching"]], "Working with collate_fn": [[22, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[22, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[22, "single-process-data-loading-default"]], "Multi-process data loading": [[22, "multi-process-data-loading"]], "Platform-specific behaviors": [[22, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[22, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[22, "memory-pinning"]], "CUDA Stream Sanitizer": [[18, "cuda-stream-sanitizer"]], "Usage": [[18, "usage"], [30, null], [46, "usage"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Autograd": [[11, "autograd"]], "Optimizers": [[11, "optimizers"]], "Customization": [[37, "customization"]], "Launcher": [[37, "launcher"]], "Rendezvous Handler": [[37, "rendezvous-handler"]], "Metric Handler": [[37, "metric-handler"]], "Events Handler": [[37, "events-handler"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Custom Function utilities": [[1, "custom-function-utilities"]], "Numerical gradient checking": [[1, "module-torch.autograd.gradcheck"]], "Profiler": [[1, "profiler"]], "Debugging and anomaly detection": [[1, "debugging-and-anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "TorchElastic Kubernetes": [[41, "torchelastic-kubernetes"]], "Events": [[39, "module-torch.distributed.elastic.events"]], "API Methods": [[39, "api-methods"]], "Event Objects": [[39, "event-objects"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Subprocess Handling": [[47, "module-torch.distributed.elastic.multiprocessing.subprocess_handler"]], "Retrieve SubprocessHandler": [[47, "retrieve-subprocesshandler"]], "SubprocessHandler": [[47, "subprocesshandler"]], "torch.utils.deterministic": [[26, "module-torch.utils.deterministic"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [2072, "tutorials"], [2064, "tutorials"], [2065, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "DDP Communication Hooks": [[23, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[23, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[23, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[23, "default-communication-hooks"]], "PowerSGD Communication Hook": [[23, "powersgd-communication-hook"]], "PowerSGD State": [[23, "powersgd-state"]], "PowerSGD Hooks": [[23, "powersgd-hooks"]], "Debugging Communication Hooks": [[23, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[23, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[23, "acknowledgements"], [2065, "acknowledgements"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[33, "tensor-parallelism-torch-distributed-tensor-parallel"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Core Maintainers": [[9, "core-maintainers"], [10, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[9, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "Debugging Environment Variables": [[24, "debugging-environment-variables"]], "Torch Distributed Elastic": [[30, "torch-distributed-elastic"]], "Get Started": [[30, "get-started"]], "Documentation": [[30, "documentation"]], "API": [[30, null]], "Advanced": [[30, null]], "Plugins": [[30, null]], "Quickstart": [[44, "quickstart"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "AArch64 CPU": [[10, "aarch64-cpu"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "Metrics": [[42, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[42, "metric-handlers"]], "Methods": [[42, "methods"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[29, "distributed-checkpoint-torch-distributed-checkpoint"]], "torchrun (Elastic Launch)": [[46, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[46, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[46, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[46, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[46, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[46, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[46, "note-on-rendezvous-backend"]], "Definitions": [[46, "definitions"]], "Environment Variables": [[46, "environment-variables"]], "Deployment": [[46, "deployment"]], "Failure Modes": [[46, "failure-modes"]], "Membership Changes": [[46, "membership-changes"]], "Important Notices": [[46, "important-notices"]], "Pipeline Parallelism": [[32, "pipeline-parallelism"], [2065, "pipeline-parallelism"]], "Why Pipeline Parallel?": [[32, "why-pipeline-parallel"]], "What is torch.distributed.pipelining?": [[32, "module-torch.distributed.pipelining"]], "Techniques Explained": [[32, "techniques-explained"]], "Splitting a Model with pipeline": [[32, "splitting-a-model-with-pipeline"]], "Using PipelineSchedule for Execution": [[32, "using-pipelineschedule-for-execution"]], "Pipeline Transformation APIs": [[32, "pipeline-transformation-apis"]], "Microbatch Utilities": [[32, "module-torch.distributed.pipelining.microbatch"]], "Pipeline Schedules": [[32, "module-torch.distributed.pipelining.PipelineSchedule"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "Rendezvous": [[45, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[45, "registry"]], "Handler": [[45, "handler"]], "Exceptions": [[45, "exceptions"]], "Dynamic Rendezvous": [[45, "dynamic-rendezvous"]], "C10d Backend": [[45, "c10d-backend"]], "Etcd Backend": [[45, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[45, "etcd-rendezvous-legacy"]], "Etcd Store": [[45, "etcd-store"]], "Etcd Server": [[45, "etcd-server"]], "torch.__config__": [[13, "module-torch.__config__"]], "torch.utils.cpp_extension": [[14, "torch-utils-cpp-extension"]], "Distributed Optimizers": [[31, "distributed-optimizers"]], "PlaceholderObserver": [[826, "placeholderobserver"]], "default_float_qparams_observer": [[830, "default-float-qparams-observer"]], "default_dynamic_quant_observer": [[829, "default-dynamic-quant-observer"]], "get_default_qat_qconfig_mapping": [[856, "get-default-qat-qconfig-mapping"]], "load_observer_state_dict": [[837, "load-observer-state-dict"]], "float16_static_qconfig": [[852, "float16-static-qconfig"]], "default_qat_qconfig": [[847, "default-qat-qconfig"]], "default_activation_only_qconfig": [[843, "default-activation-only-qconfig"]], "MinMaxObserver": [[820, "minmaxobserver"]], "convert_fx": [[860, "convert-fx"]], "MovingAveragePerChannelMinMaxObserver": [[822, "movingaverageperchannelminmaxobserver"]], "prepare_qat": [[839, "prepare-qat"]], "QConfigMapping": [[855, "qconfigmapping"]], "default_weight_observer": [[835, "default-weight-observer"]], "ObserverBase": [[824, "observerbase"]], "default_debug_observer": [[828, "default-debug-observer"]], "get_observer_state_dict": [[836, "get-observer-state-dict"]], "float16_dynamic_qconfig": [[851, "float16-dynamic-qconfig"]], "per_channel_dynamic_qconfig": [[854, "per-channel-dynamic-qconfig"]], "MovingAverageMinMaxObserver": [[821, "movingaverageminmaxobserver"]], "quantize_qat": [[864, "quantize-qat"]], "quantize_dynamic": [[859, "quantize-dynamic"]], "torch.arange": [[866, "torch-arange"]], "StandaloneModuleConfigEntry": [[818, "standalonemoduleconfigentry"]], "default_qat_qconfig_v2": [[848, "default-qat-qconfig-v2"]], "HistogramObserver": [[819, "histogramobserver"]], "PrepareCustomConfig": [[817, "preparecustomconfig"]], "default_dynamic_qconfig": [[845, "default-dynamic-qconfig"]], "swap_module": [[865, "swap-module"]], "prepare_fx": [[862, "prepare-fx"]], "default_observer": [[832, "default-observer"]], "get_default_qconfig_mapping": [[857, "get-default-qconfig-mapping"]], "RecordingObserver": [[827, "recordingobserver"]], "default_per_channel_qconfig": [[846, "default-per-channel-qconfig"]], "default_histogram_observer": [[831, "default-histogram-observer"]], "quantize": [[858, "quantize"]], "propagate_qconfig": [[840, "propagate-qconfig"]], "prepare": [[838, "prepare"]], "QConfig": [[842, "qconfig"], [2067, "qconfig"]], "default_qconfig": [[849, "default-qconfig"]], "PerChannelMinMaxObserver": [[825, "perchannelminmaxobserver"]], "model_is_exported": [[841, "model-is-exported"]], "FuseCustomConfig": [[816, "fusecustomconfig"]], "default_debug_qconfig": [[844, "default-debug-qconfig"]], "prepare_qat_fx": [[863, "prepare-qat-fx"]], "default_weight_only_qconfig": [[850, "default-weight-only-qconfig"]], "default_placeholder_observer": [[834, "default-placeholder-observer"]], "fuse_fx": [[861, "fuse-fx"]], "float_qparams_weight_only_qconfig": [[853, "float-qparams-weight-only-qconfig"]], "NoopObserver": [[823, "noopobserver"]], "default_per_channel_weight_observer": [[833, "default-per-channel-weight-observer"]], "Distributed RPC Framework": [[2072, "distributed-rpc-framework"]], "RPC": [[2072, "rpc"]], "TensorPipe Backend": [[2072, "tensorpipe-backend"]], "RRef": [[2072, "rref"]], "More Information about RRef": [[2072, null]], "RemoteModule": [[2072, "remotemodule"]], "Distributed Autograd Framework": [[2072, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[2072, null]], "Distributed Optimizer": [[2072, "distributed-optimizer"], [2073, "distributed-optimizer"]], "torch.onnx": [[2058, "torch-onnx"]], "TorchDynamo-based ONNX Exporter": [[2058, "torchdynamo-based-onnx-exporter"], [2059, "torchdynamo-based-onnx-exporter"]], "TorchScript-based ONNX Exporter": [[2058, "torchscript-based-onnx-exporter"], [2061, "torchscript-based-onnx-exporter"]], "Contributing / Developing": [[2058, "contributing-developing"]], "Features for large-scale deployments": [[2050, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[2050, "fleet-wide-operator-profiling"]], "API usage logging": [[2050, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[2050, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[2050, "build-environment-considerations"]], "Common extension points": [[2050, "common-extension-points"]], "torch.Size": [[2076, "torch-size"]], "MPS backend": [[2052, "mps-backend"]], "torch.sparse": [[2077, "torch-sparse"]], "Why and when to use sparsity": [[2077, "why-and-when-to-use-sparsity"]], "Functionality overview": [[2077, "functionality-overview"]], "Operator overview": [[2077, "operator-overview"]], "Sparse Semi-Structured Tensors": [[2077, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[2077, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[2077, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[2077, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[2077, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[2077, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[2077, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[2077, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[2077, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[2077, "sparse-csr-tensor"]], "Construction of CSR tensors": [[2077, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[2077, "csr-tensor-operations"]], "Sparse CSC Tensor": [[2077, "sparse-csc-tensor"]], "Construction of CSC tensors": [[2077, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[2077, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[2077, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[2077, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[2077, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[2077, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[2077, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[2077, "linear-algebra-operations"]], "Tensor methods and sparse": [[2077, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[2077, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[2077, "other-functions"]], "Unary functions": [[2077, "unary-functions"]], "Threading Environment Variables": [[2085, "threading-environment-variables"]], "torch.ao.ns._numeric_suite": [[2087, "torch-ao-ns-numeric-suite"]], "Tensor Views": [[2081, "tensor-views"]], "A Simple Custom Module": [[2051, "a-simple-custom-module"]], "Modules as Building Blocks": [[2051, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[2051, "neural-network-training-with-modules"]], "Module State": [[2051, "module-state"]], "Module Initialization": [[2051, "module-initialization"]], "Module Hooks": [[2051, "module-hooks"]], "Advanced Features": [[2051, "advanced-features"]], "Distributed Training": [[2051, "distributed-training"]], "Profiling Performance": [[2051, "profiling-performance"]], "Improving Performance with Quantization": [[2051, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[2051, "improving-memory-usage-with-pruning"]], "Parametrizations": [[2051, "parametrizations"]], "Transforming Modules with FX": [[2051, "transforming-modules-with-fx"]], "HIP (ROCm) semantics": [[2049, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[2049, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[2049, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[2049, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[2049, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[2049, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[2049, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[2049, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[2049, "enabling-kernel-asserts"]], "torch.utils.tensorboard": [[2082, "module-torch.utils.tensorboard"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[2046, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[2046, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[2046, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[2046, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[2046, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "Distributed Data Parallel": [[2043, "distributed-data-parallel"]], "Example": [[2043, "example"], [2044, "example"]], "Internal Design": [[2043, "internal-design"]], "Implementation": [[2043, "implementation"], [2074, "implementation"]], "ProcessGroup": [[2043, "processgroup"]], "TorchDynamo DDPOptimizer": [[2043, "id1"]], "Tensor Attributes": [[2080, "tensor-attributes"]], "torch.dtype": [[2080, "torch-dtype"]], "torch.device": [[2080, "torch-device"]], "torch.layout": [[2080, "torch-layout"]], "torch.memory_format": [[2080, "torch-memory-format"]], "Distributed Autograd Design": [[2073, "distributed-autograd-design"]], "Background": [[2073, "background"], [2074, "background"]], "Autograd recording during the forward pass": [[2073, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[2073, "distributed-autograd-context"]], "Distributed Backward Pass": [[2073, "distributed-backward-pass"]], "Computing dependencies": [[2073, "computing-dependencies"]], "FAST mode algorithm": [[2073, "fast-mode-algorithm"]], "SMART mode algorithm": [[2073, "smart-mode-algorithm"]], "Simple end to end example": [[2073, "simple-end-to-end-example"]], "Reproducibility": [[2055, "reproducibility"]], "Controlling sources of randomness": [[2055, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[2055, "pytorch-random-number-generator"]], "Python": [[2055, "python"]], "Random number generators in other libraries": [[2055, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[2055, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[2055, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[2055, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[2055, "cuda-rnn-and-lstm"]], "Filling uninitialized memory": [[2055, "filling-uninitialized-memory"]], "DataLoader": [[2055, "dataloader"]], "FSDP Notes": [[2047, "fsdp-notes"]], "FSDP Prefetch Nuances": [[2047, "fsdp-prefetch-nuances"]], "Communication payload size": [[2047, "communication-payload-size"]], "FSDP buffers sizes": [[2047, "fsdp-buffers-sizes"]], "Quantization Backend Configuration": [[2069, "quantization-backend-configuration"], [2067, "quantization-backend-configuration"]], "Default values for native configurations": [[2069, "default-values-for-native-configurations"]], "Quantization Accuracy Debugging": [[2068, "quantization-accuracy-debugging"], [2067, "quantization-accuracy-debugging"]], "Data insensitive error": [[2068, "data-insensitive-error"]], "General tips": [[2068, "general-tips"]], "Int8 quantization tips": [[2068, "int8-quantization-tips"]], "Data sensitive error": [[2068, "data-sensitive-error"]], "Implementation error": [[2068, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[2068, "numerical-debugging-tooling-prototype"]], "torch.testing": [[2084, "module-torch.testing"]], "torch.compiler": [[2089, "torch-compiler"]], "Getting Started for PyTorch Users": [[2089, null]], "HowTo for PyTorch Backend Vendors": [[2089, null]], "Example: AlexNet from PyTorch to ONNX": [[2061, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[2061, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[2061, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[2061, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[2061, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[2061, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[2061, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[2061, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[2061, "reads-gets"]], "Writes / Sets": [[2061, "writes-sets"]], "Adding support for operators": [[2061, "adding-support-for-operators"]], "ONNX exporter internals": [[2061, "onnx-exporter-internals"]], "ATen operators": [[2061, "aten-operators"]], "List of supported operators": [[2061, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[2061, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[2061, "torch-autograd-functions"]], "Static Symbolic Method": [[2061, "static-symbolic-method"]], "Inline Autograd Function": [[2061, "inline-autograd-function"]], "Custom operators": [[2061, "custom-operators"]], "ONNX-script functions": [[2061, "onnx-script-functions"]], "C++ Operators": [[2061, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[2061, "discovering-all-unconvertible-aten-ops-at-once"]], "Classes": [[2061, "classes"]], "CUDA semantics": [[2042, "cuda-semantics"]], "TensorFloat-32 (TF32) on Ampere (and later) devices": [[2042, "tensorfloat-32-tf32-on-ampere-and-later-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[2042, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[2042, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[2042, "asynchronous-execution"]], "CUDA streams": [[2042, "cuda-streams"]], "Stream semantics of backward passes": [[2042, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[2042, "bc-note-using-grads-on-the-default-stream"]], "Optimizing memory usage  with PYTORCH_CUDA_ALLOC_CONF": [[2042, "optimizing-memory-usage-with-pytorch-cuda-alloc-conf"]], "Using custom memory allocators for CUDA": [[2042, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[2042, "cublas-workspaces"]], "cuFFT plan cache": [[2042, "cufft-plan-cache"]], "Just-in-Time Compilation": [[2042, "just-in-time-compilation"]], "Best practices": [[2042, "best-practices"]], "Device-agnostic code": [[2042, "device-agnostic-code"]], "Use pinned memory buffers": [[2042, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[2042, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[2042, "cuda-graphs"]], "Why CUDA Graphs?": [[2042, "why-cuda-graphs"]], "PyTorch API": [[2042, "pytorch-api"]], "Non-constraints": [[2042, "non-constraints"]], "Whole-network capture": [[2042, "whole-network-capture"]], "Partial-network capture": [[2042, "partial-network-capture"]], "Usage with torch.cuda.amp": [[2042, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[2042, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[2042, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[2042, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[2042, "id5"]], "Graph memory management": [[2042, "graph-memory-management"]], "Sharing memory across captures": [[2042, "sharing-memory-across-captures"]], "torch.package": [[2064, "torch-package"]], "Packaging your first model": [[2064, "packaging-your-first-model"]], "How do I\u2026": [[2064, "how-do-i"]], "See what is inside a package?": [[2064, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[2064, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[2064, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[2064, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[2064, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[2064, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[2064, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[2064, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[2064, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[2064, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[2064, "re-export-an-imported-object"]], "Package a TorchScript module?": [[2064, "package-a-torchscript-module"]], "Explanation": [[2064, "explanation"]], "torch.package Format Overview": [[2064, "torch-package-format-overview"]], "Framework files": [[2064, "framework-files"]], "User files": [[2064, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[2064, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[2064, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[2064, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[2064, "dependency-management"]], "intern": [[2064, "intern"]], "extern": [[2064, "extern"]], "mock": [[2064, "mock"]], "Refactoring": [[2064, "refactoring"]], "Patterns": [[2064, "patterns"]], "torch.package sharp edges": [[2064, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[2064, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[2064, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[2064, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[2064, "mangling"]], "CPU threading and TorchScript inference": [[2041, "cpu-threading-and-torchscript-inference"]], "Build options": [[2041, "build-options"]], "Runtime API": [[2041, "runtime-api"]], "Tuning the number of threads": [[2041, "tuning-the-number-of-threads"]], "Gradcheck mechanics": [[2048, "gradcheck-mechanics"]], "Notations and background information": [[2048, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[2048, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[2048, "real-to-real-functions"]], "Default real input numerical evaluation": [[2048, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[2048, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[2048, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[2048, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[2048, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[2048, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[2048, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[2048, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[2048, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[2048, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[2048, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[2048, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[2048, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[2048, "gradgradcheck-implementation"]], "Extending PyTorch": [[2044, "extending-pytorch"]], "Extending torch.autograd": [[2044, "extending-torch-autograd"]], "When to use": [[2044, "when-to-use"]], "When not to use": [[2044, "when-not-to-use"]], "How to use": [[2044, "how-to-use"]], "Combined or separate forward() and setup_context()": [[2044, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[2044, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[2044, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[2044, "extending-torch-nn"]], "Adding a Module": [[2044, "adding-a-module"]], "Extending torch Python API": [[2044, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[2044, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[2044, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[2044, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[2044, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[2044, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[2044, "extending-torch-native-api"]], "Extending all torch API with Modes": [[2044, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[2044, "writing-custom-c-extensions"]], "torch.random": [[2071, "module-torch.random"]], "Dependencies": [[2059, "dependencies"]], "A simple example": [[2059, "a-simple-example"]], "Inspecting the ONNX model using GUI": [[2059, "inspecting-the-onnx-model-using-gui"]], "Diagnosing issues with SARIF": [[2059, "diagnosing-issues-with-sarif"]], "ONNX Diagnostic SARIF Rules": [[2059, null]], "Quantization API Reference": [[2070, "quantization-api-reference"], [2067, "quantization-api-reference"]], "torch.ao.quantization": [[2070, "torch-ao-quantization"]], "Top level APIs": [[2070, "top-level-apis"]], "Preparing model for quantization": [[2070, "preparing-model-for-quantization"]], "Utility functions": [[2070, "utility-functions"], [2056, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[2070, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[2070, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[2070, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[2070, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[2070, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[2070, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.export_utils": [[2070, "torch-ao-quantization-pt2e-export-utils"]], "torch (quantization related functions)": [[2070, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[2070, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[2070, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[2070, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[2070, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[2070, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[2070, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[2070, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2070, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[2070, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2070, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[2070, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[2070, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[2070, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[2070, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[2070, "quantized-dtypes-and-quantization-schemes"]], "torch.special": [[2078, "torch-special"]], "Quantization": [[2067, "module-torch.ao.quantization"]], "Introduction to Quantization": [[2067, "introduction-to-quantization"]], "Quantization API Summary": [[2067, "quantization-api-summary"]], "Eager Mode Quantization": [[2067, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[2067, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[2067, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[2067, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[2067, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype - maintenance mode) FX Graph Mode Quantization": [[2067, "prototype-maintenance-mode-fx-graph-mode-quantization"]], "(Prototype) PyTorch 2 Export Quantization": [[2067, "prototype-pytorch-2-export-quantization"]], "Quantization Stack": [[2067, "quantization-stack"]], "Quantized Model": [[2067, "quantized-model"]], "Quantized Tensor": [[2067, "quantized-tensor"]], "Quantize and Dequantize": [[2067, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[2067, "quantized-operators-modules"]], "Quantized Engine": [[2067, "quantized-engine"]], "Quantization Flow": [[2067, "quantization-flow"]], "Observer and FakeQuantize": [[2067, "observer-and-fakequantize"]], "General Quantization Flow": [[2067, "general-quantization-flow"]], "Quantization Support Matrix": [[2067, "quantization-support-matrix"]], "Quantization Mode Support": [[2067, "quantization-mode-support"]], "Quantization Flow Support": [[2067, "quantization-flow-support"]], "Backend/Hardware Support": [[2067, "backend-hardware-support"]], "Note for native CPU backends": [[2067, "note-for-native-cpu-backends"]], "Operator Support": [[2067, "operator-support"]], "Quantization Customizations": [[2067, "quantization-customizations"]], "Quantization Custom Module API": [[2067, "quantization-custom-module-api"]], "Best Practices": [[2067, "best-practices"]], "Common Errors": [[2067, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[2067, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[2067, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[2067, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[2067, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch": [[2086, "module-torch"]], "Tensors": [[2086, "tensors"]], "Creation Ops": [[2086, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[2086, "indexing-slicing-joining-mutating-ops"]], "Generators": [[2086, "generators"]], "Random sampling": [[2086, "random-sampling"]], "In-place random sampling": [[2086, "in-place-random-sampling"]], "Quasi-random sampling": [[2086, "quasi-random-sampling"]], "Parallelism": [[2086, "parallelism"]], "Math operations": [[2086, "math-operations"]], "Pointwise Ops": [[2086, "pointwise-ops"]], "Reduction Ops": [[2086, "reduction-ops"]], "Comparison Ops": [[2086, "comparison-ops"]], "Spectral Ops": [[2086, "spectral-ops"]], "Other Operations": [[2086, "other-operations"]], "BLAS and LAPACK Operations": [[2086, "blas-and-lapack-operations"]], "Foreach Operations": [[2086, "foreach-operations"]], "Symbolic Numbers": [[2086, "symbolic-numbers"]], "Export Path": [[2086, "export-path"]], "Control Flow": [[2086, "control-flow"]], "Optimizations": [[2086, "optimizations"]], "Operator Tags": [[2086, "operator-tags"]], "torch.profiler": [[2066, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[2066, "intel-instrumentation-and-tracing-technology-apis"]], "Numerical accuracy": [[2054, "numerical-accuracy"]], "Batched computations or slice computations": [[2054, "batched-computations-or-slice-computations"]], "Extremal values": [[2054, "extremal-values"]], "Linear algebra (torch.linalg)": [[2054, "linear-algebra-torch-linalg"]], "Non-finite values": [[2054, "non-finite-values"]], "Extremal values in linalg": [[2054, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere (and later) devices": [[2054, "tensorfloat-32-tf32-on-nvidia-ampere-and-later-devices"]], "Reduced Precision Reduction for FP16 and BF16 GEMMs": [[2054, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[2054, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "torch.optim": [[2063, "module-torch.optim"]], "How to use an optimizer": [[2063, "how-to-use-an-optimizer"]], "Constructing it": [[2063, "constructing-it"]], "Per-parameter options": [[2063, "per-parameter-options"]], "Taking an optimization step": [[2063, "taking-an-optimization-step"]], "optimizer.step()": [[2063, "optimizer-step"]], "optimizer.step(closure)": [[2063, "optimizer-step-closure"]], "Base class": [[2063, "base-class"]], "Algorithms": [[2063, "algorithms"]], "How to adjust learning rate": [[2063, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[2063, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[2063, "constructing-averaged-models"]], "Custom averaging strategies": [[2063, "custom-averaging-strategies"]], "SWA learning rate schedules": [[2063, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[2063, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[2063, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[2063, "putting-it-all-together-ema"]], "torch.Tensor": [[2083, "torch-tensor"]], "Data types": [[2083, "data-types"]], "Initializing and basic operations": [[2083, "initializing-and-basic-operations"]], "Tensor class reference": [[2083, "tensor-class-reference"]], "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models": [[2090, "aotinductor-ahead-of-time-compilation-for-torch-export-ed-models"]], "Model Compilation": [[2090, "model-compilation"]], "Inference in C++": [[2090, "inference-in-c"]], "Broadcasting semantics": [[2040, "broadcasting-semantics"]], "General semantics": [[2040, "general-semantics"]], "In-place semantics": [[2040, "in-place-semantics"]], "Backwards compatibility": [[2040, "backwards-compatibility"]], "ONNX supported TorchScript operators": [[2062, "onnx-supported-torchscript-operators"]], "Supported operators": [[2062, "supported-operators"]], "ONNX support for TorchScript operators": [[2062, "id1"]], "Unsupported operators": [[2062, "unsupported-operators"], [2062, "id2"]], "torch.signal": [[2075, "module-torch.signal"]], "torch.signal.windows": [[2075, "module-torch.signal.windows"]], "Remote Reference Protocol": [[2074, "remote-reference-protocol"]], "RRef Lifetime": [[2074, "rref-lifetime"]], "Design Reasoning": [[2074, "design-reasoning"]], "Protocol Scenarios": [[2074, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[2074, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[2074, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[2074, "owner-share-rref-with-user"]], "User Share RRef with User": [[2074, "user-share-rref-with-user"]], "Extending torch.func with autograd.Function": [[2045, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[2045, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[2045, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[2045, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[2045, "limitations-and-gotchas"]], "torch.vmap() Support": [[2045, "torch-vmap-support"]], "Automatically generate a vmap rule": [[2045, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[2045, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[2045, "torch-func-jvp-support"]], "torch.Storage": [[2079, "torch-storage"]], "torch.ao.ns._numeric_suite_fx": [[2088, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[2088, "torch-ao-ns-fx-utils"]], "Model Parallelism using multiple GPUs": [[2065, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[2065, "pipelined-execution"]], "Pipe APIs in PyTorch": [[2065, "pipe-apis-in-pytorch"]], "Skip connections": [[2065, "skip-connections"]], "Serialization semantics": [[2056, "serialization-semantics"]], "Table of Contents": [[2056, "table-of-contents"]], "Saving and loading tensors": [[2056, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[2056, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[2056, "saving-and-loading-torch-nn-modules"]], "Serialized file format for torch.save": [[2056, "serialized-file-format-for-torch-save"]], "Serializing torch.nn.Modules and loading them in C++": [[2056, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[2056, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[2056, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[2056, "torch-full-always-inferring-a-float-dtype"]], "Multiprocessing best practices": [[2053, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[2053, "cuda-in-multiprocessing"]], "Best practices and tips": [[2053, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[2053, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[2053, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[2053, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[2053, "hogwild"]], "CPU in multiprocessing": [[2053, "cpu-in-multiprocessing"]], "CPU oversubscription": [[2053, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[2053, "avoid-cpu-oversubscription"]], "Windows FAQ": [[2057, "windows-faq"]], "Building from source": [[2057, "building-from-source"]], "Include optional components": [[2057, "include-optional-components"]], "Speeding CUDA build for Windows": [[2057, "speeding-cuda-build-for-windows"]], "One key install script": [[2057, "one-key-install-script"]], "Extension": [[2057, "extension"]], "CFFI Extension": [[2057, "cffi-extension"]], "Cpp Extension": [[2057, "cpp-extension"]], "Installation": [[2057, "installation"]], "Package not found in win-32 channel.": [[2057, "package-not-found-in-win-32-channel"]], "Import error": [[2057, "import-error"]], "Usage (multiprocessing)": [[2057, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[2057, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[2057, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[2057, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[2057, "cuda-ipc-operations"]], "ONNX Backend for TorchDynamo": [[2060, "onnx-backend-for-torchdynamo"]], "threshold": [[784, "threshold"]], "adaptive_avg_pool3d": [[767, "adaptive-avg-pool3d"]], "disable_fake_quant": [[810, "disable-fake-quant"]], "default_weight_fake_quant": [[809, "default-weight-fake-quant"]], "hardtanh": [[778, "hardtanh"]], "upsample_nearest": [[787, "upsample-nearest"]], "default_per_channel_weight_fake_quant": [[808, "default-per-channel-weight-fake-quant"]], "avg_pool2d": [[768, "avg-pool2d"]], "upsample_bilinear": [[786, "upsample-bilinear"]], "celu": [[770, "celu"]], "fuse_modules": [[814, "fuse-modules"]], "default_fake_quant": [[803, "default-fake-quant"]], "conv1d": [[772, "conv1d"]], "conv2d": [[773, "conv2d"]], "default_histogram_fake_quant": [[807, "default-histogram-fake-quant"]], "ObservationType": [[796, "observationtype"]], "interpolate": [[779, "interpolate"]], "QuantWrapper": [[790, "quantwrapper"]], "default_fused_per_channel_wt_fake_quant": [[805, "default-fused-per-channel-wt-fake-quant"]], "adaptive_avg_pool2d": [[766, "adaptive-avg-pool2d"]], "add_quant_dequant": [[791, "add-quant-dequant"]], "convert": [[797, "convert"]], "default_eval_fn": [[798, "default-eval-fn"]], "default_fused_wt_fake_quant": [[806, "default-fused-wt-fake-quant"]], "enable_observer": [[813, "enable-observer"]], "DTypeWithConstraints": [[795, "dtypewithconstraints"]], "DTypeConfig": [[794, "dtypeconfig"]], "disable_observer": [[811, "disable-observer"]], "ConvertCustomConfig": [[815, "convertcustomconfig"]], "max_pool2d": [[783, "max-pool2d"]], "hardswish": [[777, "hardswish"]], "avg_pool3d": [[769, "avg-pool3d"]], "elu": [[775, "elu"]], "max_pool1d": [[782, "max-pool1d"]], "clamp": [[771, "clamp"]], "DeQuantStub": [[788, "dequantstub"]], "linear": [[781, "linear"]], "conv3d": [[774, "conv3d"]], "BackendConfig": [[792, "backendconfig"]], "FusedMovingAvgObsFakeQuantize": [[802, "fusedmovingavgobsfakequantize"]], "FixedQParamsFakeQuantize": [[801, "fixedqparamsfakequantize"]], "BackendPatternConfig": [[793, "backendpatternconfig"]], "enable_fake_quant": [[812, "enable-fake-quant"]], "FakeQuantizeBase": [[800, "fakequantizebase"]], "FakeQuantize": [[799, "fakequantize"]], "default_fused_act_fake_quant": [[804, "default-fused-act-fake-quant"]], "QuantStub": [[789, "quantstub"]], "leaky_relu": [[780, "leaky-relu"]], "hardsigmoid": [[776, "hardsigmoid"]], "upsample": [[785, "upsample"]], "LinearReLU": [[729, "linearrelu"], [720, "linearrelu"], [728, "linearrelu"], [711, "linearrelu"]], "ConvBnReLU3d": [[717, "convbnrelu3d"], [707, "convbnrelu3d"]], "BNReLU2d": [[723, "bnrelu2d"], [700, "bnrelu2d"]], "freeze_bn_stats": [[721, "freeze-bn-stats"]], "ConvBnReLU1d": [[715, "convbnrelu1d"], [705, "convbnrelu1d"]], "update_bn_stats": [[722, "update-bn-stats"]], "ConvReLU3d": [[727, "convrelu3d"], [719, "convrelu3d"], [710, "convrelu3d"]], "BNReLU3d": [[724, "bnrelu3d"], [701, "bnrelu3d"]], "ConvReLU2d": [[718, "convrelu2d"], [726, "convrelu2d"], [709, "convrelu2d"]], "ConvBn3d": [[714, "convbn3d"], [704, "convbn3d"]], "ConvBnReLU2d": [[716, "convbnrelu2d"], [706, "convbnrelu2d"]], "QFunctional": [[757, "qfunctional"]], "ConvReLU1d": [[725, "convrelu1d"], [708, "convrelu1d"]], "FXFloatFunctional": [[747, "fxfloatfunctional"]], "FloatFunctional": [[748, "floatfunctional"]], "torch.addcdiv": [[687, "torch-addcdiv"]], "torch._foreach_sqrt_": [[674, "torch-foreach-sqrt"]], "torch._foreach_sigmoid_": [[668, "torch-foreach-sigmoid"]], "torch.any": [[699, "torch-any"]], "torch._foreach_tan_": [[676, "torch-foreach-tan"]], "torch.addr": [[691, "torch-addr"]], "torch.all": [[693, "torch-all"]], "torch.allclose": [[694, "torch-allclose"]], "torch.acos": [[683, "torch-acos"]], "torch._foreach_round": [[665, "torch-foreach-round"]], "torch._foreach_trunc": [[677, "torch-foreach-trunc"]], "torch.aminmax": [[697, "torch-aminmax"]], "torch.addbmm": [[686, "torch-addbmm"]], "torch._foreach_reciprocal": [[663, "torch-foreach-reciprocal"]], "torch.addcmul": [[688, "torch-addcmul"]], "torch._foreach_sqrt": [[673, "torch-foreach-sqrt"]], "torch.addmv": [[690, "torch-addmv"]], "torch.amax": [[695, "torch-amax"]], "torch._foreach_sin_": [[670, "torch-foreach-sin"]], "torch.adjoint": [[692, "torch-adjoint"]], "ConvBn1d": [[702, "convbn1d"], [712, "convbn1d"]], "torch._foreach_tan": [[675, "torch-foreach-tan"]], "torch.add": [[685, "torch-add"]], "torch.angle": [[698, "torch-angle"]], "torch._foreach_sinh": [[671, "torch-foreach-sinh"]], "torch._foreach_sin": [[669, "torch-foreach-sin"]], "torch.absolute": [[682, "torch-absolute"]], "torch._foreach_trunc_": [[678, "torch-foreach-trunc"]], "ConvBn2d": [[713, "convbn2d"], [703, "convbn2d"]], "torch.abs": [[681, "torch-abs"]], "torch._foreach_round_": [[666, "torch-foreach-round"]], "torch._foreach_sinh_": [[672, "torch-foreach-sinh"]], "torch._foreach_sigmoid": [[667, "torch-foreach-sigmoid"]], "torch._logging.set_logs": [[680, "torch-logging-set-logs"]], "torch.amin": [[696, "torch-amin"]], "torch.addmm": [[689, "torch-addmm"]], "torch._foreach_reciprocal_": [[664, "torch-foreach-reciprocal"]], "torch.acosh": [[684, "torch-acosh"]], "torch._foreach_zero_": [[679, "torch-foreach-zero"]], "torch.Tensor.values": [[614, "torch-tensor-values"]], "torch.Tensor.view_as": [[618, "torch-tensor-view-as"]], "torch._foreach_floor": [[647, "torch-foreach-floor"]], "torch._foreach_abs_": [[626, "torch-foreach-abs"]], "torch.Tensor.unsqueeze_": [[612, "torch-tensor-unsqueeze"]], "torch._foreach_exp": [[643, "torch-foreach-exp"]], "torch._foreach_acos_": [[628, "torch-foreach-acos"]], "torch._foreach_log2_": [[659, "torch-foreach-log2"]], "torch._foreach_log1p": [[656, "torch-foreach-log1p"]], "torch._foreach_erfc": [[641, "torch-foreach-erfc"]], "torch._foreach_ceil_": [[634, "torch-foreach-ceil"]], "torch._foreach_log_": [[660, "torch-foreach-log"]], "torch._foreach_abs": [[625, "torch-foreach-abs"]], "torch._foreach_frac": [[649, "torch-foreach-frac"]], "torch.Tensor.where": [[620, "torch-tensor-where"]], "torch._foreach_erf_": [[640, "torch-foreach-erf"]], "torch._foreach_log": [[653, "torch-foreach-log"]], "torch._foreach_acos": [[627, "torch-foreach-acos"]], "torch._foreach_log2": [[658, "torch-foreach-log2"]], "torch._foreach_erfc_": [[642, "torch-foreach-erfc"]], "torch._foreach_atan_": [[632, "torch-foreach-atan"]], "torch._foreach_cosh": [[637, "torch-foreach-cosh"]], "torch._foreach_log10": [[654, "torch-foreach-log10"]], "torch.Tensor.xlogy_": [[622, "torch-tensor-xlogy"]], "torch._foreach_log1p_": [[657, "torch-foreach-log1p"]], "torch.Tensor.view": [[617, "torch-tensor-view"]], "torch.Tensor.zero_": [[623, "torch-tensor-zero"]], "torch._foreach_asin": [[629, "torch-foreach-asin"]], "torch._foreach_exp_": [[644, "torch-foreach-exp"]], "torch._foreach_neg_": [[662, "torch-foreach-neg"]], "torch._foreach_neg": [[661, "torch-foreach-neg"]], "torch.Tensor.xlogy": [[621, "torch-tensor-xlogy"]], "torch._foreach_floor_": [[648, "torch-foreach-floor"]], "torch._foreach_cos_": [[636, "torch-foreach-cos"]], "torch.Tensor.untyped_storage": [[613, "torch-tensor-untyped-storage"]], "torch._foreach_asin_": [[630, "torch-foreach-asin"]], "torch.Tensor.var": [[615, "torch-tensor-var"]], "torch._assert": [[624, "torch-assert"]], "torch.Tensor.vsplit": [[619, "torch-tensor-vsplit"]], "torch._foreach_lgamma_": [[652, "torch-foreach-lgamma"]], "torch.Tensor.vdot": [[616, "torch-tensor-vdot"]], "torch._foreach_cos": [[635, "torch-foreach-cos"]], "torch._foreach_expm1_": [[646, "torch-foreach-expm1"]], "torch._foreach_cosh_": [[638, "torch-foreach-cosh"]], "torch._foreach_frac_": [[650, "torch-foreach-frac"]], "torch._foreach_atan": [[631, "torch-foreach-atan"]], "torch._foreach_ceil": [[633, "torch-foreach-ceil"]], "torch._foreach_lgamma": [[651, "torch-foreach-lgamma"]], "torch._foreach_log10_": [[655, "torch-foreach-log10"]], "torch._foreach_expm1": [[645, "torch-foreach-expm1"]], "torch._foreach_erf": [[639, "torch-foreach-erf"]], "torch.Tensor.swapdims": [[569, "torch-tensor-swapdims"]], "torch.Tensor.transpose_": [[593, "torch-tensor-transpose"]], "torch.Tensor.tolist": [[589, "torch-tensor-tolist"]], "torch.Tensor.type_as": [[604, "torch-tensor-type-as"]], "torch.Tensor.type": [[603, "torch-tensor-type"]], "torch.Tensor.unsqueeze": [[611, "torch-tensor-unsqueeze"]], "torch.Tensor.tan_": [[575, "torch-tensor-tan"]], "torch.Tensor.swapaxes": [[568, "torch-tensor-swapaxes"]], "torch.Tensor.sub_": [[562, "torch-tensor-sub"]], "torch.Tensor.t": [[570, "torch-tensor-t"]], "torch.Tensor.tril_": [[596, "torch-tensor-tril"]], "torch.Tensor.uniform_": [[608, "torch-tensor-uniform"]], "torch.Tensor.sum_to_size": [[566, "torch-tensor-sum-to-size"]], "torch.Tensor.tensor_split": [[578, "torch-tensor-tensor-split"]], "torch.Tensor.unique_consecutive": [[610, "torch-tensor-unique-consecutive"]], "torch.Tensor.to_sparse_bsr": [[585, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.sum": [[565, "torch-tensor-sum"]], "torch.Tensor.t_": [[571, "torch-tensor-t"]], "torch.Tensor.tile": [[579, "torch-tensor-tile"]], "torch.Tensor.to_mkldnn": [[582, "torch-tensor-to-mkldnn"]], "torch.Tensor.to_sparse_csr": [[588, "torch-tensor-to-sparse-csr"]], "torch.Tensor.topk": [[590, "torch-tensor-topk"]], "torch.Tensor.true_divide_": [[600, "torch-tensor-true-divide"]], "torch.Tensor.trunc": [[601, "torch-tensor-trunc"]], "torch.Tensor.unbind": [[605, "torch-tensor-unbind"]], "torch.Tensor.unfold": [[607, "torch-tensor-unfold"]], "torch.Tensor.unique": [[609, "torch-tensor-unique"]], "torch.Tensor.tril": [[595, "torch-tensor-tril"]], "torch.Tensor.subtract": [[563, "torch-tensor-subtract"]], "torch.Tensor.take_along_dim": [[573, "torch-tensor-take-along-dim"]], "torch.Tensor.subtract_": [[564, "torch-tensor-subtract"]], "torch.Tensor.sub": [[561, "torch-tensor-sub"]], "torch.Tensor.tan": [[574, "torch-tensor-tan"]], "torch.Tensor.to_sparse_coo": [[586, "torch-tensor-to-sparse-coo"]], "torch.Tensor.to_dense": [[581, "torch-tensor-to-dense"]], "torch.Tensor.transpose": [[592, "torch-tensor-transpose"]], "torch.Tensor.triu_": [[598, "torch-tensor-triu"]], "torch.Tensor.trunc_": [[602, "torch-tensor-trunc"]], "torch.Tensor.tanh_": [[577, "torch-tensor-tanh"]], "torch.Tensor.tanh": [[576, "torch-tensor-tanh"]], "torch.Tensor.to": [[580, "torch-tensor-to"]], "torch.Tensor.triu": [[597, "torch-tensor-triu"]], "torch.Tensor.to_sparse": [[583, "torch-tensor-to-sparse"]], "torch.Tensor.trace": [[591, "torch-tensor-trace"]], "torch.Tensor.take": [[572, "torch-tensor-take"]], "torch.Tensor.triangular_solve": [[594, "torch-tensor-triangular-solve"]], "torch.Tensor.true_divide": [[599, "torch-tensor-true-divide"]], "torch.Tensor.to_sparse_bsc": [[584, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.to_sparse_csc": [[587, "torch-tensor-to-sparse-csc"]], "torch.Tensor.svd": [[567, "torch-tensor-svd"]], "torch.Tensor.unflatten": [[606, "torch-tensor-unflatten"]], "torch.Tensor.sparse_dim": [[543, "torch-tensor-sparse-dim"]], "torch.Tensor.scatter_add_": [[515, "torch-tensor-scatter-add"]], "torch.Tensor.select": [[518, "torch-tensor-select"]], "torch.Tensor.squeeze_": [[553, "torch-tensor-squeeze"]], "torch.Tensor.sinc": [[533, "torch-tensor-sinc"]], "torch.Tensor.select_scatter": [[519, "torch-tensor-select-scatter"]], "torch.Tensor.scatter_add": [[514, "torch-tensor-scatter-add"]], "torch.Tensor.sgn_": [[522, "torch-tensor-sgn"]], "torch.Tensor.signbit": [[530, "torch-tensor-signbit"]], "torch.Tensor.sin": [[531, "torch-tensor-sin"]], "torch.Tensor.storage_type": [[559, "torch-tensor-storage-type"]], "torch.Tensor.stride": [[560, "torch-tensor-stride"]], "torch.Tensor.smm": [[540, "torch-tensor-smm"]], "torch.Tensor.sparse_resize_": [[545, "torch-tensor-sparse-resize"]], "torch.Tensor.squeeze": [[552, "torch-tensor-squeeze"]], "torch.Tensor.size": [[537, "torch-tensor-size"]], "torch.Tensor.sparse_resize_and_clear_": [[546, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.rsqrt_": [[511, "torch-tensor-rsqrt"]], "torch.Tensor.set_": [[520, "torch-tensor-set"]], "torch.Tensor.stft": [[556, "torch-tensor-stft"]], "torch.Tensor.sort": [[542, "torch-tensor-sort"]], "torch.Tensor.storage_offset": [[558, "torch-tensor-storage-offset"]], "torch.Tensor.scatter_reduce": [[516, "torch-tensor-scatter-reduce"]], "torch.Tensor.sigmoid_": [[527, "torch-tensor-sigmoid"]], "torch.Tensor.short": [[525, "torch-tensor-short"]], "torch.Tensor.sgn": [[521, "torch-tensor-sgn"]], "torch.Tensor.rsqrt": [[510, "torch-tensor-rsqrt"]], "torch.Tensor.sin_": [[532, "torch-tensor-sin"]], "torch.Tensor.slice_scatter": [[538, "torch-tensor-slice-scatter"]], "torch.Tensor.sigmoid": [[526, "torch-tensor-sigmoid"]], "torch.Tensor.scatter": [[512, "torch-tensor-scatter"]], "torch.Tensor.sqrt": [[548, "torch-tensor-sqrt"]], "torch.Tensor.sign": [[528, "torch-tensor-sign"]], "torch.Tensor.sqrt_": [[549, "torch-tensor-sqrt"]], "torch.Tensor.scatter_": [[513, "torch-tensor-scatter"]], "torch.Tensor.sspaddmm": [[554, "torch-tensor-sspaddmm"]], "torch.Tensor.std": [[555, "torch-tensor-std"]], "torch.Tensor.sign_": [[529, "torch-tensor-sign"]], "torch.Tensor.split": [[547, "torch-tensor-split"]], "torch.Tensor.square": [[550, "torch-tensor-square"]], "torch.Tensor.sinh": [[535, "torch-tensor-sinh"]], "torch.Tensor.shape": [[523, "torch-tensor-shape"]], "torch.Tensor.slogdet": [[539, "torch-tensor-slogdet"]], "torch.Tensor.softmax": [[541, "torch-tensor-softmax"]], "torch.Tensor.sinh_": [[536, "torch-tensor-sinh"]], "torch.Tensor.square_": [[551, "torch-tensor-square"]], "torch.Tensor.scatter_reduce_": [[517, "torch-tensor-scatter-reduce"]], "torch.Tensor.sparse_mask": [[544, "torch-tensor-sparse-mask"]], "torch.Tensor.storage": [[557, "torch-tensor-storage"]], "torch.Tensor.sinc_": [[534, "torch-tensor-sinc"]], "torch.Tensor.share_memory_": [[524, "torch-tensor-share-memory"]], "torch.Tensor.q_scale": [[475, "torch-tensor-q-scale"]], "torch.Tensor.polygamma_": [[466, "torch-tensor-polygamma"]], "torch.Tensor.pow": [[468, "torch-tensor-pow"]], "torch.Tensor.reshape_as": [[498, "torch-tensor-reshape-as"]], "torch.Tensor.repeat_interleave": [[494, "torch-tensor-repeat-interleave"]], "torch.Tensor.register_post_accumulate_grad_hook": [[488, "torch-tensor-register-post-accumulate-grad-hook"]], "torch.Tensor.pin_memory": [[463, "torch-tensor-pin-memory"]], "torch.Tensor.row_indices": [[509, "torch-tensor-row-indices"]], "torch.Tensor.ormqr": [[460, "torch-tensor-ormqr"]], "torch.Tensor.real": [[483, "torch-tensor-real"]], "torch.Tensor.requires_grad": [[495, "torch-tensor-requires-grad"]], "torch.Tensor.renorm_": [[492, "torch-tensor-renorm"]], "torch.Tensor.resize_as_": [[500, "torch-tensor-resize-as"]], "torch.Tensor.repeat": [[493, "torch-tensor-repeat"]], "torch.Tensor.positive": [[467, "torch-tensor-positive"]], "torch.Tensor.record_stream": [[486, "torch-tensor-record-stream"]], "torch.Tensor.qscheme": [[478, "torch-tensor-qscheme"]], "torch.Tensor.orgqr": [[459, "torch-tensor-orgqr"]], "torch.Tensor.pinverse": [[464, "torch-tensor-pinverse"]], "torch.Tensor.resolve_neg": [[502, "torch-tensor-resolve-neg"]], "torch.Tensor.reciprocal": [[484, "torch-tensor-reciprocal"]], "torch.Tensor.requires_grad_": [[496, "torch-tensor-requires-grad"]], "torch.Tensor.q_per_channel_axis": [[472, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.put_": [[471, "torch-tensor-put"]], "torch.Tensor.reciprocal_": [[485, "torch-tensor-reciprocal"]], "torch.Tensor.resolve_conj": [[501, "torch-tensor-resolve-conj"]], "torch.Tensor.remainder_": [[490, "torch-tensor-remainder"]], "torch.Tensor.retain_grad": [[503, "torch-tensor-retain-grad"]], "torch.Tensor.q_per_channel_scales": [[473, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.round": [[507, "torch-tensor-round"]], "torch.Tensor.ravel": [[482, "torch-tensor-ravel"]], "torch.Tensor.qr": [[477, "torch-tensor-qr"]], "torch.Tensor.pow_": [[469, "torch-tensor-pow"]], "torch.Tensor.quantile": [[479, "torch-tensor-quantile"]], "torch.Tensor.remainder": [[489, "torch-tensor-remainder"]], "torch.Tensor.renorm": [[491, "torch-tensor-renorm"]], "torch.Tensor.retains_grad": [[504, "torch-tensor-retains-grad"]], "torch.Tensor.outer": [[461, "torch-tensor-outer"]], "torch.Tensor.rot90": [[506, "torch-tensor-rot90"]], "torch.Tensor.rad2deg": [[480, "torch-tensor-rad2deg"]], "torch.Tensor.round_": [[508, "torch-tensor-round"]], "torch.Tensor.polygamma": [[465, "torch-tensor-polygamma"]], "torch.Tensor.resize_": [[499, "torch-tensor-resize"]], "torch.Tensor.q_per_channel_zero_points": [[474, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.permute": [[462, "torch-tensor-permute"]], "torch.Tensor.prod": [[470, "torch-tensor-prod"]], "torch.Tensor.reshape": [[497, "torch-tensor-reshape"]], "torch.Tensor.roll": [[505, "torch-tensor-roll"]], "torch.Tensor.q_zero_point": [[476, "torch-tensor-q-zero-point"]], "torch.Tensor.register_hook": [[487, "torch-tensor-register-hook"]], "torch.Tensor.random_": [[481, "torch-tensor-random"]], "torch.Tensor.mvlgamma": [[425, "torch-tensor-mvlgamma"]], "torch.Tensor.mode": [[414, "torch-tensor-mode"]], "torch.Tensor.new_zeros": [[449, "torch-tensor-new-zeros"]], "torch.Tensor.mm": [[413, "torch-tensor-mm"]], "torch.Tensor.nbytes": [[435, "torch-tensor-nbytes"]], "torch.Tensor.nan_to_num_": [[428, "torch-tensor-nan-to-num"]], "torch.Tensor.neg_": [[441, "torch-tensor-neg"]], "torch.Tensor.mvlgamma_": [[426, "torch-tensor-mvlgamma"]], "torch.Tensor.negative": [[442, "torch-tensor-negative"]], "torch.Tensor.not_equal": [[455, "torch-tensor-not-equal"]], "torch.Tensor.ne": [[438, "torch-tensor-ne"]], "torch.Tensor.mul_": [[420, "torch-tensor-mul"]], "torch.Tensor.nonzero": [[452, "torch-tensor-nonzero"]], "torch.Tensor.multinomial": [[421, "torch-tensor-multinomial"]], "torch.Tensor.ndimension": [[437, "torch-tensor-ndimension"]], "torch.Tensor.new_tensor": [[448, "torch-tensor-new-tensor"]], "torch.Tensor.norm": [[453, "torch-tensor-norm"]], "torch.Tensor.nextafter_": [[451, "torch-tensor-nextafter"]], "torch.Tensor.numel": [[457, "torch-tensor-numel"]], "torch.Tensor.negative_": [[443, "torch-tensor-negative"]], "torch.Tensor.new_full": [[446, "torch-tensor-new-full"]], "torch.Tensor.ndim": [[436, "torch-tensor-ndim"]], "torch.Tensor.nanquantile": [[431, "torch-tensor-nanquantile"]], "torch.Tensor.moveaxis": [[416, "torch-tensor-moveaxis"]], "torch.Tensor.ne_": [[439, "torch-tensor-ne"]], "torch.Tensor.new_ones": [[447, "torch-tensor-new-ones"]], "torch.Tensor.min": [[411, "torch-tensor-min"]], "torch.Tensor.nan_to_num": [[427, "torch-tensor-nan-to-num"]], "torch.Tensor.nextafter": [[450, "torch-tensor-nextafter"]], "torch.Tensor.nanmean": [[429, "torch-tensor-nanmean"]], "torch.Tensor.nelement": [[444, "torch-tensor-nelement"]], "torch.Tensor.not_equal_": [[456, "torch-tensor-not-equal"]], "torch.Tensor.numpy": [[458, "torch-tensor-numpy"]], "torch.Tensor.movedim": [[417, "torch-tensor-movedim"]], "torch.Tensor.minimum": [[412, "torch-tensor-minimum"]], "torch.Tensor.module_load": [[415, "torch-tensor-module-load"]], "torch.Tensor.mv": [[424, "torch-tensor-mv"]], "torch.Tensor.mean": [[409, "torch-tensor-mean"]], "torch.Tensor.new_empty": [[445, "torch-tensor-new-empty"]], "torch.Tensor.median": [[410, "torch-tensor-median"]], "torch.Tensor.multiply": [[422, "torch-tensor-multiply"]], "torch.Tensor.normal_": [[454, "torch-tensor-normal"]], "torch.Tensor.nansum": [[432, "torch-tensor-nansum"]], "torch.Tensor.mul": [[419, "torch-tensor-mul"]], "torch.Tensor.nanmedian": [[430, "torch-tensor-nanmedian"]], "torch.Tensor.neg": [[440, "torch-tensor-neg"]], "torch.Tensor.maximum": [[408, "torch-tensor-maximum"]], "torch.Tensor.narrow_copy": [[434, "torch-tensor-narrow-copy"]], "torch.Tensor.msort": [[418, "torch-tensor-msort"]], "torch.Tensor.multiply_": [[423, "torch-tensor-multiply"]], "torch.Tensor.narrow": [[433, "torch-tensor-narrow"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "is_autocast_available() (in module torch.amp.autocast_mode)": [[0, "torch.amp.autocast_mode.is_autocast_available"]], "module": [[0, "module-torch.amp"], [0, "module-torch.amp.autocast_mode"], [0, "module-torch.amp.grad_scaler"], [0, "module-torch.cpu.amp"], [0, "module-torch.cpu.amp.autocast_mode"], [0, "module-torch.cpu.amp.grad_scaler"], [0, "module-torch.cuda.amp"], [0, "module-torch.cuda.amp.autocast_mode"], [0, "module-torch.cuda.amp.common"], [0, "module-torch.cuda.amp.grad_scaler"], [1, "module-torch.autograd"], [1, "module-torch.autograd.anomaly_mode"], [1, "module-torch.autograd.forward_ad"], [1, "module-torch.autograd.function"], [1, "module-torch.autograd.functional"], [1, "module-torch.autograd.grad_mode"], [1, "module-torch.autograd.gradcheck"], [1, "module-torch.autograd.graph"], [1, "module-torch.autograd.profiler"], [1, "module-torch.autograd.profiler_legacy"], [1, "module-torch.autograd.profiler_util"], [1, "module-torch.autograd.variable"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.cudnn.rnn"], [2, "module-torch.backends.mha"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.nnpack"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xeon.run_cpu"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [13, "module-torch.__config__"], [16, "module-torch.cpu"], [17, "module-torch.cuda"], [17, "module-torch.cuda.comm"], [17, "module-torch.cuda.error"], [17, "module-torch.cuda.graphs"], [17, "module-torch.cuda.jiterator"], [17, "module-torch.cuda.memory"], [17, "module-torch.cuda.nccl"], [17, "module-torch.cuda.nvtx"], [17, "module-torch.cuda.profiler"], [17, "module-torch.cuda.random"], [17, "module-torch.cuda.sparse"], [17, "module-torch.cuda.streams"], [18, "module-torch.cuda._sanitizer"], [22, "module-torch.utils.data"], [22, "module-torch.utils.data.datapipes"], [22, "module-torch.utils.data.datapipes.dataframe"], [22, "module-torch.utils.data.datapipes.iter"], [22, "module-torch.utils.data.datapipes.map"], [22, "module-torch.utils.data.datapipes.utils"], [26, "module-torch.utils.deterministic"], [27, "module-torch.distributed"], [27, "module-torch.distributed.algorithms"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"], [27, "module-torch.distributed.algorithms.join"], [27, "module-torch.distributed.algorithms.model_averaging"], [27, "module-torch.distributed.algorithms.model_averaging.averagers"], [27, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"], [27, "module-torch.distributed.algorithms.model_averaging.utils"], [27, "module-torch.distributed.argparse_util"], [27, "module-torch.distributed.c10d_logger"], [27, "module-torch.distributed.checkpoint.api"], [27, "module-torch.distributed.checkpoint.default_planner"], [27, "module-torch.distributed.checkpoint.filesystem"], [27, "module-torch.distributed.checkpoint.metadata"], [27, "module-torch.distributed.checkpoint.optimizer"], [27, "module-torch.distributed.checkpoint.planner"], [27, "module-torch.distributed.checkpoint.planner_helpers"], [27, "module-torch.distributed.checkpoint.resharding"], [27, "module-torch.distributed.checkpoint.state_dict"], [27, "module-torch.distributed.checkpoint.state_dict_loader"], [27, "module-torch.distributed.checkpoint.state_dict_saver"], [27, "module-torch.distributed.checkpoint.stateful"], [27, "module-torch.distributed.checkpoint.storage"], [27, "module-torch.distributed.checkpoint.utils"], [27, "module-torch.distributed.collective_utils"], [27, "module-torch.distributed.constants"], [27, "module-torch.distributed.device_mesh"], [27, "module-torch.distributed.distributed_c10d"], [27, "module-torch.distributed.elastic"], [27, "module-torch.distributed.elastic.agent.server.api"], [27, "module-torch.distributed.elastic.agent.server.local_elastic_agent"], [27, "module-torch.distributed.elastic.events.api"], [27, "module-torch.distributed.elastic.events.handlers"], [27, "module-torch.distributed.elastic.metrics.api"], [27, "module-torch.distributed.elastic.multiprocessing.api"], [27, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"], [27, "module-torch.distributed.elastic.multiprocessing.errors.handlers"], [27, "module-torch.distributed.elastic.multiprocessing.redirects"], [27, "module-torch.distributed.elastic.multiprocessing.tail_log"], [27, "module-torch.distributed.elastic.rendezvous.api"], [27, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"], [27, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"], [27, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"], [27, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"], [27, "module-torch.distributed.elastic.rendezvous.etcd_server"], [27, "module-torch.distributed.elastic.rendezvous.etcd_store"], [27, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"], [27, "module-torch.distributed.elastic.rendezvous.utils"], [27, "module-torch.distributed.elastic.timer.api"], [27, "module-torch.distributed.elastic.timer.file_based_local_timer"], [27, "module-torch.distributed.elastic.timer.local_timer"], [27, "module-torch.distributed.elastic.utils"], [27, "module-torch.distributed.elastic.utils.api"], [27, "module-torch.distributed.elastic.utils.data"], [27, "module-torch.distributed.elastic.utils.data.cycling_iterator"], [27, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"], [27, "module-torch.distributed.elastic.utils.distributed"], [27, "module-torch.distributed.elastic.utils.log_level"], [27, "module-torch.distributed.elastic.utils.logging"], [27, "module-torch.distributed.elastic.utils.store"], [27, "module-torch.distributed.fsdp.api"], [27, "module-torch.distributed.fsdp.fully_sharded_data_parallel"], [27, "module-torch.distributed.fsdp.sharded_grad_scaler"], [27, "module-torch.distributed.fsdp.wrap"], [27, "module-torch.distributed.launch"], [27, "module-torch.distributed.launcher"], [27, "module-torch.distributed.launcher.api"], [27, "module-torch.distributed.logging_handlers"], [27, "module-torch.distributed.nn"], [27, "module-torch.distributed.nn.api"], [27, "module-torch.distributed.nn.api.remote_module"], [27, "module-torch.distributed.nn.functional"], [27, "module-torch.distributed.nn.jit"], [27, "module-torch.distributed.nn.jit.instantiator"], [27, "module-torch.distributed.nn.jit.templates"], [27, "module-torch.distributed.nn.jit.templates.remote_module_template"], [27, "module-torch.distributed.optim.apply_optimizer_in_backward"], [27, "module-torch.distributed.optim.functional_adadelta"], [27, "module-torch.distributed.optim.functional_adagrad"], [27, "module-torch.distributed.optim.functional_adam"], [27, "module-torch.distributed.optim.functional_adamax"], [27, "module-torch.distributed.optim.functional_adamw"], [27, "module-torch.distributed.optim.functional_rmsprop"], [27, "module-torch.distributed.optim.functional_rprop"], [27, "module-torch.distributed.optim.functional_sgd"], [27, "module-torch.distributed.optim.named_optimizer"], [27, "module-torch.distributed.optim.optimizer"], [27, "module-torch.distributed.optim.post_localSGD_optimizer"], [27, "module-torch.distributed.optim.utils"], [27, "module-torch.distributed.optim.zero_redundancy_optimizer"], [27, "module-torch.distributed.pipeline"], [27, "module-torch.distributed.pipeline.sync"], [27, "module-torch.distributed.pipeline.sync.batchnorm"], [27, "module-torch.distributed.pipeline.sync.checkpoint"], [27, "module-torch.distributed.pipeline.sync.copy"], [27, "module-torch.distributed.pipeline.sync.dependency"], [27, "module-torch.distributed.pipeline.sync.microbatch"], [27, "module-torch.distributed.pipeline.sync.phony"], [27, "module-torch.distributed.pipeline.sync.pipe"], [27, "module-torch.distributed.pipeline.sync.pipeline"], [27, "module-torch.distributed.pipeline.sync.skip"], [27, "module-torch.distributed.pipeline.sync.skip.layout"], [27, "module-torch.distributed.pipeline.sync.skip.namespace"], [27, "module-torch.distributed.pipeline.sync.skip.portal"], [27, "module-torch.distributed.pipeline.sync.skip.skippable"], [27, "module-torch.distributed.pipeline.sync.skip.tracker"], [27, "module-torch.distributed.pipeline.sync.stream"], [27, "module-torch.distributed.pipeline.sync.utils"], [27, "module-torch.distributed.pipeline.sync.worker"], [27, "module-torch.distributed.remote_device"], [27, "module-torch.distributed.rendezvous"], [27, "module-torch.distributed.rpc.api"], [27, "module-torch.distributed.rpc.backend_registry"], [27, "module-torch.distributed.rpc.constants"], [27, "module-torch.distributed.rpc.functions"], [27, "module-torch.distributed.rpc.internal"], [27, "module-torch.distributed.rpc.options"], [27, "module-torch.distributed.rpc.rref_proxy"], [27, "module-torch.distributed.rpc.server_process_global_profiler"], [27, "module-torch.distributed.tensor"], [27, "module-torch.distributed.tensor.parallel.api"], [27, "module-torch.distributed.tensor.parallel.ddp"], [27, "module-torch.distributed.tensor.parallel.fsdp"], [27, "module-torch.distributed.tensor.parallel.input_reshard"], [27, "module-torch.distributed.tensor.parallel.loss"], [27, "module-torch.distributed.tensor.parallel.style"], [27, "module-torch.distributed.utils"], [29, "module-torch.distributed.checkpoint"], [29, "module-torch.distributed.checkpoint.format_utils"], [29, "module-torch.distributed.checkpoint.logger"], [29, "module-torch.distributed.checkpoint.logging_handlers"], [29, "module-torch.distributed.checkpoint.staging"], [31, "module-torch.distributed.optim"], [32, "module-torch.distributed.pipelining"], [32, "module-torch.distributed.pipelining.PipelineSchedule"], [32, "module-torch.distributed.pipelining.microbatch"], [33, "module-torch.distributed.tensor.parallel"], [34, "module-torch.distributions"], [34, "module-torch.distributions.bernoulli"], [34, "module-torch.distributions.beta"], [34, "module-torch.distributions.binomial"], [34, "module-torch.distributions.categorical"], [34, "module-torch.distributions.cauchy"], [34, "module-torch.distributions.chi2"], [34, "module-torch.distributions.constraint_registry"], [34, "module-torch.distributions.constraints"], [34, "module-torch.distributions.continuous_bernoulli"], [34, "module-torch.distributions.dirichlet"], [34, "module-torch.distributions.distribution"], [34, "module-torch.distributions.exp_family"], [34, "module-torch.distributions.exponential"], [34, "module-torch.distributions.fishersnedecor"], [34, "module-torch.distributions.gamma"], [34, "module-torch.distributions.geometric"], [34, "module-torch.distributions.gumbel"], [34, "module-torch.distributions.half_cauchy"], [34, "module-torch.distributions.half_normal"], [34, "module-torch.distributions.independent"], [34, "module-torch.distributions.inverse_gamma"], [34, "module-torch.distributions.kl"], [34, "module-torch.distributions.kumaraswamy"], [34, "module-torch.distributions.laplace"], [34, "module-torch.distributions.lkj_cholesky"], [34, "module-torch.distributions.log_normal"], [34, "module-torch.distributions.logistic_normal"], [34, "module-torch.distributions.lowrank_multivariate_normal"], [34, "module-torch.distributions.mixture_same_family"], [34, "module-torch.distributions.multinomial"], [34, "module-torch.distributions.multivariate_normal"], [34, "module-torch.distributions.negative_binomial"], [34, "module-torch.distributions.normal"], [34, "module-torch.distributions.one_hot_categorical"], [34, "module-torch.distributions.pareto"], [34, "module-torch.distributions.poisson"], [34, "module-torch.distributions.relaxed_bernoulli"], [34, "module-torch.distributions.relaxed_categorical"], [34, "module-torch.distributions.studentT"], [34, "module-torch.distributions.transformed_distribution"], [34, "module-torch.distributions.transforms"], [34, "module-torch.distributions.uniform"], [34, "module-torch.distributions.utils"], [34, "module-torch.distributions.von_mises"], [34, "module-torch.distributions.weibull"], [34, "module-torch.distributions.wishart"], [36, "module-torch.distributed.elastic.agent"], [36, "module-torch.distributed.elastic.agent.server"], [36, "module-torch.distributed.elastic.agent.server.health_check_server"], [38, "module-torch.distributed.elastic.multiprocessing.errors"], [39, "module-torch.distributed.elastic.events"], [42, "module-torch.distributed.elastic.metrics"], [43, "module-torch.distributed.elastic.multiprocessing"], [45, "module-torch.distributed.elastic.rendezvous"], [45, "module-torch.distributed.elastic.rendezvous.registry"], [46, "module-torch.distributed.run"], [47, "module-torch.distributed.elastic.multiprocessing.subprocess_handler"], [47, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.handlers"], [47, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler"], [48, "module-torch.distributed.elastic.timer"], [48, "module-torch.distributed.elastic.timer.debug_info_logging"], [50, "module-torch.export"], [50, "module-torch.export.custom_obj"], [50, "module-torch.export.dynamic_shapes"], [50, "module-torch.export.exported_program"], [50, "module-torch.export.graph_signature"], [50, "module-torch.export.unflatten"], [52, "module-torch.fft"], [53, "module-torch.distributed.fsdp"], [55, "module-torch.func"], [60, "module-torch.__future__"], [61, "module-torch.futures"], [62, "module-torch.fx"], [62, "module-torch.fx.annotate"], [62, "module-torch.fx.config"], [62, "module-torch.fx.experimental"], [62, "module-torch.fx.experimental.accelerator_partitioner"], [62, "module-torch.fx.experimental.const_fold"], [62, "module-torch.fx.experimental.debug"], [62, "module-torch.fx.experimental.graph_gradual_typechecker"], [62, "module-torch.fx.experimental.merge_matmul"], [62, "module-torch.fx.experimental.meta_tracer"], [62, "module-torch.fx.experimental.migrate_gradual_types"], [62, "module-torch.fx.experimental.migrate_gradual_types.constraint"], [62, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"], [62, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"], [62, "module-torch.fx.experimental.migrate_gradual_types.operation"], [62, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"], [62, "module-torch.fx.experimental.migrate_gradual_types.util"], [62, "module-torch.fx.experimental.migrate_gradual_types.z3_types"], [62, "module-torch.fx.experimental.normalize"], [62, "module-torch.fx.experimental.optimization"], [62, "module-torch.fx.experimental.partitioner_utils"], [62, "module-torch.fx.experimental.proxy_tensor"], [62, "module-torch.fx.experimental.recording"], [62, "module-torch.fx.experimental.refinement_types"], [62, "module-torch.fx.experimental.rewriter"], [62, "module-torch.fx.experimental.schema_type_annotation"], [62, "module-torch.fx.experimental.sym_node"], [62, "module-torch.fx.experimental.unification"], [62, "module-torch.fx.experimental.unification.core"], [62, "module-torch.fx.experimental.unification.dispatch"], [62, "module-torch.fx.experimental.unification.match"], [62, "module-torch.fx.experimental.unification.more"], [62, "module-torch.fx.experimental.unification.multipledispatch"], [62, "module-torch.fx.experimental.unification.multipledispatch.conflict"], [62, "module-torch.fx.experimental.unification.multipledispatch.core"], [62, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"], [62, "module-torch.fx.experimental.unification.multipledispatch.utils"], [62, "module-torch.fx.experimental.unification.multipledispatch.variadic"], [62, "module-torch.fx.experimental.unification.unification_tools"], [62, "module-torch.fx.experimental.unification.utils"], [62, "module-torch.fx.experimental.unification.variable"], [62, "module-torch.fx.experimental.unify_refinements"], [62, "module-torch.fx.experimental.validator"], [62, "module-torch.fx.graph"], [62, "module-torch.fx.graph_module"], [62, "module-torch.fx.immutable_collections"], [62, "module-torch.fx.interpreter"], [62, "module-torch.fx.node"], [62, "module-torch.fx.operator_schemas"], [62, "module-torch.fx.passes"], [62, "module-torch.fx.passes.annotate_getitem_nodes"], [62, "module-torch.fx.passes.backends"], [62, "module-torch.fx.passes.backends.cudagraphs"], [62, "module-torch.fx.passes.dialect"], [62, "module-torch.fx.passes.dialect.common"], [62, "module-torch.fx.passes.dialect.common.cse_pass"], [62, "module-torch.fx.passes.fake_tensor_prop"], [62, "module-torch.fx.passes.graph_drawer"], [62, "module-torch.fx.passes.graph_manipulation"], [62, "module-torch.fx.passes.infra"], [62, "module-torch.fx.passes.infra.partitioner"], [62, "module-torch.fx.passes.infra.pass_base"], [62, "module-torch.fx.passes.infra.pass_manager"], [62, "module-torch.fx.passes.net_min_base"], [62, "module-torch.fx.passes.operator_support"], [62, "module-torch.fx.passes.param_fetch"], [62, "module-torch.fx.passes.pass_manager"], [62, "module-torch.fx.passes.reinplace"], [62, "module-torch.fx.passes.runtime_assert"], [62, "module-torch.fx.passes.shape_prop"], [62, "module-torch.fx.passes.split_module"], [62, "module-torch.fx.passes.split_utils"], [62, "module-torch.fx.passes.splitter_base"], [62, "module-torch.fx.passes.tests"], [62, "module-torch.fx.passes.tests.test_pass_manager"], [62, "module-torch.fx.passes.tools_common"], [62, "module-torch.fx.passes.utils"], [62, "module-torch.fx.passes.utils.common"], [62, "module-torch.fx.passes.utils.fuser_utils"], [62, "module-torch.fx.passes.utils.matcher_utils"], [62, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"], [62, "module-torch.fx.passes.utils.source_matcher_utils"], [62, "module-torch.fx.proxy"], [62, "module-torch.fx.subgraph_rewriter"], [62, "module-torch.fx.tensor_type"], [62, "module-torch.fx.traceback"], [63, "module-torch.fx.experimental.symbolic_shapes"], [2008, "module-torch.hub"], [2010, "module-torch.jit"], [2010, "module-torch.jit.annotations"], [2010, "module-torch.jit.frontend"], [2010, "module-torch.jit.generate_bytecode"], [2010, "module-torch.jit.mobile"], [2010, "module-torch.jit.quantized"], [2011, "module-torch.jit.supported_ops"], [2015, "module-torch.jit.unsupported_tensor_ops"], [2016, "module-torch.utils.jit"], [2017, "module-torch.library"], [2018, "module-torch.linalg"], [2019, "module-torch._logging"], [2020, "module-torch.masked"], [2020, "module-torch.masked.maskedtensor"], [2020, "module-torch.masked.maskedtensor.binary"], [2020, "module-torch.masked.maskedtensor.core"], [2020, "module-torch.masked.maskedtensor.creation"], [2020, "module-torch.masked.maskedtensor.passthrough"], [2020, "module-torch.masked.maskedtensor.reductions"], [2020, "module-torch.masked.maskedtensor.unary"], [2024, "module-torch.utils.model_zoo"], [2025, "module-torch.utils.module_tracker"], [2026, "module-torch.monitor"], [2027, "module-torch.mps"], [2027, "module-torch.mps.event"], [2027, "module-torch.mps.profiler"], [2028, "module-torch.mtia"], [2029, "module-torch.multiprocessing"], [2029, "module-torch.multiprocessing.pool"], [2029, "module-torch.multiprocessing.queue"], [2029, "module-torch.multiprocessing.reductions"], [2029, "module-torch.multiprocessing.spawn"], [2032, "module-torch.nested"], [2033, "module-torch.nn"], [2033, "module-torch.nn.backends"], [2033, "module-torch.nn.backends.thnn"], [2033, "module-torch.nn.common_types"], [2033, "module-torch.nn.cpp"], [2033, "module-torch.nn.functional"], [2033, "module-torch.nn.grad"], [2033, "module-torch.nn.init"], [2033, "module-torch.nn.modules"], [2033, "module-torch.nn.modules.activation"], [2033, "module-torch.nn.modules.adaptive"], [2033, "module-torch.nn.modules.batchnorm"], [2033, "module-torch.nn.modules.channelshuffle"], [2033, "module-torch.nn.modules.container"], [2033, "module-torch.nn.modules.conv"], [2033, "module-torch.nn.modules.distance"], [2033, "module-torch.nn.modules.dropout"], [2033, "module-torch.nn.modules.flatten"], [2033, "module-torch.nn.modules.fold"], [2033, "module-torch.nn.modules.instancenorm"], [2033, "module-torch.nn.modules.lazy"], [2033, "module-torch.nn.modules.linear"], [2033, "module-torch.nn.modules.loss"], [2033, "module-torch.nn.modules.module"], [2033, "module-torch.nn.modules.normalization"], [2033, "module-torch.nn.modules.padding"], [2033, "module-torch.nn.modules.pixelshuffle"], [2033, "module-torch.nn.modules.pooling"], [2033, "module-torch.nn.modules.rnn"], [2033, "module-torch.nn.modules.sparse"], [2033, "module-torch.nn.modules.transformer"], [2033, "module-torch.nn.modules.upsampling"], [2033, "module-torch.nn.modules.utils"], [2033, "module-torch.nn.parallel"], [2033, "module-torch.nn.parallel.comm"], [2033, "module-torch.nn.parallel.distributed"], [2033, "module-torch.nn.parallel.parallel_apply"], [2033, "module-torch.nn.parallel.replicate"], [2033, "module-torch.nn.parallel.scatter_gather"], [2033, "module-torch.nn.parameter"], [2033, "module-torch.nn.utils"], [2033, "module-torch.nn.utils.clip_grad"], [2033, "module-torch.nn.utils.convert_parameters"], [2033, "module-torch.nn.utils.fusion"], [2033, "module-torch.nn.utils.init"], [2033, "module-torch.nn.utils.memory_format"], [2033, "module-torch.nn.utils.parametrizations"], [2033, "module-torch.nn.utils.parametrize"], [2033, "module-torch.nn.utils.prune"], [2033, "module-torch.nn.utils.rnn"], [2033, "module-torch.nn.utils.stateless"], [2034, "module-torch.nn.attention"], [2035, "module-torch.nn.attention.bias"], [2058, "module-torch.onnx.errors"], [2058, "module-torch.onnx.operators"], [2058, "module-torch.onnx.symbolic_caffe2"], [2058, "module-torch.onnx.symbolic_helper"], [2058, "module-torch.onnx.symbolic_opset10"], [2058, "module-torch.onnx.symbolic_opset11"], [2058, "module-torch.onnx.symbolic_opset12"], [2058, "module-torch.onnx.symbolic_opset13"], [2058, "module-torch.onnx.symbolic_opset14"], [2058, "module-torch.onnx.symbolic_opset15"], [2058, "module-torch.onnx.symbolic_opset16"], [2058, "module-torch.onnx.symbolic_opset17"], [2058, "module-torch.onnx.symbolic_opset18"], [2058, "module-torch.onnx.symbolic_opset19"], [2058, "module-torch.onnx.symbolic_opset20"], [2058, "module-torch.onnx.symbolic_opset7"], [2058, "module-torch.onnx.symbolic_opset8"], [2058, "module-torch.onnx.symbolic_opset9"], [2058, "module-torch.onnx.utils"], [2058, "module-torch.onnx.verification"], [2061, "module-torch.onnx"], [2063, "module-torch.optim"], [2063, "module-torch.optim.adadelta"], [2063, "module-torch.optim.adagrad"], [2063, "module-torch.optim.adam"], [2063, "module-torch.optim.adamax"], [2063, "module-torch.optim.adamw"], [2063, "module-torch.optim.asgd"], [2063, "module-torch.optim.lbfgs"], [2063, "module-torch.optim.lr_scheduler"], [2063, "module-torch.optim.nadam"], [2063, "module-torch.optim.optimizer"], [2063, "module-torch.optim.radam"], [2063, "module-torch.optim.rmsprop"], [2063, "module-torch.optim.rprop"], [2063, "module-torch.optim.sgd"], [2063, "module-torch.optim.sparse_adam"], [2063, "module-torch.optim.swa_utils"], [2064, "module-torch.package"], [2064, "module-torch.package.analyze"], [2064, "module-torch.package.analyze.find_first_use_of_broken_modules"], [2064, "module-torch.package.analyze.is_from_package"], [2064, "module-torch.package.analyze.trace_dependencies"], [2064, "module-torch.package.file_structure_representation"], [2064, "module-torch.package.find_file_dependencies"], [2064, "module-torch.package.glob_group"], [2064, "module-torch.package.importer"], [2064, "module-torch.package.package_exporter"], [2064, "module-torch.package.package_importer"], [2066, "module-torch.profiler"], [2066, "module-torch.profiler.itt"], [2066, "module-torch.profiler.profiler"], [2066, "module-torch.profiler.python_tracer"], [2067, "module-torch.ao"], [2067, "module-torch.ao.nn"], [2067, "module-torch.ao.nn.intrinsic.modules.fused"], [2067, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"], [2067, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"], [2067, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"], [2067, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2067, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"], [2067, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"], [2067, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"], [2067, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"], [2067, "module-torch.ao.nn.qat.dynamic.modules.linear"], [2067, "module-torch.ao.nn.qat.modules.conv"], [2067, "module-torch.ao.nn.qat.modules.embedding_ops"], [2067, "module-torch.ao.nn.qat.modules.linear"], [2067, "module-torch.ao.nn.quantizable"], [2067, "module-torch.ao.nn.quantizable.modules"], [2067, "module-torch.ao.nn.quantizable.modules.activation"], [2067, "module-torch.ao.nn.quantizable.modules.rnn"], [2067, "module-torch.ao.nn.quantized"], [2067, "module-torch.ao.nn.quantized.dynamic.modules.conv"], [2067, "module-torch.ao.nn.quantized.dynamic.modules.linear"], [2067, "module-torch.ao.nn.quantized.dynamic.modules.rnn"], [2067, "module-torch.ao.nn.quantized.modules.activation"], [2067, "module-torch.ao.nn.quantized.modules.batchnorm"], [2067, "module-torch.ao.nn.quantized.modules.conv"], [2067, "module-torch.ao.nn.quantized.modules.dropout"], [2067, "module-torch.ao.nn.quantized.modules.embedding_ops"], [2067, "module-torch.ao.nn.quantized.modules.functional_modules"], [2067, "module-torch.ao.nn.quantized.modules.linear"], [2067, "module-torch.ao.nn.quantized.modules.normalization"], [2067, "module-torch.ao.nn.quantized.modules.rnn"], [2067, "module-torch.ao.nn.quantized.modules.utils"], [2067, "module-torch.ao.nn.quantized.reference"], [2067, "module-torch.ao.nn.quantized.reference.modules"], [2067, "module-torch.ao.nn.quantized.reference.modules.conv"], [2067, "module-torch.ao.nn.quantized.reference.modules.linear"], [2067, "module-torch.ao.nn.quantized.reference.modules.rnn"], [2067, "module-torch.ao.nn.quantized.reference.modules.sparse"], [2067, "module-torch.ao.nn.quantized.reference.modules.utils"], [2067, "module-torch.ao.nn.sparse"], [2067, "module-torch.ao.nn.sparse.quantized"], [2067, "module-torch.ao.nn.sparse.quantized.dynamic"], [2067, "module-torch.ao.nn.sparse.quantized.dynamic.linear"], [2067, "module-torch.ao.nn.sparse.quantized.linear"], [2067, "module-torch.ao.nn.sparse.quantized.utils"], [2067, "module-torch.ao.ns"], [2067, "module-torch.ao.ns.fx"], [2067, "module-torch.ao.ns.fx.graph_matcher"], [2067, "module-torch.ao.ns.fx.graph_passes"], [2067, "module-torch.ao.ns.fx.mappings"], [2067, "module-torch.ao.ns.fx.n_shadows_utils"], [2067, "module-torch.ao.ns.fx.ns_types"], [2067, "module-torch.ao.ns.fx.pattern_utils"], [2067, "module-torch.ao.ns.fx.qconfig_multi_mapping"], [2067, "module-torch.ao.ns.fx.utils"], [2067, "module-torch.ao.ns.fx.weight_utils"], [2067, "module-torch.ao.pruning"], [2067, "module-torch.ao.pruning.scheduler"], [2067, "module-torch.ao.pruning.scheduler.base_scheduler"], [2067, "module-torch.ao.pruning.scheduler.cubic_scheduler"], [2067, "module-torch.ao.pruning.scheduler.lambda_scheduler"], [2067, "module-torch.ao.pruning.sparsifier"], [2067, "module-torch.ao.pruning.sparsifier.base_sparsifier"], [2067, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"], [2067, "module-torch.ao.pruning.sparsifier.utils"], [2067, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"], [2067, "module-torch.ao.quantization"], [2067, "module-torch.ao.quantization.backend_config"], [2067, "module-torch.ao.quantization.backend_config.backend_config"], [2067, "module-torch.ao.quantization.backend_config.executorch"], [2067, "module-torch.ao.quantization.backend_config.fbgemm"], [2067, "module-torch.ao.quantization.backend_config.native"], [2067, "module-torch.ao.quantization.backend_config.observation_type"], [2067, "module-torch.ao.quantization.backend_config.onednn"], [2067, "module-torch.ao.quantization.backend_config.qnnpack"], [2067, "module-torch.ao.quantization.backend_config.tensorrt"], [2067, "module-torch.ao.quantization.backend_config.utils"], [2067, "module-torch.ao.quantization.backend_config.x86"], [2067, "module-torch.ao.quantization.fake_quantize"], [2067, "module-torch.ao.quantization.fuse_modules"], [2067, "module-torch.ao.quantization.fuser_method_mappings"], [2067, "module-torch.ao.quantization.fx"], [2067, "module-torch.ao.quantization.fx.convert"], [2067, "module-torch.ao.quantization.fx.custom_config"], [2067, "module-torch.ao.quantization.fx.fuse"], [2067, "module-torch.ao.quantization.fx.fuse_handler"], [2067, "module-torch.ao.quantization.fx.graph_module"], [2067, "module-torch.ao.quantization.fx.lower_to_fbgemm"], [2067, "module-torch.ao.quantization.fx.lower_to_qnnpack"], [2067, "module-torch.ao.quantization.fx.lstm_utils"], [2067, "module-torch.ao.quantization.fx.match_utils"], [2067, "module-torch.ao.quantization.fx.pattern_utils"], [2067, "module-torch.ao.quantization.fx.prepare"], [2067, "module-torch.ao.quantization.fx.qconfig_mapping_utils"], [2067, "module-torch.ao.quantization.fx.quantize_handler"], [2067, "module-torch.ao.quantization.fx.tracer"], [2067, "module-torch.ao.quantization.fx.utils"], [2067, "module-torch.ao.quantization.observer"], [2067, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"], [2067, "module-torch.ao.quantization.pt2e.export_utils"], [2067, "module-torch.ao.quantization.pt2e.graph_utils"], [2067, "module-torch.ao.quantization.pt2e.port_metadata_pass"], [2067, "module-torch.ao.quantization.pt2e.prepare"], [2067, "module-torch.ao.quantization.pt2e.qat_utils"], [2067, "module-torch.ao.quantization.pt2e.representation.rewrite"], [2067, "module-torch.ao.quantization.pt2e.utils"], [2067, "module-torch.ao.quantization.qconfig"], [2067, "module-torch.ao.quantization.qconfig_mapping"], [2067, "module-torch.ao.quantization.quant_type"], [2067, "module-torch.ao.quantization.quantization_mappings"], [2067, "module-torch.ao.quantization.quantize_fx"], [2067, "module-torch.ao.quantization.quantize_jit"], [2067, "module-torch.ao.quantization.quantize_pt2e"], [2067, "module-torch.ao.quantization.quantizer.composable_quantizer"], [2067, "module-torch.ao.quantization.quantizer.embedding_quantizer"], [2067, "module-torch.ao.quantization.quantizer.quantizer"], [2067, "module-torch.ao.quantization.quantizer.utils"], [2067, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"], [2067, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"], [2067, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"], [2067, "module-torch.ao.quantization.stubs"], [2067, "module-torch.ao.quantization.utils"], [2067, "module-torch.nn.intrinsic.modules.fused"], [2067, "module-torch.nn.intrinsic.qat.modules.conv_fused"], [2067, "module-torch.nn.intrinsic.qat.modules.linear_fused"], [2067, "module-torch.nn.intrinsic.qat.modules.linear_relu"], [2067, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2067, "module-torch.nn.intrinsic.quantized.modules.bn_relu"], [2067, "module-torch.nn.intrinsic.quantized.modules.conv_relu"], [2067, "module-torch.nn.intrinsic.quantized.modules.linear_relu"], [2067, "module-torch.nn.qat.dynamic.modules.linear"], [2067, "module-torch.nn.qat.modules.conv"], [2067, "module-torch.nn.qat.modules.embedding_ops"], [2067, "module-torch.nn.qat.modules.linear"], [2067, "module-torch.nn.quantizable.modules.activation"], [2067, "module-torch.nn.quantizable.modules.rnn"], [2067, "module-torch.nn.quantized.dynamic.modules.conv"], [2067, "module-torch.nn.quantized.dynamic.modules.linear"], [2067, "module-torch.nn.quantized.dynamic.modules.rnn"], [2067, "module-torch.nn.quantized.functional"], [2067, "module-torch.nn.quantized.modules.activation"], [2067, "module-torch.nn.quantized.modules.batchnorm"], [2067, "module-torch.nn.quantized.modules.conv"], [2067, "module-torch.nn.quantized.modules.dropout"], [2067, "module-torch.nn.quantized.modules.embedding_ops"], [2067, "module-torch.nn.quantized.modules.functional_modules"], [2067, "module-torch.nn.quantized.modules.linear"], [2067, "module-torch.nn.quantized.modules.normalization"], [2067, "module-torch.nn.quantized.modules.rnn"], [2067, "module-torch.nn.quantized.modules.utils"], [2067, "module-torch.quantization.fake_quantize"], [2067, "module-torch.quantization.fuse_modules"], [2067, "module-torch.quantization.fuser_method_mappings"], [2067, "module-torch.quantization.fx.convert"], [2067, "module-torch.quantization.fx.fuse"], [2067, "module-torch.quantization.fx.fusion_patterns"], [2067, "module-torch.quantization.fx.graph_module"], [2067, "module-torch.quantization.fx.match_utils"], [2067, "module-torch.quantization.fx.pattern_utils"], [2067, "module-torch.quantization.fx.prepare"], [2067, "module-torch.quantization.fx.quantization_patterns"], [2067, "module-torch.quantization.fx.quantization_types"], [2067, "module-torch.quantization.fx.utils"], [2067, "module-torch.quantization.observer"], [2067, "module-torch.quantization.qconfig"], [2067, "module-torch.quantization.quant_type"], [2067, "module-torch.quantization.quantization_mappings"], [2067, "module-torch.quantization.quantize"], [2067, "module-torch.quantization.quantize_fx"], [2067, "module-torch.quantization.quantize_jit"], [2067, "module-torch.quantization.stubs"], [2067, "module-torch.quantization.utils"], [2070, "module-torch.ao.nn.intrinsic"], [2070, "module-torch.ao.nn.intrinsic.modules"], [2070, "module-torch.ao.nn.intrinsic.qat"], [2070, "module-torch.ao.nn.intrinsic.qat.modules"], [2070, "module-torch.ao.nn.intrinsic.quantized"], [2070, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [2070, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [2070, "module-torch.ao.nn.intrinsic.quantized.modules"], [2070, "module-torch.ao.nn.qat"], [2070, "module-torch.ao.nn.qat.dynamic"], [2070, "module-torch.ao.nn.qat.dynamic.modules"], [2070, "module-torch.ao.nn.qat.modules"], [2070, "module-torch.ao.nn.quantized.dynamic"], [2070, "module-torch.ao.nn.quantized.dynamic.modules"], [2070, "module-torch.ao.nn.quantized.functional"], [2070, "module-torch.ao.nn.quantized.modules"], [2070, "module-torch.ao.quantization.pt2e"], [2070, "module-torch.ao.quantization.pt2e.generate_numeric_debug_handle"], [2070, "module-torch.ao.quantization.pt2e.representation"], [2070, "module-torch.ao.quantization.quantizer"], [2070, "module-torch.nn.intrinsic"], [2070, "module-torch.nn.intrinsic.modules"], [2070, "module-torch.nn.intrinsic.qat"], [2070, "module-torch.nn.intrinsic.qat.modules"], [2070, "module-torch.nn.intrinsic.quantized"], [2070, "module-torch.nn.intrinsic.quantized.dynamic"], [2070, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [2070, "module-torch.nn.intrinsic.quantized.modules"], [2070, "module-torch.nn.qat"], [2070, "module-torch.nn.qat.dynamic"], [2070, "module-torch.nn.qat.dynamic.modules"], [2070, "module-torch.nn.qat.modules"], [2070, "module-torch.nn.quantizable"], [2070, "module-torch.nn.quantizable.modules"], [2070, "module-torch.nn.quantized"], [2070, "module-torch.nn.quantized.dynamic"], [2070, "module-torch.nn.quantized.dynamic.modules"], [2070, "module-torch.nn.quantized.modules"], [2070, "module-torch.quantization"], [2070, "module-torch.quantization.fx"], [2071, "module-torch.random"], [2072, "module-torch.distributed.autograd"], [2072, "module-torch.distributed.rpc"], [2075, "module-torch.signal"], [2075, "module-torch.signal.windows"], [2077, "module-torch.sparse"], [2078, "module-torch.special"], [2082, "module-torch.utils.tensorboard"], [2084, "module-torch.testing"], [2086, "module-torch"], [2086, "module-torch.contrib"], [2086, "module-torch.functional"], [2086, "module-torch.quasirandom"], [2086, "module-torch.return_types"], [2086, "module-torch.serialization"], [2086, "module-torch.signal.windows.windows"], [2086, "module-torch.sparse.semi_structured"], [2086, "module-torch.storage"], [2086, "module-torch.torch_version"], [2086, "module-torch.types"], [2086, "module-torch.utils.backcompat"], [2086, "module-torch.utils.hipify"], [2086, "module-torch.utils.model_dump"], [2086, "module-torch.utils.viz"], [2086, "module-torch.version"], [2087, "module-torch.ao.ns._numeric_suite"], [2088, "module-torch.ao.ns._numeric_suite_fx"], [2091, "module-torch.compiler"], [2109, "module-torch.overrides"], [2113, "module-torch.utils"], [2113, "module-torch.utils.backend_registration"], [2113, "module-torch.utils.benchmark.examples.blas_compare_setup"], [2113, "module-torch.utils.benchmark.examples.compare"], [2113, "module-torch.utils.benchmark.examples.fuzzer"], [2113, "module-torch.utils.benchmark.examples.op_benchmark"], [2113, "module-torch.utils.benchmark.examples.simple_timeit"], [2113, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"], [2113, "module-torch.utils.benchmark.op_fuzzers.binary"], [2113, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"], [2113, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"], [2113, "module-torch.utils.benchmark.op_fuzzers.spectral"], [2113, "module-torch.utils.benchmark.op_fuzzers.unary"], [2113, "module-torch.utils.benchmark.utils.common"], [2113, "module-torch.utils.benchmark.utils.compare"], [2113, "module-torch.utils.benchmark.utils.compile"], [2113, "module-torch.utils.benchmark.utils.cpp_jit"], [2113, "module-torch.utils.benchmark.utils.fuzzer"], [2113, "module-torch.utils.benchmark.utils.sparse_fuzzer"], [2113, "module-torch.utils.benchmark.utils.timer"], [2113, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"], [2113, "module-torch.utils.bundled_inputs"], [2113, "module-torch.utils.checkpoint"], [2113, "module-torch.utils.collect_env"], [2113, "module-torch.utils.cpp_backtrace"], [2113, "module-torch.utils.cpp_extension"], [2113, "module-torch.utils.data.backward_compatibility"], [2113, "module-torch.utils.data.dataloader"], [2113, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"], [2113, "module-torch.utils.data.datapipes.dataframe.dataframes"], [2113, "module-torch.utils.data.datapipes.dataframe.datapipes"], [2113, "module-torch.utils.data.datapipes.dataframe.structures"], [2113, "module-torch.utils.data.datapipes.datapipe"], [2113, "module-torch.utils.data.datapipes.gen_pyi"], [2113, "module-torch.utils.data.datapipes.iter.callable"], [2113, "module-torch.utils.data.datapipes.iter.combinatorics"], [2113, "module-torch.utils.data.datapipes.iter.combining"], [2113, "module-torch.utils.data.datapipes.iter.filelister"], [2113, "module-torch.utils.data.datapipes.iter.fileopener"], [2113, "module-torch.utils.data.datapipes.iter.grouping"], [2113, "module-torch.utils.data.datapipes.iter.routeddecoder"], [2113, "module-torch.utils.data.datapipes.iter.selecting"], [2113, "module-torch.utils.data.datapipes.iter.sharding"], [2113, "module-torch.utils.data.datapipes.iter.streamreader"], [2113, "module-torch.utils.data.datapipes.iter.utils"], [2113, "module-torch.utils.data.datapipes.map.callable"], [2113, "module-torch.utils.data.datapipes.map.combinatorics"], [2113, "module-torch.utils.data.datapipes.map.combining"], [2113, "module-torch.utils.data.datapipes.map.grouping"], [2113, "module-torch.utils.data.datapipes.map.utils"], [2113, "module-torch.utils.data.datapipes.utils.common"], [2113, "module-torch.utils.data.datapipes.utils.decoder"], [2113, "module-torch.utils.data.datapipes.utils.snapshot"], [2113, "module-torch.utils.data.dataset"], [2113, "module-torch.utils.data.distributed"], [2113, "module-torch.utils.data.graph"], [2113, "module-torch.utils.data.graph_settings"], [2113, "module-torch.utils.data.sampler"], [2113, "module-torch.utils.dlpack"], [2113, "module-torch.utils.file_baton"], [2113, "module-torch.utils.flop_counter"], [2113, "module-torch.utils.hipify.constants"], [2113, "module-torch.utils.hipify.cuda_to_hip_mappings"], [2113, "module-torch.utils.hipify.hipify_python"], [2113, "module-torch.utils.hipify.version"], [2113, "module-torch.utils.hooks"], [2113, "module-torch.utils.jit.log_extract"], [2113, "module-torch.utils.mkldnn"], [2113, "module-torch.utils.mobile_optimizer"], [2113, "module-torch.utils.show_pickle"], [2113, "module-torch.utils.tensorboard.summary"], [2113, "module-torch.utils.tensorboard.writer"], [2113, "module-torch.utils.throughput_benchmark"], [2113, "module-torch.utils.weak"], [2114, "module-torch.xpu"], [2114, "module-torch.xpu.random"], [2114, "module-torch.xpu.streams"]], "torch.amp": [[0, "module-torch.amp"]], "torch.amp.autocast_mode": [[0, "module-torch.amp.autocast_mode"]], "torch.amp.grad_scaler": [[0, "module-torch.amp.grad_scaler"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cpu.amp.autocast_mode": [[0, "module-torch.cpu.amp.autocast_mode"]], "torch.cpu.amp.grad_scaler": [[0, "module-torch.cpu.amp.grad_scaler"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "torch.cuda.amp.autocast_mode": [[0, "module-torch.cuda.amp.autocast_mode"]], "torch.cuda.amp.common": [[0, "module-torch.cuda.amp.common"]], "torch.cuda.amp.grad_scaler": [[0, "module-torch.cuda.amp.grad_scaler"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "gradientedge (class in torch.autograd.graph)": [[1, "torch.autograd.graph.GradientEdge"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "get_gradient_edge() (in module torch.autograd.graph)": [[1, "torch.autograd.graph.get_gradient_edge"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "torch.autograd.anomaly_mode": [[1, "module-torch.autograd.anomaly_mode"]], "torch.autograd.forward_ad": [[1, "module-torch.autograd.forward_ad"]], "torch.autograd.function": [[1, "module-torch.autograd.function"]], "torch.autograd.functional": [[1, "module-torch.autograd.functional"]], "torch.autograd.grad_mode": [[1, "module-torch.autograd.grad_mode"]], "torch.autograd.gradcheck": [[1, "module-torch.autograd.gradcheck"]], "torch.autograd.graph": [[1, "module-torch.autograd.graph"]], "torch.autograd.profiler": [[1, "module-torch.autograd.profiler"]], "torch.autograd.profiler_legacy": [[1, "module-torch.autograd.profiler_legacy"]], "torch.autograd.profiler_util": [[1, "module-torch.autograd.profiler_util"]], "torch.autograd.variable": [[1, "module-torch.autograd.variable"]], "sdpaparams (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPAParams"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "can_use_efficient_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_efficient_attention"]], "can_use_flash_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_flash_attention"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cudnn_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cudnn_sdp_enabled"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_cudnn_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_cudnn_sdp"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.flags"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.get_fastpath_enabled"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_blas_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_blas_library"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "set_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.set_fastpath_enabled"]], "set_flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.set_flags"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.cudnn.rnn": [[2, "module-torch.backends.cudnn.rnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xeon.run_cpu": [[2, "module-torch.backends.xeon.run_cpu"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "compare (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Compare"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "adaptive_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.adaptive_autorange"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "colorize() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.colorize"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "extend_results() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.extend_results"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "highlight_warnings() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.highlight_warnings"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "print() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.print"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "trim_significant_figures() (torch.utils.benchmark.compare method)": [[3, "torch.utils.benchmark.Compare.trim_significant_figures"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "set_checkpoint_debug_enabled() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.set_checkpoint_debug_enabled"]], "cond() (in module torch._higher_order_ops.cond)": [[12, "torch._higher_order_ops.cond.cond"]], "parallel_info() (in module torch.__config__)": [[13, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[13, "torch.__config__.show"]], "torch.__config__": [[13, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[16, "module-torch.cpu"]], "torch.cuda": [[17, "module-torch.cuda"]], "torch.cuda.comm": [[17, "module-torch.cuda.comm"]], "torch.cuda.error": [[17, "module-torch.cuda.error"]], "torch.cuda.graphs": [[17, "module-torch.cuda.graphs"]], "torch.cuda.jiterator": [[17, "module-torch.cuda.jiterator"]], "torch.cuda.memory": [[17, "module-torch.cuda.memory"]], "torch.cuda.nccl": [[17, "module-torch.cuda.nccl"]], "torch.cuda.nvtx": [[17, "module-torch.cuda.nvtx"]], "torch.cuda.profiler": [[17, "module-torch.cuda.profiler"]], "torch.cuda.random": [[17, "module-torch.cuda.random"]], "torch.cuda.sparse": [[17, "module-torch.cuda.sparse"]], "torch.cuda.streams": [[17, "module-torch.cuda.streams"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[18, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[18, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[22, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[22, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[22, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[22, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[22, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[22, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[22, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[22, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[22, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[22, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[22, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[22, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[22, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[22, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[22, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[22, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[22, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[22, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[22, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[22, "torch.utils.data.random_split"]], "torch.utils.data": [[22, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[22, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[22, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[22, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[22, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[22, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[23, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.set_buffer"]], "fill_uninitialized_memory (in module torch.utils.deterministic)": [[26, "torch.utils.deterministic.fill_uninitialized_memory"]], "torch.utils.deterministic": [[26, "module-torch.utils.deterministic"]], "backend (class in torch.distributed)": [[27, "torch.distributed.Backend"]], "devicemesh (class in torch.distributed.device_mesh)": [[27, "torch.distributed.device_mesh.DeviceMesh"]], "distbackenderror (class in torch.distributed)": [[27, "torch.distributed.DistBackendError"]], "disterror (class in torch.distributed)": [[27, "torch.distributed.DistError"]], "distnetworkerror (class in torch.distributed)": [[27, "torch.distributed.DistNetworkError"]], "diststoreerror (class in torch.distributed)": [[27, "torch.distributed.DistStoreError"]], "filestore (class in torch.distributed)": [[27, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[27, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[27, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[27, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[27, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[27, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[27, "torch.distributed.TCPStore"]], "work (class in torch.distributed)": [[27, "torch.distributed.Work"]], "add() (in module torch.distributed.store)": [[27, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[27, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[27, "torch.distributed.all_gather_into_tensor"]], "all_gather_object() (in module torch.distributed)": [[27, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[27, "torch.distributed.all_reduce"]], "all_to_all() (in module torch.distributed)": [[27, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[27, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[27, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[27, "torch.distributed.batch_isend_irecv"]], "breakpoint() (in module torch.distributed)": [[27, "torch.distributed.breakpoint"]], "broadcast() (in module torch.distributed)": [[27, "torch.distributed.broadcast"]], "broadcast_object_list() (in module torch.distributed)": [[27, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[27, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[27, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[27, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[27, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[27, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[27, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[27, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[27, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[27, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[27, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[27, "torch.distributed.get_world_size"]], "init_device_mesh() (in module torch.distributed.device_mesh)": [[27, "torch.distributed.device_mesh.init_device_mesh"]], "init_process_group() (in module torch.distributed)": [[27, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[27, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[27, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[27, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[27, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[27, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[27, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[27, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[27, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[27, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[27, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[27, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[27, "torch.distributed.recv"]], "recv_object_list() (in module torch.distributed)": [[27, "torch.distributed.recv_object_list"]], "reduce() (in module torch.distributed)": [[27, "torch.distributed.reduce"]], "reduce_op (class in torch.distributed)": [[27, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[27, "torch.distributed.reduce_scatter"]], "reduce_scatter_tensor() (in module torch.distributed)": [[27, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[27, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[27, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[27, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[27, "torch.distributed.send"]], "send_object_list() (in module torch.distributed)": [[27, "torch.distributed.send_object_list"]], "set() (in module torch.distributed.store)": [[27, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[27, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[27, "module-torch.distributed"]], "torch.distributed.algorithms": [[27, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.post_localsgd_hook": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"]], "torch.distributed.algorithms.join": [[27, "module-torch.distributed.algorithms.join"]], "torch.distributed.algorithms.model_averaging": [[27, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.algorithms.model_averaging.averagers": [[27, "module-torch.distributed.algorithms.model_averaging.averagers"]], "torch.distributed.algorithms.model_averaging.hierarchical_model_averager": [[27, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"]], "torch.distributed.algorithms.model_averaging.utils": [[27, "module-torch.distributed.algorithms.model_averaging.utils"]], "torch.distributed.argparse_util": [[27, "module-torch.distributed.argparse_util"]], "torch.distributed.c10d_logger": [[27, "module-torch.distributed.c10d_logger"]], "torch.distributed.checkpoint.api": [[27, "module-torch.distributed.checkpoint.api"]], "torch.distributed.checkpoint.default_planner": [[27, "module-torch.distributed.checkpoint.default_planner"]], "torch.distributed.checkpoint.filesystem": [[27, "module-torch.distributed.checkpoint.filesystem"]], "torch.distributed.checkpoint.metadata": [[27, "module-torch.distributed.checkpoint.metadata"]], "torch.distributed.checkpoint.optimizer": [[27, "module-torch.distributed.checkpoint.optimizer"]], "torch.distributed.checkpoint.planner": [[27, "module-torch.distributed.checkpoint.planner"]], "torch.distributed.checkpoint.planner_helpers": [[27, "module-torch.distributed.checkpoint.planner_helpers"]], "torch.distributed.checkpoint.resharding": [[27, "module-torch.distributed.checkpoint.resharding"]], "torch.distributed.checkpoint.state_dict": [[27, "module-torch.distributed.checkpoint.state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[27, "module-torch.distributed.checkpoint.state_dict_loader"]], "torch.distributed.checkpoint.state_dict_saver": [[27, "module-torch.distributed.checkpoint.state_dict_saver"]], "torch.distributed.checkpoint.stateful": [[27, "module-torch.distributed.checkpoint.stateful"]], "torch.distributed.checkpoint.storage": [[27, "module-torch.distributed.checkpoint.storage"]], "torch.distributed.checkpoint.utils": [[27, "module-torch.distributed.checkpoint.utils"]], "torch.distributed.collective_utils": [[27, "module-torch.distributed.collective_utils"]], "torch.distributed.constants": [[27, "module-torch.distributed.constants"]], "torch.distributed.device_mesh": [[27, "module-torch.distributed.device_mesh"]], "torch.distributed.distributed_c10d": [[27, "module-torch.distributed.distributed_c10d"]], "torch.distributed.elastic": [[27, "module-torch.distributed.elastic"]], "torch.distributed.elastic.agent.server.api": [[27, "module-torch.distributed.elastic.agent.server.api"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[27, "module-torch.distributed.elastic.agent.server.local_elastic_agent"]], "torch.distributed.elastic.events.api": [[27, "module-torch.distributed.elastic.events.api"]], "torch.distributed.elastic.events.handlers": [[27, "module-torch.distributed.elastic.events.handlers"]], "torch.distributed.elastic.metrics.api": [[27, "module-torch.distributed.elastic.metrics.api"]], "torch.distributed.elastic.multiprocessing.api": [[27, "module-torch.distributed.elastic.multiprocessing.api"]], "torch.distributed.elastic.multiprocessing.errors.error_handler": [[27, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"]], "torch.distributed.elastic.multiprocessing.errors.handlers": [[27, "module-torch.distributed.elastic.multiprocessing.errors.handlers"]], "torch.distributed.elastic.multiprocessing.redirects": [[27, "module-torch.distributed.elastic.multiprocessing.redirects"]], "torch.distributed.elastic.multiprocessing.tail_log": [[27, "module-torch.distributed.elastic.multiprocessing.tail_log"]], "torch.distributed.elastic.rendezvous.api": [[27, "module-torch.distributed.elastic.rendezvous.api"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[27, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[27, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[27, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[27, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.etcd_server": [[27, "module-torch.distributed.elastic.rendezvous.etcd_server"]], "torch.distributed.elastic.rendezvous.etcd_store": [[27, "module-torch.distributed.elastic.rendezvous.etcd_store"]], "torch.distributed.elastic.rendezvous.static_tcp_rendezvous": [[27, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"]], "torch.distributed.elastic.rendezvous.utils": [[27, "module-torch.distributed.elastic.rendezvous.utils"]], "torch.distributed.elastic.timer.api": [[27, "module-torch.distributed.elastic.timer.api"]], "torch.distributed.elastic.timer.file_based_local_timer": [[27, "module-torch.distributed.elastic.timer.file_based_local_timer"]], "torch.distributed.elastic.timer.local_timer": [[27, "module-torch.distributed.elastic.timer.local_timer"]], "torch.distributed.elastic.utils": [[27, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.api": [[27, "module-torch.distributed.elastic.utils.api"]], "torch.distributed.elastic.utils.data": [[27, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.elastic.utils.data.cycling_iterator": [[27, "module-torch.distributed.elastic.utils.data.cycling_iterator"]], "torch.distributed.elastic.utils.data.elastic_distributed_sampler": [[27, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"]], "torch.distributed.elastic.utils.distributed": [[27, "module-torch.distributed.elastic.utils.distributed"]], "torch.distributed.elastic.utils.log_level": [[27, "module-torch.distributed.elastic.utils.log_level"]], "torch.distributed.elastic.utils.logging": [[27, "module-torch.distributed.elastic.utils.logging"]], "torch.distributed.elastic.utils.store": [[27, "module-torch.distributed.elastic.utils.store"]], "torch.distributed.fsdp.api": [[27, "module-torch.distributed.fsdp.api"]], "torch.distributed.fsdp.fully_sharded_data_parallel": [[27, "module-torch.distributed.fsdp.fully_sharded_data_parallel"]], "torch.distributed.fsdp.sharded_grad_scaler": [[27, "module-torch.distributed.fsdp.sharded_grad_scaler"]], "torch.distributed.fsdp.wrap": [[27, "module-torch.distributed.fsdp.wrap"]], "torch.distributed.launch": [[27, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[27, "module-torch.distributed.launcher"]], "torch.distributed.launcher.api": [[27, "module-torch.distributed.launcher.api"]], "torch.distributed.logging_handlers": [[27, "module-torch.distributed.logging_handlers"]], "torch.distributed.nn": [[27, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[27, "module-torch.distributed.nn.api"]], "torch.distributed.nn.api.remote_module": [[27, "module-torch.distributed.nn.api.remote_module"]], "torch.distributed.nn.functional": [[27, "module-torch.distributed.nn.functional"]], "torch.distributed.nn.jit": [[27, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.instantiator": [[27, "module-torch.distributed.nn.jit.instantiator"]], "torch.distributed.nn.jit.templates": [[27, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.nn.jit.templates.remote_module_template": [[27, "module-torch.distributed.nn.jit.templates.remote_module_template"]], "torch.distributed.optim.apply_optimizer_in_backward": [[27, "module-torch.distributed.optim.apply_optimizer_in_backward"]], "torch.distributed.optim.functional_adadelta": [[27, "module-torch.distributed.optim.functional_adadelta"]], "torch.distributed.optim.functional_adagrad": [[27, "module-torch.distributed.optim.functional_adagrad"]], "torch.distributed.optim.functional_adam": [[27, "module-torch.distributed.optim.functional_adam"]], "torch.distributed.optim.functional_adamax": [[27, "module-torch.distributed.optim.functional_adamax"]], "torch.distributed.optim.functional_adamw": [[27, "module-torch.distributed.optim.functional_adamw"]], "torch.distributed.optim.functional_rmsprop": [[27, "module-torch.distributed.optim.functional_rmsprop"]], "torch.distributed.optim.functional_rprop": [[27, "module-torch.distributed.optim.functional_rprop"]], "torch.distributed.optim.functional_sgd": [[27, "module-torch.distributed.optim.functional_sgd"]], "torch.distributed.optim.named_optimizer": [[27, "module-torch.distributed.optim.named_optimizer"]], "torch.distributed.optim.optimizer": [[27, "module-torch.distributed.optim.optimizer"]], "torch.distributed.optim.post_localsgd_optimizer": [[27, "module-torch.distributed.optim.post_localSGD_optimizer"]], "torch.distributed.optim.utils": [[27, "module-torch.distributed.optim.utils"]], "torch.distributed.optim.zero_redundancy_optimizer": [[27, "module-torch.distributed.optim.zero_redundancy_optimizer"]], "torch.distributed.pipeline": [[27, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[27, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.batchnorm": [[27, "module-torch.distributed.pipeline.sync.batchnorm"]], "torch.distributed.pipeline.sync.checkpoint": [[27, "module-torch.distributed.pipeline.sync.checkpoint"]], "torch.distributed.pipeline.sync.copy": [[27, "module-torch.distributed.pipeline.sync.copy"]], "torch.distributed.pipeline.sync.dependency": [[27, "module-torch.distributed.pipeline.sync.dependency"]], "torch.distributed.pipeline.sync.microbatch": [[27, "module-torch.distributed.pipeline.sync.microbatch"]], "torch.distributed.pipeline.sync.phony": [[27, "module-torch.distributed.pipeline.sync.phony"]], "torch.distributed.pipeline.sync.pipe": [[27, "module-torch.distributed.pipeline.sync.pipe"]], "torch.distributed.pipeline.sync.pipeline": [[27, "module-torch.distributed.pipeline.sync.pipeline"]], "torch.distributed.pipeline.sync.skip": [[27, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.pipeline.sync.skip.layout": [[27, "module-torch.distributed.pipeline.sync.skip.layout"]], "torch.distributed.pipeline.sync.skip.namespace": [[27, "module-torch.distributed.pipeline.sync.skip.namespace"]], "torch.distributed.pipeline.sync.skip.portal": [[27, "module-torch.distributed.pipeline.sync.skip.portal"]], "torch.distributed.pipeline.sync.skip.skippable": [[27, "module-torch.distributed.pipeline.sync.skip.skippable"]], "torch.distributed.pipeline.sync.skip.tracker": [[27, "module-torch.distributed.pipeline.sync.skip.tracker"]], "torch.distributed.pipeline.sync.stream": [[27, "module-torch.distributed.pipeline.sync.stream"]], "torch.distributed.pipeline.sync.utils": [[27, "module-torch.distributed.pipeline.sync.utils"]], "torch.distributed.pipeline.sync.worker": [[27, "module-torch.distributed.pipeline.sync.worker"]], "torch.distributed.remote_device": [[27, "module-torch.distributed.remote_device"]], "torch.distributed.rendezvous": [[27, "module-torch.distributed.rendezvous"]], "torch.distributed.rpc.api": [[27, "module-torch.distributed.rpc.api"]], "torch.distributed.rpc.backend_registry": [[27, "module-torch.distributed.rpc.backend_registry"]], "torch.distributed.rpc.constants": [[27, "module-torch.distributed.rpc.constants"]], "torch.distributed.rpc.functions": [[27, "module-torch.distributed.rpc.functions"]], "torch.distributed.rpc.internal": [[27, "module-torch.distributed.rpc.internal"]], "torch.distributed.rpc.options": [[27, "module-torch.distributed.rpc.options"]], "torch.distributed.rpc.rref_proxy": [[27, "module-torch.distributed.rpc.rref_proxy"]], "torch.distributed.rpc.server_process_global_profiler": [[27, "module-torch.distributed.rpc.server_process_global_profiler"]], "torch.distributed.tensor": [[27, "module-torch.distributed.tensor"]], "torch.distributed.tensor.parallel.api": [[27, "module-torch.distributed.tensor.parallel.api"]], "torch.distributed.tensor.parallel.ddp": [[27, "module-torch.distributed.tensor.parallel.ddp"]], "torch.distributed.tensor.parallel.fsdp": [[27, "module-torch.distributed.tensor.parallel.fsdp"]], "torch.distributed.tensor.parallel.input_reshard": [[27, "module-torch.distributed.tensor.parallel.input_reshard"]], "torch.distributed.tensor.parallel.loss": [[27, "module-torch.distributed.tensor.parallel.loss"]], "torch.distributed.tensor.parallel.style": [[27, "module-torch.distributed.tensor.parallel.style"]], "torch.distributed.utils": [[27, "module-torch.distributed.utils"]], "wait() (in module torch.distributed.store)": [[27, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[28, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[28, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[28, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[28, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[28, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[28, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[28, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[28, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[28, "torch.distributed.algorithms.JoinHook.post_hook"]], "asyncstager (class in torch.distributed.checkpoint.staging)": [[29, "torch.distributed.checkpoint.staging.AsyncStager"]], "blockingasyncstager (class in torch.distributed.checkpoint.staging)": [[29, "torch.distributed.checkpoint.staging.BlockingAsyncStager"]], "broadcastingtorchsavereader (class in torch.distributed.checkpoint.format_utils)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.DefaultSavePlanner"]], "dynamicmetaloadplanner (class in torch.distributed.checkpoint.format_utils)": [[29, "torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.SavePlanner"]], "statedictoptions (class in torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.StateDictOptions"]], "stateful (class in torch.distributed.checkpoint.stateful)": [[29, "torch.distributed.checkpoint.stateful.Stateful"]], "storagereader (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint.planner)": [[29, "torch.distributed.checkpoint.planner.WriteItem"]], "async_save() (in module torch.distributed.checkpoint.state_dict_saver)": [[29, "torch.distributed.checkpoint.state_dict_saver.async_save"]], "checkpoint_id (torch.distributed.checkpoint.filesystemreader property)": [[29, "torch.distributed.checkpoint.FileSystemReader.checkpoint_id"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "dcp_to_torch_save() (in module torch.distributed.checkpoint.format_utils)": [[29, "torch.distributed.checkpoint.format_utils.dcp_to_torch_save"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "get_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.get_model_state_dict"]], "get_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.get_optimizer_state_dict"]], "get_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.get_state_dict"]], "load() (in module torch.distributed.checkpoint.state_dict_loader)": [[29, "torch.distributed.checkpoint.state_dict_loader.load"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint.state_dict_loader)": [[29, "torch.distributed.checkpoint.state_dict_loader.load_state_dict"]], "load_state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[29, "torch.distributed.checkpoint.stateful.Stateful.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[29, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[29, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_data() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "read_metadata() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.read_metadata"]], "reset() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.reset"]], "reset() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.reset"]], "reset() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.reset"]], "resolve_bytes() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.resolve_bytes"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save() (in module torch.distributed.checkpoint.state_dict_saver)": [[29, "torch.distributed.checkpoint.state_dict_saver.save"]], "save_state_dict() (in module torch.distributed.checkpoint.state_dict_saver)": [[29, "torch.distributed.checkpoint.state_dict_saver.save_state_dict"]], "set_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.set_model_state_dict"]], "set_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.set_optimizer_state_dict"]], "set_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.set_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.format_utils.dynamicmetaloadplanner method)": [[29, "torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_reader() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "should_synchronize_after_execute (torch.distributed.checkpoint.staging.asyncstager property)": [[29, "torch.distributed.checkpoint.staging.AsyncStager.should_synchronize_after_execute"]], "stage() (torch.distributed.checkpoint.filesystemwriter method)": [[29, "torch.distributed.checkpoint.FileSystemWriter.stage"]], "stage() (torch.distributed.checkpoint.staging.asyncstager method)": [[29, "torch.distributed.checkpoint.staging.AsyncStager.stage"]], "stage() (torch.distributed.checkpoint.staging.blockingasyncstager method)": [[29, "torch.distributed.checkpoint.staging.BlockingAsyncStager.stage"]], "state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[29, "torch.distributed.checkpoint.stateful.Stateful.state_dict"]], "storage_meta() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.storage_meta"]], "synchronize_staging() (torch.distributed.checkpoint.staging.asyncstager method)": [[29, "torch.distributed.checkpoint.staging.AsyncStager.synchronize_staging"]], "synchronize_staging() (torch.distributed.checkpoint.staging.blockingasyncstager method)": [[29, "torch.distributed.checkpoint.staging.BlockingAsyncStager.synchronize_staging"]], "tensor_storage_size() (torch.distributed.checkpoint.planner.writeitem method)": [[29, "torch.distributed.checkpoint.planner.WriteItem.tensor_storage_size"]], "torch.distributed.checkpoint": [[29, "module-torch.distributed.checkpoint"]], "torch.distributed.checkpoint.format_utils": [[29, "module-torch.distributed.checkpoint.format_utils"]], "torch.distributed.checkpoint.logger": [[29, "module-torch.distributed.checkpoint.logger"]], "torch.distributed.checkpoint.logging_handlers": [[29, "module-torch.distributed.checkpoint.logging_handlers"]], "torch.distributed.checkpoint.staging": [[29, "module-torch.distributed.checkpoint.staging"]], "torch_save_to_dcp() (in module torch.distributed.checkpoint.format_utils)": [[29, "torch.distributed.checkpoint.format_utils.torch_save_to_dcp"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[29, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[29, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "validate_checkpoint_id() (torch.distributed.checkpoint.storagereader class method)": [[29, "torch.distributed.checkpoint.StorageReader.validate_checkpoint_id"]], "validate_checkpoint_id() (torch.distributed.checkpoint.storagewriter class method)": [[29, "torch.distributed.checkpoint.StorageWriter.validate_checkpoint_id"]], "validate_checkpoint_id() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader class method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.validate_checkpoint_id"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[31, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[31, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_device (torch.distributed.optim.zeroredundancyoptimizer property)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.join_device"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "join_process_group (torch.distributed.optim.zeroredundancyoptimizer property)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.join_process_group"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[31, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[31, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[31, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[31, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[31, "module-torch.distributed.optim"]], "argschunkspec (class in torch.distributed.pipelining)": [[32, "torch.distributed.pipelining.ArgsChunkSpec"]], "kwargschunkspec (class in torch.distributed.pipelining)": [[32, "torch.distributed.pipelining.KwargsChunkSpec"]], "pipe (class in torch.distributed.pipelining)": [[32, "torch.distributed.pipelining.Pipe"]], "schedule1f1b (class in torch.distributed.pipelining.pipelineschedule)": [[32, "torch.distributed.pipelining.PipelineSchedule.Schedule1F1B"]], "schedulegpipe (class in torch.distributed.pipelining.pipelineschedule)": [[32, "torch.distributed.pipelining.PipelineSchedule.ScheduleGPipe"]], "scheduleinterleaved1f1b (class in torch.distributed.pipelining.pipelineschedule)": [[32, "torch.distributed.pipelining.PipelineSchedule.ScheduleInterleaved1F1B"]], "scheduleloopedbfs (class in torch.distributed.pipelining.pipelineschedule)": [[32, "torch.distributed.pipelining.PipelineSchedule.ScheduleLoopedBFS"]], "splitpoint (class in torch.distributed.pipelining)": [[32, "torch.distributed.pipelining.SplitPoint"]], "tensorchunkspec (class in torch.distributed.pipelining.microbatch)": [[32, "torch.distributed.pipelining.microbatch.TensorChunkSpec"]], "annotate_split_points() (in module torch.distributed.pipelining)": [[32, "torch.distributed.pipelining.annotate_split_points"]], "merge_chunks() (in module torch.distributed.pipelining.microbatch)": [[32, "torch.distributed.pipelining.microbatch.merge_chunks"]], "pipe_split() (in module torch.distributed.pipelining)": [[32, "torch.distributed.pipelining.pipe_split"]], "pipeline() (in module torch.distributed.pipelining)": [[32, "torch.distributed.pipelining.pipeline"]], "split_args_kwargs_into_chunks() (in module torch.distributed.pipelining.microbatch)": [[32, "torch.distributed.pipelining.microbatch.split_args_kwargs_into_chunks"]], "torch.distributed.pipelining": [[32, "module-torch.distributed.pipelining"]], "torch.distributed.pipelining.pipelineschedule": [[32, "module-torch.distributed.pipelining.PipelineSchedule"]], "torch.distributed.pipelining.microbatch": [[32, "module-torch.distributed.pipelining.microbatch"]], "colwiseparallel (class in torch.distributed.tensor.parallel)": [[33, "torch.distributed.tensor.parallel.ColwiseParallel"]], "preparemoduleinput (class in torch.distributed.tensor.parallel)": [[33, "torch.distributed.tensor.parallel.PrepareModuleInput"]], "preparemoduleoutput (class in torch.distributed.tensor.parallel)": [[33, "torch.distributed.tensor.parallel.PrepareModuleOutput"]], "rowwiseparallel (class in torch.distributed.tensor.parallel)": [[33, "torch.distributed.tensor.parallel.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel)": [[33, "torch.distributed.tensor.parallel.SequenceParallel"]], "loss_parallel() (in module torch.distributed.tensor.parallel)": [[33, "torch.distributed.tensor.parallel.loss_parallel"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[33, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[33, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[34, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[34, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[34, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[34, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[34, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[34, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[34, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[34, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[34, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[34, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[34, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[34, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[34, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[34, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[34, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[34, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[34, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[34, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.IndependentTransform"]], "inversegamma (class in torch.distributions.inverse_gamma)": [[34, "torch.distributions.inverse_gamma.InverseGamma"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[34, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[34, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[34, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[34, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[34, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[34, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[34, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[34, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[34, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[34, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[34, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[34, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[34, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[34, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[34, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[34, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[34, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[34, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[34, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[34, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[34, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[34, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[34, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[34, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[34, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[34, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[34, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[34, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[34, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[34, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[34, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[34, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[34, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.inverse_gamma.inversegamma attribute)": [[34, "torch.distributions.inverse_gamma.InverseGamma.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[34, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[34, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[34, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[34, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[34, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[34, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[34, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[34, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[34, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[34, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[34, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[34, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[34, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[34, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[34, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[34, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[34, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[34, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[34, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[34, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[34, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[34, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[34, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[34, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[34, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[34, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration (torch.distributions.inverse_gamma.inversegamma property)": [[34, "torch.distributions.inverse_gamma.InverseGamma.concentration"]], "concentration0 (torch.distributions.beta.beta property)": [[34, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[34, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[34, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[34, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[34, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[34, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[34, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[34, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[34, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[34, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[34, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[34, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[34, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[34, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[34, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[34, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[34, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[34, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.inverse_gamma.inversegamma method)": [[34, "torch.distributions.inverse_gamma.InverseGamma.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[34, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[34, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[34, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[34, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[34, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[34, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[34, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[34, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[34, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[34, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[34, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[34, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[34, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[34, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[34, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[34, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[34, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[34, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[34, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[34, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[34, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[34, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[34, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[34, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[34, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[34, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[34, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[34, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[34, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.inverse_gamma.inversegamma method)": [[34, "torch.distributions.inverse_gamma.InverseGamma.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[34, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[34, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[34, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[34, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[34, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[34, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[34, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[34, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[34, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[34, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[34, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[34, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[34, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[34, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[34, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[34, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[34, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[34, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[34, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[34, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[34, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[34, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[34, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[34, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[34, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[34, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[34, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[34, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[34, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.inverse_gamma.inversegamma attribute)": [[34, "torch.distributions.inverse_gamma.InverseGamma.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[34, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[34, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[34, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[34, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[34, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[34, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[34, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[34, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[34, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[34, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[34, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[34, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[34, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[34, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[34, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[34, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[34, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[34, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[34, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[34, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[34, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[34, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[34, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[34, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[34, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[34, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[34, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[34, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[34, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[34, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[34, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[34, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[34, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[34, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[34, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[34, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[34, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[34, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[34, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[34, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[34, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[34, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[34, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[34, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[34, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[34, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[34, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[34, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[34, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[34, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[34, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[34, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[34, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[34, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[34, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[34, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[34, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[34, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[34, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[34, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[34, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[34, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[34, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[34, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[34, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[34, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[34, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.inverse_gamma.inversegamma property)": [[34, "torch.distributions.inverse_gamma.InverseGamma.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[34, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[34, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[34, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[34, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[34, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[34, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[34, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[34, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[34, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[34, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[34, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[34, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[34, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[34, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[34, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[34, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[34, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[34, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[34, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[34, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[34, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[34, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[34, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[34, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[34, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[34, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.inverse_gamma.inversegamma property)": [[34, "torch.distributions.inverse_gamma.InverseGamma.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[34, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[34, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[34, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[34, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[34, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[34, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[34, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[34, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[34, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[34, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[34, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[34, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[34, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[34, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[34, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[34, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[34, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[34, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[34, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[34, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[34, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[34, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[34, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[34, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[34, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "rate (torch.distributions.inverse_gamma.inversegamma property)": [[34, "torch.distributions.inverse_gamma.InverseGamma.rate"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[34, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[34, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[34, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[34, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[34, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[34, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[34, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[34, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[34, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[34, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[34, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[34, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[34, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[34, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[34, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[34, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[34, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[34, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[34, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[34, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[34, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[34, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[34, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[34, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[34, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[34, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[34, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[34, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[34, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[34, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[34, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[34, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[34, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[34, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[34, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[34, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[34, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[34, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[34, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[34, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[34, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[34, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[34, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[34, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[34, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[34, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[34, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[34, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[34, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[34, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[34, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[34, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.inverse_gamma.inversegamma attribute)": [[34, "torch.distributions.inverse_gamma.InverseGamma.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[34, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[34, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[34, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[34, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[34, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[34, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[34, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[34, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[34, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[34, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[34, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[34, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[34, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[34, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[34, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[34, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[34, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[34, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[34, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[34, "module-torch.distributions"]], "torch.distributions.bernoulli": [[34, "module-torch.distributions.bernoulli"]], "torch.distributions.beta": [[34, "module-torch.distributions.beta"]], "torch.distributions.binomial": [[34, "module-torch.distributions.binomial"]], "torch.distributions.categorical": [[34, "module-torch.distributions.categorical"]], "torch.distributions.cauchy": [[34, "module-torch.distributions.cauchy"]], "torch.distributions.chi2": [[34, "module-torch.distributions.chi2"]], "torch.distributions.constraint_registry": [[34, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[34, "module-torch.distributions.constraints"]], "torch.distributions.continuous_bernoulli": [[34, "module-torch.distributions.continuous_bernoulli"]], "torch.distributions.dirichlet": [[34, "module-torch.distributions.dirichlet"]], "torch.distributions.distribution": [[34, "module-torch.distributions.distribution"]], "torch.distributions.exp_family": [[34, "module-torch.distributions.exp_family"]], "torch.distributions.exponential": [[34, "module-torch.distributions.exponential"]], "torch.distributions.fishersnedecor": [[34, "module-torch.distributions.fishersnedecor"]], "torch.distributions.gamma": [[34, "module-torch.distributions.gamma"]], "torch.distributions.geometric": [[34, "module-torch.distributions.geometric"]], "torch.distributions.gumbel": [[34, "module-torch.distributions.gumbel"]], "torch.distributions.half_cauchy": [[34, "module-torch.distributions.half_cauchy"]], "torch.distributions.half_normal": [[34, "module-torch.distributions.half_normal"]], "torch.distributions.independent": [[34, "module-torch.distributions.independent"]], "torch.distributions.inverse_gamma": [[34, "module-torch.distributions.inverse_gamma"]], "torch.distributions.kl": [[34, "module-torch.distributions.kl"]], "torch.distributions.kumaraswamy": [[34, "module-torch.distributions.kumaraswamy"]], "torch.distributions.laplace": [[34, "module-torch.distributions.laplace"]], "torch.distributions.lkj_cholesky": [[34, "module-torch.distributions.lkj_cholesky"]], "torch.distributions.log_normal": [[34, "module-torch.distributions.log_normal"]], "torch.distributions.logistic_normal": [[34, "module-torch.distributions.logistic_normal"]], "torch.distributions.lowrank_multivariate_normal": [[34, "module-torch.distributions.lowrank_multivariate_normal"]], "torch.distributions.mixture_same_family": [[34, "module-torch.distributions.mixture_same_family"]], "torch.distributions.multinomial": [[34, "module-torch.distributions.multinomial"]], "torch.distributions.multivariate_normal": [[34, "module-torch.distributions.multivariate_normal"]], "torch.distributions.negative_binomial": [[34, "module-torch.distributions.negative_binomial"]], "torch.distributions.normal": [[34, "module-torch.distributions.normal"]], "torch.distributions.one_hot_categorical": [[34, "module-torch.distributions.one_hot_categorical"]], "torch.distributions.pareto": [[34, "module-torch.distributions.pareto"]], "torch.distributions.poisson": [[34, "module-torch.distributions.poisson"]], "torch.distributions.relaxed_bernoulli": [[34, "module-torch.distributions.relaxed_bernoulli"]], "torch.distributions.relaxed_categorical": [[34, "module-torch.distributions.relaxed_categorical"]], "torch.distributions.studentt": [[34, "module-torch.distributions.studentT"]], "torch.distributions.transformed_distribution": [[34, "module-torch.distributions.transformed_distribution"]], "torch.distributions.transforms": [[34, "module-torch.distributions.transforms"]], "torch.distributions.uniform": [[34, "module-torch.distributions.uniform"]], "torch.distributions.utils": [[34, "module-torch.distributions.utils"]], "torch.distributions.von_mises": [[34, "module-torch.distributions.von_mises"]], "torch.distributions.weibull": [[34, "module-torch.distributions.weibull"]], "torch.distributions.wishart": [[34, "module-torch.distributions.wishart"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[34, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[34, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[34, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[34, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[34, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[34, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[34, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[34, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[34, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[34, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[34, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[34, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[34, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[34, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[34, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[34, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[34, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.inverse_gamma.inversegamma property)": [[34, "torch.distributions.inverse_gamma.InverseGamma.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[34, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[34, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[34, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[34, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[34, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[34, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[34, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[34, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[34, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[34, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[34, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[34, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[34, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[34, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[34, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[34, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[34, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[35, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[35, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[36, "torch.distributed.elastic.agent.server.ElasticAgent"]], "healthcheckserver (class in torch.distributed.elastic.agent.server.health_check_server)": [[36, "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[36, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[36, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[36, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[36, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[36, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[36, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[36, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "create_healthcheck_server() (in module torch.distributed.elastic.agent.server.health_check_server)": [[36, "torch.distributed.elastic.agent.server.health_check_server.create_healthcheck_server"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[36, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[36, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[36, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[36, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "start() (torch.distributed.elastic.agent.server.health_check_server.healthcheckserver method)": [[36, "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer.start"]], "stop() (torch.distributed.elastic.agent.server.health_check_server.healthcheckserver method)": [[36, "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer.stop"]], "torch.distributed.elastic.agent": [[36, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[36, "module-torch.distributed.elastic.agent.server"]], "torch.distributed.elastic.agent.server.health_check_server": [[36, "module-torch.distributed.elastic.agent.server.health_check_server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[38, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[38, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[38, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[38, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[38, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[39, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[39, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[39, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[39, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[39, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[39, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[42, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[42, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[42, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[42, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[42, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[42, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[42, "module-torch.distributed.elastic.metrics"]], "defaultlogsspecs (class in torch.distributed.elastic.multiprocessing.api)": [[43, "torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs"]], "logsdest (class in torch.distributed.elastic.multiprocessing.api)": [[43, "torch.distributed.elastic.multiprocessing.api.LogsDest"]], "logsspecs (class in torch.distributed.elastic.multiprocessing.api)": [[43, "torch.distributed.elastic.multiprocessing.api.LogsSpecs"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[43, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[43, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[43, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[43, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "reify() (torch.distributed.elastic.multiprocessing.api.defaultlogsspecs method)": [[43, "torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs.reify"]], "reify() (torch.distributed.elastic.multiprocessing.api.logsspecs method)": [[43, "torch.distributed.elastic.multiprocessing.api.LogsSpecs.reify"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[43, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[43, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[45, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[45, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[45, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[45, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[45, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[45, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[45, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[45, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvousgracefulexiterror (class in torch.distributed.elastic.rendezvous)": [[45, "torch.distributed.elastic.rendezvous.RendezvousGracefulExitError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[45, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[45, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[45, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[45, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[45, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[45, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[45, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[45, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[45, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[45, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[45, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[45, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[45, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[45, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[45, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[45, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[45, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[45, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[45, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[45, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[46, "module-torch.distributed.run"]], "subprocesshandler (class in torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler)": [[47, "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler.SubprocessHandler"]], "get_subprocess_handler() (in module torch.distributed.elastic.multiprocessing.subprocess_handler.handlers)": [[47, "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers.get_subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler": [[47, "module-torch.distributed.elastic.multiprocessing.subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers": [[47, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.handlers"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler": [[47, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[48, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[48, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[48, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[48, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[48, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[48, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[48, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[48, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[48, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[48, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[48, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[48, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "log_debug_info_for_expired_timers() (in module torch.distributed.elastic.timer.debug_info_logging)": [[48, "torch.distributed.elastic.timer.debug_info_logging.log_debug_info_for_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[48, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[48, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[48, "module-torch.distributed.elastic.timer"]], "torch.distributed.elastic.timer.debug_info_logging": [[48, "module-torch.distributed.elastic.timer.debug_info_logging"]], "constraint (in module torch.export)": [[50, "torch.export.Constraint"]], "customobjargument (class in torch.export.graph_signature)": [[50, "torch.export.graph_signature.CustomObjArgument"]], "dim() (in module torch.export.dynamic_shapes)": [[50, "torch.export.dynamic_shapes.Dim"]], "exportbackwardsignature (class in torch.export)": [[50, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[50, "torch.export.ExportGraphSignature"]], "exportgraphsignature (class in torch.export.graph_signature)": [[50, "torch.export.graph_signature.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[50, "torch.export.ExportedProgram"]], "flatargsadapter (class in torch.export.unflatten)": [[50, "torch.export.unflatten.FlatArgsAdapter"]], "inputkind (class in torch.export.graph_signature)": [[50, "torch.export.graph_signature.InputKind"]], "inputspec (class in torch.export.graph_signature)": [[50, "torch.export.graph_signature.InputSpec"]], "interpretermodule (class in torch.export.unflatten)": [[50, "torch.export.unflatten.InterpreterModule"]], "modulecallentry (class in torch.export)": [[50, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[50, "torch.export.ModuleCallSignature"]], "outputkind (class in torch.export.graph_signature)": [[50, "torch.export.graph_signature.OutputKind"]], "outputspec (class in torch.export.graph_signature)": [[50, "torch.export.graph_signature.OutputSpec"]], "shapescollection (class in torch.export.dynamic_shapes)": [[50, "torch.export.dynamic_shapes.ShapesCollection"]], "adapt() (torch.export.unflatten.flatargsadapter method)": [[50, "torch.export.unflatten.FlatArgsAdapter.adapt"]], "buffers() (torch.export.exportedprogram method)": [[50, "torch.export.ExportedProgram.buffers"]], "dims() (in module torch.export)": [[50, "torch.export.dims"]], "dynamic_dim() (in module torch.export.dynamic_shapes)": [[50, "torch.export.dynamic_shapes.dynamic_dim"]], "dynamic_shapes() (torch.export.dynamic_shapes.shapescollection method)": [[50, "torch.export.dynamic_shapes.ShapesCollection.dynamic_shapes"]], "export() (in module torch.export)": [[50, "torch.export.export"]], "get_replace_hook() (torch.export.graph_signature.exportgraphsignature method)": [[50, "torch.export.graph_signature.ExportGraphSignature.get_replace_hook"]], "load() (in module torch.export)": [[50, "torch.export.load"]], "module() (torch.export.exportedprogram method)": [[50, "torch.export.ExportedProgram.module"]], "named_buffers() (torch.export.exportedprogram method)": [[50, "torch.export.ExportedProgram.named_buffers"]], "named_parameters() (torch.export.exportedprogram method)": [[50, "torch.export.ExportedProgram.named_parameters"]], "parameters() (torch.export.exportedprogram method)": [[50, "torch.export.ExportedProgram.parameters"]], "register_dataclass() (in module torch.export)": [[50, "torch.export.register_dataclass"]], "replace_all_uses() (torch.export.graph_signature.exportgraphsignature method)": [[50, "torch.export.graph_signature.ExportGraphSignature.replace_all_uses"]], "run_decompositions() (torch.export.exportedprogram method)": [[50, "torch.export.ExportedProgram.run_decompositions"]], "save() (in module torch.export)": [[50, "torch.export.save"]], "torch.export": [[50, "module-torch.export"]], "torch.export.custom_obj": [[50, "module-torch.export.custom_obj"]], "torch.export.dynamic_shapes": [[50, "module-torch.export.dynamic_shapes"]], "torch.export.exported_program": [[50, "module-torch.export.exported_program"]], "torch.export.graph_signature": [[50, "module-torch.export.graph_signature"]], "torch.export.unflatten": [[50, "module-torch.export.unflatten"]], "unflatten() (in module torch.export.unflatten)": [[50, "torch.export.unflatten.unflatten"]], "torch.fft": [[52, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[53, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "check_is_root() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.check_is_root"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[53, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[53, "module-torch.distributed.fsdp"]], "torch.func": [[55, "module-torch.func"]], "get_overwrite_module_params_on_conversion() (in module torch.__future__)": [[60, "torch.__future__.get_overwrite_module_params_on_conversion"]], "get_swap_module_params_on_conversion() (in module torch.__future__)": [[60, "torch.__future__.get_swap_module_params_on_conversion"]], "set_overwrite_module_params_on_conversion() (in module torch.__future__)": [[60, "torch.__future__.set_overwrite_module_params_on_conversion"]], "set_swap_module_params_on_conversion() (in module torch.__future__)": [[60, "torch.__future__.set_swap_module_params_on_conversion"]], "torch.__future__": [[60, "module-torch.__future__"]], "future (class in torch.futures)": [[61, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[61, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[61, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[61, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[61, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[61, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[61, "torch.futures.Future.then"]], "torch.futures": [[61, "module-torch.futures"]], "value() (torch.futures.future method)": [[61, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[61, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[61, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[62, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[62, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[62, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[62, "torch.fx.Node"]], "proxy (class in torch.fx)": [[62, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[62, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[62, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[62, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[62, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[62, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[62, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[62, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[62, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[62, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[62, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[62, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[62, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[62, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[62, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[62, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[62, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[62, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[62, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[62, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.fetch_attr"]], "find_nodes() (torch.fx.graph method)": [[62, "torch.fx.Graph.find_nodes"]], "format_node() (torch.fx.node method)": [[62, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[62, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[62, "torch.fx.Transformer.get_attr"]], "get_fresh_qualname() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.get_fresh_qualname"]], "getattr() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[62, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[62, "torch.fx.Graph.graph_copy"]], "insert_arg() (torch.fx.node method)": [[62, "torch.fx.Node.insert_arg"]], "inserting_after() (torch.fx.graph method)": [[62, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[62, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[62, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[62, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[62, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[62, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[62, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[62, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[62, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[62, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[62, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[62, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[62, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[62, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[62, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[62, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[62, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[62, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[62, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[62, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[62, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[62, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[62, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[62, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[62, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[62, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[62, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[62, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[62, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[62, "module-torch.fx"]], "torch.fx.annotate": [[62, "module-torch.fx.annotate"]], "torch.fx.config": [[62, "module-torch.fx.config"]], "torch.fx.experimental": [[62, "module-torch.fx.experimental"]], "torch.fx.experimental.accelerator_partitioner": [[62, "module-torch.fx.experimental.accelerator_partitioner"]], "torch.fx.experimental.const_fold": [[62, "module-torch.fx.experimental.const_fold"]], "torch.fx.experimental.debug": [[62, "module-torch.fx.experimental.debug"]], "torch.fx.experimental.graph_gradual_typechecker": [[62, "module-torch.fx.experimental.graph_gradual_typechecker"]], "torch.fx.experimental.merge_matmul": [[62, "module-torch.fx.experimental.merge_matmul"]], "torch.fx.experimental.meta_tracer": [[62, "module-torch.fx.experimental.meta_tracer"]], "torch.fx.experimental.migrate_gradual_types": [[62, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.migrate_gradual_types.constraint": [[62, "module-torch.fx.experimental.migrate_gradual_types.constraint"]], "torch.fx.experimental.migrate_gradual_types.constraint_generator": [[62, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"]], "torch.fx.experimental.migrate_gradual_types.constraint_transformation": [[62, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"]], "torch.fx.experimental.migrate_gradual_types.operation": [[62, "module-torch.fx.experimental.migrate_gradual_types.operation"]], "torch.fx.experimental.migrate_gradual_types.transform_to_z3": [[62, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"]], "torch.fx.experimental.migrate_gradual_types.util": [[62, "module-torch.fx.experimental.migrate_gradual_types.util"]], "torch.fx.experimental.migrate_gradual_types.z3_types": [[62, "module-torch.fx.experimental.migrate_gradual_types.z3_types"]], "torch.fx.experimental.normalize": [[62, "module-torch.fx.experimental.normalize"]], "torch.fx.experimental.optimization": [[62, "module-torch.fx.experimental.optimization"]], "torch.fx.experimental.partitioner_utils": [[62, "module-torch.fx.experimental.partitioner_utils"]], "torch.fx.experimental.proxy_tensor": [[62, "module-torch.fx.experimental.proxy_tensor"]], "torch.fx.experimental.recording": [[62, "module-torch.fx.experimental.recording"]], "torch.fx.experimental.refinement_types": [[62, "module-torch.fx.experimental.refinement_types"]], "torch.fx.experimental.rewriter": [[62, "module-torch.fx.experimental.rewriter"]], "torch.fx.experimental.schema_type_annotation": [[62, "module-torch.fx.experimental.schema_type_annotation"]], "torch.fx.experimental.sym_node": [[62, "module-torch.fx.experimental.sym_node"]], "torch.fx.experimental.unification": [[62, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.core": [[62, "module-torch.fx.experimental.unification.core"]], "torch.fx.experimental.unification.dispatch": [[62, "module-torch.fx.experimental.unification.dispatch"]], "torch.fx.experimental.unification.match": [[62, "module-torch.fx.experimental.unification.match"]], "torch.fx.experimental.unification.more": [[62, "module-torch.fx.experimental.unification.more"]], "torch.fx.experimental.unification.multipledispatch": [[62, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.experimental.unification.multipledispatch.conflict": [[62, "module-torch.fx.experimental.unification.multipledispatch.conflict"]], "torch.fx.experimental.unification.multipledispatch.core": [[62, "module-torch.fx.experimental.unification.multipledispatch.core"]], "torch.fx.experimental.unification.multipledispatch.dispatcher": [[62, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"]], "torch.fx.experimental.unification.multipledispatch.utils": [[62, "module-torch.fx.experimental.unification.multipledispatch.utils"]], "torch.fx.experimental.unification.multipledispatch.variadic": [[62, "module-torch.fx.experimental.unification.multipledispatch.variadic"]], "torch.fx.experimental.unification.unification_tools": [[62, "module-torch.fx.experimental.unification.unification_tools"]], "torch.fx.experimental.unification.utils": [[62, "module-torch.fx.experimental.unification.utils"]], "torch.fx.experimental.unification.variable": [[62, "module-torch.fx.experimental.unification.variable"]], "torch.fx.experimental.unify_refinements": [[62, "module-torch.fx.experimental.unify_refinements"]], "torch.fx.experimental.validator": [[62, "module-torch.fx.experimental.validator"]], "torch.fx.graph": [[62, "module-torch.fx.graph"]], "torch.fx.graph_module": [[62, "module-torch.fx.graph_module"]], "torch.fx.immutable_collections": [[62, "module-torch.fx.immutable_collections"]], "torch.fx.interpreter": [[62, "module-torch.fx.interpreter"]], "torch.fx.node": [[62, "module-torch.fx.node"]], "torch.fx.operator_schemas": [[62, "module-torch.fx.operator_schemas"]], "torch.fx.passes": [[62, "module-torch.fx.passes"]], "torch.fx.passes.annotate_getitem_nodes": [[62, "module-torch.fx.passes.annotate_getitem_nodes"]], "torch.fx.passes.backends": [[62, "module-torch.fx.passes.backends"]], "torch.fx.passes.backends.cudagraphs": [[62, "module-torch.fx.passes.backends.cudagraphs"]], "torch.fx.passes.dialect": [[62, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[62, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.dialect.common.cse_pass": [[62, "module-torch.fx.passes.dialect.common.cse_pass"]], "torch.fx.passes.fake_tensor_prop": [[62, "module-torch.fx.passes.fake_tensor_prop"]], "torch.fx.passes.graph_drawer": [[62, "module-torch.fx.passes.graph_drawer"]], "torch.fx.passes.graph_manipulation": [[62, "module-torch.fx.passes.graph_manipulation"]], "torch.fx.passes.infra": [[62, "module-torch.fx.passes.infra"]], "torch.fx.passes.infra.partitioner": [[62, "module-torch.fx.passes.infra.partitioner"]], "torch.fx.passes.infra.pass_base": [[62, "module-torch.fx.passes.infra.pass_base"]], "torch.fx.passes.infra.pass_manager": [[62, "module-torch.fx.passes.infra.pass_manager"]], "torch.fx.passes.net_min_base": [[62, "module-torch.fx.passes.net_min_base"]], "torch.fx.passes.operator_support": [[62, "module-torch.fx.passes.operator_support"]], "torch.fx.passes.param_fetch": [[62, "module-torch.fx.passes.param_fetch"]], "torch.fx.passes.pass_manager": [[62, "module-torch.fx.passes.pass_manager"]], "torch.fx.passes.reinplace": [[62, "module-torch.fx.passes.reinplace"]], "torch.fx.passes.runtime_assert": [[62, "module-torch.fx.passes.runtime_assert"]], "torch.fx.passes.shape_prop": [[62, "module-torch.fx.passes.shape_prop"]], "torch.fx.passes.split_module": [[62, "module-torch.fx.passes.split_module"]], "torch.fx.passes.split_utils": [[62, "module-torch.fx.passes.split_utils"]], "torch.fx.passes.splitter_base": [[62, "module-torch.fx.passes.splitter_base"]], "torch.fx.passes.tests": [[62, "module-torch.fx.passes.tests"]], "torch.fx.passes.tests.test_pass_manager": [[62, "module-torch.fx.passes.tests.test_pass_manager"]], "torch.fx.passes.tools_common": [[62, "module-torch.fx.passes.tools_common"]], "torch.fx.passes.utils": [[62, "module-torch.fx.passes.utils"]], "torch.fx.passes.utils.common": [[62, "module-torch.fx.passes.utils.common"]], "torch.fx.passes.utils.fuser_utils": [[62, "module-torch.fx.passes.utils.fuser_utils"]], "torch.fx.passes.utils.matcher_utils": [[62, "module-torch.fx.passes.utils.matcher_utils"]], "torch.fx.passes.utils.matcher_with_name_node_map_utils": [[62, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"]], "torch.fx.passes.utils.source_matcher_utils": [[62, "module-torch.fx.passes.utils.source_matcher_utils"]], "torch.fx.proxy": [[62, "module-torch.fx.proxy"]], "torch.fx.subgraph_rewriter": [[62, "module-torch.fx.subgraph_rewriter"]], "torch.fx.tensor_type": [[62, "module-torch.fx.tensor_type"]], "torch.fx.traceback": [[62, "module-torch.fx.traceback"]], "trace() (torch.fx.tracer method)": [[62, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[62, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[62, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[62, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[62, "torch.fx.wrap"]], "torch.fx.experimental.symbolic_shapes": [[63, "module-torch.fx.experimental.symbolic_shapes"]], "generator (class in torch)": [[88, "torch.Generator"]], "clone_state() (torch.generator method)": [[88, "torch.Generator.clone_state"]], "device (torch.generator attribute)": [[88, "torch.Generator.device"]], "get_state() (torch.generator method)": [[88, "torch.Generator.get_state"]], "graphsafe_get_state() (torch.generator method)": [[88, "torch.Generator.graphsafe_get_state"]], "graphsafe_set_state() (torch.generator method)": [[88, "torch.Generator.graphsafe_set_state"]], "initial_seed() (torch.generator method)": [[88, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[88, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[88, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[88, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[89, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[90, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[91, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[92, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[93, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[94, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[95, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[96, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[97, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[98, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[99, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[100, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[101, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[102, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[103, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[104, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[105, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[106, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[107, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[108, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[109, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[110, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[111, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[112, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[113, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[114, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[115, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[116, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[117, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[118, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[119, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[120, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[121, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[122, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[123, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[124, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[125, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[126, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[127, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[128, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[129, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[130, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[131, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[132, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[133, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[134, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[135, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[136, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[137, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[138, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[139, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[140, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[141, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[142, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[143, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[144, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[145, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[146, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[147, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[148, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[149, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[150, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[151, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[152, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[153, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[154, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[155, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[156, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[157, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[158, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[159, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[160, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[161, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[162, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[163, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[164, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[165, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[166, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[167, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[168, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[169, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[170, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[171, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[172, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[173, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[174, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[175, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[176, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[177, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[178, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[179, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[180, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[181, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[182, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[183, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[184, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[185, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[186, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[187, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[188, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[189, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[190, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[191, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[192, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[193, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[194, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[195, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[196, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[197, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[198, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[199, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[200, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[201, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[202, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[203, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[204, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[205, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[206, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[207, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[208, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[209, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[210, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[211, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[212, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[213, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[214, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[215, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[216, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[217, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[218, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[219, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[220, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[221, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[222, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[223, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[224, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[225, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[226, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[227, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[228, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[229, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[230, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[231, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[232, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[233, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[234, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[235, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[236, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[237, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[238, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[239, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[240, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[241, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[242, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[243, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[244, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[245, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[246, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[247, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[248, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[249, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[250, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[251, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[252, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[253, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[254, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[255, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[256, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[257, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[258, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[259, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[260, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[261, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[262, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[263, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[264, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[265, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[266, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[267, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[268, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[269, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[270, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[271, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[272, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[273, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[274, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[275, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[276, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[277, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[278, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[279, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[280, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[281, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[282, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[283, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[284, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[285, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[286, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[287, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[288, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[289, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[290, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[291, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[292, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[293, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[294, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[295, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[296, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[297, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[298, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[299, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[300, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[301, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[302, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[303, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[304, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[305, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[306, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[307, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[308, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[309, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[310, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[311, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[312, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[313, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[314, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[315, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[316, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[317, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[318, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[319, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[320, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[321, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[322, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[323, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[324, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[325, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[326, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[327, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[328, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[329, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[330, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[331, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[332, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[333, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[334, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[335, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[336, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[337, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[338, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[339, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[340, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[341, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[342, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[343, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[344, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[345, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[346, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[347, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[348, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[349, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[350, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[351, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[352, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[353, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[354, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[355, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[356, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[357, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[358, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[359, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[360, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[361, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[362, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[363, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[364, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[365, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[366, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[367, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[368, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[369, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[370, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[371, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[372, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[373, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[374, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[375, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[376, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[377, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[378, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[379, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[380, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[381, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[382, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[383, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[384, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[385, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[386, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[387, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[388, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[389, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[390, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[391, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[392, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[393, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[394, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[395, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[396, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[397, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[398, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[399, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[400, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[401, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[402, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[403, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[404, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[405, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[406, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[407, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[408, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[409, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[410, "torch.Tensor.median"]], "min() (torch.tensor method)": [[411, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[412, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[413, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[414, "torch.Tensor.mode"]], "module_load() (torch.tensor method)": [[415, "torch.Tensor.module_load"]], "moveaxis() (torch.tensor method)": [[416, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[417, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[418, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[419, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[420, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[421, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[422, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[423, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[424, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[425, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[426, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[427, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[428, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[429, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[430, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[431, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[432, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[433, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[434, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[435, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[436, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[437, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[438, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[439, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[440, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[441, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[442, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[443, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[444, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[445, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[446, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[447, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[448, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[449, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[450, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[451, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[452, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[453, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[454, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[455, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[456, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[457, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[458, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[459, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[460, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[461, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[462, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[463, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[464, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[465, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[466, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[467, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[468, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[469, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[470, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[471, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[472, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[473, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[474, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[475, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[476, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[477, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[478, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[479, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[480, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[481, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[482, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[483, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[484, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[485, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[486, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[487, "torch.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (torch.tensor method)": [[488, "torch.Tensor.register_post_accumulate_grad_hook"]], "remainder() (torch.tensor method)": [[489, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[490, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[491, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[492, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[493, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[494, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[495, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[496, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[497, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[498, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[499, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[500, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[501, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[502, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[503, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[504, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[505, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[506, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[507, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[508, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[509, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[510, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[511, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[512, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[513, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[514, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[515, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[516, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[517, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[518, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[519, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[520, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[521, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[522, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[523, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[524, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[525, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[526, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[527, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[528, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[529, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[530, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[531, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[532, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[533, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[534, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[535, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[536, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[537, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[538, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[539, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[540, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[541, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[542, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[543, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[544, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[545, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[546, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[547, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[548, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[549, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[550, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[551, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[552, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[553, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[554, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[555, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[556, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[557, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[558, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[559, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[560, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[561, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[562, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[563, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[564, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[565, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[566, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[567, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[568, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[569, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[570, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[571, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[572, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[573, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[574, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[575, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[576, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[577, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[578, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[579, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[580, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[581, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[582, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[583, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[584, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[585, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[586, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[587, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[588, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[589, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[590, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[591, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[592, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[593, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[594, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[595, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[596, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[597, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[598, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[599, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[600, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[601, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[602, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[603, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[604, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[605, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[606, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[607, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[608, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[609, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[610, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[611, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[612, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[613, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[614, "torch.Tensor.values"]], "var() (torch.tensor method)": [[615, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[616, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[617, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[618, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[619, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[620, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[621, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[622, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[623, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[624, "torch._assert"]], "_foreach_abs() (in module torch)": [[625, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[626, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[627, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[628, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[629, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[630, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[631, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[632, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[633, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[634, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[635, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[636, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[637, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[638, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[639, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[640, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[641, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[642, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[643, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[644, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[645, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[646, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[647, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[648, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[649, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[650, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[651, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[652, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[653, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[654, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[655, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[656, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[657, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[658, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[659, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[660, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[661, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[662, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[663, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[664, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[665, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[666, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[667, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[668, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[669, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[670, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[671, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[672, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[673, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[674, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[675, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[676, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[677, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[678, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[679, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[680, "torch._logging.set_logs"]], "abs() (in module torch)": [[681, "torch.abs"]], "absolute() (in module torch)": [[682, "torch.absolute"]], "acos() (in module torch)": [[683, "torch.acos"]], "acosh() (in module torch)": [[684, "torch.acosh"]], "add() (in module torch)": [[685, "torch.add"]], "addbmm() (in module torch)": [[686, "torch.addbmm"]], "addcdiv() (in module torch)": [[687, "torch.addcdiv"]], "addcmul() (in module torch)": [[688, "torch.addcmul"]], "addmm() (in module torch)": [[689, "torch.addmm"]], "addmv() (in module torch)": [[690, "torch.addmv"]], "addr() (in module torch)": [[691, "torch.addr"]], "adjoint() (in module torch)": [[692, "torch.adjoint"]], "all() (in module torch)": [[693, "torch.all"]], "allclose() (in module torch)": [[694, "torch.allclose"]], "amax() (in module torch)": [[695, "torch.amax"]], "amin() (in module torch)": [[696, "torch.amin"]], "aminmax() (in module torch)": [[697, "torch.aminmax"]], "angle() (in module torch)": [[698, "torch.angle"]], "any() (in module torch)": [[699, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[703, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[704, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[706, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[707, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[708, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[709, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[710, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[711, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[714, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[715, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[716, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[717, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[718, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[719, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[720, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[721, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[722, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[723, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[724, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[725, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[726, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[727, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[728, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[729, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[730, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[731, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[732, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[732, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[733, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[734, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[735, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[735, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[735, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[738, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[739, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[740, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[745, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[746, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[756, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[756, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[756, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[757, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[758, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[759, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[760, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[761, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[762, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[763, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[764, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[764, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[764, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[765, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[784, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[785, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[786, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[787, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[788, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[789, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[790, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[791, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[792, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[792, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[792, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[792, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[792, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[792, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[792, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[793, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[794, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[794, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[794, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[795, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[796, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[796, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[796, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[796, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[797, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[798, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "extra_repr() (torch.ao.quantization.fake_quantize.fixedqparamsfakequantize method)": [[801, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.extra_repr"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[805, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[806, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[808, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[809, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[810, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[811, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[812, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[813, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization.fuse_modules)": [[814, "torch.ao.quantization.fuse_modules.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[815, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[815, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[815, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[815, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[815, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[816, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[816, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[817, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[818, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[820, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[820, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[820, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[824, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[824, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[825, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[833, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[834, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[835, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[836, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[837, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[838, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[839, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[840, "torch.ao.quantization.propagate_qconfig_"]], "model_is_exported (class in torch.ao.quantization.pt2e.export_utils)": [[841, "torch.ao.quantization.pt2e.export_utils.model_is_exported"]], "qconfig (class in torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[845, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[846, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[847, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[848, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[849, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[850, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[851, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[852, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[853, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[854, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[855, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[855, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[855, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[855, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[855, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[855, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[855, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[855, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[856, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[857, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[858, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[859, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[860, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[861, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[862, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[863, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[864, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[865, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[866, "torch.arange"]], "arccos() (in module torch)": [[867, "torch.arccos"]], "arccosh() (in module torch)": [[868, "torch.arccosh"]], "arcsin() (in module torch)": [[869, "torch.arcsin"]], "arcsinh() (in module torch)": [[870, "torch.arcsinh"]], "arctan() (in module torch)": [[871, "torch.arctan"]], "arctan2() (in module torch)": [[872, "torch.arctan2"]], "arctanh() (in module torch)": [[873, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[874, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[875, "torch.argmax"]], "argmin() (in module torch)": [[876, "torch.argmin"]], "argsort() (in module torch)": [[877, "torch.argsort"]], "argwhere() (in module torch)": [[878, "torch.argwhere"]], "as_strided() (in module torch)": [[879, "torch.as_strided"]], "as_tensor() (in module torch)": [[880, "torch.as_tensor"]], "asarray() (in module torch)": [[881, "torch.asarray"]], "asin() (in module torch)": [[882, "torch.asin"]], "asinh() (in module torch)": [[883, "torch.asinh"]], "atan() (in module torch)": [[884, "torch.atan"]], "atan2() (in module torch)": [[885, "torch.atan2"]], "atanh() (in module torch)": [[886, "torch.atanh"]], "atleast_1d() (in module torch)": [[887, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[888, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[889, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[890, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[891, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[892, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[893, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[894, "torch.autograd.backward"]], "unpackeddualtensor (class in torch.autograd.forward_ad)": [[895, "torch.autograd.forward_ad.UnpackedDualTensor"]], "count() (torch.autograd.forward_ad.unpackeddualtensor method)": [[895, "torch.autograd.forward_ad.UnpackedDualTensor.count"]], "index() (torch.autograd.forward_ad.unpackeddualtensor method)": [[895, "torch.autograd.forward_ad.UnpackedDualTensor.index"]], "primal (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[895, "torch.autograd.forward_ad.UnpackedDualTensor.primal"]], "tangent (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[895, "torch.autograd.forward_ad.UnpackedDualTensor.tangent"]], "dual_level (class in torch.autograd.forward_ad)": [[896, "torch.autograd.forward_ad.dual_level"]], "enter_dual_level() (in module torch.autograd.forward_ad)": [[897, "torch.autograd.forward_ad.enter_dual_level"]], "exit_dual_level() (in module torch.autograd.forward_ad)": [[898, "torch.autograd.forward_ad.exit_dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[899, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[900, "torch.autograd.forward_ad.unpack_dual"]], "backwardcfunction (class in torch.autograd.function)": [[901, "torch.autograd.function.BackwardCFunction"]], "apply() (torch.autograd.function.backwardcfunction method)": [[901, "torch.autograd.function.BackwardCFunction.apply"]], "apply_jvp() (torch.autograd.function.backwardcfunction method)": [[901, "torch.autograd.function.BackwardCFunction.apply_jvp"]], "mark_dirty() (torch.autograd.function.backwardcfunction method)": [[901, "torch.autograd.function.BackwardCFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.backwardcfunction method)": [[901, "torch.autograd.function.BackwardCFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.backwardcfunction method)": [[901, "torch.autograd.function.BackwardCFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.backwardcfunction method)": [[901, "torch.autograd.function.BackwardCFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.backwardcfunction method)": [[901, "torch.autograd.function.BackwardCFunction.set_materialize_grads"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[902, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[903, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[904, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[905, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "inplacefunction (class in torch.autograd.function)": [[906, "torch.autograd.function.InplaceFunction"]], "backward() (torch.autograd.function.inplacefunction static method)": [[906, "torch.autograd.function.InplaceFunction.backward"]], "forward() (torch.autograd.function.inplacefunction static method)": [[906, "torch.autograd.function.InplaceFunction.forward"]], "jvp() (torch.autograd.function.inplacefunction static method)": [[906, "torch.autograd.function.InplaceFunction.jvp"]], "mark_dirty() (torch.autograd.function.inplacefunction method)": [[906, "torch.autograd.function.InplaceFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.inplacefunction method)": [[906, "torch.autograd.function.InplaceFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.inplacefunction method)": [[906, "torch.autograd.function.InplaceFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.inplacefunction method)": [[906, "torch.autograd.function.InplaceFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.inplacefunction method)": [[906, "torch.autograd.function.InplaceFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.inplacefunction static method)": [[906, "torch.autograd.function.InplaceFunction.setup_context"]], "vjp() (torch.autograd.function.inplacefunction static method)": [[906, "torch.autograd.function.InplaceFunction.vjp"]], "vmap() (torch.autograd.function.inplacefunction static method)": [[906, "torch.autograd.function.InplaceFunction.vmap"]], "nestediofunction (class in torch.autograd.function)": [[907, "torch.autograd.function.NestedIOFunction"]], "backward() (torch.autograd.function.nestediofunction method)": [[907, "torch.autograd.function.NestedIOFunction.backward"]], "backward_extended() (torch.autograd.function.nestediofunction method)": [[907, "torch.autograd.function.NestedIOFunction.backward_extended"]], "forward() (torch.autograd.function.nestediofunction method)": [[907, "torch.autograd.function.NestedIOFunction.forward"]], "forward_extended() (torch.autograd.function.nestediofunction method)": [[907, "torch.autograd.function.NestedIOFunction.forward_extended"]], "jvp() (torch.autograd.function.nestediofunction static method)": [[907, "torch.autograd.function.NestedIOFunction.jvp"]], "mark_dirty() (torch.autograd.function.nestediofunction method)": [[907, "torch.autograd.function.NestedIOFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.nestediofunction method)": [[907, "torch.autograd.function.NestedIOFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.nestediofunction method)": [[907, "torch.autograd.function.NestedIOFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.nestediofunction method)": [[907, "torch.autograd.function.NestedIOFunction.save_for_forward"]], "saved_tensors (torch.autograd.function.nestediofunction property)": [[907, "torch.autograd.function.NestedIOFunction.saved_tensors"]], "set_materialize_grads() (torch.autograd.function.nestediofunction method)": [[907, "torch.autograd.function.NestedIOFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.nestediofunction static method)": [[907, "torch.autograd.function.NestedIOFunction.setup_context"]], "vjp() (torch.autograd.function.nestediofunction static method)": [[907, "torch.autograd.function.NestedIOFunction.vjp"]], "vmap() (torch.autograd.function.nestediofunction static method)": [[907, "torch.autograd.function.NestedIOFunction.vmap"]], "once_differentiable() (in module torch.autograd.function)": [[908, "torch.autograd.function.once_differentiable"]], "hessian() (in module torch.autograd.functional)": [[909, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[910, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[911, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[912, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[913, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[914, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[915, "torch.autograd.grad"]], "clone() (torch.autograd.grad_mode.inference_mode method)": [[916, "torch.autograd.grad_mode.inference_mode.clone"]], "inference_mode (class in torch.autograd.grad_mode)": [[916, "torch.autograd.grad_mode.inference_mode"]], "clone() (torch.autograd.grad_mode.set_grad_enabled method)": [[917, "torch.autograd.grad_mode.set_grad_enabled.clone"]], "set_grad_enabled (class in torch.autograd.grad_mode)": [[917, "torch.autograd.grad_mode.set_grad_enabled"]], "clone() (torch.autograd.grad_mode.set_multithreading_enabled method)": [[918, "torch.autograd.grad_mode.set_multithreading_enabled.clone"]], "set_multithreading_enabled (class in torch.autograd.grad_mode)": [[918, "torch.autograd.grad_mode.set_multithreading_enabled"]], "gradcheckerror": [[919, "torch.autograd.gradcheck.GradcheckError"]], "gradcheck() (in module torch.autograd.gradcheck)": [[920, "torch.autograd.gradcheck.gradcheck"]], "gradgradcheck() (in module torch.autograd.gradcheck)": [[921, "torch.autograd.gradcheck.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[922, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[923, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[924, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[925, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[926, "torch.autograd.graph.Node.register_prehook"]], "increment_version() (in module torch.autograd.graph)": [[927, "torch.autograd.graph.increment_version"]], "enforceunique (class in torch.autograd.profiler)": [[928, "torch.autograd.profiler.EnforceUnique"]], "see() (torch.autograd.profiler.enforceunique method)": [[928, "torch.autograd.profiler.EnforceUnique.see"]], "kinetosteptracker (class in torch.autograd.profiler)": [[929, "torch.autograd.profiler.KinetoStepTracker"]], "current_step() (torch.autograd.profiler.kinetosteptracker class method)": [[929, "torch.autograd.profiler.KinetoStepTracker.current_step"]], "erase_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[929, "torch.autograd.profiler.KinetoStepTracker.erase_step_count"]], "increment_step() (torch.autograd.profiler.kinetosteptracker class method)": [[929, "torch.autograd.profiler.KinetoStepTracker.increment_step"]], "init_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[929, "torch.autograd.profiler.KinetoStepTracker.init_step_count"]], "load_nvprof() (in module torch.autograd.profiler)": [[930, "torch.autograd.profiler.load_nvprof"]], "parse_nvprof_trace() (in module torch.autograd.profiler)": [[931, "torch.autograd.profiler.parse_nvprof_trace"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[932, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[933, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[934, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[935, "torch.autograd.profiler.profile.total_average"]], "record_function (class in torch.autograd.profiler)": [[936, "torch.autograd.profiler.record_function"]], "interval (class in torch.autograd.profiler_util)": [[937, "torch.autograd.profiler_util.Interval"]], "elapsed_us() (torch.autograd.profiler_util.interval method)": [[937, "torch.autograd.profiler_util.Interval.elapsed_us"]], "kernel (class in torch.autograd.profiler_util)": [[938, "torch.autograd.profiler_util.Kernel"]], "count() (torch.autograd.profiler_util.kernel method)": [[938, "torch.autograd.profiler_util.Kernel.count"]], "device (torch.autograd.profiler_util.kernel attribute)": [[938, "torch.autograd.profiler_util.Kernel.device"]], "duration (torch.autograd.profiler_util.kernel attribute)": [[938, "torch.autograd.profiler_util.Kernel.duration"]], "index() (torch.autograd.profiler_util.kernel method)": [[938, "torch.autograd.profiler_util.Kernel.index"]], "name (torch.autograd.profiler_util.kernel attribute)": [[938, "torch.autograd.profiler_util.Kernel.name"]], "memrecordsacc (class in torch.autograd.profiler_util)": [[939, "torch.autograd.profiler_util.MemRecordsAcc"]], "in_interval() (torch.autograd.profiler_util.memrecordsacc method)": [[939, "torch.autograd.profiler_util.MemRecordsAcc.in_interval"]], "stringtable (class in torch.autograd.profiler_util)": [[940, "torch.autograd.profiler_util.StringTable"]], "clear() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.clear"]], "copy() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.copy"]], "default_factory (torch.autograd.profiler_util.stringtable attribute)": [[940, "torch.autograd.profiler_util.StringTable.default_factory"]], "fromkeys() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.fromkeys"]], "get() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.get"]], "items() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.items"]], "keys() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.keys"]], "pop() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.pop"]], "popitem() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.popitem"]], "setdefault() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.setdefault"]], "update() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.update"]], "values() (torch.autograd.profiler_util.stringtable method)": [[940, "torch.autograd.profiler_util.StringTable.values"]], "baddbmm() (in module torch)": [[941, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[942, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[943, "torch.bernoulli"]], "bincount() (in module torch)": [[944, "torch.bincount"]], "bitwise_and() (in module torch)": [[945, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[946, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[947, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[948, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[949, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[950, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[951, "torch.blackman_window"]], "block_diag() (in module torch)": [[952, "torch.block_diag"]], "bmm() (in module torch)": [[953, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[954, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[955, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[956, "torch.broadcast_to"]], "bucketize() (in module torch)": [[957, "torch.bucketize"]], "can_cast() (in module torch)": [[958, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[959, "torch.cartesian_prod"]], "cat() (in module torch)": [[960, "torch.cat"]], "cdist() (in module torch)": [[961, "torch.cdist"]], "ceil() (in module torch)": [[962, "torch.ceil"]], "chain_matmul() (in module torch)": [[963, "torch.chain_matmul"]], "cholesky() (in module torch)": [[964, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[965, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[966, "torch.cholesky_solve"]], "chunk() (in module torch)": [[967, "torch.chunk"]], "clamp() (in module torch)": [[968, "torch.clamp"]], "clip() (in module torch)": [[969, "torch.clip"]], "clone() (in module torch)": [[970, "torch.clone"]], "column_stack() (in module torch)": [[971, "torch.column_stack"]], "combinations() (in module torch)": [[972, "torch.combinations"]], "compile() (in module torch)": [[973, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[974, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[975, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[976, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[977, "torch.compiler.compile"]], "cudagraph_mark_step_begin() (in module torch.compiler)": [[978, "torch.compiler.cudagraph_mark_step_begin"]], "disable() (in module torch.compiler)": [[979, "torch.compiler.disable"]], "is_compiling() (in module torch.compiler)": [[980, "torch.compiler.is_compiling"]], "is_dynamo_compiling() (in module torch.compiler)": [[981, "torch.compiler.is_dynamo_compiling"]], "list_backends() (in module torch.compiler)": [[982, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[983, "torch.compiler.reset"]], "complex() (in module torch)": [[984, "torch.complex"]], "concat() (in module torch)": [[985, "torch.concat"]], "concatenate() (in module torch)": [[986, "torch.concatenate"]], "cond() (in module torch)": [[987, "torch.cond"]], "conj() (in module torch)": [[988, "torch.conj"]], "conj_physical() (in module torch)": [[989, "torch.conj_physical"]], "copysign() (in module torch)": [[990, "torch.copysign"]], "corrcoef() (in module torch)": [[991, "torch.corrcoef"]], "cos() (in module torch)": [[992, "torch.cos"]], "cosh() (in module torch)": [[993, "torch.cosh"]], "count_nonzero() (in module torch)": [[994, "torch.count_nonzero"]], "cov() (in module torch)": [[995, "torch.cov"]], "stream (class in torch.cpu)": [[996, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[997, "torch.cpu.StreamContext"]], "current_device() (in module torch.cpu)": [[998, "torch.cpu.current_device"]], "current_stream() (in module torch.cpu)": [[999, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[1000, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[1001, "torch.cpu.is_available"]], "set_device() (in module torch.cpu)": [[1002, "torch.cpu.set_device"]], "stream() (in module torch.cpu)": [[1003, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[1004, "torch.cpu.synchronize"]], "cross() (in module torch)": [[1005, "torch.cross"]], "cudagraph (class in torch.cuda)": [[1006, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[1006, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[1006, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[1006, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[1006, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[1006, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[1006, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[1006, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[1007, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[1008, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[1008, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[1008, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[1008, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[1008, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[1008, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[1008, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[1008, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[1009, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[1009, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[1009, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[1009, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[1009, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[1009, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[1010, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[1011, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[1011, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[1011, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[1011, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[1011, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[1011, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[1012, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[1013, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[1014, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[1015, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[1016, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[1017, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[1018, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[1019, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[1020, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[1021, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[1022, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[1023, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[1024, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[1025, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[1026, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[1027, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[1028, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[1029, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[1030, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[1031, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[1032, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[1033, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1034, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1035, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1036, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1037, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1038, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1039, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1040, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1041, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1042, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1043, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1044, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1045, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1046, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1047, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1048, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1049, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1050, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1051, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1052, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1053, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1054, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1055, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1056, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1057, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1058, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1059, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1060, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1061, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1062, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1063, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1064, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1065, "torch.cuda.nvtx.mark"]], "range() (in module torch.cuda.nvtx)": [[1066, "torch.cuda.nvtx.range"]], "range_pop() (in module torch.cuda.nvtx)": [[1067, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1068, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1069, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1070, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1071, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1072, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1073, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1074, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1075, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1076, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1077, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1078, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1079, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1080, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1081, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1082, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1083, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1084, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1085, "torch.cummax"]], "cummin() (in module torch)": [[1086, "torch.cummin"]], "cumprod() (in module torch)": [[1087, "torch.cumprod"]], "cumsum() (in module torch)": [[1088, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1089, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1090, "torch.deg2rad"]], "dequantize() (in module torch)": [[1091, "torch.dequantize"]], "det() (in module torch)": [[1092, "torch.det"]], "diag() (in module torch)": [[1093, "torch.diag"]], "diag_embed() (in module torch)": [[1094, "torch.diag_embed"]], "diagflat() (in module torch)": [[1095, "torch.diagflat"]], "diagonal() (in module torch)": [[1096, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1097, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1098, "torch.diff"]], "digamma() (in module torch)": [[1099, "torch.digamma"]], "dist() (in module torch)": [[1100, "torch.dist"]], "div() (in module torch)": [[1101, "torch.div"]], "divide() (in module torch)": [[1102, "torch.divide"]], "dot() (in module torch)": [[1103, "torch.dot"]], "dsplit() (in module torch)": [[1104, "torch.dsplit"]], "dstack() (in module torch)": [[1105, "torch.dstack"]], "einsum() (in module torch)": [[1106, "torch.einsum"]], "empty() (in module torch)": [[1107, "torch.empty"]], "empty_like() (in module torch)": [[1108, "torch.empty_like"]], "empty_strided() (in module torch)": [[1109, "torch.empty_strided"]], "enable_grad (class in torch)": [[1110, "torch.enable_grad"]], "eq() (in module torch)": [[1111, "torch.eq"]], "equal() (in module torch)": [[1112, "torch.equal"]], "erf() (in module torch)": [[1113, "torch.erf"]], "erfc() (in module torch)": [[1114, "torch.erfc"]], "erfinv() (in module torch)": [[1115, "torch.erfinv"]], "exp() (in module torch)": [[1116, "torch.exp"]], "exp2() (in module torch)": [[1117, "torch.exp2"]], "expm1() (in module torch)": [[1118, "torch.expm1"]], "eye() (in module torch)": [[1119, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1120, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1121, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1122, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1123, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1124, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1125, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1126, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1127, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1128, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1129, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1130, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1131, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1132, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1133, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1134, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1135, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1136, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1137, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1138, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1139, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1140, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1141, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1142, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1143, "torch.fft.rfftn"]], "fix() (in module torch)": [[1144, "torch.fix"]], "flatten() (in module torch)": [[1145, "torch.flatten"]], "flip() (in module torch)": [[1146, "torch.flip"]], "fliplr() (in module torch)": [[1147, "torch.fliplr"]], "flipud() (in module torch)": [[1148, "torch.flipud"]], "float_power() (in module torch)": [[1149, "torch.float_power"]], "floor() (in module torch)": [[1150, "torch.floor"]], "floor_divide() (in module torch)": [[1151, "torch.floor_divide"]], "fmax() (in module torch)": [[1152, "torch.fmax"]], "fmin() (in module torch)": [[1153, "torch.fmin"]], "fmod() (in module torch)": [[1154, "torch.fmod"]], "frac() (in module torch)": [[1155, "torch.frac"]], "frexp() (in module torch)": [[1156, "torch.frexp"]], "from_dlpack() (in module torch)": [[1157, "torch.from_dlpack"]], "from_file() (in module torch)": [[1158, "torch.from_file"]], "from_numpy() (in module torch)": [[1159, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1160, "torch.frombuffer"]], "full() (in module torch)": [[1161, "torch.full"]], "full_like() (in module torch)": [[1162, "torch.full_like"]], "functional_call() (in module torch.func)": [[1163, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1164, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1165, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1166, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1167, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1168, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1169, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1170, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1171, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1172, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1173, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1174, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1175, "torch.func.vmap"]], "callmethodkey (class in torch.fx.experimental.symbolic_shapes)": [[1176, "torch.fx.experimental.symbolic_shapes.CallMethodKey"]], "get() (torch.fx.experimental.symbolic_shapes.callmethodkey method)": [[1176, "torch.fx.experimental.symbolic_shapes.CallMethodKey.get"]], "convertintkey (class in torch.fx.experimental.symbolic_shapes)": [[1177, "torch.fx.experimental.symbolic_shapes.ConvertIntKey"]], "get() (torch.fx.experimental.symbolic_shapes.convertintkey method)": [[1177, "torch.fx.experimental.symbolic_shapes.ConvertIntKey.get"]], "dimconstraints (class in torch.fx.experimental.symbolic_shapes)": [[1178, "torch.fx.experimental.symbolic_shapes.DimConstraints"]], "add() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1178, "torch.fx.experimental.symbolic_shapes.DimConstraints.add"]], "add_equality() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1178, "torch.fx.experimental.symbolic_shapes.DimConstraints.add_equality"]], "forced_specializations() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1178, "torch.fx.experimental.symbolic_shapes.DimConstraints.forced_specializations"]], "prettify_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1178, "torch.fx.experimental.symbolic_shapes.DimConstraints.prettify_results"]], "remove_redundant_dynamic_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1178, "torch.fx.experimental.symbolic_shapes.DimConstraints.remove_redundant_dynamic_results"]], "rewrite_with_congruences() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1178, "torch.fx.experimental.symbolic_shapes.DimConstraints.rewrite_with_congruences"]], "solve() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1178, "torch.fx.experimental.symbolic_shapes.DimConstraints.solve"]], "dimdynamic (class in torch.fx.experimental.symbolic_shapes)": [[1179, "torch.fx.experimental.symbolic_shapes.DimDynamic"]], "dividebykey (class in torch.fx.experimental.symbolic_shapes)": [[1180, "torch.fx.experimental.symbolic_shapes.DivideByKey"]], "get() (torch.fx.experimental.symbolic_shapes.dividebykey method)": [[1180, "torch.fx.experimental.symbolic_shapes.DivideByKey.get"]], "equalityconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1181, "torch.fx.experimental.symbolic_shapes.EqualityConstraint"]], "propagateunbackedsymints (class in torch.fx.experimental.symbolic_shapes)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts"]], "boxed_run() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.boxed_run"]], "call_function() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.call_function"]], "call_method() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.call_method"]], "call_module() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.call_module"]], "fetch_args_kwargs_from_env() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.fetch_attr"]], "get_attr() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.get_attr"]], "map_nodes_to_values() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.map_nodes_to_values"]], "output() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.output"]], "placeholder() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.placeholder"]], "run() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.run"]], "run_node() (torch.fx.experimental.symbolic_shapes.propagateunbackedsymints method)": [[1182, "torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts.run_node"]], "relaxedunspecconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1183, "torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint"]], "shapeenv (class in torch.fx.experimental.symbolic_shapes)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv"]], "add_var_to_val() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.add_var_to_val"]], "bind_symbols() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.bind_symbols"]], "bound_sympy() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.bound_sympy"]], "check_equal() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.check_equal"]], "cleanup() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.cleanup"]], "create_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbol"]], "create_symbolic_sizes_strides_storage_offset() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbolic_sizes_strides_storage_offset"]], "create_symboolnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symboolnode"]], "create_symfloatnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symfloatnode"]], "create_symintnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symintnode"]], "create_unbacked_symbool() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symbool"]], "create_unbacked_symfloat() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symfloat"]], "create_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symint"]], "create_unspecified_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symbol"]], "create_unspecified_symint_and_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symint_and_symbol"]], "defer_runtime_assert() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.defer_runtime_assert"]], "evaluate_expr() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_expr"]], "evaluate_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_expression"]], "evaluate_guards_for_args() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_for_args"]], "format_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.format_guards"]], "freeze() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.freeze"]], "freeze_runtime_asserts() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.freeze_runtime_asserts"]], "get_axioms() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_axioms"]], "get_implications() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_implications"]], "get_nontrivial_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_nontrivial_guards"]], "ignore_fresh_unbacked_symbols() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.ignore_fresh_unbacked_symbols"]], "is_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.is_unbacked_symint"]], "produce_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards"]], "produce_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards_expression"]], "replace() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.replace"]], "set_unbacked_var_to_val() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.set_unbacked_var_to_val"]], "simplify() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.simplify"]], "size_hint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.size_hint"]], "suppress_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1184, "torch.fx.experimental.symbolic_shapes.ShapeEnv.suppress_guards"]], "shapeenvsettings (class in torch.fx.experimental.symbolic_shapes)": [[1185, "torch.fx.experimental.symbolic_shapes.ShapeEnvSettings"]], "statefulsymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1186, "torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext"]], "statelesssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1187, "torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext"]], "strictminmaxconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1188, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint"]], "render() (torch.fx.experimental.symbolic_shapes.strictminmaxconstraint method)": [[1188, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.render"]], "subclasssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1189, "torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext"]], "symboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1190, "torch.fx.experimental.symbolic_shapes.SymbolicContext"]], "canonicalize_bool_expr() (in module torch.fx.experimental.symbolic_shapes)": [[1191, "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr"]], "check_consistent() (in module torch.fx.experimental.symbolic_shapes)": [[1192, "torch.fx.experimental.symbolic_shapes.check_consistent"]], "compute_unbacked_bindings() (in module torch.fx.experimental.symbolic_shapes)": [[1193, "torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings"]], "constrain_range() (in module torch.fx.experimental.symbolic_shapes)": [[1194, "torch.fx.experimental.symbolic_shapes.constrain_range"]], "constrain_unify() (in module torch.fx.experimental.symbolic_shapes)": [[1195, "torch.fx.experimental.symbolic_shapes.constrain_unify"]], "definitely_false() (in module torch.fx.experimental.symbolic_shapes)": [[1196, "torch.fx.experimental.symbolic_shapes.definitely_false"]], "definitely_true() (in module torch.fx.experimental.symbolic_shapes)": [[1197, "torch.fx.experimental.symbolic_shapes.definitely_true"]], "guard_size_oblivious() (in module torch.fx.experimental.symbolic_shapes)": [[1198, "torch.fx.experimental.symbolic_shapes.guard_size_oblivious"]], "has_free_symbols() (in module torch.fx.experimental.symbolic_shapes)": [[1199, "torch.fx.experimental.symbolic_shapes.has_free_symbols"]], "hint_int() (in module torch.fx.experimental.symbolic_shapes)": [[1200, "torch.fx.experimental.symbolic_shapes.hint_int"]], "is_concrete_bool() (in module torch.fx.experimental.symbolic_shapes)": [[1201, "torch.fx.experimental.symbolic_shapes.is_concrete_bool"]], "is_concrete_int() (in module torch.fx.experimental.symbolic_shapes)": [[1202, "torch.fx.experimental.symbolic_shapes.is_concrete_int"]], "lru_cache() (in module torch.fx.experimental.symbolic_shapes)": [[1203, "torch.fx.experimental.symbolic_shapes.lru_cache"]], "parallel_and() (in module torch.fx.experimental.symbolic_shapes)": [[1204, "torch.fx.experimental.symbolic_shapes.parallel_and"]], "parallel_or() (in module torch.fx.experimental.symbolic_shapes)": [[1205, "torch.fx.experimental.symbolic_shapes.parallel_or"]], "rebind_unbacked() (in module torch.fx.experimental.symbolic_shapes)": [[1206, "torch.fx.experimental.symbolic_shapes.rebind_unbacked"]], "resolve_unbacked_bindings() (in module torch.fx.experimental.symbolic_shapes)": [[1207, "torch.fx.experimental.symbolic_shapes.resolve_unbacked_bindings"]], "statically_known_true() (in module torch.fx.experimental.symbolic_shapes)": [[1208, "torch.fx.experimental.symbolic_shapes.statically_known_true"]], "sym_eq() (in module torch.fx.experimental.symbolic_shapes)": [[1209, "torch.fx.experimental.symbolic_shapes.sym_eq"]], "gather() (in module torch)": [[1210, "torch.gather"]], "gcd() (in module torch)": [[1211, "torch.gcd"]], "ge() (in module torch)": [[1212, "torch.ge"]], "geqrf() (in module torch)": [[1213, "torch.geqrf"]], "ger() (in module torch)": [[1214, "torch.ger"]], "get_default_device() (in module torch)": [[1215, "torch.get_default_device"]], "get_default_dtype() (in module torch)": [[1216, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1217, "torch.get_deterministic_debug_mode"]], "get_device_module() (in module torch)": [[1218, "torch.get_device_module"]], "get_float32_matmul_precision() (in module torch)": [[1219, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1220, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1221, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1222, "torch.get_rng_state"]], "gradient() (in module torch)": [[1223, "torch.gradient"]], "greater() (in module torch)": [[1224, "torch.greater"]], "greater_equal() (in module torch)": [[1225, "torch.greater_equal"]], "gt() (in module torch)": [[1226, "torch.gt"]], "hamming_window() (in module torch)": [[1227, "torch.hamming_window"]], "hann_window() (in module torch)": [[1228, "torch.hann_window"]], "heaviside() (in module torch)": [[1229, "torch.heaviside"]], "histc() (in module torch)": [[1230, "torch.histc"]], "histogram() (in module torch)": [[1231, "torch.histogram"]], "histogramdd() (in module torch)": [[1232, "torch.histogramdd"]], "hsplit() (in module torch)": [[1233, "torch.hsplit"]], "hspmm() (in module torch)": [[1234, "torch.hspmm"]], "hstack() (in module torch)": [[1235, "torch.hstack"]], "hypot() (in module torch)": [[1236, "torch.hypot"]], "i0() (in module torch)": [[1237, "torch.i0"]], "igamma() (in module torch)": [[1238, "torch.igamma"]], "igammac() (in module torch)": [[1239, "torch.igammac"]], "imag() (in module torch)": [[1240, "torch.imag"]], "index_add() (in module torch)": [[1241, "torch.index_add"]], "index_copy() (in module torch)": [[1242, "torch.index_copy"]], "index_reduce() (in module torch)": [[1243, "torch.index_reduce"]], "index_select() (in module torch)": [[1244, "torch.index_select"]], "initial_seed() (in module torch)": [[1245, "torch.initial_seed"]], "inner() (in module torch)": [[1246, "torch.inner"]], "inverse() (in module torch)": [[1247, "torch.inverse"]], "is_complex() (in module torch)": [[1248, "torch.is_complex"]], "is_conj() (in module torch)": [[1249, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1250, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1251, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1252, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1253, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1254, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1255, "torch.is_storage"]], "is_tensor() (in module torch)": [[1256, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1257, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1258, "torch.isclose"]], "isfinite() (in module torch)": [[1259, "torch.isfinite"]], "isin() (in module torch)": [[1260, "torch.isin"]], "isinf() (in module torch)": [[1261, "torch.isinf"]], "isnan() (in module torch)": [[1262, "torch.isnan"]], "isneginf() (in module torch)": [[1263, "torch.isneginf"]], "isposinf() (in module torch)": [[1264, "torch.isposinf"]], "isreal() (in module torch)": [[1265, "torch.isreal"]], "istft() (in module torch)": [[1266, "torch.istft"]], "attribute (class in torch.jit)": [[1267, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1267, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1267, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1267, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1267, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1268, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1268, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1268, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1268, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1269, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1269, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1269, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1269, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1269, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1269, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1270, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1271, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1272, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1273, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1274, "torch.jit.ignore"]], "interface() (in module torch.jit)": [[1275, "torch.jit.interface"]], "isinstance() (in module torch.jit)": [[1276, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1277, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1278, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1279, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1280, "torch.jit.save"]], "script() (in module torch.jit)": [[1281, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1282, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1283, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1284, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1285, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1286, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1287, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1288, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1289, "torch.kaiser_window"]], "kron() (in module torch)": [[1290, "torch.kron"]], "kthvalue() (in module torch)": [[1291, "torch.kthvalue"]], "lcm() (in module torch)": [[1292, "torch.lcm"]], "ldexp() (in module torch)": [[1293, "torch.ldexp"]], "le() (in module torch)": [[1294, "torch.le"]], "lerp() (in module torch)": [[1295, "torch.lerp"]], "less() (in module torch)": [[1296, "torch.less"]], "less_equal() (in module torch)": [[1297, "torch.less_equal"]], "lgamma() (in module torch)": [[1298, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1299, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1300, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1301, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1302, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1303, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1304, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1305, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1306, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1307, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1308, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1309, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1310, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1311, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1312, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1313, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1314, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1315, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1316, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1317, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1318, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1319, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1320, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1321, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1322, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1323, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1324, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1325, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1326, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1327, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1328, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1329, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1330, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1331, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1332, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1333, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1334, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1335, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1336, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1337, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1338, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1339, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1340, "torch.linspace"]], "load() (in module torch)": [[1341, "torch.load"]], "lobpcg() (in module torch)": [[1342, "torch.lobpcg"]], "log() (in module torch)": [[1343, "torch.log"]], "log10() (in module torch)": [[1344, "torch.log10"]], "log1p() (in module torch)": [[1345, "torch.log1p"]], "log2() (in module torch)": [[1346, "torch.log2"]], "logaddexp() (in module torch)": [[1347, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1348, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1349, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1350, "torch.logdet"]], "logical_and() (in module torch)": [[1351, "torch.logical_and"]], "logical_not() (in module torch)": [[1352, "torch.logical_not"]], "logical_or() (in module torch)": [[1353, "torch.logical_or"]], "logical_xor() (in module torch)": [[1354, "torch.logical_xor"]], "logit() (in module torch)": [[1355, "torch.logit"]], "logspace() (in module torch)": [[1356, "torch.logspace"]], "logsumexp() (in module torch)": [[1357, "torch.logsumexp"]], "lt() (in module torch)": [[1358, "torch.lt"]], "lu() (in module torch)": [[1359, "torch.lu"]], "lu_solve() (in module torch)": [[1360, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1361, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1362, "torch.manual_seed"]], "masked_select() (in module torch)": [[1363, "torch.masked_select"]], "matmul() (in module torch)": [[1364, "torch.matmul"]], "matrix_exp() (in module torch)": [[1365, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1366, "torch.matrix_power"]], "max() (in module torch)": [[1367, "torch.max"]], "maximum() (in module torch)": [[1368, "torch.maximum"]], "mean() (in module torch)": [[1369, "torch.mean"]], "median() (in module torch)": [[1370, "torch.median"]], "meshgrid() (in module torch)": [[1371, "torch.meshgrid"]], "min() (in module torch)": [[1372, "torch.min"]], "minimum() (in module torch)": [[1373, "torch.minimum"]], "mm() (in module torch)": [[1374, "torch.mm"]], "mode() (in module torch)": [[1375, "torch.mode"]], "moveaxis() (in module torch)": [[1376, "torch.moveaxis"]], "movedim() (in module torch)": [[1377, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1378, "torch.mps.current_allocated_memory"]], "device_count() (in module torch.mps)": [[1379, "torch.mps.device_count"]], "driver_allocated_memory() (in module torch.mps)": [[1380, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1381, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1382, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1382, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1382, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1382, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1382, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1382, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1383, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1384, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1385, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1386, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1387, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1388, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1389, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1390, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1391, "torch.mps.synchronize"]], "msort() (in module torch)": [[1392, "torch.msort"]], "deferredmtiacallerror": [[1393, "torch.mtia.DeferredMtiaCallError"]], "event (class in torch.mtia)": [[1394, "torch.mtia.Event"]], "stream (class in torch.mtia)": [[1395, "torch.mtia.Stream"]], "streamcontext (class in torch.mtia)": [[1396, "torch.mtia.StreamContext"]], "current_device() (in module torch.mtia)": [[1397, "torch.mtia.current_device"]], "current_stream() (in module torch.mtia)": [[1398, "torch.mtia.current_stream"]], "default_stream() (in module torch.mtia)": [[1399, "torch.mtia.default_stream"]], "device (class in torch.mtia)": [[1400, "torch.mtia.device"]], "device_count() (in module torch.mtia)": [[1401, "torch.mtia.device_count"]], "init() (in module torch.mtia)": [[1402, "torch.mtia.init"]], "is_available() (in module torch.mtia)": [[1403, "torch.mtia.is_available"]], "is_initialized() (in module torch.mtia)": [[1404, "torch.mtia.is_initialized"]], "set_stream() (in module torch.mtia)": [[1405, "torch.mtia.set_stream"]], "stream() (in module torch.mtia)": [[1406, "torch.mtia.stream"]], "synchronize() (in module torch.mtia)": [[1407, "torch.mtia.synchronize"]], "mul() (in module torch)": [[1408, "torch.mul"]], "multinomial() (in module torch)": [[1409, "torch.multinomial"]], "multiply() (in module torch)": [[1410, "torch.multiply"]], "mv() (in module torch)": [[1411, "torch.mv"]], "mvlgamma() (in module torch)": [[1412, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1413, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1414, "torch.nanmean"]], "nanmedian() (in module torch)": [[1415, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1416, "torch.nanquantile"]], "nansum() (in module torch)": [[1417, "torch.nansum"]], "narrow() (in module torch)": [[1418, "torch.narrow"]], "narrow_copy() (in module torch)": [[1419, "torch.narrow_copy"]], "ne() (in module torch)": [[1420, "torch.ne"]], "neg() (in module torch)": [[1421, "torch.neg"]], "negative() (in module torch)": [[1422, "torch.negative"]], "nextafter() (in module torch)": [[1423, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1424, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1425, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1426, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1427, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1427, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1427, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1428, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1429, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1430, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1431, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1432, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1433, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1434, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1435, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1436, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1437, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1438, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1439, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1440, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1441, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1442, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1443, "torch.nn.ChannelShuffle"]], "circularpad1d (class in torch.nn)": [[1444, "torch.nn.CircularPad1d"]], "circularpad2d (class in torch.nn)": [[1445, "torch.nn.CircularPad2d"]], "circularpad3d (class in torch.nn)": [[1446, "torch.nn.CircularPad3d"]], "constantpad1d (class in torch.nn)": [[1447, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1448, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1449, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1450, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1451, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1452, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1453, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1454, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1455, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1456, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1457, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1458, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1459, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1460, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1461, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1462, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1463, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1464, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1465, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1465, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1466, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1466, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1466, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1467, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1468, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1469, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1470, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1471, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1472, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1473, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1474, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1475, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1476, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1477, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1478, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1479, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1480, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1481, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1482, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1483, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1484, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1485, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1486, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1487, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1488, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1489, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1490, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1491, "torch.nn.LPPool2d"]], "lppool3d (class in torch.nn)": [[1492, "torch.nn.LPPool3d"]], "lstm (class in torch.nn)": [[1493, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1494, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1495, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1496, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1496, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1497, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1497, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1498, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1498, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1499, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1499, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1500, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1500, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1501, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1501, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1502, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1502, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1503, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1503, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1504, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1504, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1505, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1505, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1506, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1506, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1507, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1507, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1508, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1508, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1509, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1510, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1511, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1512, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1513, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1514, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1515, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1516, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1517, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1518, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1519, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1520, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1521, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1522, "torch.nn.Mish"]], "module (class in torch.nn)": [[1523, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1523, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1523, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1523, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1523, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1523, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1523, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1523, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1523, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1523, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1523, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1523, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1523, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1523, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1523, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1523, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1523, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1523, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1523, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1523, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1523, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1523, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1523, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1523, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1523, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1523, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1523, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1523, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1523, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1523, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1523, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1523, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1523, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1523, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1523, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1523, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1523, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1523, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1523, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1523, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1523, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1523, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1523, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1523, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1523, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1523, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1523, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1524, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1524, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1524, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1524, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1524, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1524, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1524, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1525, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1525, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1525, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1525, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1526, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1527, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1528, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1529, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1529, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1529, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1530, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1531, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1532, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1533, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1533, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1534, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1534, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1534, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1535, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1536, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1537, "torch.nn.PoissonNLLLoss"]], "rmsnorm (class in torch.nn)": [[1538, "torch.nn.RMSNorm"]], "extra_repr() (torch.nn.rmsnorm method)": [[1538, "torch.nn.RMSNorm.extra_repr"]], "forward() (torch.nn.rmsnorm method)": [[1538, "torch.nn.RMSNorm.forward"]], "reset_parameters() (torch.nn.rmsnorm method)": [[1538, "torch.nn.RMSNorm.reset_parameters"]], "rnn (class in torch.nn)": [[1539, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1540, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1540, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1541, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1542, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1543, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1544, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1545, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1546, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1547, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1548, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1549, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1550, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1551, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1552, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1552, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1553, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1554, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1555, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1556, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1557, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1558, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1559, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1560, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1561, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1562, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1563, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1563, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1564, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1565, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1566, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1567, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1567, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1567, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1568, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1568, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1569, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1569, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1570, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1570, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1571, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1571, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1572, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1573, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1574, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1575, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1576, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1577, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1578, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1579, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1580, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1581, "torch.nn.ZeroPad3d"]], "sdpbackend (class in torch.nn.attention)": [[1582, "torch.nn.attention.SDPBackend"]], "name (torch.nn.attention.sdpbackend property)": [[1582, "torch.nn.attention.SDPBackend.name"]], "causalbias (class in torch.nn.attention.bias)": [[1583, "torch.nn.attention.bias.CausalBias"]], "causalvariant (class in torch.nn.attention.bias)": [[1584, "torch.nn.attention.bias.CausalVariant"]], "causal_lower_right() (in module torch.nn.attention.bias)": [[1585, "torch.nn.attention.bias.causal_lower_right"]], "causal_upper_left() (in module torch.nn.attention.bias)": [[1586, "torch.nn.attention.bias.causal_upper_left"]], "sdpa_kernel() (in module torch.nn.attention)": [[1587, "torch.nn.attention.sdpa_kernel"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1588, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1589, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1590, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1591, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1592, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1593, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1594, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1595, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1596, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1597, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1598, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1599, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1600, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1601, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1602, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1603, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1604, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1605, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1606, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1607, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1608, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1609, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1610, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1611, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1612, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1613, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1614, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1615, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1616, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1617, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1618, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1619, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1620, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1621, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1622, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1623, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1624, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1625, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1626, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1627, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1628, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1629, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1630, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1631, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1632, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1633, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1634, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1635, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1636, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1637, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1638, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1639, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1640, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1641, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1642, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1643, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1644, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1645, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1646, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1647, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1648, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1649, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1650, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1651, "torch.nn.functional.lp_pool2d"]], "lp_pool3d() (in module torch.nn.functional)": [[1652, "torch.nn.functional.lp_pool3d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1653, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1654, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1655, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1656, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1657, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1658, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1659, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1660, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1661, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1662, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1663, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1664, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1665, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1666, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1667, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1668, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1669, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1670, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1671, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1672, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1673, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1674, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1675, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1676, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1677, "torch.nn.functional.relu_"]], "rms_norm() (in module torch.nn.functional)": [[1678, "torch.nn.functional.rms_norm"]], "rrelu() (in module torch.nn.functional)": [[1679, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1680, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1681, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1682, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1683, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1684, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1685, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1686, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1687, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1688, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1689, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1690, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1691, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1692, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1693, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1694, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1695, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1696, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1697, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1698, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1699, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1700, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1701, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1702, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1703, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1703, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1703, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1704, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1705, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1706, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1707, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1708, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1709, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1710, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1711, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "rmsnorm (class in torch.nn.modules.normalization)": [[1712, "torch.nn.modules.normalization.RMSNorm"]], "extra_repr() (torch.nn.modules.normalization.rmsnorm method)": [[1712, "torch.nn.modules.normalization.RMSNorm.extra_repr"]], "forward() (torch.nn.modules.normalization.rmsnorm method)": [[1712, "torch.nn.modules.normalization.RMSNorm.forward"]], "reset_parameters() (torch.nn.modules.normalization.rmsnorm method)": [[1712, "torch.nn.modules.normalization.RMSNorm.reset_parameters"]], "distributeddataparallel (class in torch.nn.parallel)": [[1713, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1713, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1713, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1713, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1713, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1714, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1715, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1716, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1716, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm() (in module torch.nn.utils)": [[1717, "torch.nn.utils.clip_grad_norm"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1718, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1719, "torch.nn.utils.clip_grad_value_"]], "convert_conv2d_weight_memory_format() (in module torch.nn.utils)": [[1720, "torch.nn.utils.convert_conv2d_weight_memory_format"]], "convert_conv3d_weight_memory_format() (in module torch.nn.utils)": [[1721, "torch.nn.utils.convert_conv3d_weight_memory_format"]], "fuse_conv_bn_eval() (in module torch.nn.utils)": [[1722, "torch.nn.utils.fuse_conv_bn_eval"]], "fuse_conv_bn_weights() (in module torch.nn.utils)": [[1723, "torch.nn.utils.fuse_conv_bn_weights"]], "fuse_linear_bn_eval() (in module torch.nn.utils)": [[1724, "torch.nn.utils.fuse_linear_bn_eval"]], "fuse_linear_bn_weights() (in module torch.nn.utils)": [[1725, "torch.nn.utils.fuse_linear_bn_weights"]], "parameters_to_vector() (in module torch.nn.utils)": [[1726, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1727, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1728, "torch.nn.utils.parametrizations.spectral_norm"]], "weight_norm() (in module torch.nn.utils.parametrizations)": [[1729, "torch.nn.utils.parametrizations.weight_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1730, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1730, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1731, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1732, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1733, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1734, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1735, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1735, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1735, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1735, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1735, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1735, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1736, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1736, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1736, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1736, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1736, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1737, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1737, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1737, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1737, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1737, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1738, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1738, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1738, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1738, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1738, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1739, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1739, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1739, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1739, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1739, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1739, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1740, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1740, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1740, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1740, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1740, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1740, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1740, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1741, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1741, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1741, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1741, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1741, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1741, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1742, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1742, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1742, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1742, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1742, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1743, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1744, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1745, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1746, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1747, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1748, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1749, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1750, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1751, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1752, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1753, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1754, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1754, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1754, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1754, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1754, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1754, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1754, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1754, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1754, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1754, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1755, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1756, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1757, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1758, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1759, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1760, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1761, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1762, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1763, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1764, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1765, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1766, "torch.no_grad"]], "nonzero() (in module torch)": [[1767, "torch.nonzero"]], "norm() (in module torch)": [[1768, "torch.norm"]], "normal() (in module torch)": [[1769, "torch.normal"]], "not_equal() (in module torch)": [[1770, "torch.not_equal"]], "numel() (in module torch)": [[1771, "torch.numel"]], "ones() (in module torch)": [[1772, "torch.ones"]], "ones_like() (in module torch)": [[1773, "torch.ones_like"]], "jitscalartype (class in torch.onnx)": [[1774, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1774, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1774, "torch.onnx.JitScalarType.from_dtype"]], "from_onnx_type() (torch.onnx.jitscalartype class method)": [[1774, "torch.onnx.JitScalarType.from_onnx_type"]], "from_value() (torch.onnx.jitscalartype class method)": [[1774, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1774, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1774, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1774, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1774, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1775, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1775, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1776, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1777, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1777, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1778, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1778, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1779, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1779, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1780, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1780, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1780, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1780, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1780, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1780, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1780, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1780, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1780, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1780, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1780, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1780, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1781, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1781, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1782, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1782, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1783, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1783, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1784, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1784, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1785, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1786, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1787, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1788, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1789, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1790, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1790, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1791, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1791, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1792, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1792, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1793, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1793, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1794, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1794, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1795, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1795, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1795, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1795, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1795, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1796, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1796, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1796, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1796, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1796, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1797, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1797, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1797, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1797, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1797, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1798, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1798, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1798, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1798, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1798, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1798, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1799, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1799, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1799, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1799, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1800, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1800, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1800, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1800, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1800, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1801, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1801, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1801, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1801, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1801, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1802, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1802, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1802, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1802, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1802, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1803, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1803, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1803, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1803, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1803, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1804, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1804, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1804, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1804, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1804, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1805, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1805, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1805, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1805, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1805, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1806, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1806, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1806, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1806, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1806, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1807, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "get_last_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1807, "torch.optim.lr_scheduler.ReduceLROnPlateau.get_last_lr"]], "print_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1807, "torch.optim.lr_scheduler.ReduceLROnPlateau.print_lr"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1808, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1808, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1808, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1808, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1808, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1809, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1809, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1809, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1809, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1809, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1810, "torch.orgqr"]], "ormqr() (in module torch)": [[1811, "torch.ormqr"]], "outer() (in module torch)": [[1812, "torch.outer"]], "pca_lowrank() (in module torch)": [[1813, "torch.pca_lowrank"]], "permute() (in module torch)": [[1814, "torch.permute"]], "pinverse() (in module torch)": [[1815, "torch.pinverse"]], "poisson() (in module torch)": [[1816, "torch.poisson"]], "polar() (in module torch)": [[1817, "torch.polar"]], "polygamma() (in module torch)": [[1818, "torch.polygamma"]], "positive() (in module torch)": [[1819, "torch.positive"]], "pow() (in module torch)": [[1820, "torch.pow"]], "prod() (in module torch)": [[1821, "torch.prod"]], "promote_types() (in module torch)": [[1822, "torch.promote_types"]], "qr() (in module torch)": [[1823, "torch.qr"]], "quantile() (in module torch)": [[1824, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1825, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1826, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1827, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1828, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1829, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1830, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1830, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1830, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1830, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1830, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1831, "torch.rad2deg"]], "rand() (in module torch)": [[1832, "torch.rand"]], "rand_like() (in module torch)": [[1833, "torch.rand_like"]], "randint() (in module torch)": [[1834, "torch.randint"]], "randint_like() (in module torch)": [[1835, "torch.randint_like"]], "randn() (in module torch)": [[1836, "torch.randn"]], "randn_like() (in module torch)": [[1837, "torch.randn_like"]], "randperm() (in module torch)": [[1838, "torch.randperm"]], "range() (in module torch)": [[1839, "torch.range"]], "ravel() (in module torch)": [[1840, "torch.ravel"]], "real() (in module torch)": [[1841, "torch.real"]], "reciprocal() (in module torch)": [[1842, "torch.reciprocal"]], "remainder() (in module torch)": [[1843, "torch.remainder"]], "renorm() (in module torch)": [[1844, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1845, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1846, "torch.reshape"]], "resolve_conj() (in module torch)": [[1847, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1848, "torch.resolve_neg"]], "result_type() (in module torch)": [[1849, "torch.result_type"]], "roll() (in module torch)": [[1850, "torch.roll"]], "rot90() (in module torch)": [[1851, "torch.rot90"]], "round() (in module torch)": [[1852, "torch.round"]], "row_stack() (in module torch)": [[1853, "torch.row_stack"]], "rsqrt() (in module torch)": [[1854, "torch.rsqrt"]], "save() (in module torch)": [[1855, "torch.save"]], "scatter() (in module torch)": [[1856, "torch.scatter"]], "scatter_add() (in module torch)": [[1857, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1858, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1859, "torch.searchsorted"]], "seed() (in module torch)": [[1860, "torch.seed"]], "select() (in module torch)": [[1861, "torch.select"]], "select_scatter() (in module torch)": [[1862, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1863, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1864, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1865, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1866, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1867, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1868, "torch.set_flush_denormal"]], "set_num_interop_threads() (in module torch)": [[1869, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1870, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1871, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1872, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1873, "torch.set_warn_always"]], "sgn() (in module torch)": [[1874, "torch.sgn"]], "sigmoid() (in module torch)": [[1875, "torch.sigmoid"]], "sign() (in module torch)": [[1876, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1877, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1878, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1879, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1880, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1881, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1882, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1883, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1884, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1885, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1886, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1887, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1888, "torch.signbit"]], "sin() (in module torch)": [[1889, "torch.sin"]], "sinc() (in module torch)": [[1890, "torch.sinc"]], "sinh() (in module torch)": [[1891, "torch.sinh"]], "slice_scatter() (in module torch)": [[1892, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1893, "torch.slogdet"]], "smm() (in module torch)": [[1894, "torch.smm"]], "softmax() (in module torch)": [[1895, "torch.softmax"]], "sort() (in module torch)": [[1896, "torch.sort"]], "addmm() (in module torch.sparse)": [[1897, "torch.sparse.addmm"]], "as_sparse_gradcheck() (in module torch.sparse)": [[1898, "torch.sparse.as_sparse_gradcheck"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1899, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1899, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1899, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1899, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1900, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1901, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1902, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1903, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1904, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1905, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1906, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1907, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1908, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1909, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1910, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1911, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1912, "torch.split"]], "sqrt() (in module torch)": [[1913, "torch.sqrt"]], "square() (in module torch)": [[1914, "torch.square"]], "squeeze() (in module torch)": [[1915, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1916, "torch.sspaddmm"]], "stack() (in module torch)": [[1917, "torch.stack"]], "std() (in module torch)": [[1918, "torch.std"]], "std_mean() (in module torch)": [[1919, "torch.std_mean"]], "stft() (in module torch)": [[1920, "torch.stft"]], "sub() (in module torch)": [[1921, "torch.sub"]], "subtract() (in module torch)": [[1922, "torch.subtract"]], "sum() (in module torch)": [[1923, "torch.sum"]], "svd() (in module torch)": [[1924, "torch.svd"]], "svd_lowrank() (in module torch)": [[1925, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1926, "torch.swapaxes"]], "swapdims() (in module torch)": [[1927, "torch.swapdims"]], "sym_float() (in module torch)": [[1928, "torch.sym_float"]], "sym_int() (in module torch)": [[1929, "torch.sym_int"]], "sym_ite() (in module torch)": [[1930, "torch.sym_ite"]], "sym_max() (in module torch)": [[1931, "torch.sym_max"]], "sym_min() (in module torch)": [[1932, "torch.sym_min"]], "sym_not() (in module torch)": [[1933, "torch.sym_not"]], "t() (in module torch)": [[1934, "torch.t"]], "take() (in module torch)": [[1935, "torch.take"]], "take_along_dim() (in module torch)": [[1936, "torch.take_along_dim"]], "tan() (in module torch)": [[1937, "torch.tan"]], "tanh() (in module torch)": [[1938, "torch.tanh"]], "tensor() (in module torch)": [[1939, "torch.tensor"]], "tensor_split() (in module torch)": [[1940, "torch.tensor_split"]], "tensordot() (in module torch)": [[1941, "torch.tensordot"]], "tile() (in module torch)": [[1942, "torch.tile"]], "topk() (in module torch)": [[1943, "torch.topk"]], "trace() (in module torch)": [[1944, "torch.trace"]], "transpose() (in module torch)": [[1945, "torch.transpose"]], "trapezoid() (in module torch)": [[1946, "torch.trapezoid"]], "trapz() (in module torch)": [[1947, "torch.trapz"]], "triangular_solve() (in module torch)": [[1948, "torch.triangular_solve"]], "tril() (in module torch)": [[1949, "torch.tril"]], "tril_indices() (in module torch)": [[1950, "torch.tril_indices"]], "triu() (in module torch)": [[1951, "torch.triu"]], "triu_indices() (in module torch)": [[1952, "torch.triu_indices"]], "true_divide() (in module torch)": [[1953, "torch.true_divide"]], "trunc() (in module torch)": [[1954, "torch.trunc"]], "unbind() (in module torch)": [[1955, "torch.unbind"]], "unflatten() (in module torch)": [[1956, "torch.unflatten"]], "unique() (in module torch)": [[1957, "torch.unique"]], "unique_consecutive() (in module torch)": [[1958, "torch.unique_consecutive"]], "unravel_index() (in module torch)": [[1959, "torch.unravel_index"]], "unsqueeze() (in module torch)": [[1960, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1961, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1962, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1963, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1964, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1965, "torch.utils.set_module"]], "swap_tensors() (in module torch.utils)": [[1966, "torch.utils.swap_tensors"]], "vander() (in module torch)": [[1967, "torch.vander"]], "var() (in module torch)": [[1968, "torch.var"]], "var_mean() (in module torch)": [[1969, "torch.var_mean"]], "vdot() (in module torch)": [[1970, "torch.vdot"]], "view_as_complex() (in module torch)": [[1971, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1972, "torch.view_as_real"]], "vmap() (in module torch)": [[1973, "torch.vmap"]], "vsplit() (in module torch)": [[1974, "torch.vsplit"]], "vstack() (in module torch)": [[1975, "torch.vstack"]], "where() (in module torch)": [[1976, "torch.where"]], "xlogy() (in module torch)": [[1977, "torch.xlogy"]], "event (class in torch.xpu)": [[1978, "torch.xpu.Event"]], "elapsed_time() (torch.xpu.event method)": [[1978, "torch.xpu.Event.elapsed_time"]], "query() (torch.xpu.event method)": [[1978, "torch.xpu.Event.query"]], "record() (torch.xpu.event method)": [[1978, "torch.xpu.Event.record"]], "synchronize() (torch.xpu.event method)": [[1978, "torch.xpu.Event.synchronize"]], "wait() (torch.xpu.event method)": [[1978, "torch.xpu.Event.wait"]], "stream (class in torch.xpu)": [[1979, "torch.xpu.Stream"]], "query() (torch.xpu.stream method)": [[1979, "torch.xpu.Stream.query"]], "record_event() (torch.xpu.stream method)": [[1979, "torch.xpu.Stream.record_event"]], "synchronize() (torch.xpu.stream method)": [[1979, "torch.xpu.Stream.synchronize"]], "wait_event() (torch.xpu.stream method)": [[1979, "torch.xpu.Stream.wait_event"]], "wait_stream() (torch.xpu.stream method)": [[1979, "torch.xpu.Stream.wait_stream"]], "streamcontext (class in torch.xpu)": [[1980, "torch.xpu.StreamContext"]], "current_device() (in module torch.xpu)": [[1981, "torch.xpu.current_device"]], "current_stream() (in module torch.xpu)": [[1982, "torch.xpu.current_stream"]], "device (class in torch.xpu)": [[1983, "torch.xpu.device"]], "device_count() (in module torch.xpu)": [[1984, "torch.xpu.device_count"]], "device_of (class in torch.xpu)": [[1985, "torch.xpu.device_of"]], "empty_cache() (in module torch.xpu)": [[1986, "torch.xpu.empty_cache"]], "get_device_capability() (in module torch.xpu)": [[1987, "torch.xpu.get_device_capability"]], "get_device_name() (in module torch.xpu)": [[1988, "torch.xpu.get_device_name"]], "get_device_properties() (in module torch.xpu)": [[1989, "torch.xpu.get_device_properties"]], "get_rng_state() (in module torch.xpu)": [[1990, "torch.xpu.get_rng_state"]], "get_rng_state_all() (in module torch.xpu)": [[1991, "torch.xpu.get_rng_state_all"]], "init() (in module torch.xpu)": [[1992, "torch.xpu.init"]], "initial_seed() (in module torch.xpu)": [[1993, "torch.xpu.initial_seed"]], "is_available() (in module torch.xpu)": [[1994, "torch.xpu.is_available"]], "is_initialized() (in module torch.xpu)": [[1995, "torch.xpu.is_initialized"]], "manual_seed() (in module torch.xpu)": [[1996, "torch.xpu.manual_seed"]], "manual_seed_all() (in module torch.xpu)": [[1997, "torch.xpu.manual_seed_all"]], "seed() (in module torch.xpu)": [[1998, "torch.xpu.seed"]], "seed_all() (in module torch.xpu)": [[1999, "torch.xpu.seed_all"]], "set_device() (in module torch.xpu)": [[2000, "torch.xpu.set_device"]], "set_rng_state() (in module torch.xpu)": [[2001, "torch.xpu.set_rng_state"]], "set_rng_state_all() (in module torch.xpu)": [[2002, "torch.xpu.set_rng_state_all"]], "set_stream() (in module torch.xpu)": [[2003, "torch.xpu.set_stream"]], "stream() (in module torch.xpu)": [[2004, "torch.xpu.stream"]], "synchronize() (in module torch.xpu)": [[2005, "torch.xpu.synchronize"]], "zeros() (in module torch)": [[2006, "torch.zeros"]], "zeros_like() (in module torch)": [[2007, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[2008, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[2008, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[2008, "torch.hub.help"]], "list() (in module torch.hub)": [[2008, "torch.hub.list"]], "load() (in module torch.hub)": [[2008, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[2008, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[2008, "torch.hub.set_dir"]], "torch.hub": [[2008, "module-torch.hub"]], "pytorch_jit": [[2010, "envvar-PYTORCH_JIT"]], "environment variable": [[2010, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[2010, "torch.jit.export"]], "torch.jit": [[2010, "module-torch.jit"]], "torch.jit.annotations": [[2010, "module-torch.jit.annotations"]], "torch.jit.frontend": [[2010, "module-torch.jit.frontend"]], "torch.jit.generate_bytecode": [[2010, "module-torch.jit.generate_bytecode"]], "torch.jit.mobile": [[2010, "module-torch.jit.mobile"]], "torch.jit.quantized": [[2010, "module-torch.jit.quantized"]], "torch.jit.supported_ops": [[2011, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[2012, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[2012, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[2015, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[2016, "module-torch.utils.jit"]], "library (class in torch.library)": [[2017, "torch.library.Library"]], "custom_op() (in module torch.library)": [[2017, "torch.library.custom_op"]], "define() (in module torch.library)": [[2017, "torch.library.define"]], "define() (torch.library.library method)": [[2017, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[2017, "torch.library.fallthrough_kernel"]], "get_ctx() (in module torch.library)": [[2017, "torch.library.get_ctx"]], "impl() (in module torch.library)": [[2017, "torch.library.impl"]], "impl() (torch.library.library method)": [[2017, "torch.library.Library.impl"]], "impl_abstract() (in module torch.library)": [[2017, "torch.library.impl_abstract"]], "opcheck() (in module torch.library)": [[2017, "torch.library.opcheck"]], "register_autograd() (in module torch.library)": [[2017, "torch.library.register_autograd"]], "register_fake() (in module torch.library)": [[2017, "torch.library.register_fake"]], "register_kernel() (in module torch.library)": [[2017, "torch.library.register_kernel"]], "torch.library": [[2017, "module-torch.library"]], "torch.linalg": [[2018, "module-torch.linalg"]], "torch._logging": [[2019, "module-torch._logging"]], "torch.masked": [[2020, "module-torch.masked"]], "torch.masked.maskedtensor": [[2020, "module-torch.masked.maskedtensor"]], "torch.masked.maskedtensor.binary": [[2020, "module-torch.masked.maskedtensor.binary"]], "torch.masked.maskedtensor.core": [[2020, "module-torch.masked.maskedtensor.core"]], "torch.masked.maskedtensor.creation": [[2020, "module-torch.masked.maskedtensor.creation"]], "torch.masked.maskedtensor.passthrough": [[2020, "module-torch.masked.maskedtensor.passthrough"]], "torch.masked.maskedtensor.reductions": [[2020, "module-torch.masked.maskedtensor.reductions"]], "torch.masked.maskedtensor.unary": [[2020, "module-torch.masked.maskedtensor.unary"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[2023, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[2024, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[2024, "module-torch.utils.model_zoo"]], "moduletracker (class in torch.utils.module_tracker)": [[2025, "torch.utils.module_tracker.ModuleTracker"]], "torch.utils.module_tracker": [[2025, "module-torch.utils.module_tracker"]], "aggregation (class in torch.monitor)": [[2026, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[2026, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[2026, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[2026, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[2026, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[2026, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[2026, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[2026, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[2026, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[2026, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[2026, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[2026, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[2026, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[2026, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[2026, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[2026, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[2026, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[2026, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[2026, "torch.monitor.Event.timestamp"]], "torch.monitor": [[2026, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[2026, "torch.monitor.unregister_event_handler"]], "torch.mps": [[2027, "module-torch.mps"]], "torch.mps.event": [[2027, "module-torch.mps.event"]], "torch.mps.profiler": [[2027, "module-torch.mps.profiler"]], "torch.mtia": [[2028, "module-torch.mtia"]], "spawncontext (class in torch.multiprocessing)": [[2029, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[2029, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[2029, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[2029, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[2029, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing.spawn)": [[2029, "torch.multiprocessing.spawn.spawn"]], "torch.multiprocessing": [[2029, "module-torch.multiprocessing"]], "torch.multiprocessing.pool": [[2029, "module-torch.multiprocessing.pool"]], "torch.multiprocessing.queue": [[2029, "module-torch.multiprocessing.queue"]], "torch.multiprocessing.reductions": [[2029, "module-torch.multiprocessing.reductions"]], "torch.multiprocessing.spawn": [[2029, "module-torch.multiprocessing.spawn"]], "align_as() (torch.tensor method)": [[2031, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[2031, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[2031, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[2031, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[2031, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[2031, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[2032, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[2032, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[2032, "torch.nested.to_padded_tensor"]], "torch.nested": [[2032, "module-torch.nested"]], "torch.nn": [[2033, "module-torch.nn"]], "torch.nn.backends": [[2033, "module-torch.nn.backends"]], "torch.nn.backends.thnn": [[2033, "module-torch.nn.backends.thnn"]], "torch.nn.common_types": [[2033, "module-torch.nn.common_types"]], "torch.nn.cpp": [[2033, "module-torch.nn.cpp"]], "torch.nn.functional": [[2033, "module-torch.nn.functional"]], "torch.nn.grad": [[2033, "module-torch.nn.grad"]], "torch.nn.init": [[2033, "module-torch.nn.init"]], "torch.nn.modules": [[2033, "module-torch.nn.modules"]], "torch.nn.modules.activation": [[2033, "module-torch.nn.modules.activation"]], "torch.nn.modules.adaptive": [[2033, "module-torch.nn.modules.adaptive"]], "torch.nn.modules.batchnorm": [[2033, "module-torch.nn.modules.batchnorm"]], "torch.nn.modules.channelshuffle": [[2033, "module-torch.nn.modules.channelshuffle"]], "torch.nn.modules.container": [[2033, "module-torch.nn.modules.container"]], "torch.nn.modules.conv": [[2033, "module-torch.nn.modules.conv"]], "torch.nn.modules.distance": [[2033, "module-torch.nn.modules.distance"]], "torch.nn.modules.dropout": [[2033, "module-torch.nn.modules.dropout"]], "torch.nn.modules.flatten": [[2033, "module-torch.nn.modules.flatten"]], "torch.nn.modules.fold": [[2033, "module-torch.nn.modules.fold"]], "torch.nn.modules.instancenorm": [[2033, "module-torch.nn.modules.instancenorm"]], "torch.nn.modules.lazy": [[2033, "module-torch.nn.modules.lazy"]], "torch.nn.modules.linear": [[2033, "module-torch.nn.modules.linear"]], "torch.nn.modules.loss": [[2033, "module-torch.nn.modules.loss"]], "torch.nn.modules.module": [[2033, "module-torch.nn.modules.module"]], "torch.nn.modules.normalization": [[2033, "module-torch.nn.modules.normalization"]], "torch.nn.modules.padding": [[2033, "module-torch.nn.modules.padding"]], "torch.nn.modules.pixelshuffle": [[2033, "module-torch.nn.modules.pixelshuffle"]], "torch.nn.modules.pooling": [[2033, "module-torch.nn.modules.pooling"]], "torch.nn.modules.rnn": [[2033, "module-torch.nn.modules.rnn"]], "torch.nn.modules.sparse": [[2033, "module-torch.nn.modules.sparse"]], "torch.nn.modules.transformer": [[2033, "module-torch.nn.modules.transformer"]], "torch.nn.modules.upsampling": [[2033, "module-torch.nn.modules.upsampling"]], "torch.nn.modules.utils": [[2033, "module-torch.nn.modules.utils"]], "torch.nn.parallel": [[2033, "module-torch.nn.parallel"]], "torch.nn.parallel.comm": [[2033, "module-torch.nn.parallel.comm"]], "torch.nn.parallel.distributed": [[2033, "module-torch.nn.parallel.distributed"]], "torch.nn.parallel.parallel_apply": [[2033, "module-torch.nn.parallel.parallel_apply"]], "torch.nn.parallel.replicate": [[2033, "module-torch.nn.parallel.replicate"]], "torch.nn.parallel.scatter_gather": [[2033, "module-torch.nn.parallel.scatter_gather"]], "torch.nn.parameter": [[2033, "module-torch.nn.parameter"]], "torch.nn.utils": [[2033, "module-torch.nn.utils"]], "torch.nn.utils.clip_grad": [[2033, "module-torch.nn.utils.clip_grad"]], "torch.nn.utils.convert_parameters": [[2033, "module-torch.nn.utils.convert_parameters"]], "torch.nn.utils.fusion": [[2033, "module-torch.nn.utils.fusion"]], "torch.nn.utils.init": [[2033, "module-torch.nn.utils.init"]], "torch.nn.utils.memory_format": [[2033, "module-torch.nn.utils.memory_format"]], "torch.nn.utils.parametrizations": [[2033, "module-torch.nn.utils.parametrizations"]], "torch.nn.utils.parametrize": [[2033, "module-torch.nn.utils.parametrize"]], "torch.nn.utils.prune": [[2033, "module-torch.nn.utils.prune"]], "torch.nn.utils.rnn": [[2033, "module-torch.nn.utils.rnn"]], "torch.nn.utils.stateless": [[2033, "module-torch.nn.utils.stateless"]], "torch.nn.attention": [[2034, "module-torch.nn.attention"]], "torch.nn.attention.bias": [[2035, "module-torch.nn.attention.bias"]], "calculate_gain() (in module torch.nn.init)": [[2037, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[2037, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[2037, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[2037, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[2037, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[2037, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[2037, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[2037, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[2037, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[2037, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[2037, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[2037, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[2037, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[2037, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[2037, "torch.nn.init.zeros_"]], "add_safe_globals() (in module torch.serialization)": [[2056, "torch.serialization.add_safe_globals"]], "clear_safe_globals() (in module torch.serialization)": [[2056, "torch.serialization.clear_safe_globals"]], "get_default_load_endianness() (in module torch.serialization)": [[2056, "torch.serialization.get_default_load_endianness"]], "get_default_mmap_options() (in module torch.serialization)": [[2056, "torch.serialization.get_default_mmap_options"]], "get_safe_globals() (in module torch.serialization)": [[2056, "torch.serialization.get_safe_globals"]], "register_package() (in module torch.serialization)": [[2056, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[2056, "torch.serialization.set_default_load_endianness"]], "set_default_mmap_options() (in module torch.serialization)": [[2056, "torch.serialization.set_default_mmap_options"]], "torch.onnx.errors": [[2058, "module-torch.onnx.errors"]], "torch.onnx.operators": [[2058, "module-torch.onnx.operators"]], "torch.onnx.symbolic_caffe2": [[2058, "module-torch.onnx.symbolic_caffe2"]], "torch.onnx.symbolic_helper": [[2058, "module-torch.onnx.symbolic_helper"]], "torch.onnx.symbolic_opset10": [[2058, "module-torch.onnx.symbolic_opset10"]], "torch.onnx.symbolic_opset11": [[2058, "module-torch.onnx.symbolic_opset11"]], "torch.onnx.symbolic_opset12": [[2058, "module-torch.onnx.symbolic_opset12"]], "torch.onnx.symbolic_opset13": [[2058, "module-torch.onnx.symbolic_opset13"]], "torch.onnx.symbolic_opset14": [[2058, "module-torch.onnx.symbolic_opset14"]], "torch.onnx.symbolic_opset15": [[2058, "module-torch.onnx.symbolic_opset15"]], "torch.onnx.symbolic_opset16": [[2058, "module-torch.onnx.symbolic_opset16"]], "torch.onnx.symbolic_opset17": [[2058, "module-torch.onnx.symbolic_opset17"]], "torch.onnx.symbolic_opset18": [[2058, "module-torch.onnx.symbolic_opset18"]], "torch.onnx.symbolic_opset19": [[2058, "module-torch.onnx.symbolic_opset19"]], "torch.onnx.symbolic_opset20": [[2058, "module-torch.onnx.symbolic_opset20"]], "torch.onnx.symbolic_opset7": [[2058, "module-torch.onnx.symbolic_opset7"]], "torch.onnx.symbolic_opset8": [[2058, "module-torch.onnx.symbolic_opset8"]], "torch.onnx.symbolic_opset9": [[2058, "module-torch.onnx.symbolic_opset9"]], "torch.onnx.utils": [[2058, "module-torch.onnx.utils"]], "torch.onnx.verification": [[2058, "module-torch.onnx.verification"]], "diagnosticoptions (class in torch.onnx)": [[2059, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[2059, "torch.onnx.ExportOptions"]], "invalidexportoptionserror (class in torch.onnx)": [[2059, "torch.onnx.InvalidExportOptionsError"]], "onnxprogram (class in torch.onnx)": [[2059, "torch.onnx.ONNXProgram"]], "onnxprogramserializer (class in torch.onnx)": [[2059, "torch.onnx.ONNXProgramSerializer"]], "onnxruntimeoptions (class in torch.onnx)": [[2059, "torch.onnx.ONNXRuntimeOptions"]], "onnxexportererror (class in torch.onnx)": [[2059, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[2059, "torch.onnx.OnnxRegistry"]], "adapt_torch_inputs_to_onnx() (torch.onnx.onnxprogram method)": [[2059, "torch.onnx.ONNXProgram.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.onnxprogram method)": [[2059, "torch.onnx.ONNXProgram.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.onnxprogram property)": [[2059, "torch.onnx.ONNXProgram.diagnostic_context"]], "dynamo_export() (in module torch.onnx)": [[2059, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[2059, "torch.onnx.enable_fake_mode"]], "fake_context (torch.onnx.onnxprogram property)": [[2059, "torch.onnx.ONNXProgram.fake_context"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[2059, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[2059, "torch.onnx.OnnxRegistry.is_registered_op"]], "model_proto (torch.onnx.onnxprogram property)": [[2059, "torch.onnx.ONNXProgram.model_proto"]], "model_signature (torch.onnx.onnxprogram property)": [[2059, "torch.onnx.ONNXProgram.model_signature"]], "opset_version (torch.onnx.onnxregistry property)": [[2059, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[2059, "torch.onnx.OnnxRegistry.register_op"]], "save() (torch.onnx.onnxprogram method)": [[2059, "torch.onnx.ONNXProgram.save"]], "save_diagnostics() (torch.onnx.onnxprogram method)": [[2059, "torch.onnx.ONNXProgram.save_diagnostics"]], "serialize() (torch.onnx.onnxprogramserializer method)": [[2059, "torch.onnx.ONNXProgramSerializer.serialize"]], "is_onnxrt_backend_supported() (in module torch.onnx)": [[2060, "torch.onnx.is_onnxrt_backend_supported"]], "disable_log() (in module torch.onnx)": [[2061, "torch.onnx.disable_log"]], "enable_log() (in module torch.onnx)": [[2061, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[2061, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[2061, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[2061, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[2061, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[2061, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[2061, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[2061, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[2061, "torch.onnx.unregister_custom_op_symbolic"]], "optimizer (class in torch.optim)": [[2063, "torch.optim.Optimizer"]], "torch.optim": [[2063, "module-torch.optim"]], "torch.optim.adadelta": [[2063, "module-torch.optim.adadelta"]], "torch.optim.adagrad": [[2063, "module-torch.optim.adagrad"]], "torch.optim.adam": [[2063, "module-torch.optim.adam"]], "torch.optim.adamax": [[2063, "module-torch.optim.adamax"]], "torch.optim.adamw": [[2063, "module-torch.optim.adamw"]], "torch.optim.asgd": [[2063, "module-torch.optim.asgd"]], "torch.optim.lbfgs": [[2063, "module-torch.optim.lbfgs"]], "torch.optim.lr_scheduler": [[2063, "module-torch.optim.lr_scheduler"]], "torch.optim.nadam": [[2063, "module-torch.optim.nadam"]], "torch.optim.optimizer": [[2063, "module-torch.optim.optimizer"]], "torch.optim.radam": [[2063, "module-torch.optim.radam"]], "torch.optim.rmsprop": [[2063, "module-torch.optim.rmsprop"]], "torch.optim.rprop": [[2063, "module-torch.optim.rprop"]], "torch.optim.sgd": [[2063, "module-torch.optim.sgd"]], "torch.optim.sparse_adam": [[2063, "module-torch.optim.sparse_adam"]], "torch.optim.swa_utils": [[2063, "module-torch.optim.swa_utils"]], "directory (class in torch.package)": [[2064, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[2064, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[2064, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[2064, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[2064, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[2064, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[2064, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[2064, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[2064, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[2064, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[2064, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[2064, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[2064, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[2064, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[2064, "torch.package.PackageExporter.save_text"]], "torch.package": [[2064, "module-torch.package"]], "torch.package.analyze": [[2064, "module-torch.package.analyze"]], "torch.package.analyze.find_first_use_of_broken_modules": [[2064, "module-torch.package.analyze.find_first_use_of_broken_modules"]], "torch.package.analyze.is_from_package": [[2064, "module-torch.package.analyze.is_from_package"]], "torch.package.analyze.trace_dependencies": [[2064, "module-torch.package.analyze.trace_dependencies"]], "torch.package.file_structure_representation": [[2064, "module-torch.package.file_structure_representation"]], "torch.package.find_file_dependencies": [[2064, "module-torch.package.find_file_dependencies"]], "torch.package.glob_group": [[2064, "module-torch.package.glob_group"]], "torch.package.importer": [[2064, "module-torch.package.importer"]], "torch.package.package_exporter": [[2064, "module-torch.package.package_exporter"]], "torch.package.package_importer": [[2064, "module-torch.package.package_importer"]], "pipe (class in torch.distributed.pipeline.sync)": [[2065, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[2065, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[2065, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[2065, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[2065, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[2065, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[2066, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[2066, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[2066, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[2066, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[2066, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[2066, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[2066, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[2066, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[2066, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[2066, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[2066, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[2066, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[2066, "torch.profiler.ProfilerActivity.name"]], "preset_metadata_json() (torch.profiler._kinetoprofile method)": [[2066, "torch.profiler._KinetoProfile.preset_metadata_json"]], "profile (class in torch.profiler)": [[2066, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[2066, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[2066, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[2066, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[2066, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[2066, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[2066, "module-torch.profiler"]], "torch.profiler.itt": [[2066, "module-torch.profiler.itt"]], "torch.profiler.profiler": [[2066, "module-torch.profiler.profiler"]], "torch.profiler.python_tracer": [[2066, "module-torch.profiler.python_tracer"]], "torch.ao": [[2067, "module-torch.ao"]], "torch.ao.nn": [[2067, "module-torch.ao.nn"]], "torch.ao.nn.intrinsic.modules.fused": [[2067, "module-torch.ao.nn.intrinsic.modules.fused"]], "torch.ao.nn.intrinsic.qat.modules.conv_fused": [[2067, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_fused": [[2067, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_relu": [[2067, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2067, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules.bn_relu": [[2067, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"]], "torch.ao.nn.intrinsic.quantized.modules.conv_add": [[2067, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"]], "torch.ao.nn.intrinsic.quantized.modules.conv_relu": [[2067, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"]], "torch.ao.nn.intrinsic.quantized.modules.linear_relu": [[2067, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"]], "torch.ao.nn.qat.dynamic.modules.linear": [[2067, "module-torch.ao.nn.qat.dynamic.modules.linear"]], "torch.ao.nn.qat.modules.conv": [[2067, "module-torch.ao.nn.qat.modules.conv"]], "torch.ao.nn.qat.modules.embedding_ops": [[2067, "module-torch.ao.nn.qat.modules.embedding_ops"]], "torch.ao.nn.qat.modules.linear": [[2067, "module-torch.ao.nn.qat.modules.linear"]], "torch.ao.nn.quantizable": [[2067, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[2067, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantizable.modules.activation": [[2067, "module-torch.ao.nn.quantizable.modules.activation"]], "torch.ao.nn.quantizable.modules.rnn": [[2067, "module-torch.ao.nn.quantizable.modules.rnn"]], "torch.ao.nn.quantized": [[2067, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.dynamic.modules.conv": [[2067, "module-torch.ao.nn.quantized.dynamic.modules.conv"]], "torch.ao.nn.quantized.dynamic.modules.linear": [[2067, "module-torch.ao.nn.quantized.dynamic.modules.linear"]], "torch.ao.nn.quantized.dynamic.modules.rnn": [[2067, "module-torch.ao.nn.quantized.dynamic.modules.rnn"]], "torch.ao.nn.quantized.modules.activation": [[2067, "module-torch.ao.nn.quantized.modules.activation"]], "torch.ao.nn.quantized.modules.batchnorm": [[2067, "module-torch.ao.nn.quantized.modules.batchnorm"]], "torch.ao.nn.quantized.modules.conv": [[2067, "module-torch.ao.nn.quantized.modules.conv"]], "torch.ao.nn.quantized.modules.dropout": [[2067, "module-torch.ao.nn.quantized.modules.dropout"]], "torch.ao.nn.quantized.modules.embedding_ops": [[2067, "module-torch.ao.nn.quantized.modules.embedding_ops"]], "torch.ao.nn.quantized.modules.functional_modules": [[2067, "module-torch.ao.nn.quantized.modules.functional_modules"]], "torch.ao.nn.quantized.modules.linear": [[2067, "module-torch.ao.nn.quantized.modules.linear"]], "torch.ao.nn.quantized.modules.normalization": [[2067, "module-torch.ao.nn.quantized.modules.normalization"]], "torch.ao.nn.quantized.modules.rnn": [[2067, "module-torch.ao.nn.quantized.modules.rnn"]], "torch.ao.nn.quantized.modules.utils": [[2067, "module-torch.ao.nn.quantized.modules.utils"]], "torch.ao.nn.quantized.reference": [[2067, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[2067, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.quantized.reference.modules.conv": [[2067, "module-torch.ao.nn.quantized.reference.modules.conv"]], "torch.ao.nn.quantized.reference.modules.linear": [[2067, "module-torch.ao.nn.quantized.reference.modules.linear"]], "torch.ao.nn.quantized.reference.modules.rnn": [[2067, "module-torch.ao.nn.quantized.reference.modules.rnn"]], "torch.ao.nn.quantized.reference.modules.sparse": [[2067, "module-torch.ao.nn.quantized.reference.modules.sparse"]], "torch.ao.nn.quantized.reference.modules.utils": [[2067, "module-torch.ao.nn.quantized.reference.modules.utils"]], "torch.ao.nn.sparse": [[2067, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[2067, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[2067, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.nn.sparse.quantized.dynamic.linear": [[2067, "module-torch.ao.nn.sparse.quantized.dynamic.linear"]], "torch.ao.nn.sparse.quantized.linear": [[2067, "module-torch.ao.nn.sparse.quantized.linear"]], "torch.ao.nn.sparse.quantized.utils": [[2067, "module-torch.ao.nn.sparse.quantized.utils"]], "torch.ao.ns": [[2067, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[2067, "module-torch.ao.ns.fx"]], "torch.ao.ns.fx.graph_matcher": [[2067, "module-torch.ao.ns.fx.graph_matcher"]], "torch.ao.ns.fx.graph_passes": [[2067, "module-torch.ao.ns.fx.graph_passes"]], "torch.ao.ns.fx.mappings": [[2067, "module-torch.ao.ns.fx.mappings"]], "torch.ao.ns.fx.n_shadows_utils": [[2067, "module-torch.ao.ns.fx.n_shadows_utils"]], "torch.ao.ns.fx.ns_types": [[2067, "module-torch.ao.ns.fx.ns_types"]], "torch.ao.ns.fx.pattern_utils": [[2067, "module-torch.ao.ns.fx.pattern_utils"]], "torch.ao.ns.fx.qconfig_multi_mapping": [[2067, "module-torch.ao.ns.fx.qconfig_multi_mapping"]], "torch.ao.ns.fx.utils": [[2067, "module-torch.ao.ns.fx.utils"]], "torch.ao.ns.fx.weight_utils": [[2067, "module-torch.ao.ns.fx.weight_utils"]], "torch.ao.pruning": [[2067, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[2067, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.scheduler.base_scheduler": [[2067, "module-torch.ao.pruning.scheduler.base_scheduler"]], "torch.ao.pruning.scheduler.cubic_scheduler": [[2067, "module-torch.ao.pruning.scheduler.cubic_scheduler"]], "torch.ao.pruning.scheduler.lambda_scheduler": [[2067, "module-torch.ao.pruning.scheduler.lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2067, "module-torch.ao.pruning.sparsifier"]], "torch.ao.pruning.sparsifier.base_sparsifier": [[2067, "module-torch.ao.pruning.sparsifier.base_sparsifier"]], "torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier": [[2067, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"]], "torch.ao.pruning.sparsifier.utils": [[2067, "module-torch.ao.pruning.sparsifier.utils"]], "torch.ao.pruning.sparsifier.weight_norm_sparsifier": [[2067, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"]], "torch.ao.quantization": [[2067, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[2067, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.backend_config.backend_config": [[2067, "module-torch.ao.quantization.backend_config.backend_config"]], "torch.ao.quantization.backend_config.executorch": [[2067, "module-torch.ao.quantization.backend_config.executorch"]], "torch.ao.quantization.backend_config.fbgemm": [[2067, "module-torch.ao.quantization.backend_config.fbgemm"]], "torch.ao.quantization.backend_config.native": [[2067, "module-torch.ao.quantization.backend_config.native"]], "torch.ao.quantization.backend_config.observation_type": [[2067, "module-torch.ao.quantization.backend_config.observation_type"]], "torch.ao.quantization.backend_config.onednn": [[2067, "module-torch.ao.quantization.backend_config.onednn"]], "torch.ao.quantization.backend_config.qnnpack": [[2067, "module-torch.ao.quantization.backend_config.qnnpack"]], "torch.ao.quantization.backend_config.tensorrt": [[2067, "module-torch.ao.quantization.backend_config.tensorrt"]], "torch.ao.quantization.backend_config.utils": [[2067, "module-torch.ao.quantization.backend_config.utils"]], "torch.ao.quantization.backend_config.x86": [[2067, "module-torch.ao.quantization.backend_config.x86"]], "torch.ao.quantization.fake_quantize": [[2067, "module-torch.ao.quantization.fake_quantize"]], "torch.ao.quantization.fuse_modules": [[2067, "module-torch.ao.quantization.fuse_modules"]], "torch.ao.quantization.fuser_method_mappings": [[2067, "module-torch.ao.quantization.fuser_method_mappings"]], "torch.ao.quantization.fx": [[2067, "module-torch.ao.quantization.fx"]], "torch.ao.quantization.fx.convert": [[2067, "module-torch.ao.quantization.fx.convert"]], "torch.ao.quantization.fx.custom_config": [[2067, "module-torch.ao.quantization.fx.custom_config"]], "torch.ao.quantization.fx.fuse": [[2067, "module-torch.ao.quantization.fx.fuse"]], "torch.ao.quantization.fx.fuse_handler": [[2067, "module-torch.ao.quantization.fx.fuse_handler"]], "torch.ao.quantization.fx.graph_module": [[2067, "module-torch.ao.quantization.fx.graph_module"]], "torch.ao.quantization.fx.lower_to_fbgemm": [[2067, "module-torch.ao.quantization.fx.lower_to_fbgemm"]], "torch.ao.quantization.fx.lower_to_qnnpack": [[2067, "module-torch.ao.quantization.fx.lower_to_qnnpack"]], "torch.ao.quantization.fx.lstm_utils": [[2067, "module-torch.ao.quantization.fx.lstm_utils"]], "torch.ao.quantization.fx.match_utils": [[2067, "module-torch.ao.quantization.fx.match_utils"]], "torch.ao.quantization.fx.pattern_utils": [[2067, "module-torch.ao.quantization.fx.pattern_utils"]], "torch.ao.quantization.fx.prepare": [[2067, "module-torch.ao.quantization.fx.prepare"]], "torch.ao.quantization.fx.qconfig_mapping_utils": [[2067, "module-torch.ao.quantization.fx.qconfig_mapping_utils"]], "torch.ao.quantization.fx.quantize_handler": [[2067, "module-torch.ao.quantization.fx.quantize_handler"]], "torch.ao.quantization.fx.tracer": [[2067, "module-torch.ao.quantization.fx.tracer"]], "torch.ao.quantization.fx.utils": [[2067, "module-torch.ao.quantization.fx.utils"]], "torch.ao.quantization.observer": [[2067, "module-torch.ao.quantization.observer"]], "torch.ao.quantization.pt2e.duplicate_dq_pass": [[2067, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"]], "torch.ao.quantization.pt2e.export_utils": [[2067, "module-torch.ao.quantization.pt2e.export_utils"]], "torch.ao.quantization.pt2e.graph_utils": [[2067, "module-torch.ao.quantization.pt2e.graph_utils"]], "torch.ao.quantization.pt2e.port_metadata_pass": [[2067, "module-torch.ao.quantization.pt2e.port_metadata_pass"]], "torch.ao.quantization.pt2e.prepare": [[2067, "module-torch.ao.quantization.pt2e.prepare"]], "torch.ao.quantization.pt2e.qat_utils": [[2067, "module-torch.ao.quantization.pt2e.qat_utils"]], "torch.ao.quantization.pt2e.representation.rewrite": [[2067, "module-torch.ao.quantization.pt2e.representation.rewrite"]], "torch.ao.quantization.pt2e.utils": [[2067, "module-torch.ao.quantization.pt2e.utils"]], "torch.ao.quantization.qconfig": [[2067, "module-torch.ao.quantization.qconfig"]], "torch.ao.quantization.qconfig_mapping": [[2067, "module-torch.ao.quantization.qconfig_mapping"]], "torch.ao.quantization.quant_type": [[2067, "module-torch.ao.quantization.quant_type"]], "torch.ao.quantization.quantization_mappings": [[2067, "module-torch.ao.quantization.quantization_mappings"]], "torch.ao.quantization.quantize_fx": [[2067, "module-torch.ao.quantization.quantize_fx"]], "torch.ao.quantization.quantize_jit": [[2067, "module-torch.ao.quantization.quantize_jit"]], "torch.ao.quantization.quantize_pt2e": [[2067, "module-torch.ao.quantization.quantize_pt2e"]], "torch.ao.quantization.quantizer.composable_quantizer": [[2067, "module-torch.ao.quantization.quantizer.composable_quantizer"]], "torch.ao.quantization.quantizer.embedding_quantizer": [[2067, "module-torch.ao.quantization.quantizer.embedding_quantizer"]], "torch.ao.quantization.quantizer.quantizer": [[2067, "module-torch.ao.quantization.quantizer.quantizer"]], "torch.ao.quantization.quantizer.utils": [[2067, "module-torch.ao.quantization.quantizer.utils"]], "torch.ao.quantization.quantizer.x86_inductor_quantizer": [[2067, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer": [[2067, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer_utils": [[2067, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"]], "torch.ao.quantization.stubs": [[2067, "module-torch.ao.quantization.stubs"]], "torch.ao.quantization.utils": [[2067, "module-torch.ao.quantization.utils"]], "torch.nn.intrinsic.modules.fused": [[2067, "module-torch.nn.intrinsic.modules.fused"]], "torch.nn.intrinsic.qat.modules.conv_fused": [[2067, "module-torch.nn.intrinsic.qat.modules.conv_fused"]], "torch.nn.intrinsic.qat.modules.linear_fused": [[2067, "module-torch.nn.intrinsic.qat.modules.linear_fused"]], "torch.nn.intrinsic.qat.modules.linear_relu": [[2067, "module-torch.nn.intrinsic.qat.modules.linear_relu"]], "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2067, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.nn.intrinsic.quantized.modules.bn_relu": [[2067, "module-torch.nn.intrinsic.quantized.modules.bn_relu"]], "torch.nn.intrinsic.quantized.modules.conv_relu": [[2067, "module-torch.nn.intrinsic.quantized.modules.conv_relu"]], "torch.nn.intrinsic.quantized.modules.linear_relu": [[2067, "module-torch.nn.intrinsic.quantized.modules.linear_relu"]], "torch.nn.qat.dynamic.modules.linear": [[2067, "module-torch.nn.qat.dynamic.modules.linear"]], "torch.nn.qat.modules.conv": [[2067, "module-torch.nn.qat.modules.conv"]], "torch.nn.qat.modules.embedding_ops": [[2067, "module-torch.nn.qat.modules.embedding_ops"]], "torch.nn.qat.modules.linear": [[2067, "module-torch.nn.qat.modules.linear"]], "torch.nn.quantizable.modules.activation": [[2067, "module-torch.nn.quantizable.modules.activation"]], "torch.nn.quantizable.modules.rnn": [[2067, "module-torch.nn.quantizable.modules.rnn"]], "torch.nn.quantized.dynamic.modules.conv": [[2067, "module-torch.nn.quantized.dynamic.modules.conv"]], "torch.nn.quantized.dynamic.modules.linear": [[2067, "module-torch.nn.quantized.dynamic.modules.linear"]], "torch.nn.quantized.dynamic.modules.rnn": [[2067, "module-torch.nn.quantized.dynamic.modules.rnn"]], "torch.nn.quantized.functional": [[2067, "module-torch.nn.quantized.functional"]], "torch.nn.quantized.modules.activation": [[2067, "module-torch.nn.quantized.modules.activation"]], "torch.nn.quantized.modules.batchnorm": [[2067, "module-torch.nn.quantized.modules.batchnorm"]], "torch.nn.quantized.modules.conv": [[2067, "module-torch.nn.quantized.modules.conv"]], "torch.nn.quantized.modules.dropout": [[2067, "module-torch.nn.quantized.modules.dropout"]], "torch.nn.quantized.modules.embedding_ops": [[2067, "module-torch.nn.quantized.modules.embedding_ops"]], "torch.nn.quantized.modules.functional_modules": [[2067, "module-torch.nn.quantized.modules.functional_modules"]], "torch.nn.quantized.modules.linear": [[2067, "module-torch.nn.quantized.modules.linear"]], "torch.nn.quantized.modules.normalization": [[2067, "module-torch.nn.quantized.modules.normalization"]], "torch.nn.quantized.modules.rnn": [[2067, "module-torch.nn.quantized.modules.rnn"]], "torch.nn.quantized.modules.utils": [[2067, "module-torch.nn.quantized.modules.utils"]], "torch.quantization.fake_quantize": [[2067, "module-torch.quantization.fake_quantize"]], "torch.quantization.fuse_modules": [[2067, "module-torch.quantization.fuse_modules"]], "torch.quantization.fuser_method_mappings": [[2067, "module-torch.quantization.fuser_method_mappings"]], "torch.quantization.fx.convert": [[2067, "module-torch.quantization.fx.convert"]], "torch.quantization.fx.fuse": [[2067, "module-torch.quantization.fx.fuse"]], "torch.quantization.fx.fusion_patterns": [[2067, "module-torch.quantization.fx.fusion_patterns"]], "torch.quantization.fx.graph_module": [[2067, "module-torch.quantization.fx.graph_module"]], "torch.quantization.fx.match_utils": [[2067, "module-torch.quantization.fx.match_utils"]], "torch.quantization.fx.pattern_utils": [[2067, "module-torch.quantization.fx.pattern_utils"]], "torch.quantization.fx.prepare": [[2067, "module-torch.quantization.fx.prepare"]], "torch.quantization.fx.quantization_patterns": [[2067, "module-torch.quantization.fx.quantization_patterns"]], "torch.quantization.fx.quantization_types": [[2067, "module-torch.quantization.fx.quantization_types"]], "torch.quantization.fx.utils": [[2067, "module-torch.quantization.fx.utils"]], "torch.quantization.observer": [[2067, "module-torch.quantization.observer"]], "torch.quantization.qconfig": [[2067, "module-torch.quantization.qconfig"]], "torch.quantization.quant_type": [[2067, "module-torch.quantization.quant_type"]], "torch.quantization.quantization_mappings": [[2067, "module-torch.quantization.quantization_mappings"]], "torch.quantization.quantize": [[2067, "module-torch.quantization.quantize"]], "torch.quantization.quantize_fx": [[2067, "module-torch.quantization.quantize_fx"]], "torch.quantization.quantize_jit": [[2067, "module-torch.quantization.quantize_jit"]], "torch.quantization.stubs": [[2067, "module-torch.quantization.stubs"]], "torch.quantization.utils": [[2067, "module-torch.quantization.utils"]], "torch.ao.nn.intrinsic": [[2070, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[2070, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[2070, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[2070, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[2070, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2070, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2070, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[2070, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[2070, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2070, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[2070, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[2070, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[2070, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[2070, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[2070, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[2070, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[2070, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.generate_numeric_debug_handle": [[2070, "module-torch.ao.quantization.pt2e.generate_numeric_debug_handle"]], "torch.ao.quantization.pt2e.representation": [[2070, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[2070, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[2070, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[2070, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[2070, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[2070, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[2070, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[2070, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2070, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[2070, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[2070, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[2070, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[2070, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[2070, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[2070, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[2070, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[2070, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[2070, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[2070, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[2070, "module-torch.nn.quantized.modules"]], "torch.quantization": [[2070, "module-torch.quantization"]], "torch.quantization.fx": [[2070, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[2071, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[2071, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[2071, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[2071, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[2071, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[2071, "torch.random.set_rng_state"]], "torch.random": [[2071, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[2072, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[2072, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[2072, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[2072, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[2072, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[2072, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[2072, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[2072, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[2072, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2072, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2072, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[2072, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2072, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[2072, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[2072, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[2072, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2072, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[2072, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[2072, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2072, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[2072, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2072, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[2072, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[2072, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[2072, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2072, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2072, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2072, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[2072, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[2072, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[2072, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[2072, "module-torch.distributed.rpc"]], "torch.signal": [[2075, "module-torch.signal"]], "torch.signal.windows": [[2075, "module-torch.signal.windows"]], "size (class in torch)": [[2076, "torch.Size"]], "count() (torch.size method)": [[2076, "torch.Size.count"]], "index() (torch.size method)": [[2076, "torch.Size.index"]], "numel() (torch.size method)": [[2076, "torch.Size.numel"]], "torch.sparse": [[2077, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[2078, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[2078, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[2078, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[2078, "torch.special.digamma"]], "entr() (in module torch.special)": [[2078, "torch.special.entr"]], "erf() (in module torch.special)": [[2078, "torch.special.erf"]], "erfc() (in module torch.special)": [[2078, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[2078, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[2078, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[2078, "torch.special.exp2"]], "expit() (in module torch.special)": [[2078, "torch.special.expit"]], "expm1() (in module torch.special)": [[2078, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[2078, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[2078, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[2078, "torch.special.gammaln"]], "i0() (in module torch.special)": [[2078, "torch.special.i0"]], "i0e() (in module torch.special)": [[2078, "torch.special.i0e"]], "i1() (in module torch.special)": [[2078, "torch.special.i1"]], "i1e() (in module torch.special)": [[2078, "torch.special.i1e"]], "log1p() (in module torch.special)": [[2078, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[2078, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[2078, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[2078, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[2078, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[2078, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[2078, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[2078, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[2078, "torch.special.polygamma"]], "psi() (in module torch.special)": [[2078, "torch.special.psi"]], "round() (in module torch.special)": [[2078, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[2078, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[2078, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[2078, "torch.special.sinc"]], "softmax() (in module torch.special)": [[2078, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[2078, "torch.special.spherical_bessel_j0"]], "torch.special": [[2078, "module-torch.special"]], "xlog1py() (in module torch.special)": [[2078, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[2078, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[2078, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[2079, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[2079, "torch.BoolStorage"]], "bytestorage (class in torch)": [[2079, "torch.ByteStorage"]], "charstorage (class in torch)": [[2079, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[2079, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[2079, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[2079, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[2079, "torch.FloatStorage"]], "halfstorage (class in torch)": [[2079, "torch.HalfStorage"]], "intstorage (class in torch)": [[2079, "torch.IntStorage"]], "longstorage (class in torch)": [[2079, "torch.LongStorage"]], "qint32storage (class in torch)": [[2079, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[2079, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[2079, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[2079, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[2079, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[2079, "torch.ShortStorage"]], "typedstorage (class in torch)": [[2079, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[2079, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[2079, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[2079, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[2079, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[2079, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[2079, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[2079, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[2079, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[2079, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[2079, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[2079, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[2079, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[2079, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[2079, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[2079, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[2079, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[2079, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[2079, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[2079, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[2079, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[2079, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[2079, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[2079, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[2079, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[2079, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[2079, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[2079, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[2079, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[2079, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[2079, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[2079, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[2079, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[2079, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[2079, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.element_size"]], "filename (torch.typedstorage property)": [[2079, "torch.TypedStorage.filename"]], "filename (torch.untypedstorage property)": [[2079, "torch.UntypedStorage.filename"]], "fill_() (torch.typedstorage method)": [[2079, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[2079, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.float"]], "float8_e4m3fn() (torch.typedstorage method)": [[2079, "torch.TypedStorage.float8_e4m3fn"]], "float8_e4m3fn() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.float8_e4m3fn"]], "float8_e4m3fnuz() (torch.typedstorage method)": [[2079, "torch.TypedStorage.float8_e4m3fnuz"]], "float8_e4m3fnuz() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.float8_e4m3fnuz"]], "float8_e5m2() (torch.typedstorage method)": [[2079, "torch.TypedStorage.float8_e5m2"]], "float8_e5m2() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.float8_e5m2"]], "float8_e5m2fnuz() (torch.typedstorage method)": [[2079, "torch.TypedStorage.float8_e5m2fnuz"]], "float8_e5m2fnuz() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.float8_e5m2fnuz"]], "from_buffer() (torch.typedstorage class method)": [[2079, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[2079, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[2079, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[2079, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[2079, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[2079, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[2079, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[2079, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[2079, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[2079, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[2079, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[2079, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[2079, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[2079, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[2079, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[2079, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[2079, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[2079, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[2079, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[2079, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[2079, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.pin_memory"]], "resizable() (torch.typedstorage method)": [[2079, "torch.TypedStorage.resizable"]], "resizable() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.resizable"]], "resize_() (torch.typedstorage method)": [[2079, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[2079, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[2079, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[2079, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.size"]], "to() (torch.typedstorage method)": [[2079, "torch.TypedStorage.to"]], "to() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.to"]], "tolist() (torch.typedstorage method)": [[2079, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[2079, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[2079, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[2079, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[2080, "torch.device"]], "dtype (class in torch)": [[2080, "torch.dtype"]], "layout (class in torch)": [[2080, "torch.layout"]], "memory_format (class in torch)": [[2080, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[2082, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[2082, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[2083, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[2083, "torch.Tensor.T"]], "tensor (class in torch)": [[2083, "torch.Tensor"]], "mh (torch.tensor attribute)": [[2083, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[2083, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[2084, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[2084, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[2084, "torch.testing.make_tensor"]], "torch.testing": [[2084, "module-torch.testing"]], "symbool (class in torch)": [[2086, "torch.SymBool"]], "symfloat (class in torch)": [[2086, "torch.SymFloat"]], "symint (class in torch)": [[2086, "torch.SymInt"]], "tag (class in torch)": [[2086, "torch.Tag"]], "default_generator (torch.torch attribute)": [[2086, "torch.torch.default_generator"]], "is_integer() (torch.symfloat method)": [[2086, "torch.SymFloat.is_integer"]], "name (torch.tag property)": [[2086, "torch.Tag.name"]], "torch": [[2086, "module-torch"]], "torch.contrib": [[2086, "module-torch.contrib"]], "torch.functional": [[2086, "module-torch.functional"]], "torch.quasirandom": [[2086, "module-torch.quasirandom"]], "torch.return_types": [[2086, "module-torch.return_types"]], "torch.serialization": [[2086, "module-torch.serialization"]], "torch.signal.windows.windows": [[2086, "module-torch.signal.windows.windows"]], "torch.sparse.semi_structured": [[2086, "module-torch.sparse.semi_structured"]], "torch.storage": [[2086, "module-torch.storage"]], "torch.torch_version": [[2086, "module-torch.torch_version"]], "torch.types": [[2086, "module-torch.types"]], "torch.utils.backcompat": [[2086, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[2086, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[2086, "module-torch.utils.model_dump"]], "torch.utils.viz": [[2086, "module-torch.utils.viz"]], "torch.version": [[2086, "module-torch.version"]], "logger (class in torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[2087, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[2087, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2087, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[2087, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[2087, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[2087, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[2087, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[2087, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[2087, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2087, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[2087, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[2087, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[2088, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[2088, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[2088, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[2088, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[2088, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[2088, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2088, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[2088, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[2091, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[2109, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[2109, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[2109, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[2109, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[2109, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[2109, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[2109, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[2109, "torch.overrides.resolve_name"]], "torch.overrides": [[2109, "module-torch.overrides"]], "wrap_torch_function() (in module torch.overrides)": [[2109, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[2110, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[2110, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[2110, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[2112, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[2112, "torch.torch.iinfo"]], "torch.utils": [[2113, "module-torch.utils"]], "torch.utils.backend_registration": [[2113, "module-torch.utils.backend_registration"]], "torch.utils.benchmark.examples.blas_compare_setup": [[2113, "module-torch.utils.benchmark.examples.blas_compare_setup"]], "torch.utils.benchmark.examples.compare": [[2113, "module-torch.utils.benchmark.examples.compare"]], "torch.utils.benchmark.examples.fuzzer": [[2113, "module-torch.utils.benchmark.examples.fuzzer"]], "torch.utils.benchmark.examples.op_benchmark": [[2113, "module-torch.utils.benchmark.examples.op_benchmark"]], "torch.utils.benchmark.examples.simple_timeit": [[2113, "module-torch.utils.benchmark.examples.simple_timeit"]], "torch.utils.benchmark.examples.spectral_ops_fuzz_test": [[2113, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers.binary": [[2113, "module-torch.utils.benchmark.op_fuzzers.binary"]], "torch.utils.benchmark.op_fuzzers.sparse_binary": [[2113, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"]], "torch.utils.benchmark.op_fuzzers.sparse_unary": [[2113, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"]], "torch.utils.benchmark.op_fuzzers.spectral": [[2113, "module-torch.utils.benchmark.op_fuzzers.spectral"]], "torch.utils.benchmark.op_fuzzers.unary": [[2113, "module-torch.utils.benchmark.op_fuzzers.unary"]], "torch.utils.benchmark.utils.common": [[2113, "module-torch.utils.benchmark.utils.common"]], "torch.utils.benchmark.utils.compare": [[2113, "module-torch.utils.benchmark.utils.compare"]], "torch.utils.benchmark.utils.compile": [[2113, "module-torch.utils.benchmark.utils.compile"]], "torch.utils.benchmark.utils.cpp_jit": [[2113, "module-torch.utils.benchmark.utils.cpp_jit"]], "torch.utils.benchmark.utils.fuzzer": [[2113, "module-torch.utils.benchmark.utils.fuzzer"]], "torch.utils.benchmark.utils.sparse_fuzzer": [[2113, "module-torch.utils.benchmark.utils.sparse_fuzzer"]], "torch.utils.benchmark.utils.timer": [[2113, "module-torch.utils.benchmark.utils.timer"]], "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface": [[2113, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"]], "torch.utils.bundled_inputs": [[2113, "module-torch.utils.bundled_inputs"]], "torch.utils.checkpoint": [[2113, "module-torch.utils.checkpoint"]], "torch.utils.collect_env": [[2113, "module-torch.utils.collect_env"]], "torch.utils.cpp_backtrace": [[2113, "module-torch.utils.cpp_backtrace"]], "torch.utils.cpp_extension": [[2113, "module-torch.utils.cpp_extension"]], "torch.utils.data.backward_compatibility": [[2113, "module-torch.utils.data.backward_compatibility"]], "torch.utils.data.dataloader": [[2113, "module-torch.utils.data.dataloader"]], "torch.utils.data.datapipes.dataframe.dataframe_wrapper": [[2113, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"]], "torch.utils.data.datapipes.dataframe.dataframes": [[2113, "module-torch.utils.data.datapipes.dataframe.dataframes"]], "torch.utils.data.datapipes.dataframe.datapipes": [[2113, "module-torch.utils.data.datapipes.dataframe.datapipes"]], "torch.utils.data.datapipes.dataframe.structures": [[2113, "module-torch.utils.data.datapipes.dataframe.structures"]], "torch.utils.data.datapipes.datapipe": [[2113, "module-torch.utils.data.datapipes.datapipe"]], "torch.utils.data.datapipes.gen_pyi": [[2113, "module-torch.utils.data.datapipes.gen_pyi"]], "torch.utils.data.datapipes.iter.callable": [[2113, "module-torch.utils.data.datapipes.iter.callable"]], "torch.utils.data.datapipes.iter.combinatorics": [[2113, "module-torch.utils.data.datapipes.iter.combinatorics"]], "torch.utils.data.datapipes.iter.combining": [[2113, "module-torch.utils.data.datapipes.iter.combining"]], "torch.utils.data.datapipes.iter.filelister": [[2113, "module-torch.utils.data.datapipes.iter.filelister"]], "torch.utils.data.datapipes.iter.fileopener": [[2113, "module-torch.utils.data.datapipes.iter.fileopener"]], "torch.utils.data.datapipes.iter.grouping": [[2113, "module-torch.utils.data.datapipes.iter.grouping"]], "torch.utils.data.datapipes.iter.routeddecoder": [[2113, "module-torch.utils.data.datapipes.iter.routeddecoder"]], "torch.utils.data.datapipes.iter.selecting": [[2113, "module-torch.utils.data.datapipes.iter.selecting"]], "torch.utils.data.datapipes.iter.sharding": [[2113, "module-torch.utils.data.datapipes.iter.sharding"]], "torch.utils.data.datapipes.iter.streamreader": [[2113, "module-torch.utils.data.datapipes.iter.streamreader"]], "torch.utils.data.datapipes.iter.utils": [[2113, "module-torch.utils.data.datapipes.iter.utils"]], "torch.utils.data.datapipes.map.callable": [[2113, "module-torch.utils.data.datapipes.map.callable"]], "torch.utils.data.datapipes.map.combinatorics": [[2113, "module-torch.utils.data.datapipes.map.combinatorics"]], "torch.utils.data.datapipes.map.combining": [[2113, "module-torch.utils.data.datapipes.map.combining"]], "torch.utils.data.datapipes.map.grouping": [[2113, "module-torch.utils.data.datapipes.map.grouping"]], "torch.utils.data.datapipes.map.utils": [[2113, "module-torch.utils.data.datapipes.map.utils"]], "torch.utils.data.datapipes.utils.common": [[2113, "module-torch.utils.data.datapipes.utils.common"]], "torch.utils.data.datapipes.utils.decoder": [[2113, "module-torch.utils.data.datapipes.utils.decoder"]], "torch.utils.data.datapipes.utils.snapshot": [[2113, "module-torch.utils.data.datapipes.utils.snapshot"]], "torch.utils.data.dataset": [[2113, "module-torch.utils.data.dataset"]], "torch.utils.data.distributed": [[2113, "module-torch.utils.data.distributed"]], "torch.utils.data.graph": [[2113, "module-torch.utils.data.graph"]], "torch.utils.data.graph_settings": [[2113, "module-torch.utils.data.graph_settings"]], "torch.utils.data.sampler": [[2113, "module-torch.utils.data.sampler"]], "torch.utils.dlpack": [[2113, "module-torch.utils.dlpack"]], "torch.utils.file_baton": [[2113, "module-torch.utils.file_baton"]], "torch.utils.flop_counter": [[2113, "module-torch.utils.flop_counter"]], "torch.utils.hipify.constants": [[2113, "module-torch.utils.hipify.constants"]], "torch.utils.hipify.cuda_to_hip_mappings": [[2113, "module-torch.utils.hipify.cuda_to_hip_mappings"]], "torch.utils.hipify.hipify_python": [[2113, "module-torch.utils.hipify.hipify_python"]], "torch.utils.hipify.version": [[2113, "module-torch.utils.hipify.version"]], "torch.utils.hooks": [[2113, "module-torch.utils.hooks"]], "torch.utils.jit.log_extract": [[2113, "module-torch.utils.jit.log_extract"]], "torch.utils.mkldnn": [[2113, "module-torch.utils.mkldnn"]], "torch.utils.mobile_optimizer": [[2113, "module-torch.utils.mobile_optimizer"]], "torch.utils.show_pickle": [[2113, "module-torch.utils.show_pickle"]], "torch.utils.tensorboard.summary": [[2113, "module-torch.utils.tensorboard.summary"]], "torch.utils.tensorboard.writer": [[2113, "module-torch.utils.tensorboard.writer"]], "torch.utils.throughput_benchmark": [[2113, "module-torch.utils.throughput_benchmark"]], "torch.utils.weak": [[2113, "module-torch.utils.weak"]], "torch.xpu": [[2114, "module-torch.xpu"]], "torch.xpu.random": [[2114, "module-torch.xpu.random"]], "torch.xpu.streams": [[2114, "module-torch.xpu.streams"]]}})