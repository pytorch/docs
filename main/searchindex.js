Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "cond", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cuda_environment_variables", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "debugging_environment_variables", "deploy", "deterministic", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/subprocess_handler", "elastic/timer", "elastic/train_script", "export", "export.ir_spec", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "future_mod", "futures", "fx", "fx.experimental", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/python.object-model", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.dynamic-value", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/exportdb/torch.mutation", "generated/exportdb/torch.operator", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dim_order", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.module_load", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.register_post_accumulate_grad_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.pt2e.export_utils.model_is_exported", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.UnpackedDualTensor", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.enter_dual_level", "generated/torch.autograd.forward_ad.exit_dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.BackwardCFunction", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.function.InplaceFunction", "generated/torch.autograd.function.NestedIOFunction", "generated/torch.autograd.function.once_differentiable", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.grad_mode.inference_mode", "generated/torch.autograd.grad_mode.set_grad_enabled", "generated/torch.autograd.grad_mode.set_multithreading_enabled", "generated/torch.autograd.gradcheck.GradcheckError", "generated/torch.autograd.gradcheck.gradcheck", "generated/torch.autograd.gradcheck.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.graph.increment_version", "generated/torch.autograd.profiler.EnforceUnique", "generated/torch.autograd.profiler.KinetoStepTracker", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.parse_nvprof_trace", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.profiler.record_function", "generated/torch.autograd.profiler_util.Interval", "generated/torch.autograd.profiler_util.Kernel", "generated/torch.autograd.profiler_util.MemRecordsAcc", "generated/torch.autograd.profiler_util.StringTable", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.cudagraph_mark_step_begin", "generated/torch.compiler.disable", "generated/torch.compiler.is_compiling", "generated/torch.compiler.is_dynamo_compiling", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.cond", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_device", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.set_device", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_file", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.fx.experimental.symbolic_shapes.CallMethodKey", "generated/torch.fx.experimental.symbolic_shapes.ConvertIntKey", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnvSettings", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "generated/torch.fx.experimental.symbolic_shapes.check_consistent", "generated/torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings", "generated/torch.fx.experimental.symbolic_shapes.constrain_range", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify", "generated/torch.fx.experimental.symbolic_shapes.definitely_false", "generated/torch.fx.experimental.symbolic_shapes.definitely_true", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols", "generated/torch.fx.experimental.symbolic_shapes.hint_int", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int", "generated/torch.fx.experimental.symbolic_shapes.lru_cache", "generated/torch.fx.experimental.symbolic_shapes.parallel_and", "generated/torch.fx.experimental.symbolic_shapes.parallel_or", "generated/torch.fx.experimental.symbolic_shapes.rebind_unbacked", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true", "generated/torch.fx.experimental.symbolic_shapes.sym_eq", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_device", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_device_module", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.interface", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.device_count", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mtia.DeferredMtiaCallError", "generated/torch.mtia.Event", "generated/torch.mtia.Stream", "generated/torch.mtia.StreamContext", "generated/torch.mtia.current_device", "generated/torch.mtia.current_stream", "generated/torch.mtia.default_stream", "generated/torch.mtia.device", "generated/torch.mtia.device_count", "generated/torch.mtia.init", "generated/torch.mtia.is_available", "generated/torch.mtia.is_initialized", "generated/torch.mtia.set_stream", "generated/torch.mtia.stream", "generated/torch.mtia.synchronize", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.CircularPad1d", "generated/torch.nn.CircularPad2d", "generated/torch.nn.CircularPad3d", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LPPool3d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RMSNorm", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.attention.SDPBackend", "generated/torch.nn.attention.bias.CausalBias", "generated/torch.nn.attention.bias.CausalVariant", "generated/torch.nn.attention.bias.causal_lower_right", "generated/torch.nn.attention.bias.causal_upper_left", "generated/torch.nn.attention.sdpa_kernel", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.lp_pool3d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rms_norm", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.modules.normalization.RMSNorm", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.convert_conv2d_weight_memory_format", "generated/torch.nn.utils.convert_conv3d_weight_memory_format", "generated/torch.nn.utils.fuse_conv_bn_eval", "generated/torch.nn.utils.fuse_conv_bn_weights", "generated/torch.nn.utils.fuse_linear_bn_eval", "generated/torch.nn.utils.fuse_linear_bn_weights", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrizations.weight_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.as_sparse_gradcheck", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_ite", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unravel_index", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.utils.swap_tensors", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.xpu.Event", "generated/torch.xpu.Stream", "generated/torch.xpu.StreamContext", "generated/torch.xpu.current_device", "generated/torch.xpu.current_stream", "generated/torch.xpu.device", "generated/torch.xpu.device_count", "generated/torch.xpu.device_of", "generated/torch.xpu.empty_cache", "generated/torch.xpu.get_device_capability", "generated/torch.xpu.get_device_name", "generated/torch.xpu.get_device_properties", "generated/torch.xpu.get_rng_state", "generated/torch.xpu.get_rng_state_all", "generated/torch.xpu.init", "generated/torch.xpu.initial_seed", "generated/torch.xpu.is_available", "generated/torch.xpu.is_initialized", "generated/torch.xpu.manual_seed", "generated/torch.xpu.manual_seed_all", "generated/torch.xpu.seed", "generated/torch.xpu.seed_all", "generated/torch.xpu.set_device", "generated/torch.xpu.set_rng_state", "generated/torch.xpu.set_rng_state_all", "generated/torch.xpu.set_stream", "generated/torch.xpu.stream", "generated/torch.xpu.synchronize", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "meta", "miscellaneous_environment_variables", "mobile_optimizer", "model_zoo", "monitor", "mps", "mtia", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.attention", "nn.attention.bias", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/fsdp", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_dynamo", "onnx_dynamo_onnxruntime_backend", "onnx_torchscript", "onnx_torchscript_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "size", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "threading_environment_variables", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_aot_inductor", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_dynamic_shapes", "torch.compiler_dynamo_deepdive", "torch.compiler_dynamo_overview", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "torch_cuda_memory", "torch_environment_variables", "type_info", "utils", "xpu"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "cond.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cuda_environment_variables.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "debugging_environment_variables.rst", "deploy.rst", "deterministic.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/subprocess_handler.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "export.ir_spec.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "future_mod.rst", "futures.rst", "fx.rst", "fx.experimental.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/python.object-model.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.dynamic-value.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/exportdb/torch.mutation.rst", "generated/exportdb/torch.operator.rst", "generated/onnx_dynamo_diagnostics_rules/FXE0007:fx-graph-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_dynamo_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_dynamo_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_dynamo_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_dynamo_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_dynamo_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_dynamo_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dim_order.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.module_load.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.register_post_accumulate_grad_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.pt2e.export_utils.model_is_exported.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.UnpackedDualTensor.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.enter_dual_level.rst", "generated/torch.autograd.forward_ad.exit_dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.BackwardCFunction.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.function.InplaceFunction.rst", "generated/torch.autograd.function.NestedIOFunction.rst", "generated/torch.autograd.function.once_differentiable.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.grad_mode.inference_mode.rst", "generated/torch.autograd.grad_mode.set_grad_enabled.rst", "generated/torch.autograd.grad_mode.set_multithreading_enabled.rst", "generated/torch.autograd.gradcheck.GradcheckError.rst", "generated/torch.autograd.gradcheck.gradcheck.rst", "generated/torch.autograd.gradcheck.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.graph.increment_version.rst", "generated/torch.autograd.profiler.EnforceUnique.rst", "generated/torch.autograd.profiler.KinetoStepTracker.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.parse_nvprof_trace.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.profiler.record_function.rst", "generated/torch.autograd.profiler_util.Interval.rst", "generated/torch.autograd.profiler_util.Kernel.rst", "generated/torch.autograd.profiler_util.MemRecordsAcc.rst", "generated/torch.autograd.profiler_util.StringTable.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.cudagraph_mark_step_begin.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.is_compiling.rst", "generated/torch.compiler.is_dynamo_compiling.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.cond.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_device.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.set_device.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_file.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.fx.experimental.symbolic_shapes.CallMethodKey.rst", "generated/torch.fx.experimental.symbolic_shapes.ConvertIntKey.rst", "generated/torch.fx.experimental.symbolic_shapes.DimConstraints.rst", "generated/torch.fx.experimental.symbolic_shapes.DimDynamic.rst", "generated/torch.fx.experimental.symbolic_shapes.EqualityConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnv.rst", "generated/torch.fx.experimental.symbolic_shapes.ShapeEnvSettings.rst", "generated/torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.rst", "generated/torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.SymbolicContext.rst", "generated/torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr.rst", "generated/torch.fx.experimental.symbolic_shapes.check_consistent.rst", "generated/torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_range.rst", "generated/torch.fx.experimental.symbolic_shapes.constrain_unify.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_false.rst", "generated/torch.fx.experimental.symbolic_shapes.definitely_true.rst", "generated/torch.fx.experimental.symbolic_shapes.guard_size_oblivious.rst", "generated/torch.fx.experimental.symbolic_shapes.has_free_symbols.rst", "generated/torch.fx.experimental.symbolic_shapes.hint_int.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_bool.rst", "generated/torch.fx.experimental.symbolic_shapes.is_concrete_int.rst", "generated/torch.fx.experimental.symbolic_shapes.lru_cache.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_and.rst", "generated/torch.fx.experimental.symbolic_shapes.parallel_or.rst", "generated/torch.fx.experimental.symbolic_shapes.rebind_unbacked.rst", "generated/torch.fx.experimental.symbolic_shapes.statically_known_true.rst", "generated/torch.fx.experimental.symbolic_shapes.sym_eq.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_device.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_device_module.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.interface.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.device_count.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mtia.DeferredMtiaCallError.rst", "generated/torch.mtia.Event.rst", "generated/torch.mtia.Stream.rst", "generated/torch.mtia.StreamContext.rst", "generated/torch.mtia.current_device.rst", "generated/torch.mtia.current_stream.rst", "generated/torch.mtia.default_stream.rst", "generated/torch.mtia.device.rst", "generated/torch.mtia.device_count.rst", "generated/torch.mtia.init.rst", "generated/torch.mtia.is_available.rst", "generated/torch.mtia.is_initialized.rst", "generated/torch.mtia.set_stream.rst", "generated/torch.mtia.stream.rst", "generated/torch.mtia.synchronize.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.CircularPad1d.rst", "generated/torch.nn.CircularPad2d.rst", "generated/torch.nn.CircularPad3d.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LPPool3d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RMSNorm.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.attention.SDPBackend.rst", "generated/torch.nn.attention.bias.CausalBias.rst", "generated/torch.nn.attention.bias.CausalVariant.rst", "generated/torch.nn.attention.bias.causal_lower_right.rst", "generated/torch.nn.attention.bias.causal_upper_left.rst", "generated/torch.nn.attention.sdpa_kernel.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.lp_pool3d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rms_norm.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.modules.normalization.RMSNorm.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.convert_conv2d_weight_memory_format.rst", "generated/torch.nn.utils.convert_conv3d_weight_memory_format.rst", "generated/torch.nn.utils.fuse_conv_bn_eval.rst", "generated/torch.nn.utils.fuse_conv_bn_weights.rst", "generated/torch.nn.utils.fuse_linear_bn_eval.rst", "generated/torch.nn.utils.fuse_linear_bn_weights.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrizations.weight_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.as_sparse_gradcheck.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_ite.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unravel_index.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.utils.swap_tensors.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.xpu.Event.rst", "generated/torch.xpu.Stream.rst", "generated/torch.xpu.StreamContext.rst", "generated/torch.xpu.current_device.rst", "generated/torch.xpu.current_stream.rst", "generated/torch.xpu.device.rst", "generated/torch.xpu.device_count.rst", "generated/torch.xpu.device_of.rst", "generated/torch.xpu.empty_cache.rst", "generated/torch.xpu.get_device_capability.rst", "generated/torch.xpu.get_device_name.rst", "generated/torch.xpu.get_device_properties.rst", "generated/torch.xpu.get_rng_state.rst", "generated/torch.xpu.get_rng_state_all.rst", "generated/torch.xpu.init.rst", "generated/torch.xpu.initial_seed.rst", "generated/torch.xpu.is_available.rst", "generated/torch.xpu.is_initialized.rst", "generated/torch.xpu.manual_seed.rst", "generated/torch.xpu.manual_seed_all.rst", "generated/torch.xpu.seed.rst", "generated/torch.xpu.seed_all.rst", "generated/torch.xpu.set_device.rst", "generated/torch.xpu.set_rng_state.rst", "generated/torch.xpu.set_rng_state_all.rst", "generated/torch.xpu.set_stream.rst", "generated/torch.xpu.stream.rst", "generated/torch.xpu.synchronize.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "meta.rst", "miscellaneous_environment_variables.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "mtia.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.attention.rst", "nn.attention.bias.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/fsdp.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_dynamo.rst", "onnx_dynamo_onnxruntime_backend.rst", "onnx_torchscript.rst", "onnx_torchscript_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "size.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "threading_environment_variables.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_aot_inductor.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_dynamo_deepdive.rst", "torch.compiler_dynamo_overview.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "torch_cuda_memory.rst", "torch_environment_variables.rst", "type_info.rst", "utils.rst", "xpu.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "Control Flow - Cond", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "CUDA Environment Variables", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "Debugging Environment Variables", "torch::deploy has been moved to pytorch/multipy", "torch.utils.deterministic", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Subprocess Handling", "Expiration Timers", "Train script", "torch.export", "torch.export IR Specification", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.__future__", "torch.futures", "torch.fx", "torch.fx.experimental", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "python.object-model", "torch.cond", "torch.dynamic-shape", "torch.dynamic-value", "torch.escape-hatch", "torch.map", "torch.mutation", "torch.operator", "FXE0007:fx-graph-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dim_order", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.module_load", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.register_post_accumulate_grad_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "model_is_exported", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "UnpackedDualTensor", "dual_level", "torch.autograd.forward_ad.enter_dual_level", "torch.autograd.forward_ad.exit_dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "BackwardCFunction", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "InplaceFunction", "NestedIOFunction", "torch.autograd.function.once_differentiable", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "inference_mode", "set_grad_enabled", "set_multithreading_enabled", "torch.autograd.gradcheck.GradcheckError", "torch.autograd.gradcheck.gradcheck", "torch.autograd.gradcheck.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.graph.increment_version", "EnforceUnique", "KinetoStepTracker", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.parse_nvprof_trace", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "record_function", "Interval", "Kernel", "MemRecordsAcc", "StringTable", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.cudagraph_mark_step_begin", "torch.compiler.disable", "torch.compiler.is_compiling", "torch.compiler.is_dynamo_compiling", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.cond", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_device", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.set_device", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_file", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "CallMethodKey", "ConvertIntKey", "DimConstraints", "DimDynamic", "EqualityConstraint", "RelaxedUnspecConstraint", "ShapeEnv", "ShapeEnvSettings", "StatefulSymbolicContext", "StatelessSymbolicContext", "StrictMinMaxConstraint", "SubclassSymbolicContext", "SymbolicContext", "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr", "torch.fx.experimental.symbolic_shapes.check_consistent", "torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings", "torch.fx.experimental.symbolic_shapes.constrain_range", "torch.fx.experimental.symbolic_shapes.constrain_unify", "torch.fx.experimental.symbolic_shapes.definitely_false", "torch.fx.experimental.symbolic_shapes.definitely_true", "torch.fx.experimental.symbolic_shapes.guard_size_oblivious", "torch.fx.experimental.symbolic_shapes.has_free_symbols", "torch.fx.experimental.symbolic_shapes.hint_int", "torch.fx.experimental.symbolic_shapes.is_concrete_bool", "torch.fx.experimental.symbolic_shapes.is_concrete_int", "torch.fx.experimental.symbolic_shapes.lru_cache", "torch.fx.experimental.symbolic_shapes.parallel_and", "torch.fx.experimental.symbolic_shapes.parallel_or", "torch.fx.experimental.symbolic_shapes.rebind_unbacked", "torch.fx.experimental.symbolic_shapes.statically_known_true", "torch.fx.experimental.symbolic_shapes.sym_eq", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_device", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_device_module", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.interface", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.device_count", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mtia.DeferredMtiaCallError", "Event", "Stream", "StreamContext", "torch.mtia.current_device", "torch.mtia.current_stream", "torch.mtia.default_stream", "device", "torch.mtia.device_count", "torch.mtia.init", "torch.mtia.is_available", "torch.mtia.is_initialized", "torch.mtia.set_stream", "torch.mtia.stream", "torch.mtia.synchronize", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "CircularPad1d", "CircularPad2d", "CircularPad3d", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LPPool3d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RMSNorm", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "SDPBackend", "torch.nn.attention.bias.CausalBias", "CausalVariant", "torch.nn.attention.bias.causal_lower_right", "torch.nn.attention.bias.causal_upper_left", "torch.nn.attention.sdpa_kernel", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.lp_pool3d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rms_norm", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "RMSNorm", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.convert_conv2d_weight_memory_format", "torch.nn.utils.convert_conv3d_weight_memory_format", "torch.nn.utils.fuse_conv_bn_eval", "torch.nn.utils.fuse_conv_bn_weights", "torch.nn.utils.fuse_linear_bn_eval", "torch.nn.utils.fuse_linear_bn_weights", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "torch.nn.utils.parametrizations.weight_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "torch.sparse.as_sparse_gradcheck", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_ite", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unravel_index", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.utils.swap_tensors", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "Event", "Stream", "StreamContext", "torch.xpu.current_device", "torch.xpu.current_stream", "device", "torch.xpu.device_count", "device_of", "torch.xpu.empty_cache", "torch.xpu.get_device_capability", "torch.xpu.get_device_name", "torch.xpu.get_device_properties", "torch.xpu.get_rng_state", "torch.xpu.get_rng_state_all", "torch.xpu.init", "torch.xpu.initial_seed", "torch.xpu.is_available", "torch.xpu.is_initialized", "torch.xpu.manual_seed", "torch.xpu.manual_seed_all", "torch.xpu.seed", "torch.xpu.seed_all", "torch.xpu.set_device", "torch.xpu.set_rng_state", "torch.xpu.set_rng_state_all", "torch.xpu.set_stream", "torch.xpu.stream", "torch.xpu.synchronize", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "Meta device", "Miscellaneous Environment Variables", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "torch.mtia", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.attention", "torch.nn.attention.bias", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "FSDP Notes", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "TorchDynamo-based ONNX Exporter", "ONNX Backend for TorchDynamo", "TorchScript-based ONNX Exporter", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.Size", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "Threading Environment Variables", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "Dynamic shapes", "Dynamo Deep-Dive", "TorchDynamo Overview", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Understanding CUDA Memory Usage", "Torch Environment Variables", "Type Info", "torch.utils", "torch.xpu"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 14, 15, 22, 23, 27, 28, 29, 31, 32, 33, 35, 37, 42, 44, 45, 47, 48, 49, 50, 52, 56, 60, 61, 62, 63, 73, 74, 149, 485, 602, 679, 688, 734, 737, 738, 739, 744, 745, 747, 755, 756, 759, 763, 787, 788, 798, 799, 813, 823, 841, 858, 893, 909, 911, 912, 913, 928, 939, 951, 956, 959, 978, 994, 1015, 1061, 1105, 1125, 1162, 1174, 1191, 1219, 1227, 1228, 1262, 1265, 1272, 1273, 1277, 1279, 1281, 1296, 1313, 1338, 1370, 1449, 1450, 1451, 1454, 1470, 1471, 1479, 1484, 1489, 1490, 1515, 1516, 1517, 1519, 1525, 1526, 1529, 1535, 1537, 1548, 1563, 1564, 1565, 1566, 1567, 1597, 1598, 1677, 1696, 1709, 1716, 1717, 1731, 1751, 1759, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1801, 1804, 1809, 1845, 1855, 1902, 1903, 1904, 1905, 1906, 1907, 1916, 1946, 1948, 1958, 1969, 2004, 2006, 2008, 2009, 2013, 2015, 2016, 2019, 2021, 2024, 2025, 2026, 2027, 2037, 2038, 2039, 2040, 2043, 2046, 2047, 2049, 2054, 2056, 2058, 2059, 2060, 2062, 2063, 2065, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2094, 2096, 2097, 2101, 2102, 2103, 2105, 2107], "conveni": [0, 3, 7, 14, 27, 41, 44, 45, 46, 52, 58, 1174, 1181, 1323, 1699, 1863, 1958, 1960, 1969, 2004, 2008, 2017, 2033, 2034, 2037, 2039, 2045, 2046, 2059, 2066, 2088, 2090, 2091, 2092, 2097], "method": [0, 3, 7, 9, 14, 15, 18, 22, 27, 28, 29, 31, 33, 34, 35, 36, 42, 44, 49, 52, 59, 60, 61, 63, 65, 71, 72, 79, 87, 220, 221, 322, 414, 485, 486, 487, 496, 497, 498, 519, 613, 792, 796, 798, 814, 815, 816, 837, 841, 854, 874, 875, 876, 892, 893, 900, 901, 902, 903, 904, 905, 906, 924, 925, 939, 1041, 1156, 1175, 1219, 1263, 1265, 1266, 1268, 1269, 1270, 1276, 1277, 1281, 1282, 1283, 1311, 1329, 1330, 1337, 1338, 1412, 1415, 1423, 1431, 1433, 1434, 1460, 1461, 1476, 1519, 1520, 1521, 1525, 1529, 1530, 1536, 1538, 1548, 1625, 1699, 1709, 1713, 1724, 1726, 1729, 1731, 1733, 1736, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1747, 1753, 1758, 1774, 1775, 1776, 1778, 1788, 1820, 1901, 1916, 1920, 1958, 2004, 2005, 2006, 2009, 2010, 2013, 2017, 2019, 2021, 2024, 2025, 2026, 2032, 2033, 2034, 2037, 2039, 2040, 2041, 2043, 2046, 2048, 2051, 2054, 2058, 2059, 2062, 2064, 2067, 2069, 2074, 2075, 2077, 2078, 2081, 2084, 2089, 2091, 2092, 2094, 2101, 2103, 2104], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 14, 15, 22, 23, 27, 31, 32, 33, 35, 37, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 61, 85, 152, 222, 253, 399, 401, 485, 679, 692, 694, 695, 698, 734, 757, 759, 780, 819, 820, 832, 877, 895, 899, 908, 910, 931, 941, 950, 956, 963, 964, 965, 972, 990, 994, 1008, 1010, 1019, 1021, 1084, 1085, 1088, 1092, 1110, 1121, 1122, 1124, 1127, 1128, 1130, 1131, 1133, 1134, 1135, 1137, 1138, 1140, 1142, 1167, 1168, 1169, 1173, 1174, 1180, 1208, 1222, 1223, 1224, 1225, 1254, 1255, 1257, 1258, 1261, 1262, 1263, 1266, 1279, 1285, 1286, 1287, 1290, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1337, 1338, 1343, 1346, 1353, 1354, 1355, 1356, 1360, 1363, 1365, 1366, 1367, 1368, 1371, 1405, 1410, 1411, 1413, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1596, 1598, 1608, 1609, 1616, 1621, 1623, 1624, 1642, 1643, 1661, 1663, 1664, 1667, 1668, 1670, 1677, 1680, 1708, 1709, 1711, 1712, 1716, 1717, 1723, 1751, 1752, 1753, 1754, 1763, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1793, 1794, 1795, 1807, 1817, 1819, 1820, 1840, 1841, 1876, 1882, 1883, 1888, 1892, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1914, 1915, 1916, 1919, 1920, 1935, 1944, 1945, 1946, 1947, 1948, 1953, 1954, 1964, 1965, 1966, 1967, 1968, 1969, 1975, 2006, 2007, 2009, 2010, 2015, 2016, 2017, 2020, 2024, 2027, 2032, 2033, 2034, 2035, 2037, 2039, 2040, 2041, 2042, 2043, 2046, 2048, 2049, 2050, 2051, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2065, 2067, 2069, 2072, 2073, 2075, 2077, 2083, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2098, 2101, 2103, 2104, 2105], "some": [0, 1, 3, 7, 8, 9, 14, 21, 22, 23, 27, 29, 32, 33, 35, 37, 45, 47, 49, 50, 52, 55, 57, 58, 60, 61, 84, 86, 476, 485, 495, 566, 688, 747, 915, 935, 972, 1005, 1039, 1057, 1061, 1064, 1105, 1126, 1128, 1136, 1137, 1138, 1153, 1163, 1174, 1179, 1181, 1193, 1194, 1262, 1263, 1265, 1266, 1276, 1279, 1281, 1311, 1329, 1335, 1360, 1367, 1370, 1423, 1427, 1431, 1432, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1478, 1481, 1482, 1483, 1484, 1485, 1489, 1510, 1511, 1519, 1522, 1523, 1524, 1526, 1533, 1535, 1536, 1551, 1552, 1568, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1637, 1642, 1661, 1664, 1669, 1677, 1699, 1709, 1710, 1711, 1712, 1723, 1757, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1795, 1801, 1819, 1839, 1863, 1869, 1883, 1920, 1960, 1969, 2004, 2006, 2007, 2008, 2009, 2010, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2024, 2025, 2026, 2033, 2034, 2037, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2056, 2058, 2059, 2061, 2062, 2063, 2065, 2067, 2068, 2069, 2072, 2077, 2084, 2090, 2091, 2092, 2093, 2095, 2096, 2099, 2100, 2101, 2102, 2103], "oper": [0, 2, 4, 5, 7, 8, 11, 12, 15, 18, 22, 26, 29, 32, 33, 34, 41, 42, 44, 45, 50, 53, 58, 60, 61, 62, 63, 78, 79, 81, 82, 83, 84, 85, 253, 312, 320, 334, 351, 401, 444, 445, 446, 447, 448, 485, 487, 492, 495, 498, 512, 514, 516, 588, 679, 685, 688, 740, 741, 742, 746, 747, 756, 757, 767, 768, 778, 784, 791, 792, 794, 795, 798, 822, 825, 859, 861, 862, 865, 889, 891, 900, 901, 903, 905, 906, 915, 926, 940, 941, 943, 945, 948, 950, 952, 954, 959, 962, 969, 972, 982, 986, 988, 1008, 1010, 1038, 1047, 1079, 1084, 1085, 1086, 1087, 1100, 1105, 1106, 1107, 1108, 1118, 1123, 1141, 1153, 1156, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1174, 1177, 1213, 1217, 1223, 1224, 1265, 1276, 1277, 1281, 1282, 1285, 1295, 1308, 1318, 1321, 1322, 1335, 1336, 1345, 1352, 1360, 1365, 1370, 1381, 1382, 1410, 1413, 1427, 1432, 1437, 1438, 1439, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1473, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1485, 1491, 1505, 1510, 1515, 1516, 1517, 1519, 1532, 1534, 1538, 1539, 1540, 1547, 1562, 1563, 1565, 1567, 1571, 1593, 1594, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1610, 1611, 1612, 1613, 1617, 1618, 1620, 1621, 1625, 1629, 1636, 1642, 1644, 1651, 1652, 1662, 1664, 1668, 1677, 1683, 1684, 1695, 1696, 1697, 1698, 1708, 1709, 1711, 1712, 1753, 1759, 1764, 1768, 1769, 1787, 1793, 1803, 1807, 1816, 1817, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1839, 1845, 1862, 1863, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1894, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1919, 1935, 1953, 1957, 1958, 1960, 1969, 1972, 2002, 2003, 2005, 2006, 2010, 2013, 2017, 2033, 2035, 2036, 2037, 2038, 2040, 2041, 2046, 2047, 2048, 2049, 2050, 2053, 2054, 2058, 2061, 2063, 2065, 2066, 2067, 2068, 2071, 2073, 2075, 2076, 2079, 2088, 2090, 2091, 2092, 2094, 2095, 2096, 2097, 2098, 2102, 2103], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 20, 22, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 47, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 71, 72, 73, 74, 81, 82, 83, 85, 87, 96, 118, 149, 153, 172, 190, 207, 318, 320, 334, 341, 342, 405, 414, 434, 447, 457, 485, 486, 487, 495, 498, 512, 516, 519, 543, 556, 582, 583, 584, 586, 587, 616, 679, 685, 688, 711, 712, 713, 714, 715, 716, 719, 728, 729, 730, 731, 732, 734, 747, 756, 759, 767, 768, 771, 772, 773, 778, 780, 784, 785, 786, 789, 792, 793, 794, 795, 798, 801, 806, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 830, 831, 832, 833, 836, 854, 858, 859, 861, 862, 865, 878, 879, 880, 889, 890, 891, 893, 895, 896, 897, 898, 899, 900, 902, 903, 905, 906, 908, 909, 910, 911, 914, 915, 916, 917, 919, 920, 924, 925, 928, 932, 935, 940, 941, 942, 950, 952, 953, 960, 962, 972, 975, 980, 982, 986, 987, 990, 992, 1005, 1007, 1008, 1010, 1012, 1013, 1015, 1018, 1028, 1029, 1032, 1033, 1039, 1043, 1047, 1049, 1050, 1051, 1053, 1055, 1056, 1061, 1062, 1072, 1074, 1075, 1081, 1086, 1087, 1088, 1097, 1105, 1106, 1107, 1108, 1118, 1119, 1120, 1123, 1125, 1133, 1135, 1139, 1141, 1148, 1150, 1153, 1157, 1160, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1177, 1180, 1181, 1182, 1187, 1191, 1194, 1195, 1197, 1205, 1209, 1210, 1216, 1217, 1219, 1223, 1224, 1225, 1226, 1240, 1252, 1262, 1263, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1285, 1287, 1289, 1297, 1301, 1302, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1318, 1319, 1320, 1322, 1323, 1329, 1330, 1331, 1335, 1336, 1337, 1338, 1343, 1346, 1352, 1355, 1356, 1359, 1360, 1365, 1366, 1367, 1370, 1377, 1378, 1405, 1410, 1412, 1413, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1478, 1479, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1505, 1506, 1507, 1512, 1513, 1514, 1515, 1516, 1519, 1521, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1553, 1556, 1559, 1567, 1568, 1569, 1570, 1572, 1575, 1576, 1577, 1578, 1579, 1580, 1583, 1590, 1592, 1593, 1594, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1620, 1621, 1625, 1627, 1634, 1636, 1637, 1644, 1650, 1651, 1652, 1662, 1664, 1670, 1677, 1681, 1683, 1684, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1723, 1724, 1725, 1726, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1751, 1752, 1753, 1757, 1758, 1759, 1761, 1762, 1764, 1765, 1768, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1817, 1819, 1820, 1821, 1824, 1825, 1826, 1828, 1830, 1832, 1834, 1835, 1841, 1848, 1851, 1856, 1857, 1859, 1860, 1861, 1863, 1865, 1866, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1887, 1892, 1895, 1896, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1916, 1919, 1920, 1921, 1935, 1939, 1942, 1946, 1948, 1953, 1956, 1957, 1958, 1960, 1966, 1969, 1974, 1975, 1981, 1982, 1983, 1984, 1992, 1994, 2001, 2002, 2004, 2005, 2006, 2007, 2009, 2010, 2011, 2013, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2031, 2032, 2033, 2036, 2038, 2040, 2041, 2042, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2053, 2061, 2063, 2065, 2066, 2067, 2068, 2069, 2073, 2074, 2075, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2097, 2098, 2099, 2100, 2102, 2104, 2109], "float": [0, 1, 3, 11, 22, 23, 26, 27, 31, 33, 35, 38, 47, 49, 50, 52, 59, 61, 152, 153, 218, 312, 314, 316, 320, 332, 399, 474, 480, 498, 684, 686, 691, 693, 697, 731, 734, 737, 738, 739, 743, 744, 745, 747, 754, 755, 760, 761, 762, 763, 764, 769, 770, 771, 772, 773, 774, 776, 778, 779, 780, 784, 791, 792, 793, 798, 816, 818, 829, 837, 838, 852, 857, 858, 861, 862, 865, 880, 919, 920, 941, 942, 950, 957, 960, 964, 965, 983, 989, 990, 994, 1004, 1075, 1088, 1099, 1100, 1106, 1107, 1108, 1110, 1123, 1141, 1150, 1151, 1152, 1153, 1155, 1181, 1208, 1212, 1222, 1223, 1224, 1227, 1228, 1247, 1254, 1255, 1257, 1258, 1259, 1260, 1263, 1265, 1281, 1282, 1285, 1289, 1291, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1343, 1352, 1354, 1356, 1365, 1385, 1404, 1405, 1409, 1411, 1412, 1413, 1416, 1419, 1423, 1427, 1433, 1434, 1435, 1437, 1440, 1441, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1472, 1473, 1474, 1477, 1478, 1479, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1505, 1507, 1511, 1519, 1524, 1525, 1527, 1528, 1533, 1534, 1538, 1541, 1542, 1543, 1544, 1545, 1551, 1556, 1557, 1559, 1562, 1563, 1565, 1567, 1568, 1569, 1572, 1573, 1574, 1607, 1608, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1622, 1627, 1636, 1662, 1664, 1669, 1677, 1696, 1708, 1709, 1714, 1715, 1719, 1721, 1724, 1734, 1735, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1753, 1754, 1758, 1764, 1765, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1801, 1802, 1803, 1805, 1807, 1813, 1816, 1820, 1821, 1822, 1823, 1835, 1839, 1840, 1860, 1861, 1864, 1867, 1876, 1877, 1879, 1880, 1882, 1917, 1920, 1924, 1942, 1944, 1957, 2006, 2007, 2008, 2009, 2010, 2013, 2016, 2021, 2024, 2025, 2027, 2028, 2032, 2033, 2037, 2039, 2041, 2046, 2049, 2054, 2056, 2057, 2059, 2061, 2062, 2063, 2067, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2090, 2094, 2096, 2098, 2102, 2107], "datatyp": [0, 61, 880, 1262, 1265, 1519, 1711, 1712, 1863, 2049, 2056, 2072], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 22, 23, 28, 29, 31, 33, 34, 35, 37, 41, 42, 44, 45, 49, 50, 52, 53, 55, 57, 58, 60, 61, 96, 97, 112, 128, 129, 132, 144, 145, 148, 149, 158, 159, 164, 165, 195, 196, 197, 206, 233, 238, 242, 243, 244, 254, 273, 274, 281, 282, 283, 284, 290, 291, 292, 293, 294, 295, 302, 303, 306, 307, 308, 309, 312, 314, 320, 323, 343, 351, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 377, 378, 393, 394, 407, 411, 414, 437, 438, 449, 450, 454, 455, 486, 487, 497, 519, 560, 561, 562, 563, 579, 582, 615, 616, 617, 620, 621, 679, 684, 693, 737, 738, 739, 740, 741, 742, 759, 813, 825, 861, 865, 871, 878, 879, 884, 890, 893, 895, 896, 897, 905, 914, 915, 916, 917, 919, 920, 924, 925, 944, 945, 947, 948, 949, 951, 956, 972, 979, 989, 1004, 1005, 1008, 1010, 1012, 1019, 1029, 1039, 1050, 1093, 1099, 1100, 1101, 1102, 1109, 1110, 1111, 1125, 1132, 1150, 1151, 1152, 1153, 1156, 1163, 1164, 1165, 1166, 1169, 1173, 1180, 1181, 1183, 1206, 1207, 1208, 1220, 1221, 1222, 1231, 1232, 1234, 1235, 1240, 1242, 1254, 1263, 1265, 1269, 1277, 1286, 1288, 1289, 1290, 1292, 1293, 1298, 1302, 1316, 1318, 1321, 1322, 1335, 1343, 1344, 1345, 1347, 1349, 1350, 1353, 1354, 1360, 1363, 1364, 1368, 1369, 1373, 1377, 1404, 1406, 1416, 1419, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1455, 1465, 1470, 1472, 1484, 1519, 1520, 1529, 1548, 1563, 1567, 1571, 1580, 1600, 1601, 1602, 1627, 1636, 1677, 1696, 1699, 1709, 1714, 1715, 1716, 1717, 1740, 1762, 1766, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1798, 1799, 1805, 1807, 1835, 1839, 1855, 1860, 1863, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1917, 1918, 1935, 1941, 1945, 1947, 1953, 1966, 1967, 1972, 1973, 1975, 1982, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2019, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2049, 2051, 2054, 2056, 2058, 2062, 2063, 2067, 2068, 2069, 2073, 2074, 2077, 2078, 2079, 2085, 2088, 2090, 2091, 2092, 2094, 2095, 2098, 2101, 2102, 2103, 2104], "lower": [0, 1, 8, 12, 23, 27, 33, 49, 50, 63, 71, 72, 73, 74, 792, 794, 859, 951, 956, 963, 964, 965, 967, 1119, 1120, 1177, 1185, 1226, 1227, 1295, 1302, 1304, 1312, 1313, 1320, 1323, 1328, 1366, 1405, 1412, 1423, 1538, 1579, 1580, 1581, 1600, 1601, 1602, 1675, 1676, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1795, 1801, 1803, 1818, 1820, 1840, 1855, 1863, 1900, 1944, 1945, 1946, 2006, 2007, 2009, 2017, 2028, 2032, 2034, 2046, 2051, 2057, 2062, 2073, 2079, 2098, 2103], "point": [0, 1, 7, 8, 9, 11, 22, 23, 26, 28, 31, 35, 41, 44, 45, 50, 52, 61, 87, 152, 153, 320, 332, 338, 480, 485, 498, 697, 737, 738, 739, 740, 741, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 758, 760, 761, 762, 763, 764, 774, 776, 778, 779, 780, 784, 794, 798, 818, 819, 820, 821, 824, 829, 852, 861, 862, 865, 880, 909, 911, 912, 913, 919, 920, 941, 942, 950, 972, 989, 990, 994, 1053, 1055, 1064, 1069, 1070, 1106, 1107, 1108, 1151, 1152, 1153, 1212, 1219, 1223, 1224, 1228, 1247, 1262, 1265, 1281, 1282, 1289, 1291, 1312, 1313, 1336, 1338, 1343, 1352, 1365, 1412, 1419, 1428, 1429, 1430, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1465, 1512, 1513, 1514, 1519, 1571, 1572, 1590, 1616, 1625, 1636, 1677, 1696, 1709, 1716, 1717, 1764, 1773, 1804, 1820, 1821, 1822, 1826, 1835, 1848, 1860, 1861, 1867, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1957, 1958, 2005, 2006, 2008, 2009, 2010, 2013, 2021, 2028, 2032, 2033, 2034, 2037, 2038, 2042, 2043, 2046, 2049, 2060, 2061, 2062, 2063, 2065, 2067, 2068, 2072, 2075, 2077, 2078, 2079, 2082, 2089, 2091, 2092, 2094, 2096, 2099, 2102, 2105, 2107], "lower_precision_fp": 0, "half": [0, 1, 10, 23, 33, 616, 983, 1119, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1265, 1328, 1334, 1446, 1447, 1448, 1449, 1450, 1451, 1466, 1467, 1469, 1519, 1620, 1621, 1624, 1716, 1717, 1770, 1795, 1848, 1916, 2025, 2046, 2049, 2054, 2072, 2074, 2075, 2078], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 22, 23, 27, 29, 32, 33, 42, 44, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 63, 65, 335, 485, 588, 616, 759, 792, 841, 860, 878, 900, 903, 905, 919, 920, 939, 941, 950, 974, 982, 986, 1047, 1048, 1057, 1100, 1105, 1106, 1126, 1148, 1151, 1152, 1159, 1163, 1166, 1167, 1168, 1174, 1183, 1191, 1194, 1205, 1223, 1224, 1263, 1265, 1266, 1273, 1276, 1281, 1285, 1312, 1313, 1324, 1337, 1423, 1431, 1462, 1465, 1481, 1482, 1483, 1519, 1520, 1521, 1529, 1530, 1548, 1571, 1578, 1619, 1637, 1695, 1699, 1709, 1710, 1711, 1712, 1724, 1750, 1768, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1813, 1828, 1832, 1851, 1859, 1860, 1863, 1920, 1932, 1958, 1969, 2002, 2004, 2005, 2006, 2008, 2009, 2013, 2016, 2017, 2024, 2025, 2026, 2033, 2034, 2037, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2060, 2061, 2062, 2065, 2067, 2068, 2071, 2072, 2074, 2075, 2079, 2081, 2083, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2100, 2101, 2102, 2103, 2104, 2105], "linear": [0, 2, 9, 23, 27, 28, 31, 32, 33, 49, 50, 52, 54, 56, 58, 61, 63, 430, 471, 472, 473, 474, 475, 478, 710, 719, 727, 728, 764, 791, 792, 793, 795, 813, 854, 858, 859, 861, 862, 910, 965, 1010, 1105, 1162, 1164, 1172, 1174, 1219, 1265, 1269, 1277, 1291, 1297, 1302, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1326, 1328, 1356, 1412, 1431, 1437, 1460, 1468, 1469, 1477, 1504, 1519, 1521, 1535, 1537, 1538, 1539, 1547, 1549, 1556, 1559, 1563, 1565, 1567, 1570, 1572, 1614, 1623, 1624, 1636, 1671, 1680, 1685, 1696, 1699, 1709, 1720, 1721, 1723, 1724, 1725, 1729, 1739, 1740, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1749, 1757, 1758, 1761, 1798, 1801, 1809, 1820, 1957, 1969, 1975, 2005, 2007, 2008, 2014, 2017, 2019, 2027, 2032, 2037, 2038, 2039, 2041, 2042, 2046, 2051, 2054, 2056, 2057, 2058, 2060, 2062, 2063, 2064, 2065, 2067, 2085, 2091, 2101, 2103], "layer": [0, 8, 23, 27, 29, 31, 32, 52, 55, 733, 734, 759, 841, 858, 928, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1457, 1458, 1459, 1463, 1470, 1471, 1473, 1481, 1482, 1483, 1489, 1490, 1491, 1504, 1506, 1512, 1513, 1514, 1525, 1526, 1534, 1535, 1537, 1548, 1559, 1563, 1564, 1565, 1566, 1567, 1639, 1674, 1708, 1709, 1716, 1717, 1723, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 2005, 2032, 2037, 2039, 2041, 2042, 2045, 2046, 2051, 2054, 2056, 2058, 2060, 2062, 2063, 2065, 2072, 2083], "convolut": [0, 1, 2, 49, 737, 738, 739, 740, 741, 742, 771, 772, 773, 972, 1275, 1446, 1447, 1448, 1449, 1450, 1451, 1457, 1458, 1459, 1463, 1495, 1496, 1497, 1498, 1499, 1500, 1531, 1532, 1538, 1568, 1569, 1571, 1600, 1601, 1602, 1603, 1604, 1605, 1624, 1625, 1716, 1717, 1718, 1719, 1863, 2005, 2007, 2019, 2032, 2036, 2037, 2043, 2046, 2057, 2061, 2062, 2065, 2098], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 72, 80, 83, 84, 85, 86, 87, 96, 149, 232, 253, 318, 320, 334, 335, 338, 376, 401, 447, 470, 480, 485, 498, 512, 516, 543, 579, 588, 616, 679, 688, 689, 690, 696, 734, 755, 759, 760, 762, 763, 764, 778, 781, 782, 784, 785, 786, 791, 792, 793, 794, 795, 798, 813, 814, 815, 816, 818, 819, 820, 821, 824, 839, 854, 858, 859, 860, 861, 862, 865, 874, 875, 886, 887, 888, 890, 893, 900, 903, 905, 906, 908, 909, 910, 911, 912, 913, 915, 919, 920, 926, 928, 939, 941, 950, 951, 953, 954, 956, 959, 972, 979, 983, 986, 989, 990, 993, 994, 1007, 1008, 1010, 1011, 1013, 1018, 1030, 1041, 1047, 1050, 1051, 1061, 1065, 1072, 1079, 1088, 1093, 1097, 1100, 1105, 1106, 1107, 1108, 1121, 1122, 1123, 1124, 1126, 1128, 1133, 1135, 1141, 1144, 1146, 1147, 1151, 1152, 1153, 1157, 1162, 1163, 1168, 1170, 1172, 1173, 1174, 1177, 1179, 1180, 1181, 1185, 1187, 1191, 1194, 1203, 1209, 1219, 1223, 1224, 1226, 1228, 1242, 1254, 1255, 1257, 1258, 1261, 1262, 1263, 1265, 1266, 1269, 1272, 1273, 1276, 1279, 1281, 1282, 1287, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1320, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1332, 1335, 1336, 1337, 1338, 1347, 1348, 1349, 1350, 1352, 1353, 1355, 1357, 1358, 1360, 1363, 1366, 1367, 1368, 1371, 1373, 1378, 1392, 1405, 1409, 1410, 1411, 1412, 1413, 1423, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1440, 1441, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1462, 1463, 1465, 1470, 1471, 1472, 1473, 1478, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1533, 1535, 1537, 1548, 1551, 1552, 1553, 1559, 1563, 1565, 1567, 1568, 1569, 1571, 1572, 1578, 1580, 1581, 1582, 1590, 1596, 1597, 1598, 1608, 1609, 1616, 1617, 1618, 1619, 1625, 1636, 1637, 1661, 1664, 1666, 1669, 1677, 1695, 1696, 1697, 1698, 1699, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1722, 1723, 1724, 1727, 1729, 1736, 1750, 1754, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1797, 1800, 1801, 1813, 1819, 1820, 1826, 1835, 1838, 1839, 1846, 1848, 1859, 1860, 1863, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1912, 1915, 1916, 1919, 1920, 1930, 1932, 1936, 1938, 1939, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1953, 1957, 1958, 1960, 1963, 1964, 1965, 1969, 1974, 1975, 1976, 1992, 1994, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2015, 2016, 2017, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2082, 2084, 2085, 2087, 2088, 2089, 2090, 2092, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2107], "much": [0, 4, 7, 9, 15, 22, 23, 49, 149, 893, 909, 914, 1061, 1180, 1301, 1302, 1329, 1338, 1462, 1709, 1740, 1801, 2006, 2034, 2037, 2042, 2043, 2046, 2051, 2059, 2060, 2067, 2068, 2072, 2090, 2091, 2094], "faster": [0, 2, 8, 11, 22, 23, 27, 909, 919, 920, 1162, 1196, 1295, 1296, 1301, 1302, 1306, 1311, 1319, 1321, 1323, 1326, 1329, 1331, 1335, 1338, 1536, 1553, 1666, 1677, 1683, 1709, 1714, 1715, 1723, 1776, 1777, 1788, 1789, 1863, 1902, 1903, 1904, 1906, 1907, 2017, 2019, 2034, 2037, 2043, 2058, 2062, 2072, 2077, 2084, 2092, 2094, 2099], "reduct": [0, 2, 11, 27, 32, 52, 320, 512, 516, 972, 1311, 1343, 1412, 1431, 1432, 1438, 1452, 1454, 1462, 1472, 1478, 1479, 1484, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1569, 1597, 1598, 1606, 1608, 1609, 1617, 1622, 1633, 1634, 1637, 1638, 1649, 1657, 1658, 1659, 1660, 1661, 1669, 1681, 1682, 1693, 1694, 1709, 1820, 1897, 2007, 2025, 2038, 2043, 2059, 2062, 2097, 2103], "often": [0, 2, 4, 7, 8, 14, 22, 27, 33, 45, 52, 55, 61, 149, 893, 914, 1185, 1194, 1281, 1312, 1313, 1322, 1371, 1461, 1481, 1482, 1483, 1590, 1598, 1616, 1625, 1699, 1723, 1803, 2009, 2017, 2034, 2037, 2041, 2045, 2046, 2048, 2049, 2050, 2054, 2059, 2067, 2077, 2091, 2093, 2094, 2101, 2103], "requir": [0, 1, 5, 8, 9, 11, 14, 15, 22, 23, 27, 28, 29, 31, 32, 33, 35, 43, 44, 49, 50, 52, 55, 57, 60, 61, 118, 149, 220, 334, 457, 485, 487, 495, 512, 514, 516, 559, 792, 794, 822, 825, 880, 889, 893, 900, 902, 905, 906, 908, 909, 910, 911, 912, 913, 914, 972, 1005, 1060, 1105, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1146, 1147, 1170, 1174, 1206, 1262, 1279, 1305, 1336, 1338, 1352, 1454, 1461, 1462, 1563, 1564, 1565, 1566, 1567, 1569, 1617, 1677, 1699, 1709, 1710, 1727, 1729, 1731, 1779, 1807, 1904, 1916, 1957, 1969, 2004, 2006, 2009, 2011, 2013, 2016, 2019, 2024, 2026, 2027, 2033, 2034, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2050, 2051, 2054, 2055, 2056, 2059, 2060, 2062, 2063, 2067, 2068, 2069, 2072, 2075, 2077, 2079, 2083, 2084, 2085, 2088, 2089, 2091, 2092, 2093, 2094, 2099, 2101, 2104], "dynam": [0, 12, 14, 15, 22, 50, 62, 63, 64, 65, 68, 69, 71, 74, 75, 679, 728, 732, 759, 760, 761, 762, 763, 764, 793, 798, 814, 823, 825, 828, 844, 850, 851, 852, 853, 858, 859, 972, 1177, 1178, 1179, 1180, 1187, 1273, 1279, 1281, 1337, 1723, 2008, 2009, 2010, 2032, 2037, 2046, 2049, 2053, 2054, 2056, 2058, 2059, 2063, 2084, 2085, 2091, 2092, 2094, 2100, 2103], "rang": [0, 1, 3, 11, 22, 27, 28, 31, 33, 44, 45, 48, 49, 50, 56, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 87, 300, 480, 683, 760, 762, 764, 794, 818, 819, 820, 821, 822, 824, 825, 826, 885, 942, 967, 977, 1066, 1067, 1075, 1105, 1155, 1172, 1185, 1191, 1226, 1227, 1228, 1332, 1343, 1358, 1367, 1385, 1412, 1423, 1454, 1464, 1466, 1467, 1471, 1477, 1490, 1509, 1521, 1526, 1530, 1535, 1537, 1553, 1554, 1555, 1559, 1620, 1621, 1625, 1683, 1709, 1715, 1791, 1792, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1820, 1899, 1955, 1956, 2006, 2007, 2009, 2034, 2036, 2037, 2041, 2046, 2048, 2049, 2056, 2057, 2058, 2061, 2062, 2065, 2066, 2073, 2075, 2077, 2078, 2079, 2081, 2089, 2090, 2092, 2101, 2103], "tri": [0, 2, 3, 7, 22, 33, 37, 61, 86, 579, 1265, 1519, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 2008, 2009, 2037, 2041, 2056, 2059, 2091, 2093, 2094, 2096], "match": [0, 1, 3, 12, 27, 29, 31, 33, 44, 49, 52, 61, 63, 71, 72, 83, 149, 312, 314, 320, 472, 473, 498, 499, 579, 582, 692, 698, 778, 792, 793, 794, 854, 878, 893, 914, 919, 920, 986, 1004, 1007, 1019, 1020, 1021, 1050, 1097, 1105, 1162, 1174, 1181, 1242, 1265, 1279, 1281, 1298, 1337, 1359, 1453, 1462, 1519, 1525, 1572, 1597, 1598, 1636, 1663, 1670, 1677, 1696, 1709, 1729, 1759, 1765, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1821, 1855, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1937, 1953, 1969, 1974, 2006, 2009, 2013, 2016, 2025, 2027, 2034, 2035, 2037, 2039, 2046, 2051, 2054, 2056, 2058, 2059, 2060, 2062, 2063, 2064, 2067, 2075, 2079, 2082, 2091, 2094, 2102, 2103], "each": [0, 1, 2, 5, 9, 14, 22, 23, 27, 28, 29, 31, 32, 33, 35, 37, 42, 45, 47, 48, 49, 50, 52, 53, 55, 57, 58, 59, 61, 79, 80, 82, 85, 96, 118, 152, 153, 397, 401, 492, 512, 514, 516, 544, 606, 616, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 685, 692, 694, 695, 698, 734, 759, 791, 839, 841, 859, 861, 862, 865, 877, 886, 887, 888, 889, 891, 892, 893, 900, 902, 905, 906, 914, 940, 943, 952, 956, 960, 961, 963, 966, 970, 972, 974, 977, 994, 1016, 1017, 1021, 1050, 1053, 1055, 1061, 1063, 1068, 1071, 1077, 1082, 1083, 1084, 1085, 1088, 1089, 1100, 1103, 1105, 1122, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1140, 1142, 1146, 1147, 1149, 1154, 1159, 1164, 1165, 1169, 1173, 1174, 1181, 1206, 1219, 1225, 1227, 1228, 1229, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1265, 1281, 1282, 1287, 1319, 1337, 1338, 1353, 1355, 1363, 1365, 1366, 1367, 1368, 1371, 1373, 1381, 1382, 1405, 1411, 1413, 1423, 1428, 1431, 1432, 1436, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1465, 1470, 1471, 1473, 1478, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1499, 1500, 1504, 1506, 1510, 1511, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1533, 1535, 1537, 1548, 1551, 1552, 1554, 1559, 1562, 1568, 1569, 1571, 1580, 1595, 1597, 1598, 1603, 1604, 1605, 1608, 1609, 1611, 1612, 1613, 1616, 1617, 1618, 1622, 1625, 1635, 1637, 1661, 1662, 1664, 1666, 1669, 1677, 1690, 1699, 1709, 1716, 1717, 1750, 1751, 1753, 1763, 1764, 1765, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1812, 1816, 1817, 1820, 1827, 1835, 1840, 1841, 1846, 1850, 1855, 1863, 1867, 1878, 1884, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1919, 1920, 1936, 1938, 1939, 1942, 1953, 1954, 1955, 1963, 1969, 1970, 1998, 2004, 2008, 2009, 2013, 2015, 2025, 2026, 2027, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2048, 2049, 2050, 2051, 2054, 2056, 2058, 2060, 2061, 2062, 2067, 2068, 2069, 2072, 2073, 2075, 2077, 2078, 2079, 2082, 2083, 2084, 2087, 2088, 2090, 2092, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2105], "its": [0, 1, 4, 5, 7, 8, 9, 12, 14, 15, 18, 22, 23, 25, 27, 28, 29, 31, 32, 33, 35, 36, 44, 45, 47, 50, 52, 59, 60, 61, 63, 65, 80, 81, 82, 149, 257, 457, 486, 487, 503, 512, 514, 516, 582, 583, 584, 616, 679, 822, 825, 874, 875, 876, 878, 879, 880, 893, 898, 899, 916, 917, 924, 925, 964, 965, 972, 982, 983, 990, 994, 1011, 1039, 1041, 1050, 1065, 1088, 1092, 1095, 1105, 1108, 1153, 1159, 1163, 1164, 1165, 1168, 1173, 1181, 1227, 1228, 1232, 1245, 1265, 1276, 1301, 1302, 1306, 1311, 1318, 1320, 1323, 1324, 1329, 1335, 1360, 1388, 1392, 1431, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1481, 1482, 1483, 1519, 1520, 1529, 1551, 1559, 1567, 1625, 1636, 1664, 1670, 1699, 1704, 1705, 1710, 1711, 1712, 1716, 1717, 1718, 1720, 1724, 1725, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1751, 1757, 1761, 1765, 1771, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1810, 1835, 1839, 1843, 1844, 1860, 1861, 1884, 1894, 1921, 1941, 1942, 1944, 1952, 1962, 1967, 1976, 2006, 2008, 2009, 2013, 2019, 2021, 2024, 2033, 2034, 2035, 2037, 2038, 2039, 2041, 2042, 2043, 2046, 2048, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2067, 2068, 2069, 2072, 2075, 2076, 2078, 2082, 2083, 2084, 2085, 2088, 2090, 2091, 2092, 2093, 2094, 2097, 2099, 2105, 2106], "appropri": [0, 7, 8, 9, 27, 28, 33, 52, 60, 61, 62, 485, 895, 926, 994, 1050, 1194, 1281, 1863, 2009, 2010, 2026, 2037, 2043, 2048, 2051, 2054, 2060, 2062, 2065, 2067, 2068, 2069, 2074, 2091, 2094, 2099, 2104], "ordinarili": [0, 1191, 2033], "train": [0, 1, 12, 15, 22, 23, 27, 28, 30, 31, 35, 42, 43, 44, 45, 52, 55, 56, 61, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 798, 800, 837, 838, 855, 856, 857, 859, 861, 862, 863, 915, 977, 986, 1049, 1050, 1053, 1055, 1062, 1172, 1265, 1270, 1277, 1280, 1281, 1423, 1427, 1433, 1434, 1435, 1454, 1455, 1456, 1461, 1462, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1519, 1525, 1526, 1538, 1559, 1567, 1591, 1595, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1675, 1676, 1677, 1709, 1724, 1727, 1729, 1758, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 2004, 2006, 2007, 2013, 2019, 2021, 2032, 2034, 2037, 2038, 2041, 2047, 2049, 2051, 2053, 2056, 2058, 2059, 2060, 2061, 2065, 2067, 2069, 2077, 2084, 2087, 2088, 2089, 2091, 2092, 2096, 2097, 2098, 2100, 2103], "gradscal": [0, 2033, 2037], "togeth": [0, 3, 9, 22, 27, 32, 33, 53, 58, 61, 759, 1047, 1105, 1162, 1164, 1168, 1172, 1173, 1205, 1209, 1305, 1470, 1489, 1535, 1636, 1709, 1714, 1942, 2019, 2033, 2039, 2040, 2041, 2042, 2045, 2046, 2062, 2067, 2068, 2069, 2072, 2077, 2089, 2091, 2093, 2094, 2099], "shown": [0, 12, 23, 36, 45, 49, 1047, 1057, 1491, 1729, 1771, 1801, 1867, 2006, 2009, 2033, 2037, 2039, 2041, 2046, 2054, 2060, 2062, 2072, 2085, 2089, 2091, 2092, 2095], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 14, 18, 19, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 47, 48, 50, 52, 53, 54, 56, 57, 58, 60, 63, 65, 71, 72, 87, 190, 207, 232, 241, 253, 259, 288, 310, 312, 314, 316, 320, 334, 351, 400, 401, 414, 444, 445, 446, 447, 448, 470, 480, 482, 485, 486, 487, 492, 495, 498, 512, 514, 516, 522, 536, 543, 557, 559, 579, 580, 582, 583, 584, 585, 586, 587, 588, 606, 616, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 719, 727, 728, 733, 737, 738, 739, 740, 741, 742, 744, 745, 747, 755, 756, 757, 759, 760, 761, 762, 763, 764, 771, 772, 773, 784, 791, 792, 793, 795, 796, 809, 810, 811, 812, 813, 814, 815, 816, 823, 837, 854, 859, 860, 861, 862, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 895, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 915, 916, 922, 924, 925, 926, 928, 935, 940, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 972, 977, 979, 980, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1004, 1047, 1048, 1053, 1055, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1170, 1172, 1174, 1180, 1181, 1191, 1194, 1206, 1207, 1208, 1212, 1219, 1222, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1236, 1240, 1242, 1250, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1388, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1579, 1583, 1590, 1592, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1611, 1612, 1613, 1616, 1617, 1618, 1620, 1621, 1625, 1627, 1661, 1663, 1664, 1667, 1668, 1677, 1696, 1699, 1708, 1709, 1716, 1717, 1723, 1724, 1725, 1727, 1729, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1808, 1810, 1812, 1813, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1855, 1857, 1858, 1859, 1860, 1861, 1864, 1867, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1892, 1894, 1895, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1917, 1919, 1920, 1922, 1923, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2010, 2013, 2015, 2016, 2020, 2021, 2025, 2026, 2027, 2032, 2034, 2035, 2036, 2037, 2041, 2042, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2053, 2055, 2058, 2059, 2060, 2061, 2062, 2063, 2067, 2069, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2081, 2082, 2083, 2085, 2088, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2100, 2101, 2102, 2103, 2104], "recip": [0, 3, 31, 1519, 1709, 1731, 2033, 2046, 2093], "howev": [0, 2, 3, 4, 5, 7, 9, 14, 15, 22, 23, 27, 31, 33, 35, 41, 44, 49, 50, 52, 53, 54, 56, 57, 60, 61, 63, 68, 72, 80, 83, 84, 85, 257, 480, 544, 895, 908, 1007, 1029, 1050, 1093, 1095, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1162, 1163, 1167, 1168, 1170, 1173, 1174, 1180, 1191, 1265, 1268, 1269, 1276, 1278, 1305, 1320, 1321, 1323, 1337, 1338, 1355, 1431, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1462, 1519, 1600, 1601, 1602, 1625, 1699, 1709, 1750, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1902, 1903, 1904, 1905, 1906, 1907, 1969, 1974, 1982, 2005, 2009, 2027, 2033, 2034, 2037, 2039, 2044, 2046, 2048, 2050, 2051, 2052, 2053, 2056, 2059, 2060, 2067, 2069, 2072, 2078, 2088, 2090, 2091, 2092, 2093, 2094, 2095], "modular": [0, 2033, 2054], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 21, 22, 23, 27, 29, 31, 33, 34, 35, 37, 41, 43, 44, 45, 49, 52, 53, 57, 60, 61, 62, 83, 195, 220, 253, 312, 320, 457, 485, 514, 516, 555, 602, 616, 679, 688, 814, 815, 816, 861, 892, 900, 903, 905, 906, 908, 910, 914, 919, 932, 943, 954, 966, 972, 987, 988, 990, 992, 1005, 1007, 1008, 1016, 1029, 1039, 1040, 1041, 1047, 1048, 1050, 1061, 1063, 1068, 1082, 1083, 1105, 1144, 1148, 1153, 1156, 1159, 1166, 1167, 1169, 1180, 1181, 1186, 1191, 1193, 1194, 1195, 1204, 1228, 1262, 1265, 1268, 1269, 1275, 1276, 1278, 1279, 1281, 1287, 1296, 1297, 1301, 1302, 1303, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1321, 1323, 1324, 1327, 1328, 1329, 1335, 1337, 1338, 1343, 1360, 1370, 1385, 1423, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1484, 1489, 1515, 1516, 1517, 1519, 1526, 1535, 1565, 1567, 1572, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1617, 1625, 1627, 1636, 1642, 1664, 1677, 1695, 1696, 1697, 1698, 1699, 1709, 1723, 1726, 1727, 1729, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1795, 1819, 1839, 1842, 1863, 1869, 1887, 1900, 1916, 1920, 1944, 1957, 1974, 1982, 2004, 2005, 2006, 2008, 2009, 2013, 2015, 2016, 2017, 2019, 2021, 2026, 2033, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2046, 2049, 2050, 2051, 2052, 2054, 2056, 2058, 2059, 2061, 2062, 2063, 2065, 2067, 2069, 2072, 2074, 2081, 2085, 2088, 2090, 2091, 2093, 2094, 2097, 2101, 2103, 2104, 2105], "separ": [0, 1, 3, 9, 11, 14, 19, 22, 27, 29, 31, 44, 45, 52, 53, 55, 58, 60, 61, 734, 759, 890, 905, 1105, 1122, 1124, 1130, 1131, 1134, 1135, 1140, 1142, 1162, 1177, 1276, 1311, 1326, 1473, 1481, 1482, 1483, 1525, 1527, 1644, 1765, 1832, 2004, 2007, 2009, 2013, 2015, 2033, 2034, 2036, 2037, 2040, 2042, 2051, 2054, 2058, 2059, 2068, 2072, 2073, 2077, 2088, 2101, 2103], "desir": [0, 1, 3, 22, 27, 32, 33, 52, 61, 87, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 239, 253, 266, 296, 324, 392, 444, 445, 446, 447, 448, 496, 498, 499, 519, 524, 543, 544, 545, 559, 579, 582, 602, 603, 616, 792, 865, 879, 941, 950, 969, 1051, 1052, 1076, 1077, 1086, 1087, 1106, 1107, 1108, 1118, 1123, 1141, 1157, 1159, 1160, 1161, 1223, 1224, 1265, 1285, 1336, 1352, 1358, 1365, 1380, 1386, 1410, 1412, 1413, 1431, 1432, 1519, 1570, 1598, 1644, 1683, 1684, 1699, 1750, 1764, 1768, 1769, 1810, 1817, 1820, 1821, 1822, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1868, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1896, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1919, 1935, 1946, 1948, 1992, 1993, 1997, 1998, 2002, 2003, 2025, 2026, 2027, 2033, 2034, 2037, 2040, 2044, 2046, 2051, 2060, 2066, 2067, 2073, 2074, 2075, 2103], "As": [0, 1, 8, 19, 23, 27, 29, 33, 49, 50, 52, 55, 56, 61, 253, 485, 954, 1105, 1269, 1297, 1301, 1302, 1312, 1313, 1324, 1329, 1423, 1457, 1458, 1459, 1463, 1484, 1519, 1551, 1695, 1716, 1717, 1763, 1769, 2003, 2006, 2008, 2009, 2016, 2027, 2034, 2037, 2039, 2041, 2042, 2046, 2049, 2051, 2052, 2053, 2054, 2056, 2059, 2060, 2066, 2067, 2068, 2069, 2071, 2072, 2084, 2087, 2089, 2091, 2094, 2095, 2096, 2103], "section": [0, 1, 7, 22, 33, 35, 36, 50, 56, 61, 85, 118, 1061, 1105, 1219, 1455, 1470, 1489, 1517, 1535, 1608, 1753, 1936, 2006, 2007, 2008, 2009, 2010, 2024, 2026, 2027, 2033, 2034, 2037, 2038, 2039, 2040, 2043, 2044, 2046, 2048, 2061, 2068, 2077, 2089, 2091, 2092, 2094, 2095, 2096, 2097, 2101, 2103], "infer": [0, 1, 2, 3, 5, 11, 12, 15, 29, 33, 44, 52, 579, 616, 861, 862, 865, 879, 880, 915, 977, 986, 1021, 1159, 1160, 1180, 1228, 1249, 1263, 1266, 1275, 1280, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1525, 1572, 1636, 1663, 1699, 1762, 1790, 1801, 1835, 1842, 1860, 1861, 1902, 1903, 1904, 1905, 1906, 1907, 1935, 1952, 2005, 2006, 2008, 2009, 2013, 2025, 2027, 2037, 2046, 2056, 2061, 2062, 2063, 2065, 2072, 2084, 2087, 2088, 2090, 2091, 2094, 2096, 2100], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 14, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 42, 44, 45, 49, 50, 52, 56, 57, 60, 61, 81, 82, 83, 118, 253, 310, 320, 322, 334, 351, 444, 445, 446, 447, 448, 457, 480, 485, 487, 512, 514, 516, 556, 582, 583, 584, 586, 587, 613, 616, 679, 694, 695, 734, 737, 738, 739, 740, 742, 771, 772, 773, 778, 784, 785, 786, 790, 792, 800, 813, 816, 819, 820, 823, 827, 842, 849, 858, 878, 895, 897, 900, 903, 904, 905, 906, 908, 910, 919, 926, 928, 941, 942, 950, 972, 980, 986, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1007, 1008, 1010, 1017, 1019, 1021, 1039, 1047, 1048, 1050, 1072, 1102, 1106, 1108, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1151, 1152, 1156, 1157, 1158, 1163, 1174, 1181, 1193, 1194, 1219, 1223, 1224, 1228, 1236, 1246, 1254, 1263, 1265, 1268, 1269, 1277, 1281, 1282, 1285, 1296, 1301, 1302, 1304, 1305, 1306, 1307, 1309, 1311, 1312, 1313, 1314, 1324, 1326, 1327, 1329, 1330, 1337, 1338, 1355, 1360, 1423, 1449, 1450, 1451, 1454, 1455, 1461, 1462, 1465, 1489, 1491, 1519, 1522, 1524, 1525, 1527, 1536, 1559, 1567, 1571, 1572, 1583, 1608, 1617, 1619, 1625, 1636, 1664, 1677, 1695, 1696, 1699, 1702, 1703, 1704, 1705, 1709, 1711, 1712, 1716, 1717, 1730, 1750, 1751, 1752, 1764, 1772, 1776, 1777, 1779, 1789, 1790, 1793, 1797, 1800, 1801, 1803, 1807, 1819, 1828, 1832, 1834, 1836, 1859, 1863, 1865, 1869, 1894, 1897, 1901, 1911, 1916, 1920, 1935, 1946, 1948, 1953, 1954, 1957, 1958, 1960, 1966, 1967, 1968, 1969, 1974, 1994, 2004, 2007, 2008, 2009, 2013, 2015, 2016, 2017, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2065, 2067, 2068, 2069, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2084, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2105], "For": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 19, 22, 23, 24, 27, 28, 29, 32, 33, 35, 41, 42, 44, 45, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 78, 79, 80, 195, 253, 288, 312, 314, 320, 334, 351, 414, 470, 480, 485, 492, 498, 512, 514, 516, 582, 588, 602, 616, 685, 686, 687, 688, 689, 692, 698, 733, 737, 738, 739, 740, 741, 742, 759, 791, 792, 793, 813, 858, 859, 892, 905, 906, 919, 926, 940, 944, 946, 947, 949, 952, 961, 972, 977, 1039, 1053, 1055, 1061, 1086, 1087, 1088, 1105, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1149, 1157, 1172, 1174, 1180, 1181, 1185, 1195, 1206, 1219, 1228, 1242, 1265, 1276, 1277, 1279, 1281, 1282, 1295, 1297, 1301, 1302, 1305, 1306, 1308, 1309, 1310, 1311, 1313, 1322, 1323, 1325, 1326, 1329, 1338, 1345, 1353, 1360, 1366, 1370, 1423, 1427, 1431, 1432, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1461, 1462, 1464, 1465, 1470, 1472, 1479, 1484, 1489, 1491, 1519, 1522, 1523, 1524, 1525, 1533, 1534, 1535, 1541, 1542, 1543, 1544, 1545, 1546, 1551, 1556, 1570, 1571, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1598, 1600, 1601, 1602, 1611, 1612, 1613, 1618, 1625, 1636, 1662, 1664, 1677, 1685, 1699, 1708, 1709, 1727, 1750, 1751, 1752, 1754, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1803, 1832, 1848, 1857, 1860, 1894, 1895, 1905, 1911, 1920, 1936, 1938, 1942, 1950, 1953, 1958, 1960, 1967, 1968, 1969, 2004, 2005, 2006, 2009, 2011, 2013, 2015, 2016, 2018, 2019, 2021, 2025, 2026, 2027, 2028, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2048, 2049, 2050, 2055, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2067, 2068, 2069, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2084, 2085, 2086, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2100, 2102, 2103, 2104], "api": [0, 2, 3, 5, 8, 9, 14, 19, 23, 27, 28, 29, 32, 35, 36, 37, 41, 42, 43, 44, 45, 52, 53, 56, 60, 62, 63, 68, 72, 73, 74, 232, 799, 823, 861, 895, 896, 897, 898, 899, 911, 916, 917, 961, 977, 1005, 1039, 1040, 1041, 1047, 1048, 1050, 1078, 1109, 1149, 1163, 1166, 1167, 1169, 1174, 1191, 1276, 1277, 1279, 1385, 1401, 1709, 1759, 1761, 1762, 1770, 1848, 1859, 1950, 1960, 1969, 1988, 1999, 2004, 2015, 2016, 2017, 2019, 2022, 2024, 2025, 2027, 2034, 2038, 2051, 2053, 2063, 2067, 2068, 2072, 2075, 2077, 2081, 2084, 2085, 2092, 2096, 2104], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 18, 22, 23, 27, 29, 31, 32, 33, 34, 35, 41, 44, 49, 50, 52, 56, 57, 58, 60, 61, 63, 71, 72, 86, 153, 217, 220, 221, 253, 322, 512, 514, 516, 522, 542, 613, 740, 741, 742, 759, 799, 813, 861, 880, 889, 890, 896, 897, 900, 903, 905, 906, 915, 928, 941, 950, 964, 965, 972, 978, 1004, 1047, 1050, 1061, 1086, 1087, 1105, 1109, 1125, 1156, 1163, 1169, 1173, 1174, 1181, 1191, 1198, 1199, 1206, 1209, 1223, 1224, 1228, 1265, 1268, 1269, 1272, 1275, 1279, 1281, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1367, 1373, 1388, 1411, 1423, 1431, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1462, 1465, 1470, 1484, 1489, 1519, 1526, 1535, 1549, 1551, 1559, 1568, 1569, 1571, 1603, 1604, 1605, 1625, 1663, 1680, 1699, 1709, 1727, 1729, 1739, 1741, 1743, 1744, 1745, 1746, 1762, 1776, 1777, 1791, 1797, 1801, 1804, 1807, 1832, 1839, 1851, 1861, 1875, 1876, 1893, 1897, 1911, 1920, 1930, 1932, 1935, 1941, 1942, 1953, 1954, 1969, 1972, 2004, 2005, 2006, 2008, 2009, 2013, 2015, 2016, 2019, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2067, 2068, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2083, 2084, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106], "arg": [0, 1, 3, 4, 5, 14, 22, 23, 27, 29, 31, 33, 35, 36, 42, 43, 45, 46, 47, 48, 49, 50, 52, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 579, 602, 679, 731, 746, 748, 750, 751, 752, 753, 759, 761, 762, 823, 861, 890, 892, 900, 901, 902, 905, 906, 935, 976, 1050, 1065, 1162, 1166, 1167, 1168, 1174, 1181, 1201, 1202, 1265, 1268, 1355, 1431, 1432, 1452, 1454, 1478, 1480, 1485, 1508, 1510, 1511, 1519, 1522, 1523, 1524, 1526, 1533, 1548, 1550, 1551, 1552, 1554, 1558, 1559, 1560, 1561, 1568, 1597, 1598, 1608, 1637, 1661, 1669, 1699, 1709, 1731, 1736, 1750, 1757, 1759, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1921, 1954, 1966, 1969, 2004, 2007, 2009, 2010, 2013, 2024, 2026, 2034, 2037, 2038, 2039, 2040, 2048, 2054, 2056, 2059, 2060, 2067, 2068, 2069, 2074, 2083, 2089, 2091, 2092, 2093, 2094, 2102, 2103, 2104], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 96, 149, 152, 153, 154, 169, 171, 172, 174, 177, 178, 179, 189, 190, 194, 195, 205, 207, 208, 217, 222, 232, 239, 253, 254, 257, 266, 285, 289, 296, 310, 312, 314, 318, 320, 322, 324, 327, 328, 329, 330, 331, 332, 334, 335, 337, 339, 340, 341, 342, 351, 392, 399, 401, 405, 414, 447, 457, 470, 471, 480, 482, 485, 486, 487, 492, 494, 495, 496, 497, 498, 499, 502, 503, 512, 514, 516, 519, 523, 524, 536, 542, 543, 544, 556, 559, 579, 580, 582, 583, 584, 586, 587, 588, 602, 603, 606, 613, 616, 617, 619, 623, 679, 680, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 722, 723, 724, 725, 726, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 767, 768, 771, 772, 773, 774, 775, 776, 777, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 798, 800, 801, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 823, 825, 826, 832, 837, 838, 839, 857, 858, 859, 861, 862, 865, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 924, 925, 926, 927, 928, 932, 933, 935, 937, 939, 940, 941, 942, 943, 945, 948, 950, 952, 953, 956, 957, 958, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 974, 975, 977, 979, 980, 982, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1000, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1019, 1021, 1024, 1025, 1026, 1028, 1032, 1033, 1036, 1039, 1040, 1041, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1092, 1093, 1094, 1095, 1096, 1097, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1115, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1181, 1183, 1185, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1197, 1198, 1199, 1201, 1202, 1204, 1206, 1208, 1209, 1210, 1212, 1214, 1219, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1240, 1242, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1285, 1286, 1287, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1348, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1379, 1386, 1388, 1392, 1394, 1395, 1396, 1399, 1401, 1402, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1541, 1542, 1543, 1544, 1545, 1546, 1548, 1549, 1551, 1552, 1553, 1555, 1556, 1559, 1560, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1590, 1593, 1594, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1634, 1636, 1637, 1642, 1643, 1644, 1646, 1647, 1648, 1650, 1651, 1652, 1661, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1677, 1680, 1683, 1684, 1692, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1812, 1813, 1815, 1816, 1817, 1818, 1819, 1820, 1826, 1828, 1829, 1830, 1832, 1833, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1846, 1847, 1848, 1850, 1851, 1855, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1887, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1914, 1915, 1916, 1919, 1920, 1921, 1922, 1923, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1952, 1953, 1954, 1955, 1957, 1960, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1978, 1979, 1981, 1983, 1984, 1986, 1988, 1990, 1992, 1993, 1994, 1995, 1996, 1997, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2015, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2058, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2085, 2087, 2088, 2089, 2090, 2091, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2109], "equival": [0, 1, 3, 5, 11, 12, 22, 23, 24, 31, 33, 37, 44, 45, 56, 57, 61, 81, 154, 169, 171, 174, 177, 178, 179, 239, 254, 266, 296, 318, 324, 392, 447, 457, 485, 497, 499, 512, 524, 603, 609, 616, 617, 619, 691, 743, 747, 754, 756, 758, 784, 785, 786, 876, 889, 890, 905, 906, 953, 955, 958, 960, 963, 970, 971, 986, 1093, 1097, 1100, 1103, 1104, 1105, 1107, 1122, 1124, 1127, 1130, 1131, 1134, 1135, 1137, 1140, 1142, 1161, 1163, 1166, 1168, 1174, 1181, 1194, 1203, 1229, 1231, 1242, 1264, 1265, 1276, 1281, 1282, 1285, 1297, 1318, 1322, 1330, 1335, 1367, 1372, 1388, 1410, 1423, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1461, 1462, 1473, 1479, 1481, 1482, 1483, 1484, 1489, 1491, 1519, 1535, 1551, 1559, 1571, 1573, 1580, 1581, 1582, 1634, 1644, 1666, 1677, 1696, 1697, 1698, 1709, 1769, 1790, 1826, 1829, 1832, 1833, 1857, 1863, 1870, 1892, 1899, 1912, 1922, 1923, 1930, 1935, 1954, 1969, 1970, 1971, 2003, 2006, 2008, 2009, 2017, 2034, 2054, 2056, 2059, 2063, 2072, 2073, 2075, 2078, 2079, 2089, 2092, 2104, 2107], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 22, 23, 24, 27, 29, 31, 32, 33, 34, 35, 36, 37, 44, 45, 49, 50, 52, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 86, 257, 310, 320, 457, 582, 616, 684, 685, 686, 688, 692, 694, 695, 698, 728, 737, 738, 739, 771, 772, 773, 778, 784, 785, 786, 791, 792, 793, 794, 800, 816, 832, 859, 861, 862, 892, 895, 900, 903, 905, 906, 919, 920, 940, 941, 945, 948, 950, 952, 964, 965, 972, 986, 989, 1004, 1047, 1048, 1050, 1068, 1100, 1102, 1105, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1150, 1151, 1152, 1153, 1155, 1156, 1158, 1169, 1173, 1223, 1224, 1236, 1262, 1269, 1277, 1281, 1285, 1286, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1338, 1356, 1360, 1364, 1369, 1370, 1402, 1404, 1446, 1447, 1448, 1449, 1450, 1451, 1458, 1461, 1462, 1465, 1485, 1506, 1524, 1525, 1559, 1567, 1569, 1571, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1617, 1619, 1625, 1636, 1642, 1677, 1695, 1696, 1698, 1709, 1716, 1717, 1764, 1769, 1776, 1777, 1779, 1789, 1807, 1819, 1838, 1839, 1860, 1863, 1864, 1893, 1894, 1897, 1900, 1917, 1920, 1944, 1946, 1948, 1958, 1960, 1966, 1967, 1968, 2003, 2004, 2005, 2006, 2008, 2010, 2011, 2013, 2019, 2021, 2024, 2028, 2034, 2035, 2036, 2037, 2039, 2044, 2046, 2048, 2049, 2051, 2052, 2053, 2054, 2055, 2058, 2059, 2060, 2061, 2065, 2066, 2067, 2071, 2073, 2075, 2076, 2077, 2078, 2079, 2081, 2082, 2084, 2085, 2087, 2088, 2089, 2090, 2092, 2093, 2095, 2096, 2102, 2103, 2104, 2109], "now": [0, 1, 12, 27, 34, 41, 45, 47, 49, 52, 57, 61, 495, 900, 904, 905, 906, 914, 928, 986, 1019, 1047, 1069, 1070, 1156, 1157, 1212, 1262, 1263, 1269, 1281, 1315, 1516, 1536, 1572, 1699, 1713, 1729, 1740, 1761, 1779, 1860, 1911, 1916, 1960, 2006, 2016, 2025, 2026, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2046, 2047, 2056, 2059, 2062, 2068, 2069, 2072, 2088, 2090, 2091, 2093, 2094, 2095, 2097, 2102, 2103, 2104, 2105], "new": [0, 1, 5, 8, 14, 18, 22, 25, 27, 29, 33, 35, 44, 45, 49, 52, 53, 56, 57, 58, 59, 60, 61, 85, 87, 220, 253, 310, 414, 447, 482, 485, 486, 495, 498, 543, 579, 582, 616, 679, 683, 759, 790, 813, 818, 854, 879, 881, 882, 883, 884, 885, 896, 898, 905, 906, 915, 924, 925, 939, 955, 956, 959, 961, 970, 974, 977, 989, 991, 992, 1008, 1010, 1089, 1093, 1115, 1119, 1120, 1146, 1147, 1149, 1163, 1172, 1174, 1181, 1189, 1203, 1204, 1236, 1240, 1254, 1255, 1258, 1261, 1265, 1272, 1277, 1279, 1339, 1340, 1341, 1342, 1359, 1414, 1417, 1433, 1434, 1435, 1470, 1481, 1482, 1483, 1519, 1520, 1525, 1529, 1559, 1570, 1572, 1636, 1701, 1706, 1707, 1709, 1718, 1719, 1720, 1721, 1724, 1729, 1731, 1735, 1736, 1737, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1754, 1758, 1761, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1803, 1827, 1837, 1838, 1842, 1843, 1844, 1850, 1851, 1855, 1860, 1861, 1870, 1872, 1883, 1885, 1887, 1909, 1910, 1913, 1931, 1933, 1934, 1950, 1952, 1956, 1967, 1968, 1969, 1975, 2004, 2005, 2006, 2008, 2009, 2016, 2017, 2019, 2024, 2025, 2026, 2027, 2028, 2034, 2037, 2039, 2040, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2054, 2056, 2058, 2059, 2061, 2062, 2065, 2069, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2083, 2088, 2090, 2091, 2092, 2094, 2102, 2103], "version": [0, 1, 2, 5, 8, 12, 14, 21, 23, 27, 29, 33, 45, 49, 52, 55, 56, 61, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 120, 122, 124, 126, 129, 130, 132, 140, 142, 145, 146, 148, 151, 157, 159, 161, 163, 165, 167, 176, 185, 193, 197, 200, 202, 212, 214, 230, 235, 237, 243, 246, 248, 250, 252, 256, 261, 268, 270, 272, 276, 278, 282, 284, 291, 293, 295, 303, 305, 307, 309, 311, 313, 315, 317, 355, 357, 359, 361, 363, 365, 367, 370, 372, 374, 375, 382, 384, 386, 388, 390, 394, 398, 400, 419, 422, 425, 427, 438, 440, 442, 450, 455, 465, 468, 484, 489, 491, 507, 510, 511, 512, 513, 515, 521, 526, 528, 531, 533, 535, 548, 550, 552, 555, 561, 563, 570, 574, 576, 592, 595, 597, 599, 601, 611, 621, 734, 735, 736, 748, 749, 750, 751, 752, 753, 774, 775, 776, 777, 779, 783, 784, 803, 804, 805, 838, 847, 855, 856, 858, 915, 926, 986, 1050, 1162, 1185, 1187, 1196, 1223, 1262, 1265, 1268, 1269, 1273, 1276, 1295, 1302, 1306, 1308, 1309, 1313, 1314, 1326, 1327, 1360, 1414, 1432, 1489, 1519, 1520, 1535, 1572, 1590, 1615, 1625, 1632, 1641, 1673, 1676, 1691, 1692, 1696, 1700, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1758, 1759, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1852, 1853, 1854, 1911, 1914, 1915, 1916, 1920, 1941, 1955, 1957, 1964, 1965, 2004, 2025, 2026, 2034, 2035, 2037, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2050, 2052, 2054, 2056, 2058, 2059, 2061, 2065, 2072, 2079, 2081, 2085, 2090, 2094, 2095, 2101, 2103, 2105], "1": [0, 1, 2, 3, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 41, 42, 44, 48, 49, 50, 52, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 135, 150, 151, 172, 190, 204, 207, 224, 226, 227, 228, 232, 241, 253, 257, 262, 285, 288, 310, 311, 312, 314, 316, 320, 351, 376, 400, 401, 444, 446, 447, 453, 470, 480, 482, 486, 487, 492, 495, 498, 512, 514, 516, 536, 537, 541, 543, 553, 554, 555, 557, 559, 560, 561, 562, 563, 580, 582, 583, 584, 586, 587, 606, 607, 614, 616, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 711, 712, 713, 714, 715, 716, 717, 718, 722, 723, 724, 725, 726, 729, 730, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 750, 751, 752, 755, 756, 757, 759, 769, 771, 772, 773, 774, 777, 781, 782, 784, 795, 807, 808, 818, 819, 820, 821, 824, 826, 855, 861, 862, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 894, 895, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 915, 916, 924, 925, 928, 935, 937, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 971, 973, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 999, 1004, 1016, 1047, 1048, 1063, 1068, 1075, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1181, 1185, 1191, 1206, 1207, 1208, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1236, 1237, 1240, 1242, 1250, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1269, 1271, 1276, 1277, 1281, 1282, 1285, 1286, 1287, 1289, 1290, 1291, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1311, 1312, 1313, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1385, 1388, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1562, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1590, 1592, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1623, 1624, 1625, 1627, 1629, 1631, 1632, 1633, 1634, 1635, 1643, 1645, 1650, 1651, 1652, 1658, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1670, 1675, 1676, 1677, 1678, 1679, 1681, 1683, 1684, 1685, 1687, 1692, 1693, 1694, 1695, 1696, 1699, 1708, 1709, 1716, 1717, 1723, 1724, 1725, 1729, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1812, 1813, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1855, 1858, 1859, 1860, 1861, 1862, 1864, 1867, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1888, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 2007, 2008, 2009, 2010, 2013, 2016, 2017, 2018, 2019, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2035, 2036, 2037, 2039, 2041, 2042, 2043, 2044, 2046, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2064, 2067, 2068, 2069, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2081, 2083, 2085, 2088, 2089, 2090, 2092, 2094, 2096, 2097, 2098, 2101, 2102, 2103, 2104, 2107], "10": [0, 1, 3, 12, 21, 22, 23, 27, 28, 33, 34, 44, 47, 49, 63, 68, 71, 72, 312, 320, 334, 470, 512, 559, 580, 582, 583, 584, 684, 685, 696, 733, 744, 745, 759, 760, 761, 762, 764, 940, 952, 962, 965, 966, 970, 986, 994, 1084, 1085, 1086, 1087, 1088, 1103, 1105, 1122, 1124, 1127, 1128, 1130, 1131, 1134, 1135, 1137, 1138, 1140, 1142, 1148, 1156, 1157, 1207, 1219, 1229, 1254, 1270, 1276, 1277, 1283, 1288, 1291, 1318, 1320, 1321, 1336, 1338, 1340, 1345, 1347, 1348, 1349, 1350, 1352, 1360, 1405, 1421, 1422, 1423, 1425, 1426, 1432, 1435, 1438, 1439, 1445, 1448, 1451, 1461, 1462, 1470, 1471, 1472, 1473, 1483, 1489, 1490, 1491, 1516, 1520, 1521, 1526, 1529, 1530, 1535, 1537, 1559, 1563, 1564, 1565, 1566, 1567, 1571, 1577, 1602, 1605, 1609, 1616, 1617, 1627, 1699, 1709, 1716, 1717, 1740, 1748, 1762, 1765, 1771, 1775, 1795, 1801, 1803, 1821, 1822, 1830, 1855, 1863, 1867, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1892, 1908, 1920, 1921, 1932, 1936, 1937, 1940, 1942, 1955, 1957, 1970, 2004, 2006, 2007, 2008, 2009, 2010, 2013, 2016, 2018, 2034, 2037, 2038, 2039, 2042, 2046, 2049, 2050, 2051, 2052, 2054, 2055, 2056, 2057, 2062, 2071, 2072, 2073, 2075, 2077, 2078, 2079, 2085, 2088, 2089, 2091, 2092, 2094, 2096, 2101, 2103, 2107], "class": [0, 1, 2, 3, 12, 15, 22, 23, 27, 28, 29, 31, 32, 33, 35, 36, 38, 41, 42, 44, 46, 47, 49, 50, 52, 57, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 556, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 835, 836, 837, 838, 839, 840, 841, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 894, 895, 900, 901, 902, 903, 904, 905, 906, 915, 916, 917, 927, 928, 935, 936, 937, 938, 939, 995, 996, 1005, 1006, 1007, 1008, 1010, 1011, 1026, 1028, 1039, 1080, 1109, 1172, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1263, 1264, 1265, 1268, 1270, 1271, 1272, 1276, 1277, 1280, 1281, 1282, 1283, 1378, 1390, 1391, 1392, 1396, 1402, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1598, 1608, 1616, 1661, 1663, 1699, 1708, 1709, 1710, 1711, 1712, 1726, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1750, 1757, 1762, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1826, 1895, 1958, 1974, 1975, 1976, 1979, 1981, 2005, 2007, 2010, 2013, 2016, 2021, 2024, 2026, 2028, 2029, 2033, 2034, 2037, 2039, 2040, 2041, 2042, 2046, 2048, 2051, 2054, 2060, 2061, 2062, 2064, 2065, 2067, 2068, 2071, 2072, 2074, 2075, 2077, 2079, 2081, 2082, 2083, 2085, 2089, 2090, 2091, 2092, 2094, 2099, 2101, 2102, 2103, 2104, 2105, 2107], "device_typ": [0, 1, 27, 2013, 2033, 2066], "dtype": [0, 1, 5, 11, 12, 18, 20, 22, 23, 27, 29, 49, 50, 52, 59, 61, 63, 71, 72, 84, 152, 153, 190, 207, 211, 212, 213, 214, 241, 310, 312, 314, 316, 318, 320, 400, 401, 408, 428, 431, 444, 445, 446, 447, 448, 452, 457, 469, 480, 482, 512, 514, 564, 579, 580, 602, 616, 686, 688, 691, 692, 696, 698, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 748, 749, 750, 751, 752, 753, 754, 755, 757, 759, 760, 763, 764, 771, 772, 773, 793, 794, 798, 818, 819, 820, 821, 822, 823, 824, 825, 826, 841, 858, 859, 861, 862, 865, 879, 880, 900, 901, 903, 905, 906, 908, 910, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 957, 964, 965, 983, 986, 987, 988, 994, 1004, 1020, 1086, 1087, 1106, 1107, 1108, 1118, 1122, 1123, 1124, 1130, 1131, 1141, 1148, 1153, 1155, 1157, 1158, 1159, 1160, 1161, 1212, 1223, 1224, 1236, 1265, 1269, 1279, 1285, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1347, 1348, 1349, 1350, 1352, 1355, 1356, 1360, 1364, 1365, 1366, 1369, 1370, 1405, 1409, 1410, 1411, 1413, 1423, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1461, 1462, 1465, 1470, 1471, 1473, 1481, 1482, 1483, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1519, 1525, 1526, 1527, 1534, 1535, 1536, 1537, 1541, 1542, 1543, 1544, 1545, 1559, 1563, 1565, 1567, 1571, 1572, 1573, 1574, 1579, 1580, 1581, 1582, 1592, 1608, 1609, 1636, 1642, 1644, 1677, 1683, 1684, 1699, 1708, 1711, 1712, 1716, 1717, 1726, 1729, 1730, 1750, 1764, 1768, 1769, 1770, 1772, 1807, 1813, 1817, 1818, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1837, 1845, 1848, 1860, 1861, 1863, 1864, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1891, 1894, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1919, 1920, 1932, 1935, 1946, 1948, 1953, 1957, 1958, 1960, 1967, 1968, 1972, 2002, 2003, 2005, 2006, 2007, 2008, 2009, 2011, 2013, 2016, 2026, 2027, 2037, 2039, 2046, 2049, 2054, 2056, 2057, 2062, 2063, 2064, 2072, 2073, 2074, 2077, 2078, 2079, 2092, 2093, 2094, 2098, 2103, 2107], "none": [0, 1, 2, 3, 5, 12, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 35, 37, 41, 42, 44, 47, 49, 50, 52, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 87, 111, 113, 114, 115, 117, 133, 134, 137, 149, 152, 153, 155, 172, 184, 185, 186, 187, 203, 204, 206, 208, 211, 212, 213, 214, 228, 232, 234, 235, 236, 237, 257, 285, 289, 300, 334, 350, 353, 376, 406, 408, 409, 410, 413, 420, 426, 427, 428, 429, 430, 431, 444, 445, 446, 447, 448, 452, 453, 469, 478, 480, 486, 487, 493, 502, 512, 519, 536, 537, 551, 552, 554, 555, 564, 579, 580, 582, 587, 589, 602, 607, 608, 609, 614, 625, 627, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 651, 654, 656, 658, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 748, 749, 750, 751, 752, 753, 754, 765, 766, 767, 768, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 792, 793, 794, 796, 798, 813, 816, 818, 819, 820, 821, 824, 825, 837, 838, 839, 857, 858, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 878, 879, 880, 881, 882, 883, 884, 885, 889, 890, 891, 892, 893, 895, 897, 898, 899, 900, 903, 904, 905, 906, 909, 911, 912, 913, 914, 919, 920, 924, 925, 935, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 956, 959, 961, 962, 963, 964, 965, 967, 968, 970, 972, 978, 983, 984, 985, 988, 989, 991, 992, 993, 994, 998, 1003, 1004, 1005, 1007, 1008, 1010, 1011, 1012, 1016, 1017, 1019, 1020, 1021, 1024, 1025, 1026, 1032, 1033, 1039, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1075, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1097, 1098, 1100, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1157, 1160, 1161, 1162, 1163, 1164, 1168, 1171, 1172, 1174, 1177, 1181, 1183, 1184, 1186, 1191, 1197, 1206, 1207, 1208, 1209, 1210, 1214, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1259, 1260, 1262, 1264, 1265, 1269, 1273, 1275, 1276, 1277, 1279, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1388, 1392, 1394, 1395, 1396, 1401, 1402, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1461, 1462, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1533, 1534, 1535, 1536, 1537, 1551, 1552, 1553, 1554, 1555, 1559, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1572, 1573, 1574, 1585, 1586, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1616, 1617, 1620, 1621, 1622, 1623, 1625, 1626, 1633, 1635, 1636, 1637, 1638, 1639, 1642, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1666, 1669, 1674, 1677, 1681, 1682, 1683, 1684, 1692, 1693, 1694, 1696, 1697, 1698, 1701, 1702, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1723, 1724, 1725, 1728, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1750, 1752, 1753, 1754, 1755, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1812, 1813, 1814, 1816, 1817, 1819, 1820, 1823, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1838, 1839, 1840, 1841, 1846, 1848, 1849, 1850, 1855, 1867, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1896, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1932, 1933, 1934, 1935, 1937, 1939, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1953, 1954, 1958, 1960, 1963, 1964, 1965, 1966, 1969, 1971, 1972, 1973, 1974, 1975, 1976, 1978, 1979, 1983, 1984, 1985, 1999, 2000, 2001, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2010, 2013, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2032, 2034, 2037, 2039, 2040, 2046, 2048, 2051, 2054, 2056, 2059, 2060, 2061, 2062, 2064, 2066, 2067, 2073, 2074, 2075, 2077, 2079, 2082, 2083, 2089, 2091, 2092, 2094, 2098, 2103, 2104, 2105], "enabl": [0, 1, 2, 5, 8, 12, 18, 19, 20, 22, 23, 27, 28, 29, 31, 32, 33, 35, 45, 49, 52, 59, 78, 84, 86, 487, 502, 503, 679, 759, 811, 812, 900, 903, 905, 915, 916, 917, 926, 972, 986, 1005, 1050, 1105, 1109, 1248, 1249, 1267, 1274, 1381, 1382, 1470, 1489, 1535, 1536, 1566, 1583, 1677, 1709, 1726, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1762, 1789, 1864, 1867, 1895, 1957, 1960, 2009, 2015, 2016, 2019, 2022, 2023, 2027, 2033, 2034, 2035, 2036, 2037, 2039, 2042, 2045, 2047, 2049, 2050, 2054, 2056, 2060, 2061, 2066, 2067, 2068, 2072, 2081, 2083, 2084, 2085, 2087, 2089, 2091, 2092, 2093, 2094, 2097, 2101, 2103, 2104, 2105], "true": [0, 1, 2, 3, 5, 12, 14, 22, 23, 26, 27, 28, 29, 31, 32, 33, 35, 47, 49, 52, 57, 58, 60, 61, 63, 71, 72, 149, 195, 208, 259, 318, 320, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 350, 395, 399, 401, 414, 447, 457, 459, 470, 476, 486, 487, 494, 495, 498, 503, 515, 516, 555, 566, 579, 580, 589, 593, 602, 608, 616, 679, 686, 691, 692, 693, 694, 695, 696, 698, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 745, 748, 753, 755, 759, 760, 763, 764, 767, 768, 778, 784, 785, 796, 813, 825, 840, 859, 873, 875, 876, 880, 889, 892, 893, 895, 900, 901, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 922, 924, 925, 935, 941, 944, 947, 949, 950, 956, 957, 963, 971, 972, 975, 978, 980, 986, 987, 1007, 1045, 1100, 1106, 1107, 1108, 1109, 1110, 1111, 1127, 1128, 1134, 1135, 1157, 1159, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1173, 1174, 1177, 1181, 1191, 1193, 1194, 1198, 1199, 1202, 1204, 1206, 1208, 1222, 1223, 1224, 1227, 1228, 1239, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1269, 1270, 1272, 1275, 1281, 1282, 1283, 1285, 1287, 1290, 1295, 1296, 1307, 1308, 1309, 1312, 1313, 1314, 1315, 1318, 1320, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1331, 1332, 1335, 1337, 1338, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1357, 1359, 1363, 1365, 1366, 1367, 1368, 1371, 1378, 1399, 1405, 1410, 1413, 1416, 1419, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1466, 1467, 1470, 1471, 1472, 1473, 1478, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1528, 1533, 1534, 1535, 1536, 1537, 1551, 1552, 1559, 1563, 1565, 1566, 1567, 1568, 1569, 1572, 1573, 1582, 1590, 1592, 1593, 1594, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1620, 1621, 1625, 1627, 1629, 1635, 1636, 1637, 1650, 1651, 1652, 1661, 1669, 1677, 1696, 1697, 1699, 1702, 1708, 1709, 1710, 1712, 1714, 1718, 1719, 1721, 1723, 1724, 1725, 1728, 1729, 1730, 1742, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1807, 1809, 1817, 1819, 1820, 1824, 1825, 1826, 1843, 1844, 1851, 1854, 1855, 1863, 1864, 1867, 1869, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1894, 1895, 1897, 1905, 1914, 1915, 1916, 1919, 1920, 1935, 1939, 1944, 1953, 1954, 1957, 1958, 1960, 1963, 1964, 1965, 1969, 1972, 2004, 2007, 2008, 2009, 2013, 2016, 2017, 2018, 2020, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2049, 2050, 2051, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2063, 2064, 2066, 2067, 2068, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2090, 2091, 2092, 2094, 2095, 2096, 2098, 2099, 2101, 2102, 2103, 2104], "cache_en": [0, 1050], "sourc": [0, 1, 2, 3, 4, 5, 9, 13, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 46, 47, 49, 50, 52, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 149, 195, 208, 232, 311, 312, 320, 339, 350, 395, 400, 401, 414, 415, 416, 452, 470, 486, 487, 512, 514, 516, 519, 523, 546, 555, 556, 558, 585, 602, 605, 608, 609, 623, 679, 694, 695, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 835, 836, 837, 838, 839, 840, 841, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 873, 886, 887, 888, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 932, 934, 935, 936, 938, 939, 951, 953, 954, 958, 960, 962, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1105, 1109, 1156, 1159, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1211, 1213, 1214, 1215, 1218, 1237, 1238, 1239, 1241, 1246, 1251, 1252, 1253, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1337, 1338, 1358, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1583, 1585, 1586, 1590, 1591, 1595, 1597, 1598, 1599, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1646, 1647, 1648, 1649, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1669, 1671, 1672, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1809, 1826, 1851, 1856, 1859, 1860, 1861, 1862, 1863, 1867, 1868, 1869, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1894, 1895, 1901, 1908, 1916, 1921, 1924, 1925, 1926, 1927, 1928, 1929, 1937, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2004, 2006, 2007, 2008, 2013, 2015, 2016, 2019, 2020, 2021, 2024, 2026, 2027, 2032, 2041, 2044, 2045, 2049, 2051, 2054, 2056, 2058, 2060, 2061, 2062, 2066, 2067, 2068, 2074, 2077, 2079, 2081, 2082, 2083, 2091, 2092, 2094, 2095, 2103, 2104, 2105], "instanc": [0, 2, 3, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 41, 44, 45, 47, 49, 52, 57, 61, 138, 616, 679, 733, 747, 756, 792, 795, 823, 825, 841, 858, 1005, 1105, 1156, 1263, 1265, 1277, 1281, 1338, 1461, 1462, 1465, 1481, 1482, 1483, 1491, 1519, 1529, 1564, 1566, 1567, 1571, 1580, 1581, 1582, 1635, 1709, 1724, 1736, 1750, 1758, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1905, 1936, 2006, 2008, 2010, 2015, 2019, 2024, 2026, 2033, 2034, 2037, 2038, 2039, 2041, 2042, 2046, 2050, 2054, 2059, 2062, 2067, 2068, 2069, 2072, 2074, 2079, 2088, 2102, 2104], "serv": [0, 7, 8, 15, 27, 86, 2016, 2054, 2058, 2067, 2068, 2089, 2094, 2098], "context": [0, 2, 5, 22, 27, 31, 32, 35, 44, 45, 49, 52, 61, 63, 149, 791, 889, 890, 891, 893, 895, 905, 906, 914, 915, 916, 917, 919, 935, 978, 996, 1002, 1011, 1026, 1028, 1039, 1045, 1050, 1057, 1065, 1078, 1080, 1109, 1164, 1168, 1173, 1181, 1186, 1265, 1381, 1392, 1396, 1401, 1402, 1519, 1578, 1583, 1677, 1699, 1709, 1710, 1727, 1729, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1895, 1976, 1979, 1981, 1999, 2000, 2005, 2009, 2010, 2017, 2024, 2033, 2034, 2037, 2039, 2044, 2045, 2048, 2054, 2056, 2059, 2061, 2066, 2067, 2069, 2072, 2075, 2081, 2090, 2091, 2093, 2094, 2101, 2105], "manag": [0, 1, 2, 5, 7, 19, 27, 29, 31, 32, 33, 35, 42, 44, 45, 47, 49, 52, 61, 63, 87, 485, 895, 915, 916, 917, 935, 978, 996, 1002, 1005, 1008, 1011, 1012, 1013, 1015, 1026, 1028, 1029, 1030, 1039, 1040, 1050, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1065, 1069, 1070, 1071, 1078, 1080, 1109, 1164, 1168, 1173, 1181, 1381, 1392, 1396, 1401, 1402, 1536, 1578, 1583, 1677, 1709, 1726, 1727, 1729, 1762, 1895, 1976, 1979, 1981, 1999, 2000, 2005, 2009, 2010, 2017, 2034, 2039, 2041, 2042, 2045, 2054, 2056, 2060, 2061, 2066, 2067, 2068, 2072, 2075, 2081, 2090, 2093, 2094, 2106], "decor": [0, 1, 33, 37, 41, 45, 61, 74, 900, 903, 905, 915, 935, 974, 978, 1065, 1109, 1270, 1271, 1277, 1283, 1762, 1894, 1895, 2006, 2008, 2009, 2013, 2033, 2034, 2039, 2060, 2067, 2089, 2091, 2092, 2094, 2095, 2104], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 22, 23, 27, 28, 29, 33, 35, 36, 44, 45, 49, 52, 53, 55, 56, 57, 58, 61, 63, 65, 149, 512, 679, 734, 792, 796, 798, 823, 893, 897, 898, 914, 957, 971, 975, 986, 1047, 1050, 1075, 1105, 1167, 1181, 1186, 1265, 1270, 1283, 1321, 1343, 1385, 1414, 1428, 1429, 1430, 1454, 1455, 1472, 1512, 1513, 1514, 1519, 1522, 1525, 1548, 1563, 1709, 1715, 1763, 1772, 1788, 1803, 1897, 1957, 2004, 2008, 2009, 2016, 2017, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2051, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2064, 2067, 2072, 2075, 2076, 2077, 2079, 2090, 2091, 2092, 2093, 2094, 2099, 2102, 2103, 2106], "region": [0, 3, 5, 33, 41, 767, 768, 972, 1428, 1429, 1430, 1466, 1467, 1477, 1479, 1512, 1513, 1514, 1593, 1594, 1620, 1621, 1651, 1652, 2006, 2024, 2033, 2037, 2080, 2093, 2094], "your": [0, 1, 2, 4, 7, 8, 9, 11, 14, 15, 17, 22, 26, 27, 31, 32, 33, 36, 37, 41, 43, 44, 45, 47, 48, 49, 52, 56, 57, 60, 61, 485, 893, 900, 903, 905, 908, 909, 914, 915, 972, 975, 1178, 1180, 1181, 1265, 1269, 1270, 1275, 1278, 1281, 1282, 1283, 1519, 1526, 1567, 1709, 1726, 1729, 1762, 1790, 1864, 1953, 1958, 1960, 2006, 2008, 2009, 2013, 2015, 2017, 2024, 2025, 2026, 2028, 2033, 2034, 2035, 2037, 2039, 2040, 2041, 2044, 2045, 2046, 2047, 2049, 2050, 2052, 2056, 2058, 2060, 2063, 2066, 2068, 2072, 2077, 2078, 2081, 2084, 2085, 2087, 2088, 2089, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2103, 2104, 2105, 2109], "script": [0, 2, 4, 18, 22, 27, 30, 35, 37, 43, 45, 47, 49, 1266, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1278, 1280, 1281, 1283, 2004, 2005, 2008, 2009, 2019, 2036, 2045, 2047, 2051, 2053, 2054, 2059, 2062, 2067, 2084, 2087, 2089, 2091, 2096, 2097, 2100], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 14, 15, 18, 22, 23, 27, 28, 29, 31, 32, 33, 35, 36, 37, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 60, 61, 63, 149, 485, 487, 679, 791, 797, 816, 818, 819, 820, 821, 824, 857, 861, 862, 863, 893, 914, 915, 919, 920, 935, 972, 1049, 1050, 1163, 1168, 1174, 1190, 1205, 1265, 1266, 1268, 1269, 1271, 1273, 1275, 1277, 1279, 1281, 1282, 1302, 1311, 1337, 1338, 1366, 1433, 1434, 1435, 1455, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1519, 1534, 1548, 1559, 1677, 1699, 1702, 1708, 1709, 1716, 1717, 1718, 1719, 1720, 1721, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1863, 1866, 1899, 1946, 1948, 1957, 1969, 2005, 2006, 2009, 2013, 2019, 2021, 2022, 2024, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2054, 2056, 2058, 2059, 2060, 2062, 2065, 2066, 2067, 2068, 2069, 2072, 2077, 2081, 2082, 2083, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2105], "In": [0, 2, 3, 4, 5, 7, 9, 15, 18, 22, 27, 29, 31, 32, 33, 37, 44, 45, 47, 49, 50, 52, 54, 55, 56, 57, 60, 61, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 120, 122, 124, 126, 129, 130, 132, 140, 142, 145, 146, 148, 151, 153, 157, 159, 161, 163, 165, 167, 176, 185, 193, 197, 200, 202, 212, 214, 220, 230, 235, 237, 243, 246, 248, 250, 252, 256, 257, 261, 268, 270, 272, 276, 278, 282, 284, 291, 293, 295, 303, 305, 307, 309, 355, 357, 359, 361, 363, 365, 367, 370, 372, 374, 375, 382, 384, 386, 388, 390, 394, 419, 422, 425, 427, 438, 440, 442, 450, 455, 465, 468, 484, 485, 489, 491, 507, 510, 521, 526, 528, 531, 533, 535, 548, 550, 552, 561, 563, 570, 574, 576, 592, 595, 597, 599, 601, 611, 621, 679, 759, 799, 823, 854, 900, 903, 905, 906, 939, 948, 956, 987, 988, 1004, 1050, 1061, 1074, 1075, 1079, 1080, 1105, 1126, 1128, 1136, 1137, 1138, 1153, 1164, 1168, 1171, 1173, 1178, 1179, 1180, 1191, 1262, 1263, 1265, 1275, 1278, 1279, 1281, 1297, 1306, 1311, 1312, 1313, 1321, 1324, 1329, 1334, 1338, 1343, 1346, 1355, 1360, 1366, 1367, 1402, 1410, 1428, 1429, 1430, 1432, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1457, 1458, 1459, 1463, 1465, 1470, 1479, 1489, 1504, 1512, 1513, 1514, 1519, 1525, 1563, 1565, 1567, 1571, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1615, 1625, 1632, 1634, 1641, 1670, 1673, 1676, 1677, 1691, 1709, 1716, 1717, 1723, 1729, 1730, 1762, 1790, 1801, 1803, 1839, 1855, 1857, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1916, 1920, 1921, 1944, 1957, 1958, 1960, 1966, 1967, 2004, 2005, 2006, 2008, 2009, 2013, 2015, 2016, 2017, 2024, 2025, 2026, 2027, 2032, 2033, 2036, 2037, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2048, 2049, 2050, 2051, 2056, 2058, 2059, 2061, 2062, 2063, 2064, 2067, 2068, 2069, 2072, 2077, 2079, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2100, 2101, 2102, 2103, 2105], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 19, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 78, 79, 80, 82, 84, 85, 87, 149, 153, 189, 241, 253, 312, 314, 320, 322, 327, 334, 414, 485, 498, 512, 514, 516, 536, 544, 559, 606, 613, 616, 679, 686, 687, 734, 740, 741, 742, 755, 759, 764, 778, 784, 786, 788, 791, 795, 814, 816, 822, 825, 854, 861, 862, 864, 878, 879, 880, 889, 891, 892, 893, 898, 900, 901, 903, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 927, 928, 929, 931, 932, 939, 943, 959, 969, 972, 987, 988, 990, 1005, 1007, 1008, 1010, 1017, 1018, 1019, 1020, 1021, 1039, 1040, 1047, 1048, 1050, 1062, 1064, 1065, 1075, 1079, 1080, 1090, 1103, 1105, 1106, 1107, 1108, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1145, 1148, 1156, 1159, 1162, 1163, 1166, 1167, 1168, 1170, 1172, 1174, 1177, 1178, 1179, 1180, 1181, 1185, 1187, 1190, 1191, 1197, 1206, 1209, 1219, 1227, 1228, 1229, 1262, 1263, 1265, 1268, 1269, 1271, 1273, 1276, 1277, 1279, 1281, 1282, 1283, 1284, 1295, 1296, 1301, 1302, 1307, 1309, 1311, 1314, 1315, 1319, 1322, 1324, 1327, 1328, 1335, 1337, 1338, 1355, 1357, 1360, 1366, 1378, 1385, 1405, 1414, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1465, 1466, 1467, 1470, 1478, 1482, 1483, 1486, 1487, 1488, 1489, 1491, 1501, 1502, 1503, 1504, 1506, 1507, 1509, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1534, 1535, 1537, 1539, 1548, 1551, 1553, 1554, 1555, 1559, 1563, 1564, 1565, 1566, 1567, 1568, 1571, 1573, 1574, 1578, 1579, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1600, 1601, 1602, 1603, 1604, 1605, 1610, 1616, 1617, 1619, 1620, 1621, 1625, 1636, 1643, 1644, 1646, 1647, 1648, 1650, 1651, 1652, 1677, 1681, 1696, 1698, 1699, 1702, 1708, 1709, 1713, 1714, 1715, 1716, 1717, 1722, 1723, 1727, 1729, 1736, 1753, 1760, 1762, 1764, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1819, 1824, 1825, 1826, 1845, 1847, 1851, 1859, 1860, 1862, 1870, 1876, 1897, 1900, 1901, 1905, 1908, 1913, 1916, 1920, 1935, 1936, 1952, 1953, 1954, 1955, 1957, 1960, 1967, 1968, 1969, 1970, 1975, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2015, 2016, 2017, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2060, 2061, 2062, 2063, 2064, 2065, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107], "chosen": [0, 57, 1093, 1287, 1456, 1677, 1867, 1892, 1939, 2027, 2033, 2037, 2039, 2048, 2056, 2062, 2103], "improv": [0, 1, 3, 9, 14, 20, 23, 27, 29, 49, 52, 61, 759, 803, 804, 805, 908, 910, 914, 990, 1219, 1456, 1470, 1489, 1535, 1566, 1677, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1803, 2005, 2006, 2033, 2038, 2039, 2040, 2049, 2050, 2054, 2062, 2063, 2067, 2097, 2099, 2101, 2103, 2105, 2106], "perform": [0, 1, 2, 3, 4, 5, 11, 14, 20, 21, 22, 23, 26, 27, 28, 29, 31, 32, 33, 35, 44, 45, 49, 52, 56, 60, 61, 80, 118, 205, 208, 457, 485, 579, 602, 616, 685, 686, 687, 688, 689, 690, 759, 780, 803, 804, 805, 847, 858, 861, 900, 903, 905, 908, 910, 911, 914, 915, 919, 940, 952, 972, 987, 988, 1012, 1061, 1086, 1087, 1100, 1125, 1148, 1150, 1162, 1163, 1166, 1178, 1195, 1230, 1265, 1275, 1276, 1281, 1309, 1311, 1314, 1318, 1321, 1322, 1326, 1327, 1335, 1336, 1338, 1343, 1352, 1365, 1370, 1381, 1382, 1407, 1410, 1413, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1458, 1461, 1462, 1470, 1489, 1519, 1525, 1527, 1535, 1548, 1563, 1566, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1644, 1662, 1677, 1683, 1684, 1699, 1709, 1711, 1712, 1724, 1729, 1750, 1757, 1759, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1803, 1809, 1817, 1845, 1859, 1863, 1890, 1896, 1897, 1898, 1899, 1919, 1921, 1957, 2005, 2006, 2009, 2013, 2017, 2021, 2022, 2024, 2025, 2026, 2028, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2047, 2048, 2049, 2050, 2056, 2058, 2059, 2061, 2062, 2063, 2065, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2076, 2077, 2079, 2084, 2087, 2089, 2090, 2091, 2092, 2094, 2095, 2096, 2097, 2099, 2104, 2105, 2106], "while": [0, 2, 3, 5, 7, 8, 11, 14, 22, 23, 27, 28, 29, 33, 47, 49, 50, 52, 57, 60, 61, 84, 694, 695, 734, 854, 884, 892, 905, 906, 1008, 1080, 1163, 1177, 1228, 1265, 1268, 1281, 1282, 1338, 1402, 1411, 1423, 1439, 1479, 1481, 1482, 1483, 1489, 1519, 1525, 1538, 1551, 1559, 1563, 1567, 1644, 1702, 1709, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1764, 1855, 1863, 1962, 2010, 2013, 2015, 2016, 2026, 2027, 2033, 2034, 2037, 2039, 2040, 2041, 2042, 2043, 2046, 2048, 2050, 2051, 2056, 2058, 2060, 2062, 2065, 2067, 2069, 2072, 2073, 2074, 2076, 2077, 2078, 2091, 2093, 2094, 2095, 2097, 2103, 2106], "maintain": [0, 7, 8, 22, 23, 27, 33, 49, 52, 56, 61, 928, 938, 1183, 1427, 1458, 1463, 1618, 1709, 1750, 1764, 2005, 2027, 2033, 2034, 2037, 2039, 2046, 2054, 2090, 2093], "accuraci": [0, 23, 972, 1181, 1329, 1677, 1863, 2005, 2021, 2033, 2046, 2077, 2082, 2094], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 19, 21, 22, 24, 27, 28, 29, 33, 36, 44, 45, 48, 49, 52, 57, 58, 59, 60, 61, 88, 92, 94, 96, 98, 100, 102, 104, 106, 108, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 125, 127, 128, 131, 133, 134, 135, 136, 137, 139, 141, 143, 144, 147, 149, 150, 152, 153, 154, 155, 156, 158, 160, 162, 164, 166, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 188, 191, 192, 196, 198, 199, 201, 203, 204, 206, 209, 210, 211, 213, 216, 217, 219, 223, 224, 225, 226, 227, 228, 229, 233, 234, 236, 238, 239, 240, 242, 244, 245, 247, 249, 251, 254, 255, 260, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 277, 279, 280, 281, 283, 286, 287, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 304, 306, 308, 312, 320, 321, 322, 323, 324, 326, 327, 333, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 358, 360, 362, 364, 366, 368, 369, 371, 373, 377, 378, 379, 380, 381, 383, 385, 387, 389, 391, 392, 393, 395, 396, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 423, 424, 426, 428, 429, 430, 431, 432, 433, 437, 439, 441, 449, 451, 452, 454, 456, 458, 459, 460, 461, 463, 464, 466, 467, 469, 476, 478, 479, 481, 483, 485, 486, 487, 488, 490, 492, 493, 494, 496, 497, 498, 500, 501, 504, 505, 506, 509, 514, 516, 517, 518, 520, 522, 523, 524, 525, 527, 529, 530, 532, 534, 537, 538, 539, 541, 542, 546, 547, 549, 551, 553, 554, 555, 560, 562, 564, 566, 567, 568, 569, 571, 572, 573, 575, 577, 578, 589, 590, 591, 593, 594, 596, 598, 600, 604, 605, 608, 609, 610, 613, 614, 615, 617, 618, 619, 620, 679, 692, 694, 695, 698, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 744, 745, 747, 755, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 771, 772, 773, 778, 779, 780, 781, 782, 783, 784, 792, 839, 859, 860, 861, 862, 865, 874, 875, 876, 879, 890, 892, 893, 894, 895, 898, 899, 900, 902, 903, 905, 906, 910, 914, 915, 916, 919, 924, 925, 927, 932, 941, 943, 950, 952, 955, 969, 972, 976, 977, 992, 1005, 1007, 1008, 1010, 1012, 1013, 1015, 1029, 1030, 1039, 1040, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1069, 1070, 1071, 1100, 1103, 1105, 1106, 1108, 1109, 1118, 1123, 1141, 1144, 1157, 1160, 1165, 1166, 1167, 1169, 1177, 1181, 1185, 1193, 1195, 1209, 1219, 1223, 1224, 1228, 1229, 1237, 1238, 1239, 1265, 1269, 1277, 1281, 1282, 1284, 1285, 1287, 1295, 1297, 1302, 1305, 1306, 1308, 1311, 1313, 1320, 1322, 1323, 1326, 1331, 1335, 1336, 1338, 1344, 1346, 1352, 1353, 1355, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1381, 1382, 1388, 1410, 1412, 1413, 1423, 1431, 1432, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1461, 1462, 1464, 1470, 1472, 1478, 1479, 1484, 1485, 1489, 1510, 1511, 1515, 1516, 1517, 1518, 1519, 1522, 1523, 1524, 1525, 1526, 1531, 1532, 1533, 1535, 1547, 1549, 1551, 1552, 1564, 1565, 1566, 1567, 1568, 1569, 1572, 1578, 1579, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1694, 1695, 1696, 1697, 1698, 1709, 1710, 1723, 1724, 1725, 1729, 1735, 1744, 1753, 1758, 1761, 1762, 1763, 1764, 1768, 1807, 1817, 1818, 1828, 1830, 1832, 1834, 1835, 1839, 1842, 1845, 1851, 1860, 1863, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1887, 1895, 1896, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1914, 1915, 1916, 1919, 1930, 1932, 1935, 1941, 1942, 1946, 1948, 1953, 1957, 1960, 1964, 1965, 1970, 1972, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2013, 2014, 2015, 2016, 2018, 2020, 2022, 2024, 2025, 2026, 2027, 2028, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2043, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2054, 2055, 2056, 2060, 2061, 2062, 2063, 2066, 2067, 2068, 2072, 2073, 2074, 2075, 2076, 2078, 2079, 2081, 2084, 2086, 2089, 2090, 2091, 2092, 2095, 2096, 2097, 2101, 2102, 2103, 2104, 2105, 2107], "detail": [0, 1, 2, 3, 7, 8, 11, 13, 14, 15, 17, 18, 22, 27, 28, 29, 33, 35, 45, 50, 52, 58, 61, 78, 79, 80, 149, 322, 494, 523, 613, 679, 734, 737, 738, 739, 740, 741, 742, 759, 765, 766, 767, 770, 771, 772, 773, 778, 779, 781, 782, 783, 784, 792, 859, 860, 861, 862, 873, 890, 892, 893, 894, 895, 898, 899, 900, 903, 905, 906, 919, 955, 976, 977, 992, 1010, 1012, 1013, 1015, 1029, 1030, 1039, 1050, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1069, 1070, 1071, 1088, 1105, 1144, 1167, 1209, 1213, 1215, 1219, 1246, 1253, 1265, 1269, 1281, 1302, 1305, 1323, 1330, 1338, 1344, 1346, 1366, 1405, 1423, 1427, 1437, 1449, 1450, 1451, 1455, 1461, 1462, 1463, 1464, 1466, 1467, 1470, 1489, 1519, 1525, 1531, 1532, 1535, 1547, 1568, 1578, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1626, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1694, 1695, 1699, 1704, 1705, 1709, 1710, 1753, 1763, 1771, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1790, 1795, 1807, 1819, 1851, 1862, 1887, 1896, 1942, 1953, 1957, 1960, 2004, 2006, 2007, 2008, 2009, 2013, 2016, 2020, 2022, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2049, 2050, 2051, 2056, 2059, 2060, 2061, 2062, 2064, 2066, 2067, 2068, 2069, 2072, 2074, 2076, 2077, 2078, 2079, 2081, 2085, 2091, 2100, 2103, 2104, 2105], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 47, 48, 49, 50, 52, 55, 57, 58, 59, 60, 61, 62, 81, 83, 84, 96, 149, 190, 207, 259, 312, 320, 414, 447, 485, 486, 487, 496, 497, 512, 514, 516, 543, 559, 579, 616, 679, 685, 688, 734, 767, 768, 778, 784, 790, 792, 823, 839, 858, 865, 877, 880, 893, 900, 908, 909, 910, 911, 912, 913, 914, 915, 919, 920, 924, 925, 926, 928, 935, 940, 943, 952, 960, 963, 964, 965, 971, 972, 980, 987, 988, 992, 1007, 1009, 1019, 1021, 1043, 1049, 1050, 1062, 1088, 1105, 1144, 1148, 1153, 1159, 1163, 1164, 1169, 1172, 1173, 1174, 1181, 1182, 1191, 1194, 1195, 1203, 1205, 1219, 1254, 1255, 1257, 1258, 1261, 1265, 1266, 1268, 1277, 1278, 1279, 1281, 1282, 1286, 1287, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1335, 1336, 1337, 1338, 1346, 1352, 1355, 1360, 1366, 1367, 1370, 1405, 1410, 1411, 1412, 1423, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1461, 1462, 1465, 1468, 1470, 1471, 1473, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1506, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1533, 1534, 1535, 1547, 1548, 1551, 1552, 1553, 1554, 1556, 1559, 1565, 1566, 1567, 1568, 1570, 1571, 1572, 1573, 1574, 1578, 1580, 1590, 1592, 1593, 1594, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1617, 1623, 1625, 1634, 1636, 1637, 1661, 1664, 1666, 1669, 1670, 1677, 1685, 1696, 1697, 1698, 1699, 1708, 1709, 1710, 1711, 1712, 1716, 1717, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1753, 1758, 1762, 1763, 1764, 1765, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1807, 1809, 1816, 1819, 1820, 1842, 1848, 1855, 1860, 1863, 1869, 1887, 1893, 1897, 1899, 1900, 1901, 1905, 1911, 1916, 1920, 1930, 1935, 1937, 1942, 1946, 1948, 1957, 1958, 1969, 1972, 1974, 2004, 2005, 2006, 2008, 2013, 2015, 2019, 2021, 2024, 2025, 2026, 2032, 2035, 2036, 2037, 2038, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2054, 2058, 2059, 2060, 2061, 2066, 2067, 2068, 2069, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2085, 2089, 2090, 2091, 2092, 2093, 2095, 2097, 2099, 2101, 2102, 2103, 2105], "enter": [0, 27, 895, 896, 897, 915, 2039, 2091], "tensor": [0, 2, 5, 7, 8, 12, 14, 17, 18, 22, 23, 26, 27, 28, 29, 31, 33, 34, 50, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 87, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 719, 731, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 749, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 793, 797, 798, 799, 800, 801, 818, 819, 820, 821, 823, 824, 826, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 919, 920, 922, 924, 925, 926, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 977, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1004, 1017, 1018, 1019, 1020, 1021, 1028, 1036, 1037, 1043, 1047, 1050, 1053, 1057, 1069, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1181, 1186, 1189, 1190, 1203, 1206, 1207, 1208, 1209, 1210, 1211, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1250, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1268, 1269, 1271, 1272, 1273, 1276, 1277, 1279, 1281, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1379, 1388, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1423, 1427, 1428, 1431, 1432, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1470, 1471, 1472, 1478, 1484, 1485, 1489, 1490, 1506, 1509, 1510, 1511, 1512, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1534, 1535, 1537, 1541, 1542, 1543, 1544, 1545, 1546, 1552, 1553, 1554, 1555, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1584, 1585, 1586, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1864, 1867, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1981, 1986, 1987, 2002, 2003, 2005, 2006, 2008, 2009, 2013, 2016, 2028, 2032, 2033, 2035, 2036, 2037, 2038, 2040, 2041, 2042, 2044, 2046, 2047, 2048, 2049, 2050, 2052, 2054, 2057, 2058, 2059, 2060, 2061, 2063, 2066, 2067, 2068, 2071, 2073, 2074, 2077, 2079, 2082, 2083, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2094, 2096, 2098, 2101, 2102, 2103, 2104, 2105], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 35, 37, 38, 42, 43, 44, 45, 48, 49, 50, 52, 57, 60, 61, 87, 149, 253, 485, 498, 544, 616, 696, 757, 780, 791, 792, 793, 799, 809, 810, 811, 812, 814, 815, 816, 817, 822, 823, 825, 854, 865, 889, 890, 891, 893, 900, 903, 905, 906, 908, 914, 919, 920, 928, 948, 954, 958, 959, 987, 1007, 1043, 1050, 1061, 1106, 1107, 1108, 1121, 1122, 1124, 1125, 1126, 1128, 1132, 1136, 1137, 1138, 1153, 1162, 1163, 1170, 1171, 1172, 1174, 1175, 1179, 1181, 1185, 1191, 1228, 1264, 1265, 1269, 1272, 1276, 1277, 1279, 1281, 1287, 1295, 1297, 1301, 1302, 1306, 1311, 1312, 1313, 1318, 1319, 1322, 1326, 1329, 1335, 1337, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1431, 1432, 1436, 1437, 1446, 1447, 1448, 1455, 1456, 1460, 1464, 1465, 1468, 1469, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1484, 1485, 1505, 1506, 1508, 1509, 1510, 1518, 1519, 1527, 1529, 1530, 1533, 1538, 1539, 1540, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1569, 1570, 1571, 1596, 1600, 1601, 1602, 1642, 1662, 1663, 1677, 1699, 1709, 1716, 1717, 1728, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1751, 1752, 1754, 1757, 1759, 1764, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1795, 1835, 1851, 1865, 1867, 1920, 1969, 1974, 1983, 2004, 2006, 2007, 2008, 2013, 2016, 2017, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2053, 2054, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2067, 2068, 2069, 2072, 2074, 2077, 2079, 2082, 2083, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2096, 2098, 2099, 2101, 2102, 2103, 2104, 2105], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 14, 15, 17, 21, 22, 23, 27, 31, 32, 33, 35, 36, 41, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 73, 74, 81, 82, 149, 253, 334, 447, 485, 487, 498, 679, 688, 733, 734, 747, 756, 780, 889, 890, 891, 892, 893, 900, 902, 903, 905, 906, 908, 909, 910, 914, 915, 926, 954, 972, 1005, 1028, 1039, 1041, 1050, 1051, 1072, 1105, 1162, 1163, 1166, 1167, 1168, 1169, 1174, 1178, 1180, 1181, 1190, 1194, 1265, 1269, 1270, 1278, 1281, 1282, 1283, 1311, 1329, 1337, 1360, 1367, 1370, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1489, 1515, 1516, 1517, 1519, 1524, 1525, 1526, 1535, 1554, 1563, 1565, 1567, 1572, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1636, 1642, 1677, 1695, 1696, 1699, 1709, 1724, 1751, 1759, 1761, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1801, 1819, 1842, 1851, 1859, 1902, 1903, 1904, 1906, 1907, 1911, 1958, 1960, 1969, 1981, 1992, 1994, 2004, 2006, 2008, 2009, 2011, 2013, 2016, 2017, 2019, 2021, 2024, 2025, 2027, 2032, 2033, 2034, 2035, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2069, 2072, 2075, 2076, 2077, 2078, 2079, 2081, 2084, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2109], "should": [0, 1, 3, 4, 5, 9, 14, 15, 18, 19, 22, 23, 27, 28, 29, 31, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 49, 50, 52, 56, 57, 60, 61, 63, 68, 69, 72, 83, 118, 149, 153, 312, 320, 397, 401, 414, 444, 445, 446, 447, 448, 486, 487, 495, 512, 514, 516, 582, 583, 584, 586, 587, 685, 688, 689, 734, 759, 771, 772, 773, 792, 795, 799, 816, 823, 837, 838, 854, 855, 856, 859, 865, 889, 890, 891, 892, 893, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 914, 924, 925, 940, 941, 942, 943, 950, 963, 978, 979, 994, 1007, 1010, 1020, 1021, 1039, 1041, 1050, 1096, 1106, 1107, 1108, 1118, 1123, 1126, 1127, 1128, 1136, 1137, 1138, 1141, 1156, 1159, 1160, 1161, 1163, 1164, 1168, 1172, 1173, 1174, 1180, 1185, 1187, 1223, 1224, 1227, 1228, 1262, 1263, 1265, 1266, 1270, 1275, 1277, 1278, 1281, 1282, 1283, 1285, 1310, 1335, 1336, 1337, 1343, 1352, 1355, 1356, 1357, 1378, 1423, 1431, 1432, 1436, 1452, 1454, 1455, 1457, 1458, 1459, 1462, 1463, 1484, 1489, 1511, 1519, 1525, 1526, 1527, 1542, 1547, 1568, 1572, 1590, 1596, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1617, 1625, 1677, 1699, 1701, 1702, 1703, 1706, 1707, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1750, 1751, 1752, 1755, 1757, 1768, 1769, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1819, 1821, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1842, 1858, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1902, 1903, 1904, 1905, 1906, 1907, 1920, 1935, 1944, 1969, 1974, 1975, 2002, 2003, 2004, 2005, 2006, 2008, 2009, 2013, 2015, 2016, 2017, 2020, 2021, 2024, 2026, 2027, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2046, 2048, 2049, 2050, 2052, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2067, 2069, 2072, 2076, 2077, 2079, 2085, 2087, 2089, 2091, 2092, 2093, 2094, 2096, 2097, 2099, 2101, 2102, 2103, 2104], "call": [0, 1, 2, 3, 8, 11, 14, 15, 18, 19, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 44, 47, 49, 50, 52, 53, 54, 56, 57, 58, 60, 61, 63, 65, 72, 79, 85, 149, 289, 322, 334, 457, 485, 486, 487, 555, 579, 613, 616, 679, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 780, 789, 796, 823, 857, 861, 862, 893, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 914, 915, 924, 925, 926, 928, 935, 939, 955, 972, 977, 978, 982, 1005, 1008, 1010, 1039, 1041, 1051, 1052, 1061, 1069, 1070, 1072, 1073, 1103, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1157, 1162, 1163, 1174, 1175, 1190, 1209, 1229, 1250, 1262, 1265, 1268, 1270, 1276, 1277, 1278, 1285, 1321, 1329, 1333, 1335, 1337, 1338, 1367, 1427, 1433, 1434, 1435, 1455, 1456, 1457, 1458, 1459, 1461, 1463, 1465, 1504, 1515, 1516, 1517, 1519, 1526, 1527, 1548, 1559, 1571, 1603, 1604, 1605, 1611, 1612, 1613, 1618, 1636, 1677, 1696, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1716, 1717, 1726, 1729, 1736, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1752, 1758, 1759, 1761, 1762, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1832, 1859, 1865, 1866, 1895, 1914, 1915, 1916, 1937, 1953, 1957, 1958, 1960, 1964, 1965, 1969, 1970, 1975, 1992, 1993, 1994, 1995, 2004, 2006, 2010, 2013, 2017, 2021, 2024, 2026, 2027, 2028, 2033, 2034, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2052, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2082, 2084, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2107], "model": [0, 1, 2, 3, 4, 5, 8, 9, 12, 23, 27, 28, 29, 31, 32, 33, 43, 45, 48, 50, 52, 53, 54, 55, 56, 57, 58, 61, 63, 81, 82, 791, 792, 793, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 823, 824, 825, 835, 836, 837, 838, 840, 854, 857, 858, 859, 860, 861, 862, 863, 915, 928, 972, 1051, 1072, 1162, 1163, 1164, 1172, 1174, 1265, 1269, 1270, 1275, 1277, 1281, 1283, 1337, 1423, 1455, 1472, 1483, 1484, 1519, 1525, 1548, 1559, 1563, 1565, 1566, 1567, 1624, 1709, 1710, 1716, 1717, 1722, 1724, 1727, 1740, 1759, 1760, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 1795, 1801, 1803, 1916, 1969, 1992, 1994, 2005, 2006, 2008, 2009, 2010, 2017, 2019, 2020, 2027, 2034, 2036, 2037, 2038, 2039, 2042, 2044, 2046, 2047, 2048, 2049, 2050, 2051, 2053, 2056, 2061, 2063, 2067, 2068, 2070, 2072, 2073, 2077, 2082, 2083, 2084, 2087, 2088, 2089, 2091, 2093, 2094, 2095, 2099, 2101, 2103], "": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 37, 40, 41, 42, 44, 45, 46, 49, 50, 52, 54, 56, 57, 60, 61, 79, 80, 85, 86, 87, 462, 480, 492, 495, 512, 543, 557, 580, 623, 679, 688, 692, 693, 694, 695, 698, 734, 759, 792, 793, 794, 800, 814, 815, 816, 819, 822, 825, 854, 861, 862, 875, 877, 878, 879, 880, 899, 900, 901, 902, 905, 909, 910, 912, 920, 939, 956, 958, 971, 980, 986, 987, 988, 989, 994, 1003, 1005, 1007, 1011, 1026, 1030, 1039, 1041, 1046, 1047, 1050, 1051, 1052, 1072, 1073, 1074, 1080, 1097, 1100, 1102, 1103, 1105, 1119, 1120, 1122, 1123, 1124, 1127, 1128, 1130, 1131, 1134, 1135, 1137, 1138, 1139, 1140, 1142, 1144, 1145, 1146, 1147, 1148, 1151, 1152, 1153, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1172, 1174, 1177, 1181, 1209, 1219, 1227, 1228, 1229, 1252, 1254, 1262, 1263, 1265, 1269, 1276, 1277, 1281, 1296, 1297, 1307, 1308, 1309, 1311, 1314, 1318, 1320, 1322, 1323, 1327, 1328, 1329, 1330, 1335, 1337, 1338, 1353, 1360, 1365, 1367, 1370, 1372, 1373, 1378, 1381, 1382, 1385, 1392, 1396, 1400, 1402, 1409, 1410, 1413, 1415, 1421, 1422, 1423, 1431, 1432, 1433, 1434, 1435, 1438, 1455, 1461, 1472, 1519, 1520, 1525, 1529, 1536, 1548, 1551, 1553, 1559, 1563, 1565, 1567, 1573, 1574, 1597, 1598, 1609, 1622, 1625, 1636, 1637, 1642, 1677, 1683, 1696, 1699, 1709, 1710, 1716, 1717, 1729, 1740, 1753, 1757, 1764, 1765, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1795, 1803, 1807, 1809, 1813, 1820, 1835, 1838, 1839, 1842, 1843, 1844, 1846, 1848, 1855, 1862, 1863, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1914, 1915, 1916, 1919, 1920, 1921, 1922, 1923, 1932, 1936, 1938, 1944, 1960, 1964, 1965, 1966, 1969, 1970, 1974, 1976, 1979, 1988, 1991, 1992, 1993, 1994, 1995, 2000, 2004, 2006, 2007, 2008, 2009, 2010, 2013, 2015, 2016, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2051, 2052, 2053, 2054, 2056, 2057, 2058, 2060, 2061, 2062, 2064, 2065, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2083, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2104], "wrap": [0, 1, 15, 22, 23, 27, 31, 37, 47, 52, 56, 57, 59, 61, 63, 259, 789, 790, 1008, 1080, 1163, 1181, 1265, 1281, 1402, 1455, 1519, 1559, 1703, 1709, 1727, 1753, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 2000, 2006, 2007, 2009, 2013, 2016, 2033, 2034, 2037, 2038, 2039, 2040, 2046, 2052, 2056, 2060, 2061, 2062, 2067, 2068, 2081, 2083, 2089, 2091, 2092, 2094, 2103, 2104], "forward": [0, 5, 7, 8, 12, 14, 23, 27, 28, 31, 33, 49, 50, 52, 53, 54, 56, 58, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 149, 220, 221, 679, 734, 747, 756, 759, 799, 814, 815, 816, 819, 823, 861, 862, 889, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 914, 915, 916, 917, 919, 979, 980, 986, 1050, 1097, 1109, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1163, 1165, 1166, 1167, 1169, 1172, 1265, 1268, 1269, 1270, 1272, 1276, 1277, 1281, 1282, 1283, 1427, 1431, 1433, 1434, 1435, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1470, 1489, 1504, 1515, 1516, 1517, 1519, 1520, 1521, 1525, 1526, 1529, 1530, 1534, 1535, 1536, 1548, 1563, 1564, 1565, 1566, 1567, 1611, 1612, 1613, 1618, 1664, 1699, 1702, 1703, 1708, 1709, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747, 1758, 1761, 1762, 1826, 1893, 1957, 2005, 2006, 2008, 2009, 2013, 2015, 2019, 2024, 2026, 2032, 2033, 2034, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2045, 2046, 2049, 2051, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2067, 2081, 2082, 2083, 2084, 2085, 2088, 2089, 2091, 2092, 2094, 2097, 2098, 2099, 2101, 2102, 2103], "pass": [0, 1, 3, 5, 6, 7, 14, 19, 22, 23, 27, 28, 29, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 54, 56, 57, 60, 61, 63, 71, 72, 78, 85, 149, 253, 414, 447, 487, 512, 514, 516, 543, 559, 679, 792, 793, 822, 825, 859, 861, 880, 889, 890, 891, 892, 893, 900, 903, 905, 906, 914, 956, 972, 981, 1005, 1039, 1050, 1065, 1095, 1126, 1127, 1128, 1136, 1137, 1138, 1144, 1157, 1159, 1162, 1163, 1167, 1168, 1169, 1172, 1173, 1181, 1191, 1198, 1199, 1203, 1228, 1263, 1265, 1266, 1269, 1271, 1275, 1277, 1281, 1282, 1310, 1326, 1328, 1337, 1385, 1423, 1424, 1425, 1426, 1433, 1434, 1435, 1455, 1461, 1462, 1466, 1467, 1519, 1524, 1525, 1534, 1548, 1564, 1565, 1566, 1567, 1572, 1590, 1620, 1621, 1625, 1636, 1637, 1664, 1677, 1699, 1702, 1703, 1708, 1709, 1727, 1729, 1731, 1736, 1750, 1753, 1757, 1759, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1851, 1855, 1859, 1920, 2004, 2006, 2010, 2013, 2017, 2019, 2021, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2036, 2038, 2039, 2040, 2042, 2043, 2045, 2046, 2049, 2051, 2054, 2056, 2058, 2059, 2060, 2061, 2067, 2069, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2083, 2084, 2089, 2090, 2091, 2092, 2093, 2094, 2100, 2101, 2103, 2104], "e": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 48, 49, 50, 52, 55, 57, 59, 60, 61, 62, 63, 71, 72, 149, 257, 334, 376, 485, 579, 616, 734, 747, 756, 759, 792, 793, 814, 816, 840, 854, 858, 859, 861, 862, 880, 889, 893, 900, 902, 905, 906, 915, 919, 920, 939, 951, 953, 956, 986, 1036, 1050, 1076, 1105, 1115, 1156, 1163, 1168, 1172, 1177, 1181, 1187, 1189, 1194, 1197, 1214, 1216, 1244, 1245, 1247, 1250, 1262, 1265, 1272, 1273, 1281, 1301, 1302, 1317, 1329, 1337, 1338, 1339, 1341, 1343, 1360, 1371, 1379, 1386, 1431, 1432, 1433, 1434, 1435, 1438, 1446, 1447, 1448, 1454, 1455, 1457, 1458, 1459, 1461, 1462, 1463, 1465, 1470, 1473, 1478, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1510, 1519, 1520, 1525, 1526, 1528, 1529, 1533, 1535, 1551, 1559, 1563, 1567, 1568, 1569, 1571, 1600, 1601, 1602, 1609, 1616, 1617, 1625, 1636, 1669, 1677, 1696, 1698, 1699, 1709, 1710, 1711, 1712, 1716, 1717, 1724, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1750, 1751, 1757, 1761, 1764, 1776, 1777, 1789, 1812, 1823, 1841, 1848, 1855, 1859, 1863, 1865, 1870, 1905, 1916, 1920, 1986, 1997, 2004, 2006, 2008, 2009, 2010, 2013, 2016, 2017, 2019, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2049, 2051, 2054, 2056, 2058, 2059, 2061, 2062, 2067, 2068, 2069, 2072, 2073, 2075, 2076, 2077, 2079, 2088, 2090, 2091, 2093, 2094, 2101, 2103, 2104, 2107], "network": [0, 1, 7, 8, 15, 31, 33, 44, 841, 1050, 1265, 1281, 1282, 1427, 1433, 1434, 1435, 1438, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1472, 1484, 1489, 1519, 1526, 1531, 1532, 1538, 1547, 1549, 1559, 1563, 1565, 1567, 1590, 1624, 1625, 1680, 1699, 1724, 1727, 1753, 1758, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1795, 1801, 2006, 2008, 2009, 2032, 2033, 2039, 2049, 2050, 2053, 2056, 2058, 2062, 2067, 2068, 2069, 2090], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 14, 15, 22, 23, 27, 29, 41, 44, 45, 49, 50, 52, 61, 80, 82, 320, 487, 516, 582, 767, 768, 859, 861, 974, 1061, 1133, 1135, 1227, 1263, 1265, 1266, 1295, 1374, 1376, 1428, 1429, 1430, 1436, 1438, 1455, 1464, 1472, 1506, 1515, 1516, 1517, 1519, 1525, 1563, 1564, 1565, 1566, 1567, 1570, 1580, 1592, 1593, 1594, 1609, 1622, 1642, 1709, 1716, 1717, 1751, 1752, 1754, 1883, 1945, 1946, 1947, 1948, 2004, 2006, 2008, 2009, 2013, 2016, 2019, 2021, 2024, 2034, 2036, 2037, 2041, 2042, 2045, 2046, 2051, 2053, 2054, 2056, 2058, 2061, 2062, 2067, 2069, 2077, 2081, 2084, 2085, 2087, 2089, 2092, 2093, 2094, 2095, 2099, 2100, 2101, 2103, 2104, 2105], "loss": [0, 1, 23, 27, 28, 31, 32, 33, 52, 1164, 1262, 1301, 1302, 1311, 1329, 1423, 1431, 1432, 1438, 1452, 1454, 1461, 1472, 1478, 1479, 1484, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1569, 1597, 1598, 1608, 1609, 1622, 1634, 1637, 1661, 1669, 1681, 1693, 1694, 1709, 1751, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 1794, 1863, 2004, 2005, 2021, 2026, 2034, 2037, 2038, 2041, 2043, 2046, 2058, 2062, 2063, 2067, 2068, 2077], "comput": [0, 3, 5, 7, 8, 11, 14, 17, 22, 23, 27, 29, 32, 33, 35, 37, 49, 50, 52, 53, 54, 56, 149, 289, 485, 486, 494, 679, 680, 682, 696, 697, 759, 767, 768, 799, 801, 818, 819, 820, 821, 823, 824, 889, 893, 895, 896, 898, 900, 901, 902, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 924, 925, 944, 945, 946, 947, 948, 949, 960, 962, 963, 964, 965, 971, 988, 990, 1004, 1047, 1050, 1082, 1088, 1097, 1099, 1102, 1105, 1109, 1110, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1148, 1150, 1151, 1152, 1154, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1181, 1207, 1208, 1209, 1219, 1222, 1225, 1226, 1227, 1228, 1242, 1265, 1268, 1277, 1285, 1286, 1288, 1290, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1364, 1365, 1366, 1369, 1410, 1412, 1416, 1423, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1449, 1450, 1451, 1453, 1454, 1456, 1461, 1462, 1470, 1473, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1509, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1525, 1526, 1528, 1533, 1534, 1535, 1553, 1555, 1559, 1568, 1569, 1572, 1592, 1593, 1594, 1607, 1608, 1616, 1617, 1624, 1625, 1627, 1634, 1636, 1637, 1644, 1650, 1651, 1652, 1653, 1654, 1655, 1661, 1666, 1669, 1677, 1681, 1683, 1684, 1693, 1694, 1699, 1702, 1708, 1709, 1710, 1714, 1716, 1717, 1718, 1720, 1723, 1725, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1743, 1744, 1751, 1757, 1761, 1762, 1764, 1774, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1813, 1819, 1820, 1824, 1825, 1839, 1840, 1863, 1870, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893, 1896, 1897, 1898, 1899, 1916, 1920, 1921, 1937, 1942, 1966, 1969, 2005, 2006, 2009, 2013, 2016, 2017, 2021, 2025, 2026, 2028, 2033, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2053, 2054, 2056, 2058, 2062, 2065, 2067, 2072, 2073, 2078, 2082, 2085, 2087, 2088, 2090, 2091, 2092, 2093, 2096, 2102, 2105, 2106], "backward": [0, 1, 5, 9, 27, 28, 29, 31, 32, 33, 45, 49, 52, 56, 57, 61, 63, 289, 334, 486, 487, 495, 502, 503, 512, 514, 516, 580, 679, 685, 688, 759, 814, 815, 816, 890, 898, 899, 900, 901, 902, 903, 904, 905, 906, 909, 911, 914, 917, 919, 924, 925, 935, 938, 940, 952, 977, 1050, 1109, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1162, 1163, 1265, 1338, 1346, 1360, 1370, 1431, 1432, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1461, 1470, 1471, 1472, 1485, 1489, 1490, 1506, 1510, 1511, 1519, 1525, 1526, 1533, 1535, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1597, 1598, 1608, 1609, 1625, 1636, 1661, 1664, 1700, 1704, 1705, 1709, 1729, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1794, 1807, 1819, 1893, 1897, 1901, 1920, 1957, 2004, 2005, 2007, 2009, 2013, 2015, 2026, 2027, 2032, 2033, 2038, 2039, 2040, 2041, 2042, 2045, 2046, 2048, 2049, 2054, 2058, 2059, 2061, 2062, 2067, 2072, 2073, 2078, 2084, 2085, 2088, 2089, 2094, 2097, 2099, 2101, 2102, 2103], "under": [0, 1, 3, 4, 5, 9, 22, 27, 32, 44, 49, 52, 53, 55, 57, 60, 80, 915, 919, 931, 957, 1180, 1265, 1438, 1519, 1590, 1616, 1617, 1723, 1726, 1729, 1771, 1840, 2013, 2018, 2024, 2033, 2034, 2037, 2038, 2040, 2042, 2043, 2048, 2054, 2059, 2060, 2062, 2065, 2066, 2069, 2073, 2077, 2081, 2083, 2090, 2092, 2093, 2098, 2101, 2103], "recommend": [0, 1, 5, 22, 23, 27, 29, 32, 33, 35, 44, 45, 52, 56, 60, 61, 63, 83, 84, 86, 447, 893, 982, 987, 988, 1126, 1127, 1128, 1136, 1137, 1138, 1252, 1268, 1311, 1338, 1385, 1423, 1455, 1637, 1709, 1826, 1953, 1958, 2004, 2006, 2013, 2020, 2024, 2026, 2032, 2033, 2034, 2036, 2037, 2039, 2040, 2046, 2048, 2049, 2051, 2054, 2056, 2059, 2062, 2078, 2095], "same": [0, 1, 3, 7, 11, 12, 14, 15, 17, 18, 22, 23, 27, 28, 29, 31, 32, 33, 35, 41, 42, 44, 45, 47, 48, 49, 50, 52, 55, 57, 60, 61, 63, 71, 72, 138, 152, 194, 220, 254, 310, 312, 314, 318, 320, 338, 444, 445, 446, 447, 448, 470, 482, 485, 496, 497, 499, 512, 514, 516, 519, 543, 579, 616, 617, 685, 688, 692, 694, 695, 696, 698, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 744, 745, 755, 757, 760, 761, 762, 763, 764, 778, 784, 787, 788, 792, 793, 795, 799, 801, 813, 818, 821, 823, 824, 859, 861, 878, 879, 880, 892, 898, 900, 902, 905, 906, 908, 909, 910, 911, 912, 913, 919, 920, 940, 942, 943, 952, 954, 956, 959, 964, 965, 966, 972, 975, 983, 986, 1004, 1005, 1007, 1018, 1020, 1039, 1050, 1088, 1093, 1095, 1096, 1102, 1105, 1107, 1108, 1111, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1153, 1158, 1159, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1172, 1173, 1174, 1189, 1206, 1209, 1219, 1227, 1228, 1236, 1240, 1256, 1262, 1265, 1271, 1276, 1277, 1281, 1282, 1286, 1287, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1333, 1353, 1357, 1359, 1360, 1363, 1365, 1366, 1367, 1368, 1371, 1410, 1413, 1414, 1415, 1421, 1422, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1491, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1522, 1523, 1524, 1525, 1527, 1528, 1533, 1534, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1571, 1572, 1575, 1576, 1577, 1590, 1596, 1597, 1598, 1600, 1601, 1602, 1608, 1617, 1625, 1627, 1636, 1637, 1677, 1696, 1704, 1705, 1708, 1709, 1716, 1717, 1723, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1750, 1754, 1759, 1764, 1765, 1769, 1772, 1803, 1807, 1812, 1813, 1816, 1817, 1829, 1831, 1833, 1837, 1839, 1841, 1842, 1846, 1848, 1855, 1858, 1859, 1863, 1870, 1875, 1893, 1902, 1903, 1904, 1906, 1907, 1913, 1914, 1915, 1919, 1920, 1931, 1942, 1953, 1954, 1955, 1956, 1957, 1964, 1965, 1966, 1969, 1974, 2003, 2004, 2006, 2008, 2009, 2013, 2017, 2021, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2048, 2049, 2050, 2051, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2065, 2067, 2068, 2069, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2082, 2083, 2087, 2088, 2089, 2090, 2091, 2093, 2094, 2099, 2101, 2102, 2103, 2104], "correspond": [0, 1, 7, 18, 19, 22, 23, 27, 29, 31, 32, 33, 44, 49, 52, 59, 61, 81, 414, 472, 473, 512, 514, 516, 543, 544, 679, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 734, 792, 796, 835, 837, 857, 858, 859, 864, 880, 889, 891, 892, 893, 900, 902, 905, 906, 908, 910, 919, 939, 989, 1050, 1071, 1100, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1179, 1181, 1219, 1228, 1254, 1265, 1282, 1296, 1301, 1302, 1307, 1310, 1329, 1336, 1338, 1352, 1367, 1405, 1432, 1455, 1461, 1489, 1519, 1525, 1542, 1566, 1616, 1625, 1663, 1709, 1724, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1758, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1795, 1812, 1813, 1823, 1846, 1855, 1860, 1870, 1905, 1914, 1915, 1920, 1952, 1955, 1956, 1964, 1965, 2004, 2006, 2007, 2009, 2013, 2021, 2025, 2026, 2033, 2034, 2037, 2038, 2039, 2040, 2042, 2043, 2045, 2046, 2050, 2054, 2056, 2059, 2061, 2062, 2067, 2068, 2072, 2073, 2074, 2077, 2079, 2082, 2083, 2091, 2095, 2100, 2101, 2103], "devic": [0, 1, 2, 5, 8, 14, 16, 18, 19, 22, 23, 27, 28, 29, 31, 32, 45, 47, 50, 52, 56, 59, 60, 61, 63, 68, 72, 73, 74, 87, 195, 205, 208, 288, 312, 320, 334, 444, 445, 446, 447, 448, 514, 516, 579, 685, 688, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 748, 749, 750, 751, 752, 753, 754, 865, 877, 879, 880, 908, 910, 937, 940, 941, 943, 950, 952, 977, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1028, 1032, 1033, 1034, 1036, 1037, 1045, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1077, 1081, 1082, 1083, 1106, 1107, 1108, 1118, 1123, 1141, 1157, 1160, 1161, 1211, 1214, 1223, 1224, 1265, 1269, 1273, 1276, 1279, 1285, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1312, 1313, 1314, 1320, 1323, 1324, 1326, 1327, 1329, 1330, 1336, 1337, 1352, 1355, 1360, 1366, 1370, 1375, 1378, 1379, 1385, 1386, 1387, 1392, 1393, 1394, 1395, 1397, 1399, 1403, 1423, 1433, 1434, 1435, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1461, 1462, 1470, 1471, 1473, 1481, 1482, 1483, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1519, 1525, 1527, 1534, 1535, 1536, 1537, 1559, 1563, 1565, 1567, 1579, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1617, 1636, 1642, 1677, 1692, 1696, 1697, 1698, 1699, 1708, 1709, 1711, 1712, 1714, 1715, 1716, 1717, 1750, 1757, 1763, 1765, 1768, 1769, 1779, 1819, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1859, 1863, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1897, 1898, 1902, 1903, 1904, 1905, 1906, 1907, 1920, 1935, 1937, 1946, 1948, 1957, 1958, 1960, 1974, 1975, 1976, 1977, 1978, 1980, 1981, 1983, 1984, 1985, 1986, 1987, 1996, 1997, 1998, 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2009, 2011, 2013, 2019, 2025, 2027, 2033, 2038, 2039, 2040, 2041, 2042, 2044, 2046, 2047, 2048, 2050, 2051, 2054, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2066, 2067, 2072, 2074, 2078, 2079, 2085, 2088, 2091, 2092, 2093, 2094, 2096, 2098, 2100, 2101, 2103, 2105], "creat": [0, 1, 3, 5, 6, 7, 9, 14, 22, 23, 27, 29, 31, 32, 33, 35, 36, 42, 44, 45, 47, 48, 49, 50, 52, 60, 61, 63, 83, 84, 86, 87, 149, 221, 253, 334, 485, 579, 580, 582, 583, 584, 586, 587, 679, 731, 737, 738, 739, 744, 745, 755, 763, 791, 792, 793, 813, 814, 815, 816, 818, 823, 854, 878, 879, 880, 893, 898, 914, 915, 916, 917, 939, 951, 953, 964, 965, 969, 970, 972, 989, 1015, 1047, 1048, 1057, 1093, 1108, 1157, 1158, 1159, 1160, 1181, 1182, 1183, 1184, 1187, 1262, 1265, 1268, 1278, 1284, 1289, 1295, 1296, 1302, 1304, 1323, 1336, 1352, 1367, 1405, 1431, 1452, 1461, 1462, 1465, 1479, 1485, 1510, 1511, 1519, 1522, 1523, 1524, 1548, 1551, 1552, 1559, 1568, 1569, 1571, 1579, 1581, 1582, 1709, 1729, 1750, 1757, 1762, 1770, 1771, 1790, 1858, 1859, 1888, 1900, 1905, 1935, 1942, 2005, 2009, 2010, 2019, 2024, 2033, 2034, 2037, 2038, 2039, 2040, 2042, 2043, 2046, 2047, 2048, 2051, 2056, 2058, 2059, 2060, 2061, 2062, 2067, 2068, 2069, 2072, 2074, 2076, 2077, 2078, 2079, 2081, 2082, 2083, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2102, 2103, 2105, 2107], "optim": [0, 1, 2, 7, 8, 14, 15, 23, 27, 28, 29, 33, 50, 52, 61, 818, 919, 928, 932, 972, 975, 1105, 1172, 1181, 1265, 1269, 1275, 1277, 1281, 1282, 1321, 1338, 1433, 1434, 1435, 1454, 1461, 1481, 1482, 1483, 1519, 1522, 1523, 1524, 1525, 1552, 1559, 1567, 1677, 1699, 1709, 1716, 1717, 1723, 1729, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1809, 2005, 2006, 2008, 2019, 2026, 2032, 2036, 2038, 2039, 2041, 2043, 2046, 2048, 2056, 2061, 2062, 2072, 2084, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2094, 2096, 2103, 2106, 2109], "default": [0, 2, 3, 5, 9, 11, 12, 14, 18, 19, 26, 27, 28, 29, 31, 32, 33, 35, 36, 41, 42, 43, 44, 45, 48, 49, 50, 52, 55, 56, 57, 58, 59, 61, 63, 67, 68, 71, 72, 73, 74, 76, 80, 83, 84, 86, 149, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 239, 266, 289, 296, 324, 330, 392, 414, 444, 445, 446, 447, 448, 457, 495, 498, 499, 519, 524, 579, 580, 582, 679, 693, 696, 711, 712, 713, 714, 715, 716, 719, 729, 730, 731, 732, 734, 754, 757, 759, 767, 768, 769, 771, 772, 773, 778, 784, 792, 797, 802, 807, 808, 813, 816, 818, 819, 820, 821, 824, 827, 828, 829, 830, 831, 832, 833, 834, 841, 842, 843, 844, 845, 846, 848, 849, 854, 855, 856, 858, 865, 879, 880, 893, 895, 896, 897, 900, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 939, 941, 950, 956, 960, 963, 964, 965, 969, 972, 994, 1004, 1007, 1010, 1012, 1016, 1019, 1020, 1021, 1024, 1025, 1032, 1033, 1036, 1047, 1049, 1050, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1075, 1076, 1079, 1081, 1082, 1083, 1086, 1087, 1088, 1093, 1094, 1095, 1096, 1097, 1100, 1105, 1106, 1107, 1108, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1173, 1174, 1177, 1178, 1209, 1211, 1212, 1219, 1223, 1224, 1227, 1228, 1254, 1256, 1262, 1265, 1266, 1269, 1277, 1281, 1282, 1285, 1286, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1352, 1355, 1357, 1363, 1365, 1366, 1367, 1371, 1378, 1379, 1386, 1394, 1395, 1409, 1410, 1412, 1413, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1547, 1551, 1552, 1556, 1557, 1559, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1572, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1622, 1624, 1625, 1627, 1629, 1636, 1637, 1644, 1650, 1651, 1652, 1661, 1662, 1664, 1669, 1677, 1683, 1684, 1692, 1696, 1702, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1718, 1719, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1751, 1752, 1754, 1756, 1757, 1758, 1759, 1761, 1763, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1809, 1817, 1819, 1820, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1838, 1841, 1847, 1848, 1851, 1855, 1859, 1860, 1861, 1862, 1863, 1867, 1869, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1913, 1914, 1915, 1916, 1919, 1920, 1921, 1935, 1936, 1942, 1944, 1946, 1948, 1953, 1954, 1957, 1958, 1960, 1963, 1964, 1965, 1969, 1974, 1975, 1978, 1983, 1984, 1986, 1997, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2013, 2015, 2018, 2019, 2020, 2024, 2027, 2032, 2033, 2036, 2038, 2039, 2040, 2041, 2042, 2044, 2046, 2049, 2050, 2051, 2052, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2066, 2067, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2084, 2089, 2090, 2093, 2094, 2097, 2099, 2100, 2102, 2103, 2105, 2107], "net": [0, 6, 15, 35, 55, 61, 1265, 1281, 1282, 1455, 1519, 1709, 1740, 1794, 2008, 2009, 2033, 2034, 2037, 2046, 2077], "sgd": [0, 22, 23, 31, 487, 928, 1461, 1699, 1709, 1795, 1801, 1803, 2033, 2037, 2038, 2046, 2048, 2058, 2067, 2068], "paramet": [0, 1, 2, 3, 5, 11, 12, 14, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 38, 42, 44, 47, 49, 50, 52, 54, 56, 59, 60, 61, 63, 87, 149, 154, 169, 171, 172, 174, 177, 178, 179, 194, 195, 205, 208, 232, 239, 253, 254, 259, 266, 296, 312, 314, 316, 318, 320, 324, 330, 392, 399, 401, 414, 444, 445, 446, 447, 448, 457, 470, 492, 495, 496, 497, 498, 499, 512, 514, 516, 519, 524, 536, 543, 544, 545, 559, 565, 582, 583, 584, 586, 587, 602, 603, 606, 616, 617, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 749, 754, 755, 757, 758, 759, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 792, 794, 796, 798, 799, 800, 813, 818, 819, 820, 821, 822, 823, 824, 825, 826, 837, 838, 839, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 893, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 929, 931, 932, 935, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 969, 970, 971, 972, 974, 975, 978, 981, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 998, 1003, 1004, 1005, 1007, 1008, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1032, 1033, 1034, 1036, 1039, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1181, 1188, 1199, 1204, 1206, 1207, 1208, 1209, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1240, 1242, 1244, 1245, 1247, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1272, 1273, 1276, 1277, 1278, 1279, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1378, 1379, 1380, 1381, 1382, 1385, 1386, 1388, 1392, 1394, 1395, 1396, 1401, 1402, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1555, 1556, 1557, 1559, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1620, 1621, 1622, 1624, 1625, 1627, 1629, 1636, 1637, 1644, 1650, 1651, 1652, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1677, 1683, 1684, 1692, 1696, 1697, 1698, 1699, 1702, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1812, 1813, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1867, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1924, 1925, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1974, 1975, 1976, 1978, 1979, 1981, 1983, 1984, 1985, 1986, 1992, 1993, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009, 2011, 2013, 2017, 2019, 2020, 2024, 2026, 2027, 2028, 2032, 2033, 2034, 2037, 2038, 2039, 2042, 2044, 2045, 2046, 2048, 2050, 2051, 2054, 2056, 2059, 2060, 2061, 2062, 2066, 2067, 2068, 2072, 2073, 2074, 2077, 2079, 2082, 2083, 2085, 2094, 2102, 2104, 2105], "target": [0, 14, 31, 32, 49, 50, 52, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 498, 734, 765, 766, 791, 796, 859, 861, 862, 957, 1164, 1265, 1275, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1431, 1432, 1438, 1452, 1454, 1466, 1467, 1472, 1478, 1479, 1484, 1485, 1510, 1511, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1533, 1551, 1552, 1563, 1572, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1597, 1598, 1606, 1608, 1609, 1620, 1621, 1622, 1633, 1634, 1637, 1638, 1649, 1657, 1658, 1659, 1660, 1661, 1669, 1677, 1681, 1682, 1709, 1789, 1957, 2007, 2009, 2033, 2034, 2037, 2048, 2054, 2056, 2058, 2059, 2062, 2063, 2067, 2077, 2082, 2085, 2089, 2090, 2092, 2102, 2103], "data": [0, 1, 2, 3, 7, 11, 12, 18, 20, 23, 27, 29, 31, 33, 34, 35, 38, 41, 44, 47, 50, 52, 56, 59, 61, 63, 64, 68, 72, 138, 149, 194, 195, 325, 328, 332, 335, 340, 444, 447, 480, 492, 496, 498, 616, 737, 738, 739, 759, 771, 772, 773, 780, 791, 792, 793, 797, 818, 819, 820, 821, 822, 824, 826, 865, 879, 880, 890, 893, 905, 926, 941, 950, 956, 1008, 1086, 1087, 1106, 1107, 1108, 1118, 1119, 1120, 1123, 1125, 1126, 1128, 1136, 1137, 1138, 1141, 1144, 1145, 1146, 1147, 1156, 1157, 1159, 1160, 1161, 1163, 1172, 1187, 1191, 1195, 1197, 1223, 1224, 1226, 1244, 1247, 1273, 1277, 1281, 1285, 1336, 1337, 1338, 1352, 1357, 1365, 1367, 1381, 1382, 1410, 1412, 1413, 1436, 1438, 1446, 1447, 1448, 1455, 1470, 1473, 1481, 1482, 1483, 1489, 1491, 1506, 1526, 1535, 1536, 1572, 1590, 1595, 1596, 1600, 1601, 1602, 1635, 1642, 1644, 1683, 1684, 1709, 1710, 1711, 1712, 1716, 1717, 1750, 1751, 1752, 1753, 1755, 1764, 1768, 1769, 1770, 1771, 1795, 1801, 1809, 1817, 1820, 1821, 1822, 1826, 1828, 1829, 1831, 1832, 1833, 1834, 1835, 1842, 1855, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1919, 1920, 1935, 1944, 1946, 1948, 1956, 1957, 1958, 2002, 2003, 2005, 2006, 2007, 2010, 2013, 2016, 2017, 2019, 2021, 2024, 2027, 2033, 2034, 2035, 2037, 2039, 2040, 2045, 2048, 2050, 2051, 2052, 2053, 2054, 2057, 2058, 2059, 2060, 2062, 2065, 2067, 2069, 2072, 2073, 2074, 2075, 2076, 2077, 2079, 2081, 2082, 2083, 2087, 2090, 2091, 2093, 2094, 2096, 2101, 2105], "zero_grad": [0, 1, 31, 1265, 1519, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1794, 2033, 2037, 2041, 2046, 2048, 2058], "output": [0, 1, 4, 5, 7, 12, 18, 22, 23, 27, 29, 31, 32, 33, 35, 41, 42, 49, 56, 57, 58, 61, 63, 72, 79, 138, 312, 320, 444, 445, 446, 448, 512, 516, 565, 616, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 719, 727, 728, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772, 773, 774, 776, 778, 779, 780, 781, 782, 784, 785, 786, 791, 792, 793, 795, 798, 801, 813, 816, 858, 861, 862, 863, 865, 874, 875, 878, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 900, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 940, 942, 943, 944, 945, 946, 947, 948, 949, 952, 956, 959, 960, 961, 962, 963, 964, 965, 967, 970, 986, 988, 989, 991, 992, 1004, 1017, 1019, 1020, 1021, 1047, 1048, 1050, 1060, 1061, 1084, 1085, 1086, 1087, 1089, 1092, 1093, 1095, 1097, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1110, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1160, 1161, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1181, 1190, 1206, 1207, 1208, 1209, 1219, 1222, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1240, 1242, 1259, 1260, 1262, 1265, 1269, 1277, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1388, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1616, 1617, 1619, 1620, 1621, 1622, 1625, 1627, 1636, 1637, 1642, 1644, 1650, 1651, 1652, 1661, 1662, 1666, 1667, 1668, 1669, 1677, 1692, 1696, 1697, 1698, 1702, 1708, 1709, 1724, 1725, 1726, 1727, 1730, 1751, 1753, 1754, 1758, 1761, 1763, 1764, 1765, 1768, 1769, 1771, 1772, 1790, 1794, 1807, 1808, 1816, 1817, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1838, 1839, 1840, 1841, 1843, 1844, 1848, 1850, 1855, 1863, 1867, 1870, 1872, 1884, 1885, 1887, 1892, 1897, 1898, 1900, 1901, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1932, 1933, 1934, 1939, 1942, 1944, 1945, 1947, 1950, 1952, 1953, 1954, 1955, 1957, 1963, 1964, 1965, 1966, 1969, 1971, 1972, 2002, 2003, 2004, 2006, 2007, 2009, 2013, 2015, 2017, 2019, 2025, 2026, 2027, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2046, 2049, 2050, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2064, 2068, 2072, 2073, 2075, 2076, 2077, 2079, 2082, 2083, 2085, 2088, 2089, 2090, 2092, 2093, 2094, 2096, 2097, 2102, 2103], "loss_fn": [0, 31, 1789, 2033, 2037, 2038, 2048, 2058], "exit": [0, 1, 2, 4, 18, 27, 35, 44, 52, 60, 61, 895, 897, 1583, 1709, 2009, 2024, 2034, 2039, 2048, 2056, 2069, 2074], "befor": [0, 1, 3, 6, 7, 14, 18, 19, 22, 23, 27, 28, 29, 31, 32, 33, 36, 41, 43, 44, 45, 47, 49, 50, 52, 61, 96, 149, 414, 485, 746, 759, 787, 788, 789, 893, 900, 901, 903, 905, 928, 970, 982, 1007, 1086, 1087, 1088, 1097, 1105, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1146, 1147, 1150, 1159, 1162, 1265, 1277, 1279, 1302, 1318, 1322, 1335, 1365, 1378, 1410, 1413, 1455, 1461, 1462, 1465, 1470, 1519, 1520, 1521, 1559, 1563, 1571, 1625, 1644, 1683, 1684, 1699, 1702, 1703, 1704, 1705, 1709, 1716, 1717, 1724, 1758, 1761, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1803, 1817, 1820, 1846, 1855, 1865, 1866, 1896, 1899, 1902, 1903, 1904, 1906, 1907, 1916, 1919, 1942, 1953, 1974, 2006, 2008, 2009, 2013, 2017, 2024, 2033, 2034, 2037, 2038, 2039, 2042, 2043, 2045, 2046, 2049, 2051, 2052, 2053, 2054, 2058, 2059, 2060, 2062, 2067, 2068, 2069, 2072, 2073, 2077, 2079, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2099], "step": [0, 1, 2, 4, 9, 11, 14, 22, 23, 27, 28, 29, 31, 33, 45, 49, 52, 56, 61, 78, 537, 606, 685, 767, 768, 857, 865, 895, 898, 899, 928, 943, 967, 1225, 1313, 1336, 1337, 1338, 1352, 1355, 1367, 1466, 1467, 1489, 1593, 1594, 1620, 1621, 1709, 1750, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1826, 1835, 1863, 1888, 1960, 2006, 2007, 2013, 2026, 2033, 2034, 2037, 2038, 2039, 2041, 2046, 2048, 2050, 2052, 2054, 2056, 2059, 2061, 2062, 2067, 2068, 2072, 2077, 2085, 2094, 2097, 2098, 2101, 2103], "usag": [0, 1, 4, 7, 9, 12, 15, 22, 27, 29, 31, 32, 33, 34, 35, 38, 41, 42, 44, 47, 52, 61, 63, 64, 747, 756, 791, 792, 793, 809, 810, 811, 812, 814, 815, 816, 854, 858, 890, 905, 972, 1053, 1074, 1078, 1105, 1156, 1162, 1166, 1167, 1168, 1193, 1279, 1338, 1401, 1709, 1999, 2005, 2006, 2009, 2013, 2021, 2026, 2033, 2034, 2039, 2041, 2042, 2054, 2056, 2061, 2069, 2077, 2078, 2081, 2082, 2083, 2090, 2093, 2094, 2095, 2103], "along": [0, 14, 18, 22, 27, 33, 37, 44, 49, 63, 69, 312, 314, 316, 320, 492, 512, 514, 516, 685, 696, 818, 875, 876, 959, 966, 993, 1004, 1019, 1021, 1088, 1096, 1097, 1104, 1105, 1121, 1126, 1129, 1133, 1136, 1139, 1145, 1174, 1206, 1231, 1240, 1242, 1287, 1298, 1334, 1388, 1410, 1414, 1415, 1424, 1425, 1426, 1432, 1453, 1466, 1467, 1509, 1512, 1513, 1514, 1553, 1555, 1590, 1598, 1607, 1620, 1621, 1624, 1627, 1644, 1650, 1651, 1652, 1662, 1683, 1684, 1735, 1737, 1744, 1745, 1754, 1763, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1801, 1820, 1840, 1841, 1846, 1857, 1892, 1896, 1899, 1900, 1908, 1913, 1932, 1936, 1939, 1942, 1951, 1966, 1969, 1971, 2004, 2008, 2013, 2027, 2035, 2039, 2041, 2045, 2046, 2054, 2059, 2062, 2073], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 17, 19, 21, 22, 23, 24, 27, 28, 29, 32, 33, 34, 35, 36, 40, 43, 44, 45, 47, 50, 52, 55, 56, 57, 58, 59, 61, 80, 82, 84, 85, 149, 253, 254, 312, 320, 485, 486, 487, 492, 494, 497, 512, 514, 516, 523, 544, 617, 679, 734, 770, 779, 783, 792, 854, 859, 860, 861, 873, 886, 887, 888, 890, 892, 893, 894, 900, 903, 905, 906, 908, 910, 914, 915, 916, 919, 920, 924, 925, 926, 927, 928, 943, 951, 954, 956, 962, 963, 964, 965, 972, 977, 986, 1007, 1008, 1010, 1012, 1013, 1029, 1048, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1069, 1070, 1071, 1075, 1083, 1088, 1094, 1103, 1105, 1109, 1121, 1122, 1124, 1126, 1145, 1146, 1147, 1148, 1159, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1178, 1193, 1194, 1195, 1213, 1215, 1219, 1228, 1229, 1246, 1250, 1252, 1253, 1265, 1279, 1282, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1333, 1335, 1338, 1341, 1344, 1346, 1356, 1357, 1381, 1382, 1385, 1405, 1411, 1423, 1427, 1432, 1437, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1461, 1462, 1463, 1479, 1489, 1515, 1516, 1517, 1519, 1525, 1531, 1532, 1533, 1535, 1547, 1559, 1567, 1578, 1590, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1614, 1616, 1617, 1625, 1628, 1629, 1630, 1631, 1636, 1640, 1644, 1645, 1656, 1663, 1670, 1671, 1672, 1675, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1704, 1705, 1709, 1710, 1716, 1717, 1723, 1726, 1727, 1762, 1763, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1807, 1818, 1819, 1845, 1851, 1855, 1863, 1895, 1896, 1920, 1942, 1944, 1953, 1957, 1960, 1969, 1970, 2004, 2005, 2006, 2008, 2009, 2013, 2015, 2016, 2018, 2020, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2032, 2034, 2036, 2037, 2038, 2039, 2041, 2042, 2043, 2044, 2045, 2046, 2049, 2051, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2068, 2069, 2071, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2085, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2101, 2103, 2104, 2105, 2106, 2107], "complex": [0, 1, 3, 7, 8, 22, 23, 26, 27, 32, 61, 310, 328, 482, 498, 684, 691, 919, 920, 964, 965, 987, 988, 1100, 1106, 1107, 1108, 1126, 1148, 1153, 1219, 1236, 1244, 1255, 1257, 1258, 1261, 1262, 1265, 1286, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1315, 1318, 1320, 1322, 1323, 1324, 1325, 1329, 1330, 1334, 1335, 1336, 1338, 1346, 1352, 1364, 1365, 1369, 1404, 1446, 1447, 1448, 1485, 1519, 1600, 1601, 1602, 1723, 1764, 1813, 1826, 1832, 1833, 1839, 1860, 1870, 1916, 1917, 1920, 1957, 1966, 1967, 1968, 2004, 2005, 2007, 2009, 2010, 2020, 2048, 2054, 2057, 2074, 2075, 2078, 2079, 2091, 2094, 2095, 2096], "scenario": [0, 22, 27, 44, 1432, 1770, 1958, 2037, 2043, 2048, 2054, 2056, 2061, 2067, 2094, 2095], "g": [0, 1, 2, 3, 5, 7, 11, 12, 14, 15, 22, 23, 27, 29, 31, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 48, 49, 52, 55, 57, 59, 60, 61, 62, 63, 71, 72, 485, 579, 616, 747, 756, 759, 792, 793, 814, 816, 840, 854, 859, 861, 862, 889, 900, 902, 905, 906, 915, 919, 920, 953, 986, 1050, 1105, 1156, 1163, 1167, 1168, 1187, 1189, 1194, 1197, 1214, 1216, 1219, 1262, 1265, 1272, 1273, 1281, 1337, 1438, 1439, 1455, 1457, 1458, 1459, 1463, 1465, 1470, 1478, 1484, 1489, 1490, 1519, 1520, 1529, 1535, 1551, 1609, 1625, 1709, 1710, 1711, 1712, 1716, 1717, 1725, 1761, 1764, 1774, 1775, 1776, 1777, 1780, 1786, 1787, 1788, 1789, 1841, 1848, 1859, 1863, 1865, 1883, 1905, 1916, 2004, 2006, 2008, 2009, 2010, 2013, 2016, 2017, 2024, 2033, 2034, 2037, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2049, 2050, 2054, 2056, 2058, 2059, 2061, 2062, 2067, 2072, 2075, 2076, 2077, 2089, 2090, 2093, 2094, 2101, 2103, 2104], "penalti": [0, 780, 1061, 1773, 1774, 1775, 1776, 1778, 1780, 1786, 1787, 1789, 2063, 2099], "multipl": [0, 1, 2, 3, 5, 22, 23, 27, 28, 29, 33, 34, 37, 44, 45, 47, 49, 52, 57, 60, 61, 78, 190, 207, 314, 512, 685, 687, 688, 694, 695, 759, 841, 874, 875, 878, 914, 926, 927, 928, 960, 962, 972, 990, 994, 1019, 1020, 1021, 1047, 1103, 1105, 1108, 1159, 1162, 1167, 1168, 1169, 1170, 1173, 1174, 1209, 1215, 1229, 1230, 1279, 1282, 1287, 1288, 1303, 1304, 1305, 1321, 1326, 1331, 1332, 1360, 1363, 1368, 1370, 1431, 1432, 1449, 1450, 1451, 1452, 1454, 1462, 1465, 1470, 1478, 1484, 1485, 1507, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1571, 1597, 1598, 1608, 1617, 1637, 1661, 1669, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1788, 1792, 1796, 1797, 1798, 1799, 1800, 1805, 1807, 1863, 1890, 1897, 1898, 1902, 1903, 1904, 1906, 1907, 1936, 1937, 1944, 1952, 1957, 1969, 1970, 2004, 2005, 2008, 2009, 2013, 2024, 2025, 2026, 2027, 2034, 2036, 2038, 2040, 2042, 2043, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2056, 2058, 2059, 2061, 2062, 2063, 2067, 2068, 2069, 2072, 2074, 2083, 2084, 2087, 2088, 2091, 2093, 2094, 2102], "custom": [0, 3, 5, 14, 15, 22, 27, 28, 29, 30, 31, 32, 35, 37, 40, 41, 43, 49, 50, 52, 62, 63, 65, 79, 81, 82, 83, 84, 86, 498, 792, 796, 813, 814, 815, 816, 837, 839, 859, 860, 861, 862, 890, 900, 903, 905, 926, 972, 974, 1015, 1080, 1177, 1265, 1519, 1563, 1567, 1568, 1569, 1694, 1731, 1740, 1757, 1795, 1958, 1960, 2005, 2010, 2015, 2024, 2025, 2034, 2045, 2050, 2051, 2052, 2054, 2065, 2066, 2082, 2084, 2091, 2093, 2095, 2101], "autograd": [0, 4, 5, 7, 8, 12, 27, 31, 33, 49, 52, 53, 56, 63, 138, 334, 444, 445, 446, 447, 448, 485, 487, 495, 679, 688, 865, 879, 880, 894, 895, 900, 905, 906, 915, 916, 917, 927, 928, 935, 936, 937, 938, 939, 941, 950, 969, 974, 986, 1050, 1106, 1107, 1108, 1118, 1123, 1141, 1159, 1160, 1161, 1162, 1163, 1172, 1174, 1223, 1224, 1265, 1285, 1305, 1336, 1352, 1360, 1370, 1472, 1519, 1525, 1567, 1627, 1642, 1709, 1768, 1769, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1866, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1894, 1902, 1903, 1904, 1905, 1906, 1907, 1935, 1969, 2002, 2003, 2005, 2007, 2011, 2013, 2016, 2018, 2027, 2032, 2037, 2038, 2041, 2042, 2043, 2045, 2046, 2061, 2078, 2079, 2084, 2094, 2095, 2099, 2101, 2103, 2104], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 22, 28, 29, 31, 34, 35, 37, 41, 42, 44, 45, 49, 50, 52, 55, 57, 59, 60, 63, 66, 71, 72, 75, 77, 79, 80, 82, 83, 86, 87, 118, 149, 194, 257, 259, 288, 297, 320, 485, 486, 487, 492, 495, 516, 540, 555, 679, 688, 692, 693, 697, 698, 747, 756, 757, 759, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 796, 797, 799, 813, 814, 815, 816, 823, 825, 837, 841, 854, 857, 859, 861, 862, 863, 877, 878, 893, 895, 896, 897, 898, 899, 900, 905, 906, 914, 915, 916, 917, 919, 920, 924, 925, 926, 928, 932, 935, 938, 941, 950, 952, 960, 962, 966, 969, 972, 974, 975, 976, 978, 979, 980, 982, 986, 987, 988, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1008, 1010, 1012, 1015, 1032, 1033, 1036, 1041, 1042, 1047, 1048, 1050, 1051, 1052, 1053, 1055, 1060, 1061, 1069, 1070, 1072, 1073, 1074, 1078, 1088, 1093, 1095, 1096, 1103, 1105, 1109, 1121, 1122, 1124, 1144, 1148, 1151, 1152, 1153, 1156, 1159, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1181, 1190, 1204, 1209, 1210, 1219, 1223, 1224, 1225, 1227, 1229, 1237, 1238, 1239, 1252, 1262, 1263, 1264, 1265, 1266, 1268, 1270, 1271, 1276, 1277, 1278, 1279, 1281, 1283, 1285, 1286, 1287, 1289, 1294, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1317, 1320, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1341, 1343, 1352, 1355, 1356, 1360, 1363, 1366, 1368, 1370, 1371, 1372, 1401, 1407, 1410, 1411, 1427, 1431, 1432, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1452, 1456, 1460, 1463, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1484, 1486, 1487, 1488, 1489, 1490, 1505, 1508, 1509, 1511, 1518, 1519, 1524, 1525, 1527, 1535, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1553, 1555, 1556, 1557, 1558, 1560, 1561, 1563, 1565, 1567, 1568, 1569, 1571, 1573, 1575, 1576, 1577, 1579, 1581, 1582, 1583, 1700, 1704, 1705, 1709, 1716, 1717, 1723, 1724, 1729, 1740, 1750, 1751, 1752, 1754, 1757, 1758, 1759, 1761, 1762, 1764, 1765, 1769, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1791, 1794, 1795, 1797, 1800, 1801, 1802, 1807, 1808, 1809, 1813, 1819, 1826, 1830, 1835, 1848, 1857, 1858, 1859, 1861, 1862, 1870, 1878, 1882, 1883, 1888, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1905, 1912, 1916, 1921, 1922, 1923, 1932, 1936, 1938, 1942, 1952, 1953, 1954, 1957, 1958, 1962, 1966, 1967, 1968, 1969, 1970, 1983, 1984, 1986, 1989, 1992, 1993, 1994, 1995, 1996, 1999, 2003, 2004, 2005, 2010, 2013, 2015, 2017, 2020, 2021, 2024, 2026, 2029, 2032, 2035, 2037, 2038, 2039, 2041, 2045, 2046, 2048, 2049, 2054, 2058, 2059, 2060, 2061, 2062, 2064, 2066, 2067, 2068, 2069, 2071, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2098, 2099, 2100, 2101, 2102, 2103, 2106], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 22, 23, 27, 28, 29, 31, 32, 45, 49, 50, 52, 53, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 297, 414, 540, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 791, 792, 813, 840, 854, 859, 860, 861, 862, 864, 972, 1047, 1050, 1105, 1162, 1171, 1172, 1263, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1277, 1281, 1282, 1283, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1580, 1699, 1708, 1709, 1710, 1711, 1712, 1726, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1750, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1891, 1916, 1957, 1958, 2004, 2005, 2006, 2007, 2011, 2017, 2026, 2027, 2033, 2038, 2041, 2042, 2046, 2048, 2049, 2050, 2053, 2054, 2056, 2058, 2059, 2060, 2062, 2064, 2067, 2077, 2079, 2083, 2085, 2089, 2093, 2094, 2101, 2102, 2103], "modul": [0, 1, 3, 5, 6, 8, 11, 12, 14, 18, 19, 23, 27, 29, 31, 32, 36, 38, 41, 44, 45, 49, 50, 52, 53, 55, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 414, 486, 487, 679, 685, 688, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 737, 738, 739, 744, 745, 746, 755, 760, 761, 762, 763, 764, 787, 788, 789, 790, 791, 792, 796, 798, 799, 801, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 837, 838, 839, 840, 854, 857, 858, 859, 860, 861, 862, 864, 915, 924, 925, 928, 940, 952, 972, 1050, 1162, 1171, 1172, 1174, 1214, 1263, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1281, 1282, 1283, 1337, 1360, 1370, 1423, 1427, 1433, 1434, 1435, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1471, 1473, 1481, 1482, 1483, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1520, 1521, 1529, 1530, 1534, 1536, 1548, 1553, 1559, 1563, 1564, 1566, 1567, 1616, 1617, 1692, 1699, 1708, 1709, 1710, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1753, 1757, 1758, 1759, 1761, 1790, 1851, 1895, 1958, 1960, 1961, 1969, 2004, 2005, 2010, 2013, 2015, 2017, 2019, 2021, 2024, 2026, 2027, 2029, 2031, 2032, 2036, 2037, 2038, 2041, 2042, 2045, 2047, 2048, 2050, 2052, 2053, 2054, 2056, 2058, 2060, 2061, 2064, 2065, 2067, 2070, 2072, 2073, 2077, 2081, 2082, 2083, 2085, 2089, 2091, 2092, 2093, 2094, 2097, 2101, 2102, 2103, 2104], "def": [0, 1, 12, 22, 23, 27, 28, 29, 33, 35, 36, 37, 41, 42, 45, 47, 48, 49, 50, 52, 54, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 397, 791, 792, 861, 862, 890, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 915, 972, 977, 979, 980, 986, 1109, 1162, 1163, 1164, 1166, 1167, 1168, 1170, 1172, 1173, 1174, 1263, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1276, 1277, 1280, 1281, 1282, 1283, 1519, 1520, 1521, 1529, 1530, 1535, 1569, 1677, 1699, 1709, 1729, 1762, 1895, 1969, 2004, 2006, 2008, 2009, 2013, 2026, 2033, 2034, 2036, 2038, 2039, 2040, 2041, 2046, 2048, 2050, 2051, 2052, 2054, 2055, 2056, 2058, 2059, 2060, 2061, 2062, 2067, 2068, 2069, 2085, 2088, 2089, 2090, 2091, 2092, 2094, 2096, 2101, 2102, 2103, 2104], "self": [0, 1, 9, 12, 18, 22, 23, 27, 29, 35, 36, 41, 47, 49, 50, 52, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 96, 138, 149, 152, 153, 154, 169, 171, 174, 177, 178, 179, 189, 190, 194, 195, 207, 215, 217, 231, 232, 239, 253, 254, 257, 258, 266, 285, 289, 296, 310, 312, 314, 316, 318, 320, 322, 324, 325, 327, 328, 329, 330, 332, 340, 376, 392, 397, 399, 400, 401, 414, 453, 470, 480, 482, 496, 497, 498, 499, 512, 514, 516, 519, 522, 524, 536, 542, 543, 544, 545, 557, 559, 579, 580, 582, 583, 584, 586, 587, 603, 606, 607, 613, 616, 617, 619, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 861, 862, 933, 935, 979, 980, 1162, 1163, 1172, 1181, 1236, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1276, 1277, 1281, 1282, 1283, 1423, 1427, 1463, 1518, 1519, 1520, 1521, 1525, 1529, 1530, 1547, 1549, 1559, 1565, 1567, 1656, 1680, 1699, 1726, 1727, 1729, 1735, 1737, 1750, 1759, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1816, 1837, 2006, 2007, 2008, 2009, 2013, 2021, 2025, 2026, 2032, 2034, 2035, 2036, 2039, 2041, 2046, 2051, 2054, 2056, 2058, 2059, 2060, 2062, 2067, 2074, 2085, 2089, 2091, 2092, 2098, 2101, 2102, 2103], "produc": [0, 7, 14, 22, 27, 29, 34, 36, 38, 41, 47, 49, 50, 57, 58, 60, 61, 78, 87, 485, 731, 737, 738, 739, 744, 745, 755, 763, 791, 792, 943, 963, 1043, 1136, 1137, 1138, 1156, 1167, 1168, 1174, 1181, 1185, 1190, 1191, 1219, 1277, 1281, 1282, 1285, 1301, 1302, 1305, 1312, 1313, 1324, 1329, 1363, 1366, 1367, 1368, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1495, 1496, 1497, 1498, 1499, 1500, 1525, 1609, 1617, 1625, 1636, 1696, 1697, 1698, 1764, 1790, 1819, 1826, 1835, 1920, 1957, 1969, 2006, 2008, 2009, 2017, 2024, 2025, 2033, 2034, 2035, 2037, 2039, 2042, 2044, 2045, 2046, 2049, 2050, 2051, 2052, 2054, 2056, 2072, 2076, 2085, 2089, 2090, 2099, 2103], "after": [0, 1, 7, 9, 12, 14, 22, 23, 27, 28, 29, 31, 32, 44, 47, 52, 60, 61, 63, 68, 69, 259, 485, 487, 679, 759, 789, 857, 859, 861, 862, 893, 895, 900, 901, 905, 972, 982, 1005, 1007, 1043, 1050, 1104, 1163, 1189, 1190, 1250, 1265, 1269, 1321, 1337, 1360, 1378, 1419, 1455, 1470, 1504, 1519, 1522, 1563, 1565, 1567, 1590, 1625, 1699, 1702, 1709, 1729, 1731, 1735, 1737, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1794, 1795, 1801, 1803, 1859, 1916, 1942, 1958, 1960, 1971, 1974, 2004, 2008, 2009, 2021, 2024, 2032, 2033, 2034, 2037, 2038, 2039, 2041, 2042, 2043, 2045, 2046, 2048, 2049, 2056, 2058, 2059, 2061, 2062, 2067, 2068, 2069, 2070, 2073, 2074, 2075, 2077, 2085, 2088, 2091, 2092, 2094, 2095, 2097, 2099, 2101, 2102, 2103], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 44, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 118, 152, 154, 169, 171, 174, 177, 178, 179, 189, 190, 194, 195, 205, 207, 208, 215, 217, 218, 220, 231, 232, 239, 241, 253, 259, 266, 288, 296, 310, 318, 322, 324, 325, 327, 328, 329, 330, 332, 336, 338, 340, 351, 376, 392, 414, 434, 444, 445, 446, 447, 448, 457, 471, 472, 473, 474, 475, 477, 482, 486, 487, 495, 496, 497, 512, 514, 522, 524, 536, 542, 543, 555, 556, 557, 558, 559, 579, 580, 581, 582, 588, 602, 603, 606, 608, 612, 613, 616, 683, 691, 692, 694, 695, 696, 697, 698, 734, 765, 766, 769, 770, 774, 775, 776, 777, 780, 783, 790, 791, 792, 793, 813, 814, 815, 816, 835, 839, 840, 841, 854, 855, 856, 857, 859, 860, 861, 862, 863, 864, 865, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 928, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 950, 951, 953, 956, 958, 960, 961, 962, 963, 965, 966, 967, 969, 971, 972, 973, 974, 975, 977, 979, 980, 981, 986, 987, 988, 990, 991, 992, 994, 997, 998, 999, 1000, 1002, 1004, 1005, 1007, 1008, 1010, 1014, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1069, 1070, 1071, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1099, 1105, 1106, 1107, 1108, 1109, 1110, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1153, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1181, 1188, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1204, 1208, 1209, 1211, 1213, 1214, 1215, 1216, 1217, 1218, 1222, 1223, 1224, 1226, 1227, 1228, 1232, 1236, 1240, 1241, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1263, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1290, 1291, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1345, 1346, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1374, 1375, 1376, 1378, 1379, 1385, 1393, 1394, 1395, 1397, 1399, 1400, 1402, 1405, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1419, 1423, 1424, 1425, 1426, 1431, 1432, 1452, 1453, 1454, 1455, 1462, 1466, 1467, 1478, 1484, 1485, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1529, 1530, 1533, 1534, 1535, 1548, 1551, 1552, 1553, 1554, 1555, 1559, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1581, 1582, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1595, 1597, 1598, 1599, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1669, 1671, 1672, 1674, 1675, 1677, 1678, 1680, 1681, 1682, 1683, 1684, 1690, 1692, 1693, 1694, 1695, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1809, 1810, 1812, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1850, 1855, 1856, 1857, 1858, 1864, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1892, 1894, 1895, 1896, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1915, 1916, 1919, 1920, 1921, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1939, 1940, 1941, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1959, 1960, 1963, 1965, 1967, 1968, 1969, 1972, 1974, 1975, 1977, 1978, 1980, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 1991, 2000, 2002, 2003, 2004, 2006, 2010, 2013, 2019, 2020, 2021, 2024, 2026, 2027, 2032, 2033, 2034, 2036, 2037, 2039, 2040, 2043, 2044, 2045, 2046, 2049, 2050, 2051, 2052, 2054, 2055, 2056, 2058, 2059, 2060, 2061, 2062, 2066, 2067, 2068, 2071, 2072, 2073, 2074, 2075, 2076, 2078, 2079, 2081, 2082, 2083, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2096, 2101, 2102, 2103, 2104, 2105, 2107], "disabl": [0, 2, 5, 19, 28, 33, 52, 61, 809, 810, 915, 916, 917, 972, 1050, 1105, 1109, 1162, 1265, 1267, 1281, 1282, 1519, 1525, 1559, 1567, 1677, 1709, 1710, 1759, 1762, 1864, 1867, 1895, 2005, 2008, 2015, 2033, 2036, 2037, 2038, 2039, 2044, 2049, 2050, 2056, 2060, 2066, 2072, 2079, 2093, 2097, 2100, 2101, 2103, 2105], "them": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 22, 27, 29, 35, 36, 41, 44, 47, 49, 52, 56, 57, 60, 61, 149, 220, 253, 485, 733, 893, 900, 903, 905, 910, 954, 1050, 1090, 1093, 1105, 1181, 1192, 1287, 1296, 1307, 1321, 1333, 1337, 1365, 1413, 1439, 1461, 1519, 1553, 1555, 1683, 1736, 1751, 1754, 1791, 1899, 1901, 1919, 1953, 1958, 1960, 2004, 2008, 2009, 2013, 2016, 2018, 2019, 2021, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2037, 2039, 2040, 2041, 2042, 2044, 2045, 2046, 2050, 2052, 2058, 2060, 2061, 2062, 2063, 2067, 2068, 2069, 2072, 2073, 2077, 2078, 2082, 2085, 2090, 2091, 2092, 2093, 2094, 2099, 2100, 2101, 2102, 2103], "differ": [0, 1, 2, 3, 5, 8, 14, 18, 22, 27, 29, 31, 32, 33, 35, 36, 37, 41, 42, 44, 45, 48, 49, 50, 52, 53, 56, 57, 58, 59, 61, 195, 485, 492, 616, 679, 685, 688, 694, 695, 734, 759, 792, 795, 796, 821, 823, 824, 861, 862, 865, 879, 880, 919, 920, 940, 952, 953, 994, 1088, 1093, 1095, 1097, 1105, 1145, 1146, 1147, 1151, 1152, 1159, 1162, 1167, 1168, 1174, 1181, 1183, 1186, 1219, 1240, 1265, 1271, 1276, 1281, 1295, 1301, 1302, 1312, 1313, 1321, 1324, 1329, 1333, 1360, 1370, 1423, 1432, 1433, 1434, 1435, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1470, 1471, 1479, 1481, 1482, 1483, 1484, 1489, 1490, 1506, 1519, 1522, 1525, 1541, 1542, 1544, 1545, 1546, 1548, 1551, 1559, 1565, 1567, 1569, 1572, 1575, 1576, 1577, 1578, 1590, 1598, 1616, 1625, 1634, 1636, 1638, 1650, 1651, 1652, 1677, 1699, 1709, 1711, 1712, 1723, 1759, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1795, 1803, 1809, 1819, 1841, 1875, 1914, 1915, 1920, 1942, 1953, 1954, 1957, 1962, 1964, 1965, 1969, 2004, 2006, 2008, 2009, 2011, 2013, 2015, 2016, 2024, 2025, 2027, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2043, 2046, 2048, 2049, 2050, 2052, 2054, 2058, 2059, 2060, 2061, 2062, 2063, 2067, 2069, 2072, 2074, 2075, 2077, 2078, 2079, 2083, 2084, 2085, 2087, 2091, 2092, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2103], "caus": [0, 1, 2, 3, 5, 11, 14, 18, 22, 26, 27, 29, 31, 37, 43, 44, 45, 49, 57, 61, 83, 555, 616, 877, 880, 893, 975, 1159, 1184, 1193, 1194, 1277, 1281, 1301, 1302, 1329, 1385, 1636, 1637, 1696, 1699, 1709, 1763, 1772, 1859, 1860, 1869, 1916, 1957, 2006, 2009, 2024, 2035, 2037, 2039, 2041, 2048, 2050, 2052, 2056, 2059, 2062, 2063, 2069, 2072, 2075, 2088, 2091, 2093, 2095], "mismatch": [0, 27, 61, 84, 86, 880, 1266, 1771, 1772, 2008, 2033, 2038, 2039, 2041, 2056, 2079], "error": [0, 1, 5, 8, 14, 17, 18, 19, 22, 23, 24, 27, 28, 30, 33, 42, 44, 45, 49, 52, 55, 57, 60, 61, 63, 64, 81, 82, 83, 84, 86, 189, 220, 312, 314, 320, 322, 327, 487, 544, 555, 613, 616, 679, 818, 865, 878, 880, 900, 903, 905, 908, 909, 910, 911, 912, 913, 914, 918, 926, 927, 972, 1005, 1015, 1039, 1050, 1061, 1075, 1079, 1103, 1162, 1166, 1167, 1169, 1174, 1190, 1194, 1197, 1229, 1265, 1270, 1280, 1295, 1296, 1305, 1307, 1309, 1312, 1313, 1314, 1324, 1327, 1337, 1355, 1385, 1405, 1431, 1432, 1468, 1479, 1485, 1510, 1519, 1549, 1551, 1578, 1623, 1634, 1657, 1677, 1680, 1681, 1709, 1711, 1712, 1714, 1759, 1764, 1771, 1772, 1815, 1855, 1862, 1905, 1911, 1916, 1957, 1960, 1969, 1970, 2004, 2005, 2006, 2008, 2009, 2013, 2015, 2016, 2024, 2025, 2026, 2027, 2033, 2034, 2037, 2039, 2040, 2043, 2044, 2050, 2054, 2056, 2059, 2065, 2067, 2073, 2078, 2079, 2082, 2083, 2088, 2090, 2091, 2093, 2094, 2105, 2106], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 14, 15, 19, 20, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 37, 41, 42, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 71, 72, 73, 74, 81, 82, 83, 84, 86, 96, 149, 153, 194, 205, 208, 253, 314, 318, 320, 444, 445, 446, 447, 448, 457, 470, 480, 485, 495, 498, 516, 519, 536, 544, 579, 580, 582, 583, 584, 586, 587, 602, 606, 616, 679, 685, 688, 689, 690, 692, 694, 695, 696, 698, 734, 755, 759, 763, 778, 780, 784, 793, 794, 816, 819, 820, 821, 824, 854, 858, 861, 865, 874, 875, 876, 877, 878, 879, 880, 889, 891, 892, 893, 900, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 928, 939, 940, 941, 943, 950, 952, 953, 954, 956, 960, 962, 963, 966, 967, 972, 974, 977, 983, 987, 988, 989, 993, 994, 1004, 1007, 1008, 1010, 1012, 1015, 1017, 1019, 1021, 1028, 1039, 1045, 1050, 1051, 1065, 1072, 1075, 1086, 1087, 1088, 1092, 1093, 1094, 1095, 1096, 1105, 1106, 1107, 1108, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1148, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1173, 1174, 1178, 1180, 1181, 1189, 1191, 1193, 1194, 1197, 1206, 1214, 1219, 1223, 1224, 1226, 1227, 1228, 1229, 1240, 1242, 1256, 1262, 1265, 1268, 1269, 1270, 1273, 1275, 1277, 1278, 1281, 1282, 1285, 1286, 1287, 1291, 1295, 1296, 1301, 1302, 1304, 1305, 1307, 1308, 1309, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1328, 1329, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1348, 1352, 1353, 1355, 1357, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1385, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1423, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1465, 1466, 1467, 1470, 1471, 1472, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1506, 1510, 1511, 1512, 1513, 1514, 1519, 1520, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1533, 1534, 1535, 1537, 1541, 1542, 1543, 1544, 1545, 1546, 1551, 1552, 1559, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1572, 1575, 1576, 1577, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1620, 1621, 1625, 1627, 1629, 1636, 1637, 1642, 1644, 1646, 1647, 1648, 1650, 1651, 1652, 1661, 1662, 1663, 1666, 1669, 1670, 1677, 1683, 1684, 1695, 1696, 1702, 1708, 1709, 1710, 1714, 1715, 1718, 1719, 1721, 1723, 1724, 1726, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1750, 1751, 1752, 1753, 1754, 1757, 1758, 1759, 1761, 1762, 1763, 1764, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1807, 1808, 1813, 1817, 1819, 1820, 1824, 1825, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1840, 1841, 1846, 1848, 1851, 1855, 1857, 1859, 1862, 1863, 1867, 1869, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1896, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1914, 1915, 1916, 1919, 1920, 1932, 1935, 1936, 1938, 1939, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1953, 1954, 1957, 1960, 1963, 1964, 1965, 1969, 1975, 1981, 1992, 1994, 2002, 2003, 2004, 2006, 2009, 2011, 2013, 2017, 2018, 2019, 2020, 2021, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2048, 2049, 2050, 2051, 2052, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2105, 2106], "so": [0, 1, 2, 3, 7, 9, 14, 17, 22, 23, 26, 27, 28, 29, 31, 33, 34, 36, 37, 44, 45, 48, 49, 50, 52, 55, 56, 57, 60, 61, 63, 73, 74, 334, 457, 485, 495, 679, 859, 895, 900, 903, 905, 908, 909, 914, 926, 969, 972, 977, 1006, 1029, 1093, 1095, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1156, 1159, 1162, 1166, 1167, 1169, 1170, 1179, 1181, 1192, 1194, 1204, 1252, 1262, 1265, 1268, 1269, 1275, 1277, 1279, 1321, 1323, 1333, 1338, 1343, 1355, 1377, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1462, 1465, 1472, 1519, 1536, 1553, 1555, 1571, 1581, 1582, 1590, 1600, 1601, 1602, 1625, 1683, 1684, 1699, 1709, 1763, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1884, 1899, 1911, 1916, 1920, 1941, 1953, 1958, 1963, 1982, 2006, 2008, 2009, 2015, 2017, 2019, 2021, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2053, 2056, 2058, 2059, 2060, 2062, 2066, 2067, 2072, 2073, 2075, 2077, 2078, 2081, 2085, 2088, 2090, 2091, 2093, 2094, 2095, 2097, 2099, 2101, 2102, 2103, 2105, 2109], "cast": [0, 6, 23, 42, 52, 85, 334, 602, 603, 957, 1086, 1087, 1265, 1318, 1322, 1335, 1365, 1410, 1413, 1519, 1644, 1683, 1684, 1764, 1817, 1896, 1899, 1905, 1919, 1924, 1925, 2006, 2033, 2049, 2056, 2073, 2074, 2075, 2094], "back": [0, 1, 2, 14, 19, 22, 23, 27, 29, 33, 44, 49, 52, 57, 61, 63, 68, 72, 485, 734, 836, 919, 969, 972, 1125, 1157, 1163, 1266, 1279, 1331, 1337, 1566, 1714, 1715, 1716, 1717, 1901, 2004, 2006, 2009, 2034, 2039, 2040, 2042, 2048, 2049, 2050, 2056, 2058, 2059, 2062, 2067, 2072, 2074, 2088, 2091, 2094, 2096, 2101, 2104], "from": [0, 1, 3, 5, 6, 7, 8, 9, 14, 15, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 41, 42, 44, 47, 48, 49, 50, 52, 53, 55, 57, 58, 60, 63, 65, 66, 68, 69, 71, 72, 75, 78, 79, 80, 83, 87, 152, 153, 172, 195, 220, 221, 232, 257, 285, 312, 314, 318, 320, 376, 401, 447, 453, 470, 472, 473, 480, 485, 486, 487, 492, 498, 512, 514, 516, 543, 545, 559, 579, 606, 607, 609, 616, 679, 711, 712, 713, 714, 715, 716, 719, 727, 728, 731, 734, 737, 738, 739, 740, 741, 742, 744, 745, 755, 759, 763, 771, 772, 773, 780, 787, 788, 791, 792, 793, 796, 799, 814, 815, 816, 823, 825, 839, 854, 858, 860, 861, 862, 864, 865, 879, 880, 891, 900, 902, 904, 905, 906, 908, 909, 910, 911, 912, 913, 919, 920, 924, 925, 939, 941, 942, 950, 951, 956, 957, 969, 1006, 1007, 1010, 1019, 1020, 1021, 1039, 1043, 1061, 1089, 1105, 1106, 1107, 1108, 1125, 1127, 1128, 1133, 1134, 1135, 1139, 1140, 1141, 1142, 1145, 1146, 1147, 1156, 1158, 1159, 1160, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1176, 1180, 1181, 1186, 1195, 1203, 1223, 1224, 1228, 1242, 1262, 1263, 1265, 1266, 1268, 1270, 1271, 1272, 1273, 1276, 1277, 1289, 1305, 1309, 1318, 1321, 1322, 1335, 1336, 1337, 1338, 1352, 1356, 1357, 1370, 1376, 1378, 1381, 1382, 1383, 1385, 1405, 1414, 1415, 1423, 1427, 1433, 1434, 1435, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1465, 1470, 1471, 1472, 1473, 1479, 1481, 1482, 1483, 1484, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1519, 1520, 1521, 1525, 1529, 1530, 1534, 1535, 1537, 1538, 1559, 1564, 1565, 1567, 1569, 1571, 1572, 1579, 1583, 1590, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1622, 1625, 1627, 1634, 1636, 1650, 1651, 1652, 1664, 1695, 1699, 1708, 1709, 1714, 1716, 1717, 1725, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1744, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1761, 1765, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1809, 1812, 1820, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1841, 1842, 1845, 1847, 1848, 1855, 1867, 1875, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1916, 1917, 1921, 1932, 1935, 1944, 1946, 1948, 1953, 1954, 1957, 1959, 1960, 1963, 1972, 1974, 1975, 2005, 2006, 2007, 2008, 2009, 2011, 2015, 2016, 2017, 2019, 2020, 2021, 2024, 2026, 2027, 2028, 2032, 2034, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2053, 2054, 2058, 2060, 2061, 2062, 2063, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2100, 2101, 2102, 2103, 2104, 2105], "alreadi": [0, 1, 11, 22, 23, 27, 28, 32, 44, 45, 52, 60, 61, 194, 205, 208, 462, 485, 523, 579, 602, 603, 791, 839, 854, 858, 879, 926, 928, 1015, 1041, 1179, 1181, 1265, 1275, 1337, 1519, 1703, 1709, 1750, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1951, 1953, 1960, 1988, 2004, 2006, 2016, 2020, 2025, 2026, 2033, 2034, 2037, 2039, 2042, 2043, 2048, 2056, 2058, 2059, 2062, 2068, 2069, 2072, 2074, 2076, 2088, 2091, 2092, 2093], "incur": [0, 5, 23, 27, 52, 962, 2027, 2048, 2067], "addit": [0, 1, 3, 5, 7, 9, 14, 15, 22, 27, 28, 29, 33, 38, 44, 45, 50, 52, 60, 61, 63, 72, 334, 512, 606, 748, 750, 751, 752, 753, 757, 759, 780, 794, 813, 859, 1061, 1262, 1265, 1269, 1275, 1280, 1423, 1434, 1435, 1436, 1449, 1450, 1451, 1462, 1469, 1470, 1472, 1479, 1482, 1483, 1491, 1498, 1499, 1500, 1504, 1505, 1506, 1507, 1509, 1515, 1516, 1517, 1519, 1525, 1527, 1553, 1555, 1559, 1563, 1565, 1567, 1569, 1596, 1603, 1604, 1605, 1642, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1863, 1953, 1954, 1957, 1967, 2006, 2008, 2009, 2015, 2021, 2025, 2026, 2027, 2034, 2036, 2037, 2039, 2040, 2042, 2045, 2048, 2049, 2052, 2054, 2056, 2061, 2062, 2063, 2065, 2067, 2068, 2069, 2072, 2076, 2079, 2088, 2090, 2094, 2099, 2100, 2103, 2105], "overhead": [0, 1, 3, 4, 8, 23, 27, 52, 780, 972, 977, 1061, 1277, 1709, 1716, 1717, 2034, 2036, 2037, 2038, 2044, 2045, 2048, 2060, 2061, 2068, 2072, 2078, 2088, 2093, 2094, 2096, 2097], "here": [0, 1, 7, 8, 9, 12, 15, 18, 22, 23, 27, 28, 32, 33, 43, 45, 49, 50, 54, 55, 56, 57, 60, 61, 84, 86, 579, 792, 793, 905, 906, 992, 1013, 1105, 1122, 1124, 1125, 1130, 1131, 1132, 1134, 1135, 1140, 1142, 1162, 1172, 1263, 1277, 1433, 1434, 1435, 1449, 1450, 1451, 1481, 1482, 1483, 1527, 1559, 1625, 1627, 1716, 1717, 1726, 1787, 1790, 1801, 1863, 1887, 2004, 2006, 2008, 2009, 2011, 2013, 2023, 2025, 2026, 2027, 2033, 2034, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2052, 2056, 2058, 2059, 2060, 2062, 2065, 2072, 2076, 2077, 2079, 2085, 2088, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2100, 2101, 2103], "assum": [0, 11, 12, 19, 22, 27, 29, 32, 33, 35, 37, 44, 45, 49, 50, 52, 55, 58, 61, 816, 986, 1088, 1123, 1126, 1128, 1136, 1137, 1138, 1141, 1181, 1185, 1191, 1256, 1262, 1263, 1266, 1281, 1301, 1302, 1304, 1311, 1320, 1323, 1326, 1328, 1338, 1438, 1511, 1572, 1609, 1677, 1709, 1726, 1729, 1754, 1791, 1792, 1797, 1798, 1799, 1802, 1804, 1805, 1809, 1921, 1942, 1944, 1960, 2004, 2006, 2008, 2009, 2013, 2025, 2034, 2037, 2039, 2040, 2043, 2045, 2048, 2049, 2056, 2058, 2059, 2060, 2067, 2068, 2069, 2072, 2085, 2090, 2091, 2092, 2099], "a_float32": 0, "rand": [0, 1, 11, 18, 33, 49, 61, 334, 692, 698, 908, 909, 910, 911, 912, 913, 977, 994, 1047, 1048, 1122, 1124, 1127, 1128, 1130, 1131, 1134, 1135, 1137, 1138, 1140, 1142, 1164, 1271, 1272, 1277, 1281, 1282, 1283, 1339, 1340, 1342, 1431, 1484, 1563, 1564, 1565, 1566, 1567, 1597, 1616, 1617, 1677, 1709, 1729, 1762, 1812, 1823, 1824, 1825, 1829, 2006, 2007, 2008, 2009, 2011, 2025, 2026, 2039, 2054, 2056, 2057, 2060, 2062, 2067, 2068, 2072, 2073, 2076, 2077, 2081, 2098, 2101], "8": [0, 1, 14, 19, 21, 22, 23, 27, 32, 33, 35, 49, 63, 68, 312, 314, 316, 320, 400, 401, 470, 512, 516, 559, 606, 616, 684, 685, 696, 697, 744, 745, 760, 762, 764, 772, 773, 819, 820, 821, 824, 911, 943, 951, 962, 965, 966, 970, 1047, 1048, 1084, 1088, 1103, 1108, 1121, 1137, 1138, 1144, 1145, 1148, 1155, 1219, 1228, 1229, 1289, 1318, 1321, 1322, 1323, 1331, 1333, 1336, 1337, 1414, 1415, 1420, 1421, 1422, 1424, 1425, 1426, 1439, 1440, 1441, 1442, 1453, 1489, 1515, 1516, 1522, 1524, 1526, 1533, 1535, 1538, 1541, 1542, 1543, 1544, 1545, 1546, 1559, 1563, 1564, 1565, 1566, 1567, 1571, 1579, 1601, 1604, 1607, 1664, 1669, 1675, 1676, 1677, 1716, 1717, 1764, 1765, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1795, 1803, 1808, 1812, 1816, 1836, 1846, 1847, 1848, 1855, 1863, 1867, 1874, 1877, 1882, 1888, 1892, 1900, 1902, 1903, 1908, 1916, 1920, 1931, 1936, 1937, 1938, 1940, 1942, 1951, 1955, 1957, 1963, 1970, 2006, 2010, 2016, 2037, 2039, 2042, 2051, 2054, 2056, 2057, 2059, 2060, 2061, 2062, 2065, 2067, 2072, 2073, 2075, 2076, 2078, 2085, 2091, 2092, 2103], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 1269, 1321, 1360, 1529, 1530, 1819, 1920, 1957, 2007, 2008, 2025, 2033, 2036, 2039, 2049, 2057, 2072, 2097, 2098], "list": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 18, 19, 22, 23, 27, 28, 29, 31, 33, 35, 44, 47, 49, 50, 52, 57, 60, 61, 63, 64, 68, 69, 71, 72, 82, 183, 240, 301, 444, 446, 448, 577, 582, 583, 584, 588, 618, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 791, 792, 797, 813, 814, 815, 816, 837, 854, 861, 879, 886, 887, 888, 954, 955, 958, 962, 966, 971, 972, 974, 981, 986, 1031, 1037, 1090, 1103, 1105, 1106, 1145, 1160, 1172, 1181, 1205, 1219, 1229, 1265, 1269, 1271, 1272, 1277, 1279, 1281, 1282, 1365, 1367, 1413, 1455, 1461, 1491, 1519, 1521, 1530, 1534, 1548, 1559, 1570, 1583, 1616, 1692, 1708, 1709, 1710, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1764, 1768, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1797, 1799, 1800, 1801, 1803, 1804, 1822, 1824, 1825, 1828, 1832, 1847, 1883, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1914, 1915, 1919, 1935, 1936, 1937, 1953, 1954, 1957, 1958, 1960, 1964, 1965, 1970, 1987, 2002, 2004, 2006, 2007, 2010, 2011, 2015, 2019, 2021, 2025, 2026, 2027, 2039, 2044, 2046, 2049, 2050, 2051, 2053, 2054, 2057, 2058, 2059, 2060, 2061, 2062, 2067, 2068, 2072, 2074, 2075, 2076, 2077, 2078, 2081, 2082, 2083, 2084, 2089, 2090, 2091, 2092, 2093, 2095, 2097, 2101, 2102, 2103, 2104, 2105], "No": [0, 9, 12, 29, 48, 50, 60, 63, 72, 900, 904, 905, 906, 1709, 1716, 1717, 1762, 2008, 2037, 2056, 2065, 2076, 2079, 2088], "manual": [0, 22, 27, 32, 42, 44, 45, 48, 52, 61, 485, 796, 837, 878, 914, 977, 1181, 1228, 1269, 1431, 1432, 1454, 1523, 1524, 1526, 1548, 1567, 1597, 1598, 1608, 1661, 1729, 1750, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 2006, 2009, 2017, 2024, 2033, 2037, 2039, 2040, 2041, 2043, 2046, 2052, 2056, 2062, 2063, 2077, 2090, 2100, 2101], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 14, 19, 22, 23, 27, 28, 29, 30, 31, 35, 36, 37, 44, 45, 52, 60, 61, 486, 487, 839, 890, 900, 904, 905, 906, 924, 925, 974, 989, 1007, 1022, 1049, 1062, 1105, 1151, 1152, 1174, 1177, 1265, 1296, 1455, 1519, 1567, 1569, 1625, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1839, 1884, 1921, 1969, 2004, 2021, 2024, 2026, 2037, 2039, 2040, 2041, 2043, 2048, 2053, 2054, 2056, 2059, 2062, 2067, 2069, 2079, 2081, 2088, 2091, 2093, 2095, 2099], "f_float16": 0, "g_float32": 0, "epoch": [0, 22, 37, 48, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 2021, 2033, 2048, 2058, 2077], "eval": [0, 61, 813, 860, 861, 1172, 1265, 1269, 1275, 1281, 1433, 1434, 1435, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1519, 1525, 1559, 1567, 1718, 1720, 1724, 2009, 2019, 2046, 2053, 2056, 2062, 2083, 2090, 2091, 2104], "jit": [0, 2, 11, 14, 49, 1047, 1048, 1080, 1216, 1263, 1264, 1265, 1280, 1402, 1770, 1771, 1865, 1866, 2005, 2008, 2011, 2019, 2026, 2036, 2045, 2051, 2053, 2056, 2062, 2067, 2077, 2089, 2090, 2091, 2092, 2094, 2096], "trace": [0, 1, 5, 12, 15, 18, 22, 23, 24, 27, 37, 49, 50, 63, 66, 67, 68, 69, 70, 73, 74, 78, 485, 679, 840, 929, 931, 932, 935, 972, 979, 980, 986, 1105, 1178, 1180, 1185, 1268, 1277, 1278, 1282, 1338, 1381, 1382, 1383, 1772, 1959, 2005, 2007, 2008, 2009, 2011, 2013, 2015, 2034, 2037, 2042, 2051, 2053, 2054, 2057, 2059, 2077, 2084, 2089, 2090, 2091, 2093, 2096, 2097, 2099, 2103, 2105, 2106], "testmodel": 0, "__init__": [0, 1, 12, 22, 23, 27, 33, 49, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 861, 862, 1172, 1263, 1266, 1268, 1271, 1272, 1277, 1281, 1282, 1283, 1519, 1520, 1521, 1529, 1530, 1534, 1699, 1708, 2006, 2008, 2009, 2021, 2034, 2039, 2041, 2046, 2051, 2054, 2056, 2059, 2062, 2077, 2085, 2089, 2090, 2101, 2102, 2103], "input_s": [0, 733, 759, 760, 764, 1470, 1471, 1489, 1490, 1535, 1536, 1537, 2007], "num_class": [0, 1663, 2007, 2096], "super": [0, 9, 12, 22, 23, 27, 29, 49, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 861, 862, 1172, 1263, 1268, 1271, 1272, 1277, 1281, 1282, 1283, 1519, 1520, 1521, 1529, 1530, 1531, 1532, 1699, 1801, 2006, 2008, 2009, 2010, 2034, 2039, 2046, 2051, 2054, 2056, 2059, 2062, 2085, 2089, 2101, 2102, 2103], "fc1": [0, 23, 1699, 2054, 2060, 2085], "x": [0, 1, 3, 11, 12, 14, 22, 23, 27, 33, 35, 41, 49, 50, 52, 54, 55, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 172, 253, 257, 285, 288, 310, 312, 314, 316, 320, 351, 376, 447, 482, 485, 492, 498, 557, 559, 582, 606, 607, 616, 691, 757, 759, 769, 778, 779, 783, 784, 795, 798, 801, 819, 820, 861, 862, 878, 884, 886, 887, 888, 895, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 915, 916, 935, 954, 955, 956, 959, 960, 965, 972, 979, 980, 986, 987, 990, 993, 994, 1047, 1048, 1088, 1095, 1099, 1100, 1105, 1109, 1119, 1120, 1121, 1122, 1124, 1125, 1130, 1131, 1133, 1135, 1139, 1140, 1142, 1145, 1146, 1147, 1155, 1162, 1164, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1191, 1204, 1205, 1219, 1236, 1240, 1252, 1270, 1271, 1272, 1276, 1277, 1280, 1281, 1282, 1283, 1287, 1297, 1310, 1311, 1315, 1318, 1322, 1326, 1328, 1331, 1332, 1333, 1334, 1335, 1338, 1343, 1344, 1345, 1353, 1356, 1359, 1360, 1367, 1409, 1410, 1414, 1415, 1421, 1422, 1431, 1432, 1433, 1434, 1435, 1437, 1452, 1454, 1460, 1466, 1467, 1468, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1505, 1508, 1509, 1510, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1534, 1535, 1537, 1538, 1539, 1540, 1547, 1549, 1550, 1551, 1552, 1554, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1572, 1599, 1623, 1625, 1629, 1630, 1636, 1640, 1644, 1656, 1661, 1666, 1670, 1672, 1678, 1679, 1680, 1684, 1685, 1687, 1688, 1689, 1696, 1699, 1708, 1724, 1727, 1729, 1750, 1751, 1752, 1753, 1754, 1759, 1762, 1763, 1764, 1771, 1774, 1795, 1809, 1810, 1821, 1823, 1837, 1840, 1841, 1843, 1844, 1846, 1847, 1851, 1855, 1892, 1894, 1897, 1911, 1913, 1914, 1915, 1916, 1922, 1923, 1930, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1954, 1956, 1963, 1964, 1965, 1967, 1968, 1969, 1972, 2004, 2006, 2007, 2008, 2009, 2010, 2013, 2024, 2025, 2026, 2032, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2043, 2044, 2046, 2047, 2052, 2054, 2055, 2056, 2059, 2062, 2067, 2071, 2072, 2073, 2075, 2077, 2078, 2081, 2082, 2083, 2084, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2096, 2101, 2103], "2": [0, 1, 3, 5, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 37, 42, 44, 45, 49, 50, 52, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 172, 190, 207, 224, 232, 233, 253, 259, 285, 312, 314, 316, 320, 334, 376, 400, 401, 444, 445, 446, 447, 448, 480, 486, 487, 492, 495, 498, 512, 514, 516, 543, 557, 559, 579, 580, 582, 583, 584, 586, 587, 588, 606, 616, 679, 680, 682, 683, 684, 685, 688, 689, 690, 691, 692, 694, 696, 697, 698, 733, 737, 738, 739, 740, 741, 742, 744, 745, 754, 757, 759, 761, 792, 795, 819, 865, 874, 875, 876, 877, 878, 879, 880, 884, 886, 887, 888, 890, 900, 903, 905, 906, 908, 909, 910, 911, 912, 913, 915, 916, 924, 925, 928, 935, 937, 939, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 954, 955, 956, 958, 959, 960, 962, 963, 964, 965, 966, 970, 971, 979, 983, 987, 988, 989, 990, 993, 994, 1004, 1079, 1084, 1088, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1115, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1167, 1168, 1169, 1173, 1174, 1177, 1181, 1191, 1206, 1207, 1208, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1240, 1242, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1268, 1269, 1275, 1277, 1279, 1281, 1285, 1286, 1287, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1342, 1343, 1344, 1345, 1352, 1354, 1355, 1356, 1357, 1359, 1360, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1385, 1388, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1422, 1427, 1428, 1429, 1430, 1431, 1432, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1468, 1469, 1470, 1472, 1474, 1475, 1476, 1477, 1479, 1486, 1487, 1488, 1489, 1490, 1491, 1505, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1521, 1522, 1524, 1525, 1527, 1528, 1530, 1531, 1532, 1533, 1534, 1535, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1549, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1590, 1592, 1597, 1598, 1609, 1616, 1617, 1623, 1625, 1627, 1629, 1636, 1642, 1650, 1651, 1652, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1677, 1693, 1699, 1708, 1709, 1713, 1714, 1716, 1717, 1723, 1724, 1729, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1808, 1809, 1810, 1812, 1813, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1830, 1832, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1851, 1855, 1857, 1858, 1860, 1861, 1862, 1863, 1867, 1872, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1888, 1892, 1893, 1894, 1895, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1930, 1931, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 2002, 2003, 2007, 2008, 2009, 2010, 2013, 2016, 2017, 2019, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2035, 2036, 2038, 2039, 2042, 2043, 2044, 2046, 2047, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2064, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2083, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2096, 2097, 2098, 2101, 2102], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 22, 23, 27, 29, 31, 32, 33, 34, 35, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 61, 63, 73, 74, 85, 485, 495, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 778, 784, 787, 788, 790, 792, 793, 837, 857, 859, 861, 862, 865, 893, 895, 900, 901, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 928, 941, 950, 972, 1001, 1061, 1105, 1123, 1125, 1126, 1127, 1128, 1135, 1140, 1141, 1142, 1156, 1166, 1167, 1169, 1174, 1177, 1178, 1179, 1180, 1181, 1183, 1185, 1187, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1203, 1219, 1223, 1224, 1240, 1263, 1265, 1268, 1269, 1277, 1279, 1281, 1321, 1324, 1329, 1337, 1338, 1357, 1405, 1423, 1428, 1429, 1430, 1431, 1432, 1466, 1484, 1519, 1572, 1625, 1627, 1636, 1696, 1703, 1709, 1716, 1717, 1723, 1726, 1735, 1737, 1740, 1744, 1745, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1792, 1798, 1803, 1820, 1863, 1953, 1958, 1969, 2004, 2005, 2006, 2008, 2009, 2011, 2013, 2016, 2017, 2018, 2019, 2024, 2025, 2026, 2027, 2034, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2048, 2049, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2062, 2063, 2065, 2067, 2068, 2069, 2072, 2075, 2077, 2078, 2082, 2083, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2103], "suggest": [0, 9, 23, 49, 53, 81, 82, 84, 86, 1452, 2004, 2011, 2033, 2034, 2041, 2072, 2097, 2103], "issu": [0, 2, 3, 5, 9, 10, 11, 14, 21, 22, 27, 29, 33, 34, 49, 52, 53, 55, 57, 61, 63, 83, 84, 908, 914, 928, 972, 974, 975, 1156, 1168, 1170, 1174, 1188, 1311, 1355, 1367, 1484, 1489, 1515, 1516, 1517, 1535, 1572, 1636, 1637, 1761, 1859, 1969, 2004, 2005, 2009, 2011, 2016, 2024, 2025, 2026, 2027, 2033, 2034, 2037, 2039, 2042, 2048, 2049, 2050, 2052, 2056, 2059, 2062, 2063, 2067, 2072, 2073, 2074, 2075, 2078, 2088, 2091, 2092, 2094, 2095, 2103, 2105, 2106], "http": [0, 2, 3, 4, 7, 9, 11, 12, 14, 15, 23, 25, 27, 33, 35, 44, 45, 52, 149, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 791, 792, 893, 928, 972, 986, 1105, 1163, 1188, 1195, 1338, 1367, 1438, 1489, 1515, 1516, 1517, 1539, 1563, 1566, 1569, 1725, 1761, 1809, 1826, 1859, 1863, 1883, 1957, 1960, 2004, 2010, 2013, 2020, 2022, 2034, 2035, 2043, 2044, 2046, 2050, 2052, 2056, 2059, 2075, 2077, 2078, 2092, 2096, 2097, 2102, 2107], "github": [0, 7, 9, 14, 25, 27, 40, 49, 52, 53, 57, 149, 791, 792, 893, 914, 928, 1163, 1188, 1195, 1367, 1515, 1516, 1517, 1563, 1761, 1795, 1859, 1960, 2004, 2011, 2016, 2043, 2050, 2056, 2062, 2072, 2073, 2075, 2078, 2091, 2092, 2094, 2097, 2102], "com": [0, 7, 14, 25, 27, 43, 45, 52, 149, 791, 792, 893, 928, 1163, 1188, 1195, 1367, 1515, 1516, 1517, 1563, 1761, 1859, 1957, 1960, 2004, 2013, 2020, 2022, 2043, 2044, 2050, 2052, 2056, 2075, 2078, 2092, 2097, 2102], "pytorch": [0, 1, 2, 3, 4, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 37, 44, 45, 50, 52, 53, 56, 58, 61, 62, 63, 81, 82, 83, 84, 85, 86, 149, 512, 582, 679, 697, 729, 730, 731, 732, 744, 745, 755, 759, 760, 761, 762, 763, 764, 791, 792, 809, 810, 811, 812, 880, 893, 926, 928, 957, 962, 963, 972, 973, 986, 1029, 1030, 1041, 1046, 1105, 1150, 1156, 1163, 1164, 1168, 1173, 1174, 1195, 1210, 1251, 1252, 1276, 1296, 1302, 1307, 1309, 1310, 1311, 1314, 1327, 1336, 1352, 1355, 1356, 1367, 1400, 1431, 1432, 1438, 1470, 1484, 1515, 1516, 1517, 1563, 1580, 1581, 1582, 1598, 1677, 1709, 1716, 1717, 1750, 1758, 1759, 1761, 1764, 1772, 1819, 1851, 1859, 1860, 1861, 1869, 1916, 1920, 1944, 1957, 1960, 1969, 1982, 1988, 1991, 2004, 2008, 2009, 2013, 2015, 2016, 2020, 2021, 2026, 2027, 2028, 2035, 2036, 2040, 2041, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2052, 2053, 2054, 2058, 2059, 2061, 2063, 2064, 2067, 2068, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2085, 2087, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2101, 2102, 2104, 2105, 2106, 2107], "75956": 0, "_c": [0, 22, 23, 27, 60, 908, 914, 1264, 1277, 1770, 2007, 2009, 2021, 2037, 2045, 2049, 2052, 2056, 2067], "_jit_set_autocast_mod": 0, "fals": [0, 1, 2, 3, 5, 12, 14, 22, 23, 27, 28, 29, 31, 32, 33, 35, 49, 52, 55, 59, 61, 63, 68, 71, 72, 73, 74, 111, 112, 113, 114, 115, 117, 133, 134, 135, 149, 180, 181, 182, 195, 208, 259, 300, 317, 318, 320, 327, 331, 334, 335, 337, 341, 342, 343, 350, 353, 391, 395, 406, 408, 409, 410, 413, 414, 420, 428, 429, 430, 431, 444, 445, 446, 447, 448, 452, 457, 459, 469, 470, 478, 494, 495, 503, 516, 541, 554, 555, 564, 579, 593, 602, 608, 609, 614, 616, 679, 692, 693, 694, 695, 696, 698, 711, 712, 713, 714, 715, 716, 733, 734, 744, 745, 750, 751, 752, 754, 757, 759, 767, 768, 775, 777, 778, 779, 781, 782, 784, 796, 798, 813, 818, 819, 820, 821, 823, 824, 825, 837, 838, 840, 857, 858, 863, 865, 874, 875, 876, 880, 893, 895, 900, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 932, 941, 944, 947, 949, 950, 956, 957, 963, 964, 965, 971, 972, 986, 987, 1007, 1045, 1050, 1062, 1105, 1106, 1107, 1108, 1110, 1111, 1118, 1122, 1123, 1124, 1125, 1130, 1131, 1136, 1137, 1138, 1140, 1141, 1142, 1157, 1159, 1160, 1161, 1162, 1164, 1165, 1167, 1168, 1169, 1171, 1173, 1181, 1193, 1194, 1201, 1204, 1206, 1208, 1222, 1223, 1224, 1227, 1228, 1250, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1270, 1272, 1273, 1281, 1282, 1283, 1285, 1287, 1290, 1295, 1296, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1318, 1320, 1322, 1323, 1326, 1327, 1328, 1329, 1330, 1335, 1336, 1337, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1357, 1359, 1363, 1365, 1366, 1368, 1371, 1378, 1381, 1382, 1405, 1410, 1411, 1412, 1413, 1416, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1452, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1470, 1471, 1472, 1473, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1504, 1505, 1506, 1510, 1511, 1512, 1513, 1514, 1518, 1519, 1522, 1523, 1524, 1525, 1526, 1528, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1547, 1549, 1551, 1552, 1559, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1572, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1620, 1621, 1622, 1625, 1627, 1629, 1630, 1631, 1636, 1637, 1640, 1646, 1647, 1648, 1650, 1651, 1652, 1656, 1661, 1665, 1669, 1671, 1672, 1675, 1676, 1677, 1678, 1680, 1690, 1693, 1694, 1696, 1702, 1709, 1711, 1713, 1714, 1718, 1719, 1721, 1723, 1726, 1728, 1729, 1730, 1742, 1751, 1752, 1753, 1754, 1756, 1759, 1762, 1763, 1764, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1807, 1817, 1819, 1820, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1843, 1844, 1851, 1855, 1863, 1864, 1867, 1869, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1902, 1903, 1904, 1905, 1906, 1907, 1914, 1915, 1916, 1919, 1920, 1935, 1939, 1944, 1953, 1957, 1958, 1960, 1963, 1964, 1965, 1972, 1974, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2013, 2015, 2016, 2019, 2020, 2024, 2026, 2027, 2033, 2034, 2037, 2038, 2039, 2041, 2042, 2046, 2049, 2050, 2051, 2054, 2055, 2056, 2059, 2060, 2061, 2063, 2066, 2067, 2072, 2073, 2074, 2076, 2077, 2079, 2081, 2083, 2088, 2090, 2091, 2092, 2094, 2098, 2099, 2102, 2103, 2104], "randn": [0, 1, 11, 12, 27, 32, 33, 49, 54, 56, 57, 58, 61, 63, 65, 70, 71, 72, 288, 310, 482, 543, 579, 583, 584, 585, 586, 587, 588, 616, 682, 683, 684, 685, 686, 687, 688, 689, 694, 695, 698, 719, 727, 728, 733, 737, 738, 739, 740, 741, 742, 755, 757, 759, 760, 761, 762, 763, 764, 771, 772, 773, 861, 862, 874, 875, 876, 878, 881, 882, 883, 884, 885, 935, 940, 952, 959, 961, 962, 963, 964, 965, 967, 989, 990, 991, 992, 993, 1004, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1099, 1105, 1119, 1120, 1149, 1157, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1172, 1173, 1174, 1236, 1240, 1242, 1277, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1319, 1320, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1341, 1345, 1346, 1353, 1355, 1356, 1357, 1359, 1360, 1363, 1365, 1366, 1368, 1370, 1372, 1373, 1388, 1404, 1407, 1417, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1546, 1547, 1549, 1550, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1568, 1570, 1571, 1575, 1576, 1577, 1579, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1620, 1621, 1627, 1661, 1667, 1668, 1708, 1767, 1810, 1815, 1816, 1817, 1819, 1820, 1833, 1837, 1838, 1850, 1885, 1887, 1892, 1898, 1901, 1909, 1910, 1913, 1919, 1920, 1930, 1933, 1934, 1937, 1941, 1944, 1945, 1947, 1950, 1952, 1957, 1967, 1968, 1969, 1972, 2007, 2008, 2009, 2011, 2013, 2017, 2025, 2026, 2027, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2044, 2046, 2050, 2051, 2054, 2055, 2056, 2057, 2059, 2062, 2067, 2072, 2073, 2075, 2077, 2081, 2083, 2085, 2088, 2089, 2091, 2092, 2094, 2096, 2098, 2101, 2103], "freez": [0, 52, 1181, 1265, 1275, 1461, 1462, 1519, 2034], "_": [0, 1, 3, 11, 22, 23, 27, 28, 31, 37, 58, 61, 680, 682, 683, 697, 865, 881, 882, 883, 884, 885, 895, 900, 904, 905, 906, 916, 942, 961, 977, 988, 989, 991, 992, 994, 1149, 1154, 1169, 1173, 1232, 1286, 1294, 1345, 1353, 1433, 1434, 1435, 1481, 1482, 1483, 1535, 1559, 1709, 1724, 1758, 1787, 1789, 1809, 1832, 1835, 1838, 1850, 1870, 1872, 1878, 1885, 1887, 1909, 1920, 1933, 1934, 2013, 2034, 2037, 2040, 2041, 2046, 2052, 2058, 2059, 2061, 2073, 2089, 2092, 2097, 2101, 2103], "3": [0, 1, 3, 4, 6, 9, 11, 12, 18, 20, 22, 23, 24, 27, 29, 31, 33, 34, 35, 37, 42, 44, 49, 52, 54, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 190, 207, 232, 253, 259, 288, 312, 314, 316, 320, 400, 401, 444, 445, 446, 447, 448, 470, 486, 487, 492, 495, 498, 512, 514, 516, 522, 536, 543, 557, 559, 580, 582, 583, 584, 586, 587, 606, 616, 679, 680, 684, 685, 686, 687, 688, 689, 690, 691, 692, 696, 697, 698, 733, 737, 738, 739, 740, 741, 742, 745, 747, 756, 759, 760, 761, 762, 764, 771, 772, 773, 784, 792, 823, 861, 862, 865, 875, 876, 878, 879, 880, 887, 888, 908, 909, 910, 911, 912, 913, 915, 935, 940, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 956, 958, 959, 960, 962, 963, 964, 965, 966, 970, 971, 983, 987, 988, 993, 994, 1004, 1047, 1048, 1050, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1118, 1121, 1126, 1129, 1133, 1139, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1158, 1159, 1160, 1162, 1164, 1169, 1170, 1172, 1174, 1206, 1207, 1208, 1219, 1222, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1240, 1242, 1250, 1252, 1254, 1256, 1265, 1269, 1272, 1275, 1277, 1281, 1282, 1286, 1287, 1288, 1289, 1290, 1291, 1295, 1297, 1298, 1299, 1301, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1343, 1346, 1348, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1388, 1404, 1405, 1407, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1428, 1429, 1430, 1431, 1432, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1454, 1461, 1462, 1465, 1466, 1467, 1468, 1470, 1471, 1473, 1475, 1476, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1522, 1524, 1526, 1531, 1532, 1534, 1535, 1537, 1538, 1541, 1542, 1543, 1544, 1545, 1546, 1553, 1554, 1555, 1559, 1567, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1590, 1592, 1597, 1598, 1601, 1602, 1604, 1605, 1608, 1616, 1617, 1620, 1621, 1623, 1625, 1629, 1630, 1636, 1644, 1661, 1663, 1664, 1667, 1668, 1675, 1676, 1683, 1684, 1696, 1708, 1709, 1716, 1717, 1724, 1739, 1741, 1743, 1744, 1745, 1746, 1750, 1752, 1753, 1754, 1755, 1758, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1798, 1801, 1802, 1804, 1808, 1810, 1812, 1816, 1817, 1819, 1820, 1823, 1824, 1825, 1826, 1827, 1828, 1830, 1832, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1843, 1844, 1846, 1847, 1848, 1851, 1855, 1860, 1861, 1867, 1870, 1872, 1874, 1876, 1877, 1878, 1882, 1883, 1884, 1892, 1894, 1895, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1913, 1919, 1920, 1922, 1923, 1930, 1931, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1963, 1966, 1969, 1970, 1971, 1972, 2002, 2003, 2006, 2007, 2008, 2009, 2010, 2013, 2016, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2046, 2047, 2051, 2052, 2054, 2056, 2058, 2059, 2061, 2062, 2064, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2085, 2088, 2091, 2092, 2094, 2096, 2097, 2098, 2100, 2101, 2102, 2103], "bug": [0, 14, 18, 27, 49, 61, 1166, 1167, 1169, 1355, 2033, 2048, 2072, 2094, 2103], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 118, 149, 153, 194, 195, 205, 208, 220, 221, 222, 254, 259, 288, 289, 312, 320, 322, 334, 336, 339, 351, 414, 444, 445, 446, 447, 448, 457, 485, 486, 487, 492, 494, 495, 496, 497, 498, 499, 502, 503, 512, 514, 516, 523, 555, 565, 582, 583, 584, 586, 587, 588, 602, 603, 613, 616, 617, 679, 683, 685, 688, 692, 693, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 734, 735, 736, 743, 747, 748, 749, 750, 751, 752, 753, 754, 756, 758, 759, 774, 775, 776, 777, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 798, 799, 801, 809, 810, 811, 812, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 825, 854, 859, 861, 862, 874, 875, 876, 877, 878, 885, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 924, 925, 926, 928, 932, 939, 940, 943, 945, 948, 952, 953, 956, 960, 962, 963, 966, 967, 969, 972, 974, 975, 976, 977, 978, 982, 987, 988, 990, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1010, 1011, 1012, 1015, 1026, 1028, 1031, 1032, 1033, 1035, 1036, 1039, 1040, 1041, 1042, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1057, 1060, 1061, 1062, 1069, 1070, 1072, 1073, 1074, 1078, 1079, 1080, 1086, 1087, 1088, 1093, 1095, 1096, 1100, 1103, 1104, 1105, 1109, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1144, 1145, 1146, 1147, 1148, 1151, 1152, 1153, 1156, 1159, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1177, 1178, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1190, 1191, 1192, 1194, 1195, 1203, 1204, 1207, 1209, 1210, 1219, 1223, 1229, 1231, 1252, 1262, 1263, 1265, 1266, 1268, 1270, 1271, 1273, 1275, 1276, 1277, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1341, 1343, 1346, 1355, 1356, 1360, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1378, 1381, 1382, 1392, 1396, 1401, 1402, 1407, 1410, 1411, 1412, 1413, 1415, 1423, 1427, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1465, 1466, 1467, 1470, 1471, 1473, 1478, 1479, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1504, 1506, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1525, 1526, 1529, 1531, 1534, 1535, 1536, 1548, 1551, 1553, 1556, 1559, 1565, 1566, 1567, 1568, 1571, 1572, 1573, 1574, 1578, 1579, 1580, 1581, 1582, 1583, 1590, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1620, 1621, 1625, 1627, 1629, 1634, 1636, 1642, 1644, 1650, 1651, 1652, 1662, 1664, 1666, 1677, 1683, 1684, 1692, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1713, 1716, 1717, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1750, 1751, 1752, 1753, 1754, 1757, 1758, 1759, 1761, 1762, 1764, 1765, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1798, 1799, 1801, 1803, 1805, 1807, 1808, 1809, 1813, 1817, 1819, 1826, 1830, 1832, 1835, 1839, 1841, 1848, 1855, 1857, 1858, 1859, 1861, 1862, 1863, 1867, 1869, 1870, 1875, 1888, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1912, 1914, 1915, 1916, 1919, 1920, 1921, 1922, 1923, 1930, 1932, 1936, 1938, 1942, 1944, 1952, 1953, 1954, 1956, 1957, 1958, 1960, 1962, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1974, 1975, 1976, 1979, 1981, 1983, 1984, 1986, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1999, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2029, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2109], "what": [0, 1, 3, 5, 7, 8, 9, 27, 29, 33, 37, 41, 42, 49, 52, 54, 56, 57, 61, 63, 892, 905, 906, 1167, 1180, 1181, 1191, 1281, 1282, 1355, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1513, 1514, 1548, 1571, 1650, 1651, 1652, 1677, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1803, 1820, 2004, 2005, 2006, 2008, 2009, 2013, 2017, 2025, 2037, 2039, 2040, 2042, 2043, 2046, 2048, 2056, 2058, 2061, 2062, 2067, 2068, 2072, 2088, 2089, 2090, 2091, 2093, 2095, 2096, 2103, 2105], "observ": [0, 23, 29, 35, 44, 485, 755, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 807, 808, 810, 812, 814, 816, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 841, 859, 861, 862, 864, 927, 990, 994, 1197, 1279, 1367, 1431, 1432, 1433, 1434, 1435, 1452, 1454, 1478, 1481, 1482, 1483, 1484, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1559, 1568, 1597, 1598, 1608, 1637, 1661, 1669, 2033, 2034, 2037, 2045, 2048, 2061, 2063, 2083, 2087, 2088, 2094, 2101, 2103, 2105], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 15, 23, 27, 29, 33, 36, 39, 40, 44, 45, 49, 52, 53, 54, 55, 56, 57, 58, 61, 63, 73, 74, 80, 85, 253, 254, 497, 512, 617, 688, 729, 730, 731, 732, 733, 734, 740, 741, 742, 744, 745, 755, 760, 761, 762, 763, 764, 861, 862, 892, 895, 898, 899, 905, 906, 908, 910, 911, 914, 928, 954, 986, 1088, 1162, 1166, 1167, 1168, 1169, 1170, 1174, 1262, 1265, 1329, 1360, 1370, 1438, 1449, 1484, 1519, 1625, 1636, 1637, 1642, 1664, 1677, 1695, 1709, 1758, 1759, 1761, 1776, 1777, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1833, 1859, 1861, 1905, 1969, 2011, 2013, 2016, 2025, 2026, 2027, 2028, 2033, 2034, 2039, 2040, 2042, 2044, 2049, 2050, 2052, 2056, 2058, 2059, 2060, 2062, 2065, 2067, 2068, 2072, 2073, 2074, 2075, 2076, 2077, 2079, 2085, 2089, 2092, 2093, 2094, 2100, 2103, 2106], "file": [0, 1, 3, 6, 7, 9, 11, 14, 18, 19, 22, 29, 35, 37, 42, 44, 47, 49, 50, 55, 57, 61, 908, 914, 915, 929, 931, 1006, 1043, 1157, 1166, 1167, 1169, 1170, 1265, 1273, 1276, 1337, 1771, 1851, 1895, 2004, 2006, 2009, 2010, 2011, 2017, 2020, 2025, 2026, 2027, 2034, 2037, 2039, 2045, 2048, 2050, 2052, 2054, 2056, 2061, 2065, 2068, 2072, 2074, 2077, 2085, 2089, 2090, 2091, 2094, 2096, 2097, 2100, 2101, 2103, 2105, 2106], "subregion": 0, "nest": [0, 1, 5, 12, 14, 29, 42, 49, 52, 61, 63, 66, 71, 72, 588, 792, 814, 816, 895, 910, 986, 1066, 1067, 1164, 1174, 1265, 1268, 1281, 1519, 1525, 1566, 1567, 1716, 1717, 1772, 1969, 2005, 2040, 2042, 2054, 2056, 2061, 2067, 2101], "local": [0, 5, 27, 29, 31, 32, 35, 42, 44, 45, 47, 48, 52, 61, 915, 916, 917, 1047, 1109, 1163, 1265, 1338, 1457, 1458, 1459, 1463, 1465, 1507, 1519, 1571, 1619, 1643, 1695, 1709, 1710, 1762, 1895, 2004, 2005, 2008, 2024, 2033, 2037, 2038, 2041, 2051, 2056, 2059, 2060, 2064, 2067, 2068, 2069, 2077, 2091, 2092, 2094, 2103, 2105], "want": [0, 1, 7, 8, 9, 14, 22, 27, 32, 33, 41, 49, 52, 54, 55, 56, 57, 60, 61, 63, 447, 485, 495, 498, 780, 790, 837, 1043, 1162, 1163, 1180, 1181, 1278, 1281, 1282, 1367, 1466, 1467, 1572, 1620, 1621, 1636, 1696, 1709, 1710, 1759, 1762, 1776, 1777, 1789, 1790, 1851, 1960, 2004, 2013, 2016, 2033, 2034, 2036, 2037, 2039, 2040, 2042, 2043, 2046, 2056, 2058, 2059, 2062, 2072, 2077, 2078, 2082, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2102], "forc": [0, 1, 14, 18, 19, 52, 457, 880, 972, 1043, 1178, 1268, 1280, 1284, 1869, 1905, 2004, 2006, 2009, 2013, 2033, 2037, 2077, 2081, 2088, 2091, 2092], "particular": [0, 1, 3, 7, 22, 29, 35, 41, 44, 45, 49, 50, 61, 63, 68, 72, 87, 485, 559, 679, 861, 862, 1079, 1174, 1177, 1265, 1360, 1455, 1519, 1969, 2006, 2008, 2016, 2027, 2037, 2039, 2041, 2042, 2045, 2046, 2049, 2054, 2056, 2058, 2072, 2074, 2081, 2088, 2091, 2093, 2094, 2095, 2103, 2104, 2105], "give": [0, 3, 4, 7, 9, 12, 18, 22, 23, 29, 31, 43, 49, 52, 61, 919, 920, 994, 1123, 1125, 1126, 1128, 1132, 1141, 1166, 1167, 1168, 1181, 1266, 1279, 1280, 1295, 1302, 1446, 1447, 1448, 1524, 1571, 1572, 1723, 1763, 1776, 1777, 1789, 1916, 1957, 2004, 2006, 2024, 2026, 2032, 2034, 2037, 2039, 2040, 2042, 2043, 2044, 2046, 2050, 2056, 2058, 2060, 2072, 2088, 2090, 2091, 2093, 2100, 2103, 2104], "explicit": [0, 8, 12, 27, 49, 52, 56, 61, 1039, 1180, 1219, 1252, 1637, 1859, 1937, 2004, 2005, 2009, 2010, 2025, 2033, 2037, 2039, 2042, 2059, 2075, 2076, 2098], "control": [0, 1, 2, 14, 22, 23, 27, 28, 29, 33, 35, 40, 43, 44, 50, 63, 69, 72, 754, 798, 858, 861, 876, 880, 895, 941, 950, 986, 1092, 1093, 1094, 1095, 1096, 1178, 1223, 1224, 1277, 1278, 1279, 1281, 1296, 1302, 1304, 1307, 1309, 1312, 1314, 1318, 1324, 1327, 1329, 1335, 1355, 1423, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1505, 1513, 1514, 1571, 1677, 1709, 1807, 1863, 1864, 1877, 1892, 1895, 1900, 1916, 1920, 1939, 1945, 1946, 1947, 1948, 2005, 2006, 2015, 2034, 2036, 2037, 2038, 2046, 2048, 2049, 2051, 2053, 2054, 2056, 2058, 2061, 2062, 2069, 2072, 2088, 2089, 2090, 2091, 2094, 2106], "execut": [0, 1, 2, 3, 4, 5, 7, 14, 15, 22, 27, 29, 31, 35, 36, 38, 45, 49, 50, 52, 57, 60, 61, 80, 486, 487, 900, 924, 925, 972, 979, 1010, 1021, 1083, 1163, 1265, 1266, 1268, 1281, 1282, 1337, 1381, 1382, 1455, 1519, 1525, 1563, 1564, 1565, 1566, 1567, 1702, 1709, 1865, 1975, 2005, 2006, 2008, 2010, 2019, 2033, 2035, 2036, 2041, 2042, 2045, 2046, 2048, 2050, 2052, 2054, 2056, 2061, 2062, 2067, 2068, 2072, 2085, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2099, 2102, 2103, 2106], "surround": [0, 61, 789, 2008, 2033, 2037], "ensur": [0, 1, 4, 6, 7, 9, 22, 27, 28, 29, 31, 32, 35, 44, 45, 48, 49, 52, 60, 61, 87, 480, 485, 734, 818, 900, 901, 903, 905, 982, 1163, 1265, 1427, 1432, 1512, 1519, 1522, 1563, 1625, 1650, 1651, 1652, 1677, 1709, 1716, 1717, 1866, 2004, 2006, 2008, 2016, 2020, 2024, 2033, 2034, 2037, 2039, 2040, 2043, 2048, 2050, 2051, 2059, 2062, 2063, 2067, 2068, 2074, 2088, 2093, 2094, 2103], "necessari": [0, 1, 3, 9, 14, 22, 27, 29, 32, 35, 44, 45, 49, 52, 59, 60, 87, 190, 207, 485, 559, 588, 900, 904, 905, 906, 1163, 1181, 1240, 1277, 1525, 1751, 1752, 2006, 2009, 2013, 2026, 2032, 2034, 2035, 2037, 2038, 2044, 2046, 2049, 2052, 2059, 2062, 2067, 2068, 2069, 2075, 2085, 2091, 2094, 2103], "becaus": [0, 1, 3, 4, 5, 7, 8, 14, 22, 23, 27, 29, 31, 33, 37, 49, 50, 52, 56, 57, 60, 61, 63, 71, 72, 485, 495, 910, 919, 920, 1126, 1127, 1128, 1136, 1137, 1138, 1164, 1168, 1173, 1174, 1180, 1181, 1187, 1191, 1197, 1262, 1266, 1269, 1273, 1312, 1313, 1337, 1355, 1433, 1434, 1435, 1455, 1559, 1699, 1709, 1710, 1793, 1835, 1860, 1863, 1916, 1969, 2005, 2006, 2009, 2011, 2017, 2024, 2025, 2026, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2049, 2050, 2054, 2056, 2059, 2062, 2063, 2067, 2069, 2072, 2077, 2079, 2083, 2085, 2088, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2101, 2103, 2104, 2105], "wa": [0, 1, 3, 7, 18, 23, 27, 42, 43, 44, 45, 49, 50, 52, 60, 61, 334, 485, 495, 679, 784, 791, 840, 854, 926, 962, 973, 1007, 1008, 1031, 1035, 1050, 1063, 1083, 1125, 1174, 1262, 1272, 1281, 1296, 1307, 1309, 1313, 1337, 1355, 1378, 1405, 1489, 1515, 1516, 1517, 1549, 1572, 1590, 1625, 1680, 1696, 1709, 1710, 1753, 1795, 1801, 1914, 1915, 1953, 1954, 1964, 1965, 1969, 1974, 2004, 2006, 2008, 2009, 2010, 2013, 2015, 2016, 2021, 2024, 2033, 2034, 2035, 2037, 2039, 2040, 2041, 2042, 2045, 2047, 2054, 2056, 2058, 2060, 2062, 2066, 2067, 2072, 2074, 2079, 2085, 2090, 2091, 2093, 2094, 2101, 2102, 2103, 2105], "f_float32": 0, "re": [0, 1, 4, 5, 7, 14, 22, 27, 31, 32, 34, 41, 44, 49, 52, 53, 54, 55, 56, 57, 59, 60, 61, 487, 952, 1005, 1039, 1156, 1203, 1265, 1269, 1519, 1683, 1710, 1753, 1832, 1846, 1899, 2006, 2009, 2013, 2016, 2024, 2033, 2034, 2037, 2039, 2040, 2043, 2048, 2062, 2068, 2069, 2073, 2088, 2090, 2092, 2093, 2094, 2102, 2103, 2104], "again": [0, 18, 22, 27, 31, 35, 49, 55, 1405, 2034, 2039, 2040, 2046, 2088, 2091, 2093, 2097], "regardless": [0, 3, 22, 27, 43, 49, 52, 988, 1185, 1265, 1269, 1275, 1519, 1702, 1953, 2033, 2037, 2051, 2067, 2079, 2091, 2094], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 14, 15, 18, 19, 22, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 63, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 149, 190, 195, 207, 208, 220, 232, 254, 289, 310, 312, 314, 318, 320, 397, 399, 400, 401, 447, 457, 482, 485, 486, 487, 492, 494, 497, 498, 512, 514, 516, 536, 543, 582, 602, 616, 617, 679, 683, 686, 687, 688, 689, 693, 694, 695, 696, 734, 747, 756, 759, 765, 766, 767, 768, 771, 772, 773, 778, 779, 781, 782, 784, 785, 786, 791, 792, 793, 794, 798, 801, 814, 816, 818, 819, 820, 821, 824, 826, 836, 837, 854, 859, 864, 877, 878, 880, 884, 885, 889, 890, 892, 893, 895, 898, 899, 905, 906, 908, 909, 911, 912, 913, 914, 919, 920, 924, 925, 928, 931, 933, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 957, 958, 971, 975, 978, 983, 986, 990, 994, 1007, 1013, 1020, 1036, 1047, 1048, 1050, 1051, 1052, 1061, 1075, 1076, 1077, 1082, 1088, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1105, 1106, 1110, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1153, 1155, 1156, 1158, 1159, 1160, 1163, 1166, 1169, 1172, 1173, 1174, 1178, 1179, 1185, 1186, 1204, 1208, 1209, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1232, 1236, 1240, 1242, 1262, 1265, 1268, 1270, 1273, 1276, 1277, 1279, 1281, 1282, 1285, 1286, 1290, 1291, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1311, 1312, 1313, 1315, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1328, 1329, 1330, 1332, 1335, 1337, 1338, 1353, 1354, 1355, 1356, 1358, 1359, 1360, 1366, 1374, 1376, 1379, 1380, 1381, 1382, 1385, 1386, 1405, 1411, 1414, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1461, 1462, 1463, 1465, 1466, 1467, 1470, 1471, 1472, 1473, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1519, 1522, 1524, 1526, 1533, 1534, 1535, 1536, 1537, 1538, 1548, 1549, 1551, 1559, 1562, 1563, 1568, 1569, 1571, 1572, 1578, 1580, 1581, 1582, 1590, 1593, 1594, 1608, 1609, 1616, 1617, 1618, 1620, 1621, 1624, 1625, 1627, 1636, 1637, 1643, 1650, 1651, 1652, 1664, 1677, 1680, 1696, 1699, 1701, 1702, 1703, 1706, 1707, 1708, 1709, 1711, 1712, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1723, 1724, 1725, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1743, 1744, 1747, 1753, 1757, 1758, 1761, 1763, 1764, 1765, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1809, 1810, 1813, 1816, 1819, 1824, 1825, 1826, 1828, 1830, 1832, 1837, 1839, 1841, 1843, 1844, 1846, 1848, 1851, 1858, 1859, 1860, 1861, 1863, 1867, 1868, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1888, 1894, 1895, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1914, 1915, 1916, 1920, 1921, 1931, 1937, 1938, 1939, 1941, 1942, 1945, 1946, 1947, 1948, 1955, 1956, 1957, 1960, 1963, 1964, 1965, 1967, 1969, 1972, 1974, 1986, 1992, 1993, 1997, 1998, 2004, 2006, 2007, 2008, 2010, 2011, 2013, 2015, 2016, 2017, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2031, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2058, 2059, 2060, 2061, 2062, 2065, 2066, 2067, 2068, 2069, 2070, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2084, 2085, 2087, 2088, 2089, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2100, 2101, 2102, 2103, 2105, 2107], "state": [0, 1, 2, 5, 9, 22, 27, 29, 31, 33, 35, 37, 44, 48, 49, 50, 52, 59, 61, 87, 414, 747, 759, 835, 982, 1036, 1037, 1041, 1046, 1050, 1060, 1076, 1077, 1163, 1172, 1218, 1265, 1268, 1281, 1338, 1379, 1386, 1400, 1470, 1471, 1489, 1490, 1519, 1535, 1537, 1567, 1583, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1826, 1868, 1895, 1960, 1986, 1987, 1988, 1991, 1997, 1998, 2005, 2013, 2019, 2033, 2034, 2037, 2038, 2039, 2044, 2048, 2051, 2054, 2056, 2058, 2066, 2082, 2088, 2090, 2091, 2092, 2093, 2094, 2099], "thread": [0, 1, 3, 22, 27, 29, 35, 47, 52, 60, 915, 916, 917, 1005, 1007, 1039, 1109, 1216, 1217, 1378, 1455, 1762, 1865, 1866, 1959, 1974, 2005, 2006, 2018, 2021, 2033, 2037, 2042, 2045, 2048, 2067, 2069, 2074, 2081, 2092, 2094, 2106], "must": [0, 3, 5, 6, 9, 12, 14, 22, 27, 29, 31, 32, 33, 34, 35, 42, 45, 47, 49, 50, 52, 55, 57, 60, 61, 63, 71, 72, 87, 96, 138, 152, 153, 195, 259, 312, 314, 320, 397, 399, 401, 485, 512, 543, 544, 565, 582, 583, 584, 586, 587, 616, 685, 686, 687, 688, 689, 690, 696, 747, 756, 771, 772, 773, 792, 814, 816, 859, 860, 878, 884, 889, 890, 891, 892, 895, 900, 904, 905, 906, 909, 911, 912, 913, 919, 920, 940, 942, 944, 945, 946, 947, 948, 949, 952, 956, 959, 983, 986, 994, 1007, 1017, 1018, 1019, 1021, 1047, 1048, 1050, 1093, 1095, 1096, 1097, 1099, 1102, 1103, 1105, 1126, 1127, 1128, 1133, 1135, 1136, 1137, 1138, 1139, 1146, 1147, 1156, 1157, 1159, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1180, 1185, 1190, 1191, 1192, 1206, 1207, 1219, 1228, 1229, 1232, 1242, 1262, 1265, 1276, 1281, 1288, 1291, 1320, 1321, 1322, 1323, 1329, 1331, 1332, 1335, 1336, 1338, 1352, 1356, 1358, 1359, 1360, 1365, 1366, 1373, 1405, 1411, 1414, 1415, 1419, 1432, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1461, 1462, 1465, 1466, 1467, 1472, 1473, 1479, 1512, 1519, 1522, 1523, 1525, 1551, 1557, 1572, 1598, 1607, 1609, 1617, 1636, 1650, 1651, 1652, 1670, 1677, 1709, 1718, 1720, 1740, 1750, 1751, 1757, 1759, 1764, 1779, 1799, 1801, 1808, 1809, 1812, 1813, 1816, 1824, 1825, 1846, 1855, 1858, 1866, 1882, 1893, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1916, 1921, 1932, 1936, 1937, 1941, 1946, 1948, 1952, 1955, 1957, 1960, 1966, 1967, 1969, 1970, 1972, 1974, 2006, 2007, 2008, 2009, 2013, 2016, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2044, 2048, 2051, 2052, 2054, 2056, 2058, 2059, 2060, 2062, 2066, 2067, 2068, 2069, 2072, 2073, 2074, 2077, 2079, 2088, 2089, 2090, 2094, 2095, 2102, 2103, 2104], "invok": [0, 2, 8, 15, 18, 22, 27, 42, 44, 45, 60, 61, 908, 910, 1047, 1048, 1265, 1268, 1275, 1455, 1519, 1701, 1703, 1706, 1707, 1761, 1795, 1801, 2006, 2009, 2010, 2019, 2033, 2036, 2037, 2038, 2039, 2040, 2045, 2046, 2059, 2067, 2068, 2085, 2088, 2093, 2094, 2095], "affect": [0, 1, 2, 7, 9, 18, 21, 34, 49, 52, 220, 221, 784, 915, 916, 917, 1008, 1010, 1109, 1156, 1157, 1182, 1265, 1381, 1382, 1489, 1519, 1535, 1572, 1696, 1710, 1716, 1717, 1762, 1859, 1862, 1863, 2033, 2034, 2037, 2042, 2043, 2046, 2049, 2050, 2074, 2099, 2101], "dataparallel": [0, 27, 1692, 1709, 1753, 2005, 2034, 2041, 2048, 2067], "parallel": [0, 13, 14, 22, 23, 27, 28, 29, 31, 44, 45, 52, 1216, 1217, 1268, 1455, 1525, 1559, 1625, 1677, 1709, 1865, 1866, 2005, 2009, 2033, 2034, 2036, 2048, 2052, 2067, 2069, 2080, 2087, 2094, 2106], "distributeddataparallel": [0, 22, 23, 27, 28, 29, 31, 45, 52, 679, 1455, 1559, 2048, 2060, 2067, 2094], "than": [0, 3, 4, 5, 6, 8, 9, 11, 14, 22, 23, 27, 28, 29, 33, 34, 35, 37, 41, 44, 45, 47, 49, 52, 57, 61, 63, 64, 72, 149, 253, 485, 498, 544, 616, 679, 778, 784, 893, 909, 910, 927, 932, 943, 954, 961, 962, 966, 967, 980, 1019, 1057, 1061, 1075, 1093, 1094, 1145, 1146, 1147, 1149, 1153, 1159, 1170, 1194, 1208, 1222, 1226, 1240, 1250, 1262, 1263, 1266, 1277, 1286, 1287, 1290, 1295, 1296, 1302, 1306, 1311, 1319, 1320, 1322, 1323, 1326, 1331, 1337, 1341, 1354, 1357, 1363, 1366, 1368, 1371, 1385, 1405, 1415, 1431, 1432, 1446, 1447, 1448, 1455, 1461, 1462, 1479, 1489, 1511, 1525, 1533, 1542, 1551, 1557, 1567, 1568, 1569, 1590, 1600, 1601, 1602, 1616, 1617, 1625, 1636, 1663, 1677, 1693, 1695, 1696, 1699, 1709, 1716, 1717, 1723, 1724, 1726, 1727, 1753, 1758, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1801, 1803, 1817, 1818, 1839, 1840, 1863, 1867, 1901, 1902, 1903, 1904, 1906, 1907, 1938, 1946, 1948, 1957, 2004, 2006, 2008, 2009, 2011, 2017, 2026, 2027, 2028, 2032, 2034, 2035, 2037, 2039, 2040, 2041, 2042, 2043, 2046, 2048, 2049, 2050, 2051, 2056, 2058, 2059, 2060, 2062, 2063, 2067, 2072, 2073, 2075, 2077, 2078, 2079, 2088, 2089, 2091, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2103, 2105], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 18, 22, 23, 27, 28, 29, 31, 32, 33, 35, 37, 41, 44, 47, 48, 49, 50, 52, 56, 57, 58, 60, 61, 63, 68, 71, 72, 81, 82, 83, 84, 86, 149, 220, 253, 351, 401, 485, 512, 519, 544, 559, 696, 747, 756, 792, 854, 855, 856, 880, 886, 892, 893, 895, 898, 900, 901, 905, 906, 910, 915, 916, 928, 943, 954, 956, 966, 970, 974, 986, 1003, 1008, 1010, 1015, 1017, 1021, 1048, 1072, 1083, 1094, 1105, 1109, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1135, 1136, 1137, 1138, 1139, 1141, 1144, 1148, 1151, 1152, 1153, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1181, 1219, 1228, 1229, 1244, 1247, 1250, 1269, 1275, 1279, 1285, 1286, 1296, 1297, 1307, 1310, 1311, 1313, 1318, 1322, 1324, 1326, 1329, 1335, 1336, 1352, 1360, 1364, 1369, 1405, 1411, 1423, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1446, 1449, 1450, 1451, 1462, 1466, 1467, 1472, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1498, 1499, 1500, 1510, 1519, 1523, 1525, 1559, 1567, 1572, 1590, 1600, 1603, 1604, 1605, 1620, 1621, 1622, 1627, 1663, 1677, 1695, 1699, 1709, 1710, 1724, 1725, 1726, 1730, 1740, 1751, 1761, 1762, 1763, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1797, 1799, 1800, 1801, 1821, 1822, 1839, 1855, 1863, 1867, 1870, 1911, 1920, 1936, 1941, 1942, 1944, 1952, 1953, 1955, 1956, 1957, 1960, 1969, 1975, 1994, 2005, 2006, 2009, 2013, 2015, 2019, 2021, 2024, 2025, 2026, 2027, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2045, 2046, 2048, 2050, 2051, 2052, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2067, 2069, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2096, 2097, 2100, 2102, 2103, 2105], "gpu": [0, 1, 2, 3, 4, 7, 14, 17, 19, 20, 22, 23, 29, 35, 45, 47, 52, 60, 195, 208, 288, 331, 602, 759, 972, 1012, 1013, 1016, 1017, 1018, 1019, 1020, 1021, 1027, 1028, 1029, 1036, 1042, 1043, 1049, 1051, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1082, 1083, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1153, 1265, 1275, 1312, 1337, 1366, 1374, 1376, 1377, 1381, 1382, 1423, 1455, 1470, 1489, 1519, 1535, 1536, 1559, 1692, 1709, 1750, 1920, 1986, 1989, 1992, 1993, 1994, 1995, 1997, 2005, 2006, 2019, 2022, 2037, 2039, 2042, 2044, 2046, 2047, 2049, 2050, 2052, 2062, 2067, 2072, 2074, 2075, 2078, 2081, 2084, 2085, 2088, 2092, 2093, 2096, 2100, 2101, 2103, 2105, 2109], "per": [0, 11, 14, 19, 22, 23, 27, 28, 29, 31, 32, 34, 35, 37, 43, 45, 47, 52, 53, 58, 471, 472, 473, 733, 734, 800, 807, 818, 821, 824, 832, 845, 853, 892, 905, 906, 908, 910, 928, 972, 1011, 1088, 1119, 1164, 1174, 1338, 1392, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1452, 1454, 1455, 1462, 1473, 1478, 1481, 1482, 1483, 1484, 1485, 1491, 1510, 1511, 1519, 1522, 1523, 1524, 1525, 1526, 1533, 1534, 1551, 1552, 1559, 1563, 1564, 1565, 1566, 1567, 1568, 1597, 1598, 1608, 1637, 1661, 1669, 1708, 1709, 1725, 1761, 1765, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1795, 1801, 1809, 1821, 1867, 1869, 1921, 1938, 1942, 1960, 1969, 1976, 2021, 2026, 2028, 2036, 2037, 2038, 2040, 2042, 2045, 2060, 2062, 2063, 2065, 2068, 2072, 2077, 2090, 2091, 2094, 2103, 2105], "process": [0, 1, 3, 11, 14, 19, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 52, 61, 78, 79, 80, 83, 85, 1007, 1043, 1049, 1075, 1157, 1193, 1194, 1265, 1276, 1338, 1376, 1385, 1431, 1432, 1452, 1454, 1461, 1462, 1478, 1485, 1510, 1511, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1559, 1563, 1565, 1567, 1568, 1597, 1598, 1608, 1637, 1661, 1669, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1798, 1804, 1833, 1869, 1883, 1960, 2004, 2005, 2006, 2013, 2021, 2024, 2025, 2026, 2034, 2036, 2037, 2038, 2039, 2042, 2045, 2046, 2048, 2050, 2052, 2054, 2056, 2059, 2060, 2061, 2062, 2065, 2067, 2069, 2072, 2074, 2082, 2085, 2087, 2090, 2091, 2094, 2101, 2103, 2106], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 14, 15, 17, 27, 28, 29, 31, 33, 34, 35, 44, 45, 47, 48, 49, 52, 53, 57, 61, 63, 71, 72, 80, 118, 149, 351, 444, 445, 446, 447, 448, 485, 586, 587, 820, 861, 862, 893, 900, 914, 972, 1005, 1007, 1008, 1010, 1039, 1050, 1051, 1072, 1106, 1108, 1125, 1145, 1146, 1147, 1157, 1163, 1185, 1192, 1265, 1269, 1277, 1278, 1301, 1302, 1329, 1330, 1338, 1378, 1455, 1516, 1519, 1536, 1553, 1664, 1677, 1683, 1709, 1771, 1801, 1828, 1832, 1834, 1865, 1932, 1935, 1960, 1962, 1974, 1975, 1992, 1994, 2004, 2005, 2006, 2009, 2010, 2013, 2022, 2024, 2025, 2026, 2027, 2030, 2032, 2034, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2046, 2048, 2051, 2052, 2056, 2059, 2060, 2062, 2065, 2067, 2068, 2078, 2081, 2085, 2089, 2090, 2091, 2092, 2095, 2096, 2099, 2100, 2103, 2104, 2105], "str": [0, 1, 2, 3, 5, 14, 22, 23, 27, 29, 31, 32, 33, 35, 38, 42, 44, 47, 49, 50, 52, 61, 320, 512, 516, 602, 778, 784, 791, 792, 793, 814, 815, 816, 854, 908, 910, 922, 929, 931, 935, 960, 972, 981, 997, 1005, 1017, 1018, 1019, 1021, 1030, 1031, 1033, 1034, 1035, 1039, 1047, 1048, 1049, 1061, 1062, 1064, 1065, 1067, 1079, 1100, 1105, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1157, 1162, 1163, 1167, 1172, 1174, 1175, 1181, 1215, 1263, 1264, 1265, 1266, 1268, 1269, 1272, 1275, 1311, 1324, 1329, 1330, 1337, 1338, 1367, 1381, 1382, 1412, 1431, 1432, 1438, 1446, 1447, 1448, 1452, 1454, 1462, 1468, 1472, 1478, 1479, 1484, 1485, 1495, 1496, 1497, 1510, 1511, 1519, 1520, 1522, 1523, 1524, 1526, 1529, 1533, 1534, 1537, 1548, 1551, 1552, 1563, 1565, 1567, 1568, 1569, 1570, 1572, 1597, 1598, 1608, 1609, 1617, 1622, 1625, 1636, 1637, 1661, 1664, 1669, 1696, 1708, 1709, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1758, 1759, 1761, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1795, 1801, 1803, 1820, 1851, 1855, 1862, 1863, 1897, 1916, 1959, 1960, 1969, 1979, 1983, 1984, 1985, 1996, 2004, 2006, 2007, 2008, 2009, 2010, 2013, 2019, 2020, 2021, 2024, 2026, 2032, 2034, 2051, 2054, 2056, 2057, 2058, 2059, 2060, 2061, 2066, 2067, 2074, 2077, 2079, 2082, 2083, 2091, 2098, 2102, 2104, 2105], "possibl": [0, 2, 9, 14, 15, 18, 27, 29, 33, 49, 56, 57, 61, 496, 497, 579, 616, 858, 879, 880, 966, 972, 1014, 1106, 1107, 1108, 1153, 1166, 1180, 1191, 1193, 1194, 1265, 1279, 1306, 1319, 1322, 1323, 1326, 1331, 1337, 1432, 1438, 1519, 1525, 1616, 1617, 1636, 1670, 1696, 1729, 1730, 1839, 1842, 1857, 1908, 1916, 1935, 2006, 2008, 2009, 2013, 2024, 2025, 2032, 2034, 2036, 2037, 2038, 2039, 2042, 2043, 2048, 2049, 2050, 2052, 2059, 2062, 2067, 2069, 2075, 2079, 2084, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2099, 2103], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 18, 19, 22, 23, 24, 26, 28, 29, 31, 33, 35, 36, 38, 41, 42, 44, 45, 49, 50, 52, 54, 57, 59, 60, 61, 63, 65, 68, 72, 74, 87, 100, 101, 102, 103, 118, 149, 153, 234, 235, 236, 237, 253, 258, 259, 271, 272, 298, 310, 312, 314, 315, 316, 317, 318, 320, 322, 325, 351, 398, 399, 414, 418, 419, 421, 422, 470, 480, 482, 498, 512, 514, 516, 536, 543, 559, 582, 583, 584, 586, 587, 598, 599, 679, 680, 683, 686, 687, 690, 694, 695, 696, 734, 755, 763, 769, 770, 778, 783, 784, 786, 792, 794, 795, 798, 801, 818, 819, 820, 821, 824, 825, 826, 854, 859, 865, 874, 875, 876, 880, 885, 889, 891, 893, 894, 898, 899, 900, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 928, 937, 939, 941, 942, 943, 948, 950, 956, 960, 964, 965, 967, 978, 989, 990, 993, 1008, 1038, 1047, 1048, 1061, 1075, 1084, 1085, 1088, 1096, 1097, 1106, 1107, 1108, 1110, 1119, 1120, 1122, 1124, 1126, 1127, 1128, 1133, 1135, 1136, 1137, 1138, 1139, 1148, 1153, 1160, 1162, 1163, 1164, 1165, 1169, 1170, 1172, 1173, 1176, 1177, 1178, 1180, 1181, 1183, 1185, 1189, 1191, 1193, 1194, 1195, 1197, 1198, 1199, 1206, 1208, 1213, 1215, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1236, 1250, 1255, 1256, 1257, 1258, 1261, 1262, 1263, 1265, 1266, 1268, 1272, 1273, 1281, 1284, 1286, 1287, 1290, 1294, 1295, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1308, 1309, 1310, 1311, 1315, 1318, 1320, 1322, 1323, 1325, 1329, 1330, 1335, 1336, 1337, 1338, 1341, 1346, 1352, 1354, 1355, 1358, 1363, 1365, 1366, 1368, 1371, 1385, 1388, 1405, 1409, 1410, 1411, 1412, 1415, 1416, 1419, 1423, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1460, 1461, 1462, 1463, 1465, 1472, 1473, 1474, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1504, 1505, 1506, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1533, 1534, 1548, 1551, 1553, 1554, 1555, 1556, 1557, 1559, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1572, 1580, 1581, 1582, 1597, 1598, 1600, 1601, 1602, 1607, 1608, 1617, 1618, 1622, 1625, 1627, 1636, 1637, 1638, 1650, 1651, 1652, 1661, 1662, 1663, 1664, 1666, 1669, 1677, 1690, 1691, 1696, 1698, 1699, 1701, 1703, 1706, 1707, 1708, 1709, 1715, 1723, 1724, 1726, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1750, 1753, 1754, 1757, 1759, 1763, 1764, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1795, 1801, 1809, 1813, 1816, 1820, 1822, 1823, 1835, 1837, 1839, 1840, 1841, 1846, 1847, 1848, 1855, 1858, 1867, 1870, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1888, 1892, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1916, 1920, 1921, 1932, 1936, 1939, 1942, 1945, 1946, 1947, 1948, 1950, 1953, 1954, 1956, 1972, 2002, 2003, 2004, 2005, 2006, 2007, 2010, 2013, 2016, 2017, 2020, 2021, 2024, 2027, 2032, 2033, 2034, 2036, 2037, 2039, 2040, 2041, 2043, 2044, 2046, 2048, 2050, 2051, 2054, 2056, 2057, 2058, 2059, 2061, 2062, 2065, 2066, 2067, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2083, 2088, 2090, 2091, 2092, 2094, 2097, 2098, 2102, 2103], "xpu": [0, 1, 1214, 1265, 1519, 1974, 1975, 1976, 1979, 1981, 2005, 2013, 2061, 2075], "hpu": [0, 2074], "attribut": [0, 1, 11, 12, 22, 23, 27, 28, 34, 50, 61, 63, 65, 70, 79, 84, 149, 289, 494, 495, 726, 737, 738, 739, 740, 741, 742, 744, 745, 755, 763, 790, 800, 801, 814, 815, 816, 837, 838, 839, 858, 859, 889, 893, 898, 900, 903, 905, 906, 1156, 1262, 1264, 1265, 1266, 1268, 1269, 1271, 1276, 1277, 1338, 1455, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1519, 1563, 1709, 1710, 1729, 1730, 1751, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1916, 1957, 1958, 1961, 2005, 2007, 2010, 2013, 2027, 2033, 2034, 2037, 2039, 2040, 2046, 2051, 2056, 2059, 2062, 2067, 2078, 2079, 2094, 2102, 2104, 2107], "thu": [0, 1, 11, 22, 27, 33, 45, 50, 52, 61, 784, 821, 824, 854, 1105, 1126, 1329, 1360, 1458, 1572, 1696, 1709, 1776, 1777, 1787, 1789, 1905, 2006, 2009, 2016, 2019, 2034, 2036, 2039, 2041, 2043, 2045, 2046, 2056, 2062, 2067, 2072, 2076, 2078, 2079], "obtain": [0, 3, 22, 27, 33, 37, 60, 61, 87, 495, 1209, 1385, 1438, 1526, 1609, 1709, 1780, 1786, 1809, 1826, 1921, 2009, 2024, 2025, 2036, 2050, 2056, 2058, 2061, 2062, 2101], "bool": [0, 1, 2, 3, 5, 12, 14, 22, 23, 26, 27, 28, 29, 31, 32, 33, 35, 38, 44, 47, 49, 50, 52, 59, 60, 61, 149, 195, 208, 244, 259, 318, 320, 327, 328, 329, 330, 332, 333, 338, 340, 400, 401, 414, 444, 445, 446, 447, 448, 457, 470, 495, 516, 580, 602, 679, 692, 693, 694, 695, 696, 698, 734, 757, 778, 779, 784, 793, 813, 840, 865, 873, 874, 875, 876, 880, 893, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 928, 941, 944, 946, 947, 949, 950, 956, 957, 963, 964, 965, 971, 972, 973, 979, 980, 986, 1000, 1007, 1014, 1044, 1050, 1062, 1106, 1107, 1108, 1111, 1118, 1123, 1141, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1167, 1168, 1169, 1173, 1176, 1177, 1181, 1195, 1196, 1198, 1199, 1204, 1206, 1223, 1224, 1227, 1228, 1246, 1250, 1253, 1254, 1256, 1262, 1265, 1269, 1272, 1273, 1281, 1282, 1285, 1287, 1295, 1296, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1318, 1320, 1322, 1323, 1326, 1327, 1328, 1329, 1335, 1336, 1337, 1338, 1347, 1348, 1349, 1350, 1352, 1353, 1355, 1357, 1363, 1365, 1366, 1368, 1371, 1378, 1381, 1382, 1399, 1405, 1410, 1411, 1412, 1413, 1414, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1466, 1467, 1471, 1472, 1473, 1475, 1476, 1477, 1478, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1510, 1511, 1512, 1513, 1514, 1519, 1522, 1523, 1524, 1525, 1526, 1528, 1533, 1534, 1537, 1538, 1539, 1540, 1547, 1551, 1552, 1559, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1572, 1580, 1581, 1582, 1590, 1597, 1598, 1608, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1622, 1625, 1627, 1629, 1636, 1637, 1661, 1669, 1677, 1696, 1702, 1708, 1709, 1710, 1714, 1715, 1718, 1719, 1721, 1723, 1726, 1728, 1729, 1730, 1751, 1752, 1753, 1754, 1756, 1759, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1809, 1815, 1817, 1819, 1820, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1855, 1860, 1864, 1869, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1902, 1903, 1904, 1905, 1906, 1907, 1914, 1915, 1916, 1919, 1920, 1929, 1935, 1939, 1944, 1953, 1954, 1957, 1958, 1960, 1963, 1964, 1965, 1974, 1990, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2013, 2020, 2021, 2024, 2025, 2026, 2027, 2044, 2051, 2054, 2055, 2056, 2057, 2059, 2060, 2061, 2066, 2067, 2072, 2074, 2075, 2077, 2078, 2079, 2081, 2083, 2090, 2094, 2098, 2102, 2104], "option": [0, 1, 2, 3, 5, 14, 22, 27, 29, 31, 32, 33, 35, 38, 42, 43, 44, 47, 48, 49, 52, 61, 63, 70, 80, 82, 87, 149, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 239, 266, 296, 324, 330, 392, 444, 445, 446, 447, 448, 486, 498, 499, 512, 519, 524, 536, 559, 579, 580, 582, 583, 584, 586, 587, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 734, 757, 778, 779, 784, 791, 793, 798, 817, 854, 859, 862, 865, 876, 878, 879, 880, 881, 882, 883, 884, 885, 892, 893, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 923, 924, 925, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 956, 959, 961, 962, 963, 964, 965, 967, 969, 970, 971, 972, 978, 981, 988, 989, 991, 992, 993, 994, 998, 1003, 1004, 1005, 1007, 1008, 1010, 1012, 1016, 1017, 1019, 1020, 1021, 1024, 1025, 1032, 1033, 1036, 1039, 1047, 1048, 1049, 1050, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1075, 1076, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1110, 1115, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1157, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1181, 1206, 1207, 1208, 1209, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1240, 1242, 1254, 1256, 1259, 1260, 1262, 1263, 1265, 1266, 1269, 1272, 1279, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1378, 1379, 1381, 1382, 1386, 1388, 1394, 1395, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1419, 1421, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1472, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1510, 1511, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1533, 1534, 1538, 1539, 1540, 1547, 1551, 1552, 1559, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1572, 1573, 1574, 1590, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1616, 1617, 1620, 1621, 1622, 1625, 1627, 1636, 1637, 1644, 1650, 1651, 1652, 1661, 1662, 1664, 1669, 1677, 1683, 1684, 1696, 1708, 1709, 1710, 1718, 1719, 1721, 1723, 1724, 1725, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1758, 1759, 1761, 1763, 1764, 1765, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1807, 1808, 1809, 1812, 1816, 1817, 1819, 1820, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1838, 1839, 1840, 1841, 1848, 1850, 1855, 1867, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1932, 1933, 1934, 1935, 1936, 1939, 1941, 1944, 1945, 1946, 1947, 1948, 1950, 1953, 1954, 1957, 1963, 1964, 1965, 1966, 1971, 1972, 1974, 1975, 1978, 1983, 1984, 1986, 1997, 2001, 2002, 2003, 2004, 2006, 2007, 2009, 2011, 2013, 2015, 2019, 2020, 2021, 2027, 2032, 2037, 2039, 2040, 2041, 2042, 2045, 2046, 2050, 2051, 2054, 2056, 2059, 2061, 2062, 2067, 2072, 2073, 2074, 2075, 2077, 2079, 2083, 2084, 2085, 2094, 2100, 2102, 2103, 2105], "whether": [0, 1, 2, 5, 7, 14, 19, 22, 23, 27, 28, 29, 32, 33, 35, 43, 44, 52, 59, 61, 86, 318, 320, 470, 516, 616, 679, 692, 694, 695, 698, 798, 823, 874, 875, 880, 889, 900, 901, 904, 905, 906, 908, 910, 915, 916, 917, 919, 920, 926, 941, 950, 963, 964, 965, 971, 973, 975, 978, 979, 980, 1046, 1062, 1157, 1162, 1174, 1177, 1179, 1223, 1224, 1262, 1265, 1273, 1274, 1282, 1287, 1295, 1296, 1302, 1304, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1320, 1322, 1323, 1326, 1327, 1328, 1329, 1337, 1353, 1355, 1363, 1365, 1366, 1368, 1371, 1400, 1405, 1410, 1411, 1412, 1413, 1438, 1478, 1484, 1519, 1528, 1533, 1569, 1587, 1588, 1589, 1609, 1637, 1669, 1702, 1709, 1723, 1726, 1729, 1742, 1756, 1759, 1764, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1795, 1807, 1817, 1820, 1864, 1914, 1915, 1916, 1919, 1920, 1939, 1944, 1953, 1954, 1957, 1958, 1964, 1965, 1969, 1991, 2004, 2009, 2015, 2016, 2020, 2027, 2033, 2037, 2039, 2042, 2044, 2054, 2056, 2060, 2062, 2067, 2072, 2074, 2076, 2077, 2083, 2091, 2092, 2094, 2095, 2101, 2103], "torch_dtyp": 0, "weight": [0, 22, 27, 29, 32, 33, 49, 50, 58, 61, 63, 155, 300, 360, 361, 495, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 744, 745, 748, 750, 751, 752, 753, 755, 759, 760, 762, 763, 764, 771, 772, 773, 780, 791, 792, 793, 807, 808, 832, 834, 841, 845, 849, 850, 851, 852, 853, 858, 859, 861, 862, 943, 994, 1162, 1164, 1172, 1174, 1227, 1228, 1265, 1269, 1275, 1277, 1282, 1291, 1405, 1431, 1432, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1461, 1462, 1470, 1471, 1473, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1519, 1523, 1524, 1525, 1526, 1527, 1534, 1535, 1537, 1549, 1563, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1616, 1617, 1626, 1635, 1639, 1642, 1658, 1660, 1661, 1670, 1674, 1677, 1680, 1699, 1708, 1709, 1716, 1717, 1718, 1719, 1721, 1723, 1724, 1725, 1727, 1729, 1740, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1757, 1758, 1759, 1761, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1823, 1957, 1969, 2004, 2005, 2007, 2008, 2009, 2013, 2019, 2020, 2026, 2027, 2032, 2039, 2041, 2042, 2046, 2051, 2054, 2062, 2063, 2064, 2065, 2072, 2077, 2082, 2083, 2094, 2098], "cach": [0, 2, 3, 19, 33, 61, 485, 972, 982, 1029, 1030, 1047, 1050, 1055, 1057, 1059, 1061, 1070, 1075, 1182, 1183, 1374, 1376, 1377, 1710, 1729, 1761, 1982, 2024, 2041, 2088, 2091, 2092, 2094, 2097, 2101, 2103, 2105], "insid": [0, 1, 7, 22, 44, 50, 52, 57, 60, 61, 905, 906, 1013, 1050, 1164, 1168, 1173, 1181, 1277, 1709, 2006, 2008, 2009, 2013, 2019, 2033, 2037, 2039, 2040, 2045, 2056, 2072, 2082, 2091, 2093, 2103], "custom_fwd": [0, 2033], "fwd": [0, 2097, 2101], "cast_input": [0, 2033], "helper": [0, 3, 27, 56, 61, 2004, 2005, 2008, 2037, 2038, 2056, 2059, 2067, 2102, 2104], "subclass": [0, 1, 14, 22, 29, 33, 37, 57, 61, 138, 536, 889, 890, 891, 905, 906, 1186, 1263, 1266, 1276, 1519, 1710, 1731, 1736, 1757, 2006, 2009, 2010, 2016, 2030, 2033, 2046, 2056, 2067, 2071, 2072, 2091, 2092, 2094, 2104], "page": [0, 6, 7, 9, 22, 28, 45, 48, 1338, 1563, 1565, 1567, 2037, 2038, 2046, 2057, 2067, 2100], "incom": [0, 27, 47, 780, 818, 819, 820, 821, 824, 1436, 1506, 1596, 1642, 2024, 2034], "non": [0, 1, 2, 3, 5, 14, 19, 21, 23, 27, 28, 29, 33, 35, 37, 44, 47, 48, 50, 52, 60, 63, 74, 77, 83, 87, 149, 334, 485, 487, 503, 512, 516, 544, 697, 733, 738, 739, 740, 741, 742, 744, 745, 755, 759, 763, 764, 771, 772, 773, 837, 865, 877, 889, 891, 893, 900, 902, 904, 905, 906, 919, 920, 935, 943, 956, 959, 972, 987, 988, 993, 1061, 1151, 1152, 1159, 1163, 1168, 1174, 1185, 1188, 1195, 1242, 1265, 1268, 1278, 1281, 1282, 1301, 1302, 1309, 1313, 1314, 1327, 1329, 1338, 1348, 1355, 1360, 1365, 1405, 1410, 1411, 1415, 1428, 1429, 1430, 1447, 1448, 1450, 1451, 1454, 1464, 1470, 1487, 1488, 1489, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1522, 1524, 1526, 1535, 1537, 1551, 1608, 1627, 1656, 1661, 1709, 1763, 1790, 1812, 1855, 1856, 1870, 1875, 1882, 1897, 1898, 1902, 1903, 1904, 1905, 1906, 1907, 1937, 1953, 1955, 1969, 2004, 2005, 2006, 2008, 2009, 2011, 2013, 2024, 2027, 2032, 2035, 2039, 2040, 2041, 2042, 2046, 2050, 2056, 2058, 2060, 2061, 2066, 2067, 2069, 2072, 2073, 2075, 2076, 2077, 2079, 2085, 2088, 2090, 2091, 2093, 2094, 2095, 2101, 2102, 2104], "intern": [0, 3, 8, 9, 14, 22, 23, 27, 29, 33, 35, 41, 49, 52, 57, 61, 900, 1005, 1039, 1060, 1163, 1265, 1302, 1304, 1320, 1323, 1346, 1433, 1434, 1435, 1472, 1559, 1600, 1601, 1602, 1625, 1726, 1770, 1863, 1905, 1957, 2010, 2033, 2034, 2036, 2037, 2042, 2043, 2049, 2050, 2054, 2068, 2069, 2074, 2076, 2084, 2091, 2094, 2103], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 22, 27, 29, 31, 32, 33, 35, 37, 44, 45, 49, 50, 52, 53, 60, 61, 79, 87, 149, 208, 220, 496, 497, 498, 740, 742, 780, 792, 794, 816, 859, 861, 862, 865, 879, 880, 890, 893, 895, 896, 897, 905, 908, 909, 910, 919, 941, 950, 986, 997, 998, 1000, 1001, 1005, 1007, 1008, 1010, 1015, 1016, 1019, 1020, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1032, 1033, 1036, 1038, 1039, 1042, 1044, 1045, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1072, 1074, 1076, 1078, 1081, 1082, 1083, 1106, 1108, 1118, 1123, 1141, 1157, 1158, 1160, 1178, 1181, 1191, 1212, 1213, 1214, 1215, 1223, 1224, 1248, 1249, 1265, 1269, 1281, 1285, 1336, 1338, 1352, 1367, 1374, 1377, 1378, 1379, 1386, 1393, 1394, 1395, 1401, 1458, 1461, 1465, 1519, 1559, 1567, 1571, 1619, 1625, 1636, 1677, 1695, 1696, 1698, 1709, 1730, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1745, 1746, 1768, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1819, 1828, 1830, 1832, 1834, 1835, 1859, 1863, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1895, 1902, 1903, 1904, 1905, 1906, 1907, 1916, 1935, 1946, 1948, 1953, 1959, 1960, 1974, 1975, 1977, 1978, 1981, 1982, 1983, 1984, 1986, 1989, 1990, 1992, 1994, 1996, 1997, 1999, 2001, 2002, 2005, 2006, 2008, 2009, 2010, 2011, 2013, 2016, 2021, 2024, 2027, 2033, 2034, 2037, 2042, 2044, 2045, 2046, 2047, 2048, 2051, 2052, 2056, 2058, 2059, 2060, 2062, 2065, 2067, 2068, 2072, 2074, 2075, 2077, 2078, 2082, 2091, 2093, 2094, 2099, 2100, 2101, 2103, 2104, 2105], "outsid": [0, 5, 9, 22, 37, 49, 50, 52, 57, 63, 73, 74, 683, 794, 885, 1162, 1164, 1168, 1173, 1266, 1625, 1709, 1792, 1793, 1798, 1799, 1805, 2008, 2009, 2032, 2034, 2037, 2040, 2041, 2079, 2088, 2094, 2099], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 20, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 37, 41, 43, 44, 45, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 149, 195, 208, 254, 259, 334, 444, 445, 446, 447, 448, 472, 473, 485, 487, 495, 497, 543, 579, 580, 602, 603, 617, 679, 688, 692, 694, 695, 696, 698, 734, 759, 778, 780, 784, 786, 790, 796, 837, 839, 847, 858, 864, 874, 875, 877, 889, 892, 893, 898, 900, 901, 905, 906, 910, 919, 920, 928, 939, 942, 960, 963, 964, 965, 972, 974, 977, 986, 987, 988, 989, 1004, 1007, 1008, 1010, 1015, 1043, 1046, 1047, 1093, 1095, 1109, 1141, 1153, 1162, 1163, 1166, 1167, 1170, 1174, 1203, 1219, 1228, 1229, 1240, 1262, 1265, 1269, 1273, 1276, 1277, 1278, 1281, 1286, 1287, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1317, 1319, 1320, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1337, 1346, 1353, 1355, 1360, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1378, 1400, 1410, 1411, 1412, 1413, 1431, 1432, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1455, 1456, 1462, 1465, 1466, 1467, 1470, 1473, 1478, 1481, 1482, 1483, 1489, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1523, 1524, 1525, 1526, 1527, 1534, 1535, 1551, 1553, 1559, 1567, 1571, 1572, 1590, 1600, 1601, 1602, 1608, 1617, 1620, 1621, 1625, 1636, 1661, 1663, 1664, 1666, 1670, 1677, 1683, 1696, 1698, 1699, 1702, 1703, 1708, 1709, 1723, 1726, 1728, 1731, 1735, 1737, 1740, 1750, 1751, 1758, 1759, 1763, 1765, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1793, 1794, 1795, 1797, 1801, 1803, 1807, 1817, 1819, 1820, 1821, 1822, 1839, 1841, 1851, 1863, 1884, 1898, 1899, 1900, 1905, 1911, 1913, 1914, 1915, 1916, 1919, 1920, 1932, 1938, 1944, 1955, 1964, 1965, 1969, 1974, 1975, 1991, 2006, 2008, 2009, 2013, 2015, 2016, 2021, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2044, 2045, 2046, 2048, 2049, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2066, 2067, 2068, 2069, 2072, 2074, 2075, 2077, 2078, 2079, 2081, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2097, 2099, 2103], "effect": [0, 3, 5, 7, 14, 22, 23, 27, 33, 47, 49, 50, 52, 57, 61, 63, 66, 195, 208, 602, 734, 778, 784, 1039, 1088, 1174, 1265, 1308, 1309, 1310, 1311, 1367, 1423, 1438, 1449, 1450, 1451, 1456, 1457, 1458, 1459, 1463, 1519, 1525, 1572, 1636, 1664, 1696, 1702, 1709, 1710, 1736, 1787, 1795, 1895, 1900, 1920, 1942, 1958, 1969, 2004, 2006, 2013, 2019, 2032, 2033, 2034, 2037, 2039, 2042, 2062, 2065, 2074, 2075, 2077, 2088, 2091], "custom_bwd": [0, 2033], "bwd": [0, 2101], "small": [0, 3, 7, 9, 22, 23, 27, 33, 44, 865, 919, 920, 972, 1018, 1061, 1328, 1329, 1341, 1343, 1423, 1453, 1528, 1533, 1548, 1568, 1572, 1607, 1662, 1669, 1709, 1792, 1798, 1807, 1920, 2006, 2008, 2009, 2017, 2037, 2039, 2041, 2046, 2049, 2051, 2056, 2059, 2062, 2063, 2072, 2073, 2079, 2088, 2090, 2091, 2093, 2094, 2095, 2097, 2101, 2103, 2105], "magnitud": [0, 989, 1725, 1761, 1870, 2032, 2033, 2037], "represent": [0, 3, 14, 22, 27, 29, 42, 49, 50, 61, 80, 480, 757, 800, 825, 1008, 1121, 1122, 1124, 1148, 1209, 1265, 1305, 1308, 1310, 1313, 1409, 1519, 1525, 1807, 2005, 2006, 2009, 2017, 2027, 2039, 2049, 2054, 2056, 2059, 2061, 2062, 2072, 2079, 2090, 2094, 2103, 2107], "These": [0, 1, 2, 3, 8, 14, 15, 22, 27, 28, 33, 49, 53, 55, 58, 61, 62, 485, 793, 880, 994, 1105, 1170, 1262, 1265, 1308, 1373, 1423, 1519, 1699, 1724, 2005, 2006, 2007, 2008, 2009, 2017, 2021, 2025, 2026, 2028, 2033, 2034, 2037, 2038, 2039, 2046, 2049, 2051, 2056, 2059, 2060, 2065, 2067, 2068, 2075, 2081, 2085, 2088, 2090, 2091, 2092, 2094, 2099, 2103, 2104, 2106], "flush": [0, 1, 29, 49, 1061, 1276, 1851, 1864, 2049, 2077], "zero": [0, 1, 2, 23, 27, 28, 31, 33, 47, 50, 52, 57, 61, 63, 70, 72, 73, 74, 149, 257, 259, 314, 485, 512, 514, 543, 544, 583, 584, 586, 587, 622, 678, 690, 697, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 758, 759, 763, 767, 768, 771, 772, 773, 774, 776, 779, 780, 794, 798, 818, 819, 820, 821, 824, 829, 877, 886, 887, 888, 893, 900, 902, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 942, 943, 963, 964, 965, 970, 989, 993, 1050, 1061, 1066, 1067, 1096, 1100, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1144, 1153, 1159, 1162, 1170, 1181, 1225, 1226, 1229, 1250, 1262, 1265, 1277, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1338, 1346, 1347, 1348, 1349, 1350, 1355, 1356, 1405, 1409, 1413, 1427, 1428, 1429, 1430, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1465, 1470, 1471, 1473, 1486, 1487, 1488, 1489, 1490, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1525, 1528, 1531, 1532, 1533, 1534, 1535, 1537, 1557, 1571, 1572, 1575, 1576, 1577, 1592, 1593, 1594, 1603, 1604, 1605, 1607, 1609, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1625, 1646, 1647, 1648, 1662, 1663, 1664, 1677, 1708, 1734, 1735, 1736, 1737, 1752, 1759, 1763, 1767, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1807, 1819, 1821, 1822, 1823, 1832, 1839, 1848, 1858, 1875, 1884, 1888, 1898, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1920, 1935, 1936, 1938, 1944, 2003, 2006, 2007, 2009, 2011, 2021, 2024, 2025, 2026, 2027, 2032, 2034, 2037, 2039, 2046, 2049, 2052, 2056, 2057, 2059, 2061, 2062, 2065, 2067, 2072, 2073, 2075, 2077, 2078, 2079, 2081, 2091, 2093, 2096], "underflow": [0, 1484, 2033], "updat": [0, 9, 11, 22, 23, 31, 35, 44, 49, 52, 55, 56, 61, 85, 487, 512, 514, 759, 798, 799, 823, 896, 897, 926, 939, 1162, 1171, 1265, 1302, 1433, 1434, 1435, 1455, 1461, 1462, 1470, 1481, 1482, 1483, 1519, 1520, 1529, 1559, 1616, 1617, 1716, 1717, 1724, 1729, 1759, 1773, 1779, 1784, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 2004, 2006, 2019, 2033, 2034, 2037, 2038, 2039, 2046, 2048, 2051, 2052, 2054, 2056, 2057, 2058, 2060, 2062, 2067, 2068, 2069, 2077, 2088, 2102], "lost": [0, 35, 45, 48, 1455, 1515, 1516, 1517, 2094], "To": [0, 1, 2, 3, 4, 5, 6, 9, 14, 15, 19, 22, 23, 27, 28, 29, 31, 32, 33, 35, 36, 42, 43, 45, 47, 49, 50, 52, 57, 61, 78, 81, 82, 85, 334, 498, 556, 733, 895, 914, 928, 938, 969, 972, 1051, 1072, 1093, 1095, 1105, 1133, 1135, 1139, 1150, 1265, 1266, 1268, 1269, 1276, 1277, 1311, 1333, 1338, 1366, 1423, 1432, 1458, 1484, 1515, 1516, 1517, 1519, 1573, 1574, 1598, 1709, 1725, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1761, 1801, 1809, 1820, 1859, 1863, 1866, 1905, 1921, 1992, 1994, 2004, 2006, 2008, 2009, 2013, 2024, 2025, 2026, 2028, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2047, 2048, 2051, 2056, 2058, 2059, 2060, 2061, 2062, 2067, 2068, 2069, 2072, 2075, 2076, 2077, 2078, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2101, 2102, 2103, 2105], "prevent": [0, 7, 8, 22, 23, 27, 28, 29, 35, 52, 61, 485, 498, 734, 900, 903, 905, 1007, 1086, 1087, 1106, 1107, 1108, 1262, 1365, 1378, 1410, 1413, 1456, 1525, 1551, 1644, 1683, 1684, 1699, 1709, 1774, 1817, 1896, 1899, 1919, 1946, 1948, 1957, 1974, 2013, 2024, 2033, 2034, 2037, 2038, 2041, 2042, 2046, 2050, 2059, 2061, 2069, 2072, 2073, 2088, 2093, 2094], "multipli": [0, 27, 312, 320, 422, 512, 684, 685, 686, 687, 688, 689, 690, 759, 778, 784, 785, 786, 940, 952, 1075, 1088, 1105, 1219, 1230, 1289, 1301, 1302, 1306, 1319, 1321, 1323, 1329, 1331, 1360, 1370, 1385, 1404, 1407, 1431, 1446, 1447, 1448, 1451, 1470, 1489, 1572, 1573, 1574, 1636, 1696, 1697, 1698, 1729, 1792, 1798, 1800, 1807, 1863, 1890, 1893, 1897, 1898, 1912, 1916, 1917, 1920, 1942, 2007, 2025, 2037, 2043, 2046, 2049, 2057, 2072, 2073, 2094], "factor": [0, 3, 23, 33, 61, 688, 689, 690, 798, 818, 940, 963, 1308, 1309, 1310, 1313, 1315, 1355, 1356, 1357, 1456, 1479, 1507, 1531, 1532, 1634, 1667, 1668, 1677, 1787, 1788, 1789, 1791, 1792, 1794, 1796, 1797, 1798, 1799, 1800, 1803, 1804, 1805, 1819, 1876, 1898, 1920, 2032, 2033, 2062, 2072, 2094], "flow": [0, 50, 63, 69, 72, 969, 986, 1278, 1281, 1590, 1625, 1709, 2005, 2006, 2032, 2034, 2037, 2039, 2051, 2053, 2056, 2069, 2088, 2089, 2090, 2091, 2094, 2101], "through": [0, 5, 7, 9, 11, 15, 22, 27, 29, 33, 37, 49, 50, 52, 57, 60, 61, 63, 66, 68, 70, 78, 495, 791, 839, 854, 861, 862, 900, 903, 905, 906, 919, 920, 1012, 1050, 1132, 1166, 1174, 1263, 1266, 1268, 1281, 1282, 1284, 1301, 1302, 1323, 1329, 1346, 1526, 1564, 1565, 1566, 1567, 1627, 1699, 1709, 1716, 1717, 1729, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1819, 1969, 2004, 2005, 2008, 2009, 2013, 2015, 2021, 2024, 2025, 2026, 2034, 2037, 2039, 2041, 2043, 2045, 2046, 2052, 2053, 2054, 2056, 2059, 2060, 2062, 2065, 2067, 2068, 2069, 2072, 2076, 2081, 2083, 2084, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2102, 2103, 2107], "word": [0, 1, 8, 27, 44, 45, 50, 55, 60, 61, 956, 1180, 1423, 1446, 1447, 1448, 1461, 1462, 1563, 1616, 1617, 1636, 1696, 1709, 1723, 1855, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2008, 2034, 2041, 2042, 2059, 2068, 2091], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 22, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 55, 56, 57, 61, 63, 71, 72, 83, 152, 153, 220, 221, 312, 314, 320, 334, 397, 401, 447, 457, 470, 485, 486, 487, 502, 512, 514, 516, 519, 543, 616, 679, 688, 692, 694, 695, 696, 698, 814, 816, 841, 880, 889, 893, 905, 906, 908, 910, 915, 924, 925, 928, 941, 942, 950, 959, 960, 972, 975, 986, 994, 1010, 1019, 1020, 1050, 1061, 1096, 1104, 1111, 1125, 1135, 1140, 1142, 1156, 1162, 1163, 1174, 1181, 1189, 1190, 1191, 1206, 1207, 1223, 1224, 1227, 1228, 1240, 1262, 1264, 1265, 1268, 1269, 1271, 1273, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1287, 1288, 1297, 1301, 1302, 1318, 1325, 1326, 1329, 1331, 1337, 1346, 1348, 1353, 1360, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1405, 1410, 1411, 1413, 1415, 1423, 1427, 1431, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1455, 1461, 1462, 1466, 1467, 1472, 1477, 1481, 1482, 1483, 1511, 1519, 1522, 1523, 1524, 1525, 1526, 1567, 1569, 1607, 1616, 1617, 1620, 1621, 1625, 1642, 1661, 1663, 1666, 1701, 1702, 1703, 1706, 1707, 1709, 1710, 1714, 1715, 1716, 1717, 1718, 1720, 1723, 1726, 1729, 1753, 1757, 1762, 1764, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1803, 1817, 1843, 1844, 1858, 1863, 1870, 1893, 1897, 1901, 1902, 1903, 1904, 1906, 1907, 1914, 1915, 1916, 1919, 1920, 1932, 1936, 1942, 1944, 1957, 1960, 1962, 1964, 1965, 1967, 1969, 1971, 1975, 2004, 2006, 2007, 2008, 2009, 2011, 2013, 2015, 2016, 2017, 2019, 2021, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2054, 2056, 2058, 2059, 2060, 2062, 2063, 2066, 2067, 2068, 2069, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2105], "larger": [0, 9, 27, 33, 61, 253, 498, 920, 943, 1061, 1163, 1320, 1323, 1423, 1455, 1461, 1462, 1511, 1569, 1572, 1616, 1617, 2034, 2037, 2041, 2043, 2045, 2049, 2051, 2072, 2077, 2097, 2100, 2101, 2102], "thei": [0, 1, 3, 5, 7, 9, 11, 12, 17, 18, 22, 27, 29, 32, 33, 34, 44, 49, 50, 52, 55, 56, 60, 61, 83, 320, 334, 335, 485, 685, 688, 689, 696, 799, 814, 815, 816, 823, 841, 854, 859, 890, 900, 903, 905, 915, 916, 920, 940, 972, 1050, 1065, 1109, 1156, 1162, 1172, 1178, 1187, 1192, 1194, 1254, 1255, 1262, 1265, 1273, 1278, 1287, 1301, 1302, 1308, 1329, 1337, 1359, 1363, 1366, 1368, 1371, 1405, 1428, 1429, 1430, 1449, 1450, 1451, 1465, 1504, 1512, 1513, 1514, 1519, 1525, 1536, 1548, 1571, 1625, 1627, 1699, 1709, 1710, 1714, 1723, 1727, 1750, 1753, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1797, 1800, 1859, 1916, 1920, 1957, 1958, 1963, 2004, 2006, 2008, 2009, 2011, 2013, 2015, 2016, 2019, 2021, 2024, 2025, 2026, 2027, 2028, 2032, 2033, 2034, 2037, 2038, 2039, 2040, 2042, 2044, 2046, 2048, 2049, 2051, 2052, 2054, 2056, 2058, 2059, 2060, 2062, 2067, 2072, 2075, 2077, 2078, 2079, 2081, 2082, 2088, 2090, 2091, 2093, 2094, 2095, 2096, 2099, 2103, 2104], "don": [0, 1, 4, 7, 9, 11, 27, 29, 43, 52, 53, 55, 57, 61, 63, 73, 74, 149, 784, 794, 893, 895, 914, 1079, 1162, 1180, 1181, 1187, 1189, 1191, 1195, 1281, 1359, 1481, 1482, 1483, 1572, 1696, 1699, 1709, 1765, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1862, 2004, 2006, 2010, 2024, 2025, 2026, 2034, 2037, 2039, 2041, 2046, 2048, 2052, 2056, 2058, 2059, 2060, 2062, 2067, 2068, 2072, 2088, 2090, 2092, 2093, 2094, 2095, 2101, 2104], "t": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 22, 23, 27, 29, 33, 34, 35, 37, 41, 42, 43, 44, 49, 50, 52, 53, 55, 57, 58, 60, 61, 63, 73, 74, 80, 83, 149, 312, 314, 320, 457, 485, 522, 536, 570, 686, 687, 696, 759, 780, 784, 794, 822, 825, 877, 878, 879, 880, 889, 891, 893, 895, 900, 901, 903, 905, 906, 909, 914, 926, 963, 964, 965, 970, 986, 994, 1005, 1008, 1029, 1047, 1048, 1079, 1103, 1121, 1126, 1127, 1128, 1129, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1144, 1156, 1157, 1158, 1159, 1162, 1163, 1164, 1174, 1180, 1181, 1183, 1187, 1189, 1191, 1194, 1195, 1204, 1206, 1219, 1229, 1262, 1263, 1265, 1266, 1268, 1272, 1273, 1277, 1279, 1281, 1284, 1286, 1295, 1296, 1302, 1304, 1305, 1308, 1315, 1323, 1324, 1329, 1337, 1338, 1346, 1359, 1372, 1373, 1388, 1402, 1412, 1432, 1436, 1438, 1446, 1447, 1448, 1455, 1461, 1462, 1470, 1479, 1481, 1482, 1483, 1484, 1489, 1506, 1519, 1535, 1551, 1553, 1563, 1571, 1572, 1596, 1600, 1601, 1602, 1609, 1616, 1617, 1637, 1642, 1662, 1683, 1696, 1699, 1702, 1703, 1709, 1710, 1723, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1751, 1753, 1754, 1765, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1793, 1809, 1815, 1819, 1836, 1859, 1861, 1862, 1870, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893, 1897, 1916, 1920, 1921, 1926, 1932, 1935, 1941, 1944, 1969, 1970, 1982, 2004, 2006, 2007, 2008, 2010, 2013, 2021, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2039, 2040, 2042, 2043, 2045, 2046, 2048, 2051, 2052, 2056, 2057, 2058, 2059, 2060, 2062, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2088, 2090, 2092, 2093, 2095, 2098, 2101, 2103, 2104], "grad": [0, 1, 5, 27, 33, 53, 56, 57, 61, 149, 334, 457, 486, 487, 494, 495, 502, 503, 580, 679, 880, 889, 893, 895, 896, 897, 900, 904, 905, 906, 908, 910, 915, 916, 919, 920, 924, 925, 1050, 1109, 1162, 1163, 1165, 1169, 1173, 1174, 1248, 1265, 1338, 1519, 1709, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1897, 1957, 1969, 2005, 2006, 2007, 2013, 2025, 2026, 2027, 2033, 2038, 2039, 2040, 2043, 2046, 2048, 2057, 2067, 2068, 2072, 2078, 2099, 2101], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 14, 26, 27, 31, 33, 35, 37, 41, 43, 44, 47, 49, 50, 52, 55, 56, 57, 60, 61, 63, 149, 253, 257, 334, 434, 457, 582, 616, 679, 694, 695, 747, 756, 759, 789, 793, 861, 880, 916, 917, 939, 952, 1041, 1045, 1096, 1105, 1109, 1159, 1162, 1174, 1179, 1181, 1240, 1264, 1266, 1269, 1276, 1281, 1291, 1295, 1296, 1306, 1308, 1309, 1313, 1314, 1321, 1326, 1327, 1329, 1335, 1338, 1355, 1359, 1360, 1366, 1370, 1374, 1407, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1458, 1461, 1462, 1465, 1470, 1471, 1481, 1482, 1483, 1489, 1490, 1492, 1493, 1494, 1501, 1502, 1503, 1513, 1514, 1520, 1526, 1529, 1535, 1537, 1559, 1571, 1608, 1661, 1709, 1710, 1716, 1717, 1726, 1729, 1733, 1759, 1762, 1764, 1769, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1804, 1808, 1813, 1855, 1858, 1859, 1863, 1888, 1893, 1920, 1941, 1944, 1957, 1958, 1969, 1988, 2003, 2004, 2005, 2006, 2008, 2009, 2011, 2013, 2019, 2024, 2025, 2026, 2027, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2046, 2048, 2049, 2050, 2053, 2054, 2056, 2059, 2060, 2062, 2067, 2069, 2071, 2072, 2074, 2075, 2079, 2088, 2090, 2091, 2103, 2105], "interfer": [0, 2021, 2037, 2056, 2094], "learn": [0, 7, 8, 15, 33, 43, 49, 52, 61, 85, 1436, 1452, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1478, 1491, 1504, 1506, 1527, 1549, 1563, 1565, 1567, 1568, 1569, 1680, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 2005, 2013, 2028, 2032, 2037, 2044, 2046, 2047, 2053, 2059, 2062, 2067, 2069, 2084, 2087, 2089, 2090, 2091, 2092], "rate": [0, 2, 8, 23, 33, 52, 1457, 1458, 1459, 1463, 1566, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1812, 2005, 2045, 2077, 2094, 2100], "fp16": [0, 2, 728, 1709, 1716, 1717, 2062, 2063], "everi": [0, 1, 2, 8, 9, 22, 23, 27, 29, 31, 33, 35, 50, 52, 57, 61, 480, 486, 609, 679, 780, 818, 900, 901, 905, 924, 925, 928, 972, 1088, 1105, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1163, 1219, 1228, 1265, 1297, 1311, 1321, 1324, 1355, 1427, 1456, 1457, 1458, 1459, 1463, 1512, 1519, 1553, 1555, 1559, 1611, 1612, 1613, 1618, 1635, 1650, 1651, 1652, 1666, 1684, 1701, 1702, 1703, 1706, 1707, 1709, 1724, 1758, 1761, 1762, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1859, 1920, 1954, 2009, 2015, 2021, 2033, 2034, 2037, 2038, 2039, 2040, 2042, 2043, 2047, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2067, 2068, 2069, 2072, 2074, 2075, 2077, 2079, 2090, 2091, 2093, 2100, 2101, 2102, 2103], "most": [0, 1, 3, 4, 7, 8, 15, 22, 27, 29, 31, 33, 34, 35, 36, 43, 44, 47, 48, 52, 57, 58, 60, 61, 63, 485, 498, 792, 900, 901, 902, 903, 905, 906, 911, 915, 919, 932, 972, 1074, 1088, 1105, 1163, 1250, 1263, 1266, 1371, 1423, 1567, 1625, 1677, 1709, 1716, 1717, 1729, 1784, 1863, 1895, 1942, 2004, 2006, 2008, 2009, 2011, 2016, 2017, 2024, 2026, 2027, 2034, 2037, 2039, 2042, 2048, 2049, 2050, 2054, 2058, 2061, 2062, 2068, 2069, 2072, 2075, 2077, 2079, 2084, 2087, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2102, 2103], "bf16": [0, 2], "pretrain": [0, 29, 862, 1461, 1462, 2004, 2034, 2056], "cannot": [0, 3, 8, 9, 12, 22, 23, 27, 29, 33, 34, 37, 44, 49, 52, 53, 57, 58, 60, 61, 221, 253, 523, 544, 880, 986, 1126, 1128, 1136, 1137, 1138, 1144, 1157, 1162, 1190, 1262, 1270, 1405, 1438, 1461, 1572, 1609, 1677, 1709, 1770, 1921, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2017, 2021, 2026, 2027, 2034, 2038, 2039, 2051, 2052, 2054, 2056, 2062, 2067, 2069, 2072, 2074, 2075, 2077, 2088, 2091, 2092, 2094, 2095, 2104], "numer": [0, 11, 22, 24, 33, 50, 53, 58, 686, 792, 919, 920, 956, 1269, 1281, 1282, 1297, 1301, 1302, 1306, 1311, 1319, 1320, 1323, 1326, 1329, 1331, 1353, 1355, 1432, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1534, 1553, 1556, 1559, 1568, 1616, 1637, 1644, 1677, 1683, 1685, 1708, 1724, 1758, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1823, 1855, 1875, 1920, 2005, 2009, 2010, 2014, 2019, 2037, 2039, 2040, 2056, 2062, 2073, 2077, 2078, 2094, 2103, 2107], "max": [0, 22, 27, 35, 37, 43, 44, 47, 49, 52, 61, 63, 73, 74, 115, 184, 185, 186, 187, 299, 694, 695, 696, 757, 769, 770, 779, 781, 782, 801, 818, 819, 820, 821, 824, 874, 928, 943, 960, 967, 968, 972, 994, 1084, 1119, 1120, 1191, 1226, 1277, 1297, 1311, 1318, 1320, 1322, 1323, 1335, 1424, 1425, 1426, 1437, 1438, 1452, 1453, 1462, 1466, 1467, 1472, 1477, 1478, 1486, 1487, 1488, 1505, 1507, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1522, 1523, 1524, 1527, 1539, 1540, 1547, 1568, 1569, 1571, 1587, 1588, 1589, 1599, 1607, 1617, 1620, 1621, 1636, 1640, 1650, 1651, 1652, 1662, 1666, 1670, 1672, 1678, 1696, 1714, 1753, 1776, 1777, 1778, 1788, 1793, 1794, 1803, 1824, 1825, 1897, 1914, 1915, 1927, 1928, 1957, 1964, 1965, 2006, 2007, 2016, 2021, 2027, 2035, 2037, 2041, 2057, 2062, 2065, 2085, 2090, 2093, 2097, 2098, 2107], "65504": 0, "overflow": [0, 1086, 1087, 1365, 1410, 1413, 1644, 1683, 1684, 1817, 1848, 1896, 1899, 1919, 1946, 1948, 2037, 2049, 2073], "instead": [0, 1, 3, 5, 8, 9, 14, 19, 22, 23, 27, 29, 32, 33, 35, 41, 44, 45, 49, 50, 52, 55, 56, 57, 59, 61, 63, 72, 405, 457, 485, 498, 512, 747, 756, 767, 768, 792, 816, 825, 880, 890, 905, 906, 908, 909, 910, 911, 914, 919, 956, 962, 1140, 1142, 1167, 1168, 1169, 1170, 1173, 1174, 1194, 1197, 1210, 1252, 1263, 1265, 1266, 1270, 1295, 1296, 1302, 1304, 1320, 1323, 1329, 1335, 1337, 1366, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1452, 1454, 1455, 1457, 1458, 1459, 1463, 1470, 1478, 1484, 1485, 1486, 1487, 1488, 1489, 1510, 1511, 1512, 1513, 1514, 1519, 1522, 1523, 1524, 1526, 1533, 1535, 1547, 1551, 1552, 1553, 1559, 1568, 1592, 1593, 1594, 1597, 1598, 1608, 1618, 1625, 1637, 1650, 1651, 1652, 1661, 1669, 1683, 1709, 1759, 1761, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1794, 1795, 1801, 1824, 1825, 1835, 1855, 1859, 1901, 1916, 1920, 1957, 1969, 2006, 2008, 2009, 2013, 2016, 2017, 2026, 2032, 2033, 2034, 2038, 2039, 2040, 2041, 2043, 2044, 2048, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2061, 2062, 2065, 2068, 2071, 2072, 2078, 2079, 2081, 2083, 2088, 2089, 2090, 2091, 2093, 2094, 2099, 2101, 2102, 2103, 2104], "case": [0, 1, 3, 4, 8, 9, 11, 14, 15, 22, 23, 27, 29, 31, 32, 33, 35, 36, 37, 44, 45, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 63, 83, 149, 153, 195, 351, 485, 495, 498, 679, 759, 783, 790, 793, 819, 820, 822, 825, 858, 865, 893, 905, 906, 908, 910, 914, 935, 939, 941, 943, 948, 989, 1004, 1029, 1051, 1052, 1072, 1073, 1074, 1105, 1126, 1128, 1136, 1137, 1138, 1153, 1164, 1168, 1173, 1181, 1191, 1194, 1225, 1250, 1263, 1266, 1275, 1278, 1279, 1281, 1295, 1297, 1301, 1302, 1306, 1311, 1312, 1313, 1315, 1321, 1324, 1329, 1331, 1335, 1337, 1338, 1343, 1346, 1355, 1366, 1405, 1423, 1428, 1429, 1430, 1431, 1432, 1446, 1447, 1448, 1450, 1451, 1452, 1454, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1474, 1475, 1476, 1477, 1478, 1479, 1485, 1486, 1487, 1488, 1505, 1510, 1512, 1513, 1514, 1525, 1526, 1527, 1538, 1551, 1557, 1562, 1567, 1569, 1571, 1590, 1608, 1617, 1625, 1629, 1630, 1661, 1663, 1670, 1709, 1711, 1712, 1716, 1717, 1723, 1726, 1729, 1730, 1763, 1764, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1801, 1803, 1839, 1842, 1855, 1857, 1870, 1873, 1905, 1920, 1921, 1952, 1953, 1957, 1972, 1982, 1992, 1993, 1994, 1995, 2004, 2009, 2014, 2017, 2024, 2025, 2026, 2032, 2033, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2043, 2046, 2048, 2049, 2051, 2056, 2058, 2059, 2060, 2062, 2063, 2065, 2066, 2067, 2068, 2069, 2072, 2073, 2074, 2076, 2077, 2078, 2079, 2084, 2090, 2091, 2093, 2094, 2095, 2099, 2101, 2102, 2103, 2104, 2107], "decreas": [0, 33, 1061, 1311, 1457, 1458, 1459, 1463, 1532, 1751, 1752, 1788, 1795, 1803, 2015, 2019, 2048, 2050, 2072, 2075], "attempt": [0, 1, 8, 14, 27, 29, 42, 44, 45, 57, 84, 966, 972, 975, 990, 1269, 1276, 1355, 1677, 1711, 1712, 1776, 1777, 1789, 1957, 1960, 2006, 2009, 2024, 2025, 2026, 2033, 2037, 2039, 2052, 2053, 2058, 2059, 2067, 2090, 2093, 2094, 2103], "bring": [0, 53, 61, 1126, 1590, 1625, 2060, 2097, 2100], "number": [0, 1, 2, 3, 4, 5, 7, 14, 22, 23, 27, 29, 31, 33, 35, 42, 43, 44, 48, 49, 53, 55, 58, 61, 63, 68, 84, 87, 153, 172, 217, 231, 253, 312, 351, 376, 397, 401, 434, 445, 470, 472, 473, 480, 492, 496, 498, 512, 514, 516, 542, 544, 545, 557, 582, 583, 584, 586, 587, 588, 607, 616, 684, 685, 686, 687, 688, 689, 690, 697, 757, 759, 767, 768, 771, 772, 773, 780, 818, 865, 877, 890, 894, 905, 919, 935, 937, 940, 942, 943, 948, 952, 954, 958, 966, 967, 971, 989, 993, 994, 999, 1010, 1012, 1018, 1027, 1036, 1037, 1048, 1050, 1051, 1052, 1061, 1072, 1073, 1076, 1077, 1097, 1100, 1102, 1105, 1106, 1110, 1118, 1148, 1150, 1153, 1157, 1159, 1161, 1178, 1206, 1208, 1216, 1217, 1218, 1222, 1226, 1227, 1228, 1240, 1241, 1262, 1263, 1265, 1279, 1286, 1289, 1290, 1297, 1311, 1320, 1329, 1333, 1338, 1343, 1354, 1358, 1366, 1375, 1379, 1380, 1384, 1386, 1397, 1404, 1405, 1409, 1413, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1436, 1437, 1438, 1439, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1460, 1461, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1484, 1485, 1489, 1490, 1495, 1496, 1497, 1498, 1499, 1500, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1518, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1533, 1535, 1537, 1538, 1539, 1540, 1547, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1592, 1593, 1594, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1616, 1617, 1620, 1621, 1626, 1636, 1637, 1639, 1642, 1650, 1651, 1652, 1661, 1663, 1669, 1670, 1677, 1699, 1709, 1724, 1729, 1734, 1735, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1750, 1751, 1752, 1754, 1758, 1763, 1764, 1765, 1767, 1768, 1771, 1779, 1792, 1793, 1794, 1795, 1798, 1799, 1801, 1802, 1803, 1809, 1812, 1816, 1826, 1828, 1829, 1830, 1832, 1833, 1834, 1839, 1841, 1842, 1845, 1846, 1847, 1848, 1856, 1860, 1863, 1864, 1865, 1866, 1867, 1868, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1915, 1916, 1917, 1921, 1936, 1937, 1938, 1946, 1948, 1953, 1954, 1959, 1960, 1963, 1964, 1965, 1966, 1967, 1968, 1975, 1980, 1986, 1987, 1992, 1993, 1994, 1995, 1997, 1998, 2002, 2005, 2007, 2008, 2009, 2010, 2011, 2013, 2016, 2021, 2024, 2027, 2032, 2035, 2037, 2039, 2043, 2046, 2048, 2049, 2051, 2056, 2058, 2059, 2060, 2061, 2063, 2066, 2067, 2068, 2071, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2080, 2088, 2090, 2093, 2094, 2100, 2103, 2105, 2106, 2107], "expect": [0, 1, 3, 5, 7, 9, 12, 22, 23, 27, 29, 31, 35, 42, 44, 47, 49, 50, 52, 57, 58, 61, 79, 414, 485, 679, 696, 759, 854, 908, 909, 910, 911, 912, 913, 1050, 1126, 1128, 1145, 1146, 1147, 1167, 1168, 1181, 1191, 1240, 1262, 1265, 1281, 1282, 1310, 1331, 1332, 1366, 1434, 1435, 1454, 1470, 1471, 1472, 1473, 1482, 1483, 1484, 1489, 1490, 1491, 1501, 1502, 1503, 1519, 1525, 1526, 1534, 1535, 1537, 1553, 1559, 1563, 1565, 1567, 1572, 1616, 1622, 1636, 1661, 1669, 1670, 1683, 1696, 1697, 1698, 1699, 1708, 1709, 1751, 1804, 1930, 1967, 2004, 2005, 2011, 2013, 2017, 2034, 2038, 2041, 2042, 2043, 2046, 2056, 2058, 2059, 2062, 2063, 2064, 2067, 2072, 2077, 2079, 2089, 2091, 2093, 2094, 2097, 2099, 2101], "alwai": [0, 5, 7, 14, 17, 22, 23, 27, 33, 42, 47, 49, 50, 52, 56, 61, 339, 414, 447, 457, 793, 880, 900, 902, 905, 908, 914, 941, 950, 960, 966, 972, 997, 999, 1050, 1061, 1092, 1100, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1136, 1137, 1138, 1139, 1141, 1144, 1148, 1178, 1194, 1223, 1224, 1265, 1276, 1281, 1296, 1301, 1302, 1303, 1304, 1306, 1307, 1319, 1322, 1323, 1324, 1325, 1329, 1331, 1411, 1431, 1433, 1434, 1435, 1455, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1519, 1556, 1559, 1699, 1709, 1750, 1803, 1843, 1844, 1869, 1916, 1920, 1953, 1957, 2009, 2010, 2017, 2024, 2027, 2034, 2035, 2036, 2037, 2038, 2039, 2042, 2043, 2045, 2046, 2059, 2060, 2066, 2067, 2069, 2072, 2075, 2078, 2079, 2088, 2090, 2093, 2101, 2109], "abov": [0, 1, 3, 12, 15, 27, 29, 32, 33, 37, 44, 47, 49, 50, 52, 53, 58, 61, 63, 65, 616, 679, 791, 792, 880, 941, 950, 1061, 1088, 1092, 1093, 1094, 1095, 1096, 1105, 1209, 1223, 1224, 1265, 1266, 1286, 1297, 1301, 1302, 1320, 1322, 1323, 1326, 1329, 1332, 1335, 1338, 1428, 1429, 1430, 1431, 1432, 1465, 1519, 1548, 1556, 1571, 1677, 1699, 1765, 1795, 1819, 1830, 1831, 1863, 1867, 1880, 1900, 1942, 1945, 1946, 1947, 1948, 2004, 2006, 2008, 2009, 2013, 2016, 2034, 2035, 2036, 2037, 2039, 2040, 2043, 2046, 2048, 2050, 2051, 2054, 2056, 2059, 2062, 2067, 2068, 2069, 2072, 2073, 2079, 2084, 2089, 2090, 2091, 2092, 2094, 2095, 2096, 2097, 2103], "our": [0, 3, 7, 8, 11, 40, 43, 44, 45, 48, 56, 57, 58, 61, 62, 900, 901, 905, 1125, 1163, 1177, 1181, 1431, 1716, 1717, 1776, 1777, 1863, 2013, 2034, 2039, 2042, 2043, 2048, 2053, 2056, 2058, 2062, 2068, 2072, 2084, 2088, 2090, 2091, 2093, 2094, 2096, 2097, 2102, 2103], "NOT": [0, 22, 27, 35, 44, 45, 47, 49, 61, 946, 1005, 1039, 1265, 1348, 1458, 1709, 1710, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747, 1762, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 2034, 2054, 2069, 2072, 2074, 2101], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 19, 22, 23, 24, 27, 29, 30, 33, 35, 36, 41, 44, 45, 47, 48, 49, 56, 57, 61, 62, 63, 74, 138, 221, 485, 495, 778, 784, 861, 862, 893, 896, 963, 1007, 1008, 1010, 1093, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1145, 1146, 1147, 1178, 1180, 1181, 1265, 1269, 1275, 1276, 1295, 1296, 1308, 1309, 1310, 1338, 1378, 1431, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1479, 1519, 1529, 1567, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1625, 1627, 1636, 1677, 1696, 1709, 1723, 1740, 1757, 1797, 1860, 1892, 1902, 1903, 1904, 1906, 1907, 1939, 1957, 1960, 1962, 1974, 1975, 2004, 2006, 2008, 2009, 2013, 2017, 2021, 2024, 2025, 2027, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2043, 2046, 2048, 2050, 2052, 2056, 2058, 2059, 2061, 2062, 2063, 2067, 2068, 2069, 2072, 2074, 2075, 2077, 2082, 2084, 2085, 2090, 2092, 2093, 2094, 2096, 2097, 2099, 2102, 2103, 2104], "guarante": [0, 1, 5, 9, 22, 27, 29, 31, 33, 44, 47, 49, 50, 57, 60, 61, 63, 485, 876, 972, 1181, 1191, 1265, 1275, 1455, 1519, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1892, 1894, 1957, 2034, 2036, 2037, 2049, 2050, 2059, 2061, 2063, 2067, 2069, 2090], "encount": [0, 5, 27, 49, 57, 60, 61, 679, 1709, 1716, 1717, 2006, 2009, 2011, 2015, 2036, 2049, 2059, 2062, 2089, 2091, 2094, 2099, 2101, 2103, 2106], "nan": [0, 1, 26, 33, 426, 427, 498, 683, 685, 688, 689, 690, 693, 696, 697, 881, 885, 940, 956, 1106, 1107, 1108, 1151, 1152, 1153, 1226, 1254, 1255, 1257, 1258, 1305, 1312, 1325, 1328, 1341, 1346, 1364, 1365, 1369, 1409, 1410, 1411, 1412, 1413, 1625, 1714, 1813, 1850, 1855, 1909, 1944, 2007, 2016, 2033, 2034, 2040, 2049, 2073, 2079], "verifi": [0, 27, 49, 61, 86, 919, 1088, 1771, 1772, 1790, 1942, 2004, 2006, 2020, 2039, 2043, 2056, 2060, 2096], "compat": [0, 1, 14, 22, 27, 29, 32, 33, 35, 45, 49, 52, 56, 57, 61, 63, 496, 497, 602, 616, 679, 814, 815, 816, 890, 905, 906, 938, 953, 987, 988, 1265, 1270, 1283, 1296, 1307, 1320, 1323, 1519, 1525, 1563, 1564, 1565, 1566, 1567, 1636, 1716, 1717, 1761, 1770, 1842, 2004, 2005, 2008, 2009, 2015, 2024, 2025, 2033, 2039, 2051, 2054, 2059, 2061, 2062, 2065, 2067, 2072, 2074, 2078, 2081, 2085], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 14, 18, 19, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 42, 44, 45, 47, 49, 50, 52, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 153, 155, 172, 183, 190, 207, 223, 224, 225, 226, 227, 232, 253, 257, 259, 262, 285, 288, 297, 299, 310, 312, 314, 316, 320, 351, 400, 401, 426, 427, 444, 447, 448, 453, 480, 482, 486, 487, 495, 506, 507, 512, 514, 516, 519, 537, 542, 543, 546, 555, 557, 559, 577, 579, 580, 582, 583, 584, 586, 587, 588, 594, 595, 596, 597, 604, 606, 607, 616, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 711, 712, 713, 714, 715, 716, 717, 718, 722, 723, 724, 725, 726, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 750, 751, 752, 754, 755, 756, 757, 759, 767, 768, 769, 771, 772, 773, 774, 777, 779, 781, 782, 784, 793, 795, 798, 801, 816, 819, 820, 821, 824, 854, 856, 865, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 894, 900, 902, 905, 906, 908, 909, 910, 912, 919, 920, 922, 924, 925, 932, 935, 937, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 954, 956, 959, 960, 961, 962, 963, 964, 966, 967, 970, 984, 985, 986, 989, 990, 991, 992, 993, 994, 1004, 1010, 1019, 1021, 1047, 1048, 1075, 1079, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1103, 1105, 1107, 1108, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1147, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1162, 1164, 1165, 1166, 1167, 1168, 1172, 1173, 1174, 1181, 1185, 1191, 1206, 1207, 1214, 1219, 1223, 1225, 1226, 1227, 1228, 1229, 1232, 1236, 1240, 1242, 1250, 1261, 1262, 1263, 1265, 1269, 1271, 1272, 1273, 1277, 1285, 1286, 1287, 1288, 1289, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1327, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1355, 1359, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373, 1385, 1388, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1417, 1419, 1421, 1422, 1423, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1507, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1533, 1534, 1535, 1536, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1551, 1553, 1554, 1555, 1556, 1557, 1559, 1562, 1563, 1565, 1567, 1568, 1569, 1571, 1572, 1575, 1576, 1577, 1580, 1581, 1582, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1625, 1628, 1629, 1630, 1633, 1634, 1635, 1636, 1640, 1641, 1643, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1661, 1662, 1663, 1664, 1665, 1666, 1669, 1670, 1672, 1677, 1678, 1681, 1683, 1686, 1692, 1693, 1694, 1695, 1696, 1699, 1708, 1709, 1713, 1714, 1716, 1717, 1723, 1724, 1725, 1729, 1734, 1735, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1753, 1754, 1756, 1757, 1758, 1759, 1761, 1763, 1764, 1765, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1810, 1812, 1813, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1845, 1846, 1847, 1848, 1850, 1851, 1855, 1857, 1858, 1859, 1862, 1864, 1867, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1892, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1922, 1923, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1950, 1951, 1953, 1954, 1955, 1956, 1959, 1963, 1964, 1965, 1967, 1968, 1969, 1970, 1972, 1975, 2002, 2003, 2004, 2006, 2007, 2008, 2009, 2013, 2016, 2025, 2026, 2027, 2032, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2064, 2067, 2068, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2082, 2084, 2085, 2088, 2089, 2090, 2092, 2094, 2096, 2097, 2098, 2101, 2102, 2104, 2107], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 12, 14, 18, 20, 22, 23, 27, 33, 42, 49, 56, 57, 58, 60, 61, 63, 64, 68, 69, 71, 72, 73, 74, 153, 190, 207, 232, 259, 288, 297, 312, 314, 316, 320, 400, 401, 444, 470, 498, 512, 514, 516, 522, 536, 543, 557, 559, 583, 584, 585, 586, 587, 606, 684, 685, 689, 696, 733, 738, 739, 740, 741, 742, 744, 745, 759, 761, 772, 773, 861, 862, 865, 880, 886, 887, 888, 908, 911, 913, 940, 943, 950, 951, 952, 956, 958, 962, 964, 965, 966, 967, 970, 977, 989, 993, 1084, 1086, 1088, 1095, 1097, 1099, 1100, 1103, 1104, 1105, 1108, 1121, 1123, 1125, 1126, 1132, 1133, 1136, 1141, 1144, 1145, 1148, 1151, 1153, 1154, 1155, 1157, 1164, 1166, 1167, 1168, 1169, 1172, 1173, 1174, 1207, 1219, 1225, 1227, 1229, 1231, 1232, 1242, 1250, 1254, 1272, 1276, 1277, 1286, 1287, 1288, 1291, 1294, 1295, 1312, 1315, 1318, 1321, 1322, 1323, 1324, 1329, 1330, 1333, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1348, 1352, 1359, 1360, 1366, 1367, 1412, 1414, 1415, 1417, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1432, 1433, 1434, 1435, 1439, 1440, 1441, 1443, 1444, 1445, 1447, 1448, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1472, 1473, 1474, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1507, 1510, 1515, 1516, 1519, 1526, 1529, 1533, 1534, 1535, 1541, 1542, 1543, 1544, 1545, 1548, 1551, 1557, 1559, 1563, 1565, 1567, 1569, 1570, 1571, 1572, 1573, 1574, 1591, 1592, 1600, 1601, 1603, 1604, 1608, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1620, 1621, 1623, 1625, 1628, 1636, 1661, 1663, 1669, 1686, 1696, 1697, 1698, 1708, 1709, 1729, 1739, 1742, 1744, 1745, 1747, 1752, 1753, 1755, 1757, 1763, 1764, 1765, 1767, 1768, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1792, 1798, 1802, 1808, 1810, 1812, 1813, 1815, 1816, 1819, 1820, 1823, 1824, 1825, 1826, 1830, 1835, 1836, 1839, 1840, 1846, 1847, 1848, 1855, 1867, 1874, 1875, 1876, 1877, 1878, 1879, 1882, 1883, 1892, 1898, 1900, 1901, 1902, 1903, 1905, 1908, 1916, 1919, 1920, 1921, 1922, 1923, 1931, 1933, 1935, 1936, 1937, 1939, 1940, 1942, 1951, 1952, 1955, 1957, 1963, 1969, 1970, 1971, 2002, 2006, 2007, 2008, 2009, 2010, 2016, 2017, 2026, 2027, 2032, 2033, 2034, 2035, 2037, 2039, 2041, 2043, 2046, 2047, 2051, 2052, 2054, 2056, 2058, 2060, 2062, 2067, 2072, 2073, 2075, 2077, 2078, 2079, 2091, 2092, 2094, 2101, 2102, 2103], "growth_interv": 0, "2000": [0, 27, 31, 1123, 1125, 1132, 1141, 1154, 1343, 1572, 1795, 1823, 1872, 1873, 1935], "float64": [0, 11, 239, 445, 448, 579, 880, 983, 1148, 1157, 1158, 1212, 1247, 1265, 1295, 1301, 1302, 1304, 1306, 1322, 1519, 1677, 1776, 1777, 1789, 1813, 1821, 1860, 1861, 1864, 1894, 1902, 1903, 1904, 1905, 1906, 1907, 1935, 1967, 1972, 2046, 2049, 2072, 2074, 2075, 2078, 2079, 2107], "out": [0, 1, 2, 3, 7, 8, 9, 11, 15, 18, 22, 24, 27, 29, 33, 41, 42, 45, 49, 53, 56, 61, 63, 67, 69, 232, 311, 313, 315, 317, 398, 400, 447, 495, 511, 513, 515, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 755, 759, 763, 771, 772, 773, 778, 780, 784, 796, 835, 837, 838, 857, 858, 865, 866, 867, 868, 869, 870, 871, 872, 877, 881, 882, 883, 884, 885, 895, 898, 899, 900, 903, 905, 915, 919, 928, 939, 940, 942, 943, 944, 945, 946, 947, 948, 949, 952, 956, 959, 961, 962, 963, 964, 965, 967, 968, 970, 972, 983, 984, 985, 988, 989, 991, 992, 1004, 1009, 1017, 1019, 1021, 1048, 1049, 1061, 1062, 1075, 1079, 1084, 1085, 1086, 1087, 1089, 1092, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1160, 1163, 1164, 1166, 1167, 1169, 1174, 1203, 1206, 1207, 1208, 1209, 1210, 1220, 1221, 1222, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1242, 1243, 1259, 1260, 1265, 1271, 1277, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1385, 1388, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1428, 1429, 1430, 1436, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1456, 1457, 1458, 1459, 1461, 1463, 1466, 1467, 1470, 1471, 1486, 1487, 1488, 1489, 1504, 1506, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1531, 1532, 1535, 1537, 1541, 1542, 1543, 1544, 1545, 1546, 1563, 1564, 1565, 1566, 1567, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1579, 1596, 1600, 1601, 1602, 1603, 1604, 1605, 1611, 1612, 1613, 1618, 1621, 1625, 1636, 1642, 1662, 1664, 1696, 1709, 1716, 1717, 1734, 1735, 1736, 1737, 1763, 1764, 1765, 1766, 1768, 1769, 1790, 1807, 1808, 1812, 1813, 1814, 1816, 1819, 1820, 1826, 1827, 1828, 1830, 1832, 1834, 1835, 1838, 1839, 1840, 1844, 1848, 1849, 1850, 1852, 1853, 1854, 1855, 1870, 1871, 1872, 1884, 1885, 1886, 1887, 1892, 1897, 1898, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1920, 1932, 1933, 1934, 1937, 1939, 1941, 1944, 1945, 1947, 1949, 1950, 1957, 1964, 1965, 1966, 1969, 1971, 1972, 1973, 2002, 2003, 2004, 2005, 2006, 2007, 2009, 2013, 2016, 2017, 2021, 2023, 2024, 2026, 2027, 2034, 2035, 2037, 2038, 2039, 2040, 2042, 2046, 2048, 2054, 2056, 2058, 2059, 2062, 2063, 2065, 2067, 2068, 2069, 2072, 2073, 2075, 2077, 2078, 2083, 2090, 2091, 2092, 2093, 2094, 2096, 2097, 2098, 2101, 2102, 2103, 2104, 2105], "place": [0, 3, 7, 11, 12, 22, 23, 27, 29, 34, 35, 49, 52, 55, 56, 59, 61, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 120, 122, 124, 126, 129, 130, 132, 140, 142, 145, 146, 148, 151, 157, 159, 161, 163, 165, 167, 176, 185, 193, 197, 200, 202, 212, 214, 220, 221, 230, 235, 237, 243, 246, 248, 250, 252, 253, 256, 259, 261, 268, 270, 272, 276, 278, 282, 284, 291, 293, 295, 303, 305, 307, 309, 311, 313, 315, 317, 355, 357, 359, 361, 363, 365, 367, 370, 372, 374, 375, 382, 384, 386, 388, 390, 394, 398, 400, 419, 422, 425, 427, 438, 440, 442, 450, 455, 465, 468, 484, 485, 486, 487, 489, 491, 495, 498, 507, 510, 511, 513, 515, 521, 526, 528, 531, 533, 535, 548, 550, 552, 561, 563, 570, 574, 576, 592, 595, 597, 599, 601, 602, 611, 621, 757, 792, 796, 813, 837, 838, 857, 858, 900, 901, 903, 905, 924, 925, 926, 928, 954, 986, 1017, 1018, 1020, 1021, 1041, 1105, 1156, 1162, 1163, 1171, 1265, 1310, 1328, 1405, 1427, 1437, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1475, 1476, 1477, 1505, 1519, 1537, 1538, 1539, 1540, 1547, 1562, 1610, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1629, 1632, 1641, 1673, 1676, 1691, 1695, 1699, 1709, 1714, 1715, 1716, 1717, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1759, 1790, 1846, 1848, 1852, 1853, 1854, 1900, 1937, 2005, 2006, 2008, 2009, 2016, 2026, 2033, 2037, 2039, 2045, 2053, 2054, 2058, 2059, 2060, 2067, 2068, 2074, 2076, 2078, 2090, 2091, 2093, 2094, 2100, 2102], "variant": [0, 5, 23, 49, 858, 1296, 1307, 1320, 1323, 1412, 1415, 1579, 1580, 1581, 1582, 1776, 1777, 1778, 1790, 1894, 1944, 2005, 2045, 2065, 2078, 2098, 2099, 2102], "explicitli": [0, 5, 8, 14, 27, 37, 52, 85, 926, 1041, 1093, 1095, 1105, 1228, 1306, 1319, 1323, 1331, 1373, 1636, 1696, 1801, 1863, 1916, 2006, 2008, 2009, 2010, 2015, 2017, 2037, 2039, 2042, 2043, 2045, 2051, 2056, 2059, 2060, 2066, 2067, 2072, 2094], "suppli": [0, 5, 7, 14, 15, 27, 1039, 1525, 1772, 2009, 2037, 2056, 2072, 2094, 2103], "won": [0, 8, 23, 29, 44, 49, 55, 457, 1181, 1265, 1277, 1519, 1662, 1702, 1703, 2004, 2034, 2039, 2067, 2081, 2093, 2094, 2101, 2103], "go": [0, 1, 7, 15, 22, 27, 29, 41, 47, 49, 56, 61, 498, 499, 559, 900, 902, 905, 924, 928, 1187, 1338, 1428, 1429, 1430, 1512, 1513, 1514, 1716, 1717, 2008, 2009, 2016, 2024, 2025, 2026, 2034, 2036, 2037, 2039, 2040, 2045, 2046, 2048, 2052, 2056, 2059, 2075, 2077, 2089, 2090, 2091, 2092, 2093, 2094], "addmm": [0, 49, 50, 63, 105, 1912, 2007, 2025, 2049, 2057, 2072, 2098, 2102], "b": [0, 1, 3, 11, 12, 22, 27, 29, 33, 42, 49, 61, 63, 66, 84, 86, 259, 334, 397, 616, 684, 685, 747, 756, 780, 823, 880, 900, 901, 903, 904, 905, 906, 922, 924, 925, 940, 951, 952, 954, 958, 960, 962, 965, 970, 986, 989, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1047, 1048, 1097, 1100, 1104, 1105, 1150, 1151, 1152, 1153, 1159, 1163, 1176, 1177, 1192, 1207, 1231, 1242, 1262, 1268, 1276, 1277, 1285, 1286, 1288, 1297, 1298, 1306, 1310, 1311, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1326, 1327, 1328, 1331, 1332, 1335, 1338, 1347, 1349, 1350, 1356, 1364, 1369, 1371, 1404, 1432, 1436, 1461, 1462, 1469, 1506, 1596, 1598, 1617, 1624, 1642, 1723, 1751, 1752, 1753, 1754, 1755, 1756, 1764, 1787, 1789, 1820, 1826, 1839, 1842, 1858, 1869, 1888, 1897, 1902, 1903, 1904, 1906, 1907, 1911, 1916, 1917, 1919, 1926, 1927, 1928, 1937, 1944, 1945, 1947, 1966, 1971, 2006, 2007, 2008, 2009, 2013, 2025, 2026, 2027, 2032, 2033, 2035, 2037, 2039, 2041, 2043, 2044, 2049, 2051, 2054, 2061, 2062, 2068, 2069, 2072, 2073, 2076, 2077, 2083, 2089, 2091, 2092, 2094, 2096, 2098, 2102, 2103, 2105], "c": [0, 1, 3, 8, 9, 14, 22, 24, 27, 33, 42, 49, 50, 55, 61, 84, 86, 259, 334, 498, 519, 616, 684, 820, 877, 880, 900, 903, 905, 906, 951, 962, 990, 1041, 1047, 1082, 1097, 1100, 1105, 1151, 1152, 1153, 1163, 1164, 1168, 1173, 1207, 1219, 1265, 1276, 1288, 1295, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1315, 1317, 1321, 1322, 1324, 1326, 1328, 1329, 1404, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1454, 1457, 1458, 1459, 1463, 1465, 1466, 1467, 1473, 1481, 1482, 1483, 1486, 1487, 1488, 1490, 1491, 1501, 1502, 1503, 1507, 1512, 1513, 1514, 1515, 1516, 1517, 1522, 1523, 1524, 1526, 1531, 1532, 1541, 1542, 1543, 1544, 1545, 1546, 1554, 1559, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1590, 1598, 1608, 1609, 1621, 1625, 1661, 1667, 1668, 1677, 1723, 1752, 1754, 1755, 1756, 1763, 1764, 1807, 1823, 1839, 1876, 1897, 1911, 1916, 1937, 1954, 1959, 1960, 2005, 2006, 2007, 2008, 2009, 2017, 2025, 2026, 2027, 2036, 2037, 2038, 2040, 2043, 2045, 2052, 2059, 2068, 2069, 2072, 2073, 2076, 2077, 2084, 2090, 2091, 2092, 2093, 2094, 2096, 2098, 2102, 2103, 2104, 2105, 2106], "addmm_": [0, 2007, 2025, 2072], "d": [0, 1, 11, 22, 23, 27, 32, 33, 53, 61, 312, 320, 334, 470, 512, 514, 516, 543, 582, 616, 685, 689, 865, 880, 900, 903, 905, 906, 939, 940, 941, 943, 950, 951, 952, 956, 959, 962, 1092, 1094, 1104, 1105, 1118, 1122, 1123, 1124, 1125, 1130, 1131, 1134, 1135, 1140, 1141, 1142, 1145, 1146, 1147, 1174, 1177, 1206, 1223, 1224, 1231, 1240, 1262, 1266, 1270, 1308, 1309, 1359, 1370, 1407, 1422, 1430, 1431, 1435, 1448, 1452, 1453, 1457, 1458, 1459, 1461, 1463, 1465, 1470, 1472, 1483, 1489, 1491, 1503, 1514, 1528, 1534, 1535, 1559, 1568, 1569, 1571, 1590, 1625, 1636, 1642, 1670, 1695, 1696, 1708, 1724, 1758, 1763, 1764, 1788, 1808, 1826, 1832, 1835, 1847, 1855, 1860, 1911, 1916, 1930, 1931, 1937, 1940, 1945, 1946, 1947, 1948, 1963, 1969, 1971, 2004, 2007, 2013, 2016, 2025, 2026, 2027, 2032, 2034, 2037, 2039, 2040, 2042, 2043, 2044, 2051, 2056, 2067, 2068, 2072, 2073, 2077, 2078, 2093, 2094, 2096, 2101, 2103, 2105], "best": [0, 1, 7, 15, 18, 22, 27, 33, 45, 52, 55, 861, 862, 932, 959, 972, 1181, 1281, 1282, 1311, 1525, 1790, 1803, 2005, 2006, 2008, 2013, 2024, 2032, 2033, 2034, 2039, 2041, 2059, 2067, 2072, 2074, 2084, 2091, 2092, 2094, 2097], "stabil": [0, 1297, 1302, 1353, 1432, 1433, 1434, 1435, 1472, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1534, 1556, 1559, 1568, 1622, 1685, 1708, 1724, 1758, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1823, 2040, 2094, 2103], "argument": [0, 1, 3, 4, 5, 8, 9, 12, 14, 18, 22, 27, 28, 29, 31, 32, 33, 35, 42, 45, 48, 49, 50, 52, 56, 57, 60, 61, 63, 69, 71, 72, 83, 87, 149, 195, 208, 312, 320, 414, 444, 445, 446, 447, 448, 486, 487, 512, 516, 559, 579, 580, 582, 583, 584, 586, 587, 602, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 733, 737, 738, 739, 740, 741, 742, 792, 793, 798, 818, 819, 820, 823, 824, 825, 841, 857, 858, 861, 863, 865, 880, 881, 882, 883, 884, 885, 889, 890, 891, 892, 893, 900, 901, 902, 903, 905, 906, 909, 911, 912, 913, 914, 916, 917, 924, 925, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 952, 956, 959, 961, 962, 963, 964, 965, 967, 969, 970, 976, 983, 986, 988, 989, 991, 992, 994, 1004, 1026, 1028, 1032, 1033, 1039, 1047, 1048, 1050, 1065, 1074, 1078, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1115, 1118, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1181, 1201, 1202, 1206, 1207, 1208, 1209, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1240, 1242, 1259, 1260, 1262, 1265, 1268, 1277, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1388, 1396, 1401, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1419, 1433, 1434, 1435, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1462, 1465, 1468, 1470, 1477, 1480, 1481, 1482, 1483, 1484, 1489, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1515, 1516, 1517, 1519, 1520, 1525, 1526, 1527, 1535, 1559, 1563, 1567, 1571, 1573, 1574, 1582, 1623, 1625, 1662, 1677, 1699, 1702, 1703, 1709, 1729, 1731, 1735, 1736, 1740, 1744, 1750, 1759, 1763, 1765, 1768, 1769, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1795, 1807, 1808, 1812, 1813, 1816, 1817, 1819, 1820, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1838, 1839, 1840, 1841, 1848, 1850, 1855, 1859, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1892, 1895, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1950, 1953, 1957, 1964, 1965, 1969, 1970, 1971, 1972, 1979, 1981, 1983, 1984, 1996, 1999, 2002, 2003, 2004, 2007, 2008, 2009, 2011, 2013, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2050, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2088, 2091, 2092, 2093, 2097, 2102, 2104, 2107], "respect": [0, 1, 5, 8, 27, 28, 31, 33, 42, 44, 52, 58, 60, 61, 195, 208, 486, 579, 602, 688, 689, 690, 759, 794, 818, 841, 885, 891, 893, 905, 906, 914, 920, 924, 925, 967, 994, 1093, 1095, 1096, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1173, 1219, 1265, 1297, 1301, 1302, 1311, 1321, 1324, 1326, 1329, 1338, 1370, 1409, 1431, 1432, 1438, 1449, 1450, 1451, 1455, 1470, 1472, 1489, 1519, 1520, 1535, 1565, 1567, 1568, 1569, 1570, 1572, 1616, 1625, 1731, 1735, 1737, 1759, 1761, 1773, 1774, 1775, 1776, 1777, 1778, 1787, 1788, 1789, 1790, 1803, 1893, 1897, 1920, 1937, 2026, 2033, 2034, 2037, 2039, 2043, 2046, 2047, 2060, 2065, 2072, 2073, 2074, 2079, 2093, 2097], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 14, 15, 18, 20, 21, 22, 23, 26, 27, 29, 31, 32, 33, 35, 41, 42, 43, 44, 45, 49, 50, 52, 54, 56, 57, 59, 61, 63, 65, 71, 72, 81, 82, 83, 486, 487, 616, 679, 759, 778, 784, 791, 792, 793, 799, 813, 814, 815, 816, 818, 819, 820, 821, 823, 824, 854, 861, 862, 889, 890, 891, 898, 905, 906, 924, 925, 939, 956, 961, 965, 977, 986, 1047, 1061, 1105, 1123, 1125, 1149, 1159, 1172, 1191, 1219, 1265, 1266, 1275, 1279, 1286, 1297, 1308, 1318, 1321, 1322, 1335, 1338, 1357, 1360, 1423, 1432, 1438, 1454, 1462, 1465, 1470, 1489, 1519, 1535, 1551, 1567, 1571, 1578, 1630, 1644, 1677, 1701, 1702, 1703, 1706, 1707, 1709, 1716, 1717, 1723, 1764, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1798, 1801, 1809, 1820, 1848, 1855, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1895, 1896, 1897, 1898, 1905, 1916, 1942, 1950, 1957, 1960, 2004, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2015, 2016, 2019, 2020, 2024, 2025, 2026, 2027, 2028, 2032, 2033, 2034, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2046, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2067, 2068, 2069, 2072, 2073, 2075, 2076, 2078, 2079, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2101, 2103, 2104, 2105, 2107], "describ": [0, 5, 7, 8, 9, 22, 23, 27, 29, 31, 32, 35, 36, 42, 44, 49, 50, 61, 232, 512, 791, 792, 793, 814, 815, 816, 841, 859, 957, 1030, 1047, 1064, 1105, 1219, 1286, 1326, 1423, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1456, 1457, 1458, 1459, 1460, 1463, 1465, 1466, 1467, 1473, 1476, 1479, 1481, 1482, 1483, 1485, 1491, 1510, 1512, 1513, 1514, 1525, 1526, 1533, 1534, 1538, 1551, 1559, 1567, 1568, 1569, 1571, 1608, 1620, 1621, 1630, 1664, 1708, 1801, 1942, 2005, 2006, 2008, 2009, 2017, 2032, 2033, 2034, 2037, 2038, 2039, 2041, 2043, 2045, 2046, 2051, 2056, 2059, 2061, 2062, 2065, 2068, 2069, 2071, 2079, 2091, 2094, 2095, 2099], "part": [0, 1, 3, 4, 5, 6, 7, 9, 14, 15, 18, 22, 23, 27, 29, 33, 44, 45, 49, 50, 52, 56, 57, 61, 81, 82, 841, 914, 979, 983, 1105, 1255, 1257, 1258, 1261, 1265, 1276, 1278, 1281, 1282, 1296, 1302, 1304, 1313, 1320, 1323, 1519, 1559, 1677, 1709, 1727, 1793, 1820, 1832, 1901, 1942, 1945, 1946, 1947, 1948, 2004, 2005, 2006, 2008, 2009, 2019, 2020, 2033, 2034, 2037, 2039, 2041, 2042, 2043, 2046, 2051, 2056, 2059, 2060, 2062, 2067, 2068, 2069, 2072, 2077, 2079, 2089, 2091, 2093, 2094, 2095, 2101, 2102, 2103], "expos": [0, 1, 8, 27, 31, 52, 60, 61, 794, 1159, 2034, 2037, 2045, 2059, 2062, 2091, 2104], "namespac": [0, 61, 1079, 2006, 2010, 2013, 2039, 2046, 2054, 2056, 2060, 2065, 2084, 2092, 2104], "below": [0, 1, 5, 9, 12, 14, 22, 23, 27, 29, 32, 33, 35, 36, 41, 44, 45, 47, 48, 50, 61, 63, 71, 72, 679, 733, 747, 756, 794, 813, 1047, 1092, 1093, 1094, 1095, 1096, 1105, 1133, 1135, 1139, 1177, 1185, 1209, 1219, 1265, 1282, 1322, 1323, 1328, 1335, 1367, 1449, 1450, 1451, 1470, 1472, 1479, 1489, 1491, 1515, 1516, 1517, 1519, 1535, 1551, 1572, 1608, 1634, 1681, 1709, 1729, 1763, 1790, 1860, 1863, 1900, 1932, 1942, 1945, 1946, 1947, 1948, 2006, 2008, 2009, 2011, 2015, 2016, 2024, 2025, 2033, 2034, 2037, 2038, 2039, 2043, 2044, 2046, 2048, 2050, 2051, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2064, 2067, 2068, 2069, 2073, 2076, 2079, 2089, 2090, 2092, 2094, 2095, 2096, 2097, 2099, 2101, 2103], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 22, 23, 27, 29, 31, 34, 35, 37, 44, 45, 47, 49, 52, 53, 54, 57, 58, 60, 61, 83, 494, 512, 514, 516, 757, 822, 825, 863, 892, 895, 900, 903, 905, 906, 915, 919, 926, 928, 958, 971, 972, 1001, 1005, 1039, 1050, 1084, 1085, 1086, 1087, 1156, 1157, 1159, 1168, 1181, 1191, 1206, 1228, 1252, 1262, 1265, 1268, 1277, 1281, 1311, 1329, 1338, 1345, 1355, 1357, 1366, 1405, 1415, 1427, 1437, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1475, 1476, 1477, 1505, 1538, 1539, 1540, 1547, 1562, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1627, 1629, 1644, 1699, 1709, 1716, 1717, 1765, 1770, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1807, 1813, 1863, 1957, 2004, 2005, 2006, 2007, 2009, 2011, 2013, 2017, 2018, 2024, 2025, 2026, 2033, 2034, 2035, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2054, 2056, 2058, 2061, 2062, 2063, 2067, 2069, 2072, 2073, 2074, 2075, 2076, 2077, 2079, 2088, 2090, 2091, 2093, 2096, 2099, 2100, 2102, 2103, 2105], "defin": [0, 1, 3, 5, 9, 11, 14, 15, 22, 23, 27, 28, 29, 32, 33, 35, 36, 42, 44, 45, 49, 50, 52, 57, 61, 414, 434, 444, 446, 448, 516, 565, 791, 796, 797, 798, 800, 801, 837, 859, 860, 861, 862, 889, 890, 891, 892, 905, 906, 1061, 1088, 1105, 1106, 1125, 1153, 1160, 1181, 1207, 1209, 1225, 1227, 1228, 1254, 1265, 1271, 1288, 1295, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1315, 1317, 1318, 1322, 1323, 1324, 1326, 1328, 1329, 1335, 1371, 1455, 1460, 1466, 1467, 1474, 1475, 1476, 1477, 1484, 1486, 1487, 1488, 1519, 1525, 1538, 1553, 1555, 1560, 1562, 1579, 1580, 1590, 1625, 1677, 1683, 1699, 1702, 1709, 1735, 1737, 1744, 1745, 1765, 1768, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1795, 1798, 1801, 1819, 1828, 1830, 1832, 1839, 1867, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1897, 1899, 1942, 1945, 1946, 1947, 1948, 1972, 2002, 2004, 2006, 2009, 2011, 2013, 2023, 2024, 2025, 2027, 2030, 2034, 2037, 2038, 2042, 2043, 2044, 2046, 2048, 2052, 2056, 2058, 2059, 2060, 2061, 2062, 2065, 2067, 2072, 2073, 2078, 2079, 2081, 2088, 2089, 2091, 2093, 2095, 2100, 2104], "still": [0, 1, 2, 7, 8, 22, 26, 27, 33, 35, 44, 49, 52, 60, 61, 485, 793, 798, 900, 902, 905, 910, 1180, 1181, 1269, 1275, 1283, 1485, 1510, 1709, 1710, 1711, 1712, 1851, 2006, 2009, 2024, 2025, 2026, 2027, 2033, 2034, 2037, 2038, 2039, 2041, 2042, 2044, 2051, 2052, 2056, 2058, 2059, 2060, 2062, 2067, 2068, 2069, 2072, 2085, 2091, 2093, 2098, 2099, 2103, 2105], "chang": [0, 1, 2, 3, 7, 11, 12, 18, 23, 27, 29, 31, 32, 33, 35, 43, 49, 50, 52, 53, 56, 57, 59, 60, 61, 62, 138, 232, 253, 320, 457, 495, 498, 516, 519, 555, 616, 679, 818, 877, 919, 920, 972, 986, 987, 988, 1004, 1005, 1015, 1026, 1028, 1039, 1040, 1047, 1048, 1050, 1093, 1141, 1157, 1162, 1178, 1194, 1212, 1219, 1240, 1262, 1265, 1276, 1277, 1296, 1307, 1309, 1310, 1311, 1314, 1327, 1367, 1396, 1458, 1461, 1479, 1489, 1519, 1551, 1572, 1578, 1579, 1580, 1583, 1590, 1625, 1650, 1651, 1652, 1677, 1699, 1700, 1709, 1711, 1712, 1716, 1717, 1726, 1729, 1730, 1759, 1763, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1795, 1798, 1799, 1801, 1803, 1805, 1819, 1859, 1863, 1900, 1911, 1914, 1915, 1916, 1941, 1960, 1964, 1965, 1979, 1981, 2004, 2005, 2006, 2013, 2015, 2016, 2017, 2019, 2021, 2024, 2025, 2026, 2027, 2033, 2034, 2035, 2036, 2037, 2039, 2040, 2042, 2043, 2044, 2046, 2048, 2049, 2051, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2067, 2069, 2072, 2074, 2075, 2076, 2077, 2078, 2081, 2082, 2083, 2085, 2088, 2090, 2091, 2093, 2095, 2096, 2099, 2100, 2103], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 19, 22, 23, 28, 29, 31, 32, 33, 34, 35, 37, 42, 43, 44, 45, 47, 49, 50, 52, 56, 57, 60, 61, 63, 71, 72, 87, 149, 257, 288, 312, 314, 316, 318, 320, 334, 471, 485, 486, 498, 512, 514, 516, 536, 559, 603, 606, 616, 623, 683, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 759, 763, 780, 789, 790, 796, 798, 818, 822, 825, 837, 854, 857, 858, 859, 861, 876, 880, 885, 892, 893, 895, 905, 906, 908, 909, 910, 911, 912, 913, 914, 924, 925, 932, 943, 956, 959, 962, 966, 972, 974, 986, 992, 993, 994, 1004, 1005, 1010, 1017, 1018, 1019, 1020, 1021, 1032, 1033, 1034, 1061, 1063, 1069, 1070, 1081, 1083, 1088, 1092, 1093, 1094, 1095, 1096, 1105, 1121, 1126, 1129, 1133, 1136, 1139, 1144, 1145, 1146, 1147, 1148, 1153, 1156, 1162, 1163, 1166, 1167, 1168, 1169, 1170, 1174, 1180, 1181, 1185, 1191, 1195, 1203, 1206, 1209, 1228, 1240, 1250, 1256, 1262, 1263, 1265, 1266, 1268, 1271, 1275, 1276, 1277, 1281, 1298, 1301, 1302, 1311, 1315, 1317, 1318, 1321, 1322, 1326, 1328, 1329, 1331, 1334, 1335, 1337, 1343, 1359, 1366, 1371, 1405, 1411, 1414, 1415, 1421, 1422, 1423, 1425, 1426, 1427, 1429, 1430, 1433, 1434, 1435, 1438, 1447, 1448, 1450, 1451, 1454, 1455, 1462, 1469, 1470, 1479, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1491, 1505, 1509, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1524, 1525, 1534, 1548, 1551, 1553, 1555, 1559, 1563, 1568, 1569, 1583, 1607, 1624, 1625, 1627, 1637, 1644, 1663, 1664, 1677, 1683, 1684, 1692, 1699, 1708, 1709, 1716, 1717, 1723, 1725, 1726, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1747, 1759, 1761, 1764, 1770, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1809, 1821, 1835, 1839, 1841, 1842, 1846, 1848, 1855, 1859, 1863, 1867, 1869, 1875, 1887, 1892, 1896, 1897, 1899, 1900, 1908, 1911, 1916, 1921, 1936, 1941, 1942, 1945, 1946, 1947, 1948, 1952, 1953, 1956, 1957, 1960, 1969, 1975, 1983, 1984, 1985, 2001, 2004, 2006, 2008, 2009, 2011, 2015, 2016, 2017, 2019, 2020, 2021, 2024, 2026, 2027, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2050, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2082, 2083, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107], "unlist": 0, "downstream": [0, 3, 2021, 2094, 2095, 2103], "stabl": [0, 1, 2, 11, 12, 27, 33, 44, 45, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 876, 986, 1105, 1301, 1302, 1306, 1311, 1319, 1323, 1326, 1329, 1331, 1338, 1432, 1892, 2005, 2007, 2013, 2032, 2035, 2050, 2067], "believ": [0, 8, 2094], "unstabl": [0, 33, 1301, 1302, 1329, 1346, 1355, 1644, 1920, 2073], "__matmul__": 0, "addbmm": [0, 99, 940, 2007, 2049, 2057], "addmv": [0, 107, 2007, 2025, 2057], "addr": [0, 27, 109, 2007, 2057, 2105], "baddbmm": [0, 151, 2007, 2049, 2057], "bmm": [0, 1957, 2007, 2025, 2027, 2049, 2050, 2057, 2072, 2098], "chain_matmul": [0, 2007, 2057], "multi_dot": [0, 962], "conv1d": [0, 707, 711, 714, 724, 740, 1449, 1457, 1495, 1957, 2007, 2057, 2062, 2064], "conv2d": [0, 49, 708, 712, 715, 717, 725, 741, 791, 813, 1265, 1275, 1277, 1281, 1282, 1450, 1458, 1496, 1519, 1520, 1526, 1548, 1571, 1716, 1744, 1957, 2006, 2007, 2019, 2054, 2056, 2057, 2062, 2064, 2065, 2077, 2083], "conv3d": [0, 709, 713, 716, 718, 726, 742, 1451, 1459, 1497, 1717, 1957, 2007, 2057, 2062, 2064], "conv_transpose1d": [0, 2007, 2057, 2064], "conv_transpose2d": [0, 2007, 2057, 2064], "conv_transpose3d": [0, 2007, 2057, 2064], "grucel": [0, 2049, 2062, 2064, 2065], "lstmcell": [0, 2049, 2062, 2064, 2065], "matmul": [0, 2, 11, 952, 972, 1173, 1370, 1571, 1809, 1819, 1863, 1920, 2007, 2025, 2027, 2037, 2049, 2057, 2064, 2072, 2088], "mv": [0, 11, 1277, 1957, 2007, 2025, 2057, 2072], "prelu": [0, 1520, 2007, 2057, 2064], "rnncell": [0, 2062, 2064, 2065], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 93, 626, 627, 866, 2007, 2025, 2057, 2079, 2098], "asin": [0, 140, 628, 629, 868, 2007, 2025, 2057, 2072, 2098], "cosh": [0, 202, 636, 637, 683, 2007, 2025, 2057, 2098], "cosine_embedding_loss": [0, 2007, 2057], "cdist": [0, 2037, 2057], "cosine_similar": [0, 1569, 2007, 2057], "cross_entropi": [0, 32, 2007], "cumprod": [0, 212, 2007, 2025, 2057], "cumsum": [0, 214, 1088, 1957, 2007, 2025, 2057, 2098], "dist": [0, 23, 27, 28, 31, 33, 45, 52, 963, 964, 965, 1295, 1301, 1302, 1303, 1305, 1306, 1307, 1311, 1312, 1323, 1324, 1327, 1329, 1330, 1353, 1356, 1528, 1559, 1709, 1723, 1920, 2007, 2038, 2057, 2067, 2069], "erfinv": [0, 250, 2007, 2025, 2057, 2072, 2073], "exp": [0, 1, 33, 252, 642, 643, 769, 910, 911, 913, 1148, 1325, 1345, 1353, 1432, 1437, 1454, 1460, 1484, 1508, 1509, 1523, 1533, 1547, 1550, 1552, 1553, 1555, 1556, 1560, 1599, 1645, 1669, 1678, 1679, 1683, 1685, 1688, 1723, 1816, 1876, 1877, 1899, 1916, 2007, 2025, 2034, 2056, 2057, 2073, 2098], "expm1": [0, 256, 644, 645, 2007, 2025, 2057, 2072, 2073, 2098], "group_norm": [0, 2007, 2057, 2064], "hinge_embedding_loss": [0, 2007, 2057], "kl_div": [0, 2007, 2057], "l1_loss": [0, 2007, 2057], "layer_norm": [0, 1491, 2007, 2057, 2064], "log": [0, 2, 14, 22, 23, 24, 33, 35, 37, 38, 41, 42, 47, 78, 80, 375, 376, 652, 659, 679, 1115, 1341, 1343, 1345, 1346, 1353, 1382, 1423, 1431, 1432, 1454, 1472, 1484, 1508, 1509, 1523, 1526, 1533, 1552, 1553, 1556, 1622, 1627, 1637, 1644, 1645, 1661, 1669, 1683, 1685, 1709, 2005, 2007, 2015, 2021, 2025, 2034, 2037, 2038, 2039, 2054, 2056, 2057, 2061, 2073, 2077, 2081, 2082, 2083, 2096, 2097, 2098, 2100, 2101, 2103], "log_softmax": [0, 1438, 1484, 1609, 1661, 1683, 2007, 2026, 2054, 2057, 2073], "log10": [0, 370, 653, 654, 2007, 2025, 2057, 2098], "log1p": [0, 372, 655, 656, 2007, 2025, 2057, 2072, 2073, 2098], "log2": [0, 374, 657, 658, 2007, 2025, 2057, 2073, 2098], "margin_ranking_loss": [0, 2007, 2057], "mse_loss": [0, 56, 1162, 2007, 2057], "multilabel_margin_loss": [0, 2007, 2057], "multi_margin_loss": [0, 2007, 2057], "nll_loss": [0, 2007, 2057], "norm": [0, 32, 33, 52, 54, 61, 701, 702, 703, 704, 705, 706, 960, 1099, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1297, 1301, 1310, 1311, 1318, 1323, 1335, 1461, 1462, 1510, 1528, 1534, 1564, 1565, 1566, 1567, 1568, 1616, 1617, 1662, 1666, 1708, 1713, 1714, 1724, 1725, 1734, 1735, 1740, 1743, 1744, 1758, 1761, 1778, 1840, 2007, 2011, 2033, 2034, 2043, 2046, 2049, 2057], "normal": [0, 1, 23, 27, 31, 44, 49, 52, 61, 81, 335, 350, 376, 453, 555, 994, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1181, 1227, 1262, 1265, 1270, 1301, 1343, 1427, 1433, 1434, 1435, 1457, 1458, 1459, 1463, 1473, 1481, 1482, 1483, 1491, 1501, 1502, 1503, 1507, 1534, 1547, 1559, 1563, 1564, 1565, 1566, 1567, 1595, 1625, 1626, 1635, 1639, 1643, 1670, 1674, 1708, 1714, 1715, 1724, 1725, 1740, 1748, 1749, 1758, 1761, 1787, 1803, 1823, 1832, 1833, 1840, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1916, 1957, 2004, 2005, 2006, 2007, 2011, 2025, 2027, 2032, 2034, 2037, 2040, 2056, 2057, 2059, 2064, 2067, 2073, 2077, 2079, 2081, 2087, 2098, 2107], "pdist": [0, 1528, 2007, 2057], "poisson_nll_loss": [0, 2007, 2057], "pow": [0, 1, 468, 495, 908, 909, 912, 935, 1148, 2007, 2009, 2025, 2033, 2034, 2057, 2072, 2078, 2098], "prod": [0, 41, 320, 516, 1122, 1124, 1127, 1128, 1130, 1131, 1134, 1135, 1137, 1138, 1140, 1142, 1331, 1332, 1461, 1465, 1571, 1955, 1957, 2007, 2025, 2057, 2072, 2094, 2098], "reciproc": [0, 484, 662, 663, 1850, 2007, 2025, 2057, 2098], "rsqrt": [0, 510, 2007, 2025, 2057, 2098], "sinh": [0, 535, 670, 671, 882, 2007, 2025, 2057, 2072, 2098], "smooth_l1_loss": [0, 2007, 2057], "soft_margin_loss": [0, 2007, 2057], "softmax": [0, 33, 795, 1423, 1454, 1484, 1509, 1554, 1608, 1627, 1637, 1644, 1677, 1684, 1896, 2007, 2025, 2026, 2027, 2037, 2057, 2064, 2072, 2073], "softmin": [0, 2007], "softplu": [0, 33, 1518, 1656, 2007, 2057], "sum": [0, 1, 3, 12, 22, 27, 28, 31, 33, 35, 52, 57, 58, 61, 63, 70, 77, 495, 516, 565, 745, 893, 908, 909, 910, 911, 912, 913, 914, 924, 925, 933, 994, 1019, 1020, 1021, 1087, 1088, 1105, 1166, 1167, 1168, 1173, 1242, 1297, 1318, 1322, 1335, 1343, 1344, 1345, 1353, 1405, 1413, 1431, 1432, 1438, 1451, 1452, 1454, 1455, 1462, 1465, 1472, 1478, 1479, 1484, 1485, 1486, 1487, 1488, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1553, 1555, 1568, 1569, 1571, 1597, 1598, 1608, 1609, 1617, 1622, 1627, 1637, 1646, 1647, 1648, 1661, 1669, 1683, 1684, 1709, 1740, 1745, 1746, 1764, 1795, 1841, 1863, 1878, 1897, 1899, 1940, 1942, 1957, 2005, 2007, 2009, 2013, 2021, 2025, 2033, 2034, 2037, 2038, 2039, 2040, 2046, 2049, 2056, 2057, 2067, 2068, 2072, 2073, 2078, 2088, 2089, 2091, 2092, 2094, 2098, 2101, 2103, 2105], "renorm": [0, 491, 1461, 1462, 1616, 1617, 2007, 2057], "tan": [0, 574, 674, 675, 883, 2007, 2025, 2057, 2072, 2077, 2098], "triplet_margin_loss": [0, 2007, 2057], "take": [0, 1, 2, 3, 4, 5, 7, 9, 14, 22, 23, 27, 29, 31, 33, 35, 43, 44, 45, 47, 49, 52, 54, 55, 57, 58, 59, 60, 61, 63, 71, 72, 86, 759, 792, 797, 813, 819, 825, 862, 908, 909, 910, 911, 912, 913, 919, 920, 928, 1004, 1041, 1093, 1095, 1096, 1121, 1123, 1126, 1129, 1133, 1134, 1136, 1139, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1191, 1298, 1320, 1323, 1423, 1432, 1462, 1466, 1467, 1470, 1489, 1513, 1514, 1515, 1516, 1517, 1519, 1527, 1535, 1563, 1573, 1574, 1620, 1621, 1638, 1663, 1677, 1709, 1762, 1787, 1791, 1816, 1944, 1958, 1969, 2004, 2006, 2007, 2009, 2016, 2017, 2019, 2024, 2025, 2026, 2027, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2044, 2046, 2050, 2051, 2052, 2056, 2057, 2059, 2061, 2062, 2067, 2068, 2069, 2072, 2075, 2076, 2077, 2080, 2082, 2085, 2088, 2089, 2090, 2092, 2093, 2094, 2095, 2097, 2101, 2102], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 18, 19, 22, 23, 27, 28, 29, 31, 33, 35, 37, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 55, 57, 58, 60, 61, 87, 149, 259, 312, 314, 320, 334, 485, 487, 512, 514, 516, 545, 559, 606, 609, 616, 679, 685, 686, 691, 693, 697, 698, 734, 759, 790, 792, 793, 813, 839, 840, 854, 858, 861, 874, 877, 889, 890, 891, 893, 895, 897, 900, 901, 902, 903, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 928, 932, 933, 934, 938, 939, 942, 951, 953, 958, 959, 963, 966, 967, 971, 972, 974, 982, 986, 993, 1003, 1007, 1008, 1010, 1011, 1019, 1020, 1029, 1037, 1041, 1047, 1051, 1052, 1060, 1061, 1069, 1070, 1072, 1073, 1077, 1079, 1081, 1122, 1123, 1124, 1125, 1128, 1131, 1132, 1135, 1138, 1140, 1142, 1157, 1159, 1162, 1163, 1169, 1170, 1172, 1173, 1181, 1182, 1188, 1206, 1228, 1231, 1261, 1262, 1265, 1273, 1276, 1277, 1280, 1281, 1301, 1328, 1337, 1353, 1355, 1363, 1365, 1368, 1377, 1378, 1387, 1392, 1403, 1410, 1411, 1412, 1413, 1423, 1430, 1432, 1436, 1438, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1461, 1462, 1465, 1470, 1471, 1472, 1473, 1478, 1484, 1485, 1489, 1490, 1506, 1510, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1535, 1537, 1541, 1542, 1543, 1544, 1545, 1546, 1559, 1563, 1565, 1567, 1568, 1571, 1576, 1577, 1583, 1590, 1596, 1598, 1616, 1617, 1622, 1627, 1646, 1647, 1648, 1677, 1683, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1714, 1723, 1729, 1736, 1740, 1750, 1754, 1762, 1763, 1764, 1765, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1795, 1798, 1799, 1802, 1803, 1804, 1805, 1817, 1863, 1895, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1913, 1914, 1915, 1916, 1919, 1936, 1938, 1945, 1946, 1947, 1948, 1951, 1953, 1954, 1955, 1960, 1964, 1965, 1967, 1971, 1974, 1975, 1976, 1982, 1987, 1992, 1993, 1994, 1995, 1998, 2001, 2004, 2006, 2007, 2008, 2009, 2013, 2015, 2016, 2017, 2019, 2021, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2046, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2057, 2059, 2060, 2061, 2062, 2066, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2075, 2077, 2079, 2081, 2082, 2083, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2099, 2100, 2101, 2102, 2103, 2104, 2105], "addcdiv": [0, 101, 2007, 2057], "addcmul": [0, 103, 2007, 2057], "atan2": [0, 145, 871, 2007, 2025, 2057, 2098], "bilinear": [0, 778, 784, 785, 1105, 1572, 1573, 1625, 1636, 1696, 1697, 1957, 2007, 2057], "cross": [0, 7, 8, 27, 29, 32, 33, 35, 1431, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1597, 1598, 1608, 2007, 2037, 2052, 2057], "dot": [0, 2, 14, 57, 58, 616, 909, 911, 912, 913, 1084, 1085, 1086, 1087, 1164, 1174, 1242, 1286, 1333, 1334, 1360, 1431, 1432, 1454, 1465, 1478, 1485, 1510, 1525, 1526, 1569, 1578, 1583, 1677, 1916, 1966, 1967, 1968, 1969, 2007, 2025, 2043, 2057, 2059], "grid_sampl": [0, 1590, 1957, 2007, 2057], "index_put": [0, 1957, 2007, 2057, 2098], "scatter_add": [0, 2007, 2057, 2098], "tensordot": [0, 1242, 1331, 1332, 2011, 2037, 2057], "binari": [0, 2, 14, 15, 23, 33, 35, 37, 42, 44, 61, 153, 734, 942, 1359, 1431, 1432, 1525, 1597, 1598, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1771, 2005, 2010, 2025, 2026, 2045, 2054, 2056, 2059, 2077, 2085], "add": [0, 1, 3, 7, 12, 15, 17, 22, 27, 29, 31, 41, 44, 49, 50, 52, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 75, 81, 85, 97, 289, 312, 512, 514, 685, 686, 687, 690, 746, 747, 756, 789, 792, 837, 859, 861, 862, 928, 935, 1020, 1050, 1061, 1105, 1163, 1177, 1180, 1181, 1187, 1265, 1277, 1423, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1495, 1496, 1497, 1498, 1499, 1500, 1519, 1521, 1525, 1526, 1530, 1533, 1627, 1669, 1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1863, 1912, 2004, 2006, 2007, 2008, 2009, 2013, 2019, 2021, 2025, 2027, 2033, 2035, 2036, 2038, 2039, 2040, 2044, 2045, 2046, 2048, 2053, 2054, 2056, 2057, 2059, 2061, 2062, 2063, 2064, 2065, 2067, 2068, 2069, 2072, 2075, 2076, 2077, 2082, 2083, 2088, 2089, 2090, 2091, 2092, 2094, 2095, 2097, 2098, 2101, 2102, 2103, 2104, 2105], "nativ": [0, 11, 23, 52, 61, 1030, 1163, 1276, 1714, 1715, 1863, 2006, 2009, 2024, 2037, 2051, 2053, 2058, 2059, 2067, 2094], "without": [0, 1, 3, 5, 7, 8, 9, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 37, 44, 49, 52, 53, 58, 60, 61, 62, 63, 64, 253, 485, 487, 616, 969, 972, 1008, 1010, 1045, 1126, 1127, 1128, 1136, 1137, 1138, 1181, 1191, 1205, 1262, 1263, 1265, 1266, 1312, 1313, 1328, 1335, 1405, 1433, 1434, 1435, 1458, 1462, 1481, 1482, 1483, 1516, 1519, 1527, 1559, 1567, 1617, 1699, 1709, 1741, 1757, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1795, 1826, 1842, 1859, 1951, 2004, 2008, 2009, 2013, 2016, 2017, 2019, 2021, 2024, 2026, 2033, 2034, 2035, 2037, 2038, 2039, 2043, 2044, 2046, 2048, 2050, 2051, 2054, 2056, 2059, 2060, 2062, 2066, 2067, 2072, 2074, 2077, 2083, 2088, 2090, 2091, 2092, 2093, 2094, 2103, 2107], "intervent": [0, 8, 2067], "mixtur": [0, 33, 1454, 1608], "bceloss": [0, 1432, 1597], "aren": [0, 8, 57, 61, 80, 1163, 1181, 2025, 2034, 2042, 2068, 2104], "mean": [0, 2, 3, 5, 7, 8, 12, 15, 18, 22, 23, 27, 29, 31, 32, 33, 44, 45, 47, 49, 50, 52, 53, 55, 58, 60, 61, 253, 257, 320, 334, 376, 453, 487, 494, 516, 757, 759, 780, 793, 795, 861, 862, 928, 940, 953, 986, 994, 1162, 1164, 1190, 1191, 1276, 1366, 1385, 1405, 1410, 1414, 1415, 1421, 1422, 1423, 1425, 1426, 1427, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1452, 1454, 1456, 1460, 1462, 1463, 1464, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1505, 1506, 1508, 1509, 1510, 1511, 1518, 1522, 1523, 1524, 1526, 1527, 1533, 1534, 1535, 1538, 1539, 1540, 1547, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1570, 1596, 1597, 1598, 1606, 1608, 1609, 1617, 1618, 1622, 1633, 1634, 1637, 1638, 1642, 1649, 1657, 1658, 1659, 1660, 1661, 1669, 1674, 1681, 1682, 1693, 1694, 1708, 1709, 1719, 1721, 1765, 1790, 1823, 1832, 1833, 1863, 1876, 1897, 1914, 1915, 1921, 1957, 1964, 1965, 2004, 2006, 2007, 2008, 2021, 2022, 2024, 2025, 2026, 2027, 2032, 2033, 2034, 2037, 2038, 2039, 2041, 2042, 2043, 2046, 2052, 2056, 2057, 2058, 2059, 2061, 2062, 2063, 2064, 2067, 2068, 2069, 2072, 2090, 2091, 2093, 2094, 2097, 2098, 2099, 2100], "doesn": [0, 1, 2, 5, 7, 8, 11, 12, 22, 27, 29, 35, 42, 50, 55, 57, 60, 61, 83, 822, 825, 880, 900, 901, 905, 914, 926, 986, 1008, 1029, 1163, 1174, 1180, 1181, 1191, 1194, 1204, 1273, 1279, 1305, 1329, 1337, 1346, 1402, 1446, 1447, 1448, 1455, 1484, 1553, 1600, 1601, 1602, 1637, 1683, 1709, 1710, 1740, 1779, 1859, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893, 1897, 1969, 1982, 2006, 2009, 2010, 2025, 2027, 2034, 2035, 2037, 2039, 2040, 2045, 2048, 2052, 2058, 2060, 2068, 2072, 2093, 2098, 2101, 2103], "help": [0, 1, 4, 7, 8, 11, 14, 19, 22, 23, 27, 41, 44, 52, 57, 61, 919, 920, 932, 1029, 1061, 1163, 1164, 1174, 1180, 1181, 1265, 1266, 1285, 1367, 1381, 1382, 1457, 1458, 1459, 1463, 1519, 1723, 1774, 1869, 1969, 1982, 2004, 2009, 2016, 2017, 2025, 2026, 2033, 2034, 2035, 2037, 2038, 2040, 2044, 2046, 2049, 2054, 2056, 2059, 2067, 2068, 2072, 2081, 2091, 2093, 2096, 2097, 2101, 2103], "revers": [0, 33, 58, 61, 512, 733, 792, 908, 910, 1123, 1125, 1145, 1166, 1168, 1173, 1333, 1489, 1532, 1668, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747, 1944, 1963, 2007, 2008, 2009, 2034, 2038, 2040, 2057, 2078], "therefor": [0, 3, 5, 22, 23, 27, 33, 34, 42, 52, 55, 63, 68, 69, 85, 447, 543, 914, 941, 950, 974, 1050, 1139, 1156, 1159, 1162, 1203, 1223, 1224, 1278, 1281, 1311, 1324, 1461, 1462, 1571, 1616, 1617, 1625, 1759, 1795, 2009, 2018, 2033, 2034, 2037, 2039, 2041, 2042, 2045, 2056, 2069, 2072, 2092, 2095], "rais": [0, 1, 5, 7, 14, 27, 29, 31, 33, 35, 37, 44, 49, 52, 57, 60, 61, 63, 87, 312, 314, 320, 696, 894, 900, 903, 905, 908, 909, 910, 911, 912, 913, 914, 918, 919, 920, 927, 937, 939, 953, 962, 972, 1009, 1075, 1148, 1153, 1197, 1263, 1265, 1270, 1273, 1281, 1283, 1295, 1297, 1305, 1306, 1309, 1313, 1314, 1319, 1326, 1327, 1331, 1332, 1337, 1358, 1385, 1519, 1677, 1702, 1729, 1730, 1735, 1737, 1740, 1750, 1770, 1771, 1857, 1860, 1905, 1957, 2004, 2010, 2013, 2016, 2024, 2034, 2037, 2039, 2041, 2049, 2054, 2056, 2059, 2060, 2066, 2067, 2071, 2079, 2090, 2093, 2094, 2102, 2103, 2104], "mani": [0, 3, 7, 11, 14, 22, 23, 27, 33, 44, 52, 56, 57, 61, 87, 401, 679, 889, 891, 905, 906, 908, 910, 1105, 1191, 1278, 1438, 1790, 1888, 1938, 1945, 1946, 1947, 1948, 2006, 2008, 2017, 2025, 2032, 2034, 2035, 2036, 2037, 2039, 2040, 2045, 2046, 2049, 2053, 2056, 2058, 2062, 2069, 2072, 2075, 2077, 2078, 2081, 2089, 2090, 2091, 2093, 2094, 2096, 2097, 2099, 2102, 2103, 2105, 2106], "sigmoid": [0, 33, 61, 526, 666, 667, 759, 794, 1431, 1432, 1461, 1470, 1471, 1489, 1490, 1549, 1597, 1624, 1680, 2007, 2025, 2026, 2032, 2054, 2057, 2064, 2073, 2085, 2098], "right": [0, 2, 7, 9, 12, 27, 29, 33, 49, 52, 61, 819, 865, 941, 948, 950, 951, 956, 961, 965, 986, 1099, 1105, 1146, 1149, 1150, 1154, 1219, 1223, 1224, 1228, 1232, 1262, 1285, 1310, 1315, 1326, 1328, 1329, 1337, 1343, 1344, 1405, 1423, 1428, 1429, 1430, 1431, 1432, 1446, 1447, 1448, 1465, 1472, 1485, 1486, 1487, 1488, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1522, 1523, 1524, 1528, 1529, 1536, 1568, 1571, 1572, 1573, 1574, 1579, 1580, 1581, 1625, 1645, 1664, 1715, 1729, 1779, 1793, 1794, 1835, 1855, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1916, 1937, 1942, 1944, 1960, 1963, 2004, 2007, 2009, 2024, 2025, 2026, 2034, 2039, 2043, 2054, 2056, 2058, 2065, 2069, 2073, 2091, 2092, 2093, 2101], "entropi": [0, 32, 33, 1431, 1454, 1523, 1597, 1598, 1608, 2073], "combin": [0, 3, 22, 23, 27, 29, 44, 58, 60, 616, 688, 711, 712, 713, 714, 715, 716, 717, 718, 792, 854, 890, 905, 1061, 1134, 1135, 1140, 1142, 1194, 1228, 1360, 1370, 1432, 1465, 1479, 1525, 1567, 1571, 1619, 1642, 1736, 2006, 2007, 2008, 2033, 2037, 2040, 2054, 2056, 2057, 2058, 2060, 2062, 2065, 2067, 2089], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 18, 22, 23, 27, 28, 29, 31, 33, 35, 41, 42, 44, 45, 49, 50, 52, 56, 57, 61, 83, 84, 582, 583, 584, 586, 587, 606, 616, 679, 691, 693, 759, 792, 887, 890, 905, 906, 910, 919, 960, 962, 1014, 1053, 1055, 1084, 1085, 1093, 1102, 1105, 1111, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1151, 1152, 1162, 1172, 1179, 1180, 1189, 1192, 1227, 1229, 1254, 1263, 1265, 1276, 1279, 1286, 1289, 1291, 1296, 1298, 1301, 1302, 1307, 1308, 1313, 1318, 1321, 1322, 1324, 1325, 1327, 1329, 1334, 1337, 1360, 1363, 1366, 1368, 1371, 1412, 1429, 1431, 1432, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1465, 1470, 1478, 1479, 1485, 1487, 1489, 1510, 1511, 1513, 1519, 1522, 1523, 1524, 1526, 1527, 1533, 1535, 1551, 1552, 1567, 1568, 1569, 1571, 1579, 1580, 1597, 1598, 1608, 1627, 1637, 1644, 1661, 1669, 1677, 1723, 1725, 1729, 1751, 1761, 1763, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1794, 1795, 1797, 1801, 1820, 1835, 1848, 1863, 1900, 1905, 1920, 1937, 1941, 1942, 1944, 1953, 1962, 1966, 1970, 2004, 2006, 2008, 2009, 2013, 2015, 2016, 2017, 2025, 2026, 2027, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2046, 2051, 2052, 2053, 2056, 2058, 2059, 2060, 2062, 2063, 2067, 2068, 2069, 2072, 2073, 2075, 2077, 2078, 2079, 2082, 2083, 2088, 2089, 2090, 2091, 2093, 2098, 2101, 2103], "bcewithlogitsloss": [0, 1598], "bcewithlogit": 0, "safe": [0, 27, 44, 49, 60, 61, 84, 86, 87, 485, 1051, 1052, 1072, 1073, 1194, 1709, 1773, 1774, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1992, 1993, 1994, 1995, 2006, 2009, 2033, 2034, 2037, 2040, 2042, 2045, 2067, 2074, 2084, 2088, 2094, 2095, 2103], "_convolut": [0, 2057], "avg_pool3d": [0, 2007, 2057, 2064, 2098], "grid_sampler_2d": [0, 2007, 2057, 2098], "_grid_sampler_2d_cpu_fallback": [0, 2057], "grid_sampler_3d": [0, 2007, 2057], "polar": [0, 33, 1325, 2007, 2057], "quantil": [0, 1366, 1412, 2007, 2057, 2073], "nanquantil": [0, 2007, 2057], "stft": [0, 941, 950, 1223, 1224, 1262, 1285, 2007, 2057], "view_as_complex": [0, 11, 2007, 2057], "choleski": [0, 2, 33, 964, 965, 1296, 1302, 1338, 2007, 2057], "cholesky_invers": [0, 2, 2007, 2057], "cholesky_solv": [0, 2, 2007, 2057], "invers": [0, 33, 682, 683, 882, 885, 959, 964, 965, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1262, 1306, 1307, 1319, 1323, 1326, 1331, 1332, 1449, 1450, 1451, 1461, 1462, 1465, 1515, 1516, 1517, 1571, 1616, 1617, 1653, 1654, 1655, 1726, 1729, 1753, 1795, 1801, 1952, 2005, 2007, 2009, 2049, 2057, 2073], "lu_solv": [0, 2, 1313, 2007, 2057], "orgqr": [0, 2007, 2057], "ormqr": [0, 1209, 1305, 2007, 2057], "pinvers": [0, 1311, 2007, 2057], "max_pool3d": [0, 2007, 2057, 2064], "max_unpool2d": [0, 1620, 1651, 2007, 2057], "max_unpool3d": [0, 1621, 1652, 2007, 2057], "adaptive_avg_pool3d": [0, 2007, 2039, 2057, 2064], "reflection_pad1d": [0, 2007, 2057, 2098], "reflection_pad2d": [0, 2007, 2057, 2098], "replication_pad1d": [0, 2007, 2057], "replication_pad2d": [0, 2007, 2057, 2098], "replication_pad3d": [0, 2007, 2057, 2098], "ctc_loss": [0, 1438, 2007, 2057], "fft_fft": [0, 2007, 2057], "fft_ifft": [0, 2007, 2057], "fft_fft2": [0, 2007, 2057], "fft_ifft2": [0, 2007, 2057], "fft_fftn": [0, 2007, 2057], "fft_ifftn": [0, 2007, 2057], "fft_rfft": [0, 2007, 2057], "fft_irfft": [0, 2007, 2057], "fft_rfft2": [0, 2007, 2057], "fft_irfft2": [0, 2007, 2057], "fft_rfftn": [0, 2007, 2057], "fft_irfftn": [0, 2007, 2057], "fft_hfft": [0, 2007, 2057], "fft_ihfft": [0, 2007, 2057], "linalg_matrix_norm": [0, 2007, 2057], "linalg_cond": [0, 2007, 2057], "linalg_matrix_rank": [0, 2007, 2057], "linalg_solv": [0, 2007, 2057], "linalg_choleski": [0, 2007, 2057], "linalg_svdv": [0, 2007, 2057], "linalg_eigv": [0, 2007, 2057], "linalg_eigvalsh": [0, 2007, 2057], "linalg_inv": [0, 2007, 2057], "linalg_householder_product": [0, 2007, 2057], "linalg_tensorinv": [0, 2007, 2057], "linalg_tensorsolv": [0, 2007, 2057], "fake_quantize_per_tensor_affin": [0, 2007, 2057], "eig": [0, 1302, 1303, 1329, 2049], "geqrf": [0, 1305, 1807, 2007, 2057], "lstsq": [0, 1209, 1297, 1323], "_lu_with_info": [0, 2057], "qr": [0, 2, 1209, 1301, 1302, 1305, 1311, 1329, 1723, 1807, 2007, 2057], "solv": [0, 7, 11, 49, 1177, 1209, 1219, 1297, 1306, 1308, 1309, 1312, 1313, 1315, 1319, 1327, 1328, 1332, 1338, 1356, 1944, 2034, 2043, 2049, 2052, 2084, 2091, 2094], "svd": [0, 2, 11, 1301, 1302, 1311, 1323, 1330, 1346, 1729, 1809, 1921, 2007, 2049, 2057, 2072, 2098], "symeig": 0, "triangular_solv": [0, 2007, 2057], "fractional_max_pool2d": [0, 2007, 2057], "fractional_max_pool3d": [0, 2007, 2057], "adaptive_max_pool3d": [0, 2007, 2057], "multilabel_margin_loss_forward": [0, 2057], "linalg_qr": [0, 2007, 2057], "linalg_cholesky_ex": [0, 2007, 2057], "linalg_svd": [0, 2007, 2057], "linalg_eig": [0, 2007, 2057], "linalg_eigh": [0, 2007, 2057], "linalg_lstsq": [0, 2007, 2057], "linalg_inv_ex": [0, 2007, 2057], "cat": [0, 27, 33, 61, 543, 746, 747, 756, 792, 795, 984, 985, 1367, 1539, 1901, 1913, 2006, 2007, 2025, 2056, 2057, 2059, 2062, 2064, 2072, 2082, 2090, 2098], "stack": [0, 8, 18, 22, 23, 24, 27, 33, 37, 44, 49, 50, 56, 57, 61, 759, 932, 959, 970, 1066, 1067, 1104, 1172, 1174, 1181, 1231, 1367, 1438, 1470, 1489, 1490, 1535, 1564, 1566, 1754, 1959, 1969, 1971, 2005, 2007, 2013, 2027, 2037, 2038, 2041, 2057, 2059, 2061, 2064, 2072, 2091, 2092, 2093, 2094, 2101, 2103, 2105, 2106], "index_copi": [0, 1957, 2007, 2057], "implement": [1, 2, 5, 8, 11, 12, 16, 17, 22, 23, 27, 28, 29, 31, 32, 33, 36, 41, 42, 45, 49, 52, 57, 61, 62, 79, 83, 149, 414, 512, 514, 516, 686, 737, 738, 739, 740, 741, 742, 759, 778, 780, 784, 792, 799, 818, 819, 820, 823, 824, 825, 878, 880, 893, 909, 919, 920, 986, 992, 1105, 1148, 1153, 1159, 1166, 1167, 1169, 1170, 1265, 1271, 1273, 1275, 1276, 1279, 1321, 1324, 1337, 1338, 1366, 1423, 1438, 1455, 1470, 1473, 1486, 1487, 1488, 1491, 1519, 1525, 1531, 1534, 1535, 1536, 1539, 1556, 1565, 1567, 1625, 1630, 1664, 1677, 1685, 1708, 1709, 1714, 1715, 1723, 1724, 1729, 1740, 1753, 1757, 1758, 1761, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1793, 1795, 1801, 1819, 1826, 1839, 1848, 1851, 1875, 1887, 1897, 1920, 1921, 1937, 1953, 1957, 1958, 1960, 2008, 2009, 2010, 2013, 2016, 2017, 2023, 2024, 2027, 2028, 2032, 2033, 2034, 2036, 2037, 2039, 2040, 2041, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2054, 2058, 2059, 2060, 2062, 2067, 2068, 2072, 2073, 2076, 2078, 2088, 2090, 2092, 2094, 2099, 2101, 2104], "arbitrari": [1, 3, 27, 31, 49, 63, 66, 71, 253, 890, 905, 1088, 1181, 1329, 1337, 1455, 1461, 1485, 1510, 1571, 1597, 1598, 1616, 1637, 1664, 1750, 1920, 1942, 1955, 2009, 2015, 2017, 2034, 2040, 2045, 2046, 2058, 2060, 2062, 2072, 2081, 2091, 2094, 2099, 2103, 2104], "scalar": [1, 12, 27, 33, 50, 63, 72, 96, 149, 153, 259, 312, 445, 512, 588, 686, 687, 737, 738, 739, 740, 741, 742, 879, 880, 893, 908, 909, 912, 914, 945, 948, 956, 990, 994, 1100, 1105, 1120, 1153, 1160, 1219, 1226, 1242, 1256, 1290, 1291, 1360, 1367, 1412, 1423, 1431, 1432, 1438, 1452, 1454, 1455, 1472, 1478, 1479, 1484, 1485, 1491, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1569, 1627, 1670, 1763, 1768, 1769, 1770, 1803, 1816, 1818, 1820, 1838, 1839, 1855, 1903, 1904, 1905, 1906, 1907, 1935, 1953, 1954, 1972, 2002, 2003, 2007, 2008, 2009, 2021, 2027, 2032, 2034, 2039, 2043, 2056, 2067, 2072, 2075, 2077, 2079, 2091, 2093, 2094, 2098, 2102], "It": [1, 2, 3, 4, 5, 7, 8, 12, 17, 18, 22, 23, 27, 28, 29, 31, 32, 33, 35, 37, 41, 42, 43, 44, 45, 47, 49, 50, 52, 54, 56, 57, 58, 60, 61, 63, 83, 149, 195, 414, 472, 473, 512, 514, 516, 543, 556, 889, 890, 891, 892, 893, 900, 901, 905, 906, 916, 917, 926, 935, 972, 974, 978, 980, 982, 986, 987, 988, 1021, 1026, 1032, 1033, 1051, 1052, 1072, 1073, 1081, 1128, 1158, 1163, 1166, 1174, 1178, 1181, 1183, 1190, 1194, 1206, 1227, 1262, 1265, 1266, 1271, 1272, 1276, 1298, 1302, 1306, 1309, 1311, 1313, 1314, 1319, 1323, 1324, 1326, 1327, 1329, 1331, 1334, 1335, 1337, 1338, 1346, 1396, 1423, 1432, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1455, 1465, 1513, 1514, 1515, 1516, 1517, 1519, 1526, 1548, 1551, 1571, 1573, 1627, 1637, 1683, 1701, 1702, 1703, 1706, 1707, 1709, 1724, 1726, 1729, 1750, 1753, 1754, 1762, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1807, 1826, 1839, 1855, 1870, 1877, 1899, 1952, 1969, 1979, 1983, 1984, 1992, 1993, 1994, 1995, 2001, 2004, 2008, 2009, 2013, 2021, 2024, 2026, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2062, 2067, 2068, 2069, 2071, 2072, 2073, 2074, 2076, 2081, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2097, 2102, 2103, 2105], "minim": [1, 7, 8, 818, 875, 1368, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1787, 1788, 1789, 1790, 1803, 2004, 2021, 2033, 2037, 2046, 2048, 2051, 2056, 2060, 2062, 2094, 2101, 2103], "exist": [1, 7, 8, 9, 11, 14, 22, 27, 28, 29, 33, 35, 37, 42, 44, 45, 50, 52, 56, 59, 61, 63, 81, 82, 253, 498, 791, 854, 878, 908, 909, 910, 911, 912, 913, 914, 919, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1045, 1180, 1193, 1194, 1203, 1265, 1269, 1281, 1301, 1306, 1312, 1313, 1338, 1412, 1519, 1520, 1529, 1579, 1895, 1913, 1960, 2004, 2006, 2013, 2016, 2024, 2025, 2027, 2028, 2034, 2035, 2037, 2039, 2040, 2042, 2044, 2045, 2046, 2047, 2049, 2051, 2056, 2059, 2060, 2061, 2062, 2067, 2069, 2072, 2076, 2078, 2088, 2089, 2091, 2093, 2095, 2098, 2101, 2105], "code": [1, 3, 4, 8, 9, 11, 14, 15, 16, 22, 23, 27, 29, 33, 35, 45, 47, 49, 50, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 118, 679, 915, 935, 972, 974, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1047, 1048, 1061, 1163, 1181, 1265, 1269, 1270, 1276, 1277, 1278, 1281, 1282, 1283, 1296, 1307, 1309, 1337, 1536, 1548, 1580, 1581, 1582, 1709, 1866, 2004, 2005, 2008, 2009, 2015, 2017, 2026, 2034, 2035, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2048, 2050, 2051, 2052, 2054, 2056, 2058, 2061, 2066, 2067, 2068, 2069, 2072, 2075, 2076, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2104, 2105], "need": [1, 3, 5, 6, 7, 8, 9, 14, 15, 22, 23, 27, 28, 29, 31, 32, 33, 36, 37, 42, 44, 45, 48, 49, 50, 52, 54, 55, 57, 61, 62, 63, 73, 74, 84, 85, 149, 253, 470, 487, 494, 498, 582, 679, 733, 734, 818, 819, 820, 823, 824, 825, 841, 858, 889, 893, 900, 901, 902, 905, 906, 914, 926, 953, 954, 962, 979, 980, 1041, 1050, 1057, 1093, 1095, 1105, 1126, 1128, 1148, 1157, 1162, 1181, 1203, 1265, 1359, 1405, 1454, 1461, 1515, 1516, 1517, 1519, 1525, 1563, 1565, 1567, 1600, 1601, 1602, 1695, 1709, 1716, 1717, 1729, 1731, 1735, 1737, 1765, 1790, 1836, 1841, 1855, 1913, 1942, 1958, 1960, 2005, 2006, 2008, 2009, 2013, 2016, 2017, 2019, 2024, 2026, 2027, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2048, 2049, 2050, 2051, 2052, 2054, 2056, 2058, 2059, 2060, 2062, 2065, 2067, 2068, 2069, 2072, 2074, 2075, 2078, 2079, 2083, 2084, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2099, 2101, 2103, 2104], "declar": [1, 9, 14, 22, 45, 1191, 2008, 2009, 2010, 2039, 2056, 2059, 2060], "requires_grad": [1, 5, 29, 32, 33, 58, 334, 444, 445, 446, 447, 448, 486, 487, 495, 865, 880, 900, 901, 903, 904, 905, 906, 915, 916, 919, 920, 922, 924, 925, 935, 941, 950, 1050, 1106, 1107, 1108, 1109, 1118, 1123, 1141, 1159, 1160, 1161, 1164, 1174, 1223, 1224, 1265, 1285, 1336, 1352, 1431, 1432, 1452, 1454, 1461, 1462, 1472, 1484, 1485, 1510, 1511, 1519, 1525, 1526, 1533, 1567, 1568, 1597, 1598, 1608, 1661, 1709, 1710, 1711, 1712, 1757, 1762, 1768, 1769, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1897, 1902, 1903, 1904, 1905, 1906, 1907, 1935, 1957, 1969, 2002, 2003, 2007, 2011, 2013, 2025, 2026, 2027, 2037, 2039, 2040, 2046, 2051, 2056, 2057, 2067, 2068, 2078, 2079, 2081, 2091, 2092, 2093, 2094, 2098, 2101], "keyword": [1, 5, 22, 27, 28, 31, 32, 49, 50, 57, 61, 63, 69, 83, 87, 312, 320, 444, 445, 446, 447, 448, 512, 580, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 695, 696, 697, 698, 861, 865, 880, 881, 882, 883, 884, 885, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 952, 956, 959, 961, 963, 964, 965, 967, 969, 970, 983, 988, 989, 991, 992, 994, 1004, 1017, 1019, 1021, 1047, 1048, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1097, 1100, 1102, 1104, 1106, 1107, 1108, 1110, 1115, 1118, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1157, 1159, 1160, 1161, 1162, 1206, 1207, 1208, 1209, 1219, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1240, 1242, 1259, 1260, 1265, 1268, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1388, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1419, 1455, 1477, 1480, 1519, 1677, 1702, 1703, 1709, 1729, 1731, 1736, 1740, 1759, 1763, 1765, 1768, 1769, 1807, 1808, 1812, 1813, 1816, 1817, 1819, 1820, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1838, 1839, 1840, 1841, 1848, 1850, 1855, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1892, 1895, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1919, 1920, 1932, 1933, 1934, 1935, 1939, 1942, 1944, 1945, 1946, 1947, 1948, 1950, 1957, 1964, 1965, 1966, 1971, 1972, 2002, 2003, 2004, 2009, 2010, 2026, 2027, 2039, 2049, 2054, 2056, 2058, 2067, 2072, 2073, 2077, 2104], "type": [1, 2, 3, 5, 12, 14, 15, 17, 23, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 44, 45, 47, 49, 52, 57, 59, 60, 61, 63, 65, 68, 69, 72, 73, 74, 79, 80, 84, 86, 87, 149, 190, 195, 207, 325, 328, 332, 340, 444, 445, 446, 447, 448, 480, 558, 603, 679, 684, 685, 686, 687, 688, 689, 733, 734, 737, 738, 739, 748, 750, 751, 752, 753, 755, 763, 765, 766, 769, 770, 771, 772, 773, 774, 775, 776, 777, 780, 783, 791, 792, 793, 796, 814, 815, 816, 818, 819, 820, 821, 822, 824, 826, 839, 840, 854, 855, 856, 857, 858, 859, 860, 861, 862, 865, 873, 879, 889, 890, 891, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 928, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 953, 954, 956, 957, 958, 959, 960, 962, 971, 972, 973, 979, 980, 981, 986, 997, 998, 999, 1000, 1002, 1014, 1016, 1023, 1024, 1025, 1027, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1042, 1044, 1047, 1048, 1049, 1050, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1068, 1080, 1082, 1083, 1086, 1087, 1100, 1105, 1106, 1107, 1108, 1118, 1119, 1120, 1123, 1141, 1148, 1150, 1151, 1152, 1153, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1170, 1171, 1172, 1174, 1175, 1176, 1177, 1181, 1188, 1195, 1196, 1197, 1198, 1199, 1204, 1207, 1211, 1213, 1215, 1218, 1223, 1224, 1226, 1227, 1228, 1241, 1244, 1246, 1247, 1250, 1253, 1261, 1262, 1263, 1265, 1266, 1268, 1271, 1272, 1275, 1277, 1279, 1281, 1282, 1284, 1285, 1288, 1297, 1301, 1318, 1322, 1329, 1335, 1336, 1337, 1338, 1352, 1355, 1358, 1365, 1367, 1374, 1375, 1376, 1379, 1393, 1394, 1395, 1397, 1399, 1402, 1404, 1410, 1413, 1423, 1427, 1446, 1447, 1448, 1455, 1462, 1509, 1519, 1520, 1521, 1525, 1529, 1530, 1534, 1548, 1553, 1554, 1555, 1563, 1564, 1565, 1566, 1567, 1580, 1581, 1582, 1585, 1586, 1590, 1591, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1646, 1647, 1648, 1649, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1669, 1671, 1672, 1674, 1675, 1677, 1678, 1680, 1681, 1682, 1683, 1684, 1690, 1692, 1693, 1694, 1695, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1761, 1763, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1809, 1817, 1818, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1838, 1839, 1841, 1845, 1848, 1855, 1856, 1859, 1860, 1861, 1863, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1916, 1917, 1919, 1920, 1921, 1935, 1944, 1946, 1948, 1953, 1954, 1955, 1957, 1958, 1959, 1963, 1969, 1972, 1977, 1978, 1980, 1983, 1984, 1985, 1986, 1987, 1989, 1990, 2000, 2002, 2003, 2004, 2005, 2006, 2007, 2010, 2013, 2017, 2019, 2020, 2021, 2025, 2027, 2032, 2033, 2034, 2036, 2037, 2043, 2044, 2045, 2046, 2049, 2051, 2052, 2054, 2055, 2057, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2071, 2072, 2073, 2074, 2075, 2077, 2079, 2081, 2082, 2083, 2089, 2090, 2091, 2092, 2094, 2098, 2101, 2102, 2104], "doubl": [1, 3, 33, 35, 49, 50, 52, 480, 486, 616, 748, 750, 751, 752, 753, 755, 765, 766, 780, 900, 901, 903, 905, 906, 911, 919, 920, 928, 957, 964, 965, 983, 1004, 1050, 1120, 1148, 1219, 1265, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1346, 1347, 1348, 1349, 1350, 1356, 1462, 1519, 1585, 1588, 1617, 1699, 1770, 1807, 1813, 1902, 1903, 1904, 1906, 1907, 1920, 1935, 1944, 1972, 2009, 2025, 2037, 2039, 2040, 2042, 2049, 2056, 2059, 2074, 2075, 2078], "bfloat16": [1, 23, 52, 1247, 1265, 1317, 1334, 1519, 1770, 1776, 1777, 1789, 1860, 1863, 2025, 2037, 2072, 2074, 2075, 2078, 2079, 2107], "cfloat": [1, 11, 27, 310, 482, 616, 964, 965, 1004, 1236, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1356, 1807, 1837, 1920, 1944, 1968, 2075, 2078], "cdoubl": [1, 11, 964, 965, 1004, 1265, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1356, 1519, 1807, 1920, 1944, 2075, 2078], "beta": [1, 2, 11, 53, 60, 98, 99, 104, 105, 106, 107, 108, 109, 150, 151, 320, 516, 553, 685, 688, 689, 690, 940, 1005, 1039, 1040, 1047, 1048, 1050, 1223, 1285, 1360, 1370, 1433, 1434, 1435, 1473, 1479, 1481, 1482, 1483, 1491, 1507, 1551, 1556, 1559, 1578, 1583, 1634, 1642, 1643, 1677, 1681, 1685, 1776, 1777, 1778, 1780, 1786, 1790, 1823, 1880, 1882, 1893, 1898, 1912, 2005, 2007, 2015, 2019, 2037, 2053, 2054, 2055, 2056, 2062, 2067, 2072, 2075, 2081, 2098], "even": [1, 2, 8, 22, 23, 27, 29, 35, 49, 52, 60, 61, 86, 485, 543, 579, 679, 814, 815, 816, 893, 994, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1136, 1137, 1138, 1141, 1173, 1180, 1185, 1191, 1193, 1194, 1204, 1250, 1278, 1295, 1297, 1301, 1302, 1303, 1304, 1318, 1322, 1324, 1325, 1329, 1330, 1335, 1360, 1366, 1455, 1559, 1600, 1601, 1602, 1664, 1709, 1716, 1717, 1723, 1762, 1764, 1801, 1848, 1859, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1920, 1967, 2006, 2009, 2010, 2021, 2027, 2033, 2034, 2037, 2039, 2041, 2042, 2044, 2046, 2048, 2049, 2050, 2051, 2058, 2059, 2060, 2069, 2074, 2075, 2088, 2090, 2091, 2093, 2094, 2096, 2105], "though": [1, 11, 27, 61, 63, 66, 149, 485, 793, 890, 893, 905, 910, 1121, 1122, 1124, 1181, 1185, 1191, 1193, 1194, 1263, 1266, 1360, 1764, 2006, 2010, 2026, 2027, 2034, 2037, 2039, 2040, 2042, 2048, 2049, 2058, 2062, 2074, 2091, 2093, 2105], "signatur": [1, 12, 22, 29, 37, 49, 50, 52, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 83, 397, 486, 487, 555, 905, 906, 924, 925, 986, 1265, 1519, 1701, 1702, 1703, 1706, 1707, 1709, 1729, 1750, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1916, 2013, 2037, 2039, 2040, 2054, 2056, 2059, 2060, 2067, 2072, 2092, 2096, 2104], "veri": [1, 4, 7, 8, 18, 22, 23, 56, 58, 61, 974, 992, 1164, 1172, 1174, 1180, 1328, 1481, 1482, 1483, 1709, 1710, 1723, 1779, 1801, 1807, 1883, 1887, 1944, 1969, 2008, 2024, 2034, 2039, 2041, 2043, 2044, 2046, 2048, 2049, 2052, 2058, 2059, 2066, 2067, 2068, 2072, 2078, 2091, 2093, 2094, 2096, 2102, 2103], "unlik": [1, 3, 7, 33, 50, 52, 58, 487, 492, 915, 1102, 1141, 1144, 1148, 1301, 1302, 1321, 1324, 1329, 1333, 1363, 1366, 1368, 1491, 1711, 1712, 1838, 1966, 2008, 2009, 2024, 2027, 2037, 2048, 2050, 2075, 2081, 2090, 2094], "coverag": [1, 7, 49, 53, 61, 1166, 1167, 2005, 2006, 2011, 2026, 2062, 2072, 2104], "plan": [1, 2, 7, 9, 27, 29, 32, 895, 1709, 1819, 2027, 2034, 2039, 2059, 2072, 2078, 2102, 2103], "consid": [1, 5, 8, 23, 27, 35, 44, 49, 50, 52, 57, 60, 61, 62, 485, 693, 778, 784, 793, 908, 910, 911, 919, 994, 1092, 1093, 1094, 1095, 1096, 1126, 1162, 1254, 1258, 1261, 1265, 1306, 1308, 1309, 1310, 1311, 1319, 1320, 1323, 1328, 1331, 1454, 1465, 1519, 1522, 1571, 1590, 1625, 1636, 1696, 1710, 1723, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1754, 1759, 1789, 1803, 1857, 1876, 1911, 1916, 1945, 1946, 1947, 1948, 2004, 2006, 2009, 2016, 2033, 2034, 2035, 2039, 2041, 2042, 2043, 2046, 2049, 2054, 2058, 2059, 2061, 2063, 2068, 2069, 2072, 2075, 2078, 2079, 2090, 2091, 2094, 2102, 2104, 2105], "ad": [1, 3, 9, 14, 22, 23, 27, 31, 33, 35, 41, 52, 55, 57, 58, 60, 61, 220, 221, 312, 318, 470, 514, 679, 685, 686, 687, 688, 689, 690, 734, 895, 898, 899, 900, 908, 909, 910, 911, 915, 916, 917, 919, 928, 940, 1105, 1109, 1166, 1167, 1169, 1177, 1181, 1265, 1279, 1343, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1525, 1526, 1528, 1533, 1534, 1548, 1559, 1563, 1568, 1571, 1603, 1604, 1605, 1622, 1650, 1651, 1652, 1677, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1729, 1736, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1823, 1824, 1825, 1893, 1898, 1912, 2004, 2006, 2008, 2021, 2026, 2033, 2040, 2042, 2043, 2045, 2046, 2051, 2059, 2061, 2062, 2065, 2072, 2077, 2081, 2089, 2090, 2093, 2094, 2098, 2099, 2101, 2102, 2105], "tutori": [1, 3, 9, 15, 27, 28, 31, 61, 895, 898, 899, 900, 903, 905, 1960, 2005, 2006, 2013, 2016, 2028, 2039, 2045, 2046, 2048, 2051, 2056, 2062, 2085, 2093, 2094, 2096], "how": [1, 3, 5, 7, 8, 9, 12, 15, 17, 22, 27, 29, 32, 36, 44, 45, 47, 52, 53, 54, 56, 57, 61, 63, 71, 72, 79, 232, 414, 485, 486, 487, 784, 791, 792, 795, 841, 859, 861, 862, 895, 898, 899, 900, 903, 905, 906, 915, 916, 924, 925, 1088, 1109, 1163, 1172, 1178, 1187, 1195, 1219, 1265, 1276, 1337, 1465, 1519, 1571, 1572, 1664, 1696, 1709, 1750, 1762, 1839, 1863, 1877, 1888, 2005, 2006, 2008, 2009, 2013, 2016, 2017, 2020, 2024, 2025, 2026, 2028, 2033, 2036, 2037, 2038, 2040, 2041, 2042, 2043, 2046, 2048, 2050, 2051, 2056, 2060, 2061, 2062, 2065, 2067, 2068, 2069, 2072, 2077, 2085, 2090, 2091, 2096, 2097, 2101, 2105], "major": [1, 6, 7, 8, 9, 1032, 1920, 2005, 2009, 2042, 2058, 2090, 2094, 2096, 2097], "contain": [1, 2, 3, 5, 11, 14, 15, 22, 27, 28, 29, 31, 32, 33, 35, 37, 38, 42, 45, 50, 52, 60, 61, 63, 64, 69, 72, 82, 87, 149, 153, 190, 194, 207, 289, 310, 312, 314, 318, 320, 470, 482, 543, 602, 606, 685, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 759, 813, 836, 841, 877, 892, 893, 894, 905, 906, 908, 909, 910, 911, 912, 913, 914, 932, 940, 941, 942, 950, 952, 956, 974, 989, 990, 994, 1017, 1018, 1019, 1020, 1021, 1050, 1105, 1139, 1140, 1142, 1148, 1157, 1169, 1170, 1173, 1174, 1223, 1224, 1227, 1228, 1236, 1240, 1256, 1263, 1265, 1266, 1272, 1273, 1276, 1281, 1282, 1285, 1296, 1302, 1303, 1304, 1305, 1307, 1309, 1311, 1312, 1328, 1337, 1355, 1359, 1366, 1405, 1411, 1423, 1432, 1454, 1455, 1461, 1462, 1465, 1470, 1471, 1473, 1478, 1489, 1490, 1511, 1519, 1520, 1521, 1526, 1529, 1535, 1537, 1548, 1552, 1559, 1571, 1578, 1608, 1616, 1617, 1619, 1692, 1699, 1702, 1703, 1709, 1716, 1717, 1724, 1725, 1726, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1741, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1757, 1758, 1761, 1763, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1809, 1812, 1837, 1851, 1855, 1915, 1916, 1920, 1937, 1944, 1946, 1948, 1953, 1954, 1955, 1959, 1960, 1965, 1969, 2005, 2006, 2008, 2009, 2010, 2013, 2016, 2017, 2021, 2026, 2027, 2029, 2031, 2033, 2034, 2038, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2049, 2050, 2051, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2064, 2065, 2067, 2069, 2071, 2072, 2074, 2075, 2077, 2078, 2081, 2082, 2083, 2087, 2089, 2091, 2092, 2093, 2094, 2096, 2097, 2100, 2101, 2102, 2103, 2104, 2105], "build": [1, 2, 8, 9, 14, 15, 27, 29, 33, 42, 49, 61, 1265, 1275, 1519, 1566, 1590, 1625, 2005, 2006, 2016, 2028, 2034, 2056, 2060, 2062, 2068, 2077, 2078, 2084, 2085, 2088, 2091, 2103], "basic": [1, 3, 7, 9, 12, 29, 44, 61, 63, 64, 1166, 1167, 1168, 1272, 1338, 1709, 1795, 2005, 2010, 2028, 2035, 2037, 2038, 2043, 2059, 2068, 2076, 2077, 2092, 2094, 2096], "jacobian": [1, 33, 53, 54, 56, 57, 893, 898, 908, 911, 913, 914, 919, 920, 1167, 1168, 1169, 1173, 1174, 1969, 2034, 2039, 2043], "hessian": [1, 53, 56, 57, 909, 912, 1167, 1168, 2032, 2040], "etc": [1, 3, 5, 11, 12, 22, 23, 27, 33, 35, 44, 45, 49, 50, 52, 859, 860, 861, 928, 974, 986, 1183, 1262, 1265, 1454, 1519, 1709, 1841, 2004, 2008, 2009, 2013, 2016, 2039, 2040, 2041, 2046, 2048, 2054, 2056, 2058, 2059, 2062, 2067, 2072, 2074, 2077, 2081, 2088, 2092, 2101], "user": [1, 2, 5, 7, 8, 9, 10, 11, 12, 15, 22, 23, 27, 28, 29, 32, 33, 34, 35, 37, 41, 44, 45, 48, 50, 52, 53, 56, 57, 60, 61, 63, 76, 83, 149, 334, 485, 731, 737, 738, 739, 744, 745, 755, 763, 793, 796, 798, 837, 854, 861, 862, 893, 900, 903, 905, 906, 914, 1008, 1041, 1156, 1162, 1163, 1181, 1265, 1302, 1337, 1519, 1563, 1565, 1566, 1567, 1677, 1702, 1703, 1709, 1716, 1717, 1726, 1740, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 2004, 2005, 2006, 2008, 2009, 2013, 2016, 2024, 2026, 2027, 2033, 2034, 2035, 2037, 2039, 2043, 2044, 2045, 2046, 2048, 2051, 2054, 2056, 2058, 2060, 2061, 2062, 2064, 2067, 2068, 2072, 2074, 2075, 2076, 2077, 2079, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2099, 2101, 2103, 2104], "input": [1, 2, 3, 5, 9, 11, 12, 15, 20, 22, 23, 26, 27, 28, 31, 32, 33, 34, 37, 50, 52, 53, 54, 55, 56, 57, 58, 61, 63, 70, 71, 72, 76, 79, 81, 83, 84, 85, 87, 149, 259, 279, 300, 400, 482, 498, 516, 608, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 719, 727, 728, 733, 734, 737, 738, 739, 740, 741, 742, 744, 745, 755, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 801, 813, 816, 818, 836, 837, 838, 839, 857, 858, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 900, 901, 903, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 932, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 958, 960, 961, 963, 964, 965, 966, 967, 968, 969, 971, 972, 983, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1004, 1020, 1047, 1048, 1050, 1084, 1085, 1086, 1087, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1174, 1179, 1206, 1207, 1208, 1209, 1210, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1247, 1250, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1268, 1269, 1272, 1273, 1277, 1279, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1388, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1706, 1707, 1708, 1709, 1716, 1717, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1741, 1743, 1744, 1745, 1746, 1750, 1751, 1752, 1754, 1759, 1762, 1763, 1764, 1766, 1767, 1769, 1771, 1772, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1794, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1829, 1831, 1833, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1852, 1853, 1854, 1857, 1858, 1859, 1860, 1863, 1870, 1871, 1872, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1930, 1931, 1932, 1933, 1934, 1936, 1938, 1939, 1940, 1941, 1944, 1945, 1947, 1950, 1951, 1952, 1953, 1954, 1956, 1957, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1972, 1973, 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2016, 2019, 2026, 2027, 2028, 2032, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2045, 2046, 2049, 2050, 2051, 2053, 2054, 2056, 2058, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2068, 2072, 2073, 2075, 2076, 2079, 2082, 2083, 2085, 2088, 2090, 2091, 2092, 2093, 2094, 2098, 2101, 2102, 2103, 2104], "set": [1, 2, 3, 5, 8, 9, 13, 14, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 35, 37, 42, 44, 45, 47, 48, 49, 50, 52, 55, 56, 59, 60, 61, 63, 78, 80, 87, 149, 153, 253, 329, 444, 445, 446, 447, 448, 457, 495, 498, 519, 579, 580, 679, 734, 740, 742, 759, 778, 784, 791, 792, 793, 796, 814, 815, 816, 819, 820, 821, 824, 825, 841, 854, 858, 859, 861, 862, 865, 878, 890, 892, 893, 900, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 916, 917, 939, 951, 956, 967, 971, 972, 980, 988, 1001, 1005, 1015, 1030, 1039, 1051, 1052, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1106, 1107, 1108, 1157, 1162, 1171, 1177, 1182, 1228, 1245, 1246, 1265, 1269, 1273, 1275, 1277, 1279, 1281, 1282, 1301, 1302, 1305, 1311, 1318, 1320, 1322, 1323, 1335, 1336, 1337, 1338, 1352, 1355, 1358, 1380, 1384, 1385, 1386, 1401, 1423, 1427, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1463, 1470, 1473, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1504, 1506, 1510, 1511, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1529, 1533, 1534, 1535, 1551, 1552, 1559, 1563, 1565, 1567, 1568, 1569, 1581, 1582, 1590, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1618, 1625, 1629, 1636, 1637, 1646, 1647, 1648, 1661, 1663, 1669, 1677, 1696, 1708, 1709, 1711, 1712, 1724, 1730, 1759, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1819, 1826, 1828, 1832, 1834, 1835, 1843, 1844, 1855, 1856, 1859, 1860, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1884, 1900, 1905, 1914, 1915, 1935, 1945, 1946, 1947, 1948, 1957, 1960, 1961, 1964, 1965, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2004, 2006, 2008, 2009, 2010, 2013, 2015, 2018, 2019, 2020, 2021, 2024, 2027, 2032, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2054, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2066, 2067, 2077, 2079, 2080, 2082, 2083, 2085, 2087, 2091, 2093, 2094, 2095, 2098, 2099, 2100, 2102, 2103, 2104, 2106], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 29, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 69, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 149, 153, 253, 257, 322, 334, 457, 485, 486, 487, 512, 514, 544, 613, 616, 679, 686, 728, 740, 741, 742, 747, 756, 757, 759, 767, 768, 771, 772, 773, 784, 790, 791, 792, 793, 796, 798, 813, 819, 822, 823, 825, 836, 841, 854, 858, 859, 861, 862, 863, 879, 880, 889, 890, 891, 893, 895, 896, 898, 899, 900, 903, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 924, 925, 928, 931, 942, 959, 972, 975, 981, 987, 994, 1005, 1007, 1017, 1019, 1021, 1028, 1029, 1039, 1047, 1049, 1053, 1055, 1057, 1061, 1062, 1088, 1105, 1106, 1109, 1110, 1123, 1125, 1126, 1127, 1128, 1141, 1144, 1157, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1181, 1185, 1191, 1193, 1194, 1203, 1204, 1208, 1209, 1219, 1222, 1227, 1228, 1256, 1262, 1263, 1265, 1266, 1268, 1269, 1271, 1272, 1276, 1277, 1279, 1281, 1282, 1287, 1290, 1297, 1305, 1308, 1312, 1313, 1318, 1321, 1324, 1325, 1329, 1335, 1337, 1354, 1355, 1357, 1367, 1377, 1378, 1412, 1414, 1415, 1416, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1455, 1456, 1460, 1461, 1462, 1463, 1466, 1467, 1470, 1475, 1476, 1477, 1479, 1485, 1487, 1488, 1489, 1492, 1493, 1494, 1505, 1509, 1510, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1530, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1547, 1548, 1551, 1556, 1559, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1572, 1583, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1620, 1621, 1636, 1650, 1651, 1652, 1670, 1677, 1696, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1711, 1712, 1714, 1729, 1750, 1751, 1757, 1762, 1764, 1768, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1798, 1799, 1801, 1805, 1807, 1816, 1820, 1828, 1832, 1842, 1848, 1851, 1863, 1865, 1867, 1892, 1895, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1914, 1915, 1916, 1920, 1935, 1939, 1942, 1944, 1952, 1953, 1956, 1958, 1960, 1964, 1965, 1969, 1974, 1981, 1982, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2013, 2015, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2025, 2026, 2027, 2028, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2065, 2067, 2068, 2069, 2072, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2085, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2095, 2096, 2097, 2098, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2109], "lambda": [1, 12, 22, 29, 33, 55, 58, 60, 61, 63, 66, 71, 72, 75, 257, 486, 487, 924, 925, 960, 1164, 1169, 1173, 1174, 1181, 1301, 1302, 1303, 1304, 1337, 1474, 1557, 1569, 1666, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1789, 1795, 1797, 1800, 1894, 1969, 2010, 2034, 2039, 2040, 2058, 2059, 2067, 2079, 2094, 2104], "captur": [1, 11, 12, 15, 49, 50, 61, 63, 66, 71, 72, 87, 679, 972, 986, 1005, 1007, 1039, 1045, 1050, 1268, 1378, 1773, 1774, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1974, 2006, 2010, 2015, 2039, 2040, 2044, 2053, 2054, 2056, 2059, 2062, 2083, 2084, 2085, 2088, 2090, 2092, 2094, 2101, 2103], "f": [1, 10, 23, 27, 32, 33, 35, 36, 41, 42, 49, 50, 53, 54, 57, 58, 60, 61, 63, 64, 172, 257, 334, 376, 607, 898, 899, 939, 994, 1123, 1125, 1132, 1141, 1163, 1164, 1166, 1167, 1168, 1169, 1173, 1174, 1219, 1265, 1273, 1276, 1277, 1337, 1484, 1486, 1487, 1488, 1490, 1519, 1569, 1579, 1592, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1616, 1617, 1620, 1621, 1627, 1661, 1663, 1664, 1677, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1851, 1926, 1969, 2006, 2008, 2009, 2013, 2025, 2026, 2034, 2037, 2039, 2041, 2043, 2044, 2046, 2052, 2054, 2055, 2056, 2059, 2060, 2067, 2072, 2077, 2079, 2089, 2090, 2094, 2102, 2104], "three": [1, 2, 6, 9, 27, 31, 52, 54, 57, 61, 86, 888, 1103, 1105, 1219, 1228, 1309, 1312, 1313, 1314, 1329, 1357, 1430, 1448, 1451, 1488, 1491, 1514, 1677, 1723, 1764, 1795, 1863, 2009, 2034, 2037, 2038, 2039, 2056, 2059, 2060, 2062, 2067, 2069, 2072, 2077, 2091, 2100], "anoth": [1, 5, 7, 12, 22, 23, 27, 29, 33, 34, 35, 47, 49, 52, 61, 485, 982, 1005, 1007, 1008, 1010, 1156, 1179, 1181, 1187, 1201, 1202, 1275, 1301, 1302, 1305, 1329, 1461, 1462, 1520, 1529, 1699, 1716, 1717, 1724, 1859, 1975, 2006, 2008, 2009, 2015, 2017, 2033, 2034, 2036, 2037, 2039, 2042, 2046, 2048, 2050, 2052, 2059, 2060, 2068, 2069, 2072, 2078, 2081, 2088, 2089, 2091, 2094, 2096, 2099, 2102, 2105], "constant": [1, 12, 22, 49, 50, 61, 63, 64, 68, 69, 72, 74, 743, 774, 820, 821, 975, 1088, 1145, 1146, 1147, 1188, 1204, 1262, 1265, 1269, 1281, 1313, 1338, 1443, 1444, 1445, 1462, 1465, 1472, 1528, 1551, 1568, 1571, 1622, 1625, 1664, 1724, 1771, 1787, 1792, 1795, 1942, 2007, 2009, 2033, 2039, 2046, 2050, 2056, 2058, 2072, 2091, 2093, 2094, 2096, 2103], "boolean": [1, 12, 14, 33, 44, 61, 63, 71, 72, 399, 401, 889, 905, 906, 915, 944, 946, 947, 949, 978, 986, 1007, 1008, 1010, 1110, 1181, 1188, 1195, 1208, 1222, 1254, 1255, 1256, 1257, 1258, 1261, 1290, 1338, 1354, 1359, 1416, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1519, 1534, 1559, 1563, 1677, 1708, 1726, 1729, 1819, 1914, 1915, 1939, 1964, 1965, 1974, 1975, 2008, 2010, 2037, 2039, 2074, 2075, 2077, 2078, 2079, 2081, 2091, 2094], "flag": [1, 2, 5, 14, 27, 28, 34, 45, 48, 49, 52, 55, 57, 61, 734, 873, 908, 910, 915, 916, 917, 941, 950, 963, 964, 965, 972, 979, 980, 1035, 1156, 1162, 1164, 1165, 1167, 1168, 1169, 1173, 1174, 1223, 1224, 1246, 1253, 1337, 1357, 1525, 1583, 1636, 1637, 1709, 1726, 1729, 1759, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1863, 1869, 1895, 1905, 1944, 1957, 1969, 2005, 2006, 2009, 2024, 2034, 2037, 2039, 2049, 2050, 2056, 2059, 2062, 2077, 2078, 2094, 2095, 2102, 2103], "inform": [1, 2, 3, 4, 5, 7, 8, 9, 17, 18, 19, 21, 22, 23, 27, 28, 29, 31, 32, 35, 36, 37, 40, 44, 45, 49, 50, 52, 54, 59, 61, 78, 190, 207, 254, 312, 320, 486, 487, 497, 514, 516, 617, 679, 734, 910, 915, 916, 919, 920, 924, 925, 943, 1109, 1140, 1142, 1163, 1195, 1203, 1262, 1265, 1282, 1295, 1302, 1311, 1446, 1447, 1448, 1449, 1450, 1451, 1479, 1489, 1515, 1516, 1517, 1519, 1525, 1534, 1535, 1547, 1563, 1565, 1567, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1617, 1636, 1677, 1696, 1697, 1698, 1708, 1709, 1750, 1762, 1771, 1786, 1818, 1845, 1863, 1869, 1895, 1957, 2006, 2009, 2013, 2015, 2016, 2027, 2028, 2034, 2036, 2037, 2038, 2039, 2045, 2046, 2049, 2054, 2056, 2059, 2061, 2062, 2075, 2077, 2078, 2079, 2083, 2087, 2090, 2091, 2093, 2094, 2097, 2101, 2103, 2105, 2107], "between": [1, 2, 3, 7, 11, 17, 18, 23, 27, 33, 34, 44, 45, 47, 49, 50, 52, 59, 60, 61, 195, 485, 512, 582, 583, 584, 586, 587, 606, 616, 688, 689, 690, 694, 695, 759, 771, 772, 773, 801, 857, 865, 884, 893, 898, 909, 911, 912, 913, 919, 920, 960, 972, 994, 1007, 1014, 1016, 1063, 1068, 1082, 1083, 1088, 1105, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1156, 1157, 1179, 1180, 1191, 1219, 1226, 1262, 1265, 1277, 1301, 1302, 1324, 1329, 1412, 1431, 1432, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1457, 1458, 1459, 1463, 1465, 1470, 1479, 1485, 1495, 1496, 1497, 1498, 1499, 1500, 1510, 1512, 1513, 1514, 1519, 1522, 1523, 1524, 1528, 1548, 1551, 1552, 1553, 1568, 1569, 1571, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1624, 1650, 1651, 1652, 1666, 1683, 1693, 1709, 1716, 1717, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1794, 1795, 1801, 1803, 1812, 1820, 1824, 1825, 1830, 1831, 1835, 1860, 1913, 1914, 1915, 1916, 1920, 1941, 1942, 1964, 1965, 2006, 2008, 2009, 2010, 2016, 2024, 2027, 2033, 2034, 2036, 2037, 2038, 2043, 2044, 2046, 2048, 2050, 2051, 2053, 2054, 2056, 2058, 2060, 2062, 2063, 2067, 2069, 2072, 2074, 2075, 2077, 2082, 2088, 2091, 2101, 2103], "well": [1, 3, 5, 7, 9, 14, 23, 27, 44, 49, 52, 57, 58, 61, 62, 616, 790, 821, 824, 861, 1047, 1167, 1168, 1265, 1269, 1276, 1281, 1301, 1302, 1303, 1305, 1311, 1324, 1329, 1376, 1433, 1434, 1435, 1454, 1489, 1519, 1559, 1646, 1647, 1648, 1709, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1819, 1953, 2006, 2009, 2016, 2025, 2027, 2033, 2034, 2037, 2039, 2040, 2042, 2043, 2046, 2048, 2050, 2054, 2056, 2059, 2062, 2065, 2067, 2069, 2072, 2076, 2077, 2081, 2085, 2089, 2091, 2093, 2094, 2095, 2099, 2103], "relat": [1, 6, 7, 9, 22, 27, 35, 49, 50, 51, 52, 57, 63, 64, 69, 72, 78, 679, 979, 1179, 1219, 1305, 1465, 1551, 1571, 1709, 1809, 1958, 2027, 2034, 2051, 2058, 2059, 2067, 2072, 2073, 2079, 2085, 2094, 2104], "mechan": [1, 8, 27, 38, 42, 44, 50, 61, 879, 915, 916, 1109, 1265, 1519, 1580, 1677, 1762, 1935, 2005, 2024, 2027, 2039, 2042, 2045, 2046, 2065, 2067, 2068, 2088, 2091], "confus": [1, 8, 63, 1265, 1519, 2034, 2037, 2059, 2072, 2095], "spars": [1, 11, 189, 190, 207, 217, 322, 327, 341, 342, 434, 542, 543, 544, 545, 580, 582, 583, 584, 585, 586, 587, 613, 688, 744, 745, 919, 920, 1079, 1206, 1230, 1250, 1338, 1360, 1370, 1415, 1461, 1462, 1553, 1616, 1617, 1642, 1790, 1809, 1857, 1890, 1895, 1902, 1903, 1904, 1905, 1906, 1907, 1912, 1921, 1941, 1957, 1958, 2005, 2007, 2011, 2016, 2032, 2049, 2050, 2057, 2064, 2075, 2076, 2079, 2090, 2098], "param": [1, 2, 11, 29, 31, 33, 36, 44, 52, 54, 56, 59, 61, 487, 763, 794, 1162, 1172, 1198, 1265, 1284, 1519, 1525, 1529, 1530, 1707, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1803, 2007, 2019, 2032, 2033, 2037, 2038, 2058, 2104], "receiv": [1, 7, 9, 22, 27, 31, 33, 50, 57, 60, 1061, 1265, 1519, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1804, 2009, 2021, 2024, 2033, 2034, 2048, 2060, 2067, 2068, 2069, 2072, 2090, 2103, 2105], "dure": [1, 5, 14, 18, 23, 27, 29, 35, 36, 38, 44, 49, 52, 60, 61, 63, 70, 80, 82, 83, 334, 487, 502, 503, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 792, 826, 889, 890, 900, 903, 905, 906, 1005, 1039, 1049, 1050, 1062, 1063, 1083, 1276, 1278, 1279, 1281, 1337, 1427, 1433, 1434, 1435, 1455, 1456, 1461, 1462, 1481, 1482, 1483, 1538, 1559, 1565, 1567, 1610, 1616, 1617, 1699, 1709, 1711, 1712, 1757, 1771, 1804, 1901, 1946, 1948, 2008, 2013, 2015, 2016, 2019, 2021, 2025, 2027, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2045, 2046, 2049, 2050, 2054, 2056, 2059, 2061, 2062, 2065, 2067, 2069, 2079, 2088, 2089, 2091, 2094, 2100, 2101, 2102, 2103, 2105], "accumul": [1, 2, 52, 149, 289, 312, 317, 318, 320, 470, 487, 685, 893, 914, 1181, 1335, 1709, 1774, 1775, 1957, 2006, 2007, 2021, 2034, 2037, 2038, 2041, 2049, 2058, 2063, 2067, 2068, 2072, 2090, 2091, 2094, 2098, 2103], "initi": [1, 2, 3, 4, 8, 17, 18, 19, 22, 23, 29, 31, 32, 35, 37, 44, 45, 48, 49, 52, 79, 87, 495, 498, 579, 711, 712, 713, 714, 715, 716, 719, 729, 730, 731, 732, 744, 745, 755, 759, 763, 861, 862, 879, 928, 982, 1007, 1015, 1036, 1041, 1042, 1045, 1046, 1072, 1106, 1107, 1108, 1212, 1241, 1263, 1265, 1278, 1279, 1337, 1338, 1355, 1400, 1433, 1434, 1435, 1436, 1438, 1449, 1450, 1451, 1455, 1461, 1462, 1470, 1471, 1473, 1481, 1482, 1483, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1519, 1527, 1534, 1535, 1536, 1537, 1559, 1569, 1616, 1699, 1708, 1709, 1711, 1712, 1723, 1726, 1729, 1757, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1859, 1860, 1861, 1902, 1903, 1904, 1905, 1906, 1907, 1935, 1974, 1986, 1988, 1989, 1991, 1994, 2005, 2007, 2008, 2009, 2017, 2021, 2027, 2032, 2034, 2037, 2038, 2039, 2042, 2045, 2052, 2054, 2056, 2058, 2059, 2060, 2062, 2066, 2067, 2068, 2088, 2091, 2101, 2102, 2109], "memori": [1, 2, 3, 5, 11, 19, 23, 26, 29, 31, 33, 34, 50, 52, 56, 61, 149, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 232, 239, 253, 266, 296, 324, 330, 336, 338, 339, 392, 444, 445, 446, 447, 448, 457, 462, 485, 498, 499, 523, 524, 579, 602, 616, 733, 762, 878, 880, 893, 900, 903, 905, 919, 920, 926, 954, 969, 972, 1005, 1006, 1009, 1012, 1013, 1015, 1029, 1030, 1039, 1040, 1043, 1047, 1049, 1050, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1069, 1070, 1071, 1075, 1105, 1106, 1107, 1108, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1168, 1170, 1174, 1265, 1283, 1311, 1337, 1374, 1376, 1377, 1385, 1462, 1489, 1490, 1519, 1563, 1564, 1565, 1567, 1677, 1695, 1709, 1716, 1717, 1723, 1750, 1762, 1769, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1828, 1829, 1831, 1832, 1833, 1834, 1859, 1935, 1957, 1969, 1982, 2003, 2005, 2006, 2017, 2019, 2024, 2026, 2027, 2028, 2034, 2039, 2042, 2048, 2054, 2056, 2060, 2061, 2062, 2067, 2072, 2074, 2075, 2076, 2078, 2079, 2088, 2093, 2094, 2096, 2100, 2102], "overlap": [1, 22, 23, 27, 31, 52, 61, 485, 679, 878, 919, 920, 1108, 1163, 1262, 1465, 1571, 1709, 1916, 1957, 2037, 2038, 2042, 2075, 2090, 2094, 2102], "dens": [1, 31, 217, 544, 545, 582, 583, 584, 585, 586, 587, 941, 950, 1223, 1224, 1285, 1338, 1790, 1890, 1893, 1897, 1898, 1901, 1902, 1903, 1904, 1906, 1907, 1912, 1921, 1957, 2027, 2050, 2072, 2075, 2090], "stride": [1, 11, 50, 137, 253, 338, 444, 445, 446, 447, 448, 498, 519, 543, 580, 582, 583, 584, 586, 587, 616, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 767, 768, 771, 772, 773, 781, 782, 865, 878, 941, 950, 1106, 1108, 1118, 1123, 1141, 1157, 1160, 1161, 1181, 1194, 1223, 1224, 1230, 1265, 1275, 1279, 1285, 1336, 1352, 1370, 1428, 1429, 1430, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1486, 1487, 1488, 1495, 1496, 1497, 1498, 1499, 1500, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1531, 1571, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1619, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1695, 1709, 1768, 1824, 1825, 1828, 1830, 1831, 1832, 1834, 1835, 1842, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1894, 1897, 1941, 1946, 1948, 1967, 2002, 2007, 2010, 2013, 2025, 2027, 2056, 2057, 2067, 2072, 2074, 2075, 2077, 2078, 2079, 2090, 2091, 2092, 2093, 2094, 2098, 2103], "otherwis": [1, 2, 3, 5, 7, 9, 11, 14, 22, 27, 28, 34, 37, 49, 52, 53, 57, 61, 87, 208, 320, 327, 331, 335, 337, 341, 342, 494, 503, 559, 579, 580, 582, 602, 616, 679, 685, 686, 687, 688, 689, 692, 694, 695, 696, 698, 734, 759, 767, 768, 783, 793, 816, 819, 820, 840, 861, 862, 865, 892, 898, 905, 906, 910, 919, 939, 940, 956, 1045, 1105, 1111, 1144, 1156, 1180, 1181, 1194, 1197, 1256, 1262, 1265, 1268, 1272, 1278, 1287, 1311, 1326, 1335, 1337, 1338, 1353, 1358, 1363, 1365, 1366, 1368, 1370, 1371, 1410, 1413, 1429, 1430, 1452, 1454, 1457, 1458, 1459, 1463, 1470, 1474, 1475, 1476, 1477, 1479, 1489, 1505, 1519, 1523, 1524, 1525, 1526, 1527, 1529, 1535, 1536, 1538, 1551, 1557, 1559, 1562, 1563, 1565, 1567, 1568, 1569, 1593, 1594, 1627, 1629, 1630, 1634, 1670, 1681, 1709, 1723, 1728, 1729, 1750, 1754, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 1807, 1809, 1817, 1819, 1826, 1835, 1842, 1855, 1863, 1870, 1914, 1915, 1916, 1919, 1952, 1953, 1954, 1964, 1965, 1972, 2004, 2006, 2008, 2009, 2013, 2016, 2019, 2025, 2027, 2033, 2039, 2040, 2048, 2054, 2055, 2056, 2062, 2063, 2065, 2066, 2067, 2069, 2073, 2074, 2075, 2076, 2077, 2079, 2085, 2104], "rowmajor": [1, 1709], "contigu": [1, 11, 23, 29, 330, 498, 519, 616, 1464, 1522, 1666, 1709, 1716, 1717, 1836, 1842, 1920, 2007, 2026, 2027, 2057, 2064, 2072, 2074, 2076, 2091], "create_graph": [1, 149, 487, 893, 908, 909, 910, 911, 912, 913, 914, 2007, 2033, 2039], "preserv": [1, 5, 12, 22, 33, 49, 52, 61, 87, 498, 778, 784, 854, 876, 879, 1146, 1147, 1163, 1194, 1265, 1269, 1276, 1519, 1520, 1529, 1572, 1636, 1696, 1772, 1851, 1855, 1892, 1935, 1962, 2006, 2019, 2025, 2027, 2032, 2037, 2040, 2050, 2053, 2054, 2056, 2067, 2072, 2075, 2088, 2093], "replac": [1, 14, 22, 23, 27, 29, 43, 45, 49, 52, 54, 55, 56, 57, 58, 61, 83, 84, 86, 118, 420, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 746, 813, 838, 858, 963, 1050, 1105, 1162, 1163, 1181, 1270, 1273, 1283, 1355, 1356, 1405, 1409, 1551, 1562, 1699, 1725, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1759, 1761, 1819, 1916, 1920, 1944, 2006, 2007, 2009, 2019, 2037, 2039, 2040, 2043, 2045, 2048, 2052, 2056, 2057, 2059, 2062, 2079, 2089, 2090, 2094, 2096, 2102], "preexist": [1, 2061, 2090, 2093], "behavior": [1, 2, 7, 11, 14, 19, 21, 23, 27, 28, 29, 31, 33, 34, 37, 42, 45, 49, 50, 52, 56, 57, 60, 61, 85, 253, 318, 470, 498, 512, 543, 616, 686, 784, 792, 825, 878, 892, 905, 906, 948, 954, 956, 958, 971, 1004, 1100, 1105, 1106, 1107, 1108, 1150, 1158, 1159, 1163, 1195, 1265, 1276, 1279, 1281, 1311, 1318, 1322, 1335, 1336, 1337, 1352, 1360, 1367, 1455, 1458, 1479, 1489, 1519, 1535, 1559, 1572, 1590, 1625, 1695, 1696, 1699, 1700, 1709, 1710, 1761, 1763, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1813, 1819, 1835, 1842, 1883, 1920, 1942, 1957, 2004, 2006, 2010, 2011, 2013, 2015, 2017, 2025, 2027, 2029, 2035, 2037, 2039, 2040, 2049, 2050, 2051, 2056, 2058, 2059, 2060, 2063, 2064, 2067, 2073, 2076, 2090, 2091, 2093, 2095, 2106], "let": [1, 7, 8, 22, 23, 33, 45, 57, 61, 485, 495, 964, 965, 967, 1181, 1219, 1265, 1285, 1295, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1315, 1317, 1324, 1326, 1328, 1329, 1519, 1709, 1723, 1935, 2013, 2025, 2026, 2034, 2037, 2038, 2039, 2040, 2042, 2046, 2048, 2049, 2050, 2051, 2052, 2059, 2068, 2069, 2072, 2077, 2088, 2089, 2091, 2093, 2094, 2095, 2096, 2097, 2102, 2103, 2106], "first": [1, 4, 5, 7, 9, 14, 18, 22, 23, 27, 28, 29, 31, 32, 33, 35, 37, 41, 44, 45, 49, 50, 52, 58, 61, 63, 72, 75, 215, 253, 285, 289, 588, 609, 685, 688, 690, 693, 759, 792, 793, 813, 854, 857, 859, 874, 875, 884, 889, 890, 891, 892, 894, 905, 906, 914, 919, 928, 937, 939, 940, 944, 945, 947, 948, 949, 952, 954, 956, 970, 1004, 1007, 1018, 1093, 1095, 1096, 1097, 1102, 1105, 1110, 1123, 1125, 1144, 1159, 1164, 1165, 1167, 1168, 1169, 1173, 1174, 1194, 1208, 1219, 1222, 1230, 1231, 1232, 1242, 1254, 1263, 1273, 1278, 1279, 1285, 1290, 1295, 1298, 1305, 1321, 1324, 1331, 1332, 1334, 1337, 1338, 1354, 1360, 1363, 1366, 1367, 1368, 1370, 1388, 1405, 1411, 1416, 1419, 1423, 1429, 1430, 1436, 1447, 1448, 1450, 1451, 1461, 1462, 1464, 1469, 1470, 1484, 1487, 1488, 1489, 1504, 1511, 1513, 1514, 1535, 1548, 1607, 1695, 1699, 1709, 1716, 1717, 1726, 1727, 1729, 1740, 1750, 1756, 1776, 1777, 1778, 1779, 1780, 1786, 1789, 1790, 1794, 1798, 1801, 1803, 1809, 1819, 1820, 1846, 1847, 1855, 1863, 1882, 1897, 1900, 1905, 1936, 1937, 1941, 1946, 1948, 1954, 1963, 1966, 1969, 1971, 1974, 1988, 2004, 2006, 2008, 2009, 2013, 2016, 2020, 2024, 2025, 2027, 2033, 2034, 2037, 2039, 2041, 2042, 2043, 2046, 2048, 2049, 2050, 2051, 2052, 2054, 2056, 2058, 2060, 2061, 2062, 2067, 2068, 2069, 2071, 2072, 2073, 2077, 2082, 2085, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2101, 2102, 2103, 2104], "accord": [1, 9, 32, 35, 49, 796, 861, 862, 880, 942, 954, 1103, 1229, 1326, 1359, 1405, 1423, 1462, 1531, 1699, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1795, 1801, 1820, 1883, 1908, 1936, 1970, 2009, 2021, 2026, 2027, 2046, 2050, 2052, 2059, 2069, 2079], "retain": [1, 9, 27, 692, 694, 695, 698, 874, 875, 880, 1269, 1287, 1318, 1322, 1335, 1353, 1363, 1365, 1366, 1368, 1371, 1410, 1411, 1412, 1413, 1439, 1764, 1817, 1820, 1851, 1914, 1915, 1919, 1945, 1946, 1947, 1948, 1964, 1965, 2024, 2048, 2072], "over": [1, 9, 11, 12, 22, 23, 27, 28, 33, 35, 42, 45, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 66, 71, 72, 75, 480, 679, 696, 737, 738, 739, 740, 741, 742, 765, 766, 771, 772, 773, 781, 782, 892, 905, 906, 928, 932, 959, 1016, 1061, 1063, 1068, 1083, 1084, 1085, 1086, 1087, 1105, 1162, 1166, 1168, 1172, 1174, 1179, 1219, 1227, 1265, 1281, 1298, 1318, 1322, 1334, 1335, 1337, 1345, 1365, 1367, 1413, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1462, 1465, 1466, 1467, 1473, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1507, 1510, 1511, 1512, 1513, 1514, 1519, 1522, 1523, 1524, 1526, 1533, 1534, 1548, 1551, 1552, 1554, 1559, 1568, 1571, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1620, 1621, 1637, 1643, 1646, 1647, 1648, 1650, 1651, 1652, 1661, 1662, 1669, 1677, 1703, 1708, 1714, 1725, 1761, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1824, 1825, 1840, 1899, 1901, 1914, 1915, 1916, 1919, 1937, 1952, 1964, 1965, 1969, 2009, 2021, 2024, 2025, 2026, 2033, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2046, 2048, 2049, 2054, 2058, 2062, 2067, 2068, 2072, 2080, 2081, 2088, 2090, 2091, 2092, 2093, 2094, 2103, 2105, 2106], "time": [1, 3, 4, 7, 8, 9, 14, 22, 23, 27, 28, 29, 31, 33, 34, 35, 41, 44, 45, 47, 49, 50, 52, 57, 60, 61, 63, 73, 74, 87, 289, 312, 485, 486, 492, 616, 679, 684, 685, 686, 687, 688, 689, 690, 693, 744, 745, 755, 759, 763, 767, 768, 798, 800, 823, 841, 877, 914, 924, 925, 926, 927, 933, 935, 940, 952, 960, 962, 972, 987, 994, 1007, 1008, 1010, 1050, 1063, 1083, 1086, 1097, 1119, 1120, 1126, 1127, 1128, 1134, 1145, 1146, 1147, 1155, 1159, 1168, 1169, 1170, 1173, 1174, 1178, 1185, 1195, 1254, 1262, 1265, 1273, 1278, 1281, 1282, 1286, 1291, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1310, 1311, 1312, 1315, 1317, 1321, 1324, 1326, 1328, 1329, 1337, 1338, 1360, 1370, 1378, 1404, 1405, 1407, 1417, 1425, 1426, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1462, 1465, 1466, 1467, 1470, 1481, 1482, 1483, 1489, 1491, 1505, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1531, 1532, 1534, 1535, 1556, 1559, 1571, 1572, 1573, 1574, 1590, 1593, 1594, 1620, 1621, 1666, 1667, 1668, 1685, 1701, 1702, 1703, 1706, 1707, 1708, 1709, 1723, 1724, 1727, 1729, 1763, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1797, 1807, 1808, 1819, 1841, 1847, 1897, 1911, 1916, 1917, 1937, 1969, 1974, 1975, 1988, 2005, 2008, 2009, 2010, 2013, 2015, 2017, 2019, 2024, 2032, 2034, 2036, 2038, 2039, 2041, 2042, 2043, 2045, 2046, 2048, 2050, 2051, 2052, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2063, 2067, 2068, 2069, 2072, 2077, 2083, 2084, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2099, 2100, 2102, 2103, 2105], "4": [1, 3, 5, 11, 12, 18, 20, 22, 23, 27, 29, 31, 32, 33, 34, 35, 42, 44, 49, 50, 57, 61, 63, 64, 65, 68, 69, 71, 72, 74, 190, 207, 241, 253, 288, 310, 312, 314, 316, 320, 400, 401, 444, 445, 470, 482, 486, 492, 495, 498, 512, 516, 522, 536, 543, 555, 557, 559, 583, 584, 606, 616, 682, 683, 684, 685, 688, 690, 691, 692, 694, 695, 696, 698, 738, 740, 741, 742, 745, 747, 756, 759, 772, 773, 823, 865, 874, 875, 876, 880, 881, 882, 883, 884, 885, 887, 888, 900, 903, 905, 906, 908, 911, 912, 913, 940, 943, 946, 950, 951, 952, 956, 958, 961, 962, 965, 966, 967, 970, 977, 983, 986, 989, 990, 991, 992, 1004, 1085, 1088, 1095, 1097, 1099, 1100, 1103, 1104, 1105, 1108, 1110, 1120, 1121, 1123, 1125, 1133, 1139, 1141, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1153, 1155, 1156, 1159, 1162, 1164, 1172, 1173, 1174, 1181, 1206, 1207, 1208, 1219, 1222, 1226, 1227, 1228, 1229, 1231, 1232, 1236, 1240, 1242, 1254, 1256, 1262, 1271, 1272, 1277, 1279, 1286, 1287, 1288, 1289, 1290, 1291, 1295, 1297, 1298, 1304, 1306, 1308, 1309, 1310, 1313, 1315, 1318, 1320, 1322, 1324, 1326, 1328, 1331, 1332, 1333, 1335, 1336, 1339, 1341, 1342, 1347, 1349, 1350, 1352, 1354, 1359, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1388, 1404, 1405, 1413, 1414, 1415, 1416, 1423, 1428, 1439, 1440, 1441, 1443, 1444, 1447, 1448, 1450, 1451, 1459, 1461, 1462, 1463, 1465, 1469, 1470, 1489, 1490, 1515, 1516, 1522, 1524, 1526, 1531, 1532, 1535, 1541, 1542, 1543, 1544, 1545, 1559, 1571, 1572, 1573, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1590, 1592, 1601, 1604, 1616, 1617, 1625, 1636, 1661, 1664, 1667, 1668, 1695, 1696, 1697, 1698, 1699, 1709, 1716, 1717, 1723, 1729, 1740, 1752, 1753, 1755, 1757, 1763, 1764, 1765, 1767, 1769, 1773, 1786, 1791, 1792, 1798, 1802, 1803, 1804, 1808, 1812, 1813, 1816, 1817, 1819, 1820, 1822, 1826, 1828, 1830, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1842, 1846, 1847, 1848, 1850, 1851, 1855, 1867, 1874, 1876, 1877, 1882, 1883, 1885, 1887, 1892, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1916, 1919, 1922, 1923, 1931, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1942, 1945, 1946, 1947, 1948, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1963, 1966, 1967, 1968, 1969, 1970, 1971, 2003, 2006, 2007, 2008, 2009, 2010, 2013, 2016, 2024, 2026, 2027, 2032, 2034, 2035, 2037, 2038, 2039, 2042, 2046, 2048, 2051, 2052, 2054, 2056, 2059, 2060, 2062, 2064, 2067, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2088, 2090, 2091, 2092, 2094, 2098, 2101, 2103], "fact": [1, 3, 8, 52, 494, 941, 950, 988, 1191, 1219, 1223, 1224, 1301, 1302, 1329, 2006, 2039, 2042, 2043, 2056, 2068, 2072, 2088, 2091, 2093, 2097], "reset": [1, 27, 29, 759, 819, 824, 893, 1005, 1053, 1055, 1069, 1070, 1071, 1265, 1470, 1519, 1534, 1536, 1708, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1809, 1826, 1921, 2021, 2056, 2066], "phase": [1, 23, 792, 1301, 1302, 1801, 1920, 2007, 2052, 2094, 2103], "iter": [1, 2, 3, 7, 23, 27, 28, 29, 31, 33, 45, 48, 49, 52, 61, 63, 68, 928, 939, 977, 1017, 1018, 1019, 1020, 1021, 1050, 1053, 1055, 1077, 1265, 1338, 1519, 1520, 1521, 1529, 1530, 1709, 1710, 1713, 1714, 1715, 1722, 1724, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1758, 1760, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1793, 1794, 1795, 1798, 1809, 1878, 1921, 1998, 2007, 2009, 2010, 2013, 2024, 2026, 2033, 2034, 2035, 2037, 2038, 2039, 2042, 2043, 2046, 2058, 2061, 2066, 2071, 2077, 2088, 2091, 2094, 2102, 2103, 2104], "recreat": [1, 2034, 2102], "valid": [1, 24, 26, 27, 29, 33, 42, 44, 49, 50, 61, 83, 87, 746, 747, 756, 790, 963, 975, 981, 1047, 1105, 1181, 1191, 1263, 1265, 1266, 1287, 1301, 1302, 1311, 1312, 1313, 1324, 1329, 1360, 1446, 1447, 1448, 1600, 1601, 1602, 1625, 1699, 1735, 1740, 1744, 1770, 1771, 1791, 1792, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1819, 2006, 2007, 2008, 2009, 2013, 2026, 2027, 2034, 2037, 2039, 2044, 2050, 2056, 2058, 2061, 2067, 2068, 2090, 2091, 2092, 2099, 2103], "altern": [1, 9, 22, 27, 61, 679, 813, 1166, 1167, 1228, 1273, 1337, 1548, 1565, 1567, 1644, 1709, 1769, 1790, 1861, 1862, 1957, 2003, 2004, 2010, 2034, 2044, 2046, 2049, 2050, 2052, 2078, 2094, 2101], "assign": [1, 7, 9, 10, 22, 27, 35, 44, 45, 57, 59, 61, 414, 679, 837, 838, 839, 935, 1263, 1265, 1266, 1423, 1454, 1519, 1526, 1529, 1530, 1710, 1729, 2006, 2010, 2013, 2033, 2039, 2040, 2041, 2042, 2056, 2062, 2068, 2069, 2076, 2077], "never": [1, 5, 7, 23, 27, 44, 45, 49, 50, 220, 221, 795, 879, 960, 972, 1262, 1312, 1313, 1324, 1337, 1709, 1750, 2034, 2037, 2039, 2059, 2060, 2067, 2075, 2079, 2090], "long": [1, 7, 9, 22, 44, 49, 60, 733, 748, 750, 751, 752, 753, 755, 762, 780, 977, 1163, 1194, 1241, 1366, 1411, 1438, 1454, 1462, 1489, 1490, 1526, 1609, 1770, 1818, 1932, 1936, 1946, 1948, 1953, 2005, 2009, 2016, 2024, 2025, 2026, 2034, 2035, 2037, 2039, 2041, 2048, 2050, 2056, 2059, 2061, 2066, 2074, 2075, 2077, 2078, 2088, 2091, 2094, 2098, 2101, 2103], "indic": [1, 2, 3, 12, 22, 23, 27, 28, 29, 32, 33, 44, 49, 50, 79, 82, 83, 190, 207, 312, 314, 316, 317, 318, 320, 470, 512, 514, 516, 543, 571, 572, 582, 613, 694, 695, 734, 744, 745, 798, 823, 874, 875, 876, 877, 878, 900, 902, 905, 919, 920, 956, 963, 964, 965, 977, 978, 979, 980, 986, 1000, 1005, 1007, 1008, 1010, 1044, 1050, 1084, 1085, 1108, 1164, 1165, 1167, 1168, 1169, 1173, 1174, 1206, 1219, 1240, 1263, 1265, 1270, 1279, 1282, 1283, 1287, 1296, 1307, 1309, 1320, 1323, 1337, 1345, 1353, 1355, 1357, 1363, 1366, 1368, 1371, 1378, 1405, 1411, 1415, 1423, 1424, 1425, 1426, 1454, 1461, 1462, 1466, 1467, 1513, 1514, 1515, 1516, 1517, 1522, 1524, 1525, 1587, 1588, 1589, 1608, 1616, 1617, 1620, 1621, 1637, 1653, 1654, 1655, 1663, 1677, 1692, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1763, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1799, 1801, 1820, 1855, 1892, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1931, 1932, 1936, 1939, 1945, 1946, 1947, 1948, 1953, 1954, 1955, 1957, 1958, 1960, 1969, 1972, 1974, 1975, 1990, 2006, 2007, 2009, 2013, 2025, 2026, 2039, 2048, 2051, 2056, 2057, 2067, 2072, 2076, 2077, 2079, 2095, 2098, 2103], "hard": [1, 7, 8, 27, 45, 49, 974, 1105, 1338, 1474, 1627, 1628, 2006, 2007, 2008, 2034, 2042, 2056, 2059, 2094, 2095], "matter": [1, 4, 27, 52, 900, 901, 905, 1093, 1105, 1194, 1273, 1276, 1281, 1709, 2027, 2034, 2059], "discourag": [1, 1074, 1078, 1401, 1999, 2034, 2067], "aggress": [1, 52, 1262, 1716, 1717, 2034, 2067, 2094], "buffer": [1, 4, 22, 23, 27, 49, 50, 52, 56, 59, 414, 880, 1018, 1050, 1159, 1162, 1172, 1265, 1273, 1276, 1287, 1337, 1433, 1434, 1435, 1455, 1492, 1493, 1494, 1519, 1559, 1701, 1709, 1711, 1718, 1720, 1726, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1747, 1757, 1759, 1787, 1789, 1851, 1892, 1939, 2008, 2028, 2034, 2038, 2039, 2046, 2051, 2054, 2056, 2060, 2094], "free": [1, 7, 27, 29, 33, 35, 44, 45, 52, 61, 63, 71, 72, 977, 1056, 1061, 1075, 1268, 1281, 1338, 2019, 2032, 2034, 2037, 2039, 2041, 2042, 2048, 2052, 2056, 2072, 2075, 2088, 2090, 2094, 2105], "reus": [1, 27, 61, 485, 1183, 2034, 2037, 2067, 2088, 2090, 2091, 2094, 2098, 2103, 2105], "effici": [1, 2, 3, 8, 11, 22, 32, 33, 52, 53, 58, 149, 759, 893, 900, 902, 905, 914, 962, 1170, 1179, 1209, 1283, 1321, 1338, 1357, 1423, 1457, 1458, 1459, 1462, 1463, 1470, 1525, 1531, 1532, 1535, 1567, 1578, 1583, 1677, 2019, 2027, 2034, 2038, 2039, 2043, 2047, 2048, 2049, 2058, 2060, 2062, 2067, 2068, 2072, 2075, 2076, 2081, 2091, 2106], "few": [1, 7, 8, 23, 29, 35, 1105, 1163, 1462, 1709, 2004, 2009, 2034, 2037, 2039, 2041, 2044, 2049, 2052, 2056, 2058, 2060, 2062, 2065, 2072, 2076, 2078, 2081, 2090, 2091, 2094, 2096, 2097, 2101, 2103], "occas": [1, 7, 2034], "actual": [1, 8, 29, 35, 37, 49, 50, 52, 57, 61, 257, 679, 789, 987, 1123, 1141, 1191, 1277, 1281, 1449, 1450, 1451, 1625, 1709, 1741, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1795, 2004, 2008, 2009, 2017, 2025, 2034, 2037, 2038, 2039, 2042, 2043, 2048, 2050, 2052, 2054, 2062, 2067, 2074, 2079, 2090, 2091, 2093, 2094, 2096], "signific": [1, 3, 29, 1803, 1863, 2034, 2037, 2072, 2096, 2099], "amount": [1, 2, 3, 4, 7, 22, 27, 29, 35, 44, 61, 920, 1029, 1055, 1057, 1061, 1262, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1465, 1507, 1522, 1571, 1608, 1734, 1735, 1737, 1738, 1740, 1742, 1743, 1744, 1745, 1746, 1747, 1982, 2026, 2034, 2036, 2037, 2040, 2041, 2044, 2054, 2067, 2072, 2090, 2097, 2101, 2103, 2105], "unless": [1, 2, 4, 7, 23, 27, 47, 49, 52, 53, 61, 149, 487, 498, 839, 858, 900, 901, 905, 943, 1005, 1039, 1162, 1265, 1309, 1314, 1327, 1337, 1366, 1472, 1519, 1567, 1703, 1740, 1759, 1784, 1790, 1855, 1957, 2009, 2013, 2015, 2027, 2034, 2037, 2042, 2050, 2051, 2056, 2059, 2063, 2090, 2101], "heavi": [1, 27, 2034, 2052, 2093], "pressur": [1, 52, 2034], "might": [1, 2, 3, 4, 9, 14, 15, 18, 27, 29, 31, 32, 33, 44, 49, 57, 60, 61, 84, 86, 149, 485, 543, 893, 1004, 1281, 1282, 1625, 1709, 1710, 1716, 1717, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 2004, 2006, 2021, 2027, 2034, 2036, 2037, 2038, 2039, 2043, 2045, 2050, 2051, 2053, 2056, 2059, 2060, 2062, 2067, 2068, 2069, 2072, 2076, 2078, 2079, 2084, 2088, 2090, 2091, 2093, 2094, 2095, 2096, 2102, 2103], "keep": [1, 3, 5, 7, 22, 23, 29, 31, 32, 35, 44, 46, 49, 50, 52, 63, 485, 1008, 1181, 1337, 1433, 1434, 1435, 1461, 1481, 1482, 1483, 1528, 1559, 1625, 1636, 1709, 1736, 1772, 1840, 1863, 2004, 2005, 2006, 2024, 2026, 2027, 2034, 2037, 2038, 2040, 2041, 2043, 2048, 2054, 2058, 2062, 2067, 2068, 2069, 2090, 2091, 2092, 2093, 2094, 2101, 2105], "track": [1, 32, 35, 46, 49, 50, 63, 78, 79, 80, 85, 334, 915, 926, 1013, 1053, 1055, 1069, 1070, 1071, 1162, 1163, 1181, 1367, 1433, 1434, 1435, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1559, 1709, 1736, 2021, 2024, 2026, 2027, 2034, 2037, 2039, 2040, 2041, 2045, 2046, 2054, 2058, 2060, 2061, 2068, 2069, 2072, 2090, 2091, 2093, 2094, 2100], "appli": [1, 3, 5, 8, 12, 23, 29, 31, 32, 33, 35, 37, 44, 52, 56, 57, 58, 61, 63, 74, 80, 81, 82, 118, 320, 397, 471, 485, 512, 516, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 734, 737, 738, 739, 740, 741, 742, 757, 759, 765, 766, 767, 768, 769, 770, 771, 772, 773, 779, 780, 781, 782, 783, 809, 810, 811, 812, 839, 858, 900, 901, 903, 904, 905, 906, 916, 917, 919, 945, 948, 974, 986, 989, 1093, 1095, 1100, 1109, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1153, 1162, 1163, 1170, 1173, 1174, 1178, 1181, 1191, 1265, 1269, 1315, 1338, 1355, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1460, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1518, 1519, 1522, 1523, 1524, 1525, 1526, 1527, 1533, 1534, 1535, 1538, 1539, 1540, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1573, 1574, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1618, 1620, 1621, 1622, 1623, 1626, 1628, 1629, 1630, 1631, 1635, 1636, 1637, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1656, 1661, 1669, 1670, 1671, 1672, 1674, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1699, 1708, 1709, 1716, 1717, 1723, 1724, 1725, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1750, 1751, 1758, 1759, 1761, 1762, 1764, 1774, 1786, 1790, 1803, 1816, 1821, 1822, 1823, 1824, 1825, 1896, 1897, 1899, 1916, 1953, 1954, 1956, 1969, 2006, 2009, 2013, 2016, 2024, 2026, 2028, 2033, 2034, 2037, 2038, 2039, 2040, 2042, 2043, 2046, 2049, 2056, 2058, 2059, 2060, 2062, 2065, 2068, 2072, 2073, 2087, 2088, 2092, 2094, 2095, 2101, 2102], "save": [1, 5, 7, 11, 15, 23, 27, 29, 31, 49, 52, 495, 836, 889, 890, 900, 903, 905, 906, 1170, 1264, 1265, 1270, 1273, 1281, 1283, 1337, 1519, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1797, 1800, 1804, 2005, 2006, 2007, 2013, 2017, 2020, 2026, 2039, 2040, 2042, 2046, 2048, 2050, 2054, 2057, 2058, 2059, 2061, 2067, 2072, 2077, 2082, 2085, 2088, 2091, 2094, 2096, 2105], "modifi": [1, 18, 22, 23, 27, 28, 29, 31, 52, 61, 63, 259, 486, 487, 790, 837, 838, 839, 900, 901, 903, 904, 905, 906, 924, 925, 926, 974, 987, 988, 1219, 1262, 1265, 1268, 1269, 1285, 1461, 1519, 1563, 1565, 1567, 1616, 1617, 1701, 1702, 1703, 1706, 1707, 1709, 1714, 1715, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 1793, 1801, 1882, 2006, 2009, 2025, 2033, 2037, 2039, 2040, 2046, 2051, 2059, 2060, 2062, 2067, 2073, 2076, 2078, 2083, 2090, 2091, 2092, 2093, 2094, 2099, 2103, 2106], "afterward": [1, 29, 49, 1519, 1699, 1709, 2042, 2072], "onc": [1, 7, 9, 15, 22, 23, 27, 28, 29, 31, 33, 34, 36, 37, 44, 52, 55, 57, 60, 61, 900, 901, 902, 903, 905, 906, 908, 910, 927, 1105, 1265, 1269, 1337, 1455, 1519, 1709, 1727, 1729, 1761, 1799, 1803, 1819, 1865, 1869, 1960, 2006, 2009, 2013, 2019, 2021, 2024, 2033, 2034, 2036, 2037, 2039, 2042, 2043, 2045, 2046, 2058, 2059, 2072, 2077, 2088, 2091, 2092, 2094, 2100], "start": [1, 3, 4, 8, 9, 22, 23, 27, 29, 33, 35, 41, 43, 44, 45, 47, 52, 56, 60, 61, 232, 401, 432, 433, 495, 537, 697, 865, 894, 936, 937, 977, 1053, 1055, 1067, 1069, 1070, 1127, 1128, 1144, 1159, 1263, 1278, 1291, 1336, 1352, 1414, 1415, 1423, 1428, 1429, 1430, 1462, 1464, 1512, 1513, 1514, 1520, 1522, 1617, 1664, 1709, 1731, 1735, 1737, 1750, 1773, 1795, 1801, 1835, 1865, 1875, 1888, 1902, 1903, 1904, 1906, 1907, 2004, 2005, 2007, 2008, 2013, 2016, 2024, 2026, 2034, 2035, 2037, 2038, 2039, 2041, 2042, 2046, 2047, 2048, 2052, 2056, 2058, 2061, 2062, 2067, 2068, 2069, 2071, 2072, 2087, 2088, 2090, 2091, 2094, 2098, 2100], "sure": [1, 7, 9, 22, 27, 29, 34, 36, 45, 48, 55, 61, 861, 862, 893, 1156, 1269, 1281, 1282, 1338, 1709, 1762, 1797, 1939, 2009, 2025, 2034, 2038, 2041, 2043, 2052, 2056, 2061, 2062, 2067, 2068, 2069, 2072, 2074, 2077, 2094, 2096, 2103], "been": [1, 5, 7, 9, 11, 22, 23, 27, 28, 31, 32, 33, 35, 37, 44, 48, 49, 55, 56, 61, 83, 485, 487, 679, 759, 900, 901, 905, 977, 1008, 1010, 1015, 1043, 1046, 1104, 1109, 1163, 1268, 1269, 1275, 1280, 1337, 1400, 1470, 1477, 1489, 1535, 1590, 1625, 1709, 1716, 1717, 1726, 1731, 1735, 1737, 1757, 1758, 1773, 1793, 1794, 1795, 1801, 1803, 1819, 1916, 1932, 1960, 1971, 1975, 1991, 2013, 2015, 2017, 2021, 2024, 2025, 2026, 2033, 2034, 2036, 2037, 2042, 2043, 2044, 2046, 2048, 2050, 2052, 2054, 2056, 2058, 2059, 2067, 2069, 2072, 2077, 2085, 2088, 2089, 2091, 2094, 2099, 2103], "longer": [1, 27, 47, 56, 57, 485, 686, 890, 905, 919, 920, 1262, 1269, 1709, 1761, 1764, 2021, 2034, 2037, 2054, 2067, 2069, 2088, 2103], "find": [1, 7, 14, 27, 44, 57, 61, 81, 1105, 1177, 1179, 1219, 1287, 1338, 1449, 1450, 1451, 1489, 1771, 1809, 1820, 1855, 1921, 2004, 2017, 2019, 2024, 2026, 2034, 2036, 2037, 2038, 2039, 2041, 2043, 2048, 2050, 2054, 2056, 2057, 2062, 2067, 2072, 2075, 2077, 2079, 2082, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2102, 2103, 2104, 2106], "quick": [1, 7, 55, 2016, 2046, 2055, 2086, 2101], "guid": [1, 8, 22, 79, 81, 82, 1277, 1761, 2005, 2013, 2037, 2040, 2059, 2062, 2101], "var": [1, 37, 42, 44, 48, 1433, 1434, 1435, 1472, 1473, 1481, 1482, 1483, 1491, 1559, 1622, 1823, 1965, 2007, 2009, 2025, 2057, 2090, 2098, 2103], "thing": [1, 3, 7, 8, 27, 49, 57, 61, 1163, 1275, 1367, 1431, 1627, 1893, 2008, 2013, 2034, 2037, 2039, 2040, 2041, 2043, 2048, 2056, 2059, 2062, 2063, 2069, 2088, 2091, 2093, 2094, 2101, 2103], "detach": [1, 5, 221, 414, 447, 457, 969, 1162, 1265, 1438, 1519, 1609, 1627, 1897, 1935, 2006, 2007, 2025, 2027, 2039, 2041, 2056, 2057, 2064, 2072, 2076, 2078, 2102], "register_hook": [1, 2025, 2034], "name": [1, 2, 3, 14, 23, 27, 29, 32, 33, 35, 37, 38, 41, 42, 44, 47, 49, 50, 52, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 86, 679, 696, 746, 747, 756, 791, 813, 814, 815, 816, 823, 839, 854, 858, 932, 935, 937, 981, 1033, 1157, 1162, 1172, 1175, 1177, 1181, 1263, 1265, 1266, 1273, 1276, 1281, 1282, 1296, 1301, 1302, 1308, 1309, 1311, 1312, 1313, 1314, 1324, 1325, 1327, 1329, 1330, 1337, 1519, 1570, 1578, 1701, 1706, 1707, 1709, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1758, 1759, 1761, 1770, 1771, 1851, 1861, 1958, 1960, 1963, 1984, 2004, 2005, 2006, 2007, 2009, 2010, 2013, 2015, 2020, 2021, 2024, 2032, 2034, 2037, 2038, 2039, 2043, 2045, 2046, 2054, 2056, 2057, 2058, 2059, 2060, 2061, 2067, 2068, 2074, 2077, 2078, 2079, 2081, 2082, 2083, 2085, 2089, 2091, 2092, 2094, 2097, 2100, 2101, 2102, 2103, 2104, 2105, 2107], "factori": [1, 2, 11, 33, 35, 38, 42, 57, 823, 939, 1105, 1579, 1762, 1771, 1859, 2005, 2007, 2017, 2026, 2037, 2039, 2057, 2075, 2078, 2090, 2093], "ones": [1, 22, 27, 31, 32, 33, 49, 52, 57, 58, 60, 61, 63, 68, 149, 253, 312, 401, 444, 445, 447, 514, 793, 859, 893, 909, 911, 912, 913, 914, 915, 919, 942, 954, 972, 1088, 1096, 1118, 1162, 1169, 1170, 1173, 1262, 1265, 1277, 1286, 1312, 1328, 1337, 1432, 1452, 1461, 1465, 1472, 1473, 1491, 1519, 1523, 1524, 1526, 1528, 1534, 1571, 1580, 1581, 1582, 1616, 1677, 1695, 1699, 1708, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1754, 1756, 1759, 1769, 1770, 1823, 1840, 1858, 1863, 1888, 1938, 1942, 1960, 1972, 2007, 2009, 2011, 2017, 2025, 2026, 2034, 2035, 2037, 2039, 2047, 2049, 2050, 2056, 2057, 2058, 2059, 2062, 2067, 2069, 2071, 2073, 2075, 2078, 2097, 2102, 2103], "autograd_tensor": 1, "kwarg": [1, 5, 14, 22, 27, 28, 29, 31, 32, 44, 49, 50, 52, 61, 63, 579, 602, 746, 759, 761, 762, 818, 819, 820, 821, 823, 824, 890, 905, 906, 976, 1008, 1010, 1047, 1048, 1065, 1162, 1173, 1174, 1178, 1181, 1265, 1268, 1270, 1329, 1355, 1480, 1508, 1519, 1550, 1554, 1558, 1560, 1561, 1699, 1709, 1731, 1736, 1740, 1750, 1757, 1759, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1851, 1954, 1969, 1975, 2004, 2009, 2010, 2013, 2039, 2040, 2046, 2054, 2058, 2067, 2074, 2083, 2089, 2092, 2102, 2103, 2104], "base": [1, 3, 7, 9, 12, 14, 15, 19, 22, 27, 28, 29, 31, 32, 33, 35, 37, 42, 44, 45, 47, 49, 50, 52, 57, 61, 84, 85, 86, 790, 795, 799, 801, 819, 820, 821, 823, 824, 861, 862, 900, 903, 905, 916, 917, 926, 972, 994, 1066, 1067, 1082, 1103, 1105, 1148, 1187, 1197, 1219, 1229, 1267, 1279, 1291, 1329, 1340, 1342, 1344, 1352, 1432, 1455, 1492, 1519, 1522, 1523, 1524, 1528, 1534, 1536, 1563, 1565, 1567, 1642, 1677, 1708, 1709, 1714, 1715, 1723, 1731, 1735, 1737, 1778, 1789, 1790, 1816, 1826, 1851, 1863, 1920, 1921, 1936, 1946, 1948, 1970, 2005, 2007, 2009, 2036, 2037, 2038, 2039, 2042, 2046, 2060, 2061, 2062, 2067, 2068, 2072, 2073, 2076, 2077, 2079, 2082, 2083, 2090, 2091, 2092, 2094, 2096], "static": [1, 3, 8, 14, 28, 33, 35, 49, 50, 52, 63, 68, 69, 72, 793, 798, 814, 816, 823, 825, 831, 857, 859, 889, 890, 891, 892, 905, 906, 1177, 1178, 1181, 1187, 1204, 1279, 1563, 1709, 1895, 2006, 2007, 2008, 2009, 2037, 2042, 2045, 2053, 2054, 2060, 2063, 2067, 2074, 2088, 2090, 2092], "Then": [1, 28, 45, 61, 928, 1465, 1571, 1726, 1771, 1958, 2034, 2035, 2037, 2038, 2039, 2040, 2049, 2050, 2056, 2058, 2059, 2067, 2068, 2082, 2088, 2091, 2092, 2095], "op": [1, 4, 23, 27, 49, 50, 52, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 81, 85, 86, 149, 502, 523, 603, 756, 791, 792, 793, 822, 825, 854, 861, 862, 893, 900, 903, 905, 906, 914, 962, 972, 1011, 1026, 1028, 1032, 1033, 1047, 1048, 1074, 1078, 1080, 1163, 1216, 1266, 1279, 1281, 1282, 1337, 1343, 1392, 1396, 1401, 1402, 1536, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1807, 1865, 1944, 1976, 1979, 1981, 1983, 1984, 1996, 1999, 2000, 2005, 2009, 2015, 2016, 2019, 2021, 2025, 2026, 2036, 2037, 2038, 2039, 2048, 2054, 2059, 2061, 2062, 2063, 2064, 2065, 2072, 2074, 2076, 2078, 2083, 2088, 2089, 2093, 2094, 2095, 2096, 2098, 2101, 2102, 2103], "directli": [1, 3, 7, 9, 14, 15, 22, 23, 27, 29, 32, 33, 34, 35, 43, 49, 50, 52, 56, 61, 63, 76, 556, 731, 746, 890, 900, 903, 905, 974, 1088, 1156, 1163, 1170, 1172, 1179, 1209, 1296, 1525, 1553, 1572, 1636, 1683, 1751, 1942, 2006, 2008, 2009, 2013, 2017, 2021, 2027, 2034, 2037, 2038, 2039, 2040, 2042, 2043, 2045, 2046, 2047, 2048, 2051, 2059, 2061, 2062, 2067, 2072, 2077, 2079, 2085, 2090, 2092, 2093, 2094, 2096, 2097, 2102, 2103], "ctx": [1, 42, 63, 67, 889, 890, 891, 900, 901, 902, 903, 904, 905, 906, 2013, 2033, 2039, 2040, 2056], "gradcheck": [1, 1894, 2005, 2013, 2039, 2072], "extend": [1, 22, 27, 29, 33, 36, 47, 61, 861, 890, 892, 900, 903, 905, 906, 1521, 1530, 1894, 1958, 2005, 2027, 2034, 2045, 2047, 2048, 2056, 2057, 2059, 2065, 2072, 2090, 2091, 2104], "staticmethod": [1, 63, 890, 892, 900, 901, 902, 903, 904, 905, 906, 2009, 2033, 2039, 2056, 2067], "result": [1, 3, 4, 5, 7, 8, 9, 12, 14, 18, 22, 23, 27, 29, 33, 35, 37, 42, 45, 49, 50, 52, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 84, 86, 152, 220, 221, 253, 254, 314, 334, 397, 495, 497, 498, 555, 582, 583, 584, 586, 587, 617, 685, 686, 687, 688, 689, 692, 694, 695, 696, 698, 759, 792, 877, 879, 898, 899, 908, 909, 910, 911, 912, 913, 919, 920, 928, 940, 943, 954, 958, 963, 969, 971, 972, 975, 986, 990, 992, 1017, 1019, 1021, 1047, 1048, 1061, 1084, 1085, 1086, 1087, 1088, 1100, 1105, 1123, 1126, 1132, 1141, 1148, 1150, 1153, 1158, 1159, 1162, 1163, 1164, 1167, 1168, 1173, 1174, 1178, 1190, 1195, 1203, 1205, 1209, 1227, 1228, 1230, 1242, 1256, 1265, 1268, 1269, 1277, 1281, 1282, 1284, 1286, 1287, 1291, 1305, 1307, 1309, 1310, 1318, 1322, 1324, 1326, 1327, 1328, 1335, 1345, 1346, 1353, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1410, 1413, 1428, 1429, 1430, 1455, 1457, 1458, 1459, 1463, 1465, 1470, 1484, 1489, 1519, 1525, 1535, 1563, 1564, 1565, 1566, 1567, 1571, 1607, 1625, 1636, 1692, 1695, 1696, 1709, 1723, 1726, 1759, 1762, 1763, 1764, 1765, 1771, 1774, 1801, 1807, 1809, 1816, 1817, 1820, 1826, 1839, 1845, 1860, 1875, 1887, 1898, 1900, 1901, 1905, 1912, 1914, 1915, 1916, 1919, 1920, 1921, 1931, 1935, 1936, 1941, 1942, 1944, 1945, 1947, 1957, 1960, 1964, 1965, 1969, 2006, 2007, 2008, 2009, 2013, 2016, 2017, 2019, 2025, 2026, 2027, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2046, 2048, 2049, 2050, 2051, 2053, 2054, 2056, 2058, 2060, 2061, 2062, 2063, 2064, 2067, 2068, 2071, 2072, 2075, 2077, 2078, 2079, 2083, 2084, 2085, 2089, 2090, 2091, 2093, 2097, 2100, 2101, 2102, 2103, 2104], "save_for_backward": [1, 890, 900, 902, 904, 905, 906, 2013, 2033, 2034, 2039, 2040, 2056], "grad_output": [1, 63, 889, 900, 901, 905, 906, 914, 920, 924, 925, 1265, 1519, 2007, 2034, 2037, 2039, 2040, 2046, 2098], "saved_tensor": [1, 900, 902, 903, 904, 905, 906, 2013, 2033, 2034, 2039, 2040], "avail": [1, 2, 5, 8, 9, 14, 15, 19, 22, 27, 29, 35, 44, 45, 50, 81, 82, 1000, 1027, 1029, 1030, 1041, 1044, 1051, 1052, 1072, 1073, 1075, 1105, 1197, 1272, 1329, 1330, 1355, 1375, 1397, 1399, 1563, 1572, 1578, 1636, 1677, 1696, 1809, 1863, 1916, 1921, 1957, 1960, 1980, 1982, 1990, 1992, 1993, 1994, 1995, 2004, 2005, 2006, 2008, 2009, 2013, 2016, 2024, 2034, 2037, 2039, 2044, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2058, 2059, 2061, 2062, 2063, 2067, 2083, 2084, 2092, 2096, 2103, 2104], "inspect": [1, 27, 49, 52, 61, 931, 1265, 1277, 2033, 2039, 2045, 2059, 2063, 2075, 2094, 2096, 2097, 2104], "cost": [1, 3, 4, 8, 9, 23, 29, 52, 485, 962, 972, 1321, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1677, 1859, 2037, 2042, 2050, 2063, 2068, 2075, 2099, 2103], "both": [1, 2, 3, 14, 22, 23, 24, 27, 28, 29, 32, 33, 37, 42, 43, 44, 45, 49, 50, 52, 60, 61, 63, 71, 72, 96, 338, 498, 728, 767, 768, 771, 772, 773, 792, 851, 892, 899, 905, 906, 909, 910, 911, 912, 913, 940, 978, 994, 1028, 1061, 1100, 1106, 1107, 1108, 1121, 1151, 1152, 1153, 1162, 1207, 1209, 1219, 1226, 1242, 1255, 1256, 1262, 1265, 1279, 1287, 1288, 1336, 1352, 1360, 1366, 1381, 1382, 1428, 1429, 1433, 1434, 1435, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1473, 1479, 1481, 1482, 1483, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1512, 1513, 1514, 1519, 1525, 1559, 1567, 1571, 1572, 1575, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1650, 1651, 1652, 1677, 1709, 1718, 1720, 1729, 1759, 1776, 1777, 1789, 1801, 1824, 1825, 1863, 1893, 1895, 1897, 1916, 1920, 1941, 1942, 1981, 2006, 2008, 2009, 2013, 2016, 2025, 2026, 2028, 2033, 2034, 2035, 2039, 2040, 2042, 2043, 2046, 2049, 2050, 2051, 2056, 2059, 2060, 2062, 2065, 2067, 2069, 2072, 2073, 2074, 2079, 2082, 2083, 2084, 2088, 2090, 2092, 2093, 2094, 2095, 2096, 2100, 2103], "cpu": [1, 4, 5, 14, 17, 22, 27, 29, 50, 52, 63, 68, 72, 73, 74, 87, 118, 195, 288, 325, 334, 444, 445, 446, 447, 448, 457, 485, 579, 588, 865, 880, 933, 935, 941, 950, 992, 995, 996, 1007, 1017, 1018, 1019, 1021, 1106, 1108, 1118, 1123, 1141, 1153, 1157, 1159, 1160, 1214, 1216, 1217, 1223, 1224, 1265, 1273, 1275, 1276, 1285, 1295, 1297, 1301, 1302, 1303, 1304, 1306, 1308, 1311, 1313, 1314, 1320, 1323, 1326, 1329, 1330, 1336, 1337, 1352, 1355, 1366, 1378, 1455, 1461, 1519, 1692, 1709, 1714, 1715, 1750, 1751, 1765, 1768, 1819, 1828, 1830, 1832, 1834, 1835, 1859, 1864, 1865, 1866, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1887, 1897, 1902, 1903, 1904, 1905, 1906, 1907, 1920, 1935, 1936, 1937, 1946, 1948, 1953, 1957, 1974, 2002, 2005, 2006, 2007, 2009, 2013, 2017, 2019, 2024, 2025, 2027, 2037, 2039, 2040, 2042, 2044, 2046, 2049, 2050, 2052, 2056, 2057, 2060, 2061, 2063, 2066, 2067, 2072, 2074, 2075, 2078, 2079, 2081, 2084, 2085, 2088, 2092, 2093, 2094, 2096, 2097, 2100, 2101, 2103], "There": [1, 5, 6, 7, 9, 12, 14, 21, 27, 29, 44, 49, 50, 52, 53, 57, 58, 61, 83, 84, 86, 679, 733, 792, 890, 905, 906, 972, 1163, 1455, 1489, 1535, 1677, 1709, 1716, 1717, 1757, 1762, 2004, 2006, 2008, 2009, 2015, 2016, 2026, 2034, 2037, 2039, 2040, 2041, 2045, 2048, 2052, 2053, 2056, 2059, 2061, 2062, 2063, 2067, 2069, 2078, 2081, 2088, 2090, 2091, 2093, 2094, 2101, 2102, 2103], "moment": [1, 63, 69, 771, 772, 773, 990, 1776, 1777, 1778, 1780, 1786, 1790, 2019, 2024, 2027, 2061, 2067, 2100], "nvprof": [1, 4, 929, 2037], "regist": [1, 15, 23, 27, 31, 33, 44, 47, 49, 50, 52, 61, 79, 81, 82, 83, 84, 86, 486, 487, 679, 791, 792, 854, 924, 925, 972, 1050, 1265, 1337, 1519, 1520, 1521, 1529, 1530, 1548, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1723, 1724, 1726, 1727, 1729, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1958, 1960, 2013, 2021, 2024, 2037, 2038, 2039, 2045, 2046, 2051, 2054, 2056, 2059, 2067, 2084, 2091, 2093, 2096, 2099], "activ": [1, 5, 7, 9, 32, 47, 49, 52, 58, 78, 80, 791, 793, 795, 802, 806, 841, 842, 851, 861, 862, 1015, 1030, 1043, 1061, 1162, 1164, 1174, 1338, 1427, 1457, 1458, 1459, 1463, 1473, 1491, 1518, 1520, 1538, 1549, 1563, 1565, 1567, 1618, 1656, 1680, 1709, 1727, 1729, 1759, 1764, 1969, 2005, 2019, 2024, 2037, 2039, 2040, 2042, 2046, 2056, 2058, 2060, 2061, 2062, 2063, 2064, 2067, 2072, 2082, 2083, 2088, 2093, 2098, 2103], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 2061], "use_devic": 1, "record_shap": [1, 2061], "with_flop": [1, 2061], "profile_memori": [1, 2061], "with_stack": [1, 2061], "with_modul": [1, 2061], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 2061], "hold": [1, 27, 29, 42, 44, 47, 48, 49, 52, 56, 60, 61, 536, 1338, 1465, 1520, 1521, 1529, 1530, 1571, 1699, 1709, 1711, 1712, 1726, 1736, 1750, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1902, 1903, 1904, 1905, 1906, 1907, 2035, 2037, 2039, 2041, 2045, 2048, 2058, 2061, 2067, 2068, 2069, 2071, 2072, 2074, 2075, 2077, 2078, 2090, 2091, 2094], "summari": [1, 3, 45, 1062, 1867, 2005, 2021, 2042, 2077, 2083, 2091, 2097, 2103, 2105], "hood": [1, 49, 60, 2024, 2034, 2037, 2038, 2048, 2059, 2069, 2092, 2093], "just": [1, 2, 7, 14, 23, 27, 33, 35, 42, 61, 588, 686, 696, 789, 822, 825, 889, 891, 905, 906, 928, 932, 987, 988, 1181, 1189, 1281, 1282, 1320, 1323, 1328, 1329, 1355, 1457, 1458, 1459, 1463, 1709, 1729, 1730, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1859, 1945, 1946, 1947, 1948, 1958, 2004, 2006, 2024, 2033, 2034, 2039, 2040, 2043, 2045, 2046, 2047, 2051, 2059, 2060, 2067, 2068, 2072, 2075, 2076, 2078, 2083, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2102], "record": [1, 5, 19, 31, 36, 37, 38, 42, 45, 49, 60, 61, 444, 445, 446, 447, 448, 485, 495, 818, 819, 820, 821, 824, 826, 865, 938, 941, 950, 1007, 1008, 1010, 1106, 1107, 1108, 1118, 1123, 1141, 1159, 1160, 1161, 1190, 1223, 1224, 1265, 1281, 1285, 1336, 1352, 1378, 1381, 1382, 1455, 1519, 1768, 1769, 1771, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1902, 1903, 1904, 1905, 1906, 1907, 1935, 1974, 1975, 2002, 2003, 2006, 2008, 2017, 2027, 2033, 2034, 2037, 2039, 2042, 2053, 2054, 2056, 2061, 2067, 2077, 2078, 2079, 2081, 2082, 2083, 2088, 2090, 2091, 2094, 2103, 2105], "event": [1, 30, 33, 35, 43, 47, 60, 485, 932, 933, 934, 1008, 1010, 1061, 1064, 1281, 1282, 1343, 1381, 1382, 1677, 1975, 2005, 2021, 2024, 2037, 2061, 2077, 2101, 2105], "being": [1, 3, 5, 9, 11, 12, 19, 22, 27, 29, 31, 33, 35, 37, 44, 45, 47, 49, 50, 52, 56, 57, 60, 61, 63, 72, 80, 96, 401, 414, 759, 792, 798, 892, 905, 906, 908, 914, 970, 986, 1008, 1016, 1063, 1068, 1082, 1083, 1118, 1151, 1152, 1163, 1172, 1173, 1180, 1254, 1265, 1269, 1355, 1364, 1369, 1428, 1429, 1430, 1431, 1432, 1452, 1454, 1461, 1462, 1466, 1467, 1472, 1478, 1485, 1510, 1511, 1519, 1522, 1523, 1524, 1525, 1526, 1533, 1551, 1552, 1568, 1590, 1597, 1598, 1608, 1620, 1621, 1625, 1637, 1661, 1669, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1819, 1820, 1914, 1915, 1916, 1964, 1965, 2006, 2009, 2016, 2021, 2025, 2026, 2027, 2033, 2034, 2037, 2039, 2040, 2041, 2042, 2043, 2046, 2048, 2049, 2050, 2054, 2056, 2059, 2062, 2065, 2067, 2068, 2072, 2079, 2082, 2085, 2088, 2090, 2091, 2093, 2094, 2101, 2103, 2104], "those": [1, 2, 4, 5, 14, 22, 23, 27, 29, 31, 32, 33, 49, 52, 57, 60, 61, 80, 679, 823, 919, 1019, 1029, 1093, 1095, 1174, 1194, 1281, 1323, 1329, 1337, 1377, 1423, 1431, 1432, 1452, 1454, 1462, 1478, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1572, 1597, 1598, 1608, 1617, 1637, 1661, 1669, 1704, 1705, 1771, 1790, 1920, 1942, 1969, 1982, 2008, 2025, 2026, 2027, 2033, 2034, 2037, 2039, 2040, 2042, 2044, 2046, 2050, 2051, 2054, 2056, 2058, 2065, 2067, 2069, 2088, 2091, 2092, 2093, 2094, 2096, 2097, 2100, 2103], "python": [1, 3, 4, 9, 12, 14, 15, 18, 22, 31, 32, 33, 34, 35, 37, 38, 41, 42, 44, 45, 46, 50, 52, 61, 63, 71, 72, 351, 588, 623, 679, 780, 880, 908, 909, 910, 911, 912, 913, 915, 919, 920, 958, 959, 971, 972, 974, 986, 1041, 1047, 1048, 1050, 1100, 1105, 1123, 1125, 1153, 1159, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1241, 1263, 1265, 1266, 1268, 1269, 1270, 1276, 1277, 1281, 1337, 1520, 1521, 1529, 1530, 1677, 1709, 1813, 1835, 1839, 1859, 1860, 1895, 1960, 1961, 1969, 1988, 2004, 2015, 2017, 2022, 2023, 2024, 2026, 2034, 2035, 2036, 2037, 2038, 2040, 2041, 2045, 2048, 2051, 2052, 2053, 2054, 2059, 2062, 2066, 2067, 2068, 2069, 2075, 2078, 2079, 2084, 2085, 2087, 2089, 2090, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2100, 2103, 2104, 2105], "report": [1, 3, 4, 18, 27, 37, 45, 60, 61, 83, 84, 86, 1007, 1061, 1166, 1167, 1169, 1974, 2033, 2037, 2060, 2072, 2094, 2097, 2100, 2103, 2105], "runtim": [1, 3, 5, 14, 19, 27, 32, 35, 49, 50, 61, 826, 878, 932, 1103, 1105, 1181, 1191, 1197, 1204, 1229, 1265, 1271, 1281, 1519, 1711, 1712, 1772, 1815, 1957, 1970, 2009, 2025, 2026, 2034, 2037, 2039, 2048, 2053, 2054, 2055, 2056, 2062, 2084, 2090, 2091, 2094, 2099, 2106], "note": [1, 2, 3, 5, 8, 11, 12, 14, 15, 18, 21, 22, 23, 27, 29, 31, 32, 33, 34, 35, 42, 44, 47, 49, 50, 52, 56, 58, 60, 61, 63, 71, 72, 83, 84, 85, 86, 149, 257, 376, 485, 487, 498, 499, 512, 514, 516, 734, 740, 741, 742, 790, 792, 793, 794, 798, 841, 861, 865, 884, 893, 900, 903, 905, 908, 909, 910, 911, 912, 913, 914, 915, 920, 926, 928, 935, 956, 962, 972, 979, 986, 1004, 1080, 1088, 1093, 1105, 1126, 1156, 1159, 1174, 1179, 1206, 1219, 1252, 1262, 1263, 1265, 1266, 1272, 1338, 1360, 1381, 1382, 1402, 1428, 1429, 1430, 1431, 1432, 1438, 1449, 1450, 1451, 1452, 1454, 1461, 1462, 1466, 1470, 1472, 1478, 1484, 1485, 1489, 1510, 1511, 1519, 1520, 1522, 1523, 1524, 1525, 1526, 1529, 1530, 1533, 1535, 1542, 1551, 1552, 1559, 1563, 1568, 1572, 1580, 1597, 1598, 1608, 1616, 1617, 1625, 1636, 1637, 1661, 1664, 1669, 1670, 1684, 1699, 1709, 1710, 1716, 1717, 1764, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1793, 1795, 1801, 1803, 1819, 1826, 1901, 1902, 1903, 1904, 1906, 1907, 1912, 1916, 1920, 1942, 1957, 1958, 1960, 1969, 2004, 2006, 2007, 2010, 2016, 2024, 2027, 2028, 2034, 2035, 2036, 2038, 2039, 2040, 2043, 2044, 2045, 2046, 2048, 2049, 2050, 2051, 2054, 2056, 2058, 2059, 2061, 2063, 2065, 2066, 2068, 2069, 2072, 2074, 2076, 2077, 2080, 2085, 2090, 2091, 2092, 2095, 2101, 2102, 2103, 2106, 2107], "propag": [1, 5, 29, 30, 33, 35, 44, 61, 63, 72, 512, 685, 688, 689, 690, 694, 695, 696, 697, 765, 766, 767, 768, 778, 781, 782, 784, 785, 786, 837, 839, 940, 1151, 1152, 1190, 1203, 1410, 1716, 1717, 1901, 2005, 2024, 2025, 2033, 2037, 2039, 2043, 2045, 2067, 2082, 2083, 2090, 2093, 2094, 2102], "async": [1, 27, 28, 60, 602, 1709, 2010, 2037, 2045, 2074, 2091], "task": [1, 3, 7, 23, 53, 58, 1268, 1284, 1481, 1482, 1483, 2009, 2036, 2045, 2046, 2048, 2052, 2091, 2094, 2106], "cuda": [1, 3, 4, 5, 14, 16, 21, 22, 23, 27, 29, 31, 32, 52, 59, 87, 149, 288, 312, 320, 334, 339, 485, 514, 516, 523, 579, 865, 877, 879, 893, 914, 935, 941, 943, 950, 972, 977, 1005, 1006, 1007, 1008, 1010, 1011, 1026, 1028, 1039, 1106, 1107, 1108, 1118, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1157, 1160, 1214, 1223, 1224, 1265, 1285, 1287, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1311, 1312, 1313, 1314, 1320, 1323, 1326, 1327, 1329, 1330, 1336, 1337, 1352, 1355, 1371, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1461, 1489, 1519, 1535, 1559, 1579, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1617, 1625, 1636, 1664, 1677, 1696, 1697, 1698, 1699, 1709, 1711, 1712, 1714, 1715, 1716, 1717, 1763, 1765, 1768, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1819, 1828, 1830, 1832, 1834, 1835, 1859, 1863, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1898, 1902, 1903, 1904, 1905, 1906, 1907, 1920, 1935, 1937, 1946, 1948, 1953, 1957, 2002, 2005, 2007, 2013, 2017, 2025, 2027, 2039, 2040, 2042, 2046, 2049, 2056, 2057, 2058, 2060, 2061, 2066, 2067, 2072, 2074, 2075, 2078, 2079, 2081, 2084, 2085, 2092, 2093, 2096, 2100, 2103, 2106], "cudaev": 1, "approxim": [1, 3, 23, 31, 44, 61, 1170, 1219, 1329, 1338, 1423, 1468, 1533, 1549, 1556, 1623, 1669, 1680, 1724, 1773, 1790, 1809, 1863, 1921, 1942, 2007, 2009, 2037, 2038, 2039, 2043, 2056, 2098, 2107], "4u": 1, "privateuseon": 1, "shape": [1, 5, 8, 11, 12, 23, 27, 32, 33, 50, 52, 54, 56, 58, 61, 62, 63, 64, 65, 68, 69, 71, 75, 96, 170, 190, 207, 217, 399, 401, 444, 446, 448, 470, 496, 497, 512, 514, 516, 543, 565, 616, 679, 684, 686, 687, 696, 734, 744, 745, 755, 757, 759, 763, 765, 766, 767, 768, 771, 772, 773, 780, 795, 878, 884, 900, 902, 905, 909, 911, 912, 913, 932, 942, 943, 945, 948, 953, 955, 959, 960, 964, 965, 972, 986, 989, 1020, 1095, 1096, 1097, 1099, 1100, 1105, 1106, 1108, 1110, 1125, 1126, 1127, 1128, 1136, 1137, 1138, 1144, 1150, 1151, 1152, 1153, 1160, 1167, 1168, 1172, 1173, 1174, 1181, 1182, 1197, 1203, 1206, 1208, 1222, 1227, 1228, 1232, 1240, 1242, 1256, 1262, 1279, 1281, 1282, 1285, 1290, 1291, 1295, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1354, 1355, 1359, 1367, 1372, 1373, 1404, 1405, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1616, 1617, 1621, 1625, 1627, 1636, 1637, 1642, 1650, 1651, 1652, 1662, 1663, 1666, 1667, 1668, 1670, 1677, 1696, 1699, 1708, 1709, 1711, 1712, 1723, 1726, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1765, 1768, 1770, 1772, 1807, 1816, 1820, 1824, 1825, 1828, 1830, 1831, 1832, 1839, 1841, 1842, 1846, 1855, 1858, 1882, 1897, 1898, 1900, 1903, 1905, 1911, 1916, 1917, 1920, 1931, 1938, 1942, 1952, 1953, 1954, 1955, 1969, 1972, 2002, 2006, 2007, 2009, 2013, 2025, 2026, 2027, 2034, 2035, 2037, 2039, 2040, 2041, 2054, 2057, 2061, 2064, 2067, 2072, 2073, 2077, 2078, 2079, 2081, 2084, 2092, 2094, 2098, 2101, 2102, 2103], "about": [1, 8, 9, 12, 17, 22, 27, 28, 29, 31, 35, 37, 41, 43, 45, 49, 53, 57, 61, 85, 254, 485, 497, 617, 919, 920, 926, 977, 986, 1012, 1013, 1029, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1069, 1070, 1071, 1163, 1180, 1181, 1191, 1203, 1295, 1302, 1462, 1534, 1708, 1750, 1786, 1790, 1801, 1862, 1988, 2004, 2006, 2008, 2009, 2013, 2016, 2036, 2037, 2038, 2039, 2041, 2042, 2045, 2048, 2049, 2051, 2053, 2059, 2061, 2062, 2065, 2068, 2069, 2072, 2076, 2078, 2089, 2090, 2091, 2092, 2094, 2099, 2103], "dimens": [1, 11, 22, 27, 32, 33, 49, 52, 57, 58, 61, 63, 68, 72, 75, 83, 217, 231, 232, 253, 259, 312, 314, 316, 320, 432, 433, 471, 472, 473, 492, 512, 514, 516, 536, 542, 544, 545, 559, 582, 583, 584, 586, 587, 606, 616, 685, 691, 692, 694, 695, 696, 698, 734, 757, 778, 780, 784, 874, 875, 876, 877, 886, 887, 888, 892, 905, 906, 914, 951, 959, 962, 963, 964, 965, 966, 1004, 1019, 1021, 1084, 1085, 1086, 1087, 1088, 1093, 1094, 1095, 1096, 1097, 1103, 1105, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1144, 1174, 1177, 1178, 1179, 1180, 1185, 1191, 1206, 1219, 1228, 1229, 1240, 1242, 1262, 1286, 1287, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1345, 1346, 1353, 1356, 1360, 1363, 1365, 1366, 1367, 1368, 1371, 1373, 1388, 1410, 1411, 1412, 1413, 1414, 1415, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1460, 1461, 1462, 1464, 1465, 1468, 1469, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1491, 1499, 1500, 1505, 1506, 1507, 1508, 1509, 1510, 1513, 1514, 1518, 1525, 1526, 1527, 1528, 1531, 1532, 1533, 1534, 1538, 1539, 1540, 1542, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1590, 1596, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1624, 1625, 1626, 1627, 1636, 1639, 1642, 1643, 1644, 1662, 1663, 1664, 1677, 1683, 1684, 1696, 1708, 1716, 1717, 1723, 1724, 1725, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1744, 1745, 1751, 1752, 1754, 1756, 1758, 1761, 1763, 1764, 1807, 1810, 1817, 1819, 1820, 1821, 1826, 1840, 1841, 1842, 1846, 1855, 1857, 1858, 1867, 1888, 1892, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1915, 1916, 1919, 1920, 1930, 1932, 1936, 1937, 1938, 1939, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1955, 1956, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 2005, 2007, 2008, 2009, 2027, 2032, 2035, 2037, 2040, 2041, 2043, 2049, 2054, 2060, 2062, 2071, 2072, 2073, 2075, 2077, 2078, 2085, 2090, 2091, 2098], "collect": [1, 3, 7, 22, 28, 29, 31, 35, 44, 52, 60, 61, 798, 799, 823, 861, 862, 960, 1043, 1106, 1228, 1367, 1709, 1740, 1768, 1828, 1832, 2002, 2005, 2007, 2008, 2009, 2013, 2021, 2037, 2038, 2040, 2058, 2061, 2062, 2065, 2069, 2072, 2077, 2079, 2094, 2100, 2102, 2103, 2105], "further": [1, 4, 9, 12, 14, 23, 27, 52, 60, 63, 73, 74, 485, 1181, 1209, 1269, 1305, 1423, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1709, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1807, 2009, 2016, 2042, 2046, 2048, 2059, 2061, 2069, 2077, 2083, 2087, 2090, 2098, 2101, 2103], "group": [1, 3, 9, 22, 23, 28, 29, 31, 35, 41, 44, 45, 47, 48, 52, 55, 61, 609, 679, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 771, 772, 773, 880, 932, 1439, 1446, 1447, 1448, 1449, 1450, 1451, 1473, 1495, 1496, 1497, 1498, 1499, 1500, 1559, 1600, 1601, 1602, 1603, 1604, 1605, 1626, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1954, 2004, 2005, 2007, 2009, 2024, 2032, 2037, 2038, 2042, 2056, 2058, 2059, 2061, 2067, 2077, 2089, 2091, 2094, 2098, 2103], "prof": [1, 41, 935, 2061, 2094, 2101, 2103], "key_averag": [1, 935, 2061], "group_by_input_shap": [1, 932, 2061], "skew": [1, 3, 4, 1317, 1723], "neglig": [1, 1278, 1863], "bottom": [1, 52, 1429, 1625, 2016, 2101], "But": [1, 7, 52, 60, 485, 1281, 1311, 1709, 2034, 2039, 2041, 2043, 2050, 2059, 2060, 2072, 2076, 2093, 2094, 2097, 2104], "total": [1, 3, 4, 7, 19, 22, 23, 27, 41, 43, 44, 45, 52, 877, 933, 935, 1021, 1056, 1061, 1075, 1159, 1227, 1228, 1376, 1438, 1465, 1478, 1485, 1510, 1525, 1571, 1663, 1709, 1714, 1763, 1765, 1767, 1795, 1801, 1841, 1867, 1916, 2004, 2008, 2021, 2037, 2042, 2044, 2048, 2058, 2072], "artifici": [1, 2072], "increas": [1, 3, 7, 23, 27, 33, 41, 52, 679, 854, 900, 902, 905, 956, 1029, 1061, 1105, 1227, 1228, 1423, 1432, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1531, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1667, 1668, 1677, 1788, 1794, 1795, 1799, 1801, 1803, 1855, 1863, 1942, 1963, 1982, 2007, 2015, 2022, 2036, 2037, 2044, 2048, 2063, 2072, 2088, 2094, 2097], "estim": [1, 3, 22, 33, 990, 994, 1219, 1262, 1433, 1434, 1435, 1468, 1472, 1473, 1481, 1482, 1483, 1491, 1559, 1623, 1724, 1787, 1883, 2061], "flop": [1, 2061], "hardwar": [1, 8, 859, 861, 862, 1301, 1302, 1329, 1957, 2037, 2048, 2050, 2063, 2072, 2094, 2096, 2103], "matrix": [1, 2, 23, 27, 33, 190, 207, 685, 688, 689, 690, 759, 940, 942, 951, 952, 960, 962, 963, 964, 965, 972, 990, 994, 1088, 1092, 1093, 1095, 1105, 1174, 1209, 1215, 1230, 1286, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1333, 1335, 1338, 1346, 1355, 1357, 1360, 1370, 1405, 1407, 1461, 1462, 1470, 1489, 1571, 1580, 1581, 1582, 1616, 1617, 1723, 1729, 1758, 1764, 1807, 1808, 1809, 1819, 1863, 1890, 1893, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1912, 1920, 1921, 1937, 1940, 1942, 1944, 1945, 1946, 1947, 1948, 1963, 1969, 2005, 2009, 2025, 2026, 2027, 2032, 2036, 2037, 2039, 2043, 2046, 2049, 2061, 2072, 2077, 2078, 2094], "2d": [1, 29, 33, 586, 587, 699, 702, 705, 734, 738, 741, 765, 767, 772, 778, 782, 784, 785, 786, 990, 994, 1093, 1105, 1321, 1322, 1421, 1425, 1429, 1432, 1433, 1434, 1447, 1450, 1454, 1458, 1462, 1466, 1481, 1482, 1487, 1513, 1522, 1524, 1525, 1526, 1572, 1573, 1574, 1585, 1588, 1590, 1593, 1598, 1601, 1604, 1612, 1617, 1620, 1647, 1651, 1661, 1664, 1724, 1758, 1825, 1900, 1905, 1944, 2019, 2032, 2039, 2061, 2062, 2072], "alloc": [1, 4, 11, 18, 19, 23, 29, 33, 35, 44, 52, 253, 330, 444, 445, 446, 447, 448, 485, 1006, 1008, 1010, 1012, 1013, 1015, 1028, 1029, 1030, 1053, 1055, 1057, 1059, 1060, 1061, 1062, 1070, 1071, 1075, 1106, 1108, 1157, 1178, 1184, 1187, 1190, 1191, 1211, 1374, 1376, 1377, 1385, 1828, 1832, 1834, 1859, 1935, 1975, 1981, 1982, 2005, 2024, 2027, 2034, 2038, 2042, 2044, 2048, 2054, 2061, 2075, 2087, 2088, 2090, 2093, 2101, 2103], "dealloc": [1, 61, 485, 1159, 2024, 2037, 2041, 2044, 2061], "line": [1, 4, 18, 27, 35, 49, 50, 61, 679, 915, 932, 1105, 1163, 1265, 1276, 1519, 1590, 1625, 1867, 1895, 2006, 2009, 2010, 2017, 2027, 2035, 2039, 2043, 2044, 2050, 2052, 2056, 2061, 2072, 2087, 2091, 2092, 2094, 2096, 2097, 2100, 2103, 2105], "hierarchi": [1, 29, 49, 61, 839, 1269, 1776, 1777, 1789, 2010, 2039, 2061, 2062, 2090], "callstack": [1, 27, 2061], "A": [1, 2, 3, 5, 7, 8, 9, 12, 14, 18, 22, 23, 26, 27, 28, 29, 31, 32, 33, 35, 41, 44, 45, 47, 49, 50, 52, 53, 58, 60, 63, 64, 65, 68, 84, 87, 559, 579, 582, 583, 584, 593, 623, 679, 691, 696, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 744, 745, 755, 760, 761, 762, 763, 764, 789, 791, 813, 858, 859, 861, 862, 934, 941, 950, 951, 953, 958, 963, 964, 965, 971, 972, 974, 977, 978, 981, 986, 990, 994, 1007, 1008, 1010, 1018, 1020, 1021, 1090, 1105, 1110, 1118, 1119, 1120, 1132, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1179, 1181, 1183, 1208, 1219, 1222, 1223, 1224, 1228, 1255, 1256, 1257, 1258, 1261, 1263, 1265, 1268, 1273, 1276, 1278, 1281, 1282, 1286, 1290, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1335, 1338, 1346, 1354, 1355, 1356, 1357, 1361, 1416, 1432, 1436, 1438, 1454, 1457, 1458, 1459, 1461, 1462, 1463, 1471, 1472, 1480, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1509, 1518, 1519, 1525, 1548, 1553, 1555, 1563, 1568, 1569, 1579, 1583, 1590, 1596, 1608, 1627, 1637, 1644, 1656, 1677, 1683, 1684, 1699, 1710, 1711, 1712, 1718, 1720, 1723, 1726, 1729, 1751, 1752, 1755, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1794, 1795, 1797, 1800, 1801, 1803, 1809, 1819, 1821, 1822, 1823, 1824, 1825, 1836, 1842, 1848, 1851, 1883, 1892, 1895, 1896, 1899, 1911, 1915, 1916, 1920, 1921, 1939, 1944, 1945, 1946, 1947, 1948, 1952, 1953, 1954, 1956, 1957, 1965, 1969, 1972, 1974, 1975, 2004, 2006, 2007, 2008, 2009, 2013, 2016, 2019, 2025, 2026, 2027, 2032, 2033, 2036, 2037, 2039, 2040, 2041, 2042, 2048, 2049, 2051, 2056, 2058, 2059, 2060, 2061, 2062, 2067, 2068, 2069, 2072, 2073, 2074, 2075, 2077, 2078, 2083, 2088, 2089, 2092, 2093, 2094, 2096, 2098, 2101, 2102, 2103, 2104, 2105, 2107], "aten": [1, 3, 12, 14, 18, 49, 50, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 81, 84, 1047, 1163, 1405, 1770, 1771, 1895, 2006, 2007, 2013, 2036, 2039, 2052, 2054, 2057, 2061, 2062, 2072, 2084, 2089, 2095, 2097, 2101, 2103], "torchscript": [1, 3, 8, 31, 49, 50, 61, 616, 1263, 1266, 1268, 1269, 1270, 1272, 1277, 1281, 1283, 1771, 2005, 2010, 2051, 2061, 2067, 2105], "eager": [1, 8, 49, 972, 1080, 1178, 1180, 1263, 1266, 1277, 1402, 1866, 2009, 2013, 2037, 2042, 2061, 2063, 2065, 2078, 2088, 2094, 2095, 2096, 2100, 2103], "experiment": [1, 2, 23, 27, 29, 31, 32, 49, 50, 52, 61, 63, 66, 71, 72, 75, 232, 908, 910, 914, 972, 981, 1079, 1163, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1296, 1307, 1309, 1310, 1314, 1327, 1709, 1790, 2005, 2006, 2008, 2013, 2017, 2025, 2026, 2037, 2038, 2050, 2052, 2054, 2056, 2059, 2060, 2061, 2090, 2093, 2103], "kineto": [1, 928, 2061], "_experimentalconfig": [1, 2061], "librari": [1, 2, 3, 4, 8, 9, 11, 14, 15, 19, 22, 27, 34, 42, 47, 53, 56, 57, 58, 61, 679, 928, 992, 1008, 1031, 1035, 1047, 1156, 1278, 1309, 1355, 1887, 2021, 2036, 2037, 2038, 2039, 2040, 2041, 2045, 2046, 2048, 2049, 2052, 2056, 2059, 2060, 2061, 2062, 2067, 2080, 2085, 2091, 2094, 2104, 2106], "100": [1, 22, 27, 31, 33, 61, 63, 71, 72, 77, 299, 737, 738, 741, 742, 928, 1226, 1265, 1277, 1283, 1321, 1336, 1343, 1352, 1367, 1404, 1423, 1431, 1432, 1433, 1434, 1435, 1447, 1448, 1450, 1451, 1453, 1454, 1481, 1482, 1483, 1519, 1526, 1528, 1559, 1568, 1607, 1608, 1661, 1779, 1791, 1792, 1797, 1798, 1799, 1800, 1802, 1804, 1805, 1821, 1876, 1955, 2007, 2009, 2024, 2036, 2037, 2056, 2058, 2063, 2069, 2071, 2072, 2077, 2089, 2092, 2097], "realli": [1, 7, 61, 974, 1181, 2009, 2034, 2059, 2093], "y": [1, 11, 14, 22, 33, 41, 49, 50, 52, 57, 58, 61, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 485, 616, 619, 780, 884, 886, 887, 888, 898, 899, 900, 903, 905, 906, 908, 909, 910, 911, 912, 913, 915, 916, 935, 954, 960, 987, 994, 1047, 1048, 1088, 1099, 1105, 1109, 1162, 1164, 1167, 1168, 1169, 1173, 1174, 1205, 1272, 1277, 1281, 1334, 1343, 1344, 1367, 1431, 1432, 1433, 1434, 1435, 1436, 1452, 1454, 1473, 1478, 1479, 1481, 1482, 1483, 1485, 1491, 1506, 1510, 1511, 1522, 1523, 1524, 1526, 1528, 1534, 1551, 1552, 1559, 1562, 1568, 1569, 1596, 1625, 1642, 1666, 1699, 1708, 1729, 1762, 1823, 1841, 1843, 1844, 1897, 1911, 1938, 1942, 1943, 1969, 1972, 2006, 2007, 2008, 2009, 2013, 2018, 2025, 2026, 2032, 2034, 2035, 2036, 2037, 2040, 2043, 2044, 2047, 2054, 2056, 2059, 2062, 2067, 2069, 2073, 2077, 2081, 2082, 2083, 2088, 2089, 2090, 2091, 2094, 2102, 2103], "column": [1, 3, 23, 27, 32, 190, 259, 583, 586, 935, 970, 990, 994, 1088, 1118, 1146, 1147, 1231, 1301, 1302, 1305, 1321, 1324, 1329, 1333, 1338, 1405, 1528, 1571, 1616, 1617, 1723, 1809, 1819, 1900, 1902, 1903, 1904, 1906, 1907, 1920, 1942, 1946, 1948, 1963, 2032, 2043, 2072, 2077], "were": [1, 2, 3, 18, 27, 35, 44, 48, 52, 57, 60, 61, 149, 320, 334, 470, 485, 854, 889, 891, 893, 905, 906, 914, 935, 1050, 1163, 1174, 1273, 1337, 1590, 1709, 1714, 1736, 1753, 1855, 1859, 1931, 1938, 1969, 2008, 2016, 2033, 2037, 2039, 2051, 2056, 2059, 2088, 2091, 2093, 2094, 2099, 2102, 2103], "remov": [1, 3, 22, 23, 27, 29, 33, 45, 48, 52, 61, 486, 487, 512, 545, 556, 696, 796, 814, 815, 816, 859, 924, 925, 928, 935, 939, 962, 963, 1050, 1163, 1177, 1210, 1262, 1265, 1269, 1355, 1356, 1360, 1440, 1441, 1442, 1519, 1520, 1529, 1627, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1724, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1745, 1746, 1748, 1749, 1759, 1761, 1764, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1819, 1835, 1857, 1911, 1920, 1944, 1951, 1953, 2004, 2005, 2019, 2028, 2034, 2039, 2046, 2051, 2056, 2057, 2059, 2069, 2074, 2079, 2091, 2094, 2096, 2099, 2102], "breviti": [1, 61, 935, 994, 2056], "print": [1, 3, 5, 12, 18, 22, 24, 27, 35, 36, 41, 42, 45, 49, 50, 52, 57, 60, 719, 727, 728, 733, 744, 745, 755, 763, 922, 924, 925, 935, 1162, 1163, 1172, 1181, 1265, 1269, 1272, 1273, 1277, 1355, 1436, 1480, 1506, 1519, 1531, 1532, 1607, 1664, 1667, 1668, 1729, 1739, 1740, 1741, 1742, 1745, 1755, 1759, 1771, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1867, 1961, 2004, 2006, 2007, 2017, 2034, 2036, 2037, 2039, 2046, 2047, 2054, 2055, 2056, 2057, 2059, 2061, 2067, 2077, 2078, 2082, 2083, 2088, 2089, 2091, 2092, 2094, 2096, 2103], "tabl": [1, 3, 27, 61, 935, 1461, 1616, 2007, 2009, 2039, 2058, 2059, 2061, 2062, 2067, 2072, 2079, 2093, 2095, 2097, 2100, 2103], "sort_bi": [1, 935, 2061], "self_cpu_time_tot": [1, 935, 2061], "avg": [1, 27, 935, 1774], "mul": [1, 18, 49, 61, 63, 66, 69, 71, 76, 419, 746, 747, 756, 935, 1242, 1406, 2006, 2007, 2009, 2025, 2027, 2039, 2056, 2057, 2064, 2068, 2072, 2075, 2082, 2089, 2090, 2091, 2098, 2102], "32": [1, 2, 23, 27, 49, 87, 745, 1159, 1262, 1275, 1355, 1429, 1457, 1458, 1459, 1463, 1464, 1466, 1467, 1487, 1507, 1513, 1524, 1563, 1564, 1565, 1566, 1567, 1579, 1590, 1620, 1621, 1627, 1677, 2026, 2027, 2046, 2050, 2054, 2056, 2065, 2072, 2075, 2077, 2078, 2091, 2092, 2097], "048m": 1, "200": [1, 31, 1265, 1343, 1519, 1821, 2009, 2072, 2091, 2103], "27": [1, 616, 1333, 1794, 1816, 1963, 2056], "041m": 1, "powbackward0": [1, 935], "9": [1, 7, 22, 23, 27, 34, 61, 63, 68, 312, 314, 316, 320, 400, 401, 470, 512, 559, 580, 582, 696, 744, 745, 854, 956, 962, 966, 970, 994, 1087, 1088, 1103, 1106, 1127, 1128, 1137, 1138, 1148, 1151, 1152, 1155, 1156, 1219, 1229, 1295, 1297, 1318, 1320, 1322, 1333, 1335, 1414, 1415, 1421, 1422, 1425, 1426, 1439, 1441, 1461, 1462, 1515, 1516, 1531, 1532, 1542, 1545, 1616, 1617, 1664, 1667, 1668, 1764, 1765, 1774, 1776, 1777, 1778, 1779, 1780, 1786, 1789, 1790, 1791, 1795, 1801, 1803, 1804, 1808, 1812, 1848, 1855, 1864, 1867, 1877, 1882, 1892, 1900, 1908, 1935, 1936, 1940, 1942, 1951, 1963, 1970, 2006, 2010, 2016, 2041, 2046, 2051, 2052, 2056, 2057, 2058, 2059, 2067, 2072, 2073, 2075, 2079, 2091], "727m": 1, "55": [1, 1472, 2056], "483m": 1, "accumulategrad": [1, 935, 2034], "148m": 1, "graphroot": [1, 935], "691": 1, "816u": 1, "emit": [1, 14, 36, 41, 61, 679, 1181, 1281, 1869, 2009, 2015, 2054, 2066, 2072], "nvtx": [1, 4, 2005], "program": [1, 3, 4, 8, 12, 18, 22, 26, 27, 36, 45, 48, 49, 50, 52, 61, 616, 928, 987, 988, 1053, 1055, 1163, 1194, 1863, 2006, 2008, 2010, 2022, 2034, 2037, 2041, 2045, 2047, 2048, 2050, 2051, 2052, 2054, 2062, 2077, 2084, 2088, 2090, 2091, 2092, 2093, 2094, 2096, 2099, 2101, 2103, 2105], "off": [1, 5, 7, 8, 14, 26, 27, 35, 52, 61, 80, 916, 917, 941, 950, 1066, 1163, 1223, 1224, 1262, 1281, 1329, 1428, 1429, 1430, 1432, 1512, 1513, 1514, 1625, 1664, 2036, 2037, 2038, 2041, 2045, 2049, 2050, 2061, 2062, 2063, 2067, 2068, 2090, 2093, 2100], "o": [1, 23, 27, 28, 29, 33, 45, 47, 48, 49, 61, 1175, 1265, 1337, 1381, 1382, 1383, 1490, 1519, 1525, 1709, 1851, 2004, 2010, 2024, 2034, 2037, 2038, 2041, 2052, 2059, 2060, 2067, 2085], "trace_nam": 1, "regular": [1, 3, 4, 27, 35, 45, 52, 55, 61, 1047, 1048, 1162, 1181, 1195, 1313, 1314, 1438, 1456, 1457, 1458, 1459, 1463, 1504, 1518, 1519, 1520, 1521, 1529, 1530, 1618, 1656, 1699, 1711, 1712, 1759, 1777, 1786, 2009, 2013, 2026, 2027, 2037, 2039, 2040, 2045, 2046, 2054, 2056, 2059, 2062, 2065, 2067, 2072, 2073, 2081, 2083], "command": [1, 4, 27, 35, 42, 45, 61, 2037, 2044, 2048, 2052, 2060, 2061, 2068, 2085, 2097, 2100], "unfortun": [1, 9, 22, 49, 1709, 2034, 2039, 2092, 2093], "wai": [1, 3, 5, 7, 8, 9, 14, 22, 23, 27, 29, 31, 33, 37, 41, 49, 52, 54, 55, 60, 61, 149, 579, 679, 795, 818, 821, 824, 861, 862, 890, 893, 905, 906, 909, 911, 912, 913, 914, 919, 926, 1126, 1128, 1163, 1181, 1194, 1195, 1219, 1265, 1295, 1296, 1311, 1326, 1431, 1462, 1481, 1482, 1483, 1489, 1501, 1502, 1503, 1519, 1548, 1565, 1567, 1617, 1670, 1704, 1705, 1709, 1727, 1757, 1790, 1794, 1801, 2006, 2008, 2009, 2015, 2016, 2017, 2021, 2024, 2025, 2026, 2034, 2036, 2037, 2039, 2040, 2041, 2042, 2043, 2046, 2048, 2049, 2052, 2054, 2056, 2058, 2059, 2062, 2067, 2068, 2072, 2076, 2078, 2083, 2088, 2089, 2090, 2091, 2093, 2094, 2101, 2102, 2103, 2105], "disk": [1, 22, 29, 1337, 1851, 2034, 2046, 2059, 2077], "annot": [1, 32, 37, 42, 61, 929, 1263, 1271, 1277, 2006, 2008, 2010, 2013, 2056, 2067, 2094, 2095, 2101], "wait": [1, 18, 27, 35, 42, 44, 60, 485, 823, 1003, 1007, 1008, 1010, 1081, 1190, 1268, 1378, 1381, 1382, 1387, 1403, 1803, 1974, 1975, 2001, 2007, 2009, 2018, 2024, 2036, 2037, 2038, 2057, 2061, 2067, 2094, 2101, 2105], "either": [1, 8, 9, 14, 18, 22, 23, 27, 29, 31, 32, 33, 35, 37, 42, 44, 45, 47, 49, 50, 52, 57, 60, 61, 153, 220, 312, 320, 512, 514, 616, 679, 731, 737, 738, 739, 744, 745, 755, 763, 778, 784, 790, 858, 890, 892, 900, 901, 902, 903, 904, 905, 906, 915, 919, 920, 939, 959, 972, 1018, 1105, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1159, 1163, 1189, 1219, 1242, 1258, 1265, 1281, 1321, 1336, 1337, 1352, 1365, 1367, 1421, 1422, 1425, 1426, 1429, 1430, 1431, 1432, 1446, 1447, 1448, 1450, 1451, 1452, 1454, 1462, 1472, 1478, 1485, 1487, 1488, 1510, 1511, 1513, 1514, 1519, 1522, 1523, 1524, 1525, 1526, 1533, 1535, 1537, 1551, 1552, 1567, 1568, 1570, 1572, 1573, 1574, 1597, 1598, 1608, 1636, 1637, 1661, 1669, 1696, 1703, 1709, 1742, 1764, 1776, 1777, 1779, 1786, 1789, 1801, 1816, 1818, 1860, 1863, 1916, 1920, 1972, 2004, 2006, 2008, 2009, 2011, 2013, 2015, 2026, 2032, 2034, 2035, 2037, 2039, 2040, 2041, 2043, 2045, 2046, 2048, 2050, 2054, 2056, 2058, 2059, 2060, 2062, 2068, 2069, 2072, 2073, 2076, 2079, 2090, 2095, 2107], "nvidia": [1, 14, 27, 1016, 1029, 1057, 1063, 1068, 1082, 1083, 1957, 2005, 2037, 2041, 2044, 2050, 2052, 2062, 2072, 2081, 2084, 2100, 2101, 2103], "visual": [1, 61, 1367, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1512, 1513, 1514, 1571, 2005, 2037, 2046, 2052, 2054, 2061, 2077, 2094, 2101, 2103], "nvvp": 1, "timelin": [1, 4, 1381, 1382, 2005, 2061], "load_nvprof": 1, "load": [1, 11, 14, 15, 23, 29, 31, 49, 52, 59, 414, 836, 862, 931, 972, 1006, 1265, 1269, 1276, 1281, 1462, 1519, 1699, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1851, 2005, 2006, 2017, 2018, 2019, 2020, 2026, 2034, 2037, 2045, 2046, 2050, 2052, 2054, 2056, 2067, 2077, 2085, 2096, 2097, 2101, 2103], "repl": [1, 2096], "append": [1, 3, 29, 60, 61, 63, 68, 228, 253, 606, 760, 762, 764, 1050, 1095, 1097, 1360, 1471, 1490, 1521, 1530, 1535, 1537, 1548, 1709, 2007, 2008, 2009, 2034, 2036, 2037, 2048, 2052, 2056, 2057, 2072, 2077, 2102], "size": [1, 2, 3, 7, 11, 18, 19, 22, 23, 27, 29, 32, 33, 35, 44, 49, 50, 52, 55, 61, 63, 64, 69, 71, 72, 77, 137, 207, 241, 253, 254, 312, 314, 320, 338, 444, 445, 446, 448, 486, 492, 497, 498, 499, 512, 514, 516, 519, 522, 543, 544, 545, 565, 580, 582, 583, 584, 586, 587, 605, 606, 616, 617, 679, 689, 690, 692, 694, 695, 696, 698, 719, 727, 728, 734, 740, 741, 742, 744, 745, 755, 763, 765, 766, 767, 768, 778, 784, 785, 786, 795, 858, 865, 877, 878, 880, 892, 905, 906, 908, 909, 910, 911, 912, 913, 932, 940, 941, 943, 950, 952, 953, 954, 955, 956, 959, 963, 966, 972, 994, 1004, 1012, 1018, 1019, 1021, 1061, 1086, 1087, 1093, 1096, 1103, 1105, 1106, 1107, 1108, 1111, 1122, 1123, 1124, 1126, 1127, 1128, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1157, 1159, 1160, 1161, 1168, 1169, 1174, 1180, 1181, 1185, 1191, 1195, 1206, 1223, 1224, 1228, 1229, 1240, 1242, 1262, 1265, 1287, 1296, 1305, 1310, 1318, 1322, 1326, 1329, 1331, 1332, 1333, 1335, 1336, 1338, 1346, 1352, 1353, 1355, 1356, 1360, 1363, 1365, 1366, 1367, 1368, 1371, 1372, 1373, 1374, 1376, 1405, 1407, 1410, 1413, 1415, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1461, 1462, 1464, 1465, 1466, 1467, 1470, 1472, 1473, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1531, 1532, 1534, 1535, 1541, 1542, 1543, 1544, 1545, 1546, 1551, 1559, 1563, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1598, 1603, 1604, 1605, 1608, 1609, 1616, 1617, 1620, 1621, 1625, 1636, 1643, 1650, 1651, 1652, 1661, 1662, 1664, 1667, 1668, 1670, 1677, 1696, 1697, 1698, 1699, 1708, 1709, 1725, 1740, 1750, 1751, 1752, 1753, 1754, 1756, 1758, 1761, 1763, 1765, 1768, 1769, 1779, 1788, 1807, 1808, 1809, 1810, 1812, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1835, 1841, 1846, 1855, 1858, 1876, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1915, 1916, 1919, 1920, 1921, 1935, 1936, 1937, 1942, 1944, 1952, 1953, 1954, 1955, 1956, 1964, 1965, 1967, 1968, 1969, 1970, 2002, 2003, 2005, 2006, 2007, 2009, 2013, 2017, 2019, 2021, 2025, 2026, 2033, 2034, 2035, 2037, 2038, 2039, 2040, 2041, 2043, 2044, 2045, 2050, 2051, 2056, 2057, 2060, 2061, 2062, 2064, 2067, 2072, 2074, 2075, 2077, 2078, 2085, 2088, 2090, 2091, 2092, 2093, 2094, 2097, 2098, 2101, 2103, 2105], "format": [1, 19, 20, 23, 27, 29, 37, 47, 50, 61, 80, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 239, 266, 296, 324, 330, 392, 498, 499, 524, 579, 582, 583, 584, 585, 586, 587, 679, 734, 759, 791, 792, 969, 1050, 1065, 1105, 1106, 1107, 1161, 1177, 1181, 1185, 1262, 1265, 1279, 1308, 1438, 1462, 1470, 1489, 1519, 1535, 1567, 1709, 1716, 1717, 1751, 1753, 1769, 1771, 1829, 1831, 1833, 1851, 1893, 1897, 1902, 1903, 1904, 1905, 1906, 1907, 1916, 2003, 2004, 2006, 2009, 2010, 2015, 2028, 2037, 2039, 2046, 2053, 2054, 2056, 2057, 2061, 2062, 2067, 2068, 2072, 2075, 2077, 2079, 2101, 2103], "arg0": [1, 27, 2054], "arg1": [1, 27, 42, 43, 45, 50, 2054], "repres": [1, 8, 11, 22, 23, 27, 29, 32, 33, 34, 35, 37, 38, 44, 47, 49, 50, 52, 61, 79, 81, 232, 759, 791, 792, 795, 889, 905, 906, 974, 981, 990, 994, 1005, 1037, 1040, 1105, 1126, 1128, 1133, 1135, 1136, 1137, 1138, 1163, 1179, 1192, 1219, 1226, 1254, 1255, 1258, 1261, 1264, 1281, 1282, 1313, 1355, 1423, 1438, 1519, 1525, 1567, 1569, 1571, 1579, 1580, 1581, 1582, 1709, 1722, 1726, 1731, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1750, 1760, 1771, 1795, 1801, 1807, 1809, 1820, 1863, 1902, 1903, 1904, 1906, 1907, 1916, 1920, 1953, 1954, 1960, 1967, 1968, 1987, 2006, 2008, 2009, 2013, 2016, 2017, 2021, 2027, 2034, 2039, 2040, 2043, 2045, 2046, 2049, 2053, 2054, 2056, 2060, 2062, 2063, 2065, 2067, 2072, 2075, 2090, 2091, 2093, 2105, 2107], "order": [1, 3, 5, 27, 28, 29, 31, 33, 45, 49, 52, 53, 58, 60, 61, 149, 190, 207, 232, 312, 314, 316, 320, 330, 401, 486, 487, 679, 791, 792, 801, 854, 876, 893, 895, 914, 924, 925, 939, 951, 962, 1008, 1050, 1061, 1093, 1096, 1097, 1105, 1123, 1125, 1126, 1132, 1144, 1145, 1146, 1147, 1164, 1174, 1219, 1265, 1285, 1296, 1302, 1304, 1311, 1318, 1321, 1322, 1329, 1330, 1333, 1335, 1338, 1367, 1373, 1388, 1405, 1423, 1432, 1438, 1455, 1519, 1520, 1529, 1547, 1548, 1590, 1598, 1625, 1650, 1651, 1652, 1677, 1699, 1709, 1726, 1736, 1750, 1751, 1752, 1753, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1801, 1807, 1810, 1820, 1855, 1858, 1882, 1892, 1920, 1939, 1946, 1948, 1953, 1957, 1963, 1969, 2004, 2005, 2006, 2007, 2009, 2010, 2013, 2024, 2025, 2026, 2027, 2032, 2035, 2037, 2038, 2039, 2040, 2042, 2043, 2046, 2049, 2051, 2054, 2056, 2058, 2059, 2060, 2062, 2064, 2067, 2068, 2069, 2072, 2073, 2075, 2079, 2083, 2085, 2088, 2089, 2090, 2091, 2094, 2097, 2101, 2103], "backend": [1, 14, 43, 48, 50, 52, 740, 741, 742, 791, 792, 832, 855, 856, 859, 861, 862, 908, 914, 972, 981, 1030, 1061, 1105, 1163, 1180, 1185, 1279, 1302, 1309, 1311, 1329, 1381, 1382, 1383, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1578, 1583, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1625, 1664, 1677, 1709, 1771, 1772, 1863, 1958, 1960, 2005, 2007, 2008, 2019, 2022, 2023, 2036, 2037, 2039, 2049, 2050, 2056, 2063, 2065, 2072, 2092, 2094, 2095, 2096, 2097, 2098, 2100, 2109], "side": [1, 14, 27, 44, 47, 49, 50, 57, 61, 63, 66, 485, 767, 768, 771, 772, 773, 965, 1039, 1099, 1121, 1122, 1124, 1127, 1128, 1133, 1135, 1136, 1137, 1138, 1141, 1262, 1263, 1310, 1315, 1326, 1328, 1428, 1429, 1430, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1495, 1496, 1497, 1498, 1499, 1500, 1512, 1513, 1514, 1541, 1542, 1544, 1545, 1546, 1571, 1575, 1576, 1577, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1650, 1651, 1652, 1664, 1795, 1824, 1825, 1855, 1916, 1944, 2004, 2006, 2007, 2009, 2033, 2034, 2037, 2039, 2043, 2067, 2085, 2088, 2101], "creation": [1, 2, 22, 27, 29, 61, 485, 744, 745, 755, 763, 823, 1007, 1163, 1709, 1710, 1731, 1974, 2006, 2010, 2021, 2024, 2034, 2037, 2067, 2069, 2072, 2078, 2090], "warmup": [1, 3, 1050, 2037, 2061, 2088, 2094, 2101], "correl": [1, 33, 45, 990, 1446, 1447, 1448, 1449, 1450, 1451, 1457, 1458, 1459, 1463], "view": [1, 7, 8, 11, 18, 22, 23, 29, 31, 35, 50, 52, 61, 63, 72, 78, 221, 253, 434, 496, 497, 498, 606, 617, 691, 696, 759, 878, 886, 887, 888, 899, 915, 939, 954, 966, 987, 988, 1095, 1096, 1103, 1144, 1145, 1146, 1147, 1163, 1229, 1265, 1321, 1332, 1382, 1439, 1462, 1470, 1489, 1519, 1535, 1571, 1572, 1573, 1574, 1617, 1663, 1709, 1714, 1810, 1842, 1846, 1847, 1851, 1857, 1858, 1888, 1908, 1919, 1931, 1936, 1940, 1952, 1967, 1968, 1970, 2005, 2006, 2007, 2024, 2026, 2027, 2035, 2039, 2042, 2054, 2057, 2064, 2067, 2069, 2072, 2074, 2075, 2078, 2093, 2098, 2100, 2102, 2103], "difficult": [1, 7, 9, 49, 57, 1174, 1969, 2093, 2094, 2099, 2101, 2103], "eas": [1, 61, 2036, 2039, 2044, 2090, 2102], "sequenc": [1, 22, 29, 31, 32, 33, 49, 52, 149, 565, 734, 759, 813, 880, 893, 914, 956, 958, 959, 962, 970, 1010, 1017, 1018, 1021, 1090, 1104, 1106, 1174, 1227, 1228, 1231, 1281, 1321, 1367, 1423, 1433, 1438, 1446, 1455, 1462, 1470, 1489, 1525, 1535, 1548, 1563, 1564, 1565, 1566, 1567, 1580, 1617, 1677, 1726, 1729, 1736, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1765, 1768, 1772, 1787, 1791, 1826, 1828, 1832, 1855, 1913, 1916, 1955, 1969, 1971, 1975, 2002, 2006, 2007, 2008, 2013, 2027, 2037, 2041, 2042, 2054, 2056, 2059, 2060, 2067, 2071, 2078, 2079, 2088, 2090, 2091, 2092, 2094, 2102, 2103], "gener": [1, 2, 3, 7, 8, 14, 22, 23, 27, 33, 37, 38, 42, 45, 49, 52, 53, 54, 62, 63, 68, 72, 83, 152, 153, 172, 257, 285, 376, 420, 453, 480, 607, 679, 920, 942, 972, 974, 1036, 1039, 1047, 1048, 1051, 1052, 1072, 1073, 1075, 1076, 1077, 1105, 1127, 1128, 1163, 1174, 1178, 1181, 1191, 1218, 1223, 1241, 1269, 1275, 1286, 1297, 1302, 1311, 1328, 1329, 1333, 1338, 1358, 1366, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1405, 1454, 1465, 1479, 1563, 1571, 1572, 1581, 1582, 1590, 1616, 1634, 1699, 1724, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1758, 1761, 1765, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1807, 1809, 1812, 1826, 1828, 1830, 1831, 1832, 1834, 1856, 1868, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1921, 1937, 1941, 1958, 1960, 1963, 1969, 1986, 1992, 1993, 1994, 1995, 1997, 1998, 2005, 2006, 2007, 2008, 2009, 2010, 2015, 2019, 2025, 2032, 2034, 2037, 2039, 2041, 2042, 2043, 2045, 2046, 2048, 2052, 2054, 2056, 2057, 2058, 2059, 2061, 2066, 2067, 2068, 2072, 2075, 2077, 2079, 2082, 2084, 2085, 2089, 2090, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2104], "seq": [1, 604, 759, 959, 971, 1367, 1470, 1489, 1525, 1535, 1563, 1565, 1567, 1753, 1951], "n": [1, 3, 27, 29, 32, 33, 35, 37, 42, 45, 50, 61, 228, 259, 405, 464, 465, 485, 685, 688, 689, 690, 734, 757, 759, 780, 877, 932, 938, 940, 941, 943, 950, 952, 956, 962, 963, 964, 965, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1086, 1087, 1097, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1145, 1166, 1169, 1174, 1185, 1191, 1203, 1219, 1223, 1224, 1228, 1262, 1265, 1277, 1281, 1282, 1285, 1286, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1338, 1346, 1355, 1360, 1362, 1367, 1370, 1407, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1457, 1458, 1459, 1461, 1462, 1463, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1478, 1479, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1489, 1491, 1501, 1502, 1503, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1522, 1523, 1524, 1525, 1526, 1528, 1534, 1535, 1537, 1541, 1542, 1543, 1544, 1545, 1546, 1551, 1553, 1554, 1555, 1559, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1590, 1596, 1608, 1609, 1617, 1621, 1625, 1661, 1664, 1666, 1677, 1708, 1709, 1723, 1735, 1744, 1763, 1807, 1808, 1809, 1814, 1819, 1820, 1826, 1832, 1834, 1847, 1855, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1897, 1898, 1914, 1915, 1916, 1920, 1921, 1936, 1937, 1942, 1946, 1948, 1963, 1964, 1965, 1966, 1969, 2007, 2009, 2013, 2025, 2026, 2032, 2034, 2037, 2039, 2041, 2043, 2048, 2059, 2061, 2062, 2063, 2072, 2073, 2077, 2078, 2079, 2091, 2094, 2098], "counter": [1, 27, 915, 926, 1043, 1061, 1455, 2021, 2024, 2034], "increment": [1, 27, 44, 49, 926, 928, 1159, 1228, 1269, 1455, 2006, 2008, 2034, 2054, 2067, 2091], "object": [1, 3, 5, 6, 8, 14, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 37, 44, 46, 47, 49, 50, 52, 60, 61, 63, 65, 87, 205, 208, 414, 602, 792, 793, 800, 854, 861, 880, 890, 891, 892, 900, 905, 906, 932, 934, 939, 972, 1028, 1039, 1080, 1105, 1144, 1156, 1159, 1164, 1165, 1167, 1168, 1169, 1173, 1175, 1181, 1198, 1199, 1251, 1252, 1265, 1272, 1273, 1276, 1277, 1281, 1282, 1297, 1318, 1322, 1335, 1337, 1338, 1358, 1455, 1457, 1458, 1459, 1463, 1481, 1482, 1483, 1519, 1529, 1559, 1709, 1727, 1742, 1751, 1752, 1755, 1756, 1757, 1770, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1851, 1924, 1925, 1929, 1958, 1961, 1962, 1981, 2004, 2008, 2009, 2010, 2013, 2017, 2019, 2020, 2024, 2028, 2034, 2036, 2037, 2039, 2040, 2041, 2043, 2045, 2048, 2050, 2051, 2052, 2054, 2056, 2058, 2061, 2062, 2064, 2065, 2066, 2067, 2069, 2074, 2075, 2077, 2079, 2089, 2091, 2092, 2093, 2099, 2102, 2104, 2105, 2107], "stash": [1, 5, 2037, 2039, 2060], "associ": [1, 8, 9, 27, 29, 38, 46, 49, 50, 52, 897, 898, 972, 1013, 1064, 1065, 1067, 1214, 1227, 1228, 1265, 1315, 1326, 1328, 1337, 1438, 1519, 1529, 1609, 1709, 1724, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1876, 1878, 2006, 2009, 2015, 2025, 2026, 2034, 2043, 2046, 2049, 2051, 2054, 2059, 2060, 2061, 2067, 2068, 2074, 2075, 2078, 2091, 2093, 2094, 2103, 2105, 2106], "tell": [1, 7, 61, 495, 1193, 1194, 1203, 1266, 1273, 1337, 1772, 2006, 2013, 2016, 2034, 2039, 2040, 2059, 2091, 2092, 2105], "top": [1, 3, 7, 8, 12, 22, 29, 32, 33, 37, 50, 52, 56, 61, 746, 932, 1431, 1432, 1454, 1478, 1485, 1510, 1526, 1569, 1572, 1625, 1731, 1735, 1737, 1883, 1939, 1959, 2010, 2013, 2016, 2024, 2039, 2054, 2058, 2091, 2092, 2100, 2101], "m": [1, 4, 8, 23, 27, 32, 33, 41, 45, 49, 61, 685, 688, 689, 690, 719, 727, 728, 737, 738, 739, 740, 741, 742, 744, 745, 755, 757, 763, 813, 840, 860, 861, 862, 940, 952, 956, 960, 1118, 1172, 1228, 1263, 1265, 1270, 1272, 1276, 1277, 1283, 1286, 1297, 1305, 1311, 1312, 1313, 1314, 1318, 1319, 1320, 1322, 1323, 1324, 1329, 1330, 1331, 1332, 1338, 1355, 1356, 1360, 1370, 1405, 1407, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1466, 1467, 1468, 1469, 1473, 1474, 1475, 1476, 1477, 1480, 1481, 1482, 1483, 1486, 1487, 1488, 1505, 1506, 1508, 1509, 1512, 1513, 1514, 1518, 1519, 1526, 1527, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1570, 1572, 1573, 1574, 1575, 1576, 1577, 1664, 1666, 1709, 1723, 1725, 1729, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1757, 1758, 1761, 1807, 1808, 1809, 1819, 1826, 1855, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1897, 1898, 1916, 1920, 1921, 1937, 1944, 2006, 2007, 2008, 2009, 2017, 2037, 2039, 2041, 2043, 2046, 2048, 2051, 2062, 2072, 2083, 2084, 2087, 2094], "By": [1, 2, 3, 5, 14, 22, 27, 32, 36, 41, 49, 52, 61, 444, 445, 446, 447, 448, 880, 972, 994, 1010, 1053, 1055, 1088, 1100, 1123, 1125, 1126, 1127, 1128, 1136, 1137, 1138, 1164, 1165, 1167, 1168, 1174, 1219, 1227, 1228, 1269, 1318, 1329, 1337, 1366, 1371, 1409, 1431, 1432, 1433, 1434, 1435, 1452, 1454, 1472, 1478, 1481, 1482, 1483, 1484, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1559, 1568, 1597, 1598, 1608, 1637, 1661, 1669, 1725, 1761, 1809, 1820, 1841, 1895, 1942, 1969, 1975, 2004, 2008, 2013, 2016, 2034, 2037, 2039, 2041, 2042, 2046, 2048, 2049, 2051, 2054, 2056, 2058, 2066, 2067, 2072, 2079, 2091, 2092, 2094, 2097, 2099, 2103], "compar": [1, 3, 5, 14, 22, 49, 52, 61, 84, 693, 865, 876, 914, 915, 916, 1061, 1109, 1110, 1133, 1134, 1135, 1139, 1140, 1141, 1142, 1151, 1152, 1181, 1208, 1222, 1254, 1290, 1354, 1364, 1369, 1416, 1525, 1709, 1762, 1953, 2009, 2021, 2037, 2039, 2043, 2049, 2052, 2062, 2063, 2067, 2072, 2077, 2079, 2082, 2083, 2088, 2095, 2100], "down": [1, 7, 14, 22, 33, 35, 42, 43, 45, 61, 778, 1061, 1100, 1147, 1153, 1275, 1311, 1636, 1820, 1848, 2039, 2045, 2048, 2056, 2067, 2069, 2072, 2077, 2097, 2103], "irrelev": [1, 3, 2010], "simpli": [1, 3, 14, 22, 27, 29, 32, 33, 37, 45, 49, 60, 61, 863, 1163, 1252, 1263, 1427, 1456, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1863, 2006, 2008, 2034, 2040, 2043, 2046, 2047, 2061, 2072, 2090, 2091, 2094, 2099], "earlier": [1, 6, 52, 1716, 1717, 1920, 2034, 2037, 2041, 2042, 2045, 2051, 2056, 2061], "hand": [1, 4, 52, 57, 61, 965, 1099, 1105, 1263, 1310, 1315, 1326, 1328, 1427, 1529, 1548, 1944, 1957, 2006, 2008, 2009, 2034, 2043, 2046, 2048, 2051, 2059, 2072, 2091, 2093, 2094], "underwai": [1, 1045, 2037], "up": [1, 6, 7, 8, 9, 14, 22, 23, 27, 31, 33, 35, 37, 41, 43, 44, 47, 48, 49, 52, 55, 61, 778, 784, 890, 905, 906, 928, 972, 1047, 1048, 1050, 1088, 1105, 1134, 1135, 1140, 1142, 1147, 1163, 1204, 1256, 1269, 1275, 1278, 1279, 1324, 1423, 1438, 1465, 1525, 1565, 1567, 1571, 1572, 1590, 1616, 1625, 1636, 1696, 1709, 1716, 1717, 1790, 1826, 1848, 1953, 1954, 2004, 2006, 2008, 2016, 2021, 2024, 2025, 2026, 2034, 2035, 2036, 2037, 2041, 2042, 2043, 2044, 2046, 2049, 2056, 2059, 2060, 2061, 2062, 2067, 2068, 2079, 2088, 2091, 2092, 2093, 2099, 2101, 2103, 2105], "given": [1, 2, 3, 7, 9, 14, 22, 23, 27, 28, 29, 31, 32, 33, 35, 42, 44, 47, 49, 52, 58, 60, 61, 149, 218, 312, 314, 316, 320, 325, 376, 397, 401, 471, 472, 473, 474, 475, 477, 512, 514, 516, 583, 584, 603, 606, 679, 692, 694, 695, 697, 698, 734, 759, 778, 784, 791, 792, 793, 794, 798, 799, 801, 819, 823, 836, 839, 854, 858, 865, 876, 889, 891, 893, 898, 900, 901, 903, 905, 906, 908, 910, 911, 912, 913, 920, 926, 928, 938, 939, 942, 943, 946, 954, 958, 959, 964, 965, 966, 971, 972, 988, 990, 993, 994, 996, 998, 1002, 1004, 1007, 1008, 1010, 1011, 1012, 1016, 1024, 1025, 1028, 1032, 1033, 1049, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1080, 1081, 1082, 1083, 1090, 1092, 1097, 1105, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1145, 1162, 1172, 1173, 1179, 1181, 1183, 1184, 1185, 1186, 1192, 1214, 1232, 1262, 1265, 1273, 1281, 1282, 1287, 1291, 1301, 1303, 1304, 1313, 1315, 1321, 1329, 1338, 1345, 1347, 1348, 1349, 1350, 1353, 1363, 1365, 1367, 1368, 1371, 1392, 1394, 1395, 1402, 1413, 1423, 1431, 1432, 1438, 1446, 1447, 1448, 1450, 1451, 1452, 1454, 1455, 1461, 1462, 1466, 1467, 1470, 1478, 1489, 1511, 1515, 1516, 1517, 1519, 1521, 1523, 1524, 1526, 1528, 1530, 1535, 1548, 1554, 1568, 1569, 1572, 1573, 1574, 1590, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1616, 1617, 1620, 1621, 1625, 1636, 1661, 1677, 1692, 1693, 1696, 1697, 1698, 1702, 1703, 1724, 1725, 1750, 1757, 1758, 1761, 1764, 1765, 1771, 1797, 1800, 1802, 1804, 1807, 1812, 1817, 1820, 1821, 1822, 1835, 1841, 1846, 1857, 1858, 1863, 1888, 1892, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1913, 1916, 1919, 1921, 1931, 1932, 1937, 1939, 1941, 1951, 1953, 1955, 1957, 1961, 1974, 1975, 1976, 1978, 1981, 1983, 1984, 2000, 2001, 2004, 2005, 2006, 2009, 2013, 2015, 2016, 2020, 2024, 2027, 2028, 2032, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2045, 2046, 2050, 2051, 2054, 2056, 2058, 2061, 2062, 2067, 2068, 2071, 2072, 2073, 2074, 2077, 2079, 2083, 2087, 2091, 2093, 2094, 2102, 2103, 2104], "nonzero": [1, 52, 1191, 1262, 1347, 1349, 1350, 1355, 1972, 2007, 2013, 2017, 2057, 2090, 2093, 2098], "themselv": [1, 9, 33, 44, 52, 792, 841, 1939, 2037, 2059, 2104], "later": [1, 2, 3, 7, 21, 23, 27, 29, 52, 60, 61, 87, 485, 744, 745, 755, 763, 931, 1039, 1190, 1337, 1489, 1512, 1513, 1514, 1535, 1549, 1650, 1651, 1652, 1680, 1709, 1920, 2006, 2034, 2036, 2038, 2046, 2051, 2061, 2068, 2069, 2085, 2091, 2099], "origin": [1, 5, 11, 12, 18, 22, 23, 27, 29, 37, 49, 50, 52, 55, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 205, 208, 220, 485, 544, 602, 606, 616, 679, 759, 796, 837, 838, 854, 857, 858, 957, 962, 1008, 1125, 1126, 1128, 1132, 1136, 1137, 1138, 1144, 1162, 1172, 1240, 1262, 1273, 1277, 1278, 1281, 1282, 1359, 1373, 1423, 1427, 1439, 1454, 1455, 1470, 1549, 1559, 1608, 1680, 1716, 1717, 1723, 1724, 1725, 1726, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1750, 1753, 1756, 1758, 1759, 1761, 1771, 1786, 1801, 1810, 1846, 1857, 1892, 1908, 1942, 1953, 1954, 2006, 2009, 2015, 2024, 2026, 2034, 2037, 2039, 2041, 2042, 2045, 2048, 2049, 2051, 2056, 2059, 2060, 2062, 2063, 2071, 2072, 2074, 2082, 2083, 2089, 2091, 2092, 2093, 2094, 2095, 2097, 2101, 2102, 2103, 2104], "did": [1, 7, 8, 27, 44, 1194, 1412, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 2008, 2009, 2043, 2051, 2059, 2091, 2096, 2105], "relationship": [1, 9, 41, 49, 61, 969, 1219, 1569, 2034, 2037, 2051, 2059, 2093], "conceptu": [1, 3, 2034, 2040, 2069, 2092], "tag": [1, 3, 7, 27, 49, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 981, 1337, 2004, 2005, 2013, 2045, 2051, 2059, 2062, 2077], "eventu": [1, 7, 44, 52, 979, 2004, 2060, 2093], "itt": [1, 2061], "intel": [1, 4, 2005, 2052, 2080, 2100, 2109], "r": [1, 33, 58, 149, 889, 891, 893, 905, 906, 914, 919, 960, 971, 990, 1105, 1164, 1166, 1169, 1174, 1183, 1206, 1209, 1219, 1277, 1295, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1315, 1317, 1324, 1326, 1328, 1329, 1338, 1461, 1462, 1471, 1531, 1532, 1551, 1616, 1617, 1667, 1668, 1723, 1788, 1819, 1969, 2006, 2007, 2008, 2034, 2036, 2039, 2043, 2052, 2072, 2075, 2077, 2103], "instrument": [1, 3, 23, 1382, 2005, 2045, 2083], "technologi": [1, 49, 2005, 2054, 2055, 2084], "applic": [1, 2, 9, 33, 44, 487, 798, 809, 810, 811, 812, 900, 903, 905, 972, 1029, 1168, 1181, 1191, 1377, 1454, 1455, 1565, 1567, 1608, 1709, 1957, 1982, 2005, 2013, 2016, 2027, 2034, 2036, 2037, 2038, 2039, 2044, 2045, 2046, 2050, 2056, 2058, 2062, 2067, 2068, 2069, 2072, 2078, 2094, 2105], "across": [1, 8, 14, 19, 22, 23, 27, 29, 31, 32, 35, 45, 52, 57, 61, 616, 734, 818, 874, 933, 1021, 1060, 1061, 1105, 1119, 1174, 1276, 1281, 1367, 1432, 1455, 1465, 1507, 1525, 1527, 1559, 1571, 1595, 1598, 1627, 1643, 1692, 1709, 1736, 1740, 1764, 1851, 1969, 2005, 2006, 2021, 2025, 2027, 2034, 2038, 2041, 2045, 2046, 2048, 2049, 2050, 2058, 2060, 2063, 2067, 2068, 2074, 2077, 2083, 2088, 2090, 2094, 2103], "tool": [1, 4, 8, 9, 18, 27, 45, 50, 61, 861, 931, 1382, 1895, 2004, 2005, 2006, 2008, 2036, 2037, 2052, 2056, 2059, 2061, 2083, 2091, 2092, 2094, 2097, 2101, 2103, 2105], "With": [1, 18, 22, 27, 33, 52, 60, 738, 739, 740, 741, 742, 784, 1061, 1126, 1127, 1128, 1136, 1137, 1138, 1282, 1433, 1434, 1435, 1447, 1448, 1450, 1451, 1464, 1481, 1482, 1483, 1559, 1570, 1572, 1601, 1604, 1636, 1662, 1696, 1787, 1830, 2010, 2034, 2037, 2039, 2062, 2067, 2072, 2077, 2087, 2091, 2095, 2100, 2103], "abl": [1, 2, 7, 8, 18, 27, 29, 44, 49, 57, 485, 1163, 1180, 1263, 1276, 1563, 2006, 2017, 2025, 2034, 2039, 2040, 2042, 2051, 2056, 2059, 2062, 2067, 2072, 2079, 2089, 2090, 2091, 2093, 2094, 2095, 2099, 2103, 2105], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 15, 19, 49, 334, 740, 741, 742, 900, 901, 905, 914, 926, 1174, 1826, 1969, 2034, 2037, 2038, 2039, 2053, 2054, 2067, 2068, 2084, 2094], "traceback": [1, 18, 37, 45, 49, 60, 61, 915, 1181, 1250, 1895, 2008, 2009, 2010, 2017, 2024, 2027, 2039, 2050, 2072, 2079, 2103, 2105], "fail": [1, 7, 19, 27, 29, 35, 36, 37, 42, 43, 44, 45, 48, 49, 60, 61, 63, 68, 72, 83, 485, 919, 920, 1008, 1061, 1191, 1266, 1273, 1276, 1295, 1324, 1329, 1337, 1338, 1355, 1770, 2009, 2011, 2024, 2034, 2037, 2039, 2048, 2049, 2052, 2056, 2059, 2067, 2075, 2089, 2090, 2091, 2092, 2094, 2095, 2103, 2105], "test": [1, 3, 14, 18, 27, 42, 44, 45, 61, 63, 71, 72, 692, 698, 972, 1122, 1124, 1125, 1130, 1131, 1136, 1137, 1138, 1140, 1142, 1181, 1189, 1195, 1198, 1199, 1205, 1251, 1252, 1256, 1257, 1259, 1260, 1771, 1884, 2005, 2006, 2010, 2021, 2024, 2034, 2042, 2043, 2050, 2056, 2058, 2061, 2077, 2083, 2093, 2103, 2104], "slow": [1, 919, 1275, 1279, 1295, 1296, 1714, 1715, 1757, 1953, 2043, 2048, 2077, 2090, 2093, 2103], "import": [1, 2, 3, 5, 7, 9, 12, 14, 17, 18, 19, 22, 23, 27, 28, 29, 31, 32, 33, 34, 36, 38, 41, 42, 47, 49, 50, 52, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 679, 733, 740, 741, 742, 771, 772, 773, 791, 860, 861, 862, 915, 922, 924, 951, 958, 994, 1156, 1159, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1170, 1172, 1262, 1263, 1266, 1268, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1281, 1282, 1283, 1317, 1318, 1321, 1322, 1335, 1367, 1484, 1519, 1579, 1583, 1709, 1727, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1752, 1753, 1754, 1755, 1756, 1757, 1764, 1789, 1790, 1813, 1955, 2006, 2008, 2009, 2010, 2013, 2017, 2021, 2024, 2027, 2033, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2045, 2046, 2048, 2049, 2050, 2051, 2054, 2055, 2056, 2062, 2065, 2067, 2068, 2069, 2072, 2075, 2077, 2078, 2079, 2083, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2094, 2096, 2101, 2102, 2103, 2104, 2109], "myfunc": [1, 2040], "inp": [1, 12, 22, 27, 61, 895, 898, 899, 1571, 1709, 2098, 2101, 2104], "clone": [1, 15, 22, 52, 63, 87, 253, 447, 900, 901, 904, 905, 906, 915, 916, 917, 922, 924, 925, 954, 1269, 1461, 1695, 1935, 1944, 2007, 2024, 2027, 2051, 2057, 2072, 2074, 2075, 2079, 2088, 2098], "runtimeerror": [1, 14, 27, 31, 57, 61, 83, 87, 582, 696, 900, 901, 905, 915, 953, 1153, 1250, 1265, 1295, 1296, 1297, 1305, 1306, 1307, 1309, 1313, 1319, 1326, 1331, 1332, 1358, 1405, 1519, 1770, 1857, 1895, 1957, 2006, 2008, 2009, 2025, 2027, 2033, 2035, 2041, 2050, 2052, 2056, 2062, 2066, 2072, 2075, 2088], "run_fn": [1, 5, 857, 863], "recent": [1, 7, 8, 48, 60, 915, 1250, 1895, 2008, 2009, 2017, 2027, 2039, 2049, 2050, 2072, 2079, 2100, 2103], "last": [1, 5, 6, 11, 22, 23, 28, 31, 32, 33, 35, 44, 50, 60, 61, 314, 616, 691, 759, 877, 915, 939, 941, 950, 956, 966, 1047, 1088, 1093, 1097, 1122, 1124, 1127, 1128, 1130, 1131, 1134, 1135, 1137, 1138, 1140, 1142, 1144, 1223, 1224, 1228, 1242, 1250, 1262, 1287, 1321, 1324, 1329, 1366, 1371, 1423, 1428, 1429, 1430, 1436, 1454, 1462, 1464, 1470, 1489, 1491, 1506, 1526, 1529, 1533, 1534, 1535, 1548, 1564, 1565, 1571, 1596, 1617, 1626, 1639, 1663, 1664, 1708, 1709, 1710, 1716, 1717, 1763, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1846, 1855, 1863, 1892, 1895, 1902, 1903, 1904, 1906, 1907, 1908, 1916, 1920, 1937, 1939, 1942, 1967, 1968, 2008, 2009, 2017, 2021, 2025, 2027, 2034, 2037, 2039, 2043, 2050, 2054, 2056, 2059, 2060, 2072, 2078, 2079, 2089, 2091, 2097, 2103], "stdin": [1, 27, 915, 1895, 2017, 2027, 2039, 2050, 2072], "instal": [1, 3, 14, 15, 27, 61, 2004, 2046, 2047, 2054, 2055, 2056, 2059, 2067, 2077, 2085, 2089, 2090, 2091, 2092, 2099], "_tensor": [1, 153], "py": [1, 4, 14, 18, 27, 31, 33, 36, 43, 45, 50, 52, 61, 85, 860, 1709, 2004, 2006, 2009, 2015, 2038, 2043, 2045, 2048, 2056, 2059, 2061, 2062, 2068, 2085, 2087, 2089, 2090, 2091, 2092, 2093, 2094, 2096, 2097, 2100, 2102, 2103, 2105], "93": [1, 616, 1087], "retain_graph": [1, 149, 893, 914, 924, 925, 1174, 1969, 2007, 2033, 2034, 2039, 2067], "90": [1, 1089, 1805, 1847, 2013], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 14, 27, 42, 44, 2004, 2037, 2061, 2097], "53": [1, 480], "44": [1, 320, 444, 1108, 1430, 1488, 1514, 1757, 2092], "set_detect_anomali": 1, "behaviour": [1, 692, 693, 698, 1625, 1664, 1801, 1869, 2004, 2049], "interpos": [1, 2039], "grad_fn": [1, 149, 334, 487, 880, 893, 908, 909, 910, 911, 912, 913, 922, 924, 925, 1162, 1724, 1897, 2034, 2039, 2046, 2051], "node": [1, 27, 31, 35, 37, 43, 44, 49, 52, 61, 63, 72, 78, 81, 679, 818, 819, 820, 823, 824, 825, 900, 935, 1050, 1172, 1181, 1203, 1280, 1438, 1455, 1709, 1771, 2019, 2037, 2054, 2056, 2059, 2060, 2067, 2068, 2069, 2081, 2083, 2090, 2091, 2093, 2094, 2100, 2102, 2103], "grad_mod": [1, 915, 916, 917, 2007], "least": [1, 5, 6, 8, 23, 29, 33, 43, 44, 52, 259, 401, 696, 943, 1093, 1095, 1096, 1105, 1146, 1147, 1157, 1180, 1219, 1227, 1228, 1262, 1288, 1311, 1338, 1360, 1409, 1423, 1709, 1751, 2004, 2009, 2026, 2032, 2034, 2035, 2037, 2041, 2042, 2060, 2063, 2069, 2072, 2073, 2074, 2079, 2094, 2096, 2103], "intermediari": [1, 14, 33, 900, 903, 905, 2034, 2043, 2091, 2094], "access": [1, 9, 18, 22, 27, 29, 49, 50, 60, 63, 65, 79, 487, 556, 733, 900, 903, 905, 906, 938, 1014, 1265, 1268, 1281, 1328, 1423, 1519, 1699, 1711, 1712, 1724, 1729, 1751, 1761, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1988, 2005, 2006, 2007, 2009, 2010, 2013, 2019, 2022, 2023, 2024, 2026, 2027, 2034, 2037, 2041, 2043, 2045, 2046, 2054, 2067, 2072, 2075, 2076, 2078, 2085, 2088, 2090, 2091, 2092, 2093, 2094, 2096, 2099, 2107], "isinst": [1, 22, 33, 61, 922, 924, 925, 1252, 1263, 2007, 2009, 2034, 2039, 2046, 2059, 2072, 2094, 2102, 2103], "dir": [1, 1047, 1771, 2004, 2009, 2059], "__call__": [1, 1265, 1519, 2091], "__class__": [1, 63], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 2010], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 2010], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 2009], "__ne__": 1, "__new__": [1, 2008, 2010], "__reduce__": [1, 2059], "__reduce_ex__": 1, "__repr__": [1, 3, 2039], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 61, 2007, 2009], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 2034], "metadata": [1, 3, 12, 29, 37, 38, 49, 63, 71, 72, 926, 986, 1337, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1851, 2013, 2017, 2027, 2034, 2039, 2040, 2051, 2054, 2059, 2061, 2067, 2068, 2072, 2077, 2093, 2102], "next_funct": 1, "register_prehook": [1, 2034], "allclos": [1, 57, 58, 61, 919, 920, 1047, 1127, 1128, 1134, 1135, 1163, 1164, 1166, 1167, 1168, 1169, 1173, 1174, 1313, 1315, 1326, 1328, 1331, 1332, 1357, 1729, 1756, 1819, 1969, 2007, 2013, 2040, 2057, 2072], "pack": [1, 31, 737, 738, 739, 740, 741, 742, 744, 745, 759, 780, 1281, 1282, 1357, 1455, 1470, 1489, 1535, 1750, 1751, 1752, 1753, 2007, 2019, 2027, 2034, 2041, 2052, 2062, 2091], "unpack": [1, 63, 68, 69, 759, 896, 899, 1281, 1313, 1357, 1455, 1753, 1755, 1762, 1772, 2009, 2010, 2034, 2039, 2041], "hook": [1, 28, 31, 52, 486, 487, 747, 756, 900, 903, 905, 924, 925, 928, 1050, 1265, 1455, 1519, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1725, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1742, 1747, 1758, 1761, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 2005, 2028, 2038, 2039, 2045, 2053, 2054, 2059, 2062, 2092, 2093, 2094, 2095], "common": [1, 3, 8, 22, 35, 44, 57, 63, 80, 85, 684, 792, 865, 945, 948, 953, 989, 1100, 1105, 1150, 1151, 1152, 1153, 1191, 1207, 1288, 1337, 1404, 1433, 1434, 1435, 1438, 1559, 1607, 1700, 1701, 1703, 1704, 1705, 1706, 1707, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1839, 1851, 1917, 1960, 2005, 2009, 2014, 2026, 2034, 2037, 2039, 2040, 2041, 2046, 2048, 2051, 2056, 2059, 2071, 2072, 2073, 2076, 2079, 2089, 2090, 2094, 2099, 2101, 2102, 2103, 2105], "trade": [1, 5, 8, 52, 1329, 1432, 1863, 2036, 2041, 2063], "leav": [1, 8, 35, 45, 149, 893, 1177, 1270, 1283, 1727, 1730, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1911, 2006, 2008, 2009, 2017, 2034, 2037, 2054, 2059, 2063, 2091], "especi": [1, 9, 11, 22, 27, 50, 61, 253, 954, 972, 982, 1695, 2008, 2017, 2034, 2039, 2040, 2049, 2051, 2062, 2067, 2072, 2088, 2093, 2094, 2096], "notic": [1, 12, 27, 50, 62, 688, 1125, 1139, 1178, 1360, 1370, 1431, 1572, 1642, 1792, 1793, 1798, 1799, 1805, 1953, 2005, 2006, 2034, 2072, 2091, 2094, 2097, 2099, 2101], "fit": [1, 9, 36, 56, 57, 498, 932, 1262, 1779, 1841, 2037, 2054, 2060, 2079, 2103], "evalu": [1, 4, 8, 9, 31, 33, 49, 55, 61, 692, 698, 797, 863, 919, 1061, 1169, 1170, 1181, 1201, 1202, 1204, 1265, 1423, 1427, 1433, 1434, 1435, 1456, 1473, 1481, 1482, 1483, 1491, 1519, 1533, 1538, 1559, 1669, 1692, 1727, 1779, 1795, 1826, 2009, 2010, 2039, 2046, 2053, 2054, 2072, 2081, 2084, 2090, 2092, 2093], "saved_tensors_hook": [1, 900, 903, 905, 2034], "pack_hook": [1, 2034], "unpack_hook": [1, 2034], "pair": [1, 27, 29, 32, 33, 44, 47, 49, 616, 734, 865, 939, 960, 994, 1139, 1179, 1181, 1279, 1329, 1367, 1511, 1520, 1525, 1529, 1666, 1788, 1835, 2008, 2009, 2015, 2025, 2034, 2037, 2060, 2067, 2068, 2069, 2077, 2079, 2083, 2094, 2101], "retriev": [1, 22, 23, 27, 31, 35, 44, 61, 87, 536, 889, 890, 905, 906, 1197, 1461, 1465, 1571, 1616, 1709, 1751, 1771, 1895, 2027, 2034, 2045, 2056, 2059, 2060, 2067, 2068, 2069, 2085, 2092, 2105], "everytim": 1, "store": [1, 3, 5, 14, 18, 23, 29, 35, 45, 49, 50, 52, 61, 325, 331, 397, 685, 821, 824, 890, 905, 952, 1017, 1019, 1021, 1183, 1209, 1265, 1271, 1273, 1276, 1296, 1307, 1308, 1309, 1338, 1343, 1355, 1433, 1434, 1435, 1461, 1519, 1548, 1709, 1723, 1726, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1750, 1863, 1900, 2004, 2005, 2006, 2017, 2026, 2027, 2028, 2038, 2039, 2040, 2041, 2045, 2054, 2059, 2062, 2067, 2068, 2069, 2072, 2074, 2077, 2078, 2083, 2085, 2091, 2092, 2093, 2096], "content": [1, 3, 7, 29, 37, 49, 50, 61, 900, 903, 905, 1273, 1276, 1296, 1307, 1309, 1314, 1327, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1911, 1941, 1962, 2004, 2009, 2020, 2024, 2034, 2037, 2048, 2067, 2076, 2077, 2078, 2099, 2103], "equal": [1, 12, 23, 27, 33, 44, 45, 47, 49, 61, 259, 498, 544, 616, 679, 693, 694, 695, 738, 739, 740, 741, 742, 759, 767, 768, 819, 820, 821, 824, 861, 876, 941, 948, 950, 961, 962, 983, 994, 1019, 1021, 1075, 1094, 1110, 1149, 1164, 1165, 1177, 1179, 1181, 1191, 1192, 1205, 1208, 1223, 1224, 1226, 1227, 1228, 1250, 1254, 1290, 1311, 1324, 1328, 1331, 1332, 1355, 1356, 1367, 1385, 1416, 1420, 1421, 1422, 1424, 1425, 1426, 1431, 1432, 1438, 1447, 1448, 1450, 1451, 1455, 1462, 1465, 1466, 1467, 1470, 1472, 1489, 1524, 1525, 1533, 1535, 1571, 1580, 1593, 1594, 1598, 1601, 1604, 1616, 1617, 1620, 1621, 1627, 1634, 1709, 1751, 1754, 1807, 1820, 1876, 1877, 1882, 1908, 1916, 1936, 1952, 1958, 1972, 2007, 2010, 2016, 2025, 2026, 2027, 2034, 2035, 2043, 2049, 2057, 2058, 2060, 2073, 2077, 2079, 2091, 2102], "term": [1, 8, 9, 33, 44, 50, 61, 557, 733, 762, 791, 962, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1136, 1137, 1138, 1141, 1153, 1181, 1188, 1297, 1423, 1431, 1472, 1479, 1489, 1490, 1524, 1533, 1551, 1622, 1634, 1669, 1681, 1709, 1723, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1839, 1875, 1883, 2005, 2009, 2033, 2034, 2039, 2040, 2041, 2043, 2048, 2056, 2058, 2059, 2062, 2068, 2072, 2084, 2090, 2091, 2094], "mulbackward0": [1, 909, 912, 913, 2039], "inplac": [1, 29, 49, 55, 57, 61, 63, 71, 72, 754, 757, 775, 777, 779, 790, 796, 813, 837, 838, 839, 857, 858, 863, 900, 901, 905, 926, 972, 1163, 1265, 1427, 1437, 1456, 1457, 1458, 1459, 1460, 1463, 1475, 1476, 1477, 1505, 1518, 1519, 1538, 1539, 1540, 1547, 1549, 1562, 1591, 1599, 1610, 1611, 1612, 1613, 1614, 1618, 1629, 1630, 1631, 1640, 1656, 1671, 1672, 1675, 1678, 1680, 1690, 1702, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1957, 2007, 2016, 2034, 2039, 2056, 2083, 2098, 2102], "lead": [1, 5, 7, 21, 27, 34, 50, 52, 58, 61, 900, 901, 905, 908, 910, 914, 920, 974, 1156, 1174, 1181, 1296, 1489, 1535, 1551, 1905, 1911, 1969, 2009, 2026, 2027, 2034, 2036, 2038, 2039, 2040, 2042, 2048, 2049, 2052, 2058, 2059, 2062, 2067, 2072, 2077, 2078, 2088, 2095], "undefin": [1, 27, 34, 37, 318, 470, 616, 878, 900, 904, 905, 906, 919, 920, 948, 956, 1108, 1158, 1159, 1431, 1770, 1813, 2013, 2034, 2037, 2039, 2040, 2050, 2067], "recurs": [1, 33, 49, 52, 61, 974, 978, 1097, 1188, 1205, 1265, 1277, 1279, 1519, 1716, 1717, 1793, 2008, 2039, 2046, 2059, 2067, 2091, 2092, 2094, 2095], "inner": [1, 3, 52, 53, 58, 814, 816, 908, 1088, 1164, 1168, 1173, 1186, 1942, 2007, 2039, 2057, 2067, 2083], "save_on_cpu": 1, "pin_memori": [1, 22, 63, 68, 72, 73, 74, 444, 445, 446, 447, 448, 1106, 1108, 1157, 1828, 1832, 1834, 1935, 2006, 2007, 2027, 2037, 2039, 2057, 2074, 2098], "within": [1, 5, 9, 12, 22, 23, 27, 31, 32, 33, 44, 45, 47, 49, 50, 52, 60, 61, 78, 79, 87, 487, 878, 895, 919, 920, 926, 972, 986, 1011, 1088, 1185, 1265, 1269, 1358, 1392, 1428, 1429, 1430, 1438, 1457, 1458, 1459, 1463, 1465, 1512, 1513, 1514, 1519, 1525, 1559, 1571, 1625, 1635, 1650, 1651, 1652, 1709, 1727, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1741, 1743, 1744, 1745, 1746, 1747, 1824, 1825, 1855, 1876, 1956, 1960, 1976, 2006, 2008, 2009, 2021, 2024, 2032, 2036, 2037, 2039, 2044, 2045, 2046, 2049, 2056, 2058, 2059, 2062, 2065, 2066, 2067, 2068, 2077, 2085, 2090, 2091, 2094, 2096, 2102, 2103], "move": [1, 5, 7, 8, 9, 14, 27, 29, 52, 59, 61, 523, 588, 820, 1125, 1188, 1265, 1273, 1332, 1337, 1373, 1433, 1434, 1435, 1492, 1493, 1494, 1519, 1559, 1664, 1711, 1712, 1787, 2008, 2019, 2020, 2024, 2026, 2037, 2040, 2041, 2046, 2047, 2048, 2051, 2058, 2059, 2060, 2062, 2067, 2074, 2075, 2079, 2094, 2103], "copi": [1, 7, 11, 22, 23, 27, 29, 35, 42, 49, 52, 56, 57, 61, 189, 195, 205, 208, 314, 401, 447, 457, 462, 470, 492, 498, 579, 580, 581, 582, 602, 616, 791, 813, 837, 838, 879, 880, 898, 915, 916, 917, 939, 961, 969, 972, 1017, 1018, 1144, 1145, 1146, 1147, 1149, 1163, 1181, 1265, 1277, 1337, 1338, 1415, 1455, 1465, 1519, 1529, 1571, 1709, 1750, 1760, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1836, 1842, 1848, 1935, 1944, 1950, 2006, 2007, 2017, 2024, 2027, 2034, 2035, 2037, 2039, 2042, 2048, 2057, 2059, 2060, 2061, 2062, 2067, 2072, 2074, 2075, 2076, 2078, 2083, 2093, 2094, 2096, 2098, 2102], "pin": [1, 208, 336, 444, 445, 446, 447, 448, 462, 579, 602, 1106, 1108, 1157, 1265, 1519, 1750, 1828, 1832, 1834, 1935, 2005, 2027, 2074], "asynchron": [1, 3, 4, 29, 60, 195, 208, 579, 602, 1030, 1265, 1268, 1284, 1519, 2005, 2010, 2036, 2038, 2067, 2074, 2077, 2101], "prod_1": 1, "prod_2": 1, "del": [1, 485, 2010, 2024, 2039, 2041], "illustr": [1, 2009, 2033, 2039, 2072, 2085, 2088, 2097], "aliv": [1, 5, 22, 35, 44, 1008, 2034, 2037, 2041, 2048, 2067, 2068, 2069], "live": [1, 31, 485, 1047, 1050, 1265, 1519, 2006, 2037, 2041, 2042, 2067, 2069, 2088, 2091, 2093, 2105], "releas": [1, 7, 21, 27, 44, 47, 56, 61, 512, 686, 962, 963, 1004, 1005, 1012, 1029, 1039, 1040, 1043, 1047, 1048, 1050, 1061, 1210, 1262, 1265, 1296, 1307, 1309, 1310, 1311, 1314, 1327, 1355, 1356, 1377, 1458, 1489, 1519, 1535, 1650, 1651, 1652, 1764, 1819, 1835, 1851, 1916, 1920, 1944, 1982, 2004, 2005, 2008, 2021, 2024, 2034, 2036, 2037, 2044, 2049, 2050, 2051, 2052, 2056, 2062, 2067, 2078, 2079, 2085, 2091, 2094, 2103], "delet": [1, 27, 61, 895, 897, 1005, 1013, 2004, 2019, 2024, 2034, 2057, 2066, 2067, 2069, 2074, 2102], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 12, 15, 18, 27, 29, 31, 45, 49, 52, 53, 60, 63, 80, 679, 688, 759, 767, 768, 908, 910, 914, 986, 1079, 1178, 1277, 1360, 1370, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1433, 1451, 1456, 1457, 1458, 1459, 1463, 1466, 1467, 1470, 1471, 1481, 1489, 1490, 1525, 1535, 1537, 1554, 1563, 1565, 1567, 1568, 1569, 1570, 1593, 1594, 1611, 1612, 1613, 1618, 1620, 1621, 1642, 1709, 1809, 1957, 2005, 2006, 2008, 2009, 2010, 2015, 2026, 2027, 2034, 2039, 2041, 2043, 2050, 2053, 2056, 2061, 2062, 2067, 2072, 2077, 2081, 2084, 2085, 2091, 2095, 2096], "messag": [1, 2, 5, 18, 27, 37, 47, 49, 57, 61, 63, 64, 82, 83, 623, 679, 1064, 1065, 1067, 1177, 1181, 1295, 1296, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 2004, 2006, 2007, 2009, 2010, 2015, 2041, 2054, 2056, 2060, 2061, 2067, 2069, 2079, 2096, 2103], "get": [1, 8, 12, 14, 22, 27, 28, 29, 35, 44, 45, 47, 48, 49, 52, 57, 60, 61, 87, 149, 334, 685, 733, 787, 788, 861, 862, 893, 899, 915, 928, 939, 956, 1032, 1033, 1034, 1051, 1092, 1163, 1166, 1167, 1168, 1175, 1176, 1181, 1211, 1212, 1281, 1333, 1440, 1441, 1442, 1461, 1462, 1486, 1487, 1488, 1515, 1516, 1517, 1529, 1547, 1709, 1710, 1724, 1751, 1758, 1840, 1855, 1960, 1983, 1984, 1985, 1992, 2004, 2005, 2006, 2009, 2017, 2021, 2024, 2025, 2034, 2037, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2047, 2051, 2054, 2057, 2059, 2062, 2067, 2069, 2072, 2076, 2077, 2078, 2088, 2090, 2091, 2092, 2093, 2097, 2103, 2104], "register_multi_grad_hook": [1, 2034], "fn": [1, 35, 36, 37, 41, 47, 49, 52, 61, 907, 924, 925, 974, 975, 978, 1164, 1170, 1174, 1265, 1266, 1278, 1283, 1519, 1969, 2006, 2008, 2009, 2013, 2024, 2034, 2045, 2067, 2089, 2091, 2095, 2096, 2101, 2102, 2103], "multi": [1, 4, 35, 44, 759, 1008, 1051, 1072, 1105, 1125, 1190, 1228, 1265, 1432, 1455, 1470, 1489, 1519, 1522, 1523, 1524, 1525, 1535, 1563, 1565, 1572, 1598, 1709, 1992, 1994, 2005, 2006, 2009, 2034, 2036, 2037, 2046, 2050, 2058, 2067, 2072, 2075, 2077, 2078, 2081], "specifi": [1, 2, 3, 5, 8, 12, 14, 19, 22, 23, 27, 29, 31, 32, 33, 35, 37, 42, 43, 44, 45, 49, 50, 52, 61, 87, 96, 149, 194, 258, 318, 330, 470, 480, 492, 496, 498, 499, 512, 514, 516, 536, 544, 545, 559, 579, 582, 583, 584, 586, 587, 602, 679, 734, 740, 741, 742, 767, 768, 792, 793, 794, 798, 813, 822, 825, 839, 854, 858, 859, 861, 878, 880, 892, 893, 905, 906, 909, 912, 914, 939, 943, 966, 972, 993, 994, 1005, 1007, 1008, 1017, 1018, 1019, 1021, 1036, 1039, 1050, 1076, 1086, 1087, 1088, 1092, 1093, 1095, 1105, 1108, 1119, 1122, 1124, 1125, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1140, 1142, 1164, 1165, 1168, 1174, 1179, 1185, 1187, 1206, 1219, 1227, 1228, 1262, 1265, 1269, 1281, 1282, 1308, 1318, 1320, 1322, 1323, 1332, 1335, 1337, 1338, 1348, 1365, 1367, 1373, 1409, 1410, 1413, 1429, 1430, 1431, 1432, 1438, 1450, 1452, 1454, 1455, 1461, 1462, 1465, 1472, 1478, 1479, 1484, 1485, 1489, 1510, 1511, 1516, 1519, 1522, 1523, 1524, 1525, 1526, 1533, 1551, 1552, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1573, 1574, 1593, 1594, 1597, 1598, 1608, 1609, 1616, 1617, 1622, 1625, 1637, 1644, 1661, 1662, 1669, 1677, 1683, 1684, 1709, 1715, 1716, 1717, 1723, 1724, 1725, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1761, 1764, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1795, 1800, 1801, 1809, 1817, 1826, 1842, 1847, 1848, 1851, 1867, 1894, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1914, 1915, 1916, 1919, 1936, 1938, 1942, 1952, 1953, 1954, 1955, 1956, 1960, 1963, 1964, 1965, 1969, 1974, 1986, 1997, 2004, 2006, 2008, 2009, 2013, 2015, 2016, 2017, 2020, 2021, 2025, 2026, 2034, 2037, 2039, 2044, 2046, 2048, 2052, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2066, 2067, 2072, 2073, 2074, 2075, 2077, 2079, 2085, 2089, 2090, 2102, 2106], "ignor": [1, 5, 7, 27, 31, 36, 42, 52, 61, 149, 498, 543, 685, 688, 689, 690, 734, 793, 794, 858, 861, 862, 893, 914, 919, 920, 940, 962, 964, 965, 994, 998, 1003, 1051, 1052, 1072, 1073, 1126, 1128, 1136, 1137, 1138, 1181, 1209, 1226, 1265, 1277, 1283, 1286, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1357, 1410, 1411, 1412, 1428, 1429, 1430, 1431, 1432, 1452, 1454, 1462, 1470, 1472, 1478, 1484, 1485, 1489, 1510, 1511, 1512, 1513, 1514, 1519, 1522, 1523, 1524, 1525, 1526, 1533, 1535, 1551, 1552, 1563, 1568, 1597, 1598, 1608, 1617, 1637, 1661, 1669, 1709, 1764, 1772, 1795, 1803, 1807, 1867, 1898, 1899, 1916, 1920, 1944, 1992, 1993, 1994, 1995, 2006, 2009, 2010, 2016, 2026, 2034, 2037, 2039, 2056, 2072, 2079, 2092, 2099, 2102], "rel": [1, 8, 9, 14, 23, 27, 33, 52, 61, 486, 487, 693, 876, 919, 920, 924, 925, 994, 1188, 1254, 1320, 1323, 1568, 1569, 1590, 1625, 1772, 1776, 1777, 1789, 1803, 2016, 2021, 2036, 2037, 2042, 2045, 2056, 2059, 2079], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 12, 49, 50, 61, 63, 70, 71, 72, 796, 837, 838, 857, 858, 972, 986, 1163, 1269, 2013, 2054, 2059, 2078, 2093, 2094], "_allowmutationonsavedcontext": 1, "purpos": [1, 23, 27, 61, 86, 470, 498, 759, 919, 1275, 1360, 1438, 1470, 1525, 1702, 1703, 1704, 1705, 1867, 2021, 2027, 2034, 2039, 2059, 2068, 2089, 2091, 2094, 2097, 2103], "clear": [1, 2, 8, 9, 47, 61, 939, 982, 1183, 1265, 1519, 1520, 1529, 1771, 2004, 2034, 2037, 2046, 2051, 2057, 2058, 2091], "upon": [1, 2, 22, 28, 35, 37, 61, 972, 1583, 1709, 1726, 1729, 1953, 2024, 2034, 2037, 2056, 2062, 2069, 2106], "sin_": [1, 2007, 2025], "8415": [1, 2039, 2072], "sinbackward0": 1, "gradientedg": [1, 893, 914], "output_nr": [1, 2007, 2057], "edg": [1, 50, 778, 784, 1219, 1227, 1228, 1636, 1696, 2014, 2040, 2068, 2099], "get_gradient_edg": 1, "variou": [2, 5, 14, 22, 27, 29, 49, 61, 679, 1179, 1338, 1958, 1960, 2013, 2016, 2024, 2027, 2039, 2046, 2048, 2058, 2062, 2064, 2072, 2084, 2093, 2104, 2106], "get_cpu_cap": 2, "capabl": [2, 8, 14, 15, 27, 1032, 1716, 1717, 1826, 1983, 2037, 2044, 2045, 2047, 2081], "string": [2, 3, 5, 13, 14, 22, 27, 35, 41, 42, 44, 49, 50, 61, 602, 800, 813, 854, 981, 1030, 1047, 1048, 1105, 1163, 1181, 1265, 1273, 1276, 1337, 1446, 1447, 1448, 1519, 1520, 1529, 1563, 1565, 1567, 1600, 1601, 1602, 1740, 1819, 1851, 1859, 1861, 1959, 1960, 2004, 2007, 2008, 2009, 2010, 2013, 2026, 2034, 2039, 2045, 2046, 2051, 2054, 2056, 2059, 2061, 2067, 2074, 2075, 2077, 2083, 2089, 2091, 2094, 2103, 2104, 2105], "vsx": 2, "z": [2, 3, 10, 33, 52, 57, 63, 66, 71, 72, 616, 819, 877, 900, 903, 905, 906, 935, 963, 983, 1105, 1109, 1367, 1471, 1625, 1729, 1762, 1763, 1813, 1843, 1844, 2006, 2007, 2008, 2026, 2034, 2036, 2037, 2043, 2044, 2054, 2056, 2059, 2065, 2067, 2069, 2088, 2090, 2091, 2094, 2102, 2103], "vector": [2, 11, 23, 33, 52, 53, 57, 253, 312, 314, 320, 688, 689, 690, 884, 893, 898, 908, 909, 910, 911, 912, 913, 914, 953, 954, 960, 971, 990, 994, 1004, 1086, 1087, 1092, 1094, 1169, 1173, 1174, 1209, 1298, 1305, 1313, 1321, 1322, 1326, 1329, 1333, 1334, 1335, 1355, 1360, 1367, 1405, 1407, 1433, 1434, 1435, 1438, 1455, 1461, 1462, 1465, 1473, 1481, 1482, 1483, 1528, 1559, 1568, 1571, 1616, 1617, 1625, 1627, 1662, 1666, 1695, 1714, 1722, 1724, 1729, 1760, 1764, 1808, 1809, 1900, 1920, 1963, 1966, 1969, 2028, 2034, 2043, 2062, 2072, 2075, 2077, 2085, 2096], "NO": [2, 84, 86, 1180], "avx": [2, 2087], "avx2": [2, 2062, 2087], "avx512": [2, 2087], "is_built": [2, 2047], "built": [2, 3, 7, 8, 14, 23, 27, 32, 37, 55, 61, 973, 1030, 1275, 1569, 1795, 2005, 2013, 2027, 2034, 2036, 2037, 2039, 2044, 2046, 2047, 2048, 2062, 2064, 2089, 2091, 2092, 2103, 2104], "necessarili": [2, 23, 27, 33, 35, 44, 49, 83, 470, 919, 1302, 1324, 1335, 1366, 1454, 1526, 1716, 1717, 2037, 2039], "machin": [2, 27, 35, 44, 52, 53, 58, 1269, 1275, 1311, 1556, 2044, 2045, 2046, 2047, 2048, 2050, 2053, 2054, 2059, 2066, 2067, 2068, 2084, 2085, 2087, 2091, 2096], "driver": [2, 19, 1209, 1311, 1329, 1330, 1376, 2007, 2037, 2049, 2067, 2101, 2103], "would": [2, 3, 5, 8, 9, 11, 14, 22, 27, 33, 35, 37, 44, 45, 49, 50, 52, 54, 57, 61, 149, 444, 445, 446, 447, 448, 485, 697, 759, 793, 854, 893, 900, 901, 905, 914, 962, 980, 1106, 1108, 1126, 1157, 1167, 1168, 1180, 1181, 1193, 1194, 1195, 1263, 1265, 1266, 1270, 1273, 1281, 1282, 1381, 1382, 1405, 1428, 1429, 1430, 1431, 1432, 1470, 1484, 1489, 1512, 1513, 1514, 1519, 1529, 1535, 1625, 1636, 1699, 1709, 1710, 1716, 1717, 1750, 1762, 1790, 1828, 1832, 1834, 1845, 1855, 1935, 1936, 1941, 2006, 2008, 2009, 2017, 2025, 2026, 2027, 2028, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2042, 2043, 2048, 2051, 2056, 2058, 2059, 2060, 2062, 2067, 2068, 2069, 2071, 2072, 2088, 2089, 2090, 2091, 2093, 2094, 2095, 2096, 2097, 2099, 2102, 2103], "allow_tf32": [2, 1863, 2007, 2037, 2049], "tensorfloat": 2, "core": [2, 3, 7, 8, 49, 56, 79, 972, 999, 1061, 1770, 2009, 2013, 2036, 2037, 2038, 2048, 2049, 2059, 2081, 2090, 2094, 2100], "amper": [2, 2072], "newer": [2, 14, 49, 1068, 1758, 2036, 2037, 2051, 2053, 2058, 2059, 2063, 2096], "tf32": [2, 19], "allow_fp16_reduced_precision_reduct": [2, 2037, 2049], "reduc": [2, 3, 14, 23, 27, 28, 29, 31, 32, 52, 320, 512, 515, 516, 685, 692, 694, 695, 696, 698, 818, 819, 820, 821, 824, 826, 874, 875, 972, 977, 1018, 1029, 1061, 1178, 1179, 1239, 1318, 1322, 1324, 1329, 1335, 1353, 1363, 1365, 1366, 1368, 1371, 1410, 1411, 1412, 1413, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1452, 1454, 1462, 1478, 1484, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1559, 1568, 1597, 1598, 1606, 1608, 1617, 1633, 1636, 1637, 1638, 1649, 1657, 1658, 1659, 1660, 1661, 1662, 1669, 1681, 1682, 1693, 1696, 1709, 1724, 1762, 1779, 1803, 1817, 1819, 1820, 1854, 1897, 1901, 1914, 1915, 1919, 1920, 1942, 1957, 1964, 1965, 1982, 2007, 2024, 2025, 2034, 2036, 2038, 2039, 2042, 2046, 2048, 2050, 2051, 2052, 2057, 2058, 2059, 2060, 2062, 2072, 2088, 2090, 2094, 2098, 2099, 2103, 2104], "precis": [2, 3, 8, 11, 14, 23, 33, 52, 685, 688, 919, 920, 940, 952, 1050, 1148, 1215, 1311, 1329, 1335, 1360, 1370, 1428, 1429, 1430, 1432, 1446, 1447, 1448, 1449, 1450, 1451, 1471, 1490, 1506, 1512, 1513, 1514, 1572, 1636, 1677, 1709, 1848, 1863, 1867, 2005, 2009, 2021, 2028, 2034, 2046, 2059, 2062, 2063, 2065, 2073, 2075, 2077, 2078, 2100, 2107], "gemm": [2, 2036, 2056, 2094], "allow_bf16_reduced_precision_reduct": [2, 2037, 2049], "cufft_plan_cach": [2, 2037], "cufft": 2, "queri": [2, 27, 44, 61, 734, 1007, 1008, 1010, 1016, 1063, 1068, 1082, 1083, 1191, 1265, 1378, 1519, 1525, 1580, 1677, 1728, 1974, 1975, 2007, 2037, 2059, 2090, 2093], "specif": [2, 3, 7, 8, 9, 11, 14, 19, 27, 29, 31, 32, 33, 35, 42, 44, 47, 49, 52, 57, 61, 63, 78, 80, 85, 87, 512, 854, 861, 932, 1010, 1096, 1125, 1228, 1262, 1269, 1275, 1279, 1281, 1282, 1366, 1465, 1491, 1534, 1677, 1702, 1703, 1708, 1731, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1786, 1787, 1788, 1789, 1790, 1858, 1863, 1897, 1958, 1975, 2004, 2006, 2008, 2009, 2011, 2013, 2015, 2021, 2026, 2028, 2034, 2037, 2039, 2044, 2048, 2050, 2054, 2056, 2058, 2059, 2061, 2062, 2063, 2065, 2067, 2069, 2077, 2078, 2085, 2087, 2090, 2091, 2093, 2094, 2096, 2100, 2102, 2103, 2109], "via": [2, 7, 14, 15, 22, 27, 29, 32, 33, 42, 49, 50, 52, 56, 59, 61, 414, 485, 516, 616, 919, 920, 928, 959, 980, 1005, 1041, 1061, 1109, 1166, 1183, 1184, 1186, 1188, 1338, 1433, 1434, 1435, 1455, 1473, 1481, 1482, 1483, 1491, 1559, 1723, 1758, 1761, 1801, 2006, 2008, 2009, 2013, 2021, 2024, 2027, 2032, 2034, 2037, 2039, 2040, 2041, 2044, 2046, 2048, 2049, 2056, 2059, 2062, 2067, 2068, 2072, 2075, 2076, 2089, 2090, 2091, 2093, 2095, 2099, 2104], "readonli": 2, "int": [2, 3, 12, 18, 22, 23, 27, 29, 31, 32, 33, 35, 38, 41, 42, 44, 45, 48, 49, 50, 52, 61, 63, 71, 72, 74, 77, 87, 215, 217, 231, 232, 241, 253, 312, 314, 316, 320, 436, 443, 444, 446, 448, 456, 471, 475, 492, 496, 498, 512, 514, 516, 519, 536, 542, 544, 545, 557, 559, 565, 582, 583, 584, 586, 587, 606, 616, 679, 692, 694, 695, 696, 698, 754, 755, 774, 776, 778, 779, 784, 785, 786, 818, 874, 875, 876, 878, 892, 900, 903, 905, 906, 923, 928, 935, 941, 943, 950, 957, 959, 966, 971, 993, 994, 998, 999, 1003, 1004, 1008, 1010, 1012, 1013, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1032, 1033, 1034, 1036, 1038, 1042, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1092, 1093, 1094, 1095, 1096, 1097, 1103, 1106, 1108, 1118, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1157, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1174, 1176, 1197, 1199, 1206, 1213, 1216, 1217, 1219, 1223, 1224, 1226, 1227, 1228, 1229, 1240, 1241, 1262, 1263, 1265, 1266, 1268, 1271, 1272, 1277, 1285, 1287, 1297, 1298, 1318, 1319, 1322, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1345, 1352, 1353, 1358, 1363, 1365, 1366, 1368, 1371, 1373, 1374, 1375, 1376, 1379, 1380, 1386, 1393, 1394, 1395, 1396, 1397, 1405, 1410, 1411, 1412, 1413, 1414, 1415, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1461, 1462, 1464, 1465, 1466, 1467, 1469, 1471, 1473, 1481, 1482, 1483, 1486, 1487, 1488, 1490, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1506, 1507, 1509, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1521, 1524, 1526, 1527, 1530, 1531, 1532, 1534, 1537, 1541, 1542, 1543, 1544, 1545, 1546, 1553, 1555, 1559, 1563, 1564, 1565, 1566, 1567, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1607, 1608, 1609, 1616, 1617, 1624, 1627, 1636, 1644, 1661, 1662, 1663, 1667, 1668, 1683, 1684, 1692, 1696, 1697, 1698, 1708, 1709, 1724, 1725, 1734, 1735, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1751, 1753, 1758, 1761, 1764, 1765, 1767, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1809, 1810, 1817, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1830, 1831, 1832, 1834, 1840, 1841, 1842, 1845, 1846, 1847, 1848, 1851, 1856, 1857, 1858, 1862, 1865, 1866, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1888, 1892, 1896, 1899, 1900, 1901, 1908, 1911, 1913, 1914, 1915, 1916, 1919, 1921, 1925, 1932, 1936, 1937, 1939, 1941, 1942, 1945, 1946, 1947, 1948, 1951, 1952, 1953, 1954, 1955, 1956, 1959, 1960, 1963, 1964, 1965, 1969, 1970, 1975, 1977, 1978, 1979, 1980, 1983, 1984, 1985, 1986, 1989, 1992, 1993, 1996, 1997, 2001, 2002, 2006, 2007, 2008, 2009, 2010, 2013, 2021, 2024, 2025, 2027, 2032, 2037, 2040, 2048, 2051, 2054, 2056, 2057, 2060, 2061, 2062, 2066, 2067, 2071, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2085, 2090, 2094, 2098, 2102, 2105, 2107], "show": [2, 4, 7, 13, 18, 22, 23, 27, 29, 34, 49, 52, 61, 79, 908, 914, 972, 1156, 1265, 1367, 1519, 1699, 1771, 2004, 2005, 2009, 2025, 2036, 2037, 2038, 2039, 2043, 2044, 2046, 2054, 2056, 2058, 2059, 2061, 2067, 2069, 2091, 2096, 2097, 2100, 2101, 2103, 2105], "max_siz": [2, 43, 45, 2037], "capac": [2, 1075, 2037, 2048], "preferred_blas_librari": 2, "overrid": [2, 5, 14, 19, 23, 27, 28, 33, 37, 45, 52, 57, 61, 791, 792, 854, 890, 892, 905, 906, 1047, 1431, 1432, 1452, 1454, 1478, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1536, 1551, 1552, 1568, 1597, 1598, 1608, 1637, 1661, 1669, 1731, 1790, 1851, 1867, 2005, 2009, 2013, 2017, 2051, 2058, 2059, 2062, 2067, 2072, 2077, 2083, 2102], "bla": [2, 2036], "choos": [2, 9, 15, 61, 892, 905, 906, 932, 1030, 1311, 1324, 1329, 1431, 2032, 2033, 2036, 2059, 2063, 2077], "cubla": [2, 11, 19, 1022, 1957, 2050, 2088], "cublaslt": [2, 19], "subject": [2, 3, 11, 18, 27, 29, 31, 32, 52, 60, 61, 62, 232, 865, 1578, 1579, 1580, 1583, 1677, 1709, 2009, 2025, 2026, 2034, 2039, 2056, 2060, 2061, 2062, 2063, 2067, 2072, 2075, 2081, 2082, 2083, 2085, 2090, 2100], "rocm": [2, 685, 688, 940, 952, 1360, 1370, 1446, 1447, 1448, 1449, 1450, 1451, 1471, 1490, 1506, 2005], "hipbla": 2, "hipblaslt": 2, "offer": [2, 27, 29, 52, 55, 1709, 1957, 2037, 2044, 2059, 2061, 2067, 2072, 2089, 2094, 2098, 2106], "wherev": [2, 9, 2025], "prefer": [2, 9, 22, 27, 29, 35, 45, 52, 862, 878, 910, 1194, 1263, 1306, 1319, 1323, 1331, 1338, 1526, 1677, 1855, 1916, 1935, 2006, 2017, 2034, 2037, 2058, 2059, 2072, 2094], "environ": [2, 3, 7, 14, 15, 18, 21, 23, 29, 33, 35, 37, 42, 48, 49, 61, 78, 80, 679, 1181, 1203, 1275, 1281, 1489, 1535, 1957, 2004, 2005, 2006, 2015, 2034, 2036, 2037, 2038, 2044, 2049, 2050, 2052, 2060, 2067, 2085, 2087, 2089, 2094, 2103], "variabl": [2, 3, 5, 12, 14, 18, 21, 23, 33, 35, 37, 42, 48, 50, 52, 57, 61, 63, 66, 71, 72, 78, 80, 447, 679, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 727, 728, 729, 730, 731, 733, 737, 738, 739, 740, 741, 742, 744, 745, 755, 759, 763, 798, 900, 901, 905, 986, 990, 994, 1074, 1106, 1174, 1181, 1279, 1281, 1338, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1461, 1462, 1470, 1471, 1489, 1490, 1491, 1504, 1506, 1519, 1522, 1527, 1535, 1537, 1709, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1768, 1772, 1774, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1828, 1830, 1832, 1957, 1969, 2002, 2004, 2005, 2015, 2016, 2026, 2027, 2034, 2036, 2037, 2038, 2041, 2043, 2049, 2050, 2052, 2054, 2056, 2058, 2062, 2067, 2074, 2077, 2085, 2090, 2091, 2092, 2094, 2096, 2103], "torch_blas_prefer_cublaslt": 2, "global": [2, 3, 5, 8, 11, 12, 19, 22, 27, 29, 31, 33, 35, 45, 52, 57, 60, 61, 63, 66, 71, 72, 854, 861, 865, 873, 928, 941, 950, 986, 1005, 1039, 1056, 1063, 1106, 1108, 1118, 1123, 1141, 1157, 1160, 1163, 1223, 1224, 1246, 1253, 1265, 1268, 1281, 1285, 1336, 1352, 1519, 1677, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1736, 1740, 1768, 1828, 1830, 1832, 1835, 1859, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2002, 2006, 2009, 2010, 2013, 2028, 2033, 2039, 2045, 2046, 2048, 2050, 2051, 2062, 2067, 2068, 2069, 2072, 2075, 2077, 2091, 2092, 2093, 2094, 2095, 2102, 2103], "overridden": [2, 14, 61, 889, 890, 891, 905, 906, 1047, 1519, 1895, 2009, 2034, 2039, 2049, 2060, 2103, 2104], "achiev": [2, 22, 23, 27, 29, 32, 33, 45, 52, 1105, 1170, 1265, 1432, 1438, 1519, 1525, 1526, 1598, 1627, 1709, 2022, 2037, 2045, 2048, 2059, 2067, 2069, 2103], "better": [2, 3, 7, 8, 9, 14, 22, 26, 27, 35, 49, 56, 915, 972, 1074, 1162, 1166, 1167, 1178, 1252, 1281, 1454, 1553, 1677, 1683, 1709, 1716, 1717, 1801, 1826, 2009, 2033, 2034, 2036, 2037, 2042, 2043, 2050, 2052, 2056, 2058, 2061, 2062, 2063, 2072, 2077, 2083, 2089, 2091, 2092, 2100], "select": [2, 5, 15, 20, 22, 27, 29, 33, 35, 42, 50, 312, 314, 316, 320, 759, 962, 996, 998, 1002, 1011, 1012, 1016, 1023, 1024, 1025, 1026, 1028, 1049, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1074, 1075, 1078, 1080, 1082, 1083, 1125, 1338, 1367, 1392, 1393, 1394, 1395, 1396, 1401, 1402, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1470, 1489, 1535, 1583, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1677, 1745, 1746, 1858, 1932, 1960, 1972, 1976, 1977, 1978, 1979, 1981, 1996, 1999, 2000, 2006, 2007, 2009, 2024, 2025, 2026, 2027, 2034, 2036, 2037, 2043, 2050, 2057, 2062, 2072, 2076, 2079, 2092, 2098, 2100, 2105], "incorrect": [2, 4, 5, 52, 61, 83, 84, 86, 253, 512, 555, 900, 903, 905, 919, 928, 954, 1281, 1324, 1337, 1525, 1563, 1564, 1565, 1566, 1567, 1695, 1764, 1905, 1916, 2006, 2009, 2013, 2037, 2049, 2056, 2091, 2106], "_blasbackend": 2, "preferred_linalg_librari": [2, 1302], "heurist": [2, 14, 22, 44, 45, 61, 977, 1105, 2042, 2088, 2097], "cusolv": [2, 1329, 1330, 1920], "magma": [2, 1311, 1355, 1819, 1920, 2052, 2072], "algebra": [2, 9, 1105, 1302, 1323, 2005, 2014], "decid": [2, 4, 7, 27, 35, 44, 56, 485, 1179, 1740, 2016, 2056, 2072, 2093, 2094, 2097], "pick": [2, 27, 43, 45, 512, 972, 2034, 2067, 2090, 2092, 2097], "torch_linalg_prefer_cusolv": 2, "linalg": [2, 11, 405, 962, 963, 964, 965, 1004, 1091, 1209, 1243, 1346, 1355, 1356, 1357, 1361, 1362, 1723, 1724, 1729, 1764, 1806, 1811, 1813, 1819, 1889, 1920, 1921, 1944, 1966, 2005], "inv": [2, 33, 1243, 1297, 1301, 1307, 1323, 1327, 1331], "inv_ex": [2, 1306], "cholesky_ex": [2, 1295], "lu_factor": [2, 1314, 1315, 1355, 1356, 1357], "lu": [2, 10, 1307, 1313, 1314, 1315, 1356, 1357, 2007], "eigh": [2, 1295, 1301, 1304, 1323, 1329, 2049], "eighval": 2, "svdval": [2, 1297, 1311, 1320, 1329, 1920, 2049], "_linalgbackend": 2, "sdpaparam": 2, "flash_sdp_en": 2, "flash": [2, 1578, 1583], "scale": [2, 7, 22, 33, 35, 43, 45, 96, 172, 472, 474, 616, 684, 688, 689, 690, 737, 738, 739, 740, 741, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 758, 769, 771, 772, 773, 774, 776, 779, 780, 794, 798, 801, 818, 819, 820, 821, 824, 940, 1119, 1120, 1123, 1141, 1173, 1174, 1352, 1427, 1456, 1461, 1462, 1463, 1479, 1491, 1547, 1572, 1573, 1574, 1578, 1583, 1616, 1617, 1618, 1634, 1636, 1677, 1678, 1683, 1774, 1795, 1821, 1822, 1823, 1824, 1825, 1898, 1899, 1917, 1969, 2005, 2007, 2026, 2032, 2037, 2041, 2046, 2054, 2062, 2063, 2065, 2073, 2094], "product": [2, 15, 27, 29, 33, 44, 149, 685, 688, 689, 690, 759, 893, 898, 909, 911, 912, 913, 914, 940, 952, 958, 962, 990, 1004, 1016, 1063, 1068, 1082, 1083, 1086, 1102, 1105, 1169, 1173, 1174, 1242, 1286, 1298, 1305, 1331, 1332, 1334, 1360, 1367, 1370, 1407, 1470, 1471, 1489, 1490, 1578, 1583, 1624, 1677, 1723, 1807, 1808, 1817, 1863, 1937, 1952, 1966, 1969, 2005, 2006, 2025, 2034, 2043, 2045, 2049, 2059, 2062, 2072, 2091, 2105], "attent": [2, 7, 32, 734, 1432, 1525, 1563, 1565, 1567, 1578, 1580, 1598, 1677, 2005, 2052, 2076, 2091], "enable_mem_efficient_sdp": [2, 1677], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1677], "math_sdp_en": 2, "math": [2, 22, 61, 1115, 1317, 1578, 1583, 1637, 1677, 1809, 1826, 1921, 2005, 2006, 2008, 2009, 2042, 2049, 2072, 2073, 2079, 2103], "enable_math_sdp": [2, 1677], "cudnn_sdp_en": 2, "enable_cudnn_sdp": 2, "can_use_flash_attent": 2, "debug": [2, 4, 5, 8, 19, 22, 41, 49, 78, 80, 679, 826, 827, 831, 843, 919, 920, 972, 974, 981, 1005, 1038, 1079, 1213, 1295, 1702, 1703, 1704, 1705, 1862, 1869, 2005, 2008, 2015, 2034, 2036, 2037, 2038, 2044, 2045, 2046, 2050, 2052, 2054, 2056, 2059, 2082, 2090, 2091, 2092, 2095, 2096, 2099, 2105, 2106], "check": [2, 3, 4, 5, 11, 14, 19, 22, 27, 28, 29, 33, 44, 52, 63, 64, 69, 72, 220, 339, 498, 693, 861, 900, 901, 903, 904, 905, 906, 919, 920, 926, 974, 1007, 1008, 1010, 1014, 1043, 1061, 1179, 1181, 1189, 1198, 1199, 1252, 1262, 1265, 1281, 1282, 1295, 1296, 1301, 1302, 1304, 1307, 1309, 1314, 1320, 1323, 1327, 1329, 1330, 1355, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1699, 1709, 1726, 1729, 1742, 1752, 1771, 1772, 1895, 1902, 1903, 1904, 1905, 1906, 1907, 1958, 1960, 1974, 1975, 2004, 2005, 2008, 2009, 2010, 2013, 2025, 2026, 2033, 2037, 2039, 2040, 2041, 2042, 2045, 2046, 2047, 2050, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2067, 2072, 2077, 2079, 2087, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2102, 2103, 2104], "flashattent": [2, 1567, 1677], "util": [2, 7, 17, 29, 45, 49, 50, 52, 53, 60, 61, 63, 498, 731, 734, 737, 738, 739, 744, 745, 755, 759, 763, 789, 797, 906, 1021, 1106, 1107, 1108, 1156, 1198, 1199, 1265, 1470, 1489, 1519, 1535, 1536, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1726, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1750, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1795, 1801, 1924, 1925, 1927, 1928, 1929, 1957, 2005, 2009, 2013, 2017, 2021, 2033, 2035, 2036, 2037, 2039, 2041, 2043, 2045, 2046, 2048, 2050, 2056, 2058, 2059, 2060, 2090, 2091, 2094, 2101, 2103, 2106], "scaled_dot_product_attent": [2, 1525, 1563, 1579, 1582, 1583, 2007, 2029, 2030, 2031, 2057], "_sdpaparam": 2, "kei": [2, 3, 22, 29, 35, 42, 44, 45, 49, 50, 52, 59, 61, 414, 602, 679, 734, 854, 859, 927, 932, 939, 1071, 1162, 1172, 1182, 1265, 1281, 1282, 1337, 1519, 1520, 1525, 1529, 1563, 1564, 1565, 1566, 1567, 1580, 1677, 1743, 1759, 1958, 1960, 2005, 2007, 2008, 2009, 2013, 2037, 2039, 2045, 2046, 2051, 2056, 2057, 2058, 2061, 2062, 2065, 2067, 2068, 2074, 2077, 2079, 2082, 2084, 2095, 2100, 2101, 2102, 2106], "mask": [2, 42, 398, 399, 400, 401, 402, 543, 734, 919, 920, 1359, 1427, 1438, 1463, 1525, 1563, 1564, 1565, 1566, 1567, 1618, 1677, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1790, 2005, 2007, 2025, 2026, 2072, 2094], "dropout": [2, 5, 32, 61, 733, 734, 759, 1265, 1427, 1457, 1458, 1459, 1463, 1470, 1489, 1519, 1525, 1535, 1536, 1563, 1565, 1567, 1591, 1611, 1612, 1613, 1618, 1677, 2005, 2007, 2019, 2026, 2027, 2034, 2037, 2057, 2064], "causal": [2, 734, 1525, 1563, 1564, 1565, 1566, 1567, 1579, 1580, 1581, 1582, 1677], "warn": [2, 14, 18, 23, 24, 27, 31, 49, 83, 84, 86, 679, 908, 914, 962, 1016, 1063, 1068, 1079, 1082, 1083, 1174, 1181, 1246, 1262, 1281, 1323, 1337, 1367, 1525, 1563, 1564, 1565, 1566, 1567, 1677, 1726, 1729, 1862, 1869, 1916, 1957, 1969, 2004, 2015, 2021, 2035, 2039, 2054, 2057, 2059, 2066, 2091, 2103], "why": [2, 3, 7, 22, 57, 61, 1105, 1269, 1677, 2005, 2013, 2016, 2040, 2042, 2090, 2091, 2093, 2101, 2105], "could": [2, 4, 5, 7, 8, 22, 27, 32, 33, 35, 44, 57, 60, 61, 582, 583, 584, 586, 587, 928, 974, 1043, 1126, 1128, 1136, 1137, 1138, 1182, 1262, 1271, 1296, 1337, 1355, 1381, 1382, 1716, 1717, 1794, 1897, 1953, 2008, 2009, 2016, 2024, 2034, 2037, 2038, 2052, 2056, 2059, 2062, 2063, 2067, 2068, 2069, 2072, 2076, 2077, 2089, 2091, 2094, 2095, 2099, 2103, 2106], "depend": [2, 4, 5, 12, 14, 22, 27, 29, 31, 33, 35, 44, 45, 47, 50, 52, 61, 314, 784, 878, 1016, 1063, 1068, 1082, 1083, 1126, 1128, 1136, 1137, 1138, 1164, 1168, 1173, 1181, 1191, 1193, 1194, 1195, 1197, 1277, 1281, 1301, 1302, 1329, 1355, 1360, 1431, 1432, 1452, 1454, 1462, 1465, 1478, 1484, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1571, 1572, 1590, 1597, 1598, 1608, 1617, 1625, 1637, 1661, 1669, 1677, 1696, 1699, 1709, 1729, 1730, 1736, 1795, 1807, 1809, 1826, 1842, 1902, 1903, 1904, 1906, 1907, 1920, 1944, 1972, 2004, 2006, 2008, 2009, 2013, 2016, 2017, 2024, 2034, 2036, 2037, 2039, 2040, 2042, 2043, 2046, 2048, 2053, 2055, 2056, 2061, 2062, 2067, 2072, 2078, 2079, 2084, 2085, 2088, 2089, 2090, 2091, 2093, 2094, 2096, 2099, 2101, 2102, 2105], "can_use_efficient_attent": 2, "efficient_attent": [2, 1578, 1583], "sdp_kernel": [2, 1677], "enable_flash": 2, "enable_math": [2, 1677], "enable_mem_effici": 2, "enable_cudnn": 2, "temporarili": [2, 35, 1859, 2034, 2056, 2061, 2097], "previou": [2, 18, 27, 44, 49, 52, 61, 512, 555, 759, 972, 1039, 1150, 1219, 1276, 1336, 1352, 1470, 1489, 1535, 1583, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1771, 1803, 1826, 1916, 2019, 2034, 2037, 2039, 2046, 2052, 2054, 2062, 2069, 2085, 2094], "restor": [2, 5, 29, 31, 61, 87, 982, 1150, 1336, 1352, 1583, 1761, 1846, 1867, 2046, 2051, 2092], "is_avail": [2, 17, 27, 1960, 2005, 2037, 2044, 2047, 2051, 2061, 2085, 2109], "determinist": [2, 3, 5, 21, 27, 33, 61, 83, 87, 485, 498, 512, 873, 1106, 1107, 1108, 1213, 1246, 1268, 1281, 1282, 1363, 1366, 1368, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1489, 1535, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1677, 1856, 1862, 1957, 2005, 2007, 2034, 2042, 2050, 2058, 2066], "algorithm": [2, 3, 7, 11, 20, 23, 28, 31, 33, 35, 52, 87, 759, 778, 784, 962, 1262, 1306, 1313, 1319, 1323, 1329, 1338, 1355, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1468, 1470, 1489, 1535, 1571, 1572, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1625, 1636, 1677, 1696, 1709, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1790, 1809, 1848, 1863, 1920, 1921, 1957, 2005, 2034, 2037, 2049, 2067, 2072], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 26, 498, 873, 1106, 1107, 1108, 1246, 1862, 2050], "benchmark": [2, 2005, 2007, 2037, 2044, 2061, 2088, 2094, 2100], "fastest": [2, 877, 1709, 1763, 1776, 1777, 1789, 2043, 2050, 2058], "benchmark_limit": 2, "maximum": [2, 26, 33, 44, 45, 49, 498, 694, 696, 770, 794, 819, 820, 821, 824, 825, 874, 1018, 1053, 1055, 1061, 1069, 1070, 1084, 1085, 1106, 1107, 1108, 1151, 1168, 1226, 1227, 1228, 1338, 1363, 1385, 1477, 1616, 1617, 1715, 1793, 1801, 1826, 1840, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1959, 2007, 2015, 2032, 2033, 2037, 2048, 2057, 2065, 2079, 2080, 2090, 2098, 2105], "try": [2, 3, 4, 7, 8, 27, 29, 36, 37, 41, 44, 49, 56, 57, 81, 82, 972, 1075, 1159, 1168, 1174, 1181, 1204, 1270, 1272, 1281, 1302, 1385, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1563, 1564, 1566, 1572, 1578, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1677, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1969, 2004, 2006, 2009, 2010, 2013, 2034, 2037, 2039, 2041, 2043, 2048, 2056, 2058, 2059, 2062, 2063, 2067, 2072, 2089, 2090, 2093, 2094, 2096, 2103, 2105], "dispatch": [2, 27, 52, 61, 83, 84, 86, 1182, 1270, 1381, 1382, 1958, 1960, 2009, 2013, 2037, 2039, 2054, 2056, 2094, 2095, 2104], "v8": [2, 19], "get_fastpath_en": 2, "fast": [2, 7, 8, 22, 27, 61, 919, 1460, 1481, 1482, 1483, 1551, 1567, 1716, 1717, 1801, 1807, 1826, 1848, 1863, 2005, 2036, 2037, 2039, 2044, 2058, 2067, 2072, 2075, 2076, 2084, 2091, 2093, 2096, 2097, 2105], "path": [2, 3, 4, 8, 14, 19, 27, 29, 42, 44, 47, 48, 49, 52, 61, 733, 929, 930, 931, 1005, 1105, 1190, 1265, 1519, 1536, 1567, 1771, 2004, 2005, 2007, 2008, 2034, 2037, 2039, 2042, 2044, 2051, 2054, 2059, 2061, 2072, 2082, 2085, 2088, 2096, 2097], "transformerencod": 2, "multiheadattent": [2, 1563, 1565, 1567, 2062], "fastpath": [2, 1525, 2093], "condit": [2, 5, 12, 20, 22, 49, 50, 57, 61, 63, 66, 71, 72, 616, 619, 623, 693, 759, 909, 919, 920, 986, 1262, 1281, 1295, 1297, 1302, 1305, 1311, 1312, 1313, 1324, 1329, 1470, 1489, 1535, 1567, 1752, 1757, 1944, 1972, 2006, 2007, 2008, 2010, 2018, 2027, 2034, 2039, 2049, 2060, 2077, 2090, 2091, 2092, 2093, 2098], "met": [2, 12, 616, 986, 1305, 1312, 1313, 1324, 1338, 1567, 1905], "set_fastpath_en": 2, "verbos": [2, 14, 27, 61, 679, 1181, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 2004, 2015, 2026, 2056, 2077, 2103], "On": [2, 14, 21, 22, 27, 28, 33, 45, 52, 57, 61, 685, 688, 940, 952, 1313, 1360, 1370, 1446, 1447, 1448, 1449, 1450, 1451, 1471, 1486, 1487, 1488, 1489, 1490, 1506, 1529, 1535, 1548, 1709, 1776, 1777, 1786, 1789, 2005, 2006, 2016, 2034, 2036, 2037, 2039, 2049, 2059, 2067, 2068, 2069, 2072, 2088, 2090, 2091, 2093, 2094], "demand": [2, 22, 1041, 2008, 2045, 2048, 2067], "onemkl": 2, "easier": [2, 7, 22, 49, 61, 2006, 2008, 2027, 2034, 2035, 2039, 2040, 2042, 2072, 2094, 2103], "dump": [2, 61, 1005, 2038, 2052, 2094, 2103], "durat": [2, 27, 41, 44, 937, 1381, 1382, 2021, 2054, 2061, 2094, 2103], "kernel": [2, 3, 4, 11, 14, 18, 19, 27, 52, 60, 485, 738, 739, 740, 741, 742, 771, 772, 773, 926, 972, 1003, 1008, 1010, 1011, 1047, 1048, 1081, 1083, 1387, 1392, 1428, 1429, 1430, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1466, 1467, 1486, 1487, 1488, 1495, 1496, 1497, 1498, 1499, 1500, 1512, 1513, 1514, 1515, 1516, 1517, 1571, 1600, 1601, 1602, 1603, 1604, 1605, 1620, 1621, 1677, 1716, 1717, 1727, 1958, 1960, 1975, 1976, 2001, 2006, 2013, 2019, 2027, 2037, 2039, 2040, 2042, 2047, 2049, 2056, 2058, 2061, 2063, 2072, 2088, 2091, 2092, 2093, 2094, 2095, 2096, 2103, 2106], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 22, 27, 32, 61, 679, 858, 992, 994, 1061, 1302, 1311, 1329, 1423, 1465, 1571, 1619, 1709, 1801, 1887, 1900, 2005, 2024, 2026, 2027, 2036, 2037, 2041, 2046, 2049, 2051, 2054, 2056, 2059, 2060, 2063, 2067, 2072, 2075, 2078, 2088, 2094, 2101, 2103, 2105], "moreov": [2, 29, 80, 512, 1709, 1789, 2106], "investig": [2, 7, 27, 57, 2101], "singl": [2, 3, 5, 12, 14, 23, 27, 29, 31, 33, 35, 37, 42, 43, 44, 52, 53, 55, 56, 57, 58, 60, 61, 63, 71, 72, 253, 679, 694, 695, 765, 766, 767, 768, 771, 772, 773, 813, 895, 908, 909, 910, 911, 912, 913, 914, 926, 941, 950, 954, 972, 986, 990, 994, 1047, 1050, 1162, 1164, 1165, 1168, 1170, 1174, 1223, 1224, 1228, 1250, 1264, 1265, 1281, 1282, 1285, 1343, 1367, 1381, 1382, 1421, 1422, 1425, 1426, 1429, 1430, 1432, 1446, 1447, 1448, 1450, 1451, 1454, 1455, 1466, 1467, 1473, 1486, 1487, 1488, 1491, 1513, 1514, 1519, 1527, 1531, 1532, 1534, 1548, 1559, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1620, 1621, 1622, 1650, 1651, 1652, 1695, 1701, 1703, 1706, 1707, 1708, 1709, 1714, 1715, 1718, 1720, 1722, 1759, 1760, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 1795, 1816, 1842, 1863, 1908, 1914, 1915, 1953, 1954, 1957, 1964, 1965, 1969, 2005, 2006, 2008, 2009, 2016, 2019, 2024, 2026, 2027, 2028, 2034, 2036, 2037, 2039, 2040, 2042, 2043, 2046, 2048, 2049, 2050, 2051, 2056, 2058, 2059, 2060, 2061, 2062, 2068, 2069, 2072, 2075, 2078, 2079, 2083, 2087, 2088, 2090, 2092, 2093, 2094, 2096, 2102, 2103], "enough": [2, 8, 23, 61, 1181, 1188, 1277, 1405, 1569, 1902, 1903, 1904, 1905, 1906, 1907, 1957, 2008, 2024, 2027, 2037, 2039, 2043, 2058, 2059, 2075, 2091, 2094, 2104], "scope": [2, 7, 12, 47, 61, 80, 986, 1065, 1159, 1559, 1740, 2006, 2008, 2009, 2037, 2041, 2056, 2059, 2069, 2093, 2102], "second": [2, 5, 14, 18, 27, 31, 35, 37, 44, 47, 49, 58, 61, 685, 688, 690, 693, 759, 793, 874, 875, 876, 884, 892, 905, 906, 919, 920, 940, 944, 945, 947, 948, 949, 952, 1004, 1016, 1063, 1068, 1082, 1083, 1093, 1095, 1096, 1102, 1110, 1151, 1152, 1164, 1167, 1168, 1169, 1173, 1174, 1194, 1207, 1208, 1219, 1222, 1230, 1231, 1232, 1242, 1254, 1288, 1290, 1298, 1334, 1337, 1343, 1344, 1354, 1360, 1364, 1366, 1367, 1369, 1370, 1411, 1416, 1419, 1423, 1429, 1430, 1436, 1447, 1448, 1450, 1451, 1461, 1462, 1469, 1470, 1484, 1487, 1488, 1489, 1507, 1511, 1513, 1514, 1535, 1548, 1607, 1609, 1643, 1699, 1740, 1776, 1777, 1780, 1786, 1790, 1801, 1803, 1847, 1897, 1905, 1941, 1946, 1948, 1963, 1966, 1969, 2008, 2009, 2013, 2018, 2034, 2037, 2039, 2040, 2041, 2042, 2043, 2046, 2050, 2054, 2056, 2061, 2067, 2073, 2077, 2085, 2088, 2091], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 12, 15, 18, 22, 24, 27, 35, 36, 37, 41, 49, 50, 52, 56, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 84, 85, 86, 498, 679, 746, 895, 896, 897, 898, 899, 911, 1163, 1178, 1191, 1194, 1209, 1432, 1455, 1709, 1803, 1962, 2005, 2006, 2009, 2010, 2015, 2021, 2024, 2027, 2032, 2034, 2036, 2039, 2042, 2043, 2054, 2059, 2061, 2062, 2063, 2067, 2072, 2077, 2082, 2083, 2084, 2090, 2091, 2092, 2094, 2095, 2098, 2101, 2102, 2103, 2104], "verbose_off": 2, "dnn": [2, 2036], "onednn": [2, 855, 856, 859, 1267, 1274, 2057, 2062], "former": [2, 52, 1489, 1519, 2034], "dnnl_verbos": 2, "verbose_on_cr": 2, "set_flag": 2, "_enabl": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 16, 17, 23, 33, 49, 56, 60, 1625, 2004, 2005, 2022, 2023, 2039, 2046, 2054, 2058, 2065, 2067, 2077, 2081, 2085, 2089, 2109], "els": [2, 7, 12, 22, 27, 29, 33, 35, 36, 44, 49, 61, 63, 602, 759, 939, 943, 986, 1277, 1283, 1484, 1559, 1663, 1677, 1709, 1776, 1777, 1780, 1786, 1787, 1788, 1789, 1843, 1844, 1876, 1882, 1960, 2006, 2008, 2010, 2011, 2016, 2024, 2027, 2037, 2039, 2040, 2042, 2046, 2047, 2054, 2055, 2056, 2058, 2059, 2074, 2085, 2088, 2089, 2090, 2091, 2102], "einsum": [2, 2007, 2057], "readthedoc": [2, 1105], "io": [2, 7, 14, 22, 29, 49, 1105, 1273, 1276, 1337, 1489, 1490, 1567, 1851, 2052, 2054, 2062], "en": [2, 14, 23, 1105, 2044, 2077, 2107], "path_find": [2, 1105], "html": [2, 3, 4, 7, 11, 14, 15, 45, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 972, 1105, 1569, 1957, 1960, 2035, 2044, 2046, 2050, 2059, 2061, 2077], "calcul": [2, 22, 27, 29, 41, 759, 767, 768, 798, 801, 818, 819, 823, 916, 960, 994, 1093, 1097, 1105, 1109, 1256, 1262, 1321, 1343, 1344, 1346, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1438, 1449, 1450, 1451, 1465, 1470, 1472, 1473, 1481, 1482, 1483, 1491, 1559, 1568, 1571, 1572, 1592, 1593, 1594, 1598, 1617, 1622, 1625, 1636, 1666, 1724, 1736, 1758, 1762, 1764, 1795, 1841, 1914, 1915, 1946, 1948, 1964, 1965, 2034, 2035, 2038, 2042, 2043, 2049, 2052, 2062, 2072, 2083], "contract": [2, 50, 1105, 1937, 2005, 2026, 2059, 2089], "fall": [2, 7, 14, 19, 22, 49, 794, 919, 972, 1194, 1228, 1279, 1337, 1479, 1551, 1634, 1681, 1714, 1715, 2004, 2056, 2062, 2094, 2101], "left": [2, 22, 61, 459, 498, 813, 819, 865, 941, 945, 948, 950, 951, 956, 961, 1105, 1125, 1132, 1146, 1149, 1150, 1154, 1219, 1223, 1224, 1228, 1262, 1263, 1270, 1285, 1306, 1315, 1319, 1323, 1326, 1327, 1328, 1329, 1331, 1343, 1344, 1405, 1423, 1428, 1429, 1430, 1431, 1432, 1446, 1447, 1448, 1465, 1472, 1485, 1486, 1487, 1488, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1522, 1523, 1524, 1528, 1529, 1568, 1571, 1572, 1573, 1574, 1580, 1582, 1625, 1645, 1664, 1677, 1715, 1793, 1794, 1807, 1835, 1848, 1855, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1916, 1937, 1942, 1963, 2006, 2007, 2009, 2034, 2039, 2042, 2046, 2065, 2073, 2091, 2101, 2105], "strategi": [2, 3, 7, 22, 23, 27, 31, 37, 52, 908, 910, 1105, 1166, 1279, 1423, 1709, 1716, 1717, 1801, 2008, 2040, 2043, 2063, 2091, 2094], "auto": [2, 27, 53, 81, 82, 1105, 1431, 1432, 2009, 2056, 2075, 2077, 2093], "greedi": [2, 31, 1105], "doc": [2, 3, 4, 9, 11, 15, 44, 45, 50, 85, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 839, 972, 1174, 1284, 1564, 1565, 1566, 1567, 1957, 1969, 2010, 2013, 2024, 2035, 2038, 2039, 2046, 2050, 2059, 2062, 2067, 2072, 2077, 2085, 2091, 2095, 2099], "timer": [3, 30, 2005], "stmt": [3, 2036], "setup": [3, 14, 23, 29, 44, 45, 52, 62, 819, 820, 821, 824, 1174, 1709, 1969, 2036, 2037, 2047, 2061, 2067, 2068, 2089], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 22, 27, 31, 935, 1105, 1423, 1432, 1438, 1452, 1454, 1478, 1511, 1522, 1523, 1609, 1751, 1794, 2038, 2042, 2048, 2050, 2077], "sub_label": 3, "descript": [3, 7, 13, 14, 19, 22, 24, 37, 44, 61, 733, 1237, 1238, 1239, 1311, 1338, 1590, 1819, 1863, 2008, 2009, 2018, 2037, 2039, 2043, 2045, 2046, 2056, 2080, 2084, 2095, 2101, 2107], "env": [3, 27, 33, 37, 42, 44, 45, 46, 48, 61, 1061, 1181, 1182, 2038, 2049, 2054, 2055, 2067, 2094, 2103], "num_thread": [3, 2048], "languag": [3, 14, 37, 49, 1277, 1423, 1563, 1624, 2041, 2053, 2091], "measur": [3, 33, 41, 1007, 1053, 1055, 1297, 1378, 1431, 1432, 1452, 1478, 1485, 1510, 1511, 1568, 1569, 1597, 1657, 1803, 1974, 2005, 2037, 2045, 2046, 2058, 2072], "statement": [3, 12, 33, 50, 57, 61, 63, 68, 71, 72, 986, 1266, 1281, 2010, 2034, 2039, 2048, 2051, 2053, 2056, 2059, 2065, 2067, 2089, 2091], "full": [3, 7, 8, 14, 15, 22, 23, 27, 29, 31, 33, 44, 48, 49, 52, 53, 57, 61, 485, 512, 900, 904, 905, 906, 941, 950, 972, 1133, 1134, 1135, 1139, 1140, 1142, 1161, 1173, 1174, 1223, 1224, 1269, 1303, 1304, 1311, 1312, 1313, 1324, 1329, 1330, 1338, 1355, 1432, 1438, 1472, 1533, 1563, 1600, 1601, 1602, 1609, 1622, 1669, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1867, 1920, 1921, 1969, 2004, 2006, 2007, 2008, 2009, 2011, 2026, 2033, 2037, 2038, 2039, 2042, 2043, 2046, 2049, 2050, 2054, 2057, 2059, 2062, 2065, 2068, 2076, 2079, 2092, 2094, 2097, 2098, 2103], "org": [3, 4, 7, 9, 10, 11, 12, 15, 23, 33, 45, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 972, 986, 1338, 1489, 1539, 1566, 1569, 1725, 1761, 1809, 1863, 1883, 1960, 2004, 2010, 2034, 2035, 2046, 2050, 2052, 2056, 2059, 2077, 2078, 2105, 2107], "timeit": [3, 2036], "sever": [3, 12, 15, 22, 27, 33, 52, 61, 737, 738, 739, 740, 741, 742, 765, 766, 771, 772, 773, 781, 782, 915, 916, 1050, 1109, 1201, 1202, 1265, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1446, 1447, 1448, 1449, 1450, 1451, 1466, 1467, 1486, 1487, 1488, 1507, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1573, 1574, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1600, 1601, 1602, 1603, 1604, 1605, 1620, 1621, 1643, 1646, 1647, 1648, 1650, 1651, 1652, 1709, 1726, 1727, 1729, 1730, 1762, 1770, 1824, 1825, 1952, 1957, 2006, 2033, 2034, 2036, 2037, 2045, 2046, 2048, 2056, 2058, 2062, 2067, 2091, 2092, 2094, 2106], "awar": [3, 7, 52, 83, 485, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 837, 838, 855, 862, 863, 1567, 1709, 1924, 1925, 1927, 1928, 1929, 2026, 2034, 2037, 2059, 2065, 2068, 2072, 2100], "element": [3, 12, 22, 27, 33, 50, 57, 58, 61, 63, 69, 71, 72, 96, 118, 149, 153, 195, 215, 241, 253, 257, 285, 312, 314, 316, 318, 320, 351, 397, 399, 401, 434, 453, 470, 472, 473, 496, 498, 512, 514, 516, 519, 544, 545, 557, 559, 608, 609, 616, 680, 682, 683, 686, 687, 692, 693, 697, 698, 734, 757, 759, 769, 770, 771, 772, 773, 779, 783, 792, 874, 876, 877, 878, 881, 882, 883, 884, 885, 893, 908, 909, 911, 912, 913, 919, 920, 942, 951, 954, 961, 967, 971, 986, 988, 990, 991, 992, 1047, 1084, 1085, 1086, 1087, 1088, 1089, 1092, 1094, 1095, 1096, 1100, 1102, 1105, 1108, 1110, 1111, 1115, 1135, 1139, 1140, 1142, 1144, 1149, 1151, 1152, 1154, 1157, 1159, 1164, 1165, 1167, 1168, 1169, 1173, 1174, 1206, 1207, 1208, 1209, 1219, 1222, 1225, 1226, 1227, 1228, 1242, 1250, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1285, 1287, 1288, 1290, 1307, 1309, 1313, 1324, 1328, 1339, 1340, 1342, 1345, 1347, 1348, 1349, 1350, 1354, 1355, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1388, 1405, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1427, 1428, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1470, 1471, 1474, 1475, 1476, 1477, 1478, 1479, 1484, 1485, 1489, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1505, 1508, 1510, 1511, 1512, 1513, 1514, 1518, 1520, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1547, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1568, 1569, 1571, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1610, 1614, 1617, 1618, 1623, 1624, 1628, 1629, 1630, 1631, 1634, 1637, 1638, 1640, 1645, 1650, 1651, 1652, 1656, 1657, 1661, 1662, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680, 1681, 1683, 1685, 1687, 1688, 1689, 1690, 1695, 1708, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1743, 1744, 1750, 1751, 1753, 1754, 1763, 1764, 1765, 1767, 1772, 1812, 1813, 1816, 1817, 1824, 1825, 1827, 1838, 1841, 1842, 1846, 1848, 1850, 1867, 1870, 1872, 1884, 1885, 1887, 1888, 1892, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1914, 1915, 1919, 1931, 1933, 1934, 1938, 1939, 1940, 1942, 1944, 1945, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1955, 1964, 1965, 1966, 1969, 1972, 2007, 2009, 2013, 2016, 2027, 2032, 2035, 2036, 2039, 2043, 2049, 2051, 2056, 2058, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2081, 2091, 2093, 2096, 2104], "lazili": [3, 17, 29, 1007, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1699, 1974, 2006, 2039, 2101, 2109], "threadpool": 3, "comparison": [3, 23, 27, 49, 61, 1265, 1281, 1282, 1519, 1772, 2010, 2039, 2079, 2083, 2092], "appl": [3, 2022], "synchron": [3, 4, 17, 18, 19, 23, 29, 31, 35, 44, 52, 60, 485, 877, 1007, 1008, 1010, 1018, 1038, 1079, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1313, 1314, 1320, 1323, 1326, 1327, 1329, 1330, 1338, 1378, 1559, 1709, 1763, 1765, 1841, 1974, 1975, 2005, 2036, 2037, 2038, 2044, 2048, 2060, 2067, 2074, 2094, 2106], "focu": [3, 50, 1803], "replic": [3, 22, 29, 32, 52, 85, 1219, 1276, 1446, 1447, 1448, 1455, 1465, 1495, 1496, 1497, 1544, 1545, 1546, 1571, 1664, 1692, 2060], "particularli": [3, 22, 23, 47, 1454, 1455, 1526, 2006, 2037, 2090, 2091, 2101], "variat": [3, 33, 2009, 2039, 2058, 2063, 2103], "confound": 3, "quantifi": [3, 1569], "nois": [3, 2007, 2050, 2103], "median": [3, 33, 172, 1411, 1957, 2007, 2025, 2057], "robust": [3, 1338, 2024, 2046], "deviat": [3, 33, 52, 376, 1427, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1559, 1765, 1877, 1882, 1914, 1915, 2032, 2094], "merg": [3, 6, 7, 9, 22, 27, 29, 45, 1520, 1525, 1529], "repeat": [3, 33, 49, 57, 493, 994, 1105, 1191, 1329, 1355, 1515, 1516, 1517, 1597, 1598, 1809, 1841, 1900, 1920, 1921, 1938, 2007, 2009, 2037, 2057, 2061, 2064, 2072, 2098], "autorang": 3, "exact": [3, 14, 22, 35, 47, 50, 84, 338, 740, 741, 742, 794, 874, 875, 876, 919, 920, 972, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1366, 1450, 1489, 1567, 1636, 1709, 1804, 1893, 2032, 2037, 2038, 2048, 2072, 2093, 2094, 2100, 2103, 2104], "discuss": [3, 5, 8, 9, 10, 33, 49, 61, 1479, 1636, 2016, 2034, 2039, 2042, 2046, 2050, 2067, 2069, 2072, 2091, 2092], "docstr": [3, 14, 61, 861, 862, 1265, 1519, 2004, 2037], "adapt": [3, 49, 765, 766, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1456, 1584, 1585, 1586, 1587, 1588, 1589, 1774, 1775, 1786, 1788, 1795, 2037, 2054, 2090], "field": [3, 7, 27, 29, 31, 35, 37, 41, 42, 50, 52, 61, 487, 825, 893, 894, 937, 1263, 1265, 1423, 1431, 1432, 1452, 1454, 1478, 1484, 1485, 1510, 1511, 1519, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1590, 1597, 1598, 1608, 1625, 1637, 1661, 1669, 1750, 1784, 1790, 2021, 2034, 2038, 2048, 2056, 2067, 2068, 2077, 2091, 2102, 2103], "displai": [3, 18, 1049, 1062, 1181, 1636, 1696, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 2004, 2010, 2015, 2020, 2056, 2077, 2079, 2085, 2094, 2103, 2106], "instruct": [3, 4, 11, 14, 47, 60, 1863, 2006, 2009, 2037, 2049, 2056, 2062, 2079, 2087, 2091, 2093, 2103], "count": [3, 19, 22, 33, 41, 49, 61, 894, 928, 937, 943, 993, 1043, 1159, 1227, 1228, 1263, 1303, 1304, 1750, 1803, 1953, 1954, 2007, 2021, 2037, 2042, 2057, 2061, 2067, 2069, 2071, 2072, 2094, 2103], "wall": [3, 2097], "callgrind": 3, "analog": [3, 49, 61, 485, 693, 915, 1088, 1126, 1128, 1315, 1489, 1789, 1920, 1938, 2027, 2046, 2090], "constructor": [3, 14, 22, 23, 31, 52, 61, 63, 72, 823, 861, 862, 1423, 1524, 1529, 1530, 1548, 1573, 1574, 1709, 1757, 1895, 2005, 2006, 2009, 2010, 2037, 2038, 2046, 2067, 2072, 2074, 2075, 2078, 2107], "snippet": [3, 45, 2004, 2046, 2051, 2085, 2096], "loop": [3, 23, 47, 49, 50, 53, 57, 58, 61, 63, 68, 862, 863, 914, 1050, 1053, 1055, 1168, 1174, 1281, 1709, 1727, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1969, 2006, 2007, 2009, 2021, 2036, 2037, 2041, 2043, 2046, 2049, 2053, 2056, 2058, 2061, 2062, 2077, 2088, 2091, 2093, 2102], "callabl": [3, 5, 12, 22, 23, 27, 31, 33, 35, 37, 42, 44, 47, 49, 50, 52, 60, 61, 118, 397, 841, 972, 974, 986, 1047, 1048, 1050, 1163, 1164, 1165, 1170, 1173, 1174, 1265, 1268, 1271, 1277, 1281, 1337, 1338, 1519, 1563, 1565, 1567, 1569, 1702, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 1797, 1800, 1969, 2004, 2006, 2008, 2009, 2010, 2013, 2021, 2037, 2039, 2046, 2051, 2054, 2056, 2059, 2060, 2061, 2067, 2079, 2082, 2083, 2089, 2092, 2095, 2102, 2104], "present": [3, 9, 22, 27, 29, 44, 50, 52, 894, 937, 939, 1214, 1263, 1265, 1355, 1423, 1489, 1519, 1529, 1750, 1770, 1916, 2004, 2020, 2024, 2025, 2026, 2033, 2034, 2037, 2039, 2043, 2046, 2051, 2056, 2059, 2068, 2071, 2072, 2075, 2091, 2095, 2099, 2105], "default_tim": 3, "dict": [3, 5, 12, 22, 23, 27, 28, 29, 31, 32, 33, 35, 38, 42, 47, 49, 50, 52, 54, 56, 59, 61, 414, 679, 791, 792, 793, 814, 815, 816, 835, 854, 921, 928, 939, 972, 986, 1047, 1048, 1061, 1071, 1162, 1172, 1174, 1263, 1264, 1265, 1266, 1272, 1277, 1281, 1282, 1337, 1338, 1455, 1465, 1519, 1520, 1529, 1571, 1699, 1709, 1740, 1759, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1969, 1983, 2004, 2006, 2007, 2009, 2010, 2013, 2020, 2021, 2039, 2046, 2051, 2054, 2056, 2057, 2058, 2067, 2068, 2077, 2082, 2083, 2092, 2099, 2102, 2104], "summar": [3, 4, 45, 1867, 2009, 2027, 2042, 2072, 2091, 2092, 2103], "relu": [3, 23, 49, 57, 58, 61, 699, 700, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 764, 791, 792, 813, 854, 860, 1047, 1164, 1174, 1271, 1277, 1519, 1535, 1537, 1548, 1556, 1563, 1565, 1567, 1673, 1675, 1699, 1771, 1969, 2006, 2007, 2019, 2026, 2027, 2032, 2034, 2046, 2051, 2056, 2057, 2062, 2064, 2065, 2085, 2089, 2096, 2098, 2101, 2102, 2103], "readabl": [3, 13, 22, 42, 49, 61, 1049, 1062, 1935, 2056, 2058, 2092, 2103, 2104], "supplement": 3, "disambigu": [3, 42, 61, 1343, 2103], "ident": [3, 14, 22, 27, 29, 33, 61, 787, 813, 919, 920, 1093, 1194, 1303, 1304, 1305, 1306, 1319, 1331, 1334, 1338, 1355, 1410, 1411, 1427, 1456, 1666, 1716, 1717, 1723, 1726, 1962, 1966, 1972, 2010, 2032, 2049, 2050, 2059, 2064, 2072, 2093, 2103], "easi": [3, 22, 27, 29, 44, 49, 1179, 2006, 2034, 2041, 2045, 2046, 2048, 2059, 2062, 2067, 2068, 2072, 2089, 2092, 2094, 2096], "differenti": [3, 33, 53, 58, 149, 351, 588, 801, 889, 891, 893, 898, 899, 900, 902, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 969, 1050, 1167, 1168, 1169, 1173, 1280, 1312, 1313, 1324, 1355, 1437, 1438, 1461, 1627, 1662, 1709, 1729, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1957, 2005, 2016, 2039, 2041, 2043, 2056, 2058, 2067, 2078, 2094], "distinguish": [3, 1180, 2062, 2072], "princip": [3, 1312, 1809], "signal": [3, 11, 29, 35, 44, 47, 737, 738, 739, 765, 766, 781, 782, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1262, 1328, 1420, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1446, 1447, 1448, 1466, 1467, 1486, 1487, 1488, 1507, 1512, 1513, 1514, 1573, 1574, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1600, 1603, 1620, 1621, 1643, 1646, 1647, 1648, 1650, 1651, 1652, 1916, 2005, 2024, 2048, 2061, 2067], "form": [3, 7, 9, 11, 22, 27, 33, 43, 44, 45, 49, 50, 52, 57, 61, 759, 778, 784, 963, 1093, 1133, 1135, 1177, 1179, 1265, 1305, 1308, 1313, 1324, 1329, 1421, 1422, 1425, 1426, 1438, 1466, 1467, 1470, 1489, 1519, 1535, 1571, 1572, 1609, 1620, 1621, 1624, 1636, 1664, 1696, 1729, 1789, 1807, 1937, 2004, 2006, 2010, 2027, 2034, 2039, 2046, 2054, 2056, 2059, 2062, 2072, 2077, 2091, 2092, 2096, 2102], "treat": [3, 33, 43, 49, 55, 61, 63, 68, 69, 320, 470, 792, 919, 920, 1047, 1162, 1195, 1265, 1318, 1321, 1323, 1335, 1337, 1347, 1348, 1349, 1350, 1367, 1413, 1462, 1472, 1491, 1523, 1524, 1525, 1526, 1529, 1534, 1548, 1553, 1617, 1708, 1709, 1759, 1763, 1795, 1848, 1863, 1916, 1931, 1932, 1938, 1953, 2008, 2009, 2025, 2027, 2034, 2054, 2056, 2067, 2072, 2075, 2083, 2091, 2094, 2095, 2099, 2102], "distinct": [3, 11, 79, 1162, 1301, 1302, 1346, 1432, 2009, 2039, 2051, 2056, 2058, 2067, 2068, 2090], "workload": [3, 8, 22, 27, 52, 1050, 2037, 2042, 2045, 2049, 2061, 2067, 2087, 2101], "good": [3, 7, 8, 14, 61, 972, 1166, 1188, 1527, 1803, 1883, 2004, 2013, 2024, 2037, 2039, 2042, 2045, 2046, 2048, 2056, 2059, 2060, 2062, 2090, 2091, 2092, 2093, 2100], "intrins": [3, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 791, 792, 2063, 2064], "contrast": [3, 33, 35, 49, 759, 1179, 1470, 1789, 2032, 2034, 2040, 2042, 2072, 2098], "adaptive_autorang": 3, "threshold": [3, 23, 61, 1320, 1323, 1479, 1551, 1556, 1685, 1691, 1803, 1867, 2007, 2033, 2037, 2057, 2077], "min_run_tim": 3, "01": [3, 28, 31, 47, 487, 754, 779, 820, 821, 1106, 1148, 1505, 1640, 1641, 1699, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1795, 1801, 1821, 1874, 1876, 1877, 1882, 1883, 2007, 2032, 2045, 2056, 2058, 2098], "max_run_tim": 3, "callback": [3, 23, 35, 44, 47, 60, 61, 1709, 2021, 2039, 2045, 2061, 2067], "similar": [3, 7, 9, 11, 19, 22, 27, 33, 41, 50, 52, 57, 60, 61, 492, 514, 711, 712, 713, 714, 715, 716, 719, 729, 730, 731, 732, 744, 745, 755, 763, 801, 877, 892, 905, 906, 953, 958, 971, 972, 1151, 1152, 1265, 1452, 1453, 1465, 1478, 1481, 1482, 1483, 1519, 1568, 1607, 1750, 1764, 1765, 1790, 1813, 1841, 1848, 1897, 1932, 1938, 1954, 2008, 2009, 2024, 2025, 2027, 2034, 2036, 2037, 2039, 2040, 2043, 2049, 2056, 2059, 2060, 2062, 2067, 2068, 2072, 2073, 2078, 2090, 2093, 2094, 2096, 2099, 2103, 2107], "blocked_autorang": 3, "variablil": 3, "until": [3, 5, 7, 22, 23, 27, 31, 35, 44, 52, 60, 61, 485, 1007, 1008, 1010, 1041, 1159, 1286, 1338, 1378, 1381, 1382, 1625, 1699, 1709, 1792, 1798, 1938, 1974, 1975, 1988, 2024, 2032, 2037, 2041, 2042, 2051, 2054, 2056, 2061, 2067, 2069, 2074, 2091, 2094], "iqr": 3, "smaller": [3, 22, 61, 498, 544, 994, 1489, 1709, 1803, 1818, 1863, 1908, 2037, 2051, 2059, 2089, 2105, 2107], "reach": [3, 7, 8, 9, 22, 23, 27, 28, 35, 44, 49, 53, 1338, 1709, 1792, 1795, 1798, 1799, 2034, 2039, 2048, 2060, 2063, 2067, 2092], "At": [3, 5, 6, 7, 15, 22, 1139, 1433, 1434, 1435, 1446, 1447, 1448, 1449, 1450, 1451, 1486, 1487, 1488, 1958, 1962, 2019, 2027, 2036, 2043, 2062, 2067, 2073, 2091, 2092, 2094, 2103], "high": [3, 4, 7, 8, 9, 10, 15, 23, 27, 33, 35, 41, 43, 45, 61, 118, 1438, 1566, 1830, 1831, 1863, 1962, 2007, 2017, 2021, 2024, 2039, 2043, 2044, 2046, 2047, 2048, 2058, 2062, 2063, 2067, 2072, 2077, 2078, 2079, 2083, 2087, 2088, 2091, 2098, 2103, 2106], "pseudo": [3, 87], "block_siz": 3, "enough_data": 3, "len": [3, 22, 29, 61, 63, 68, 217, 544, 692, 694, 695, 698, 1124, 1128, 1131, 1135, 1138, 1142, 1173, 1269, 1332, 1353, 1365, 1410, 1413, 1455, 1664, 1735, 1737, 1753, 1794, 1801, 1905, 1908, 1914, 1915, 1919, 1963, 1964, 1965, 2006, 2007, 2009, 2039, 2057, 2071, 2072, 2077, 2091, 2102], "small_iqr": 3, "break": [3, 7, 27, 33, 55, 61, 679, 893, 972, 974, 1181, 1265, 1311, 1519, 1848, 1867, 2005, 2010, 2015, 2017, 2038, 2058, 2072, 2081, 2085, 2088, 2090, 2092, 2095, 2097, 2099], "stop": [3, 5, 27, 33, 35, 44, 45, 47, 50, 865, 894, 937, 1043, 1181, 1263, 1338, 1438, 1750, 1803, 1835, 2006, 2009, 2061, 2067, 2071, 2091, 2095], "repetit": [3, 1841, 1938], "statist": [3, 23, 27, 33, 798, 799, 819, 820, 821, 823, 824, 1016, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1082, 1083, 1343, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1559, 2021, 2034, 2041, 2058, 2060, 2062, 2065, 2094, 2103], "minimum": [3, 14, 23, 35, 44, 45, 49, 695, 696, 770, 794, 819, 820, 821, 824, 825, 875, 943, 1085, 1152, 1226, 1227, 1228, 1368, 1438, 1477, 1569, 1793, 1794, 1801, 1883, 1902, 1903, 1904, 1905, 1906, 1907, 2007, 2032, 2034, 2043, 2057, 2065, 2075, 2098], "total_tim": 3, "choic": [3, 8, 9, 27, 1281, 1329, 1520, 1529, 1826, 2036, 2056, 2065, 2072, 2090, 2091, 2103], "block": [3, 7, 8, 19, 22, 27, 31, 32, 44, 47, 52, 60, 61, 485, 582, 583, 584, 935, 951, 1007, 1061, 1286, 1338, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1495, 1496, 1497, 1498, 1499, 1500, 1522, 1571, 1619, 1695, 1709, 1902, 1903, 1904, 2006, 2008, 2009, 2021, 2024, 2028, 2034, 2037, 2038, 2042, 2043, 2056, 2062, 2067, 2072, 2084, 2101, 2105], "qualiti": [3, 7, 23], "balanc": [3, 972], "compet": [3, 2048], "amort": 3, "invoc": [3, 5, 61, 841, 972, 977, 1268, 1281, 2006, 2009, 2037, 2039, 2045, 2056, 2067, 2069, 2088, 2101], "less": [3, 6, 7, 14, 22, 23, 27, 33, 35, 47, 49, 52, 363, 679, 908, 910, 919, 920, 994, 1057, 1075, 1105, 1149, 1153, 1162, 1290, 1302, 1338, 1354, 1355, 1423, 1479, 1533, 1542, 1551, 1557, 1753, 1839, 1946, 1948, 2004, 2007, 2009, 2027, 2037, 2039, 2042, 2048, 2049, 2057, 2060, 2062, 2091, 2094, 2101], "bias": [3, 23, 733, 759, 793, 1433, 1434, 1435, 1470, 1471, 1473, 1481, 1482, 1483, 1489, 1490, 1491, 1534, 1535, 1537, 1559, 1579, 1580, 1708, 2058], "trivial": [3, 35, 37, 734, 962, 1177, 1181, 1723, 1905, 2056, 2069, 2091, 2093], "low": [3, 7, 18, 23, 33, 52, 498, 911, 1191, 1209, 1438, 1809, 1826, 1830, 1831, 1848, 1921, 2005, 2007, 2021, 2024, 2037, 2048, 2061, 2079, 2091, 2097, 2098, 2104], "digit": [3, 956, 1867, 2004, 2020, 2045, 2049], "microsecond": [3, 2037], "bia": [3, 9, 27, 49, 63, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 738, 739, 740, 741, 742, 748, 750, 751, 752, 753, 755, 759, 760, 763, 764, 771, 772, 773, 780, 791, 1172, 1265, 1275, 1423, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1470, 1471, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1519, 1525, 1535, 1536, 1537, 1563, 1565, 1567, 1580, 1595, 1596, 1600, 1601, 1602, 1603, 1604, 1605, 1626, 1635, 1639, 1642, 1699, 1709, 1719, 1721, 1723, 1724, 1725, 1739, 1741, 1743, 1758, 1761, 1823, 2007, 2013, 2017, 2019, 2031, 2039, 2046, 2051, 2054, 2058, 2062, 2064, 2072, 2077, 2098], "period": [3, 9, 31, 44, 941, 950, 1016, 1049, 1062, 1063, 1068, 1082, 1083, 1125, 1223, 1224, 1285, 1805, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2007, 2021, 2048], "overal": [3, 9, 22, 44, 919, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1566, 2034, 2036, 2037, 2048, 2062, 2063, 2097], "main": [3, 7, 22, 23, 27, 28, 29, 33, 35, 36, 37, 42, 44, 45, 47, 48, 49, 61, 259, 495, 972, 1092, 1093, 1094, 1095, 1096, 1328, 1627, 1900, 1945, 1946, 1947, 1948, 2004, 2006, 2021, 2024, 2026, 2027, 2033, 2034, 2037, 2038, 2039, 2040, 2042, 2046, 2048, 2052, 2053, 2054, 2062, 2067, 2068, 2077, 2078, 2084, 2085, 2089, 2091, 2094, 2102], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 2005], "tupl": [3, 5, 12, 14, 22, 27, 29, 32, 35, 41, 42, 44, 49, 50, 52, 61, 232, 318, 444, 446, 448, 496, 519, 536, 559, 582, 583, 584, 692, 694, 695, 696, 698, 734, 765, 766, 767, 768, 771, 772, 773, 778, 784, 785, 786, 792, 816, 817, 854, 861, 862, 878, 879, 886, 887, 888, 889, 890, 892, 905, 906, 908, 909, 910, 911, 912, 913, 914, 919, 920, 923, 924, 925, 939, 955, 974, 981, 986, 993, 1017, 1018, 1021, 1032, 1050, 1056, 1084, 1085, 1103, 1106, 1108, 1122, 1124, 1125, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1137, 1138, 1140, 1142, 1145, 1155, 1160, 1162, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1190, 1205, 1209, 1227, 1229, 1265, 1272, 1277, 1281, 1282, 1287, 1296, 1301, 1302, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1318, 1322, 1324, 1325, 1327, 1329, 1332, 1335, 1353, 1355, 1357, 1363, 1365, 1367, 1368, 1371, 1373, 1410, 1413, 1420, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1465, 1466, 1467, 1486, 1487, 1488, 1495, 1496, 1497, 1498, 1499, 1500, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1525, 1529, 1541, 1542, 1543, 1544, 1545, 1546, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1585, 1586, 1588, 1589, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1620, 1621, 1636, 1650, 1651, 1652, 1662, 1664, 1696, 1697, 1698, 1703, 1709, 1719, 1721, 1729, 1740, 1753, 1759, 1763, 1764, 1768, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1809, 1810, 1819, 1828, 1830, 1832, 1842, 1846, 1847, 1892, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1914, 1915, 1919, 1920, 1921, 1935, 1936, 1937, 1938, 1939, 1944, 1951, 1952, 1953, 1954, 1955, 1964, 1965, 1969, 1970, 1972, 2002, 2006, 2007, 2010, 2013, 2024, 2027, 2034, 2037, 2039, 2040, 2046, 2051, 2054, 2056, 2058, 2059, 2062, 2067, 2071, 2072, 2077, 2079, 2083, 2091, 2094, 2102, 2104], "modulo": [3, 33, 1153, 1194, 1839], "determin": [3, 5, 8, 11, 14, 17, 18, 21, 22, 23, 27, 33, 35, 42, 44, 52, 57, 61, 84, 85, 86, 822, 825, 908, 910, 919, 920, 941, 950, 957, 962, 1051, 1107, 1126, 1136, 1161, 1162, 1183, 1184, 1223, 1224, 1227, 1228, 1279, 1299, 1311, 1322, 1325, 1346, 1360, 1462, 1466, 1467, 1489, 1525, 1528, 1535, 1578, 1617, 1620, 1621, 1636, 1670, 1696, 1728, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1759, 1769, 1801, 1829, 1831, 1833, 1860, 1902, 1903, 1904, 1905, 1906, 1907, 1916, 1992, 2003, 2009, 2010, 2026, 2037, 2038, 2039, 2042, 2046, 2054, 2056, 2059, 2062, 2067, 2069, 2072, 2074, 2075, 2077, 2079, 2090, 2093, 2094, 2102, 2103, 2109], "itself": [3, 5, 7, 8, 27, 28, 49, 52, 58, 61, 487, 692, 698, 879, 994, 1167, 1168, 1265, 1277, 1281, 1519, 1553, 1683, 1709, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1894, 2006, 2024, 2039, 2046, 2048, 2050, 2053, 2056, 2059, 2067, 2072, 2076, 2089, 2091, 2093, 2103], "jitter": 3, "interpret": [3, 22, 27, 31, 33, 35, 44, 47, 49, 50, 778, 784, 880, 914, 1060, 1126, 1127, 1128, 1133, 1135, 1136, 1137, 1138, 1159, 1216, 1228, 1265, 1270, 1277, 1281, 1318, 1338, 1458, 1625, 1636, 1637, 1696, 1860, 1865, 2004, 2008, 2009, 2013, 2024, 2036, 2037, 2056, 2072, 2074, 2076, 2091, 2092], "ideal": [3, 43, 45, 1281, 1790, 2026, 2094], "analysi": [3, 23, 33, 49, 61, 1285, 1809, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2010, 2017, 2046, 2053, 2054, 2083, 2089, 2091, 2092, 2093, 2097], "valgrind": 3, "degrad": [3, 14, 52, 2036, 2038, 2039, 2072], "due": [3, 4, 5, 7, 23, 27, 29, 33, 43, 52, 57, 61, 63, 65, 83, 485, 880, 908, 909, 914, 990, 1278, 1301, 1302, 1329, 1355, 1458, 1472, 1563, 1572, 1636, 1677, 1757, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1921, 2006, 2037, 2043, 2044, 2050, 2054, 2056, 2062, 2063, 2067, 2069, 2094, 2099, 2103, 2105], "amelior": 3, "suffici": [3, 14, 23, 27, 33, 36, 44, 45, 50, 52, 485, 1776, 1777, 1789, 2004, 2013, 2072, 2075, 2094], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 61, 778, 784, 956, 1219, 1440, 1441, 1442, 1443, 1444, 1445, 1541, 1542, 1543, 1544, 1545, 1546, 1572, 1575, 1576, 1577, 1636, 1696, 1795, 1801, 2007, 2038, 2059, 2060, 2067, 2094], "caller": [3, 35, 44, 61, 854, 1265, 1519, 1567, 1905, 2034, 2037, 2067, 2069], "structur": [3, 5, 9, 12, 22, 23, 27, 34, 35, 37, 45, 49, 50, 52, 61, 63, 64, 68, 72, 892, 905, 906, 938, 972, 986, 1156, 1169, 1174, 1186, 1187, 1281, 1519, 1579, 1736, 1740, 1772, 1809, 1921, 1969, 2005, 2008, 2010, 2016, 2021, 2027, 2037, 2038, 2039, 2040, 2042, 2048, 2051, 2052, 2054, 2056, 2058, 2059, 2067, 2077, 2078, 2079, 2081, 2083, 2085, 2090, 2091, 2092, 2094, 2095, 2099, 2105], "restrict": [3, 8, 12, 22, 33, 50, 52, 57, 58, 986, 1337, 1360, 1454, 2008, 2009, 2010, 2026, 2027, 2034, 2037, 2043, 2060, 2062, 2090], "builtin": [3, 27, 61, 63, 72, 1278, 1337, 1835, 2006, 2008, 2010, 2067, 2069, 2091, 2094, 2103], "surpris": [3, 8, 52, 2004, 2043, 2049, 2093], "serial": [3, 15, 22, 27, 29, 31, 44, 1265, 1275, 1276, 1337, 1519, 1699, 1851, 2004, 2005, 2007, 2020, 2026, 2034, 2037, 2042, 2045, 2046, 2048, 2054, 2059, 2062, 2067, 2068], "subsequ": [3, 7, 14, 15, 27, 49, 52, 61, 972, 1008, 1265, 1277, 1281, 1446, 1447, 1448, 1449, 1450, 1451, 1519, 1548, 2037, 2050, 2056, 2067, 2072, 2085, 2088, 2094], "deseri": [3, 29, 1337, 1699, 2004, 2020, 2051, 2067], "globalsbridg": 3, "care": [3, 7, 14, 27, 33, 52, 60, 61, 974, 1126, 1128, 1180, 1181, 1519, 2024, 2036, 2037, 2038, 2039, 2041, 2046, 2048, 2051, 2056, 2067, 2072, 2088, 2093, 2094, 2095], "reli": [3, 9, 14, 22, 23, 27, 35, 37, 52, 61, 149, 893, 919, 974, 1105, 1455, 1790, 2018, 2034, 2036, 2038, 2039, 2042, 2050, 2051, 2072, 2076, 2093, 2094, 2095, 2097], "pickl": [3, 22, 23, 27, 1265, 1337, 1519, 1851, 2004, 2020, 2024, 2051, 2059, 2067, 2105], "transfer": [3, 22, 27, 52, 2019, 2024, 2037, 2044, 2046, 2059, 2067, 2075], "properli": [3, 7, 22, 23, 29, 31, 35, 44, 60, 1126, 1127, 1128, 1136, 1137, 1138, 1367, 1520, 1521, 1529, 1530, 1709, 1958, 2004, 2016, 2039, 2043, 2046, 2048, 2051, 2054, 2067, 2068, 2075], "profil": [3, 4, 41, 61, 485, 927, 928, 935, 972, 1279, 1702, 1703, 1704, 1705, 1867, 2005, 2042, 2057, 2067, 2084, 2094], "empti": [3, 26, 27, 29, 35, 42, 50, 52, 57, 61, 232, 320, 512, 514, 522, 536, 544, 816, 939, 942, 943, 953, 959, 1105, 1107, 1263, 1266, 1291, 1311, 1312, 1317, 1324, 1347, 1348, 1349, 1350, 1357, 1432, 1454, 1462, 1526, 1598, 1617, 1664, 1757, 1769, 1770, 1905, 1920, 1935, 2003, 2006, 2007, 2008, 2009, 2011, 2019, 2025, 2026, 2027, 2032, 2035, 2037, 2039, 2050, 2056, 2057, 2059, 2072, 2073, 2078, 2081, 2090, 2091, 2093, 2098, 2101], "drive": [3, 9, 27, 2034], "facil": [3, 24, 1337, 2024], "analyz": [3, 4, 18, 49, 61, 2038, 2039, 2042, 2049, 2103], "manipul": [3, 52, 60, 1269, 2005, 2033, 2041, 2046, 2060, 2065, 2102], "1000000": [3, 1773], "mirror": [3, 138, 1709], "semant": [3, 9, 11, 17, 27, 44, 45, 49, 50, 52, 59, 61, 149, 793, 874, 875, 876, 893, 914, 954, 1010, 1061, 1163, 1174, 1194, 1195, 1269, 1276, 1335, 1432, 1598, 1670, 1716, 1717, 1790, 1954, 1969, 2005, 2008, 2009, 2013, 2016, 2027, 2040, 2046, 2056, 2067, 2072, 2094], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 23, 2006], "consum": [3, 22, 29, 34, 47, 50, 60, 434, 1105, 2024, 2037, 2042, 2048, 2053, 2054, 2056, 2077], "extrapol": 3, "sinc": [3, 7, 22, 23, 27, 29, 32, 33, 37, 47, 49, 52, 61, 314, 487, 533, 746, 784, 792, 807, 808, 962, 974, 1053, 1055, 1057, 1105, 1145, 1146, 1147, 1162, 1262, 1265, 1270, 1276, 1279, 1355, 1431, 1461, 1515, 1516, 1517, 1519, 1572, 1580, 1590, 1625, 1627, 1696, 1699, 1702, 1740, 1759, 1764, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1916, 2006, 2007, 2008, 2009, 2013, 2015, 2019, 2021, 2027, 2033, 2034, 2037, 2039, 2040, 2041, 2042, 2043, 2045, 2046, 2051, 2052, 2053, 2056, 2057, 2059, 2060, 2061, 2062, 2066, 2067, 2068, 2069, 2072, 2073, 2075, 2076, 2078, 2079, 2088, 2091, 2094, 2099, 2102, 2103], "properti": [3, 22, 27, 28, 29, 31, 33, 36, 41, 44, 49, 50, 52, 61, 791, 880, 906, 923, 933, 1034, 1121, 1122, 1124, 1126, 1127, 1128, 1136, 1137, 1138, 1265, 1427, 1519, 1553, 1578, 1683, 1699, 1710, 1711, 1712, 1750, 1985, 2005, 2009, 2013, 2021, 2034, 2037, 2039, 2043, 2054, 2058, 2061, 2067, 2072, 2074, 2075, 2078, 2081, 2085, 2090, 2091, 2092, 2093, 2104, 2107], "significant_figur": 3, "figur": [3, 7, 8, 29, 61, 928, 2036, 2038, 2039, 2056, 2060, 2069, 2077, 2083, 2091, 2094], "intend": [3, 29, 44, 49, 61, 890, 900, 903, 905, 1012, 1181, 1285, 1590, 1702, 1703, 1704, 1705, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 2009, 2027, 2032, 2034, 2046, 2059], "interquartil": 3, "mitig": [3, 63, 2042, 2074], "tail": [3, 22, 42], "645": 3, "conjunct": [3, 22, 27, 31, 52, 823, 1590, 1625, 1709, 2065, 2067], "trim_sigfig": 3, "human": [3, 13, 42, 49, 1049, 1062, 2032, 2056, 2092, 2104], "raw": [3, 61, 1159, 1324, 2037, 2059, 2061], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 15, 22, 27, 29, 31, 33, 35, 42, 50, 52, 60, 61, 485, 495, 679, 759, 919, 926, 1122, 1124, 1127, 1128, 1130, 1131, 1134, 1135, 1137, 1138, 1140, 1142, 1281, 1355, 1433, 1434, 1435, 1455, 1458, 1470, 1481, 1482, 1483, 1493, 1494, 1501, 1502, 1503, 1504, 1529, 1559, 1565, 1567, 1617, 1709, 1911, 2009, 2019, 2024, 2034, 2036, 2037, 2038, 2039, 2040, 2041, 2046, 2049, 2054, 2056, 2058, 2060, 2062, 2063, 2067, 2069, 2075, 2089, 2090, 2091, 2093, 2100, 2102], "functioncount": [3, 2005], "stat": [3, 55, 825, 835, 836, 1061, 1069, 1070, 1071, 1559, 1709, 2021, 2037, 2082, 2094, 2103], "as_standard": 3, "strip": [3, 1627, 1709, 2006, 2057, 2072], "prefix": [3, 27, 29, 35, 44, 52, 747, 756, 1265, 1519, 1709, 2004, 2015, 2034, 2056, 2059, 2062, 2082, 2101], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 15, 18, 27, 33, 61, 679, 894, 919, 1125, 1126, 1128, 1136, 1137, 1138, 1305, 1563, 1564, 1565, 1566, 1567, 1699, 1809, 1916, 1967, 1968, 2010, 2015, 2034, 2038, 2039, 2045, 2046, 2054, 2060, 2072, 2089, 2095, 2103], "locat": [3, 9, 14, 27, 29, 33, 41, 86, 149, 153, 253, 485, 512, 679, 954, 956, 1019, 1084, 1085, 1287, 1337, 1363, 1368, 1371, 1405, 1455, 1465, 1554, 1571, 1590, 1625, 1692, 1695, 1709, 1729, 1820, 1855, 1876, 1898, 1901, 1957, 2004, 2006, 2020, 2037, 2051, 2056, 2059, 2061, 2067, 2069, 2072, 2077, 2082, 2085, 2088, 2093], "someth": [3, 7, 49, 50, 54, 61, 63, 65, 908, 910, 1105, 1191, 1265, 1281, 1519, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 2011, 2021, 2024, 2025, 2034, 2044, 2052, 2056, 2067, 2089, 2090, 2091, 2094, 2096, 2102, 2103, 2104], "resembl": [3, 15, 2085], "23234231": 3, "first_build_dir": 3, "foo": [3, 14, 27, 41, 42, 49, 60, 61, 63, 71, 72, 823, 854, 859, 972, 1162, 1163, 1172, 1263, 1268, 1273, 1276, 1277, 1280, 1281, 1759, 1958, 1960, 2004, 2006, 2008, 2009, 2013, 2017, 2039, 2046, 2056, 2059, 2079, 2088, 2091, 2094, 2103], "9823794": 3, "bar": [3, 7, 41, 49, 61, 63, 71, 72, 854, 859, 994, 1162, 1268, 1276, 1914, 1915, 1964, 1965, 2004, 2006, 2008, 2020, 2046, 2056, 2059, 2079], "53453": 3, "src": [3, 27, 61, 195, 227, 312, 320, 470, 511, 512, 513, 514, 515, 516, 518, 537, 1096, 1163, 1405, 1563, 1566, 1567, 1770, 1852, 1853, 1854, 1858, 1888, 1931, 1957, 2007, 2059, 2098], "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1262], "site": [3, 7, 2085], "denois": 3, "explan": [3, 9, 19, 24, 37, 862, 1265, 1519, 2005, 2038, 2039, 2046, 2094, 2100, 2103], "delta": [3, 33, 759, 994, 1470, 1479, 1489, 1551, 1634, 1774, 1914, 1915, 1942, 1964, 1965, 2007, 2032], "inclus": [3, 33, 49, 87, 512, 1185, 1191, 1226, 1228, 1336, 1352, 1358, 1581, 1582, 1830, 1831, 1913, 2066, 2079], "diff": [3, 7, 2006, 2007, 2057], "One": [3, 8, 14, 27, 29, 49, 50, 55, 57, 61, 582, 951, 1163, 1174, 1256, 1572, 1663, 1716, 1717, 1723, 1727, 1790, 1795, 1803, 1830, 1831, 1952, 1969, 2006, 2008, 2009, 2026, 2027, 2035, 2036, 2037, 2039, 2045, 2060, 2061, 2069, 2077, 2089, 2090, 2092, 2093, 2101], "reason": [3, 8, 9, 22, 27, 29, 49, 52, 57, 62, 80, 679, 841, 905, 906, 1126, 1128, 1265, 1281, 1282, 1301, 1302, 1329, 1366, 1431, 1458, 1519, 1627, 1677, 1729, 1851, 2006, 2008, 2009, 2013, 2015, 2034, 2038, 2040, 2042, 2049, 2051, 2056, 2067, 2075, 2089, 2090, 2091, 2093, 2094, 2097, 2103, 2104], "unit": [3, 11, 14, 33, 35, 45, 52, 61, 759, 760, 1123, 1141, 1427, 1437, 1460, 1463, 1468, 1469, 1470, 1471, 1538, 1539, 1549, 1590, 1614, 1618, 1623, 1624, 1671, 1680, 1733, 1734, 1738, 1741, 1743, 1746, 1832, 1944, 2022, 2034, 2036, 2042, 2043, 2059, 2087, 2088], "next": [3, 22, 27, 33, 44, 50, 52, 61, 559, 759, 1269, 1419, 1471, 1490, 1537, 1709, 1752, 2024, 2033, 2034, 2036, 2037, 2039, 2040, 2042, 2046, 2048, 2054, 2060, 2061, 2067, 2068, 2072, 2075, 2077, 2085, 2088, 2091, 2092, 2094], "logic": [3, 5, 12, 14, 22, 48, 52, 61, 944, 946, 947, 949, 979, 980, 1122, 1124, 1127, 1128, 1130, 1131, 1134, 1135, 1137, 1138, 1140, 1142, 1163, 1201, 1202, 1269, 1347, 1348, 1349, 1350, 1360, 1525, 1709, 1818, 1845, 1929, 2009, 2010, 2037, 2038, 2039, 2040, 2043, 2062, 2091], "question": [3, 10, 22, 61, 1189, 1761, 2005, 2034, 2042, 2084, 2090, 2093], "involv": [3, 5, 7, 9, 11, 22, 27, 52, 55, 57, 61, 79, 1179, 1709, 1863, 2009, 2025, 2027, 2034, 2037, 2038, 2041, 2046, 2056, 2062, 2067, 2068, 2069, 2072, 2090, 2093, 2101], "look": [3, 4, 7, 8, 9, 12, 15, 27, 33, 43, 44, 49, 50, 54, 57, 61, 63, 73, 74, 485, 862, 908, 910, 986, 1190, 1265, 1360, 1423, 1519, 1616, 1742, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1902, 1903, 1904, 1906, 1907, 2006, 2008, 2013, 2025, 2033, 2034, 2037, 2040, 2045, 2046, 2048, 2052, 2056, 2059, 2062, 2067, 2068, 2083, 2088, 2089, 2090, 2091, 2094, 2095, 2096, 2097, 2100, 2101, 2102, 2103, 2105], "autom": [3, 8, 61, 2006, 2062, 2085, 2094, 2103], "easili": [3, 7, 8, 11, 23, 27, 29, 49, 1163, 1526, 1625, 1664, 1790, 1848, 1958, 2039, 2040, 2043, 2046, 2051, 2058, 2066, 2067, 2069, 2077, 2094, 2102, 2103], "exclus": [3, 22, 27, 33, 35, 44, 49, 61, 734, 1228, 1709, 1830, 1831, 1834, 2034, 2079], "basi": [3, 9, 10, 33, 1338, 1795, 2037, 2045, 2062, 2067], "thought": [3, 41, 61, 1123, 1125, 1141, 1185, 2091], "path_and_function_nam": 3, "children": [3, 37, 52, 61, 790, 1265, 1519, 2024, 2042, 2046, 2059, 2069], "identifi": [3, 7, 9, 27, 29, 35, 38, 41, 44, 45, 47, 61, 485, 816, 1228, 1337, 1559, 2010, 2013, 2024, 2035, 2045, 2046, 2059, 2067, 2068, 2069, 2077, 2090, 2101], "hot": [3, 33, 1627, 1663, 2043, 2088], "spot": [3, 1716, 1717], "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 312, 563, 865, 1159, 1627, 1902, 1903, 1904, 1906, 1907, 1917, 2007, 2027, 2057, 2072], "index": [3, 15, 22, 23, 29, 33, 42, 49, 61, 190, 207, 280, 311, 312, 313, 314, 315, 316, 318, 320, 321, 470, 471, 511, 512, 513, 514, 515, 516, 517, 518, 694, 695, 816, 854, 877, 892, 894, 905, 906, 937, 956, 1023, 1026, 1084, 1085, 1125, 1166, 1167, 1168, 1172, 1174, 1206, 1237, 1238, 1239, 1240, 1263, 1282, 1287, 1295, 1313, 1331, 1345, 1353, 1355, 1359, 1363, 1366, 1367, 1368, 1371, 1393, 1396, 1405, 1411, 1414, 1415, 1423, 1438, 1454, 1461, 1462, 1520, 1521, 1526, 1529, 1530, 1569, 1571, 1616, 1617, 1663, 1735, 1737, 1744, 1745, 1750, 1763, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1804, 1805, 1820, 1852, 1853, 1854, 1855, 1857, 1858, 1859, 1888, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1916, 1931, 1952, 1953, 1955, 1956, 1957, 1960, 1969, 1977, 1979, 2005, 2006, 2007, 2009, 2016, 2024, 2025, 2026, 2027, 2034, 2037, 2038, 2040, 2044, 2050, 2057, 2069, 2071, 2072, 2075, 2076, 2077, 2078, 2079, 2093, 2094, 2098, 2103], "cpython": [3, 49, 61, 2084, 2092], "known": [3, 7, 9, 21, 26, 27, 31, 38, 50, 53, 56, 58, 63, 73, 74, 1169, 1170, 1181, 1281, 1282, 1337, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1489, 1535, 1549, 1551, 1571, 1636, 1680, 1699, 1875, 1876, 1935, 2005, 2007, 2011, 2013, 2021, 2024, 2027, 2032, 2034, 2036, 2050, 2056, 2058, 2067, 2069, 2073, 2084, 2090, 2095, 2103], "quit": [3, 7, 61, 1716, 1717, 2009, 2039, 2041, 2059, 2067, 2101], "noisi": 3, "higher": [3, 7, 8, 23, 27, 52, 53, 58, 63, 68, 72, 149, 893, 895, 914, 1010, 1050, 1061, 1097, 1164, 1170, 1174, 1178, 1191, 1194, 1226, 1242, 1412, 1454, 1511, 1526, 1677, 1774, 1820, 1921, 1969, 1975, 2005, 2013, 2037, 2039, 2040, 2043, 2045, 2051, 2062, 2063, 2067, 2075, 2090], "filter": [3, 19, 543, 771, 772, 773, 1262, 1285, 1446, 1447, 1448, 1449, 1450, 1451, 1600, 1601, 1602, 1603, 1604, 1605, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1916, 2009, 2059, 2103], "transform": [3, 12, 22, 29, 32, 49, 52, 57, 59, 78, 79, 80, 414, 780, 796, 837, 838, 857, 858, 963, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1162, 1163, 1164, 1168, 1173, 1188, 1262, 1275, 1436, 1473, 1481, 1482, 1483, 1491, 1506, 1548, 1564, 1565, 1566, 1567, 1590, 1596, 1625, 1642, 1662, 1699, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1883, 1916, 2005, 2017, 2040, 2042, 2054, 2060, 2062, 2072, 2077, 2083, 2084, 2085, 2092, 2096], "rather": [3, 8, 9, 14, 27, 35, 37, 47, 49, 52, 61, 63, 72, 778, 784, 932, 962, 1263, 1266, 1337, 1415, 1590, 1625, 1636, 1696, 1724, 1863, 1867, 2006, 2009, 2026, 2027, 2035, 2037, 2039, 2040, 2056, 2059, 2062, 2067, 2072, 2077, 2088, 2089, 2091, 2093, 2094, 2095, 2096], "unicod": [3, 2010], "dictionari": [3, 14, 22, 23, 29, 33, 56, 61, 414, 679, 791, 792, 793, 796, 814, 815, 816, 837, 838, 839, 854, 858, 864, 939, 972, 1061, 1162, 1172, 1177, 1181, 1265, 1266, 1273, 1277, 1281, 1282, 1337, 1338, 1461, 1462, 1519, 1520, 1529, 1616, 1740, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1983, 2008, 2010, 2039, 2046, 2054, 2056, 2058, 2067, 2077, 2082, 2099, 2104, 2105], "lookup": [3, 29, 33, 1461, 1616, 2006, 2010, 2036, 2068, 2097], "map": [3, 14, 27, 29, 33, 35, 41, 42, 44, 45, 49, 50, 52, 57, 58, 61, 63, 72, 79, 683, 734, 791, 792, 796, 798, 813, 814, 816, 838, 839, 854, 855, 856, 857, 858, 864, 885, 953, 1157, 1163, 1174, 1179, 1181, 1186, 1219, 1228, 1273, 1276, 1337, 1338, 1449, 1450, 1451, 1457, 1458, 1459, 1463, 1465, 1515, 1516, 1517, 1520, 1529, 1611, 1612, 1613, 1618, 1723, 1740, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1820, 1822, 1953, 1954, 1969, 2010, 2026, 2028, 2034, 2037, 2038, 2039, 2040, 2047, 2052, 2054, 2059, 2062, 2065, 2067, 2068, 2069, 2074, 2079, 2092, 2093, 2102, 2104], "agnost": [3, 16, 44, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1625, 1716, 1717, 2013, 2026], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 14, 27, 28, 29, 33, 35, 36, 37, 41, 45, 49, 50, 52, 60, 61, 582, 586, 587, 616, 683, 692, 694, 695, 698, 759, 885, 918, 919, 920, 959, 966, 970, 1009, 1019, 1021, 1049, 1062, 1097, 1103, 1105, 1151, 1152, 1172, 1174, 1183, 1229, 1265, 1273, 1281, 1283, 1287, 1321, 1337, 1353, 1363, 1365, 1366, 1368, 1371, 1389, 1410, 1413, 1415, 1470, 1489, 1519, 1535, 1572, 1663, 1702, 1709, 1724, 1750, 1757, 1758, 1762, 1764, 1817, 1841, 1857, 1860, 1893, 1905, 1912, 1914, 1915, 1919, 1942, 1964, 1965, 1969, 1970, 2005, 2006, 2008, 2009, 2010, 2011, 2013, 2016, 2024, 2027, 2037, 2039, 2042, 2046, 2049, 2052, 2054, 2059, 2060, 2067, 2069, 2072, 2074, 2075, 2079, 2089, 2091, 2093, 2101, 2102, 2105], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 322, 327, 543, 613, 1018, 1901, 1905, 1952, 2007, 2038, 2057, 2072, 2094], "entri": [3, 27, 28, 31, 33, 35, 42, 44, 45, 314, 734, 858, 859, 932, 1047, 1048, 1095, 1146, 1147, 1240, 1265, 1286, 1461, 1462, 1519, 1525, 1616, 1617, 1735, 1736, 1744, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 1899, 2006, 2009, 2010, 2016, 2027, 2034, 2038, 2039, 2043, 2046, 2051, 2065, 2072, 2077, 2082, 2089, 2090, 2091, 2092], "h": [4, 10, 14, 33, 486, 487, 740, 741, 742, 759, 964, 965, 1295, 1302, 1305, 1315, 1329, 1421, 1422, 1429, 1430, 1432, 1434, 1435, 1439, 1447, 1448, 1450, 1458, 1459, 1461, 1463, 1470, 1471, 1482, 1483, 1489, 1490, 1491, 1502, 1503, 1513, 1514, 1531, 1532, 1535, 1537, 1554, 1570, 1573, 1574, 1590, 1598, 1625, 1661, 1667, 1668, 1723, 1724, 1758, 1770, 1920, 2007, 2025, 2026, 2034, 2037, 2038, 2039, 2041, 2043, 2056, 2076, 2077, 2078, 2085, 2090, 2100], "finit": [4, 33, 919, 920, 1254, 1255, 1301, 1302, 1312, 1313, 1329, 1355, 1405, 1409, 1431, 1920, 2039, 2043, 2079], "natur": [4, 7, 8, 11, 29, 33, 52, 63, 65, 83, 919, 920, 1294, 1299, 1325, 1339, 1341, 1346, 1423, 1567, 1677, 2042, 2043, 2053, 2054, 2072, 2073], "against": [4, 5, 14, 27, 35, 44, 793, 865, 919, 920, 1133, 1134, 1135, 1139, 1140, 1142, 1206, 1256, 1265, 1281, 1282, 1519, 1525, 1771, 2004, 2009, 2059, 2083, 2091, 2100], "cprofil": 4, "mode": [4, 8, 22, 23, 27, 29, 33, 44, 47, 49, 57, 58, 61, 78, 220, 221, 487, 745, 746, 771, 772, 773, 778, 784, 785, 786, 814, 816, 822, 825, 859, 860, 889, 891, 895, 898, 899, 900, 905, 906, 908, 909, 910, 911, 915, 916, 917, 919, 972, 977, 1005, 1038, 1079, 1080, 1109, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1163, 1166, 1167, 1168, 1169, 1172, 1173, 1178, 1180, 1213, 1248, 1249, 1263, 1265, 1266, 1269, 1281, 1283, 1324, 1337, 1367, 1381, 1382, 1402, 1433, 1434, 1435, 1446, 1447, 1448, 1462, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1519, 1536, 1559, 1572, 1573, 1600, 1601, 1602, 1617, 1625, 1636, 1664, 1696, 1697, 1698, 1710, 1718, 1720, 1724, 1729, 1762, 1795, 1803, 1819, 1862, 1864, 1957, 2005, 2007, 2013, 2019, 2025, 2032, 2037, 2038, 2040, 2041, 2042, 2046, 2053, 2054, 2057, 2061, 2063, 2064, 2065, 2067, 2078, 2081, 2085, 2088, 2092, 2093, 2094, 2095, 2096, 2098, 2103, 2104], "correct": [4, 6, 7, 23, 27, 28, 29, 33, 44, 49, 204, 205, 208, 220, 554, 579, 602, 603, 614, 900, 901, 905, 920, 994, 1126, 1128, 1136, 1137, 1138, 1186, 1240, 1263, 1266, 1281, 1282, 1301, 1455, 1472, 1484, 1699, 1709, 1750, 1866, 1914, 1915, 1964, 1965, 2006, 2007, 2008, 2013, 2017, 2025, 2026, 2037, 2039, 2043, 2074, 2091, 2098, 2102], "launch": [4, 14, 22, 30, 35, 36, 37, 42, 43, 44, 48, 60, 1008, 1709, 2005, 2034, 2036, 2037, 2038, 2039, 2067, 2088, 2096], "spent": [4, 27, 933, 1801, 2036, 2046, 2094, 2101, 2103], "appear": [4, 23, 27, 33, 49, 50, 61, 854, 1050, 1105, 1146, 1147, 1174, 1337, 1371, 1373, 1710, 1841, 1869, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1969, 2006, 2009, 2025, 2026, 2039, 2040, 2046, 2056, 2059, 2091, 2094, 2101], "extrem": [4, 27, 1709, 2034, 2056, 2093], "expens": [4, 22, 33, 52, 1723, 2037, 2043, 2045, 2061, 2067, 2078, 2090, 2094, 2097, 2100, 2103], "bound": [4, 15, 23, 27, 49, 52, 480, 794, 956, 967, 1119, 1120, 1177, 1181, 1185, 1190, 1265, 1428, 1429, 1430, 1512, 1513, 1514, 1519, 1538, 1625, 1803, 1834, 1855, 2009, 2010, 2032, 2034, 2042, 2059, 2062, 2073, 2090, 2091, 2093, 2103], "greater": [4, 27, 44, 63, 64, 291, 616, 679, 948, 961, 962, 967, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1208, 1222, 1320, 1385, 1431, 1568, 1625, 1636, 1663, 1677, 1693, 1696, 1724, 1758, 1803, 1957, 2007, 2034, 2037, 2050, 2057, 2072, 2073], "spend": [4, 7, 1338, 2017, 2097], "sens": [4, 33, 44, 61, 1740, 1953, 1954, 2009, 2034, 2042], "respons": [4, 7, 9, 27, 29, 31, 33, 35, 41, 47, 52, 60, 1008, 1183, 1507, 1643, 1709, 1905, 2034, 2037, 2039, 2040, 2046, 2054, 2067, 2093], "Of": [4, 1763, 2004, 2038, 2039, 2084, 2091, 2094], "cours": [4, 61, 2004, 2038, 2039, 2067, 2091, 2094], "realiti": [4, 2042], "complic": [4, 23, 32, 61, 792, 1863, 2013, 2026, 2035, 2059, 2067, 2069, 2091, 2093], "account": [4, 42, 61, 1432, 1709, 2032, 2036, 2042, 2072, 2088], "heavili": [4, 62, 1779, 2036, 2039, 2059], "similarli": [4, 7, 29, 49, 60, 61, 759, 789, 793, 858, 963, 1125, 1265, 1321, 1519, 1567, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747, 1945, 1946, 1947, 1948, 2008, 2034, 2039, 2041, 2043, 2049, 2072, 2093, 2096, 2101], "platform": [4, 8, 9, 14, 27, 36, 37, 41, 1312, 1313, 1324, 1819, 1920, 2019, 2044, 2049, 2050, 2062], "startup": 4, "slower": [4, 14, 27, 876, 909, 1145, 1146, 1147, 1295, 1302, 1644, 1723, 1774, 2039, 2050, 2058, 2073, 2093], "rerun": [5, 27, 2037], "segment": [5, 1061, 1159, 1551, 2037, 2059, 2094, 2099, 2105], "persist": [5, 20, 29, 49, 52, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 759, 814, 815, 816, 1265, 1470, 1489, 1519, 1535, 2046, 2051, 2052, 2054, 2074, 2088, 2093, 2097], "rng": [5, 22, 1036, 1076, 1379, 1386, 1856, 1986, 1997, 2037, 2050, 2066], "advanc": [5, 15, 22, 23, 35, 1563, 1565, 1567, 1763, 1960, 2016, 2026, 2037, 2039, 2044, 2048, 2054, 2076, 2077, 2094], "juggl": 5, "moder": 5, "hit": [5, 8, 14, 1183, 1709, 2004, 2037, 2088, 2091, 2094, 2097, 2103], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 2005], "omit": [5, 14, 27, 45, 1139, 1140, 1142, 1181, 1472, 1533, 2052, 2056, 2067, 2079, 2091, 2095], "exclud": [5, 9, 23, 44, 61, 981, 1228, 1462, 1617, 1666, 1771, 1863, 1945, 1946, 1947, 1948, 2034, 2044, 2051, 2059, 2068, 2092, 2094], "_infer_device_typ": 5, "remain": [5, 8, 33, 44, 61, 1373, 1461, 1462, 1616, 1617, 1699, 1709, 1716, 1717, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747, 1803, 1820, 1842, 2021, 2024, 2033, 2041, 2046, 2074, 2085, 2092], "consequ": [5, 57, 1329, 1489, 1920, 2009, 2034, 2037, 2048, 2050, 2053], "random": [5, 33, 35, 44, 45, 53, 61, 83, 87, 153, 759, 892, 905, 906, 942, 1036, 1037, 1042, 1051, 1052, 1072, 1073, 1076, 1077, 1167, 1174, 1218, 1241, 1338, 1358, 1379, 1380, 1384, 1386, 1427, 1438, 1463, 1470, 1489, 1538, 1618, 1669, 1675, 1699, 1724, 1731, 1737, 1738, 1745, 1746, 1765, 1809, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1856, 1868, 1921, 1960, 1969, 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1997, 1998, 2004, 2005, 2007, 2015, 2032, 2040, 2043, 2049, 2056, 2057, 2077, 2094, 2103], "gradient": [5, 11, 22, 23, 27, 31, 33, 52, 53, 56, 149, 220, 221, 289, 334, 486, 487, 494, 512, 694, 695, 880, 889, 891, 893, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 919, 920, 924, 925, 943, 969, 1109, 1162, 1163, 1164, 1165, 1169, 1174, 1206, 1265, 1301, 1302, 1305, 1312, 1313, 1329, 1338, 1355, 1357, 1363, 1366, 1368, 1431, 1438, 1449, 1450, 1451, 1454, 1455, 1461, 1462, 1472, 1486, 1487, 1488, 1519, 1526, 1551, 1608, 1609, 1616, 1617, 1627, 1636, 1644, 1646, 1647, 1648, 1661, 1696, 1697, 1698, 1709, 1710, 1713, 1714, 1715, 1723, 1729, 1762, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1793, 1794, 1807, 1901, 1920, 1969, 2005, 2006, 2007, 2013, 2016, 2026, 2027, 2028, 2032, 2037, 2038, 2039, 2041, 2042, 2043, 2046, 2049, 2057, 2058, 2067, 2068, 2072, 2101], "among": [5, 22, 23, 27, 31, 33, 44, 1017, 1018, 1021, 1228, 1455, 1765, 2009, 2048, 2091, 2093], "detect": [5, 14, 17, 18, 22, 24, 27, 28, 35, 37, 52, 908, 909, 910, 911, 912, 913, 972, 1163, 1269, 1563, 1564, 1566, 1709, 1957, 2005, 2024, 2027, 2037, 2043, 2049, 2056, 2059, 2067, 2090, 2091, 2094, 2103], "priorit": [5, 1166, 1167, 1169, 1776, 1777, 1789, 2072], "defaultdevicetyp": 5, "anticip": [5, 2105], "belong": [5, 27, 29, 31, 33, 41, 61, 956, 1010, 1791, 1975, 2004, 2037, 2058, 2102, 2104], "use_reentr": [5, 1709], "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 61, 1456, 1731, 1942, 2028, 2046, 2053, 2054, 2058, 2060, 2062, 2087, 2103], "recomput": [5, 32, 900, 903, 905, 1572, 1636, 1761, 2058, 2090], "refer": [5, 7, 14, 22, 23, 27, 28, 29, 31, 33, 36, 39, 40, 44, 45, 52, 53, 60, 78, 79, 80, 83, 85, 253, 733, 734, 755, 763, 791, 792, 793, 818, 819, 820, 823, 824, 825, 859, 873, 878, 893, 954, 1043, 1048, 1108, 1159, 1181, 1213, 1215, 1246, 1253, 1265, 1268, 1277, 1284, 1297, 1302, 1318, 1322, 1335, 1338, 1405, 1438, 1472, 1519, 1569, 1590, 1598, 1607, 1625, 1636, 1637, 1695, 1704, 1705, 1709, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1809, 1826, 1833, 1862, 1863, 1883, 1921, 1957, 2004, 2005, 2007, 2024, 2025, 2027, 2028, 2033, 2034, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2046, 2048, 2050, 2056, 2058, 2060, 2063, 2064, 2067, 2068, 2072, 2074, 2075, 2076, 2077, 2081, 2084, 2085, 2089, 2091, 2092, 2096, 2099, 2103], "potenti": [5, 8, 29, 44, 47, 83, 190, 207, 485, 1182, 1275, 1311, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1677, 1709, 1957, 2008, 2016, 2024, 2034, 2037, 2039, 2042, 2059, 2072, 2075, 2076, 2090, 2094], "silent": [5, 27, 1051, 1052, 1072, 1073, 1240, 1281, 1519, 1714, 1715, 1905, 1992, 1993, 1994, 1995, 2037, 2049, 2056], "consider": [5, 7, 80, 884, 1262, 1462, 1709, 1716, 1717, 2009, 2036], "limit": [5, 8, 9, 12, 19, 22, 50, 52, 53, 58, 80, 986, 1075, 1163, 1279, 1385, 1438, 1461, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1677, 1709, 1740, 1867, 2005, 2009, 2013, 2024, 2026, 2027, 2034, 2037, 2038, 2046, 2049, 2050, 2051, 2053, 2059, 2062, 2065, 2067, 2068, 2072, 2078, 2079, 2090, 2093, 2094, 2100, 2103], "reentrant": [5, 1709], "soon": [5, 44, 49, 52, 792, 2034, 2062, 2067, 2069, 2094], "intermedi": [5, 12, 14, 34, 49, 50, 57, 61, 80, 953, 986, 1156, 1163, 1170, 1355, 1462, 1563, 1565, 1567, 1617, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 2006, 2009, 2013, 2037, 2039, 2040, 2041, 2049, 2083, 2090, 2091, 2093], "set_checkpoint_early_stop": 5, "entireti": 5, "graph": [5, 8, 12, 27, 29, 33, 52, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 87, 138, 149, 220, 221, 679, 746, 791, 792, 814, 815, 816, 822, 825, 893, 900, 903, 905, 914, 972, 974, 977, 979, 980, 1005, 1040, 1045, 1050, 1163, 1178, 1181, 1185, 1191, 1203, 1265, 1268, 1269, 1275, 1277, 1281, 1709, 1771, 1773, 1774, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 2005, 2009, 2013, 2015, 2019, 2028, 2033, 2038, 2039, 2042, 2043, 2046, 2047, 2053, 2054, 2056, 2059, 2061, 2063, 2064, 2065, 2067, 2068, 2069, 2072, 2077, 2083, 2084, 2085, 2089, 2090, 2092, 2093, 2095, 2096, 2097, 2099, 2100], "no_grad": [5, 487, 861, 915, 1109, 1164, 1168, 1173, 1265, 1461, 1519, 1525, 1567, 1710, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 2032, 2034, 2046, 2062, 2081, 2085], "unmet": 5, "particip": [5, 9, 22, 27, 28, 31, 44, 45, 1563, 1709, 2068, 2090], "wherea": [5, 11, 33, 49, 285, 1321, 1381, 1382, 1410, 1790, 1920, 2009, 2034, 2058, 2079, 2093], "avoid": [5, 8, 9, 19, 22, 27, 29, 33, 42, 45, 52, 61, 63, 71, 72, 190, 207, 447, 780, 865, 893, 953, 972, 1061, 1201, 1202, 1265, 1311, 1337, 1453, 1484, 1485, 1510, 1519, 1528, 1533, 1571, 1607, 1637, 1662, 1669, 1709, 1724, 1790, 1841, 1869, 1916, 1935, 1953, 1988, 2013, 2021, 2026, 2034, 2036, 2037, 2041, 2043, 2046, 2058, 2060, 2067, 2068, 2076, 2077, 2078, 2090, 2091, 2093, 2094, 2095], "know": [5, 7, 8, 14, 27, 28, 34, 49, 61, 485, 900, 901, 905, 909, 926, 1156, 1163, 1181, 1191, 1195, 1276, 1709, 2006, 2009, 2016, 2017, 2033, 2034, 2037, 2039, 2042, 2043, 2056, 2059, 2067, 2068, 2069, 2072, 2088, 2090, 2091, 2092, 2093, 2094, 2106], "lstm": [5, 762, 1490, 1536, 2007, 2037, 2056, 2057, 2062, 2064, 2065, 2077], "hidden": [5, 759, 1172, 1470, 1471, 1489, 1490, 1535, 1537, 1710, 2037, 2077], "correctli": [5, 22, 27, 44, 52, 485, 1163, 1265, 1281, 1519, 1644, 2006, 2008, 2009, 2013, 2021, 2026, 2033, 2034, 2038, 2039, 2040, 2048, 2050, 2062, 2067, 2101], "compil": [5, 12, 14, 15, 49, 50, 52, 53, 61, 62, 679, 986, 1031, 1035, 1047, 1048, 1163, 1178, 1180, 1195, 1263, 1265, 1266, 1269, 1270, 1277, 1278, 1279, 1281, 1282, 1283, 1519, 2005, 2006, 2008, 2009, 2010, 2011, 2013, 2015, 2033, 2036, 2038, 2045, 2052, 2055, 2056, 2067, 2078, 2081, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2096, 2097, 2098, 2099, 2100], "turn": [5, 14, 22, 26, 57, 61, 80, 679, 873, 972, 1253, 1281, 1564, 1566, 1902, 1903, 1904, 1905, 1906, 1907, 1957, 2016, 2034, 2037, 2049, 2050, 2056, 2061, 2062, 2068, 2072, 2090, 2093, 2096, 2101], "open": [5, 8, 9, 11, 14, 22, 33, 44, 49, 53, 688, 929, 956, 1155, 1273, 1337, 1360, 1370, 1642, 2006, 2016, 2024, 2027, 2044, 2052, 2053, 2056, 2059, 2062, 2067, 2072, 2073, 2074, 2091, 2094, 2101, 2105, 2106], "ran": [5, 18, 52, 2094, 2099, 2103], "sequenti": [5, 22, 31, 49, 50, 52, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 792, 1174, 1265, 1275, 1464, 1519, 1559, 1570, 1716, 1717, 1726, 1740, 1804, 1969, 2006, 2024, 2027, 2037, 2046, 2056, 2058, 2060, 2062, 2083, 2091, 2094, 2101, 2103], "divid": [5, 23, 27, 31, 237, 582, 583, 584, 1021, 1100, 1103, 1123, 1141, 1150, 1228, 1229, 1276, 1431, 1432, 1438, 1439, 1452, 1478, 1479, 1485, 1510, 1511, 1522, 1523, 1524, 1533, 1551, 1552, 1568, 1569, 1597, 1598, 1608, 1609, 1637, 1661, 1669, 1709, 1920, 1970, 2007, 2057], "func": [5, 27, 55, 57, 61, 63, 65, 862, 892, 895, 900, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 915, 919, 920, 1268, 1281, 1282, 1759, 1960, 1969, 2005, 2009, 2013, 2033, 2067, 2069, 2104], "compris": [5, 45, 49, 2042], "chunk": [5, 22, 27, 29, 52, 959, 1021, 1168, 1455, 1709, 1908, 2006, 2007, 2025, 2042, 2057, 2058, 2060, 2067, 2072, 2076], "input_var": [5, 1455], "set_checkpoint_debug_en": [5, 2005], "defer": [5, 23, 52, 2037, 2060], "person": [6, 7, 9], "land": [6, 9, 10, 2091, 2100], "six": [6, 79, 1448], "commit": [6, 7, 9, 14, 53, 2004, 2005, 2049, 2050, 2100], "repositori": [6, 9, 56, 61, 2004, 2048, 2062], "submit": [6, 9, 1007, 1008, 1010, 1378, 1974, 1975, 2037, 2050, 2092, 2094, 2100], "month": [6, 9], "qualifi": [6, 27, 29, 32, 41, 61, 679, 1265, 1519, 2013, 2015, 2054, 2059], "pr": [6, 7, 1809, 1921, 2083, 2094], "interest": [6, 7, 9, 80, 2034, 2040, 2043, 2046, 2053, 2091, 2092, 2093, 2097, 2101], "merge_rul": 6, "vote": [6, 9], "decis": [6, 29, 35, 44, 47, 61, 679, 1181, 1281, 2016, 2033, 2090], "criteria": [6, 9, 1338], "approv": [6, 9], "Not": [6, 45, 79, 1188, 1413, 1567, 1916, 2006, 2008, 2009, 2010, 2037, 2039, 2057, 2062, 2067], "busi": [6, 9, 2097], "dai": [6, 7, 2091, 2093, 2100], "contributor": [6, 7, 8, 9], "seen": [6, 12, 18, 33, 61, 220, 927, 959, 972, 994, 1367, 1449, 1450, 1451, 1551, 1650, 1651, 1652, 1803, 2006, 2016, 2034, 2037, 2056, 2072], "thumb": [6, 27], "deprec": [7, 27, 29, 35, 44, 45, 49, 52, 56, 405, 512, 556, 602, 784, 785, 786, 792, 825, 914, 962, 963, 979, 1004, 1054, 1058, 1210, 1265, 1320, 1323, 1355, 1356, 1431, 1432, 1452, 1454, 1477, 1478, 1484, 1485, 1510, 1511, 1519, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1573, 1574, 1597, 1598, 1608, 1637, 1661, 1669, 1696, 1697, 1698, 1700, 1709, 1713, 1758, 1759, 1761, 1764, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1819, 1835, 1861, 1916, 1920, 1944, 2005, 2006, 2011, 2024, 2035, 2060, 2061, 2065, 2074, 2078, 2079, 2094], "wiki": [7, 9, 23, 2053, 2107], "acceler": [7, 23, 938, 1214, 1433, 1434, 1435, 1559, 1773, 2044, 2084, 2088, 2094], "deep": [7, 9, 61, 1433, 1434, 1435, 1460, 1559, 1789, 2005, 2032, 2037, 2046, 2062, 2087, 2090, 2092, 2103], "neural": [7, 8, 15, 61, 1427, 1438, 1456, 1463, 1472, 1484, 1518, 1519, 1526, 1531, 1532, 1547, 1549, 1563, 1565, 1567, 1656, 1680, 1727, 1787, 1795, 1801, 2006, 2008, 2009, 2032, 2037, 2039, 2049, 2053, 2062, 2090], "tape": [7, 2088], "system": [7, 8, 14, 15, 17, 22, 45, 49, 57, 61, 62, 965, 982, 1177, 1219, 1273, 1297, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1326, 1327, 1328, 1332, 1337, 1356, 1385, 1563, 1565, 1567, 1709, 1727, 1729, 1864, 1944, 2010, 2015, 2021, 2034, 2036, 2037, 2045, 2046, 2048, 2052, 2054, 2059, 2067, 2085, 2090, 2091, 2101, 2109], "organ": [7, 2038, 2045, 2059, 2060, 2094], "govern": [7, 8, 2005], "technic": [7, 9, 44, 49, 52, 61, 1265, 1519, 2034, 2041, 2042, 2048, 2059, 2090], "found": [7, 14, 15, 16, 18, 27, 29, 44, 49, 61, 63, 70, 72, 82, 84, 85, 86, 939, 956, 1004, 1084, 1085, 1190, 1265, 1269, 1287, 1363, 1366, 1368, 1371, 1411, 1427, 1437, 1463, 1519, 1547, 1786, 1855, 2004, 2006, 2009, 2013, 2027, 2033, 2039, 2042, 2043, 2046, 2048, 2056, 2059, 2061, 2062, 2067, 2077, 2089, 2093, 2097, 2100, 2102, 2104], "md": [7, 61, 791, 2059], "healthi": [7, 35, 44], "team": [7, 27, 53, 83, 84, 86, 2051, 2060], "commun": [7, 8, 9, 28, 29, 31, 35, 44, 47, 52, 485, 679, 1709, 2034, 2038, 2053, 2067, 2068, 2091, 2094], "project": [7, 29, 1367, 1489, 1525, 1729, 1809, 2004, 2013, 2042, 2044, 2053, 2085, 2102], "ve": [7, 55, 56, 57, 61, 1178, 1269, 1960, 2016, 2024, 2034, 2040, 2068, 2077, 2093, 2094], "come": [7, 8, 9, 22, 33, 34, 41, 44, 49, 53, 57, 485, 972, 1105, 1156, 1163, 1265, 1337, 1457, 1458, 1459, 1463, 1484, 1770, 2019, 2038, 2040, 2045, 2059, 2067, 2069, 2072, 2092, 2099], "peopl": [7, 27, 2034, 2062, 2096], "scratch": [7, 2034, 2103], "own": [7, 9, 27, 28, 31, 33, 36, 44, 47, 49, 52, 61, 679, 1039, 1139, 1159, 1228, 1265, 1337, 1446, 1447, 1448, 1449, 1450, 1451, 1519, 1726, 1729, 2009, 2013, 2028, 2033, 2037, 2042, 2059, 2062, 2063, 2067, 2069, 2072, 2091, 2093, 2096], "itch": 7, "acquaint": 7, "tip": [7, 2037, 2091, 2094], "tracker": [7, 1338], "confirm": [7, 2004, 2006, 2039, 2056, 2067, 2069, 2099], "tend": [7, 910, 1957], "bootcamp": 7, "1hr": 7, "although": [7, 8, 33, 57, 61, 62, 1449, 1450, 1451, 1519, 1527, 1709, 2005, 2009, 2017, 2033, 2039, 2049, 2060, 2062, 2101, 2102], "join": [7, 23, 27, 31, 44, 45, 60, 61, 1205, 1709, 2004, 2005, 2010, 2024, 2034, 2038, 2048, 2057, 2078, 2085], "u": [7, 8, 12, 29, 53, 58, 61, 63, 759, 908, 938, 963, 1180, 1203, 1302, 1304, 1308, 1312, 1313, 1329, 1355, 1357, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1470, 1471, 1489, 1490, 1504, 1506, 1535, 1537, 1538, 1559, 1570, 1729, 1809, 1920, 1921, 2006, 2007, 2013, 2016, 2026, 2032, 2034, 2037, 2038, 2039, 2040, 2046, 2059, 2072, 2076, 2077, 2085, 2088, 2090, 2091, 2094, 2097, 2098, 2103, 2106], "dev": [7, 10, 36, 41, 2092, 2103], "happi": 7, "research": [7, 8, 9, 1709, 2004, 2034, 2043, 2051], "partner": [7, 2084], "speed": [7, 8, 14, 31, 52, 1016, 1105, 1162, 1256, 1269, 1275, 1329, 1423, 1525, 1716, 1717, 1863, 1920, 2017, 2034, 2036, 2037, 2038, 2039, 2041, 2044, 2049, 2062, 2067, 2091, 2092], "design": [7, 9, 22, 29, 33, 41, 44, 50, 53, 56, 57, 58, 919, 920, 1265, 1285, 1432, 1519, 1578, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1932, 2004, 2005, 2021, 2031, 2037, 2039, 2042, 2044, 2046, 2054, 2059, 2085, 2090, 2091, 2092, 2094, 2096, 2098, 2103], "comment": [7, 61, 1761, 1859, 2009, 2010, 2039, 2075, 2077, 2097], "crack": 7, "usual": [7, 14, 22, 23, 29, 32, 44, 45, 49, 50, 52, 61, 84, 480, 830, 831, 832, 833, 841, 893, 908, 910, 914, 1174, 1457, 1458, 1459, 1463, 1478, 1481, 1482, 1483, 1484, 1699, 1709, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1969, 2006, 2009, 2027, 2033, 2034, 2036, 2037, 2039, 2041, 2045, 2058, 2063, 2065, 2067, 2077, 2087, 2091, 2093, 2097, 2104], "idea": [7, 53, 928, 1105, 1185, 1423, 1709, 2037, 2045, 2056, 2068, 2094], "rfc": [7, 2034, 2062, 2068], "big": [7, 1776, 1777, 1780, 1786, 1787, 1902, 1903, 1904, 1905, 1906, 1907, 2037, 2051, 2058, 2062, 2090, 2093, 2097], "post": [7, 8, 28, 29, 31, 52, 485, 487, 679, 856, 857, 861, 1265, 1519, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 2005, 2013, 2034, 2038, 2039, 2041, 2052, 2072, 2091, 2092, 2093, 2103], "standard": [7, 14, 18, 23, 33, 37, 38, 42, 50, 57, 61, 351, 376, 588, 1125, 1181, 1427, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1484, 1491, 1559, 1565, 1567, 1580, 1765, 1809, 1832, 1877, 1882, 1914, 1915, 2008, 2010, 2027, 2032, 2036, 2037, 2048, 2049, 2053, 2056, 2059, 2073, 2091], "lot": [7, 14, 22, 49, 1191, 2024, 2034, 2037, 2043, 2048, 2059, 2060, 2066, 2068, 2077, 2090, 2093, 2097, 2105], "boil": 7, "mostli": [7, 33, 1263, 1709, 2037, 2062, 2072, 2090, 2091, 2104], "evid": 7, "peer": [7, 27, 31, 44, 52, 1014, 1709, 2037, 2067], "paper": [7, 9, 23, 32, 33, 50, 759, 1423, 1427, 1433, 1434, 1435, 1437, 1449, 1450, 1451, 1456, 1457, 1458, 1459, 1460, 1463, 1466, 1467, 1470, 1473, 1476, 1481, 1482, 1483, 1491, 1525, 1531, 1532, 1534, 1538, 1547, 1551, 1559, 1563, 1565, 1567, 1568, 1569, 1620, 1621, 1630, 1708, 1776, 1777, 1786, 1788, 1795, 1801, 2043, 2060], "framework": [7, 8, 9, 33, 41, 53, 60, 62, 759, 1012, 1376, 1470, 1709, 1723, 1789, 1867, 2005, 2017, 2047, 2060, 2062, 2068, 2069], "bit": [7, 61, 87, 329, 457, 760, 762, 764, 818, 819, 820, 821, 824, 826, 858, 945, 948, 987, 988, 1159, 1245, 1843, 1844, 1856, 1863, 1884, 2037, 2042, 2046, 2049, 2052, 2062, 2065, 2066, 2072, 2075, 2078, 2091, 2097, 2107], "accept": [7, 9, 22, 27, 29, 32, 49, 52, 53, 54, 56, 58, 149, 512, 801, 889, 890, 891, 892, 893, 900, 902, 905, 906, 914, 962, 1047, 1050, 1158, 1174, 1180, 1228, 1265, 1269, 1454, 1519, 1526, 1548, 1567, 1736, 1750, 1751, 1757, 1772, 1897, 1911, 1969, 2009, 2013, 2026, 2037, 2039, 2040, 2056, 2058, 2067, 2075, 2077, 2094, 2103], "overwhelm": [7, 2067, 2103], "newli": [7, 52, 61, 87, 1119, 1120, 1461, 1462, 1821, 1822], "publish": [7, 9, 36, 41, 44, 1338, 2005], "ground": [7, 9, 32, 1454, 1608, 2077, 2091], "becom": [7, 8, 9, 12, 22, 27, 32, 33, 61, 289, 759, 876, 1219, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1470, 1489, 1504, 1524, 1535, 1548, 1608, 1625, 1699, 1793, 1892, 1942, 2016, 2019, 2034, 2038, 2039, 2056, 2059, 2061, 2067, 2103, 2105], "refactor": [7, 61, 2052, 2062], "coordin": [7, 27, 29, 33, 35, 582, 585, 884, 1219, 1228, 1367, 1813, 1905, 1946, 1948, 1955, 2034, 2072, 2077, 2094, 2103], "pace": 7, "branch": [7, 12, 49, 61, 63, 66, 68, 71, 72, 986, 2004, 2008, 2009, 2037, 2090, 2091, 2100], "definit": [7, 8, 22, 27, 28, 33, 40, 49, 50, 61, 84, 963, 964, 965, 994, 1047, 1153, 1191, 1194, 1201, 1202, 1286, 1295, 1296, 1338, 1405, 1484, 1563, 1637, 1684, 1764, 1839, 1942, 2004, 2006, 2008, 2010, 2033, 2034, 2039, 2043, 2059, 2062, 2077, 2079], "fundament": [7, 57, 2008, 2046, 2067, 2072, 2093], "cut": [7, 2094], "guidanc": [7, 9, 15, 54, 485, 1193, 2060, 2090], "stage": [7, 18, 23, 29, 31, 41, 52, 60, 2005, 2016, 2027, 2060, 2069, 2103], "piec": [7, 11, 2015, 2027, 2068, 2091, 2094, 2105], "advic": [7, 2094], "readi": [7, 14, 60, 861, 862, 941, 950, 1223, 1224, 1709, 2006, 2038, 2067, 2068, 2088], "draft": 7, "convert": [7, 11, 22, 27, 29, 32, 33, 34, 50, 52, 56, 59, 61, 79, 80, 81, 149, 579, 583, 584, 585, 586, 587, 734, 787, 788, 789, 791, 792, 793, 814, 815, 816, 837, 838, 854, 857, 858, 859, 879, 880, 938, 958, 971, 1089, 1125, 1156, 1265, 1335, 1519, 1529, 1530, 1559, 1566, 1699, 1711, 1712, 1716, 1717, 1770, 1771, 1790, 1821, 1822, 1827, 1902, 1903, 1904, 1905, 1906, 1907, 1955, 2006, 2007, 2008, 2009, 2017, 2027, 2028, 2039, 2044, 2053, 2054, 2056, 2062, 2065, 2072, 2077, 2079, 2083, 2084, 2094, 2102, 2103], "press": [7, 61], "button": [7, 2100], "prepend": [7, 14, 22, 27, 31, 61, 228, 1097, 1265, 1360, 1519, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1938, 2007, 2035], "titl": [7, 2057, 2062], "wip": 7, "progress": [7, 31, 35, 45, 48, 78, 485, 1007, 1378, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1963, 1974, 2004, 2020], "ci": [7, 2005, 2100], "folk": 7, "who": [7, 8, 9, 11, 44, 63, 80, 2059], "regularli": 7, "queue": [7, 35, 47, 2024, 2077], "everyth": [7, 22, 33, 50, 56, 63, 2006, 2024, 2059, 2090, 2094, 2097, 2103], "happen": [7, 9, 27, 29, 31, 32, 33, 35, 37, 44, 49, 52, 57, 61, 606, 790, 813, 905, 906, 1163, 1203, 1559, 1709, 1723, 1792, 1798, 1799, 1805, 1920, 2005, 2021, 2024, 2034, 2037, 2038, 2039, 2040, 2041, 2042, 2047, 2048, 2052, 2056, 2062, 2067, 2074, 2076, 2088, 2091, 2094], "subsystem": [7, 11, 53, 58, 974, 2005, 2013, 2039], "patch": [7, 54, 1465, 1571, 1958, 2095], "feel": [7, 2027, 2056, 2072, 2094], "ll": [7, 57, 61, 759, 819, 820, 861, 862, 963, 964, 965, 1050, 1181, 1189, 1295, 1470, 1471, 1489, 1490, 2013, 2016, 2034, 2037, 2039, 2040, 2048, 2056, 2062, 2068, 2089, 2093, 2097, 2101], "round": [7, 22, 27, 63, 65, 72, 507, 664, 665, 798, 801, 819, 865, 990, 992, 1061, 1100, 1126, 1127, 1128, 1132, 1136, 1137, 1138, 1153, 1311, 1324, 1572, 1636, 1819, 1820, 1839, 1887, 2007, 2009, 2025, 2037, 2057, 2062, 2065, 2072, 2073, 2098, 2105], "trip": [7, 61, 1126, 1127, 1128, 1132, 1136, 1137, 1138], "noth": [7, 14, 35, 61, 679, 1001, 1041, 1729, 1776, 1777, 1789, 1804, 1988, 2006, 2008, 2050, 2069], "accompani": [7, 82, 2054], "solut": [7, 8, 57, 965, 1177, 1310, 1311, 1315, 1323, 1326, 1328, 1332, 1431, 1709, 1944, 2006, 2007, 2032, 2033, 2041, 2048, 2062], "think": [7, 9, 11, 61, 63, 485, 1790, 2006, 2008, 2034, 2058, 2059, 2069, 2091, 2093, 2095], "confid": [7, 1716, 1717, 2042, 2077, 2095], "ahead": [7, 49, 2005, 2062, 2084, 2090, 2094], "search": [7, 11, 23, 818, 956, 1476, 1630, 1709, 1771, 1826, 1855, 2006, 2025, 2026, 2056, 2059, 2072, 2089, 2093, 2100, 2105], "repo": [7, 63, 1795, 2004, 2039, 2052], "unabl": [7, 49, 57, 81, 2056, 2058], "reproduc": [7, 22, 57, 312, 320, 514, 516, 943, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1515, 1516, 1517, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1617, 1625, 1636, 1664, 1677, 1696, 1697, 1698, 1699, 1957, 2004, 2005, 2058, 2059, 2094, 2103], "problemat": [7, 22, 61, 926, 2006, 2049, 2063, 2091, 2094], "insight": [7, 18, 78, 2085, 2105], "individu": [7, 9, 14, 22, 23, 27, 29, 31, 52, 61, 82, 241, 679, 791, 837, 838, 963, 1071, 1123, 1141, 1178, 1265, 1438, 1519, 1559, 1709, 2009, 2025, 2033, 2034, 2037, 2039, 2042, 2045, 2049, 2050, 2054, 2056, 2058, 2065, 2067, 2079, 2088, 2096, 2100, 2105], "intent": [7, 29, 42, 44, 52, 57, 1860, 2016, 2059, 2062, 2099], "lock": [7, 22, 27, 31, 33, 2034, 2037, 2048, 2059, 2068, 2105], "strike": 7, "convers": [7, 29, 457, 579, 582, 792, 957, 1250, 1716, 1717, 1750, 2005, 2010, 2039, 2044, 2056, 2062, 2063, 2072, 2090, 2093, 2102], "medium": [7, 52, 1863], "prioriti": [7, 9, 10, 27, 679, 854, 995, 1010, 1975, 2008, 2051], "entranc": [7, 2037], "great": [7, 12, 49, 2034, 2043, 2088, 2090, 2091], "deal": [7, 8, 22, 35, 47, 49, 79, 1937, 2024, 2041, 2067, 2090, 2093, 2097, 2101], "welcom": [7, 2027, 2053, 2058, 2072], "aim": [7, 49, 80, 2040, 2072, 2084], "rare": [7, 2033, 2056, 2090, 2095, 2104], "typo": 7, "send": [7, 22, 27, 35, 47, 1043, 1699, 1709, 2024, 2038, 2048, 2052, 2057, 2061, 2067, 2068, 2069, 2081, 2083, 2093, 2096], "forum": [7, 9, 2041, 2048], "share": [7, 10, 14, 22, 28, 29, 31, 33, 34, 44, 45, 50, 52, 57, 220, 310, 339, 457, 482, 519, 523, 616, 859, 879, 880, 900, 901, 905, 906, 919, 920, 972, 1005, 1007, 1039, 1043, 1050, 1156, 1157, 1158, 1159, 1236, 1313, 1414, 1415, 1455, 1536, 1709, 1727, 1765, 1837, 1851, 1859, 1911, 1935, 1941, 1956, 2007, 2033, 2034, 2036, 2048, 2051, 2052, 2056, 2067, 2072, 2074, 2076, 2082, 2085, 2088], "resolv": [7, 8, 9, 29, 33, 61, 81, 82, 1265, 1449, 1450, 1451, 1465, 1516, 1519, 2008, 2009, 2010, 2052, 2059, 2074, 2090, 2104], "challeng": [7, 27, 29, 2068, 2094], "feedback": [7, 18, 23, 52, 53, 1709, 2005, 2072], "direct": [7, 9, 11, 27, 50, 759, 791, 1146, 1147, 1191, 1265, 1470, 1489, 1519, 1535, 1725, 1761, 1788, 1809, 1826, 1847, 2013, 2034, 2037, 2039, 2042, 2046, 2067, 2091, 2102], "yourself": [7, 55, 1005, 1958, 2039, 2046, 2048, 2094, 2104], "problem": [7, 22, 27, 44, 49, 57, 63, 1105, 1179, 1181, 1281, 1311, 1323, 1338, 1454, 1526, 1590, 1859, 2024, 2034, 2037, 2041, 2043, 2048, 2052, 2060, 2062, 2063, 2069, 2075, 2084, 2090, 2091, 2094, 2103], "area": [7, 9, 50, 1636, 2046, 2062, 2073], "appreci": 7, "strive": 7, "respond": [7, 27], "quickli": [7, 8, 23, 44, 2042, 2096], "ey": [7, 33, 190, 207, 964, 965, 1174, 1286, 1295, 1306, 1317, 1320, 1323, 1324, 1331, 1332, 1723, 1819, 1898, 1969, 2007, 2011, 2039, 2057, 2091], "everyon": [7, 35, 44], "touch": [7, 42, 61], "versu": [7, 1180, 1523], "write": [7, 8, 9, 12, 16, 18, 22, 27, 29, 35, 37, 41, 42, 43, 44, 49, 52, 57, 58, 62, 79, 81, 82, 253, 485, 512, 696, 954, 974, 1158, 1163, 1174, 1183, 1242, 1276, 1296, 1307, 1308, 1309, 1313, 1314, 1327, 1695, 1851, 1944, 1957, 1969, 2005, 2008, 2013, 2021, 2026, 2037, 2040, 2041, 2043, 2054, 2058, 2059, 2062, 2072, 2077, 2084, 2090, 2091, 2094, 2096, 2097, 2103], "blog": [7, 8, 12, 986, 2013, 2038, 2039, 2062, 2072], "around": [7, 9, 11, 27, 33, 46, 56, 57, 60, 61, 149, 623, 893, 914, 1002, 1005, 1007, 1008, 1010, 1080, 1151, 1152, 1163, 1265, 1378, 1402, 1709, 1848, 1974, 1975, 2000, 2006, 2013, 2024, 2034, 2037, 2056, 2062, 2067, 2088, 2091, 2094], "internet": 7, "grow": [7, 8, 61, 2037, 2072], "market": [7, 9], "benefit": [7, 8, 27, 61, 847, 1716, 1717, 1803, 2024, 2037, 2042, 2062, 2072, 2103], "opinion": [7, 8, 2072], "isn": [7, 22, 61, 457, 1262, 2034, 2037, 2039, 2067, 2079, 2093], "categor": [7, 37, 1627, 2005, 2010, 2063, 2067, 2077, 2102], "aspect": [7, 27, 61, 1536, 2039, 2046], "seem": [7, 1181, 2056], "unusu": [7, 2093], "claim": [7, 1716, 1717, 1801, 2043], "wast": [7, 2037], "someon": [7, 9, 1263, 2026], "end": [7, 8, 9, 22, 23, 27, 33, 37, 41, 55, 61, 360, 361, 537, 759, 783, 796, 819, 820, 865, 928, 936, 941, 989, 1005, 1065, 1066, 1095, 1105, 1144, 1159, 1204, 1219, 1225, 1226, 1262, 1265, 1286, 1291, 1321, 1331, 1333, 1336, 1338, 1352, 1414, 1415, 1430, 1431, 1432, 1440, 1441, 1442, 1452, 1454, 1460, 1464, 1470, 1471, 1474, 1475, 1476, 1477, 1478, 1479, 1485, 1489, 1490, 1505, 1510, 1513, 1514, 1519, 1521, 1526, 1527, 1530, 1535, 1538, 1548, 1551, 1557, 1562, 1569, 1608, 1617, 1629, 1630, 1709, 1723, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1793, 1798, 1803, 1835, 1867, 1870, 1873, 1875, 1888, 1942, 1953, 1954, 1972, 2006, 2007, 2008, 2009, 2024, 2033, 2034, 2037, 2038, 2039, 2041, 2042, 2043, 2049, 2052, 2054, 2056, 2058, 2061, 2062, 2065, 2067, 2073, 2088, 2091, 2093, 2096, 2098, 2103], "too": [7, 9, 14, 23, 29, 44, 57, 61, 485, 1061, 1162, 1181, 1185, 1311, 1329, 1411, 1438, 1454, 1519, 1609, 1710, 1759, 2009, 2036, 2041, 2043, 2048, 2049, 2050, 2052, 2054, 2059, 2060, 2069, 2072, 2090, 2091, 2093, 2103, 2105], "advisori": 7, "fashion": [7, 22, 27, 32, 47, 49, 514, 1343, 1740, 2006], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 2103], "wrote": [7, 8], "implicitli": [7, 27, 37, 61, 1088, 1180, 1209, 1219, 1281, 1282, 1337, 1428, 1429, 1430, 1512, 1513, 1514, 1860, 1942, 2006, 2008, 2009, 2034, 2039, 2044], "lifetim": [7, 485, 2013, 2067, 2093], "immedi": [7, 8, 9, 27, 44, 45, 52, 60, 485, 1191, 1265, 1268, 1519, 1716, 1717, 2009, 2037, 2042, 2046, 2051, 2058, 2067, 2069, 2090, 2093], "sai": [7, 49, 50, 61, 495, 928, 1166, 1167, 1168, 1180, 1187, 1265, 1519, 2006, 2033, 2034, 2041, 2059, 2068, 2069, 2072, 2088, 2090, 2091, 2097, 2102], "bugfix": 7, "Or": [7, 35, 61, 880, 967, 2044, 2047, 2056, 2072], "motiv": [7, 8, 61, 734, 2042, 2046, 2068, 2103], "ye": [7, 2018, 2056, 2058, 2072, 2094], "knuth": 7, "bewar": 7, "mere": [7, 50], "proven": [7, 1456, 1709], "ok": [7, 37, 42, 56, 1185, 1194, 1270, 2069, 2075, 2091], "sometim": [7, 61, 911, 1061, 1271, 1281, 1465, 1571, 1603, 1604, 1605, 1729, 2005, 2009, 2013, 2024, 2034, 2037, 2040, 2041, 2042, 2046, 2048, 2059, 2075, 2078, 2090, 2091, 2093, 2097, 2101, 2104], "obvious": [7, 2093], "broken": [7, 22, 1061, 2056, 2059], "contrari": [7, 2036], "accident": 7, "put": [7, 9, 22, 27, 35, 56, 60, 61, 318, 1125, 1337, 1473, 1795, 2004, 2007, 2024, 2037, 2042, 2048, 2057, 2059, 2068, 2069, 2091, 2093, 2095], "difficulti": [7, 2032], "nonlinearli": 7, "sign": [7, 33, 340, 528, 884, 989, 1093, 1141, 1153, 1159, 1299, 1324, 1325, 1346, 1511, 1788, 1839, 1870, 1884, 2007, 2025, 2057, 2065, 2072, 2075, 2078, 2079, 2091, 2098], "split": [7, 11, 22, 27, 61, 616, 771, 772, 773, 859, 861, 862, 959, 966, 1061, 1103, 1229, 1455, 1469, 1470, 1489, 1525, 1535, 1600, 1601, 1602, 1603, 1604, 1605, 1624, 1936, 1970, 2006, 2007, 2025, 2037, 2042, 2057, 2059, 2060, 2062, 2067, 2072, 2076, 2091, 2101, 2105], "shippabl": 7, "complet": [7, 14, 22, 27, 29, 35, 36, 42, 44, 47, 57, 60, 485, 679, 861, 974, 1003, 1007, 1008, 1010, 1081, 1162, 1163, 1268, 1277, 1279, 1284, 1296, 1324, 1378, 1381, 1382, 1387, 1403, 1590, 1709, 1726, 1759, 1819, 1863, 1974, 1975, 2001, 2005, 2008, 2009, 2010, 2015, 2024, 2033, 2034, 2037, 2040, 2044, 2050, 2059, 2060, 2067, 2068, 2087, 2095, 2100, 2101], "subtl": [7, 1481, 1482, 1483, 2039, 2093, 2094, 2103], "nuanc": [7, 2053], "extra": [7, 14, 22, 23, 27, 31, 33, 49, 52, 61, 1065, 1105, 1163, 1174, 1180, 1265, 1273, 1276, 1311, 1337, 1519, 1526, 1534, 1708, 1723, 1916, 1969, 2008, 2026, 2034, 2036, 2038, 2039, 2041, 2045, 2054, 2059, 2061, 2072, 2078, 2079, 2081, 2093, 2097], "understand": [7, 8, 9, 27, 29, 35, 36, 49, 52, 63, 79, 80, 1163, 1189, 1323, 2005, 2032, 2034, 2037, 2044, 2051, 2054, 2061, 2077, 2084, 2089, 2090, 2091, 2092, 2093, 2094, 2096, 2103], "hack": 7, "answer": [7, 10, 61, 823, 1191, 1432, 1742, 2093, 2094], "regress": [7, 1431, 2050, 2088, 2099], "scrutini": 7, "undertak": 7, "rest": [7, 22, 23, 45, 52, 61, 792, 813, 979, 980, 1159, 1331, 1332, 1936, 2026, 2046, 2050, 2059, 2060, 2062, 2067, 2072, 2091, 2094, 2095, 2097, 2101], "stai": [7, 31, 138, 1455, 1716, 1717, 2037, 2048, 2062, 2067, 2072], "chanc": [7, 29, 33, 2039, 2093, 2094, 2097], "unrel": [7, 982, 1172, 2033, 2039, 2059], "aid": [7, 61, 2034, 2103], "troubleshoot": [7, 27, 2084, 2094], "mayb": [7, 1170, 1960, 2093], "rebas": 7, "latest": [7, 14, 27, 31, 33, 49, 897, 928, 1736, 2004, 2039, 2044, 2054, 2056], "statu": [7, 9, 35, 1355, 2005, 2010, 2024, 2062, 2085], "hud": 7, "risk": [7, 8, 49, 52, 1726, 1729], "anyth": [7, 34, 37, 52, 60, 822, 825, 1191, 1277, 1790, 2006, 2027, 2042, 2046, 2059, 2090, 2091, 2106], "configur": [7, 13, 19, 22, 23, 27, 32, 35, 36, 41, 44, 45, 47, 52, 787, 788, 791, 792, 796, 813, 814, 815, 816, 822, 825, 837, 838, 839, 843, 845, 848, 858, 859, 860, 861, 862, 972, 1061, 1709, 1750, 1864, 1957, 2005, 2015, 2021, 2037, 2038, 2039, 2050, 2052, 2059, 2065, 2067, 2077, 2079, 2090, 2094, 2100, 2101, 2103], "riski": 7, "had": [7, 61, 928, 1181, 1203, 1281, 1699, 1938, 2034, 2040, 2090, 2091, 2099], "beforehand": [7, 60, 2094], "hei": 7, "my": [7, 22, 1455, 2045, 2056, 2062], "member": [7, 9, 22, 27, 35, 44, 45, 61, 1265, 1472, 1519, 1622, 2006, 2008, 2009, 2021, 2041, 2061, 2067, 2079, 2081], "sphinx": 7, "folder": [7, 9, 14, 22, 29, 42, 61, 1771, 2004, 2054, 2077, 2091, 2096, 2103], "tree": [7, 37, 56, 972, 1519, 1563, 1771, 2023, 2056, 2059, 2061, 2069, 2084], "master": [7, 27, 48, 791, 1163, 1563, 2004, 2067], "doxygen": 7, "special": [7, 11, 37, 47, 50, 57, 61, 63, 68, 71, 72, 740, 741, 742, 822, 825, 919, 972, 1098, 1112, 1113, 1114, 1116, 1117, 1126, 1128, 1177, 1180, 1233, 1234, 1235, 1279, 1337, 1351, 1408, 1455, 1567, 1710, 1711, 1712, 1763, 1790, 1814, 1871, 1882, 1886, 1973, 2005, 2010, 2015, 2026, 2037, 2039, 2042, 2043, 2045, 2056, 2059, 2062, 2074, 2076, 2077, 2085, 2090, 2092, 2093, 2099], "server": [7, 22, 27, 45, 1269, 2037, 2059, 2062, 2067, 2085, 2087], "cppdoc": [7, 15], "cpp": [7, 14, 27, 1405, 2038, 2085, 2090], "accomplish": [7, 29, 2046, 2094], "holist": 7, "concept": [7, 49, 50, 57, 61, 2013, 2039, 2040, 2046, 2075, 2095], "galleri": 7, "restructur": [7, 2059], "text": [7, 22, 33, 50, 152, 153, 172, 607, 616, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 697, 744, 745, 755, 757, 759, 763, 767, 768, 769, 771, 772, 773, 779, 783, 819, 820, 865, 881, 882, 883, 884, 885, 940, 941, 942, 945, 948, 950, 952, 961, 964, 965, 967, 988, 989, 991, 992, 994, 1100, 1119, 1120, 1149, 1150, 1154, 1155, 1208, 1222, 1223, 1224, 1225, 1232, 1254, 1262, 1286, 1289, 1290, 1291, 1294, 1295, 1302, 1305, 1311, 1315, 1320, 1323, 1329, 1336, 1345, 1352, 1353, 1354, 1355, 1404, 1405, 1416, 1417, 1420, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1522, 1523, 1524, 1525, 1526, 1527, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1592, 1593, 1594, 1596, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1611, 1612, 1613, 1618, 1621, 1623, 1624, 1625, 1629, 1630, 1640, 1645, 1650, 1651, 1652, 1656, 1661, 1664, 1669, 1670, 1672, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1687, 1688, 1689, 1708, 1715, 1723, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1795, 1812, 1813, 1816, 1819, 1832, 1835, 1838, 1850, 1870, 1872, 1873, 1885, 1887, 1898, 1899, 1909, 1916, 1917, 1920, 1933, 1934, 1972, 2027, 2032, 2043, 2056, 2059, 2065, 2073, 2077, 2079, 2091, 2096], "rst": 7, "trigger": [7, 9, 27, 44, 45, 60, 83, 84, 86, 220, 928, 1079, 1867, 2033, 2034, 2037, 2038, 2039, 2045, 2051, 2067, 2088, 2091, 2092, 2094, 2099, 2100, 2103], "rebuild": [7, 23], "entir": [7, 14, 22, 27, 29, 32, 35, 45, 61, 512, 696, 919, 920, 972, 1163, 1219, 1457, 1458, 1459, 1463, 1481, 1482, 1483, 1491, 1611, 1612, 1613, 1618, 1709, 1725, 1735, 1737, 1761, 2009, 2027, 2034, 2037, 2039, 2040, 2041, 2045, 2046, 2056, 2059, 2062, 2067, 2069, 2072, 2089, 2090, 2092, 2093, 2094, 2101, 2103, 2105], "circleci": 7, "shard": [7, 22, 29, 31, 32, 52, 1709, 2042, 2094], "worker": [7, 14, 22, 23, 27, 28, 31, 35, 36, 37, 38, 44, 47, 48, 52, 1709, 2009, 2050, 2060, 2061, 2067, 2068, 2069], "40": [7, 1219, 1338, 1436, 1481, 1723, 1724, 1725, 1748, 1749, 1758, 1761, 1932, 2092], "minut": [7, 10, 27, 2077], "netlifi": 7, "noplot": 7, "render": [7, 27, 1185, 2077, 2105], "notebook": 7, "rebuilt": [7, 23, 31], "deploi": [7, 12, 35, 44, 2005, 2045, 2051, 2059, 2087, 2091], "action": [7, 27, 33, 35, 38, 61, 1005, 1039, 2037, 2054, 2059, 2061, 2069, 2105], "document": [8, 9, 10, 17, 22, 27, 49, 50, 52, 53, 61, 679, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 873, 874, 875, 876, 957, 1007, 1008, 1010, 1061, 1105, 1209, 1213, 1215, 1246, 1253, 1265, 1381, 1382, 1412, 1423, 1461, 1462, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1704, 1705, 1726, 1735, 1744, 1764, 1818, 1845, 1862, 1957, 2004, 2006, 2008, 2009, 2013, 2018, 2022, 2024, 2025, 2026, 2028, 2033, 2037, 2039, 2041, 2046, 2050, 2051, 2056, 2058, 2059, 2060, 2062, 2063, 2064, 2067, 2072, 2076, 2081, 2084, 2089, 2095, 2099, 2102, 2106], "develop": [8, 9, 10, 14, 23, 27, 61, 2008, 2009, 2016, 2022, 2034, 2039, 2045, 2046, 2050, 2056, 2059, 2062, 2063, 2067, 2072, 2091, 2096, 2098, 2103, 2106], "meant": [8, 28, 44, 47, 52, 1750, 2033, 2067], "rule": [8, 9, 14, 27, 33, 61, 63, 71, 72, 84, 85, 86, 149, 860, 893, 956, 957, 1088, 1315, 1326, 1433, 1434, 1435, 1481, 1482, 1483, 1559, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1855, 1942, 2006, 2008, 2025, 2027, 2034, 2035, 2039, 2042, 2043, 2075, 2079, 2093, 2094], "concern": [8, 22, 52, 2024, 2037, 2056, 2101], "disagr": 8, "contribut": [8, 9, 29, 932, 1227, 1228, 1454, 1461, 1462, 1526, 1608, 1616, 1617, 1661, 1709, 2005, 2027, 2039, 2040, 2056, 2060], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": [8, 2061], "obsess": 8, "soumith": [8, 10], "goe": [8, 61, 1159, 1427, 1776, 1777, 1789, 2013, 2041, 2054, 2091, 2094, 2095], "depth": [8, 9, 19, 24, 49, 80, 778, 784, 1066, 1067, 1279, 1430, 1448, 1451, 1488, 1514, 1572, 1636, 1696, 2016, 2038, 2046, 2061, 2092, 2105], "primari": [8, 9, 27, 61, 80, 1275, 2010, 2016, 2017, 2072, 2093], "goal": [8, 41, 56, 61, 1367, 2016, 2034, 2038, 2043, 2069, 2096], "secondari": 8, "abil": [8, 12, 49, 1851, 2016, 2045, 2054, 2059, 2091], "flexibl": [8, 23, 49, 52, 56, 1186, 1322, 2016, 2037, 2039, 2046, 2062, 2091], "abstract": [8, 16, 22, 23, 27, 28, 29, 33, 35, 42, 44, 47, 49, 921, 922, 923, 924, 925, 928, 1187, 1731, 2009, 2013, 2017, 2038, 2062, 2067, 2088], "critic": [8, 44, 679, 1724, 1758, 2021, 2036, 2037, 2094, 2095], "futur": [8, 9, 12, 23, 27, 29, 35, 44, 45, 49, 57, 61, 289, 320, 485, 512, 516, 556, 679, 686, 792, 814, 815, 816, 825, 861, 900, 903, 905, 906, 962, 963, 972, 986, 987, 988, 1004, 1005, 1007, 1008, 1010, 1039, 1040, 1047, 1048, 1050, 1210, 1262, 1265, 1268, 1275, 1276, 1279, 1284, 1296, 1307, 1309, 1310, 1311, 1314, 1327, 1355, 1356, 1367, 1378, 1458, 1519, 1627, 1650, 1651, 1652, 1700, 1709, 1714, 1758, 1759, 1764, 1779, 1819, 1835, 1916, 1920, 1944, 1974, 1975, 2005, 2006, 2007, 2008, 2009, 2010, 2015, 2016, 2019, 2021, 2026, 2027, 2036, 2037, 2039, 2051, 2054, 2056, 2058, 2059, 2060, 2061, 2062, 2064, 2067, 2072, 2074, 2078, 2079, 2081, 2083, 2090, 2094, 2098, 2105], "concret": [8, 11, 33, 48, 50, 56, 61, 485, 784, 799, 823, 841, 972, 1181, 1198, 1199, 1572, 1664, 1696, 2006, 2009, 2013, 2037, 2039, 2048, 2090, 2091, 2093], "manner": [8, 27, 35, 87, 512, 908, 910, 2026, 2028, 2035, 2058], "jump": [8, 559, 2075], "regim": 8, "ei": 8, "tradeoff": [8, 23, 49, 485, 2062, 2068, 2094, 2099], "temptat": 8, "impos": [8, 47, 58, 1859, 2024, 2033, 2075], "strict": [8, 29, 50, 908, 909, 910, 911, 912, 913, 1162, 1169, 1185, 1265, 1281, 1282, 1519, 1759, 2059, 2077, 2079], "upfront": [8, 2090], "simplifi": [8, 23, 60, 1177, 1181, 1204, 1273, 1509, 1724, 1790, 2016, 2034, 2039, 2043, 2046, 2058, 2062, 2068, 2090], "worth": [8, 9, 22, 23, 48, 50, 1163, 2004, 2074, 2076, 2097], "friction": 8, "compel": 8, "narrow": [8, 1191, 1335, 1415, 1790, 1877, 2007, 2009, 2025, 2057, 2064, 2076, 2103], "subproblem": 8, "fragment": [8, 1029, 1061, 1982, 2013, 2037, 2103], "ecosystem": [8, 2045, 2047, 2091], "incomprehens": 8, "seamlessli": [8, 2027], "softwar": [8, 1301, 1302, 1329, 1957, 2037, 2044, 2084, 2091], "experi": [8, 9, 11, 23, 49, 58, 1174, 1549, 1680, 1709, 1969, 2016, 2039, 2077, 2092], "rich": [8, 2009], "denomin": [8, 686, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1534, 1559, 1708, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1823], "subset": [8, 22, 27, 31, 45, 50, 1277, 1790, 2006, 2008, 2009, 2039, 2053, 2056, 2065, 2098], "borrow": 8, "zen": 8, "implicit": [8, 49, 50, 85, 767, 768, 771, 772, 773, 1209, 1219, 1428, 1429, 1430, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1512, 1513, 1514, 1571, 1592, 1593, 1594, 1600, 1601, 1602, 1650, 1651, 1652, 1807, 2007, 2009, 2010, 2042, 2056, 2059, 2076, 2098], "concis": [8, 37, 2067], "interchang": [8, 33, 1787, 1941, 2008, 2044, 2054, 2084, 2095], "everydai": 8, "english": 8, "movement": [8, 2076, 2094], "worri": [8, 27, 2067], "placement": [8, 32, 35, 859, 1699, 2062, 2067, 2094], "favor": [8, 27, 784, 785, 786, 963, 974, 1074, 1078, 1265, 1320, 1323, 1355, 1356, 1401, 1477, 1519, 1573, 1574, 1696, 1697, 1698, 1700, 1713, 1819, 1920, 1944, 1999], "practition": 8, "debugg": [8, 27, 1270, 2043, 2094, 2103], "plug": 8, "ir": [8, 49, 61, 78, 80, 759, 1268, 1269, 1470, 1471, 1771, 2006, 2009, 2054, 2056, 2084, 2090, 2091, 2093, 2094, 2103], "classic": [8, 2034], "sort": [8, 31, 35, 61, 589, 608, 876, 877, 900, 902, 905, 1105, 1191, 1226, 1388, 1423, 1751, 1752, 1763, 1820, 1855, 1939, 1953, 2007, 2009, 2039, 2041, 2057, 2072, 2090, 2094, 2098], "distribut": [8, 11, 22, 23, 28, 35, 36, 37, 38, 41, 42, 43, 44, 46, 47, 48, 52, 60, 172, 257, 285, 376, 453, 480, 607, 679, 694, 695, 818, 935, 942, 1079, 1405, 1423, 1427, 1432, 1454, 1455, 1456, 1457, 1458, 1459, 1463, 1468, 1472, 1484, 1533, 1538, 1559, 1608, 1610, 1611, 1612, 1613, 1618, 1622, 1623, 1627, 1637, 1669, 1709, 1765, 1812, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 2005, 2009, 2026, 2027, 2032, 2033, 2037, 2060, 2061, 2063, 2069, 2073, 2077, 2081], "tldr": 8, "resourc": [8, 14, 22, 35, 40, 44, 49, 61, 2009, 2024, 2048, 2072, 2094, 2100, 2106], "characterist": [8, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1921, 2040, 2046], "uniformli": [8, 33, 1830, 1831, 2079], "leak": [8, 893, 900, 903, 905, 2009, 2024, 2034], "smart": [8, 2039, 2059, 2067], "anywai": [8, 2034, 2042], "obviou": [8, 1177, 2041, 2069, 2093], "extens": [8, 14, 18, 27, 29, 33, 49, 62, 1337, 1338, 1851, 1870, 2005, 2016, 2027, 2033, 2051, 2054, 2059, 2072, 2093, 2094, 2103], "unavoid": 8, "latenc": [8, 41, 2017, 2036, 2037, 2094, 2100], "caveat": [8, 1699, 1757, 2016, 2024, 2037, 2046, 2051, 2089, 2099, 2103], "valuabl": 8, "certainli": [8, 2016], "heterogen": [8, 2008], "cluster": [8, 27, 29, 43, 44, 45, 52, 1423, 2077], "focus": [8, 2008, 2009, 2039, 2103], "beaten": 8, "space": [8, 9, 22, 33, 771, 772, 773, 1088, 1123, 1125, 1127, 1128, 1134, 1141, 1219, 1228, 1281, 1282, 1336, 1352, 1423, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1484, 1495, 1496, 1497, 1498, 1499, 1500, 1513, 1514, 1571, 1600, 1601, 1602, 1603, 1604, 1605, 1637, 1942, 2007, 2017, 2028, 2034, 2043, 2046, 2051, 2074, 2105], "innov": 8, "growth": 8, "ultim": [8, 9, 14, 37, 47, 49, 2084], "evidenc": 8, "began": 8, "bind": [8, 14, 27, 50, 61, 1041, 1181, 1203, 2009, 2010, 2013, 2039, 2059, 2091], "monolith": 8, "deepli": 8, "integr": [8, 22, 38, 50, 56, 153, 942, 944, 945, 946, 947, 948, 949, 994, 1088, 1227, 1265, 1289, 1333, 1334, 1414, 1519, 1826, 1838, 1942, 2027, 2039, 2045, 2046, 2055, 2058, 2060, 2062, 2073, 2075, 2079, 2089], "numpi": [8, 22, 57, 447, 492, 692, 693, 698, 877, 879, 880, 900, 901, 905, 956, 1100, 1102, 1103, 1105, 1123, 1144, 1145, 1146, 1147, 1151, 1152, 1157, 1158, 1174, 1229, 1296, 1297, 1307, 1318, 1320, 1321, 1322, 1323, 1324, 1329, 1330, 1333, 1335, 1367, 1372, 1813, 1838, 1841, 1848, 1860, 1867, 1902, 1903, 1904, 1905, 1906, 1907, 1920, 1922, 1923, 1932, 1935, 1936, 1938, 1966, 1969, 1970, 2013, 2016, 2035, 2039, 2040, 2049, 2050, 2051, 2052, 2059, 2075, 2076, 2077, 2078, 2079, 2091, 2107], "scipi": [8, 960, 1312, 1313, 1666, 1813, 1875, 2059, 2070, 2073, 2077], "scikit": [8, 1636], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 2052], "year": [8, 2072], "rewrot": 8, "frontend": [8, 15, 50, 56, 61, 2094], "familiar": [8, 15, 50, 61, 1005, 1039, 1060, 2006, 2034, 2040, 2059, 2062, 2068, 2069, 2091, 2092, 2094, 2102], "perhap": [8, 2040, 2091], "importantli": 8, "huge": [8, 1921, 2021, 2091], "scientif": [8, 1867], "pareto": [8, 2005], "close": [8, 15, 27, 44, 61, 63, 66, 71, 1043, 1179, 1254, 1301, 1302, 1328, 1329, 1355, 1432, 1551, 1569, 1598, 1786, 1920, 1944, 2021, 2034, 2039, 2049, 2056, 2059, 2062, 2067, 2077, 2079], "curv": [8, 2077], "torchdynamo": [8, 49, 63, 74, 679, 972, 974, 980, 2005, 2015, 2056, 2084, 2089, 2090, 2091, 2094, 2096], "frame": [8, 49, 61, 972, 1262, 1916, 1959, 2041, 2053, 2054, 2077, 2084, 2090, 2092, 2094, 2095, 2103, 2105], "torch_funct": [8, 2039], "torch_dispatch": 8, "torch": [8, 9, 11, 15, 18, 20, 23, 24, 28, 31, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 52, 55, 63, 64, 65, 66, 67, 68, 69, 70, 80, 81, 83, 85, 87, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 894, 895, 900, 905, 906, 915, 916, 917, 927, 928, 935, 936, 937, 938, 939, 995, 996, 1005, 1006, 1007, 1008, 1010, 1011, 1026, 1028, 1039, 1109, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1263, 1264, 1265, 1280, 1378, 1390, 1391, 1392, 1396, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1580, 1699, 1708, 1709, 1710, 1711, 1712, 1726, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1750, 1762, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1826, 1895, 1974, 1975, 1976, 1979, 1981, 2005, 2006, 2007, 2008, 2017, 2018, 2025, 2026, 2033, 2034, 2035, 2036, 2038, 2041, 2042, 2043, 2045, 2046, 2047, 2048, 2050, 2052, 2054, 2055, 2060, 2062, 2063, 2064, 2067, 2068, 2069, 2076, 2088, 2089, 2090, 2091, 2092, 2093, 2096, 2099, 2102, 2103, 2105], "fx": [8, 12, 49, 50, 81, 679, 746, 814, 815, 816, 817, 840, 860, 1163, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 2005, 2013, 2053, 2054, 2063, 2064, 2089, 2090, 2091, 2092, 2093, 2094, 2102, 2103], "tracer": [8, 49, 1281, 2056, 2077, 2083, 2091], "functorch": [8, 50, 53, 58, 63, 66, 71, 72, 75, 2089], "anchor": [8, 61, 1568, 1569, 1693, 1694, 2007, 2102], "hackabl": 8, "todai": [8, 27, 50, 53, 58, 972, 2062, 2090], "evolv": [8, 2038, 2054, 2055], "ai": [8, 2056, 2061, 2073], "adopt": [9, 27, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 1716, 1717, 2054], "hierarch": [9, 2077], "pull": [9, 10, 15, 61, 149, 893, 1195, 2056, 2059, 2093, 2106], "request": [9, 10, 11, 27, 29, 47, 61, 688, 861, 879, 880, 928, 1061, 1338, 1360, 1370, 1642, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 2004, 2027, 2033, 2034, 2036, 2037, 2056, 2059, 2067, 2068, 2069, 2072, 2073, 2090, 2105, 2106], "overseen": 9, "catch": [9, 37, 2006, 2034, 2040, 2043, 2091, 2095], "maker": 9, "strong": 9, "toward": [9, 63, 1100, 1227, 1228, 1338, 1419, 1709, 1798, 1839, 1847, 1848, 2042, 2060], "philosophi": [9, 56, 2005], "beyond": [9, 23, 1385, 1454, 1776, 1777, 1786, 1846, 2041, 2046, 2054, 2090], "encourag": [9, 35, 2027, 2062, 2072, 2079], "propos": [9, 1773, 1793, 1794, 2016, 2043, 2058, 2068], "review": [9, 10, 23, 2059, 2096], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 61], "codebas": [9, 2039], "strictli": [9, 22, 149, 190, 207, 485, 893, 956, 1228, 1265, 1269, 1519, 2034, 2073], "compani": 9, "bui": 9, "addition": [9, 22, 23, 27, 29, 33, 35, 49, 52, 149, 512, 616, 893, 928, 1163, 1167, 1168, 1269, 1329, 1423, 1481, 1482, 1483, 1897, 2041, 2081, 2105], "membership": [9, 35, 43, 44, 2010], "That": [9, 12, 35, 42, 45, 54, 61, 986, 1262, 1336, 1352, 1957, 2013, 2019, 2039, 2040, 2041, 2042, 2051, 2059, 2067, 2091, 2094], "seat": 9, "reserv": [9, 41, 1061, 2010, 2037, 2046, 2105], "emploi": [9, 29, 1789, 2046, 2059, 2060, 2085], "directori": [9, 14, 27, 29, 35, 42, 80, 1771, 2004, 2020, 2045, 2054, 2059, 2061, 2077, 2085, 2094, 2103], "procedur": [9, 33, 859, 1281, 1282, 1338, 1895, 2067, 2103], "disput": 9, "made": [9, 19, 29, 31, 45, 49, 61, 80, 900, 903, 905, 920, 1265, 1519, 1565, 1567, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1836, 2008, 2016, 2034, 2052, 2059, 2077, 2079, 2088, 2090, 2091, 2103, 2104], "public": [9, 10, 62, 1163, 2039, 2104], "relev": [9, 28, 35, 44, 60, 679, 1329, 1491, 2010, 2033, 2034, 2054, 2059, 2062, 2085, 2094, 2095, 2096, 2106], "resolut": [9, 1531, 1532, 1590, 1625, 1667, 1668, 1942, 2010, 2059, 2107], "conclus": 9, "publicli": [9, 2104], "vision": [9, 1275, 1454, 1608, 2004, 2005, 2096], "roadmap": [9, 10], "parti": [9, 44, 2004, 2005, 2006, 2013, 2037, 2040, 2046, 2059, 2091], "triag": [9, 10], "meet": [9, 10, 12, 29, 43, 986, 1295, 2037, 2094], "Their": [9, 1097, 2039, 2093], "articul": 9, "cohes": 9, "negoti": [9, 2067], "contenti": 9, "broad": [9, 2046, 2106], "stakehold": 9, "power": [9, 12, 43, 1068, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1148, 1289, 1319, 1333, 1486, 1487, 1488, 1646, 1647, 1648, 1724, 1758, 1773, 1802, 1816, 1840, 1963, 2010, 2037, 2072], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 33, 52, 1367, 2009, 2011, 2033, 2034, 2042, 2058, 2062, 2075, 2084, 2087, 2090], "merit": 9, "demonstr": [9, 45, 49, 61, 63, 71, 72, 1438, 2006, 2046, 2051, 2054, 2060, 2067, 2085, 2092, 2094, 2096, 2101], "expertis": 9, "align": [9, 23, 49, 80, 759, 778, 784, 819, 825, 972, 1105, 1219, 1321, 1430, 1438, 1454, 1470, 1484, 1489, 1513, 1514, 1535, 1572, 1580, 1581, 1582, 1608, 1609, 1636, 1637, 1696, 1723, 1764, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1793, 1942, 2005, 2025, 2034, 2043, 2051, 2056, 2065, 2073], "continu": [9, 22, 27, 33, 48, 52, 61, 401, 607, 818, 909, 1219, 1301, 1302, 1329, 1437, 1438, 1709, 1803, 2010, 2016, 2034, 2042, 2051, 2054, 2061, 2081, 2089, 2091, 2092, 2094], "light": [9, 2077], "mainten": [9, 44, 45], "emeritu": [9, 10], "inact": [9, 1061, 2037, 2105], "contact": [9, 27], "item": [9, 22, 29, 63, 73, 74, 582, 583, 584, 588, 791, 792, 793, 813, 814, 815, 816, 939, 1454, 1520, 1529, 1729, 1867, 2004, 2006, 2007, 2008, 2009, 2017, 2025, 2037, 2056, 2057, 2059, 2067, 2077, 2078, 2088, 2090, 2091, 2093, 2098], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 22, 29, 33, 49, 61, 87, 401, 470, 544, 734, 857, 861, 863, 941, 943, 950, 963, 964, 965, 1121, 1122, 1123, 1124, 1125, 1133, 1135, 1139, 1141, 1159, 1169, 1170, 1173, 1181, 1223, 1224, 1257, 1260, 1265, 1268, 1295, 1296, 1307, 1309, 1320, 1323, 1324, 1338, 1358, 1373, 1409, 1414, 1415, 1432, 1446, 1447, 1448, 1453, 1454, 1455, 1462, 1472, 1479, 1519, 1525, 1556, 1563, 1568, 1569, 1590, 1598, 1617, 1622, 1625, 1693, 1694, 1702, 1703, 1846, 1848, 1875, 1898, 1900, 1945, 1946, 1947, 1948, 1956, 2004, 2007, 2025, 2026, 2039, 2040, 2043, 2054, 2056, 2057, 2060, 2066, 2072, 2073, 2079, 2094, 2104, 2107], "neg": [9, 11, 14, 19, 22, 27, 33, 47, 61, 87, 440, 442, 457, 660, 661, 697, 754, 779, 943, 948, 989, 992, 1010, 1026, 1032, 1033, 1061, 1074, 1121, 1122, 1123, 1124, 1125, 1126, 1140, 1141, 1142, 1148, 1159, 1185, 1191, 1255, 1257, 1259, 1319, 1346, 1358, 1381, 1382, 1396, 1405, 1409, 1414, 1415, 1423, 1432, 1440, 1441, 1442, 1463, 1472, 1505, 1512, 1513, 1514, 1522, 1526, 1528, 1533, 1551, 1568, 1569, 1618, 1622, 1625, 1627, 1636, 1640, 1650, 1651, 1652, 1661, 1669, 1693, 1694, 1696, 1812, 1813, 1844, 1848, 1882, 1884, 1887, 1899, 1937, 1945, 1946, 1947, 1948, 1955, 1956, 1975, 1979, 1983, 1984, 1996, 2006, 2007, 2025, 2027, 2032, 2034, 2039, 2040, 2056, 2057, 2066, 2072, 2073, 2090, 2094, 2098], "interact": [9, 15, 22, 27, 61, 62, 862, 915, 1008, 1041, 2010, 2013, 2039, 2059, 2062, 2077, 2088, 2091, 2094, 2097, 2105], "final": [9, 27, 29, 31, 33, 35, 44, 49, 50, 52, 56, 57, 685, 688, 689, 759, 940, 958, 971, 1105, 1144, 1163, 1194, 1219, 1337, 1355, 1360, 1439, 1470, 1472, 1489, 1535, 1548, 1699, 1898, 1942, 2006, 2008, 2009, 2010, 2025, 2039, 2042, 2043, 2046, 2049, 2051, 2053, 2054, 2056, 2058, 2059, 2068, 2069, 2088, 2090, 2092, 2103], "declin": 9, "conflict": [9, 23, 29, 45, 49, 2059], "lack": [9, 11, 939, 1301, 1302, 1329], "unfit": 9, "conduct": [9, 1709, 1809, 1921, 2067, 2085], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 932, 2007, 2059], "letter": [9, 1105], "befit": 9, "candidaci": 9, "behind": [9, 27, 2005, 2051, 2068, 2093], "75": [9, 1227, 1507, 1625, 1643, 1773, 1820, 2007, 2073], "unforeseen": 9, "circumst": [9, 44, 972, 1191, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1677, 2037], "perman": [9, 61, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747, 2034, 2069], "unavail": [9, 2008], "rank": [9, 22, 23, 27, 28, 29, 31, 33, 35, 42, 44, 45, 48, 50, 52, 63, 72, 1311, 1312, 1313, 1320, 1355, 1511, 1559, 1709, 1729, 1809, 1921, 2007, 2038, 2042, 2048, 2056, 2060, 2067, 2068, 2090, 2103], "elect": 9, "invit": [9, 2004], "convinc": 9, "approach": [9, 23, 27, 61, 86, 960, 1174, 1432, 1863, 1895, 1969, 2006, 2024, 2027, 2037, 2039, 2043, 2053, 2054, 2062, 2067, 2094], "interview": 9, "talk": [9, 47, 2013, 2045], "gather": [9, 27, 29, 44, 52, 512, 1932, 1957, 2007, 2039, 2041, 2042, 2045, 2057, 2059, 2098], "read": [9, 12, 18, 22, 27, 29, 34, 35, 37, 44, 45, 50, 52, 56, 61, 447, 926, 986, 1063, 1088, 1156, 1158, 1159, 1183, 1273, 1337, 1803, 2005, 2013, 2025, 2026, 2034, 2035, 2037, 2038, 2040, 2045, 2049, 2053, 2059, 2062, 2067, 2088, 2091, 2092, 2094, 2096], "attend": [9, 734, 1525, 1563], "confer": [9, 1472], "pipelin": [9, 29, 61, 2005, 2067, 2094], "world": [9, 27, 31, 35, 42, 44, 45, 52, 1559, 1709, 2034, 2059, 2062, 2090, 2091, 2092], "cover": [9, 50, 53, 61, 63, 1079, 1105, 1512, 1650, 1651, 1652, 2009, 2011, 2026, 2034, 2039, 2042, 2043, 2045, 2046, 2067, 2092, 2097, 2101, 2106], "push": [9, 36, 1065, 1067, 1174, 1331, 1969, 2061, 2091], "codeown": 9, "notifi": [9, 28, 45, 2069], "expert": 9, "strongli": [9, 27, 35, 45, 1457, 1458, 1459, 1463, 1916, 2004], "failur": [9, 27, 33, 35, 36, 37, 41, 42, 43, 44, 48, 49, 679, 919, 920, 972, 1163, 1181, 1281, 1282, 1385, 2009, 2015, 2024, 2042, 2054, 2060, 2067, 2069, 2079, 2091, 2094, 2103], "revert": [9, 33, 52, 1556, 1685, 2069], "substanti": [9, 23, 2037, 2088], "syntact": [9, 37, 61], "incompat": [9, 14, 57, 953, 1262, 1716, 1717, 2035, 2059], "establish": [9, 27, 44, 1803, 2034], "seri": [9, 61, 1438, 1481, 2050, 2056, 2088, 2099, 2104], "lf": 9, "llc": 9, "guidelin": [9, 1740, 2048, 2053, 2059, 2062, 2063], "trademark": 9, "www": [9, 1438, 1569, 2077], "lfproject": 9, "acknowledg": [9, 27, 2005, 2069, 2072], "copyright": [9, 2103], "holder": 9, "independ": [9, 22, 27, 44, 52, 60, 152, 153, 778, 784, 908, 909, 910, 911, 912, 913, 1010, 1219, 1228, 1324, 1456, 1457, 1458, 1459, 1463, 1611, 1612, 1613, 1618, 1635, 1636, 1696, 1725, 1761, 1819, 1975, 2005, 2006, 2033, 2034, 2037, 2051, 2059, 2101], "authorship": 9, "claus": [9, 2041], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 23, 33, 430, 478, 757, 798, 1209, 1286, 1302, 1305, 1324, 1366, 1412, 1484, 1525, 1579, 1723, 1807, 1809, 1819, 1820, 1921, 2006, 2007, 2043, 2050, 2056, 2072, 2073, 2093], "partli": [9, 2009], "domain": [9, 33, 37, 683, 825, 885, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1133, 1135, 1136, 1137, 1138, 1219, 2027, 2056, 2062], "absolut": [9, 11, 14, 61, 91, 680, 693, 919, 920, 1153, 1254, 1294, 1299, 1320, 1323, 1325, 1346, 1479, 1485, 1551, 1634, 1638, 1681, 1734, 1735, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1764, 1772, 1813, 1839, 1870, 2007, 2017, 2046, 2056, 2057, 2073, 2078, 2079, 2085], "health": 9, "success": [9, 29, 33, 35, 41, 61, 285, 1296, 1307, 1309, 1355, 1736, 1902, 1903, 1904, 1906, 1907, 2037, 2046, 2056, 2072, 2103], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 2056], "clearli": [9, 2016, 2059], "sponsorship": 9, "foundat": [9, 2054], "ptf": 9, "minor": [9, 1032, 1296, 1312, 2072, 2091], "committ": 9, "prior": [9, 23, 27, 29, 35, 78, 80, 900, 904, 905, 906, 977, 1338, 1565, 1567, 1677, 1740, 2035, 2037, 2039, 2058, 2062, 2088, 2094], "walkthrough": [9, 2033], "facebook": 9, "infrastructur": [9, 36, 2059, 2090], "employe": 9, "expand": [9, 33, 254, 492, 878, 900, 904, 905, 906, 919, 920, 955, 1318, 1319, 1367, 1525, 1570, 1670, 1952, 2004, 2007, 2015, 2025, 2026, 2035, 2037, 2039, 2040, 2054, 2056, 2057, 2059, 2060, 2076, 2098], "deliv": [9, 2061], "offici": [9, 27, 49, 86, 1423, 2062], "showcas": [9, 12, 32, 1515, 2037, 2048], "whenev": [9, 49, 880, 1723, 1724, 2021, 2024, 2039, 2065, 2068, 2069, 2093, 2103, 2104], "fix": [10, 18, 22, 27, 33, 35, 44, 49, 54, 57, 61, 81, 82, 261, 794, 800, 928, 1163, 1279, 1311, 1461, 1462, 1538, 1616, 1617, 1636, 1709, 2006, 2007, 2021, 2032, 2033, 2037, 2041, 2042, 2048, 2052, 2054, 2056, 2057, 2058, 2088, 2091, 2094, 2101, 2103], "plu": [10, 14, 29, 908, 1159, 1312, 2042, 2072], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1338], "ezyang": [10, 2013, 2076], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1809, 1921], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": 10, "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 28, 29, 31, 33, 52, 928, 1777, 1778, 1780, 1786, 1790, 2058], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 2103], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 2092], "ansel": [10, 2092], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 12, 1412, 1820, 2037, 2091, 2094], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 33], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1338], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1219], "robi": 10, "robieta": 10, "xu": [10, 52], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 27, 52, 61, 1905, 2008, 2026, 2056, 2088, 2099], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1960], "sebastian": 10, "messmer": 10, "smessmer": 10, "aaron": 10, "bockov": 10, "abock": 10, "bowen": 10, "bao": [10, 2100], "bowenbao": 10, "thiago": 10, "crepaldi": 10, "thiagocrepaldi": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1423], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 792], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 2094, 2103], "johnson": 10, "peterjc123": [10, 2052], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "sunita": 10, "nadamp": 10, "snadamp": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 33], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 12, 29, 50, 53, 57, 58, 61, 63, 71, 72, 318, 986, 1177, 1179, 1181, 1188, 1192, 1193, 1194, 1195, 1204, 1263, 1266, 1761, 1916, 2010, 2019, 2027, 2034, 2039, 2062, 2090, 2091, 2094, 2103, 2104], "bj": 11, "j": [11, 27, 33, 312, 314, 320, 512, 514, 516, 691, 898, 908, 910, 983, 1105, 1121, 1122, 1129, 1135, 1139, 1140, 1206, 1262, 1265, 1301, 1302, 1313, 1329, 1338, 1345, 1353, 1355, 1360, 1457, 1458, 1459, 1463, 1519, 1522, 1611, 1612, 1613, 1618, 1813, 1820, 1899, 1916, 1920, 1966, 2008, 2032, 2034, 2039, 2043, 2051, 2077], "imaginari": [11, 310, 919, 983, 990, 1126, 1128, 1136, 1137, 1138, 1236, 1255, 1257, 1258, 1261, 1832, 1916, 1967, 1968, 2010, 2034, 2043, 2079], "satisfi": [11, 20, 23, 33, 50, 61, 616, 693, 759, 793, 909, 919, 920, 956, 1121, 1122, 1124, 1126, 1128, 1136, 1137, 1138, 1153, 1180, 1279, 1305, 1331, 1332, 1423, 1438, 1465, 1470, 1489, 1535, 1740, 1757, 1839, 1855, 1895, 1916, 2009, 2013, 2034, 2037, 2042, 2043, 2058, 2060, 2061, 2072, 2075, 2092], "equat": [11, 965, 1105, 1177, 1185, 1209, 1223, 1309, 1310, 1311, 1312, 1313, 1315, 1326, 1328, 1431, 1880, 1944, 2007, 2034, 2043, 2058, 2073], "frequent": [11, 29, 1423, 2005, 2037, 2048, 2049, 2051, 2072, 2084, 2085, 2096], "occur": [11, 22, 27, 37, 38, 44, 52, 57, 81, 83, 195, 314, 895, 928, 972, 1064, 1105, 1181, 1262, 1268, 1279, 1309, 1438, 1559, 1578, 1609, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1790, 2008, 2021, 2026, 2033, 2034, 2037, 2041, 2049, 2054, 2056, 2061, 2067, 2069, 2076, 2079, 2090, 2091, 2094, 2096, 2099, 2101, 2103, 2104, 2105], "mathemat": [11, 61, 908, 909, 910, 911, 912, 913, 1153, 1219, 1431, 1433, 1434, 1435, 1481, 1482, 1483, 1484, 1559, 1644, 1684, 1709, 1764, 1839, 1897, 1898, 2009, 2013, 2034, 2049, 2073, 2081], "topic": [11, 49, 2045, 2046, 2092], "tradition": 11, "torchaudio": [11, 2005], "mimick": 11, "assembli": 11, "lapack": [11, 1209, 1296, 1307, 1308, 1309, 1311, 1314, 1327, 1819, 1920], "spectral": [11, 1285, 1301, 1329, 1724, 1748, 1758, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2049], "fft": [11, 2005, 2037], "4621": 11, "0303j": 11, "2438": [11, 1311, 1616], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 174, 983, 1148, 1158, 1244, 1265, 1295, 1296, 1301, 1302, 1303, 1304, 1305, 1306, 1446, 1447, 1448, 1519, 1600, 1601, 1602, 1770, 1813, 1860, 2074, 2075, 2078, 2079, 2094], "complex64": [11, 177, 964, 965, 983, 1122, 1124, 1125, 1130, 1131, 1158, 1244, 1297, 1320, 1323, 1446, 1447, 1448, 1600, 1601, 1602, 1770, 1813, 1860, 2074, 2075, 2078, 2079, 2094], "apart": [11, 2009, 2034], "linspac": [11, 943, 967, 1126, 1136, 1367, 2007, 2011, 2057], "logspac": [11, 2007, 2011, 2057], "arang": [11, 22, 27, 34, 512, 606, 690, 691, 692, 696, 698, 886, 887, 888, 954, 966, 970, 1088, 1103, 1121, 1125, 1133, 1139, 1141, 1145, 1146, 1147, 1148, 1155, 1156, 1229, 1286, 1287, 1291, 1294, 1318, 1321, 1322, 1335, 1415, 1439, 1440, 1441, 1541, 1542, 1543, 1544, 1545, 1572, 1573, 1574, 1663, 1764, 1765, 1808, 1816, 1820, 1835, 1842, 1847, 1867, 1900, 1908, 1919, 1936, 1937, 1939, 1940, 1942, 1970, 2007, 2016, 2027, 2051, 2057, 2073, 2077, 2078, 2088, 2091, 2096, 2098], "switch": [11, 22, 29, 55, 60, 61, 78, 1308, 1309, 1310, 1458, 1625, 1664, 1714, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1851, 1957, 2024, 2034, 2037, 2046, 2048, 2058, 2095], "view_as_r": [11, 1916, 2007, 2057, 2076], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 63, 76, 2007, 2025, 2027, 2072], "2250": [11, 1322, 1764], "7546": 11, "1722": 11, "x1": [11, 49, 960, 1313, 1453, 1511, 1568, 1569, 1607, 1665, 2007, 2098], "3j": [11, 27, 697, 987, 988, 1843, 1844, 1860], "4j": [11, 27, 1870], "0000": [11, 33, 512, 865, 908, 910, 943, 963, 967, 990, 1086, 1092, 1093, 1094, 1119, 1120, 1123, 1125, 1126, 1132, 1133, 1136, 1141, 1153, 1154, 1155, 1219, 1225, 1228, 1232, 1291, 1294, 1295, 1296, 1308, 1309, 1312, 1317, 1318, 1322, 1324, 1336, 1352, 1410, 1461, 1462, 1572, 1573, 1575, 1576, 1616, 1617, 1764, 1813, 1819, 1824, 1825, 1826, 1835, 1839, 1840, 1864, 1870, 1872, 1873, 1875, 1878, 1879, 1880, 1881, 1898, 1944, 1945, 1947, 1972, 2016, 2027, 2037, 2072, 2073, 2078], "6569": [11, 1232], "5708": [11, 1089], "7854": 11, "complex_tensor": 11, "pt": [11, 23, 29, 52, 1157, 1270, 1273, 1276, 1283, 1337, 1851, 2006, 2017, 2046, 2051, 2059, 2096], "conjug": [11, 329, 457, 691, 919, 964, 965, 987, 988, 1245, 1295, 1296, 1302, 1305, 1308, 1315, 1329, 1334, 1338, 1723, 1807, 1843, 1916, 1920, 1966, 2043, 2058, 2078], "wirting": [11, 919, 2043], "deriv": [11, 27, 52, 149, 737, 738, 739, 740, 741, 742, 780, 799, 823, 893, 914, 919, 920, 1169, 1173, 1179, 1219, 1262, 1323, 1355, 1567, 1699, 2005, 2008, 2039, 2040, 2043, 2067, 2072, 2073], "steepest": [11, 2034], "descent": [11, 33, 1773, 1789, 1793, 1794, 2034, 2046], "box": [11, 27, 45, 61, 1174, 1969, 2026, 2034, 2038, 2054, 2089, 2090, 2095, 2096], "real_param": 11, "p": [11, 23, 29, 33, 52, 61, 153, 233, 285, 424, 425, 452, 487, 490, 491, 685, 688, 940, 942, 952, 960, 1099, 1286, 1297, 1303, 1304, 1312, 1313, 1355, 1357, 1360, 1370, 1408, 1427, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1484, 1486, 1487, 1488, 1524, 1528, 1530, 1568, 1569, 1591, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1646, 1647, 1648, 1658, 1662, 1665, 1666, 1693, 1714, 1727, 1729, 1735, 1744, 1764, 1789, 1840, 1897, 2007, 2008, 2033, 2034, 2037, 2041, 2043, 2048, 2058, 2061, 2072, 2073, 2097, 2098], "complex_optim": 11, "adamw": [11, 1780, 1786, 2058], "real_optim": 11, "slight": [11, 1859, 2072, 2075], "discrep": [11, 1709, 1826, 2043], "foreach": [11, 1713, 1714, 1715, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 2058], "v": [11, 29, 41, 49, 56, 61, 486, 487, 543, 898, 909, 911, 912, 913, 939, 956, 1162, 1172, 1174, 1262, 1279, 1301, 1305, 1329, 1333, 1338, 1525, 1568, 1569, 1579, 1616, 1662, 1725, 1756, 1761, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1809, 1842, 1901, 1905, 1920, 1921, 1969, 2006, 2007, 2008, 2009, 2021, 2034, 2043, 2052, 2059, 2072, 2077, 2087], "forloop": 11, "numerical_accuraci": 11, "impact": [11, 23, 27, 80, 1061, 1863, 2019, 2021, 2034, 2062, 2076, 2094, 2099, 2103], "pointwis": [11, 33, 972, 1167, 1168, 1343, 1344, 1484, 2025, 2035, 2093, 2096, 2097], "lbfg": [11, 2058], "yet": [11, 28, 35, 49, 50, 52, 57, 60, 61, 70, 79, 81, 82, 485, 1007, 1079, 1192, 1268, 1270, 1283, 1371, 1709, 1731, 1735, 1737, 1776, 1777, 2005, 2008, 2009, 2015, 2026, 2027, 2037, 2056, 2057, 2062, 2067, 2069, 2072, 2073, 2075, 2088, 2091, 2093, 2094, 2099, 2101, 2103], "fulli": [11, 14, 22, 27, 29, 31, 32, 49, 56, 61, 679, 1068, 1265, 1515, 1516, 1517, 1519, 2009, 2015, 2039, 2059, 2062, 2090, 2091, 2098], "quantiz": [11, 26, 61, 218, 325, 337, 471, 472, 473, 474, 475, 477, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 932, 1090, 1119, 1120, 1821, 1822, 1823, 1824, 1825, 1957, 2005, 2057, 2075, 2078, 2079, 2082, 2083], "pred": [12, 63, 66, 71, 72, 986, 1484, 1709, 2047, 2058, 2067, 2098], "union": [12, 14, 22, 29, 32, 35, 38, 42, 45, 49, 50, 52, 61, 986, 1179, 1277, 1337, 1420, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1466, 1467, 1486, 1487, 1488, 1512, 1513, 1514, 1519, 1563, 1565, 1567, 1570, 1583, 1729, 1770, 1851, 1960, 2007, 2008, 2009, 2013, 2051, 2054, 2056, 2059, 2074, 2077, 2079, 2083], "true_fn": [12, 50, 63, 66, 71, 72, 986], "false_fn": [12, 50, 63, 66, 71, 72, 986], "operand": [12, 63, 71, 72, 948, 986, 1105, 2009, 2010, 2039, 2072, 2075], "Its": [12, 27, 50, 61, 994, 1019, 1265, 1313, 1331, 1332, 1357, 1519, 1764, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1966, 2009, 2038], "uniqu": [12, 27, 35, 41, 44, 45, 47, 512, 516, 1256, 1301, 1302, 1306, 1312, 1313, 1315, 1324, 1326, 1328, 1329, 1366, 1373, 1897, 1920, 1954, 2004, 2006, 2015, 2020, 2039, 2059, 2061, 2067, 2068, 2069, 2072, 2077, 2088, 2105], "predic": [12, 63, 68, 71, 72], "unlock": [12, 2016], "flexibilti": 12, "architectur": [12, 32, 61, 1031, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1454, 1563, 1608, 1864, 2037, 2049, 2062, 2072, 2087], "prototyp": [12, 18, 27, 49, 679, 908, 910, 914, 919, 920, 986, 1275, 1567, 1579, 1580, 2005, 2016, 2021, 2026, 2027, 2046, 2051, 2065, 2067, 2072, 2075, 2081, 2082, 2083, 2085], "classif": [12, 986, 1432, 1438, 1454, 1522, 1524, 1526, 1552, 1609, 2005, 2032, 2063], "co": [12, 49, 50, 58, 63, 67, 68, 71, 72, 73, 74, 76, 200, 634, 635, 682, 950, 972, 986, 1047, 1164, 1167, 1168, 1173, 1223, 1224, 1317, 1452, 1453, 1456, 1793, 1794, 1801, 1813, 1874, 1878, 1879, 1880, 1881, 1883, 1902, 1903, 1904, 1906, 1907, 2007, 2013, 2025, 2057, 2058, 2072, 2077, 2079, 2089, 2096, 2098], "sin": [12, 14, 49, 50, 57, 58, 63, 67, 68, 71, 72, 73, 74, 531, 668, 669, 881, 972, 986, 1047, 1164, 1166, 1167, 1168, 1170, 1173, 1224, 1317, 1367, 1813, 1875, 1881, 2007, 2013, 2025, 2034, 2057, 2072, 2073, 2077, 2089, 2094, 2096, 2098, 2101], "dynamicshapecondpred": 12, "dyn_shape_mod": 12, "eagerli": [12, 1036, 1042, 1986, 1989, 2037, 2090, 2094], "vari": [12, 49, 818, 1271, 1432, 1551, 1750, 1876, 2021, 2037, 2048, 2049, 2058, 2062, 2063, 2072, 2085, 2090, 2091, 2093, 2094, 2103, 2105], "inp2": 12, "assert": [12, 22, 23, 29, 33, 54, 56, 57, 58, 61, 63, 69, 72, 623, 922, 924, 925, 1164, 1166, 1167, 1168, 1169, 1172, 1173, 1174, 1180, 1181, 1263, 1268, 1269, 1275, 1677, 1770, 1969, 2008, 2010, 2013, 2039, 2040, 2046, 2051, 2059, 2062, 2079, 2090, 2094, 2102, 2103], "export": [12, 15, 18, 27, 34, 48, 63, 65, 68, 70, 71, 72, 77, 80, 679, 840, 931, 979, 986, 1007, 1178, 1185, 1268, 1270, 1271, 1277, 1283, 1751, 1752, 1771, 1772, 2005, 2006, 2008, 2009, 2013, 2039, 2057, 2061, 2067, 2084, 2090, 2095, 2101, 2102], "deploy": [12, 35, 44, 49, 2005, 2019, 2085, 2095], "dim_batch": 12, "dim": [12, 27, 32, 33, 49, 57, 58, 61, 63, 65, 71, 72, 111, 113, 114, 115, 117, 133, 134, 135, 183, 203, 206, 209, 210, 211, 212, 213, 214, 228, 232, 259, 263, 280, 311, 312, 313, 314, 315, 316, 320, 321, 353, 379, 391, 406, 408, 409, 410, 413, 428, 429, 430, 431, 435, 436, 452, 461, 469, 478, 490, 491, 493, 504, 505, 511, 512, 513, 514, 515, 516, 517, 518, 536, 537, 540, 541, 543, 546, 551, 552, 554, 559, 564, 572, 577, 578, 582, 583, 584, 586, 587, 589, 604, 605, 608, 609, 610, 611, 614, 616, 692, 694, 695, 696, 698, 874, 875, 876, 910, 911, 913, 959, 966, 984, 986, 993, 1004, 1019, 1021, 1084, 1085, 1086, 1087, 1088, 1097, 1103, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1144, 1145, 1164, 1174, 1178, 1206, 1219, 1229, 1237, 1238, 1239, 1240, 1242, 1287, 1297, 1298, 1318, 1322, 1332, 1334, 1335, 1345, 1353, 1363, 1365, 1366, 1368, 1371, 1373, 1388, 1410, 1411, 1412, 1413, 1414, 1415, 1423, 1453, 1454, 1455, 1458, 1462, 1464, 1469, 1484, 1490, 1509, 1525, 1526, 1527, 1553, 1555, 1567, 1569, 1570, 1607, 1608, 1624, 1627, 1636, 1644, 1650, 1651, 1652, 1661, 1662, 1664, 1666, 1670, 1677, 1683, 1684, 1692, 1709, 1724, 1725, 1731, 1735, 1737, 1744, 1745, 1758, 1761, 1764, 1810, 1817, 1820, 1840, 1841, 1846, 1847, 1852, 1853, 1854, 1857, 1858, 1888, 1891, 1892, 1896, 1899, 1901, 1908, 1911, 1913, 1914, 1915, 1916, 1919, 1932, 1936, 1937, 1938, 1939, 1942, 1943, 1951, 1952, 1953, 1954, 1956, 1964, 1965, 1969, 1970, 2005, 2006, 2007, 2013, 2026, 2027, 2040, 2041, 2051, 2054, 2056, 2057, 2072, 2073, 2075, 2082, 2085, 2090, 2098], "batch": [12, 23, 27, 33, 45, 48, 49, 52, 53, 54, 57, 58, 61, 63, 71, 72, 582, 583, 584, 586, 587, 685, 701, 702, 703, 704, 705, 706, 734, 759, 778, 784, 914, 919, 920, 940, 952, 953, 960, 963, 964, 965, 972, 1004, 1093, 1095, 1105, 1167, 1168, 1174, 1262, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1333, 1334, 1335, 1338, 1346, 1355, 1356, 1360, 1431, 1432, 1433, 1434, 1435, 1438, 1446, 1447, 1452, 1454, 1455, 1457, 1458, 1459, 1461, 1462, 1463, 1465, 1470, 1471, 1472, 1473, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1510, 1511, 1522, 1523, 1524, 1525, 1526, 1528, 1531, 1532, 1533, 1534, 1535, 1537, 1551, 1552, 1559, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1590, 1595, 1597, 1598, 1608, 1609, 1611, 1612, 1613, 1616, 1617, 1618, 1619, 1622, 1635, 1636, 1637, 1661, 1669, 1677, 1695, 1696, 1699, 1708, 1709, 1723, 1750, 1751, 1753, 1754, 1756, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1794, 1795, 1801, 1807, 1809, 1819, 1823, 1902, 1903, 1904, 1906, 1907, 1911, 1916, 1920, 1921, 1941, 1944, 1945, 1947, 1966, 1969, 2005, 2025, 2026, 2027, 2033, 2037, 2040, 2041, 2046, 2048, 2060, 2062, 2067, 2072, 2077, 2078, 2085, 2090, 2091, 2093, 2094, 2097, 2101, 2103], "min": [12, 22, 27, 37, 44, 49, 61, 63, 73, 74, 115, 184, 185, 186, 187, 299, 694, 695, 696, 757, 769, 770, 779, 801, 818, 819, 820, 821, 824, 875, 967, 968, 1047, 1085, 1119, 1120, 1191, 1226, 1297, 1311, 1312, 1318, 1322, 1324, 1329, 1335, 1355, 1405, 1437, 1477, 1505, 1507, 1527, 1540, 1547, 1599, 1636, 1640, 1670, 1672, 1678, 1696, 1788, 1793, 1794, 1803, 1807, 1809, 1819, 1920, 1945, 1946, 1947, 1948, 2007, 2021, 2025, 2056, 2057, 2062, 2065, 2067, 2085, 2090, 2094, 2098, 2107], "ep": [12, 49, 711, 712, 713, 714, 715, 716, 722, 723, 735, 736, 748, 750, 751, 752, 753, 794, 818, 819, 820, 821, 824, 825, 919, 920, 1275, 1351, 1419, 1433, 1434, 1435, 1453, 1472, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1528, 1533, 1534, 1559, 1563, 1565, 1567, 1568, 1595, 1607, 1622, 1626, 1627, 1635, 1639, 1662, 1665, 1669, 1674, 1693, 1708, 1724, 1758, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1803, 1823, 2007, 2039, 2043, 2073, 2098, 2107], "dynamic_shap": [12, 49, 2054, 2085, 2100], "graphmodul": [12, 49, 50, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 80, 859, 860, 861, 862, 2062, 2083, 2089, 2092, 2093, 2102, 2103], "arg0_1": [12, 49], "f32": [12, 49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76], "s0": [12, 49, 50, 63, 71, 72, 485, 1181, 2090, 2091, 2103], "sym_siz": [12, 50, 63, 71, 72, 2057, 2098], "sym": [12, 63, 71, 72, 73, 74, 1181, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883], "gt": [12, 63, 71, 72, 295, 1220, 2007, 2025, 2043, 2057, 2098], "true_graph_0": [12, 50, 63, 66, 71, 72], "false_graph_0": [12, 50, 63, 66, 71, 72], "symbol": [12, 14, 21, 49, 50, 62, 63, 72, 78, 79, 82, 83, 86, 623, 816, 840, 974, 1177, 1178, 1179, 1181, 1183, 1184, 1186, 1187, 1190, 1191, 1195, 1280, 1334, 1489, 1535, 1944, 1966, 2005, 2009, 2013, 2054, 2090, 2093, 2094, 2103], "sub": [12, 27, 32, 37, 52, 60, 63, 66, 71, 72, 561, 813, 861, 862, 1277, 1281, 1282, 1363, 1366, 1368, 1531, 1532, 1563, 1564, 1566, 1840, 1918, 1936, 1953, 2004, 2006, 2007, 2025, 2027, 2034, 2048, 2056, 2057, 2072, 2075, 2091, 2098, 2102], "exmapl": 12, "dependet": 12, "datadependentcondpred": 12, "sum_1": [12, 61, 2089, 2091, 2092], "b8": [12, 63, 66, 71], "flatten": [12, 23, 49, 50, 52, 61, 63, 69, 874, 875, 1094, 1228, 1322, 1335, 1571, 1722, 1764, 1772, 1820, 1836, 1841, 1846, 1932, 1952, 1953, 1954, 1955, 2007, 2025, 2026, 2028, 2032, 2054, 2056, 2057, 2064, 2076, 2090], "closur": [12, 31, 63, 71, 72, 974, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 2092, 2095], "flat": [12, 49, 1841, 1883, 1955, 2007, 2027, 2042, 2056, 2072], "_higher_order_op": 12, "condition": [12, 44, 916, 986], "constraint": [12, 27, 49, 52, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 793, 794, 909, 986, 1039, 1050, 1168, 1177, 1178, 1179, 1180, 1181, 1191, 1709, 1724, 1750, 1790, 2005, 2009, 2027, 2040, 2042, 2043, 2046, 2072, 2088, 2090, 2091], "true_branch": [12, 986], "false_branch": [12, 986], "consist": [12, 22, 27, 29, 33, 44, 45, 50, 61, 919, 963, 964, 965, 986, 1189, 1265, 1295, 1301, 1302, 1304, 1306, 1307, 1308, 1309, 1333, 1335, 1519, 1567, 1726, 1729, 1772, 1819, 1920, 2006, 2009, 2013, 2016, 2026, 2027, 2040, 2042, 2046, 2048, 2050, 2056, 2058, 2061, 2072, 2089, 2092, 2097, 2103], "possibli": [12, 22, 44, 49, 52, 986, 1193, 1194, 1265, 1281, 1308, 1313, 1519, 1709, 2006, 2013, 2050, 2059, 2093, 2105], "aka": [12, 27, 50, 63, 71, 72, 932, 986, 1479, 1634, 2034, 2054, 2075, 2090], "add_": [12, 27, 49, 55, 57, 487, 986, 1163, 2007, 2025, 2035, 2054, 2072], "tempor": [12, 986, 1433, 1435, 1438, 1559, 1572, 1609, 1636, 1696], "pytre": [12, 49, 61, 63, 986, 2040], "parallel_info": [13, 2005, 2036], "cppextens": [14, 2005], "setuptool": 14, "bare": 14, "pypa": 14, "userguid": 14, "ext_modul": 14, "buildextens": [14, 2005], "extra_compile_arg": [14, 2052], "extra_link_flag": 14, "wl": 14, "lm": 14, "cmdclass": 14, "build_ext": 14, "cudaextens": [14, 2005], "cuda_extens": 14, "extension_kernel": 14, "cu": 14, "cxx": 14, "nvcc": [14, 1035, 2103], "o2": 14, "lcuda": 14, "arch": 14, "card": [14, 2052], "visibl": [14, 27, 29, 41, 50, 1029, 1075, 1520, 1521, 1529, 1530, 2090, 2091, 2095], "ptx": 14, "road": 14, "recompil": [14, 61, 679, 972, 1279, 2015, 2044, 2090, 2091, 2092, 2099], "cc": [14, 27, 2037], "newest": [14, 56, 2053], "torch_cuda_arch_list": 14, "6": [14, 18, 22, 23, 27, 33, 42, 49, 61, 63, 64, 68, 69, 71, 72, 73, 74, 76, 312, 314, 316, 320, 400, 401, 470, 486, 498, 512, 516, 559, 606, 684, 685, 690, 696, 740, 741, 742, 744, 745, 757, 760, 762, 764, 908, 909, 911, 912, 913, 935, 943, 951, 956, 962, 966, 970, 994, 1016, 1063, 1068, 1082, 1083, 1084, 1088, 1089, 1100, 1103, 1104, 1121, 1129, 1134, 1135, 1139, 1140, 1142, 1144, 1145, 1148, 1155, 1219, 1229, 1231, 1232, 1254, 1276, 1287, 1291, 1302, 1318, 1322, 1323, 1324, 1331, 1332, 1336, 1338, 1367, 1413, 1414, 1415, 1428, 1439, 1440, 1441, 1442, 1445, 1450, 1453, 1461, 1462, 1471, 1472, 1473, 1475, 1476, 1515, 1516, 1520, 1528, 1537, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1563, 1564, 1566, 1568, 1571, 1577, 1592, 1622, 1629, 1630, 1663, 1665, 1672, 1699, 1752, 1753, 1755, 1757, 1763, 1764, 1765, 1774, 1788, 1808, 1809, 1812, 1819, 1820, 1826, 1827, 1830, 1836, 1846, 1847, 1851, 1855, 1867, 1888, 1892, 1897, 1900, 1902, 1903, 1908, 1919, 1921, 1922, 1923, 1931, 1936, 1937, 1938, 1939, 1940, 1942, 1945, 1947, 1951, 1955, 1957, 1970, 1971, 2006, 2009, 2010, 2016, 2027, 2032, 2034, 2039, 2040, 2042, 2046, 2051, 2056, 2067, 2068, 2072, 2073, 2075, 2078, 2079, 2091, 2092, 2094, 2098, 2100, 2103, 2104], "build_my_extens": 14, "7": [14, 22, 23, 27, 33, 49, 61, 63, 68, 232, 259, 312, 314, 316, 320, 400, 401, 470, 512, 559, 606, 616, 684, 696, 744, 745, 911, 913, 948, 951, 956, 962, 964, 966, 970, 1087, 1088, 1100, 1102, 1103, 1106, 1121, 1144, 1145, 1148, 1151, 1155, 1219, 1229, 1242, 1287, 1291, 1301, 1306, 1308, 1309, 1312, 1313, 1317, 1318, 1322, 1329, 1413, 1414, 1415, 1421, 1422, 1425, 1426, 1428, 1439, 1440, 1441, 1461, 1507, 1515, 1516, 1541, 1542, 1543, 1544, 1545, 1568, 1571, 1592, 1664, 1716, 1717, 1742, 1747, 1757, 1764, 1779, 1826, 1830, 1836, 1846, 1847, 1848, 1855, 1863, 1867, 1870, 1872, 1883, 1884, 1892, 1900, 1902, 1903, 1908, 1920, 1922, 1923, 1931, 1936, 1937, 1940, 1942, 1951, 1955, 1966, 1970, 2006, 2010, 2016, 2026, 2027, 2035, 2037, 2039, 2049, 2051, 2056, 2057, 2062, 2072, 2075, 2076, 2077, 2078, 2079, 2091, 2096, 2100], "older": [14, 2037, 2051, 2059], "modestli": [14, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790], "imag": [14, 22, 740, 741, 742, 861, 862, 983, 1421, 1425, 1426, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1465, 1466, 1467, 1482, 1491, 1526, 1531, 1532, 1554, 1571, 1573, 1574, 1590, 1601, 1602, 1604, 1605, 1619, 1620, 1625, 1636, 1695, 1696, 1844, 2005, 2007, 2027, 2043, 2057, 2060, 2062, 2076, 2077, 2090, 2094, 2095, 2098], "11": [14, 27, 320, 512, 679, 962, 966, 1050, 1103, 1229, 1286, 1322, 1336, 1352, 1423, 1439, 1467, 1516, 1621, 1764, 1765, 1771, 1892, 1936, 1970, 2006, 2010, 2016, 2026, 2037, 2039, 2051, 2052, 2056, 2057, 2072, 2073, 2103], "pars": [14, 27, 45, 48, 929, 2009, 2059, 2067, 2091], "window": [14, 22, 27, 61, 350, 555, 941, 950, 1223, 1224, 1262, 1285, 1428, 1429, 1430, 1466, 1467, 1486, 1487, 1488, 1512, 1513, 1514, 1515, 1516, 1517, 1592, 1620, 1621, 1650, 1651, 1652, 1824, 1825, 1916, 2005, 2007, 2021, 2037, 2061, 2090], "workaround": [14, 22, 49, 61, 1269, 2004, 2050, 2056, 2062, 2094], "pure": [14, 15, 49, 57, 1268, 2006, 2039], "sigmoidalphablendforwardcuda": 14, "69460": 14, "facebookresearch": 14, "pytorch3d": 14, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 14, "relocat": 14, "link": [14, 15, 33, 61, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1512, 1513, 1514, 1571, 1627, 2026, 2045, 2046, 2072, 2091, 2101], "rdc": 14, "dc": 14, "anymor": [14, 27, 52], "dlto": 14, "dlink": 14, "protent": 14, "perf": [14, 679, 2062, 2097], "lib": [14, 2013, 2052], "nvshmem": 14, "ninja": [14, 2052], "dlink_librari": 14, "dlink_lib": 14, "std": [14, 35, 42, 87, 376, 453, 1119, 1120, 1151, 1152, 1153, 1765, 1813, 1839, 1877, 1882, 1915, 1954, 2007, 2025, 2032, 2037, 2045, 2052, 2057, 2085, 2098], "17": [14, 27, 684, 1262, 1318, 1439, 1516, 1892, 2006, 2056, 2057, 2072, 2085, 2092], "mix": [14, 23, 33, 49, 52, 1050, 1709, 2005, 2034, 2036, 2062, 2072, 2090, 2092, 2094], "use_ninja": 14, "greatli": [14, 61, 2037, 2090], "fallback": [14, 19, 27, 44, 49, 55, 86, 1197, 1279, 1329, 2033, 2037, 2051, 2088, 2094, 2103], "distutil": 14, "max_job": 14, "extra_cflag": 14, "extra_cuda_cflag": 14, "extra_ldflag": 14, "extra_include_path": 14, "build_directori": 14, "with_cuda": [14, 2052], "is_python_modul": 14, "is_standalon": 14, "keep_intermedi": 14, "torch_extens": 14, "temporari": [14, 61, 822, 825, 1710, 2034, 2041, 2085, 2096], "torch_extensions_dir": 14, "subfold": [14, 2103], "o3": 14, "cuh": 14, "Such": [14, 22, 23, 49, 60, 1963, 2072, 2091], "lib64": 14, "cudart": [14, 2052], "fine": [14, 27, 29, 31, 34, 49, 485, 858, 861, 1156, 1281, 1677, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 2004, 2024, 2034, 2037, 2039, 2056, 2059, 2060, 2062, 2072, 2084, 2091, 2096, 2103], "cuda_hom": 14, "safest": 14, "pybind11": [14, 15, 2008], "linker": 14, "workspac": [14, 19, 972], "header": [14, 42, 2051, 2052, 2077, 2079], "automat": [14, 23, 27, 29, 44, 45, 49, 61, 85, 149, 588, 889, 891, 905, 906, 926, 972, 1041, 1050, 1228, 1275, 1281, 1367, 1566, 1677, 1710, 1838, 1867, 1958, 2004, 2005, 2008, 2009, 2019, 2020, 2025, 2026, 2034, 2035, 2037, 2039, 2046, 2048, 2056, 2059, 2060, 2062, 2063, 2067, 2075, 2077, 2078, 2090, 2093, 2094, 2096, 2101, 2103], "construct": [14, 15, 22, 27, 29, 31, 33, 44, 49, 50, 52, 54, 56, 57, 61, 63, 68, 69, 73, 74, 149, 447, 791, 792, 823, 878, 879, 893, 914, 983, 1092, 1108, 1174, 1228, 1265, 1277, 1281, 1282, 1289, 1296, 1336, 1337, 1352, 1367, 1461, 1462, 1519, 1580, 1581, 1582, 1616, 1699, 1709, 1711, 1712, 1750, 1757, 1809, 1813, 1860, 1895, 1902, 1903, 1904, 1905, 1906, 1907, 1921, 1935, 1938, 1969, 2005, 2006, 2013, 2017, 2021, 2037, 2038, 2042, 2046, 2048, 2051, 2054, 2059, 2062, 2067, 2069, 2075, 2077, 2078, 2079, 2085, 2091, 2094], "plain": [14, 1432, 1520, 1529, 1723, 1904, 2039, 2072, 2093], "standalon": [14, 43, 44, 45, 816, 1277, 1281, 2006, 2097], "torch_lib_path": 14, "load_inlin": [14, 2005], "cpp_sourc": 14, "cuda_sourc": 14, "with_pytorch_error_handl": 14, "use_pch": 14, "behav": [14, 15, 27, 49, 60, 61, 312, 320, 492, 514, 516, 841, 1173, 1183, 1194, 1281, 1515, 1516, 1517, 1704, 1705, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 2008, 2009, 2016, 2034, 2039, 2040, 2046, 2050, 2059, 2067, 2072], "exactli": [14, 23, 27, 33, 47, 49, 50, 919, 920, 966, 1017, 1021, 1105, 1151, 1152, 1187, 1262, 1265, 1307, 1462, 1465, 1466, 1467, 1519, 1548, 1551, 1617, 1627, 1709, 1764, 1772, 1863, 2016, 2017, 2025, 2034, 2037, 2038, 2039, 2042, 2043, 2044, 2056, 2059, 2060, 2088, 2091], "filenam": [14, 22, 29, 49, 61, 1157, 1264, 1273, 1276, 2004, 2007, 2020, 2034, 2059, 2074, 2077, 2096, 2105], "typic": [14, 22, 23, 27, 33, 34, 35, 37, 44, 45, 47, 50, 52, 61, 82, 87, 485, 994, 1005, 1148, 1156, 1189, 1195, 1265, 1286, 1289, 1337, 1452, 1478, 1519, 1699, 1709, 1776, 1777, 1789, 1863, 1875, 1902, 1903, 1904, 1906, 1907, 2004, 2005, 2006, 2009, 2015, 2017, 2034, 2036, 2037, 2049, 2050, 2051, 2056, 2058, 2060, 2062, 2067, 2076, 2087, 2089, 2090, 2093, 2101, 2103, 2105, 2107], "inlin": [14, 49, 60, 63, 65, 69, 73, 74, 1047, 1265, 1269, 1281, 2036, 2094], "concaten": [14, 22, 27, 910, 959, 970, 1019, 1104, 1231, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1462, 1489, 1609, 1617, 1714, 1729, 1913, 1971, 2007, 2010, 2056, 2057, 2072], "furthermor": [14, 42, 56, 1301, 1302, 1329, 1355, 1456, 2025, 2026, 2034, 2050, 2065, 2067], "cuda_runtim": 14, "se": 14, "macro": [14, 35, 2044], "pybind": 14, "_safe_foo": 14, "redirect": [14, 35, 42, 46, 2081], "obscur": 14, "sin_add": 14, "inline_extens": 14, "include_path": [14, 2005], "get_compiler_abi_compatibility_and_vers": [14, 2005], "abi": [14, 15], "alongsid": [14, 1265, 1519, 2039], "shell": 14, "torchvers": 14, "verify_ninja_avail": [14, 2005], "is_ninja_avail": [14, 2005], "embed": [15, 32, 50, 61, 734, 745, 898, 1096, 1423, 1452, 1462, 1478, 1491, 1525, 1569, 1617, 1677, 1790, 1858, 2007, 2036, 2042, 2057, 2061, 2062, 2064, 2067, 2072, 2077, 2098], "simpl": [15, 18, 23, 37, 44, 49, 56, 58, 61, 487, 994, 1061, 1164, 1172, 1173, 1174, 1265, 1269, 1277, 1433, 1434, 1435, 1461, 1492, 1493, 1494, 1519, 1559, 1616, 1875, 1969, 2004, 2006, 2010, 2027, 2036, 2037, 2038, 2039, 2041, 2043, 2045, 2056, 2059, 2067, 2072, 2091, 2092, 2093, 2096], "modif": [15, 52, 61, 80, 220, 779, 900, 901, 905, 1158, 1159, 1265, 1519, 1709, 2034, 2039, 2046, 2059, 2062, 2091, 2094], "submodul": [15, 29, 32, 49, 50, 52, 61, 79, 790, 796, 813, 837, 838, 839, 858, 861, 862, 1172, 1265, 1269, 1271, 1276, 1277, 1455, 1519, 1520, 1521, 1548, 1706, 2005, 2006, 2008, 2009, 2019, 2046, 2051, 2059, 2062, 2067, 2083, 2089, 2102], "preprocess": [15, 49, 78, 495, 1265], "augment": [15, 2010, 2079], "walk": [15, 61, 2013, 2039, 2059, 2068, 2069, 2076, 2103], "interfac": [15, 23, 29, 34, 35, 36, 41, 44, 62, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 744, 745, 755, 760, 761, 762, 763, 764, 793, 1159, 1699, 1862, 1916, 1957, 2009, 2013, 2021, 2022, 2023, 2039, 2045, 2058, 2061, 2065, 2072, 2077, 2098], "opencv": [15, 1625, 1636], "struct": [15, 1173, 1174, 1969, 2019, 2045], "explain": [15, 27, 49, 1790, 1863, 2004, 2009, 2033, 2037, 2040, 2042, 2048, 2072, 2091, 2094, 2103], "reshap": [15, 27, 33, 497, 498, 512, 543, 616, 691, 970, 1088, 1103, 1104, 1144, 1229, 1286, 1318, 1322, 1331, 1332, 1335, 1415, 1440, 1441, 1465, 1541, 1542, 1543, 1544, 1545, 1571, 1724, 1758, 1764, 1900, 1901, 1908, 1936, 1937, 1942, 1970, 1971, 2007, 2016, 2026, 2027, 2056, 2057, 2064, 2076, 2077, 2098], "classat_1_1_tensor": 15, "tensor_index": 15, "crucial": [15, 87, 2085, 2096, 2097], "cpp_autograd": 15, "workflow": [15, 2004, 2039, 2062, 2063, 2081, 2084, 2090, 2093, 2097, 2099, 2100], "undesir": [15, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1677, 1916, 2039], "overview": [15, 27, 41, 1579, 1709, 2005, 2016, 2024, 2034, 2043, 2046, 2055, 2060, 2062, 2067, 2084, 2086], "cpp_frontend": 15, "library_root": 15, "libtorch": [15, 2085], "linux": [15, 27, 2004], "gcc": 15, "pre": [15, 27, 31, 49, 52, 61, 914, 925, 1203, 1265, 1519, 1703, 1705, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 1792, 1798, 2004, 2006, 2009, 2019, 2034, 2036, 2037, 2046, 2054, 2056, 2060, 2078, 2093, 2094, 2099, 2103], "cxx11": 15, "facilit": [16, 28, 33, 57, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1008, 1093, 1716, 1717, 1860, 2004, 2006, 2009, 2050], "earli": [18, 23, 27, 35, 60, 485, 1457, 1458, 1459, 1463, 2005, 2062, 2063, 2082, 2083, 2093], "introduc": [18, 33, 49, 57, 759, 1181, 1191, 1193, 1194, 1204, 1338, 1470, 1489, 1535, 1636, 1846, 2004, 2009, 2035, 2038, 2039, 2047, 2056, 2059, 2060, 2061, 2067, 2072, 2078, 2084, 2091, 2094, 2099, 2101, 2103, 2109], "race": [18, 27, 485, 2034], "enable_cuda_sanit": 18, "torch_cuda_sanit": 18, "concurr": [18, 27, 31, 2036, 2037, 2042, 2048, 2067, 2068], "uniniti": [18, 26, 444, 498, 1106, 1107, 1699, 1711, 1712, 1757, 1957, 2017, 2027, 2057], "overwrit": [18, 22, 27, 61, 1520, 1529, 2009, 2034, 2088], "commandlin": 18, "example_error": 18, "csan": 18, "pointer": [18, 138, 926, 1022, 1536, 2013, 2037, 2038, 2045, 2067, 2069, 2093], "139719969079296": 18, "94646435460352": 18, "_sanit": 18, "364": 18, "_handle_kernel_launch": 18, "stack_trac": [18, 50, 61], "stacksummari": 18, "extract": [18, 61, 835, 964, 965, 1203, 1461, 1465, 1571, 1616, 1695, 2054, 2067, 2083, 2087, 2089, 2091, 2092, 2094, 2095], "10000": [18, 19, 23, 693, 1801, 1848, 2041, 2046, 2072, 2077, 2096], "420": 18, "_handle_memory_alloc": 18, "incorrectli": [18, 52, 1008, 1150, 2095], "id": [18, 19, 22, 27, 29, 31, 35, 42, 43, 44, 45, 52, 61, 773, 823, 935, 1005, 1040, 1559, 1652, 1692, 1709, 1771, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 2009, 2045, 2056, 2057, 2059, 2066, 2067, 2068, 2074, 2100, 2103], "faulti": [18, 27], "schema": [18, 27, 29, 50, 84, 2006, 2007, 2009, 2013, 2054, 2056, 2098, 2102], "current_stream": [18, 1007, 1974, 2005, 2037], "wait_stream": [18, 27, 485, 1008, 1010, 1975, 2037], "default_stream": [18, 27, 2005, 2037], "begin": [18, 22, 23, 27, 28, 36, 44, 52, 61, 495, 679, 759, 783, 819, 820, 865, 941, 977, 989, 1005, 1053, 1055, 1065, 1125, 1219, 1225, 1286, 1321, 1333, 1430, 1431, 1432, 1440, 1441, 1442, 1452, 1454, 1460, 1470, 1471, 1474, 1475, 1476, 1477, 1478, 1479, 1485, 1489, 1490, 1505, 1510, 1513, 1514, 1526, 1527, 1535, 1538, 1551, 1557, 1562, 1569, 1608, 1629, 1630, 1709, 1723, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1793, 1795, 1801, 1867, 1870, 1873, 1916, 1942, 1953, 1972, 2009, 2033, 2034, 2037, 2039, 2042, 2043, 2045, 2050, 2056, 2058, 2065, 2073, 2088, 2094, 2103], "suspect": [18, 1790, 2037, 2103], "pytorch_no_cuda_memory_cach": [19, 2037, 2044], "pytorch_cuda_alloc_conf": [19, 1030], "pytorch_nvml_based_cuda_check": [19, 2037], "nvml": [19, 2037], "fork": [19, 22, 42, 1284, 1709, 2009, 2036, 2037, 2041, 2045, 2048, 2052, 2066, 2067, 2069], "torch_cudnn_v8_api_lru_cache_limit": 19, "cudnn": [19, 20, 21, 759, 1275, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1470, 1489, 1535, 1536, 1578, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1677, 1716, 1717, 1863, 2005, 2007, 2037, 2049, 2050, 2097, 2106], "roughli": [19, 22, 1484, 2038, 2101, 2102], "2gib": 19, "200kib": 19, "executionplan": 19, "torch_cudnn_v8_api_dis": 19, "And": [19, 49, 56, 796, 823, 1084, 1085, 1162, 1188, 1265, 1287, 1363, 1368, 1438, 1519, 1958, 1960, 2034, 2039, 2040, 2042, 2052, 2056, 2062, 2083, 2089, 2091, 2095, 2096], "v7": 19, "torch_allow_tf32_cublas_overrid": 19, "set_float32_matmul_precis": [19, 1215], "torch_nccl_use_comm_nonblock": 19, "nccl": [19, 23, 28, 29, 45, 52, 1709, 2042, 2044], "torch_nccl_avoid_record_stream": 19, "stream": [19, 22, 27, 35, 42, 52, 60, 149, 485, 893, 914, 996, 998, 1003, 1005, 1007, 1008, 1011, 1012, 1013, 1021, 1024, 1025, 1039, 1045, 1078, 1081, 1378, 1381, 1382, 1387, 1392, 1394, 1395, 1401, 1403, 1841, 1974, 1976, 1978, 1999, 2001, 2005, 2007, 2009, 2042, 2054, 2067, 2094, 2105], "torch_cudnn_v8_api_debug": 19, "saniti": [19, 29, 2040], "cuda_visible_devic": [19, 27, 1074, 1709, 2037], "comma": [19, 27, 1105, 2009, 2015], "cuda_launch_block": [19, 21, 1489, 1535, 2037], "cublas_workspace_config": [19, 21, 1489, 1535, 1957, 2037, 2050], "4096": [19, 21, 1489, 1535, 1957, 2037, 2056], "16": [19, 21, 27, 32, 49, 320, 616, 737, 738, 739, 740, 741, 742, 771, 1103, 1121, 1148, 1219, 1229, 1265, 1277, 1289, 1295, 1301, 1302, 1306, 1322, 1415, 1427, 1429, 1430, 1438, 1439, 1442, 1445, 1446, 1447, 1448, 1450, 1451, 1456, 1457, 1458, 1459, 1463, 1466, 1467, 1486, 1487, 1488, 1489, 1507, 1512, 1513, 1514, 1516, 1517, 1519, 1526, 1535, 1546, 1563, 1577, 1600, 1602, 1603, 1605, 1609, 1620, 1621, 1767, 1816, 1863, 1892, 1957, 1966, 1970, 2006, 2010, 2032, 2037, 2046, 2049, 2051, 2056, 2057, 2060, 2067, 2072, 2073, 2075, 2077, 2078, 2085, 2091, 2092], "kib": [19, 2037], "cudnn_conv_wscap_dbg": 19, "cublaslt_workspace_s": 19, "cudnn_errata_json_fil": 19, "errata": 19, "config": [19, 23, 52, 61, 791, 792, 793, 794, 859, 861, 972, 2038, 2052, 2065, 2085, 2094, 2096, 2097, 2099, 2101, 2103], "primarili": [19, 33, 50, 60, 814, 815, 816, 822, 1181, 1415, 2021, 2062, 2078], "hardcod": [19, 2093], "autotun": [19, 972, 2097], "nvidia_tf32_overrid": 19, "float16": [20, 23, 29, 52, 296, 685, 688, 759, 822, 825, 833, 850, 851, 858, 940, 952, 1158, 1247, 1265, 1360, 1370, 1446, 1447, 1448, 1449, 1450, 1451, 1470, 1471, 1489, 1490, 1506, 1519, 1535, 1579, 1636, 1677, 1716, 1717, 1776, 1777, 1789, 1848, 1860, 1960, 2033, 2046, 2062, 2064, 2072, 2074, 2075, 2078, 2079, 2107], "v100": [20, 759, 1470, 1489, 1535, 2037], "packedsequ": [20, 759, 1470, 1489, 1535, 1751, 1752, 1753, 1755], "rnn": [21, 733, 759, 760, 761, 762, 764, 858, 1470, 1471, 1489, 1490, 1536, 1537, 1710, 1727, 1750, 2011, 2041, 2046, 2064, 2077], "enforc": [21, 23, 60, 794, 890, 905, 1265, 1489, 1519, 1535, 2009, 2046, 2076], "colon": [21, 1489, 1535, 2067], "heart": 22, "dataload": [22, 495, 1709, 1794, 1795, 1801, 2037, 2041, 2048, 2052, 2058, 2077], "batch_siz": [22, 33, 56, 58, 892, 905, 906, 1164, 1172, 1174, 1525, 1535, 1750, 1752, 1753, 1755, 1969, 2007, 2040, 2041, 2050, 2056, 2077], "shuffl": [22, 1439, 2005, 2077], "batch_sampl": 22, "num_work": [22, 35, 2050, 2052], "drop_last": 22, "timeout": [22, 27, 35, 44, 2018, 2024, 2067], "worker_init_fn": [22, 2041, 2050], "prefetch_factor": 22, "persistent_work": 22, "__getitem__": [22, 1957], "__len__": [22, 61, 2007], "protocol": [22, 29, 34, 44, 47, 880, 1156, 1159, 1851, 2039, 2052, 2054, 2056, 2067, 2104], "sampl": [22, 29, 33, 49, 53, 58, 61, 87, 152, 153, 257, 285, 376, 453, 480, 607, 778, 942, 994, 1016, 1050, 1063, 1068, 1082, 1083, 1123, 1141, 1164, 1174, 1219, 1262, 1282, 1355, 1405, 1427, 1431, 1432, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1472, 1478, 1481, 1482, 1483, 1484, 1485, 1504, 1506, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1538, 1551, 1552, 1559, 1568, 1590, 1597, 1598, 1608, 1610, 1611, 1612, 1613, 1616, 1617, 1618, 1622, 1625, 1627, 1635, 1636, 1637, 1661, 1669, 1709, 1724, 1765, 1794, 1809, 1812, 1826, 1828, 1830, 1832, 1833, 1834, 1875, 1898, 1914, 1915, 1916, 1964, 1965, 1969, 2005, 2013, 2021, 2032, 2033, 2037, 2045, 2046, 2059, 2061, 2062, 2063, 2077, 2103], "idx": [22, 61, 900, 902, 905, 1265, 1271, 1423, 1461, 1519, 1724, 1953, 2007, 2026], "th": [22, 33, 153, 285, 312, 314, 320, 759, 908, 910, 942, 962, 1092, 1097, 1240, 1262, 1287, 1305, 1313, 1319, 1355, 1405, 1457, 1458, 1459, 1463, 1470, 1478, 1489, 1535, 1611, 1612, 1613, 1618, 1820, 1916, 1955, 2039, 2052, 2073, 2075, 2105], "iterabledataset": [22, 2045], "__iter__": [22, 2010], "suitabl": [22, 33, 485, 956, 1285, 1790, 1855, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2049, 2063, 2077, 2095], "improb": 22, "fetch": [22, 60, 61, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1770, 2067], "databas": 22, "remot": [22, 27, 31, 35, 1709, 2060, 2067, 2068], "real": [22, 33, 61, 83, 685, 686, 687, 688, 689, 691, 697, 919, 940, 964, 965, 983, 990, 1050, 1121, 1122, 1124, 1126, 1127, 1128, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1181, 1197, 1255, 1257, 1258, 1261, 1262, 1286, 1295, 1296, 1297, 1301, 1302, 1303, 1304, 1305, 1308, 1309, 1310, 1315, 1318, 1320, 1322, 1323, 1324, 1325, 1329, 1330, 1334, 1335, 1336, 1346, 1352, 1485, 1528, 1531, 1532, 1569, 1723, 1779, 1832, 1916, 1920, 1966, 1967, 1968, 2004, 2005, 2007, 2009, 2017, 2034, 2037, 2054, 2057, 2059, 2062, 2067, 2069, 2076, 2078, 2079, 2089, 2090, 2091, 2093, 2096, 2098, 2104], "replica": [22, 23, 27, 31, 42, 1455, 1709, 2038], "duplic": [22, 42, 314, 318, 470, 543, 941, 950, 971, 1181, 1223, 1224, 1265, 1519, 1953, 1954, 2056, 2072], "yield": [22, 23, 49, 52, 61, 1093, 1095, 1265, 1312, 1313, 1519, 1972, 2009, 2010, 2016, 2060, 2062, 2073, 2094], "stochast": [22, 33, 1466, 1467, 1620, 1621, 1773, 1775, 1776, 1778, 1789, 1793, 1794, 2046, 2058], "decent": 22, "randomli": [22, 744, 745, 755, 763, 920, 1427, 1456, 1457, 1458, 1459, 1463, 1538, 1610, 1611, 1612, 1613, 1618, 1737, 2027, 2045, 2046], "permut": [22, 49, 63, 72, 1105, 1312, 1313, 1332, 1355, 1357, 1716, 1717, 1834, 2005, 2007, 2026, 2057, 2064, 2076, 2078, 2098], "mini": [22, 778, 784, 1433, 1434, 1435, 1461, 1462, 1473, 1478, 1481, 1482, 1483, 1491, 1511, 1522, 1524, 1534, 1559, 1568, 1616, 1617, 1636, 1696, 1708, 2060], "neither": [22, 27, 794, 899, 900, 903, 905, 1088, 1148, 1525, 1567, 1764, 1942, 2039, 2049, 2067], "nor": [22, 27, 35, 52, 794, 900, 903, 905, 1181, 1301, 1302, 1329, 1525, 1567, 1709, 1764, 1818, 1920, 2039, 2056, 2088, 2093], "notion": [22, 919, 1433, 1434, 1435, 1481, 1482, 1483, 1559, 2091, 2094], "collat": 22, "minibatch": [22, 767, 768, 771, 772, 773, 1355, 1423, 1431, 1432, 1452, 1454, 1478, 1484, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1572, 1592, 1593, 1594, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1637, 1650, 1651, 1652, 1661, 1669, 2060], "loader": [22, 2058], "essenti": [22, 27, 35, 61, 1355, 2026, 2037, 2052, 2072, 2085, 2088], "dummi": [22, 31, 2013, 2034, 2039, 2054, 2103, 2104], "infinit": [22, 1257, 1338, 1431, 1438, 1609, 1813, 2039, 2049, 2067, 2093], "drop": [22, 56, 58, 61, 1050, 1270, 1324, 1329, 1427, 1759, 1863, 1916, 2006, 2026, 2048, 2105], "dataset_it": 22, "pad": [22, 23, 49, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 734, 737, 738, 739, 740, 741, 742, 767, 768, 771, 772, 773, 778, 781, 782, 784, 972, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1262, 1428, 1429, 1430, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1461, 1462, 1465, 1495, 1496, 1497, 1498, 1499, 1500, 1512, 1513, 1514, 1515, 1516, 1517, 1522, 1525, 1541, 1542, 1543, 1544, 1545, 1546, 1566, 1567, 1571, 1575, 1576, 1577, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1616, 1617, 1619, 1625, 1636, 1650, 1651, 1652, 1653, 1654, 1655, 1695, 1696, 1751, 1753, 1754, 1756, 1824, 1825, 1916, 2005, 2007, 2027, 2041, 2051, 2056, 2057, 2062, 2077, 2090, 2098], "length": [22, 23, 27, 29, 32, 33, 259, 312, 314, 320, 350, 432, 433, 582, 583, 584, 734, 759, 813, 893, 914, 936, 971, 1021, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1159, 1174, 1240, 1262, 1281, 1285, 1414, 1415, 1433, 1438, 1446, 1455, 1462, 1465, 1470, 1486, 1489, 1525, 1535, 1563, 1571, 1580, 1600, 1601, 1602, 1609, 1617, 1636, 1677, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1826, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1900, 1902, 1903, 1904, 1906, 1907, 1916, 1942, 1969, 2007, 2009, 2016, 2026, 2027, 2035, 2041, 2071, 2072, 2079, 2090, 2091, 2094, 2098, 2103], "certain": [22, 23, 27, 41, 42, 49, 57, 60, 61, 83, 685, 688, 734, 915, 940, 952, 1029, 1093, 1262, 1265, 1273, 1337, 1360, 1370, 1446, 1447, 1448, 1449, 1450, 1451, 1471, 1490, 1506, 1519, 1525, 1571, 1626, 1637, 1639, 1763, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1982, 2009, 2013, 2016, 2026, 2034, 2035, 2037, 2039, 2045, 2046, 2049, 2051, 2056, 2060, 2061, 2067, 2068, 2072, 2093, 2094, 2097, 2103], "cheaper": [22, 60], "bulk": [22, 2093], "arrai": [22, 27, 35, 447, 759, 819, 820, 879, 880, 943, 961, 990, 994, 1105, 1149, 1158, 1159, 1167, 1168, 1337, 1367, 1465, 1470, 1471, 1489, 1490, 1619, 1841, 1848, 1867, 1902, 1903, 1904, 1906, 1907, 1932, 1935, 1942, 1950, 1963, 2006, 2010, 2037, 2046, 2051, 2072, 2074, 2078, 2079, 2094], "untouch": 22, "slightli": [22, 27, 33, 49, 52, 1764, 1809, 1921, 2004, 2037, 2039, 2042, 2043, 2049, 2059, 2094], "default_col": 22, "channel": [22, 55, 471, 472, 473, 778, 784, 807, 821, 824, 832, 845, 853, 1119, 1433, 1434, 1435, 1439, 1446, 1447, 1448, 1449, 1450, 1451, 1456, 1457, 1458, 1459, 1463, 1465, 1473, 1481, 1482, 1483, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1507, 1527, 1554, 1559, 1571, 1572, 1573, 1574, 1595, 1611, 1612, 1613, 1618, 1635, 1636, 1643, 1670, 1696, 1716, 1717, 1725, 1735, 1736, 1737, 1744, 1745, 1761, 1821, 2026, 2028, 2032, 2034, 2062, 2063, 2065, 2077], "class_index": 22, "namedtupl": [22, 29, 49, 50, 61, 894, 899, 1084, 1085, 1209, 1265, 1277, 1287, 1307, 1357, 1363, 1366, 1368, 1371, 1411, 1423, 1519, 1809, 1819, 1892, 1920, 1939, 1944, 2006, 2008, 2009, 2062], "situat": [22, 33, 47, 61, 84, 86, 485, 972, 990, 1729, 2017, 2024, 2039, 2040, 2048, 2049, 2059, 2062, 2069, 2090, 2093, 2094, 2104], "gil": [22, 27, 31, 2034, 2037, 2067], "integ": [22, 26, 27, 33, 44, 49, 50, 87, 288, 444, 446, 448, 498, 544, 559, 565, 684, 685, 686, 687, 688, 689, 765, 766, 784, 786, 865, 892, 905, 906, 940, 941, 950, 961, 989, 1008, 1010, 1026, 1032, 1033, 1061, 1100, 1103, 1105, 1106, 1107, 1108, 1148, 1149, 1150, 1151, 1152, 1153, 1159, 1160, 1164, 1165, 1166, 1167, 1168, 1181, 1191, 1198, 1199, 1207, 1223, 1224, 1227, 1228, 1229, 1276, 1279, 1288, 1289, 1296, 1307, 1309, 1319, 1338, 1396, 1404, 1423, 1438, 1446, 1447, 1448, 1491, 1534, 1584, 1585, 1586, 1587, 1588, 1589, 1698, 1708, 1750, 1765, 1768, 1797, 1800, 1804, 1809, 1821, 1822, 1828, 1830, 1831, 1832, 1834, 1839, 1848, 1860, 1908, 1917, 1921, 1936, 1937, 1950, 1955, 1970, 1975, 1979, 1983, 1984, 2002, 2008, 2009, 2010, 2025, 2040, 2043, 2060, 2062, 2063, 2065, 2072, 2073, 2075, 2078, 2079, 2081, 2090, 2091, 2107], "descriptor": [22, 27, 1568, 1569, 2010, 2056], "parent": [22, 37, 42, 47, 52, 679, 787, 788, 816, 1519, 2024, 2052, 2059, 2069, 2077, 2091], "simplest": [22, 29, 35, 61, 858, 1428, 1429, 1430, 1446, 1447, 1448, 1512, 1513, 1514, 1727, 2038, 2039, 2046, 2054, 2062, 2069, 2072, 2094], "refcount": [22, 2024, 2048], "panda": 22, "pyarrow": 22, "13246": 22, "enumer": [22, 33, 49, 61, 1265, 1519, 1521, 1530, 1794, 2007, 2008, 2033, 2037, 2052, 2077, 2102], "get_worker_info": [22, 2067], "seed": [22, 87, 1042, 1051, 1052, 1073, 1241, 1358, 1380, 1809, 1826, 1921, 1960, 1989, 1992, 1993, 1995, 2005, 2007, 2041, 2048, 2050, 2057, 2066], "naiv": [22, 2060, 2090, 2094], "shut": [22, 2067], "garbag": [22, 2069], "subtleti": [22, 63, 1455, 2039, 2041], "multiprocess": [22, 23, 27, 28, 30, 35, 37, 45, 46, 47, 1455, 1709, 2005, 2026, 2038, 2068, 2074], "unix": [22, 42, 2024], "child": [22, 27, 35, 37, 52, 790, 1265, 1519, 1736, 2024, 2046, 2052, 2069], "address": [22, 27, 44, 48, 57, 215, 919, 920, 1013, 2016, 2024, 2037, 2039, 2058, 2067, 2068, 2074, 2088, 2091, 2105], "maco": [22, 27, 2024, 2047], "spawn": [22, 23, 28, 35, 36, 42, 47, 1268, 1709, 2005, 2033, 2038, 2048, 2052, 2068], "__name__": [22, 23, 27, 36, 37, 45, 2038, 2039, 2048, 2052, 2059, 2068], "__main__": [22, 23, 27, 36, 37, 45, 2035, 2038, 2048, 2052, 2068], "bytecod": [22, 49, 679, 2015, 2053, 2054, 2059, 2089, 2091, 2092, 2094, 2103], "base_se": 22, "worker_id": [22, 47, 2050], "therebi": [22, 33, 2058, 2062], "mandatorili": 22, "faq": [22, 1455, 1753, 2005], "initial_se": [22, 87, 2005, 2007, 2050, 2057, 2066], "host": [22, 27, 35, 37, 43, 44, 45, 47, 195, 208, 579, 602, 877, 1265, 1519, 1709, 1729, 1763, 2037, 2060, 2067, 2068, 2074, 2088, 2093, 2105], "recogn": [22, 80, 2009, 2067, 2072, 2093], "simplecustombatch": 22, "transposed_data": 22, "zip": [22, 29, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 2004, 2007, 2008, 2020, 2037, 2045, 2072], "tgt": [22, 1563, 1564, 1565], "collate_wrapp": 22, "float32": [22, 23, 27, 49, 52, 266, 579, 616, 818, 819, 820, 821, 824, 825, 880, 983, 1119, 1120, 1158, 1212, 1215, 1247, 1419, 1432, 1439, 1572, 1573, 1574, 1592, 1776, 1777, 1789, 1813, 1818, 1826, 1830, 1845, 1860, 1861, 1863, 1905, 1967, 2027, 2033, 2037, 2049, 2054, 2056, 2064, 2072, 2073, 2074, 2075, 2078, 2079, 2091, 2092, 2094, 2103, 2107], "tensordataset": 22, "batch_ndx": 22, "is_pin": [22, 1750, 2007, 2025, 2057, 2074], "multiprocessing_context": 22, "pin_memory_devic": 22, "reshuffl": 22, "draw": [22, 33, 153, 285, 942, 1068, 1405, 1826, 2077, 2101], "mutual": [22, 27, 35, 734, 2079], "subprocess": [22, 27, 30, 42, 44, 47, 2041, 2048], "incomplet": [22, 908, 2011, 2073], "divis": [22, 582, 616, 686, 771, 772, 773, 966, 1100, 1150, 1153, 1276, 1309, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1473, 1485, 1510, 1528, 1600, 1601, 1602, 1603, 1604, 1605, 1607, 1662, 1839, 1908, 1936, 2009, 2033, 2037], "basecontext": 22, "randomsampl": 22, "prefetch": [22, 52], "unpickl": [22, 27, 1337, 2059], "practic": [22, 27, 32, 33, 50, 52, 485, 2005, 2006, 2016, 2024, 2026, 2034, 2039, 2042, 2043, 2046, 2051, 2059, 2067, 2074, 2084, 2091, 2093, 2094], "proper": [22, 35, 60, 61, 1096, 1858, 2008, 2034, 2037, 2039, 2048, 2052, 2074], "guess": [22, 1181], "trust": [22, 27, 1337, 2004, 2059], "inaccur": [22, 23, 1636], "kwd": 22, "__getitems__": 22, "speedup": [22, 23, 1525, 1567, 2084, 2088, 2100], "myiterabledataset": 22, "worker_info": 22, "iter_start": 22, "iter_end": 22, "per_work": 22, "ceil": [22, 176, 632, 633, 767, 768, 1428, 1429, 1430, 1486, 1487, 1488, 1512, 1513, 1514, 1592, 1593, 1594, 1650, 1651, 1652, 1824, 1825, 1848, 2007, 2025, 2037, 2057, 2072, 2098], "mult": 22, "12": [22, 23, 27, 52, 320, 516, 616, 685, 740, 741, 742, 744, 745, 935, 962, 966, 1103, 1121, 1229, 1269, 1285, 1302, 1324, 1423, 1439, 1450, 1465, 1466, 1467, 1516, 1531, 1532, 1554, 1563, 1571, 1579, 1620, 1621, 1662, 1667, 1668, 1724, 1758, 1808, 1819, 1867, 1882, 1892, 1936, 1952, 1955, 1970, 2004, 2006, 2007, 2010, 2016, 2037, 2039, 2042, 2047, 2051, 2056, 2057, 2072, 2079, 2091, 2092, 2100, 2101], "overall_start": 22, "overall_end": 22, "stackdataset": 22, "assembl": [22, 2092], "imagedataset": 22, "textdataset": 22, "tuple_stack": 22, "dict_stack": 22, "concatdataset": 22, "chaindataset": 22, "chain": [22, 23, 33, 60, 61, 149, 893, 962, 1321, 1462, 1548, 1791, 1804, 2009, 2034, 2037, 2039, 2043, 2046, 2058, 2091, 2102], "fly": [22, 1047, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 2034], "whole": [22, 27, 29, 1174, 1265, 1519, 1548, 1559, 1709, 1969, 2034, 2038, 2048, 2049, 2059, 2091, 2093, 2095, 2099, 2100], "_util": [22, 979, 2101], "collate_fn_map": 22, "registri": [22, 2005, 2051, 2054, 2056], "default_collate_fn_map": 22, "insert": [22, 27, 33, 52, 60, 61, 746, 791, 792, 861, 862, 939, 1520, 1521, 1529, 1709, 1855, 1858, 1867, 1888, 1913, 1956, 2006, 2019, 2037, 2054, 2057, 2062, 2101, 2102], "collate_tensor_fn": 22, "custom_col": 22, "collate_map": 22, "outer": [22, 690, 908, 1105, 1164, 1168, 1173, 1186, 1210, 2007, 2009, 2057], "unchang": [22, 498, 512, 514, 734, 813, 1144, 1265, 1519, 1563, 1840, 1911, 2033, 2049, 2062], "byte": [22, 27, 29, 33, 44, 241, 434, 557, 880, 1012, 1053, 1055, 1057, 1059, 1157, 1159, 1264, 1337, 1374, 1376, 1770, 1779, 1851, 2008, 2009, 2010, 2025, 2042, 2051, 2059, 2072, 2074, 2105], "k": [22, 27, 29, 33, 45, 61, 285, 353, 505, 512, 514, 516, 589, 616, 759, 939, 965, 1092, 1105, 1162, 1177, 1206, 1228, 1287, 1295, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1310, 1311, 1312, 1315, 1317, 1324, 1326, 1328, 1329, 1338, 1356, 1360, 1428, 1430, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1466, 1467, 1470, 1471, 1489, 1490, 1504, 1506, 1507, 1512, 1514, 1525, 1526, 1535, 1537, 1579, 1608, 1620, 1621, 1643, 1661, 1723, 1807, 1809, 1819, 1847, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1916, 1939, 1944, 2007, 2008, 2032, 2037, 2039, 2052, 2072, 2073, 2075, 2094, 2097, 2098, 2103], "v_i": [22, 1305], "v_1": 22, "v_2": 22, "v1_i": 22, "v2_i": 22, "v1_1": 22, "v1_2": 22, "v2_1": 22, "v2_2": 22, "elem": [22, 2007], "customtyp": 22, "collate_customtype_fn": 22, "default_convert": 22, "np": [22, 960, 1100, 1105, 1145, 1146, 1147, 1666, 1813, 2013, 2040, 2050, 2056, 2077, 2078, 2079, 2094], "fraction": [22, 33, 1075, 1148, 1154, 1385, 1449, 1450, 1451, 1466, 1467, 1525, 1567, 1620, 1621, 1734, 1735, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1820, 2032, 2094], "workerinfo": [22, 2067], "random_split": 22, "floor": [22, 270, 646, 647, 767, 768, 1100, 1150, 1276, 1428, 1429, 1430, 1486, 1487, 1488, 1512, 1513, 1514, 1592, 1593, 1594, 1650, 1651, 1652, 1824, 1825, 1839, 1848, 1916, 2007, 2009, 2025, 2048, 2051, 2057, 2072, 2098], "frac": [22, 33, 278, 376, 648, 649, 686, 759, 771, 772, 773, 865, 941, 950, 990, 994, 1100, 1150, 1219, 1223, 1224, 1285, 1297, 1301, 1302, 1305, 1317, 1329, 1336, 1352, 1423, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1456, 1465, 1470, 1471, 1472, 1473, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1504, 1506, 1507, 1508, 1509, 1512, 1513, 1514, 1522, 1523, 1524, 1526, 1534, 1535, 1537, 1538, 1550, 1552, 1553, 1555, 1556, 1558, 1559, 1560, 1571, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1645, 1662, 1664, 1666, 1677, 1679, 1683, 1685, 1687, 1688, 1708, 1774, 1775, 1778, 1780, 1786, 1793, 1794, 1823, 1832, 1835, 1838, 1850, 1870, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1899, 1914, 1915, 1916, 1920, 1942, 1964, 1965, 2007, 2025, 2032, 2034, 2043, 2057, 2072, 2073], "remaind": [22, 489, 1153, 1219, 2007, 2057, 2092, 2098], "robin": [22, 27], "generator1": 22, "manual_se": [22, 57, 87, 2005, 2007, 2025, 2046, 2048, 2050, 2056, 2057, 2066], "42": [22, 823, 950, 1404, 1874, 2037, 2046, 2092], "generator2": 22, "30": [22, 27, 33, 44, 444, 616, 719, 727, 728, 755, 763, 1219, 1288, 1436, 1438, 1445, 1506, 1571, 1577, 1600, 1609, 1699, 1797, 1799, 1805, 1822, 1932, 2017, 2039, 2042, 2056, 2058, 2067, 2071, 2091, 2092], "data_sourc": 22, "accedingsequencelengthsampl": 22, "argsort": [22, 1932, 2007, 2040, 2057], "tolist": [22, 351, 2009, 2057, 2074], "accedingsequencelengthbatchsampl": 22, "sequentialsampl": 22, "num_sampl": [22, 420, 1405, 2007], "drawn": [22, 172, 257, 285, 1405, 1765, 1826, 1830, 1831, 2032, 2079, 2081], "subsetrandomsampl": 22, "weightedrandomsampl": 22, "probabl": [22, 32, 52, 153, 257, 759, 942, 1187, 1227, 1343, 1405, 1423, 1427, 1431, 1438, 1454, 1456, 1457, 1458, 1459, 1463, 1470, 1472, 1489, 1525, 1526, 1535, 1597, 1608, 1609, 1610, 1611, 1612, 1613, 1618, 1627, 1637, 1661, 1677, 1819, 2024, 2039, 2052, 2056, 2073, 2077, 2090, 2093, 2094, 2095, 2099], "row": [22, 23, 27, 32, 33, 207, 312, 314, 320, 584, 587, 692, 698, 877, 908, 910, 960, 990, 994, 1088, 1118, 1146, 1147, 1168, 1174, 1228, 1287, 1313, 1321, 1324, 1329, 1353, 1355, 1363, 1365, 1366, 1368, 1371, 1405, 1411, 1412, 1413, 1616, 1617, 1666, 1723, 1763, 1817, 1820, 1840, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1919, 1939, 1942, 1946, 1948, 1963, 1969, 1971, 2007, 2043, 2072, 2077], "05": [22, 31, 61, 112, 343, 693, 711, 712, 713, 714, 715, 716, 722, 723, 735, 736, 748, 750, 751, 752, 753, 919, 920, 1119, 1254, 1281, 1282, 1352, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1559, 1563, 1565, 1567, 1595, 1626, 1635, 1639, 1709, 1792, 1798, 1799, 1805, 1876, 1877, 1882, 2006, 2007, 2058, 2068, 2079], "batchsampl": 22, "distributedsampl": [22, 1709], "num_replica": 22, "world_siz": [22, 23, 27, 28, 31, 35, 44, 45, 48, 52, 1709, 2038, 2060, 2067, 2068], "evenli": [22, 32, 582, 583, 584, 694, 695, 1103, 1229, 1336, 1352, 1970], "set_epoch": 22, "is_distribut": [22, 2007, 2057], "start_epoch": 22, "n_epoch": 22, "vanilla": [23, 50, 2016], "allreduc": [23, 27, 1709, 2037, 2038, 2057], "besid": [23, 27, 928, 2037, 2038, 2054, 2077, 2089], "register_comm_hook": [23, 31, 52, 1709], "mainli": [23, 33, 826, 1438, 1609, 2082], "bucket": [23, 31, 1194, 1423, 1709, 2007, 2038, 2057, 2094, 2103], "gradbucket": [23, 1709], "decompos": [23, 49, 61, 1155, 1163, 1310, 2034, 2039, 2056, 2098], "get_per_parameter_tensor": 23, "wise": [23, 27, 32, 33, 686, 687, 697, 757, 769, 770, 779, 783, 884, 988, 1105, 1110, 1151, 1152, 1207, 1208, 1222, 1231, 1288, 1290, 1347, 1348, 1349, 1350, 1354, 1364, 1367, 1369, 1416, 1437, 1451, 1458, 1460, 1474, 1475, 1476, 1477, 1479, 1505, 1508, 1518, 1527, 1538, 1539, 1540, 1547, 1549, 1550, 1551, 1556, 1557, 1558, 1560, 1561, 1599, 1614, 1623, 1624, 1628, 1629, 1630, 1631, 1634, 1638, 1640, 1645, 1656, 1657, 1670, 1671, 1672, 1678, 1679, 1680, 1681, 1685, 1687, 1688, 1689, 1900, 1971, 2036, 2039, 2072, 2073, 2076, 2100], "_distributed_c10d": [23, 27], "1d": [23, 33, 52, 701, 704, 737, 740, 771, 781, 971, 990, 994, 1088, 1102, 1227, 1228, 1242, 1262, 1321, 1322, 1367, 1412, 1420, 1424, 1428, 1438, 1446, 1449, 1454, 1457, 1458, 1462, 1486, 1511, 1512, 1524, 1526, 1572, 1584, 1587, 1590, 1592, 1600, 1603, 1611, 1617, 1646, 1650, 1820, 1821, 1824, 1916, 1932, 1942, 1966, 2042], "is_last": 23, "set_buff": 23, "stateless": [23, 57, 2028, 2046], "ddp_comm_hook": [23, 31], "default_hook": 23, "allreduce_hook": 23, "process_group": [23, 28, 29, 31, 52, 1559, 1709], "aggreg": [23, 27, 29, 37, 52, 1462, 1617, 1709, 1740, 2021, 2060, 2094, 2103], "henc": [23, 29, 31, 33, 35, 43, 44, 48, 52, 60, 285, 942, 1159, 1515, 1516, 1517, 1572, 1716, 1717, 1905, 2027, 2034, 2037, 2038, 2042, 2067, 2069, 2088], "unaffect": [23, 498, 499, 1472], "ddp_model": [23, 27, 29, 1709, 2038], "fp16_compress_hook": 23, "compress": [23, 52, 207, 586, 587, 1127, 1128, 1137, 1138, 1709, 1902, 1903, 1904, 1906, 1907, 1941, 2005, 2100], "decompress": [23, 2004, 2020], "bf16_compress_hook": 23, "brain": [23, 2075, 2078], "wrapper": [23, 27, 33, 46, 52, 60, 61, 63, 623, 756, 789, 823, 1002, 1005, 1007, 1008, 1010, 1078, 1151, 1152, 1172, 1265, 1378, 1401, 1455, 1974, 1975, 1999, 2006, 2008, 2009, 2021, 2024, 2037, 2038, 2056, 2060, 2088], "fp16_compress_wrapp": 23, "powersgdst": 23, "matrix_approximation_rank": 23, "start_powersgd_it": 23, "powersgd_hook": 23, "bf16_compress_wrapp": 23, "wikipedia": [23, 1663, 2034, 2043, 2107], "bfloat16_float": 23, "point_format": 23, "vogel": 23, "et": [23, 33, 52, 1438, 1531, 1532, 1568, 1569, 1789, 1883, 1921, 2032], "al": [23, 33, 52, 1438, 1531, 1532, 1568, 1569, 1789, 1883, 1921, 2032], "neurip": [23, 33], "2019": [23, 33, 1061], "bandwidth": [23, 27, 43, 45, 2037, 2062, 2067, 2096, 2097], "hyperparamet": [23, 52, 61, 2077], "1000": [23, 1120, 1125, 1151, 1152, 1423, 1461, 1569, 1821, 1848, 1867, 1935, 2034, 2051, 2056, 2077], "min_compression_r": 23, "use_error_feedback": 23, "warm_start": 23, "orthogonalization_epsilon": 23, "random_se": 23, "compression_stats_logging_frequ": 23, "batch_tensors_with_same_shap": 23, "tune": [23, 27, 31, 1061, 1302, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 2034, 2037, 2047, 2062, 2103], "stronger": [23, 49, 50, 63], "exponenti": [23, 257, 1115, 1317, 1343, 1344, 1345, 1353, 1437, 1460, 1614, 2005, 2009, 2057, 2058, 2073, 2081], "grid": [23, 1125, 1367, 1590, 1625, 2007, 2037, 2077, 2098], "satisfactori": 23, "nlp": [23, 1481, 1482, 1483, 1491, 2094], "appendix": [23, 2005], "hybrid": [23, 52, 217, 542, 582, 583, 584, 586, 587, 1230], "scheme": [23, 42, 44, 477, 801, 818, 819, 820, 821, 824, 826, 2046], "sensit": [23, 1479, 1551, 2056, 2059, 2068, 2093], "suboptim": [23, 2096], "trajectori": 23, "irrecover": 23, "warm": [23, 31, 1050, 1793, 1794, 2037, 2061, 2088, 2094, 2101], "num_row": 23, "num_col": 23, "1e": [23, 29, 33, 61, 112, 343, 693, 711, 712, 713, 714, 715, 716, 722, 723, 735, 736, 748, 750, 751, 752, 753, 754, 919, 920, 963, 964, 965, 1254, 1281, 1282, 1332, 1433, 1434, 1435, 1453, 1472, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1505, 1528, 1533, 1559, 1563, 1565, 1567, 1568, 1595, 1607, 1622, 1626, 1627, 1635, 1639, 1662, 1665, 1669, 1693, 1724, 1758, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1803, 1811, 1864, 2006, 2007, 2039, 2046, 2056, 2058, 2073, 2079], "orthogon": [23, 1302, 1305, 1324, 1329, 1338, 1807, 1819, 2032, 2034, 2046, 2072], "div": [23, 235, 1101, 1150, 1153, 1423, 1531, 1532, 1839, 1949, 2007, 2013, 2025, 2057, 2072, 2075, 2098, 2102], "epsilon": [23, 61, 818, 819, 820, 821, 824, 865, 1320, 1323, 1433, 1434, 1435, 1453, 1473, 1481, 1482, 1483, 1491, 1528, 1534, 1559, 1607, 1662, 1708, 1719, 1721, 1724, 1758, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1823, 2007, 2073], "bucket_cap_mb": [23, 1709, 2038], "footprint": [23, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 2054, 2072, 2100], "bottleneck": [23, 2005, 2046, 2096], "memor": 23, "compens": 23, "apex": 23, "uncompress": [23, 2051, 2072], "pq": 23, "mq": [23, 2062, 2083], "tp": [23, 27, 32], "awai": [23, 61, 975, 1625, 2005, 2026, 2034, 2040, 2090], "comm": [23, 27, 679, 2038], "handler": [23, 27, 37, 38, 46, 1736, 2021, 2039, 2045, 2059, 2104], "batched_powersgd_hook": 23, "destroi": [23, 44, 1181, 1455, 2034, 2061, 2067], "squar": [23, 33, 550, 738, 739, 740, 741, 778, 784, 793, 994, 1092, 1094, 1262, 1297, 1299, 1301, 1302, 1303, 1306, 1307, 1311, 1313, 1315, 1317, 1319, 1323, 1325, 1326, 1328, 1329, 1333, 1346, 1355, 1421, 1425, 1429, 1430, 1447, 1448, 1450, 1451, 1466, 1467, 1479, 1487, 1488, 1510, 1513, 1514, 1517, 1534, 1551, 1563, 1580, 1592, 1601, 1604, 1620, 1621, 1625, 1634, 1636, 1657, 1674, 1681, 1696, 1708, 1723, 1774, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1850, 1909, 1944, 1963, 2007, 2057, 2072], "truncat": [23, 1150, 1863, 1950, 2027, 2032, 2041, 2049], "impli": [23, 44, 52, 257, 1185, 2024, 2034, 2042, 2056, 2060, 2065, 2067, 2093], "debugging_hook": 23, "noop_hook": 23, "headroom": 23, "desynchron": [23, 27], "trainer": [23, 29, 35, 37, 42, 45, 47, 1709, 2067], "restart": [23, 35, 43, 45, 48, 1793, 1794, 2024, 2077, 2092], "__setstate__": 23, "__getstate__": 23, "reload": [23, 31, 52, 2004], "sy": [23, 36, 45, 48, 2004, 2037, 2051, 2059], "tempfil": 23, "mp": [23, 27, 28, 47, 1378, 1709, 2005, 2013, 2038, 2039, 2048, 2062, 2068, 2074, 2075, 2083], "simplemodel": 23, "24": [23, 27, 33, 945, 1324, 1507, 1590, 1757, 1819, 1863, 1937, 2006, 2032, 2036, 2073, 2091, 2092], "fc2": [23, 1699, 2054, 2060, 2085], "master_addr": [23, 27, 35, 45, 48, 2038, 2060, 2067, 2068], "localhost": [23, 27, 44, 45, 2038, 2060, 2067, 2068], "master_port": [23, 27, 35, 45, 48, 2038, 2060, 2067, 2068], "12355": 23, "init_process_group": [23, 27, 28, 31, 35, 45, 48, 1709, 2037, 2038, 2067], "cleanup": [23, 1181, 2074], "destroy_process_group": 23, "run_demo": 23, "demo_fn": 23, "nproc": [23, 27, 42, 43, 45, 2024, 2038, 2068], "demo_seri": 23, "gettempdir": 23, "device_id": [23, 27, 28, 31, 45, 52, 1337, 1455, 1559, 1692, 1709, 2038], "powersgd_st": 23, "lr": [23, 28, 29, 31, 52, 487, 1699, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 2037, 2038, 2046, 2048, 2058, 2068, 2077], "001": [23, 919, 920, 1275, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1802, 2038, 2056], "state_dict": [23, 29, 31, 49, 50, 52, 59, 835, 836, 1265, 1519, 1699, 1743, 1761, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 2004, 2020, 2038, 2046, 2048, 2051, 2054, 2056, 2062, 2082], "comm_hook": 23, "comm_hook_st": 23, "barrier": [23, 35, 44, 2057], "map_loc": [23, 1269, 1273, 1337, 1709, 2004, 2017, 2020, 2059], "new_ddp_model": 23, "load_state_dict": [23, 29, 31, 52, 59, 414, 1265, 1337, 1519, 1699, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805, 2004, 2005, 2046, 2051, 2062], "n_gpu": 23, "device_count": [23, 1960, 2005], "got": [23, 27, 891, 905, 906, 928, 1960, 2039, 2079], "thank": [23, 33, 2039, 2060], "author": [23, 44, 45, 52, 1174, 1786, 1826, 1969, 2033, 2085, 2092, 2094, 2096, 2099, 2100, 2101, 2103], "thij": 23, "par": 23, "torch_show_cpp_stacktrac": [24, 27], "torch_cpp_log_level": [24, 27], "c10": [24, 44, 2045, 2085, 2090], "glog": 24, "logger": [24, 27, 35, 2082, 2083], "info": [24, 27, 35, 38, 42, 679, 892, 905, 906, 1007, 1008, 1010, 1181, 1296, 1307, 1309, 1310, 1314, 1327, 1355, 1381, 1382, 1770, 2005, 2007, 2013, 2015, 2038, 2039, 2040, 2056, 2059, 2090, 2092, 2093, 2103], "fatal": [24, 49, 2024, 2048], "torch_log": [24, 78, 80, 679, 972, 2015, 2038, 2090, 2091, 2092, 2094, 2103], "_log": [24, 2005, 2009, 2103, 2106], "home": [25, 2037], "fill_uninitialized_memori": [26, 498, 1106, 1107, 1108, 1957, 2005, 2050], "fill": [26, 27, 153, 172, 257, 258, 259, 285, 316, 320, 376, 399, 444, 445, 446, 448, 453, 480, 512, 607, 622, 943, 1093, 1106, 1107, 1108, 1160, 1161, 1296, 1307, 1309, 1462, 1563, 1617, 1664, 1768, 1769, 1828, 1829, 1830, 1831, 1832, 1833, 1920, 1957, 2002, 2003, 2007, 2017, 2026, 2027, 2032, 2037, 2039, 2051, 2057, 2072, 2079, 2093, 2098], "detriment": [26, 2050], "resize_": [26, 499, 1163, 1287, 1957, 2006, 2007, 2008, 2025, 2050, 2064, 2074, 2098], "empty_strid": [26, 2007, 2011, 2057, 2090, 2098], "empty_permut": [26, 2007, 2057, 2098], "empty_lik": [26, 29, 2007, 2011, 2013, 2017, 2025, 2027, 2057, 2072], "brief": [27, 1709, 2024, 2067], "introduct": [27, 33, 1039, 1709, 2005, 2006, 2010, 2025, 2035, 2046, 2056, 2067, 2072, 2077], "mpi": [27, 1709], "gloo": [27, 45, 1709, 2038, 2044, 2067], "recv": [27, 1709, 2057, 2068], "broadcast": [27, 29, 31, 32, 33, 52, 57, 96, 195, 397, 399, 400, 401, 512, 514, 516, 565, 684, 685, 686, 687, 688, 689, 690, 696, 734, 884, 940, 945, 948, 952, 953, 954, 955, 989, 1018, 1047, 1099, 1100, 1105, 1110, 1150, 1151, 1152, 1153, 1206, 1208, 1222, 1232, 1290, 1291, 1298, 1311, 1315, 1320, 1321, 1323, 1326, 1334, 1354, 1359, 1360, 1370, 1404, 1407, 1416, 1419, 1432, 1453, 1472, 1525, 1598, 1607, 1670, 1677, 1709, 1772, 1808, 1816, 1839, 1841, 1917, 1921, 1937, 1942, 1972, 2005, 2009, 2025, 2026, 2027, 2038, 2056, 2057, 2073, 2094, 2098], "all_reduc": [27, 47, 1709, 2057], "all_gath": 27, "scatter": [27, 31, 52, 512, 514, 516, 1455, 1957, 2007, 2041, 2042, 2057, 2067, 2098], "reduce_scatt": [27, 2057], "all_to_al": 27, "v1": [27, 52, 1334, 1808, 2004, 2038, 2067], "init_method": [27, 1709, 2067], "adher": [27, 2009, 2072], "some_fil": 27, "machine_nam": 27, "share_folder_nam": 27, "tcpstore": [27, 44], "past": [27, 49, 61, 1016, 1063, 1068, 1082, 1083, 1709, 2041, 2096, 2097, 2100], "ask": [27, 56, 57, 2004, 2005, 2040, 2043, 2084, 2091, 2105], "infiniband": [27, 1709, 2067], "interconnect": 27, "gpudirect": 27, "ethernet": 27, "ip": [27, 44], "ib": 27, "upcom": [27, 2033], "nccl_socket_ifnam": 27, "eth0": 27, "gloo_socket_ifnam": 27, "eth1": 27, "eth2": 27, "eth3": 27, "imper": 27, "nccl_debug": 27, "nccl_debug_subsi": 27, "coll": 27, "hang": [27, 28, 31, 33, 1709, 2018, 2038], "topologi": [27, 29, 32, 35], "effort": [27, 49, 2067, 2091, 2097], "socket": [27, 2024, 2067], "nccl_socket_nthread": 27, "nccl_nsocks_perthread": 27, "cloud": [27, 2072, 2077], "aw": [27, 36, 994], "gcp": [27, 2100], "primit": [27, 31, 44, 1337, 2006, 2008, 2010, 2036, 2047, 2056, 2067, 2098], "kind": [27, 38, 49, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 679, 1179, 1285, 1710, 1771, 1818, 1882, 2004, 2013, 2039, 2048, 2050, 2054, 2056, 2059, 2062, 2073, 2075], "connect": [27, 35, 44, 1446, 1447, 1448, 1449, 1450, 1451, 1495, 1496, 1497, 1498, 1499, 1500, 1548, 2024, 2067, 2101], "advantag": [27, 44, 45, 1432, 1479, 2038, 2041, 2053, 2054, 2067, 2072, 2088], "redund": [27, 52, 1121, 1122, 1124, 1126, 1140, 1142, 1916], "averag": [27, 31, 734, 765, 766, 767, 768, 820, 821, 932, 934, 994, 1068, 1082, 1265, 1420, 1421, 1422, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1452, 1454, 1462, 1472, 1478, 1484, 1485, 1486, 1487, 1488, 1492, 1493, 1494, 1510, 1511, 1519, 1522, 1523, 1524, 1525, 1526, 1533, 1551, 1552, 1559, 1568, 1584, 1585, 1586, 1592, 1593, 1594, 1597, 1598, 1608, 1622, 1637, 1646, 1647, 1648, 1661, 1669, 1709, 1773, 1774, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1942, 2005, 2038, 2061], "elimin": [27, 49, 61, 609, 1177, 1953, 1954, 2050, 2096, 2102], "thrash": 27, "recurr": [27, 759, 760, 1281, 1438, 1455, 1470, 1471, 1489, 1535, 1727, 1753, 1787, 2005, 2037], "device_mesh": [27, 32, 52, 1709], "init_device_mesh": [27, 32], "use_distribut": 27, "group_nam": [27, 41], "pg_option": 27, "url": [27, 44, 931, 2004, 2020, 2067], "discov": [27, 972, 2067], "encod": [27, 35, 41, 44, 61, 1313, 1337, 1381, 1382, 1431, 1432, 1563, 1564, 1565, 1566, 1567, 1709, 1863, 1902, 1903, 1904, 1906, 1907, 2006, 2009, 2010, 2039, 2051, 2059, 2068, 2072], "ucc": 27, "lowercas": 27, "deadlock": [27, 1709], "job": [27, 35, 37, 38, 40, 41, 43, 44, 45, 47, 1403, 1709, 1795, 1801, 2037, 2045, 2061, 2077, 2091, 2105], "exchang": [27, 44, 1008, 1093, 2037, 2053], "timedelta": [27, 44, 2021], "abort": [27, 2037], "crash": [27, 37, 44, 1302, 2024, 2034, 2067, 2069, 2077, 2090], "corrupt": [27, 44, 1455, 2037, 2048], "torch_nccl_blocking_wait": 27, "processgroupopt": 27, "processgroupnccl": [27, 2038], "is_high_priority_stream": 27, "ncclcomminit": 27, "lazi": [27, 987, 1278, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1699, 1988, 2005, 2090], "ncclcommsplit": 27, "unnecessari": [27, 31, 1716, 1717, 1757, 2009, 2034, 2037, 2039, 2051, 2059, 2076], "backend_nam": [27, 1960], "custom_backend": 27, "mesh_shap": 27, "mesh_dim_nam": 27, "dimension": [27, 33, 50, 512, 514, 880, 886, 887, 888, 951, 958, 970, 1093, 1095, 1096, 1105, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1139, 1140, 1142, 1144, 1146, 1147, 1159, 1219, 1228, 1229, 1230, 1298, 1303, 1304, 1305, 1306, 1331, 1336, 1352, 1360, 1367, 1423, 1440, 1441, 1442, 1443, 1444, 1445, 1454, 1455, 1461, 1462, 1491, 1509, 1526, 1534, 1541, 1542, 1543, 1544, 1545, 1546, 1553, 1555, 1559, 1575, 1576, 1577, 1608, 1661, 1664, 1697, 1698, 1708, 1723, 1763, 1826, 1902, 1903, 1904, 1905, 1906, 1907, 1916, 1932, 1935, 1936, 1942, 2009, 2027, 2032, 2035, 2043, 2049, 2072, 2074, 2075, 2078, 2081, 2090], "layout": [27, 32, 50, 61, 149, 190, 207, 232, 341, 342, 434, 444, 445, 446, 447, 448, 457, 543, 580, 581, 582, 583, 584, 586, 587, 616, 688, 865, 893, 898, 941, 950, 1020, 1106, 1107, 1108, 1118, 1123, 1141, 1157, 1160, 1161, 1223, 1224, 1285, 1336, 1352, 1360, 1370, 1415, 1642, 1768, 1769, 1790, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1941, 1946, 1948, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2011, 2027, 2037, 2057, 2059, 2072, 2077, 2078, 2079, 2098], "spmd": [27, 29], "nd": [27, 1321, 2042, 2049], "inconsist": [27, 52, 865, 1835, 2039], "scene": [27, 2051, 2077], "mesh": [27, 32, 2077], "mesh_1d": 27, "mesh_2d": 27, "dp": 27, "is_initi": [27, 2005], "is_mpi_avail": 27, "is_nccl_avail": 27, "is_gloo_avail": 27, "is_torchelastic_launch": 27, "elast": [27, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 2005], "torchelast": [27, 30, 35, 36, 37, 38, 41, 43, 44, 45, 47, 48], "torchelastic_run_id": [27, 45], "proxi": [27, 29, 2062, 2067, 2091], "rendezv": [27, 30, 35, 41, 43, 48, 2038, 2067], "null": [27, 36, 38, 41, 63, 67], "discoveri": [27, 44, 2037, 2059], "reachabl": 27, "multicast": 27, "20": [27, 31, 33, 320, 684, 719, 727, 728, 733, 737, 738, 739, 740, 741, 742, 745, 755, 759, 760, 761, 762, 763, 764, 771, 1087, 1219, 1263, 1266, 1277, 1288, 1322, 1404, 1427, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1438, 1445, 1446, 1447, 1448, 1450, 1451, 1456, 1457, 1458, 1459, 1463, 1466, 1467, 1470, 1471, 1473, 1480, 1481, 1482, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1506, 1512, 1513, 1514, 1516, 1517, 1519, 1535, 1537, 1548, 1556, 1559, 1562, 1563, 1564, 1565, 1577, 1600, 1602, 1603, 1605, 1609, 1620, 1621, 1627, 1685, 1723, 1724, 1725, 1749, 1758, 1761, 1779, 1794, 1822, 1932, 2006, 2007, 2017, 2027, 2038, 2039, 2049, 2054, 2057, 2058, 2067, 2071, 2072, 2091, 2092, 2093], "23456": 27, "clean": [27, 35, 49, 61, 982, 1043, 2004, 2024, 2059], "fcntl": 27, "nf": 27, "init": [27, 32, 35, 37, 52, 1265, 1519, 1527, 1547, 1757, 2005, 2011, 2034, 2039, 2045, 2046, 2090], "brand": [27, 29, 2039], "succe": [27, 44, 49, 57, 2037, 2039, 2052, 2103, 2105], "unexpect": [27, 29, 34, 61, 1004, 1156, 1159, 1162, 1265, 1519, 1759, 1772, 1911, 2006, 2034, 2039, 2049, 2091, 2093, 2094], "unsuccess": 27, "mnt": 27, "sharedfil": 27, "port": [27, 35, 43, 44, 45, 2017, 2044], "enum": [27, 42, 63, 795, 1578, 1579, 1580, 2039, 2056, 2061, 2062, 2067], "backend_str": 27, "uppercas": 27, "classmethod": [27, 29, 44, 63, 65, 731, 737, 738, 739, 744, 745, 755, 763, 791, 792, 793, 814, 815, 816, 823, 854, 928, 1007, 1461, 1462, 1559, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1770, 2009, 2010, 2039, 2062, 2067, 2074, 2104], "register_backend": [27, 2067, 2089], "extended_api": 27, "instanti": [27, 31, 43, 44, 45, 52, 61, 841, 1462, 1617, 1726, 1750, 1757, 2004, 2006, 2008, 2009, 2037, 2039, 2046, 2054, 2074], "3rd": [27, 33, 44, 616, 2035], "processgroup": [27, 29, 31, 52, 1709], "four": [27, 1311, 1447, 2039, 2043, 2067, 2069], "c10d": [27, 35, 43, 45, 48, 679, 1709, 2038, 2057], "distributedbackendopt": 27, "get_backend": [27, 44], "get_rank": [27, 52, 1559], "consecut": [27, 52, 609, 1752, 1791, 1942, 1953, 1954, 2026, 2056], "get_world_s": 27, "filestor": [27, 44], "hashstor": 27, "client": [27, 31, 44, 1061, 1180, 1185, 2059, 2094], "host_nam": 27, "hostnam": [27, 35, 44, 2061], "listen": 27, "is_mast": 27, "300": [27, 35, 1343, 1432, 1754, 1756, 2058], "wait_for_work": 27, "multi_ten": 27, "underli": [27, 29, 31, 33, 35, 49, 52, 57, 61, 96, 310, 325, 376, 399, 401, 472, 473, 474, 475, 482, 498, 519, 523, 556, 557, 558, 612, 747, 756, 878, 1007, 1157, 1181, 1197, 1198, 1199, 1236, 1240, 1265, 1337, 1414, 1669, 1837, 1941, 1956, 1974, 2006, 2009, 2027, 2037, 2041, 2044, 2060, 2067, 2074, 2076, 2084, 2093], "tcpserver": 27, "master_listen_fd": 27, "datetim": [27, 2021, 2094], "server_stor": 27, "127": [27, 793, 2026, 2062, 2077], "1234": [27, 44, 1242, 1955], "client_stor": 27, "first_kei": 27, "first_valu": 27, "hashmap": 27, "file_nam": [27, 2004, 2020, 2059], "store1": 27, "store2": 27, "prefixstor": 27, "old": [27, 34, 49, 61, 485, 854, 1156, 1189, 1203, 1458, 1761, 1769, 1803, 1851, 2003, 2005, 2006, 2034, 2037, 2039, 2052, 2062, 2077, 2093], "throw": [27, 28, 60, 61, 189, 322, 327, 544, 613, 1250, 1265, 1306, 1355, 1519, 1709, 1711, 1712, 1753, 1764, 1815, 1957, 2027, 2034, 2050, 2067, 2078, 2091, 2094, 2103], "whose": [27, 33, 52, 61, 543, 859, 898, 962, 989, 1093, 1105, 1110, 1159, 1208, 1219, 1222, 1228, 1265, 1271, 1282, 1290, 1336, 1352, 1354, 1416, 1519, 1709, 1765, 1813, 1870, 1938, 2009, 2034, 2039, 2042, 2043, 2059, 2072, 2077, 2079, 2090, 2103], "quantiti": [27, 53, 58, 1189, 1191, 1194, 1301, 1302, 1329, 1484, 1734, 1735, 1737, 1738, 1740, 1743, 1744, 1745, 1746, 1803, 2013, 2040, 2043], "compare_set": 27, "arg2": [27, 50], "expected_valu": 27, "desired_valu": 27, "second_valu": 27, "overload": [27, 49, 61, 616, 2008, 2009, 2013, 2054], "bad_kei": 27, "num_kei": 27, "written": [27, 29, 35, 37, 42, 57, 931, 1063, 1157, 1455, 1789, 2006, 2008, 2016, 2019, 2034, 2038, 2039, 2040, 2046, 2051, 2054, 2056, 2059, 2061, 2074, 2077, 2084, 2090, 2091, 2092, 2096, 2097, 2102, 2103], "destruct": [27, 2021, 2067, 2069], "delete_kei": 27, "successfulli": [27, 35, 41, 49, 1272, 1864, 2024, 2046, 2051, 2067, 2103], "set_timeout": 27, "grain": [27, 49, 858, 861, 1677, 2034, 2056, 2072, 2084, 2096, 2103], "plai": [27, 2092, 2094], "new_group": [27, 52, 1559], "opaqu": [27, 34, 1005, 1039, 1040, 1156, 2099], "pattern": [27, 29, 791, 792, 793, 795, 854, 861, 1047, 1194, 1455, 1579, 1753, 1898, 2006, 2009, 2034, 2037, 2039, 2041, 2044, 2051, 2063, 2064, 2072, 2088, 2090, 2091, 2093, 2102, 2105], "use_local_synchron": 27, "group_desc": 27, "enqueu": [27, 60, 1008, 1010, 1011, 1392, 1976, 2037, 2068], "significantli": [27, 49, 52, 909, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1863, 2072, 2089], "taken": [27, 33, 49, 60, 61, 63, 68, 865, 1126, 1128, 1151, 1152, 1438, 1454, 1462, 1526, 1534, 1609, 1617, 1708, 1867, 1900, 2032, 2034, 2036, 2037, 2039, 2041, 2042, 2045, 2051, 2056, 2059, 2061, 2103, 2105], "get_group_rank": 27, "global_rank": [27, 35], "translat": [27, 1219, 2034, 2053, 2054, 2069], "get_global_rank": 27, "group_rank": [27, 35, 45], "get_process_group_rank": 27, "inter": [27, 35, 37, 52, 1216, 1865, 2036, 2038, 2060, 2067], "intra": [27, 31, 52, 2036, 2038, 2060], "_init_backend": 27, "ndarrai": [27, 34, 457, 879, 1156, 1158, 1902, 1903, 1904, 1905, 1906, 1907, 1935, 2056, 2077, 2079, 2094], "dst": [27, 2004, 2059], "destin": [27, 29, 38, 41, 42, 52, 208, 415, 416, 602, 1019, 1020, 1206, 1265, 1372, 1373, 1519, 2007, 2054, 2067, 2068, 2074], "unspecifi": [27, 480, 819, 820, 821, 824, 919, 920, 1181, 1553, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1899, 1905, 2016, 2072, 2077, 2085], "sender": [27, 2069], "isend": 27, "irecv": 27, "is_complet": 27, "finish": [27, 29, 35, 41, 42, 44, 47, 60, 485, 1163, 2037, 2038, 2052, 2061, 2067, 2069, 2105], "batch_isend_irecv": 27, "p2p_op_list": 27, "p2pop": 27, "op_list": 27, "send_tensor": 27, "recv_tensor": 27, "send_op": 27, "recv_op": 27, "req": 27, "pg": [27, 1709], "set_devic": [27, 29, 52, 1709, 1859, 2005, 2067, 2075], "p2p": [27, 44], "async_op": 27, "onto": [27, 52, 61, 63, 65, 1067, 1273, 1276, 1337, 1729, 1958, 2004, 2013, 2017, 2024, 2037, 2040, 2041, 2046, 2061, 2102, 2105], "get_futur": [27, 1709], "regard": [27, 1449, 1450, 1451, 1461, 1462, 1616, 1617, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 2006, 2069, 2072, 2097], "101": [27, 928, 1423], "overwrot": 27, "sent": [27, 29, 1043, 2009, 2024, 2048, 2067, 2068, 2069], "broadcast_object_list": 27, "object_list": 27, "picklabl": [27, 1265, 1519, 2059], "current_devic": [27, 29, 52, 1016, 1024, 1025, 1032, 1033, 1049, 1053, 1055, 1056, 1057, 1059, 1061, 1062, 1063, 1068, 1069, 1070, 1071, 1081, 1082, 1083, 1394, 1395, 1960, 1978, 1983, 1984, 2001, 2005, 2075, 2092], "insecur": [27, 1337], "malici": [27, 1337, 2059], "ineffici": [27, 52, 2037, 2062], "redoptyp": 27, "bitwis": [27, 944, 946, 947, 949, 2010, 2049, 2063, 2081], "reduceop": 27, "int64": [27, 83, 190, 207, 312, 320, 392, 865, 943, 956, 1106, 1119, 1120, 1158, 1608, 1750, 1830, 1834, 1835, 1855, 1902, 1903, 1904, 1906, 1907, 2013, 2037, 2072, 2074, 2075, 2078, 2107], "1j": [27, 697, 987, 988, 1261, 1843, 1844, 1966, 2034, 2043, 2051], "2j": [27, 697, 987, 988, 1843, 1844, 1870, 1966, 2034], "tensor_list": [27, 2027], "all_gather_into_tensor": [27, 2057], "output_tensor": 27, "input_tensor": [27, 2096], "accommod": [27, 1515, 1516, 1517], "ii": [27, 990, 1105, 1489, 1490], "tensor_in": 27, "tensor_out": 27, "tensor_out2": 27, "all_gather_object": 27, "obj": [27, 61, 880, 1028, 1251, 1252, 1271, 1272, 1277, 1851, 1961, 1981, 2007, 2051, 2052, 2059], "pickabl": 27, "popul": [27, 33, 42, 52, 60, 61, 334, 494, 502, 503, 1366, 1411, 2037, 2039, 2093, 2102], "unmodifi": [27, 2092], "responsibl": 27, "gather_object": 27, "gather_list": 27, "object_gather_list": 27, "scatter_list": 27, "tensor_s": 27, "t_one": 27, "t_five": 27, "scatter_object_list": 27, "scatter_object_output_list": 27, "scatter_object_input_list": 27, "output_list": 27, "input_list": 27, "reduce_scatter_tensor": [27, 2057], "all_to_all_singl": [27, 2057], "output_split_s": 27, "input_split_s": 27, "13": [27, 875, 935, 966, 1087, 1103, 1106, 1150, 1219, 1229, 1269, 1355, 1439, 1466, 1467, 1516, 1554, 1620, 1621, 1892, 1936, 1970, 2006, 2010, 2057, 2072, 2097, 2103], "14": [27, 63, 71, 72, 320, 516, 965, 1047, 1048, 1088, 1103, 1229, 1318, 1324, 1409, 1439, 1516, 1819, 1826, 1863, 1892, 1936, 1937, 1942, 1970, 2006, 2010, 2013, 2042, 2057, 2072, 2076, 2077, 2091, 2092], "15": [27, 61, 616, 1087, 1103, 1207, 1219, 1229, 1288, 1302, 1439, 1516, 1517, 1754, 1756, 1811, 1883, 1892, 1940, 1970, 2006, 2007, 2010, 2056, 2072, 2092], "uneven": [27, 28, 31, 32, 1709], "18": [27, 320, 444, 684, 1106, 1219, 1262, 1338, 1516, 2006, 2013, 2054, 2056, 2057, 2072, 2085, 2091, 2092], "21": [27, 33, 684, 935, 962, 1088, 1324, 1819, 1942, 2006, 2072], "22": [27, 33, 320, 616, 1338, 1699, 1754, 1756, 2006, 2050, 2072, 2091, 2092], "23": [27, 512, 1087, 1338, 1863, 1878, 2006, 2072, 2103], "31": [27, 948, 1430, 1488, 1514, 1699, 1878, 2056], "33": [27, 737, 738, 739, 740, 741, 742, 771, 1087, 1265, 1446, 1447, 1448, 1450, 1451, 1517, 1519, 1600, 1602, 1603, 1605, 2006, 2056], "34": [27, 1955, 2092, 2103], "35": [27, 1324, 1434, 1435, 1482, 1483, 1559, 1819], "36": [27, 320, 1148, 1219, 2092], "input_split": 27, "output_split": 27, "5j": 27, "6j": 27, "7j": 27, "8j": 27, "9j": 27, "10j": 27, "11j": 27, "12j": 27, "13j": 27, "14j": 27, "15j": 27, "16j": 27, "output_tensor_list": 27, "input_tensor_list": 27, "monitored_barri": [27, 2057], "wait_all_rank": 27, "pend": [27, 977, 2037, 2067, 2077, 2088], "band": 27, "bor": 27, "bxor": 27, "premul_sum": 27, "suppos": [27, 61, 1203, 1262, 1804, 2016, 2042, 2072, 2093, 2094, 2095], "_make_nccl_premul_sum": 27, "__members__": 27, "reduce_op": 27, "mention": [27, 1178, 2004, 2008, 2009, 2026, 2034, 2037, 2046, 2056, 2072, 2076, 2084, 2097, 2103], "stand": [27, 1169, 1173, 2008, 2059, 2069], "exemplifi": 27, "cpp_extens": [27, 2005, 2039], "cpp_c10d_extens": 27, "torchrun": [27, 30, 36, 43, 48], "benefici": [27, 87, 1716, 1717, 2046], "nproc_per_nod": [27, 36], "num_gpus_you_hav": 27, "your_training_script": [27, 43, 45], "arg3": [27, 50], "192": [27, 616, 2056], "168": 27, "nnode": [27, 43, 45], "local_process_rank": 27, "local_rank": [27, 35, 37, 42, 45, 48, 1559], "argpars": [27, 45, 2037], "parser": [27, 45, 2037], "argumentpars": [27, 45, 2037], "add_argu": [27, 45, 2037], "parse_arg": [27, 36, 45, 48, 2037, 2056], "launcher": [27, 45], "onward": [27, 45, 1803, 2073], "dash": [27, 45, 2067, 2069], "previous": [27, 44, 45, 49, 53, 56, 57, 58, 61, 697, 791, 792, 928, 1174, 1194, 1203, 1273, 1914, 1915, 1964, 1965, 1969, 2006, 2035, 2037, 2046, 2059, 2060, 2066, 2067, 2073, 2085, 2091, 2099, 2105], "underscor": [27, 45, 2004, 2026, 2067, 2078], "unrecogn": [27, 45, 2009], "output_devic": [27, 31, 45, 1455, 1559, 1692, 1709], "adjust": [27, 29, 31, 32, 33, 52, 1432, 1803, 1875, 2005, 2036, 2063, 2085, 2105, 2106], "filesystem": [27, 29, 2004, 2059], "12042": 27, "wrong": [27, 61, 83, 900, 901, 905, 977, 1263, 1266, 2038, 2048, 2052, 2056, 2058, 2088, 2091, 2092], "imagenet": [27, 2032], "suit": [27, 2006, 2008, 2009, 2056, 2063, 2067, 2100], "pdb": [27, 1270, 1277, 1283, 2006, 2008], "streamlin": [27, 50, 80], "attach": [27, 50, 55, 60, 61, 138, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 792, 837, 839, 864, 1699, 2004, 2006, 2008, 2025, 2034, 2039, 2062, 2068, 2082, 2090], "rerout": 27, "termin": [27, 35, 44, 47, 50, 61, 1779, 2024, 2067, 2096], "sync": [27, 31, 52, 60, 61, 485, 1709, 2037, 2038, 2060, 2088, 2093], "group_gloo": 27, "29501": 27, "monitoredbarri": 27, "transport": [27, 2067], "598": 27, "2401": 27, "db00": 27, "eef0": 27, "1100": 27, "3560": 27, "1c05": 27, "25d": 27, "8594": 27, "twolinlayernet": 27, "ddp": [27, 28, 29, 31, 52, 679, 1559, 1709, 2005, 2037, 2038, 2067, 2094], "i0607": 27, "739390": 27, "515217": 27, "173": 27, "broadcast_buff": [27, 1709], "bucket_cap_byt": 27, "26214400": 27, "find_unused_paramet": [27, 1709, 2038], "gradient_as_bucket_view": [27, 1709], "is_multi_device_modul": 27, "num_parameter_tensor": 27, "total_parameter_size_byt": 27, "440": 27, "bucket_s": 27, "module_nam": [27, 61, 816, 854, 2059], "nccl_async_error_handl": [27, 2037], "nccl_blocking_wait": 27, "nccl_ib_timeout": 27, "nccl_nthread": 27, "58": [27, 2097], "085681": 27, "544067": 27, "344": 27, "unused_parameter_s": 27, "40838608": 27, "5983335": 27, "4326421": 27, "comp": [27, 33], "4207652": 27, "085693": 27, "544066": 27, "42850427": 27, "3885553": 27, "2357981": 27, "2234674": 27, "enhanc": [27, 52, 2090], "unus": [27, 31, 61, 914, 1043, 1057, 1270, 1277, 1480, 1709, 1772, 2006, 2008, 2009, 2037, 2038, 2044, 2059], "went": [27, 61, 2091], "wasn": [27, 44, 1337, 2006], "va": 27, "lue": 27, "indirectli": 27, "outstand": [27, 2067], "stuck": [27, 35, 47], "uninform": 27, "root": [27, 29, 37, 44, 45, 49, 52, 61, 792, 1171, 1179, 1303, 1304, 1534, 1674, 1708, 1787, 1850, 1909, 2019, 2034, 2042, 2059, 2067, 2068, 2072, 2094], "nontrivi": [27, 1181, 1192, 2037, 2090], "reveal": [27, 2038], "default_pg": 27, "opt": [27, 31, 1277, 2006, 2043], "longtensor": [27, 133, 134, 135, 314, 316, 318, 451, 470, 512, 514, 516, 874, 875, 1206, 1240, 1287, 1405, 1461, 1462, 1522, 1616, 1617, 1663, 1763, 1855, 1892, 1905, 1931, 1939, 1972, 2075, 2078], "set_debug_level": 27, "set_debug_level_from_env": 27, "get_debug_level": 27, "disterror": 27, "distbackenderror": 27, "thrown": [27, 60, 616, 878, 880, 1061, 1103, 1229, 1265, 1296, 1305, 1307, 1309, 1312, 1313, 1324, 1519, 1714, 1970, 2054, 2059], "distnetworkerror": 27, "ex": [27, 36, 1181, 1709, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 2021, 2102], "diststoreerror": 27, "outlin": [28, 2060, 2068, 2094], "joinabl": [28, 31, 1709, 2005], "joinhook": [28, 2005], "throw_on_early_termin": [28, 1709], "shadow": [28, 31, 1709, 2082, 2083], "notify_join_context": 28, "zeroredundancyoptim": [28, 31, 1709, 2005], "vacuou": 28, "inherit": [28, 1742, 2006, 2008, 2027, 2039, 2046, 2048], "join_hook": [28, 31, 1709], "join_devic": [28, 31], "join_process_group": [28, 31], "repeatedli": [28, 2037, 2072], "main_hook": 28, "post_hook": 28, "is_last_join": 28, "dcp": 29, "reshard": [29, 52], "storag": [29, 52, 220, 310, 338, 341, 342, 434, 457, 482, 498, 519, 523, 557, 558, 583, 584, 586, 587, 878, 898, 900, 901, 905, 1028, 1096, 1157, 1236, 1240, 1251, 1265, 1273, 1337, 1359, 1414, 1415, 1455, 1519, 1536, 1837, 1851, 1858, 1888, 1893, 1897, 1911, 1935, 1941, 1958, 1981, 2004, 2005, 2007, 2013, 2020, 2024, 2027, 2034, 2037, 2048, 2051, 2059, 2067, 2072, 2075, 2076, 2078, 2093], "entrypoint": [29, 32, 35, 37, 42, 45, 46, 49, 2013, 2024], "state_dict_sav": 29, "checkpoint_id": 29, "storage_writ": 29, "planner": 29, "style": [29, 32, 34, 61, 877, 1100, 1156, 1763, 1786, 2006, 2008, 2009, 2056, 2059, 2077, 2095], "shardedtensor": [29, 52], "dtensor": [29, 32, 52], "save_state_dict": [29, 2005], "fsdp": [29, 52, 485, 679, 2005, 2094], "shardingstrategi": [29, 52, 2005], "hybrid_shard": [29, 52], "shard_group": 29, "pathlik": [29, 49, 61, 1337, 1851, 2059], "storagewrit": [29, 2005], "writer": [29, 2021, 2046, 2077], "saveplann": [29, 2005], "my_model": [29, 1709, 2006, 2088, 2094, 2103], "mymodul": [29, 49, 50, 52, 61, 1269, 1270, 1272, 1276, 1277, 1283, 1520, 1521, 1529, 1530, 2006, 2008, 2009, 2041, 2051, 2067], "fs_storage_writ": 29, "filesystemwrit": [29, 2005], "async_sav": [29, 2005], "de": [29, 2008, 2059, 2062], "checkpoint_futur": 29, "coordinator_rank": 29, "no_dist": 29, "state_dict_load": 29, "storage_read": 29, "fullfil": 29, "po": [29, 2056], "storageread": [29, 2005], "reader": [29, 2091], "loadplann": [29, 2005], "adagrad": [29, 1461, 2016, 2058, 2067], "model_state_dict": [29, 2054], "fs_storage_read": 29, "filesystemread": [29, 2005], "automodul": 29, "act": [29, 33, 35, 42, 57, 858, 1432, 1520, 1521, 1530, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1741, 1743, 1744, 1745, 1746, 1747, 1957, 2037, 2046, 2050, 2058, 2091], "told": [29, 2008], "role": [29, 35, 36, 44, 45], "read_metadata": 29, "set_up_storage_read": 29, "prepare_local_plan": 29, "prepare_global_plan": 29, "read_data": 29, "central": [29, 63, 1219, 2043, 2045], "loadplan": [29, 2005], "storage_data": 29, "load_byt": 29, "bytesio": [29, 49, 1273, 1276, 1337, 1851, 2056, 2062], "resolve_tensor": 29, "storagelay": 29, "schedul": [29, 35, 37, 43, 60, 679, 1787, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 2015, 2038, 2042, 2045, 2061, 2094], "checkpiont_id": 29, "is_coordin": 29, "validate_checkpoint_id": 29, "stroag": 29, "set_up_storage_writ": 29, "write_data": 29, "mark": [29, 44, 60, 61, 63, 68, 72, 485, 825, 900, 901, 902, 905, 928, 975, 977, 1178, 1381, 1382, 1709, 1771, 2006, 2008, 2034, 2038, 2039, 2046, 2051, 2059, 2061, 2068, 2078, 2084, 2088, 2091, 2094, 2095], "recover": 29, "writeresult": 29, "saveplan": [29, 2005], "resolve_data": 29, "assumpt": [29, 32, 41, 45, 49, 919, 975, 1438, 1472, 2034, 2038, 2043, 2067, 2068, 2072, 2090, 2091, 2094, 2099, 2103], "writeitem": [29, 2005], "tensor_data": 29, "set_up_plann": 29, "create_local_plan": 29, "create_global_plan": 29, "commit_tensor": 29, "defaultloadplann": [29, 2005], "rewrit": [29, 49, 57, 63, 65, 71, 72, 81, 82, 2019, 2034, 2043, 2053, 2054, 2056, 2091, 2092], "requit": 29, "intrincaci": 29, "renameplann": 29, "original_state_dict": 29, "foo_": [29, 1163], "flatten_sharded_tensor": 29, "_flatten_sharded_tensor": 29, "flatten_state_dict": 29, "read_item": 29, "dest_index": 29, "fqn": [29, 32, 49, 2083], "metamodelmateri": 29, "defaultsaveplann": [29, 2005], "global_plan": 29, "finish_plan": 29, "central_plan": 29, "resolve_byt": 29, "alia": [29, 33, 38, 49, 90, 91, 110, 186, 187, 352, 405, 435, 436, 443, 522, 540, 681, 866, 867, 868, 869, 870, 871, 872, 894, 937, 968, 984, 985, 1091, 1098, 1101, 1112, 1113, 1114, 1116, 1117, 1143, 1210, 1220, 1221, 1233, 1234, 1235, 1243, 1263, 1265, 1292, 1293, 1300, 1316, 1320, 1323, 1351, 1361, 1362, 1372, 1406, 1408, 1418, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1636, 1712, 1750, 1766, 1806, 1811, 1814, 1849, 1871, 1886, 1889, 1891, 1918, 1922, 1923, 1943, 1949, 1973, 2009, 2039, 2057, 2073, 2074, 2078, 2093, 2098], "readitem": [29, 2005], "planner_data": 29, "loaditemtyp": 29, "metadataindex": 29, "dest_offset": 29, "storage_index": 29, "storage_offset": [29, 137, 519, 616, 878, 2007, 2013, 2057, 2098], "tandem": 29, "fp16planner": 29, "write_item": 29, "writeitemtyp": 29, "byte_io": 29, "itertool": [29, 33, 958, 971], "islic": 29, "dataclass": [29, 49, 50, 2102], "ddploadbalancingplann": 29, "all_plan": 29, "saveextradataplann": 29, "merged_data": 29, "new_plan": 29, "prepar": [29, 32, 52, 61, 796, 838, 841, 857, 859, 861, 862, 863, 1172, 1275, 2010, 2056, 2082, 2083], "idempot": [29, 2067, 2069], "safeti": [29, 35, 49, 61, 485, 974, 975, 1191, 2006, 2009, 2026, 2050, 2095], "hi": [29, 1489, 1490, 2006, 2008, 2043, 2091], "peak": [29, 31, 52, 1053, 1055, 1061, 1069, 1070, 1071, 1709, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1795, 1801, 2042, 2060, 2100], "late": [29, 44, 485], "tensor_storage_s": 29, "single_file_per_rank": 29, "sync_fil": 29, "thread_count": 29, "per_thread_copy_ahead": 29, "10000000": 29, "simplif": [29, 2090], "atom": [29, 44, 61, 2010], "distributedtensor": [29, 32], "dedup_replicated_tensor": 29, "lookup_object": 29, "transform_object": 29, "lookup_tensor": 29, "transform_tensor": 29, "legaci": [29, 34, 45, 1627, 2061, 2075], "layer1": [29, 2060], "unparallel": 29, "tackl": [29, 2094], "get_model_state_dict": [29, 2005], "get_optimizer_state_dict": [29, 2005], "uniform": [29, 480, 607, 942, 1454, 1538, 1608, 1828, 1829, 1876, 2005, 2032, 2057, 2081, 2098], "hese": 29, "get_state_dict": [29, 2005], "fully_shard": 29, "tensor_parallel": 29, "parallelize_modul": [29, 32, 2005], "hide": [29, 58, 1174, 1969, 2040], "canon": [29, 35, 37, 1179, 1188, 2006, 2089, 2093], "named_paramet": [29, 49, 52, 54, 56, 1162, 1265, 1269, 1519, 2046, 2051, 2058], "named_buff": [29, 49, 52, 1265, 1519, 2046, 2051], "fullyshardeddataparallel": [29, 679, 2005, 2042], "fsdp_model": [29, 52], "deepcopi": [29, 56, 2062, 2083], "fsdp_optim": 29, "ddp_optim": 29, "ddp_state_dict": 29, "ddp_optim_state_dict": 29, "fsdp_state_dict": 29, "fsdp_optim_state_dict": 29, "ddp_optim_st": 29, "statedictopt": [29, 2005], "valuetyp": 29, "optimizerstatetyp": 29, "set_state_dict": [29, 2005], "optim_state_dict": [29, 52], "counterpart": [29, 857, 864, 1335, 1709, 2009, 2019, 2028, 2081, 2082, 2090, 2094], "missing_kei": [29, 1265, 1519], "miss": [29, 42, 688, 1162, 1183, 1265, 1360, 1370, 1452, 1481, 1482, 1483, 1519, 1642, 1759, 2017, 2039, 2052, 2056, 2072, 2090, 2095, 2106], "unexpected_kei": [29, 1265, 1519], "set_model_state_dict": [29, 2005], "set_optimizer_state_dict": [29, 2005], "full_state_dict": [29, 52], "cpu_offload": [29, 52], "ignore_frozen_param": 29, "keep_submodule_prefix": 29, "offload": [29, 52], "oom": [29, 52, 2041, 2105], "rank0": [29, 52], "frozen": [29, 31, 52, 1181, 1269, 1275, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 2010, 2052], "offlin": [29, 1276], "betwe": 29, "format_util": 29, "dcp_to_torch_sav": [29, 2005], "dcp_checkpoint_dir": 29, "torch_save_path": 29, "torch_save_to_dcp": [29, 2005], "onlin": [29, 61, 1775], "broadcastingtorchsaveread": [29, 2005], "dynamicmetaloadplann": [29, 2005], "sd": [29, 768, 773], "path_to_model": 29, "incurr": 29, "hopefulli": [29, 2042, 2093], "extnd": 29, "fault": [30, 35, 43, 44, 1159], "toler": [30, 35, 43, 44, 61, 693, 919, 920, 1254, 1281, 1282, 1320, 1323, 1338, 1772, 1779, 2006, 2079], "quickstart": 30, "agent": [30, 36, 37, 38, 41, 43, 45, 47, 2067], "expir": 30, "metric": [30, 1053, 1055, 1061, 1803, 2021, 2046, 2061, 2077, 2094, 2100], "kubernet": 30, "distributedoptim": [31, 1709, 2005, 2067, 2068], "rref": [31, 1709, 2005, 2009, 2060, 2068], "optimizer_class": 31, "params_rref": 31, "get_gradi": [31, 2057, 2067, 2068], "multithread": [31, 917, 2037], "dist_autograd": [31, 1709, 2067, 2068], "rpc": [31, 60, 1709, 2005, 2009, 2060, 2068, 2069], "context_id": [31, 1709, 2067, 2068], "rref1": [31, 2067, 2068], "worker1": [31, 60, 1709, 2067, 2068], "rref2": [31, 2067, 2068], "to_her": [31, 1709, 2057, 2067, 2068, 2069], "dist_optim": [31, 1709, 2068], "postlocalsgdoptim": [31, 2005], "afer": 31, "modelaverag": 31, "localsgd": 31, "model_averag": 31, "post_localsgd_hook": 31, "postlocalsgdst": 31, "subgroup": 31, "start_localsgd_it": 31, "warmup_step": 31, "local_optim": 31, "periodicmodelaverag": 31, "checkpoint": [31, 45, 48, 52, 931, 1337, 1709, 2004, 2005, 2020, 2041, 2042, 2051, 2054, 2060, 2069, 2088], "parameters_as_bucket_view": 31, "overlap_with_ddp": 31, "consumpt": [31, 56, 1762, 2072, 2077, 2084], "partit": [31, 32, 1423, 1677, 1942, 2056, 2057, 2060, 2068, 2069, 2094, 2102], "registr": [31, 60, 1047, 1701, 1706, 1707, 1709, 1726, 1729, 2013, 2054, 2059, 2089], "offset": [31, 35, 224, 225, 226, 227, 338, 519, 557, 745, 878, 1093, 1094, 1095, 1096, 1159, 1300, 1462, 1581, 1582, 1617, 1709, 1821, 1822, 1900, 1946, 1948, 2007, 2009, 2051, 2092, 2098], "intact": [31, 2067], "ddp_zero_hook": 31, "disjointli": 31, "trail": [31, 1752, 1754, 2027, 2032, 2035, 2039], "wari": 31, "static_graph": [31, 1709], "third": [31, 33, 1104, 1105, 1355, 1423, 1430, 1448, 1451, 1488, 1514, 1801, 1803, 2005, 2006, 2013, 2037, 2040, 2046, 2059, 2061, 2091], "add_param_group": [31, 1729, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "param_group": [31, 52, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1786, 1787, 1788, 1789, 1790, 1797, 1800], "trainabl": [31, 1050, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1786, 1787, 1788, 1789, 1790, 2039], "consolidate_state_dict": 31, "consolid": [31, 52, 2060], "pertain": 31, "preced": [31, 35, 52, 59, 679, 1703, 1801, 1941, 2010, 2036, 2058, 2062, 2080], "colwis": 32, "rowwis": 32, "parallelize_plan": 32, "sub_modul": 32, "parallelstyl": 32, "devicemesh": [32, 2005], "slice": [32, 49, 61, 63, 72, 74, 606, 694, 695, 1433, 1434, 1435, 1553, 1555, 1559, 1683, 1684, 1760, 1840, 1857, 1858, 1888, 1899, 1951, 2006, 2010, 2027, 2037, 2056, 2057, 2072, 2073, 2076, 2078, 2094, 2098], "colwiseparallel": [32, 2005], "tp_mesh": 32, "w1": [32, 61], "w2": [32, 61], "rowwiseparallel": [32, 2005], "mlp": [32, 1699, 2054, 2062], "compos": [32, 33, 56, 61, 737, 738, 739, 740, 741, 742, 765, 766, 771, 772, 773, 781, 782, 963, 1164, 1166, 1167, 1168, 1174, 1265, 1420, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1446, 1447, 1448, 1449, 1450, 1451, 1466, 1467, 1486, 1487, 1488, 1507, 1512, 1513, 1514, 1519, 1568, 1573, 1574, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1600, 1601, 1602, 1603, 1604, 1605, 1620, 1621, 1643, 1646, 1647, 1648, 1650, 1651, 1652, 1824, 1825, 1969, 2005, 2006, 2009, 2025, 2039, 2040, 2046, 2054, 2056, 2059, 2077, 2098, 2099], "input_layout": 32, "output_layout": 32, "use_local_output": 32, "sharded_mod": 32, "mind": [32, 1311, 1329, 1461, 2034, 2040, 2043, 2062, 2085, 2094, 2101], "sequenceparallel": [32, 2005], "sequence_dim": 32, "layernorm": [32, 1473, 1481, 1482, 1483, 1563, 1565, 1567, 1639, 2027, 2064, 2103], "rmsnorm": [32, 1674], "redistribut": [32, 2052], "preparemoduleinput": [32, 2005], "desired_input_layout": 32, "input_kwarg_layout": 32, "desired_input_kwarg_layout": 32, "placehold": [32, 49, 61, 79, 798, 823, 833, 1181, 1480, 2037, 2089, 2092, 2102], "transformerblock": [32, 2042], "attn": [32, 1565, 1567], "preparemoduleoutput": [32, 2005], "desired_output_layout": 32, "loss_parallel": [32, 2005], "crossentropyloss": [32, 1526, 1608], "logit": [32, 33, 390, 1432, 1454, 1598, 1608, 1627, 2007, 2057, 2073], "truth": [32, 1454, 1608, 2016, 2077], "label_smooth": [32, 1454, 1608, 2007], "dist_input": 32, "distribute_tensor": 32, "randint": [32, 543, 943, 994, 1087, 1148, 1438, 1569, 1608, 1609, 1716, 1717, 1901, 2007, 2011, 2026, 2057, 2077, 2081], "parameteriz": 33, "tensorflow": [33, 1787, 2034, 2077], "backpropag": [33, 920, 1788, 1819, 2041, 2084], "surrog": 33, "likelihood": [33, 1423, 1472, 1526, 1533, 1622, 1661, 1669], "ratio": [33, 35, 616, 1466, 1467, 1620, 1621, 2007, 2037, 2072, 2100], "reinforc": [33, 1549, 1680], "polici": [33, 35, 37, 52, 1178, 1795, 1801], "reparameter": [33, 1162, 1725, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747, 1748, 1749, 1761], "trick": [33, 911, 1432, 1627, 2034, 2043, 2045, 2094], "autoencod": 33, "whilst": [33, 2037], "densiti": [33, 257, 300, 1227, 1228, 1883, 2007, 2073], "log_prob": [33, 1423, 1438, 1609, 2007], "theta": [33, 1590, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 2007], "alpha": [33, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 150, 151, 311, 312, 487, 553, 560, 561, 562, 563, 684, 685, 688, 689, 690, 743, 769, 774, 940, 1047, 1048, 1223, 1237, 1427, 1437, 1460, 1507, 1547, 1591, 1599, 1614, 1615, 1625, 1643, 1678, 1773, 1787, 1879, 1880, 1893, 1898, 1912, 1917, 1918, 2007, 2034, 2039, 2056, 2058, 2094, 2098], "partial": [33, 35, 44, 49, 52, 55, 61, 841, 1050, 1095, 1173, 1219, 1312, 1313, 1314, 1356, 1515, 1516, 1517, 1653, 1654, 1655, 1709, 1736, 1894, 1900, 2009, 2010, 2026, 2034, 2039, 2042, 2043, 2054, 2056, 2069, 2079, 2099], "pi": [33, 172, 376, 697, 950, 1223, 1224, 1317, 1468, 1533, 1623, 1669, 1793, 1794, 1813, 1874, 1875, 1878, 1879, 1880, 1881, 1916, 2008, 2009, 2059, 2073], "reward": 33, "ascent": 33, "prob": [33, 2007], "policy_network": 33, "next_stat": 33, "rsampl": 33, "parameter": [33, 376, 453, 1272, 2028, 2072], "has_rsampl": 33, "batch_shap": 33, "event_shap": 33, "validate_arg": 33, "arg_constraint": 33, "cdf": 33, "cumul": [33, 1084, 1085, 1086, 1087, 1088, 1345, 1433, 1434, 1435, 1468, 1492, 1493, 1494, 1559, 1623], "mass": 33, "enumerate_support": 33, "discret": [33, 51, 480, 485, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1140, 1142, 1627, 1883, 2077, 2081], "cardin": [33, 1367], "univari": 33, "singleton": [33, 253, 1491, 1534, 1708, 1956, 2035], "cartesian": [33, 958, 1367, 1813], "_instanc": 33, "icdf": 33, "perplex": 33, "sample_shap": 33, "sample_n": 33, "set_default_validate_arg": 33, "mimic": [33, 1801], "stddev": 33, "varianc": [33, 994, 1433, 1434, 1435, 1463, 1472, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1559, 1618, 1622, 1719, 1721, 1786, 1787, 1823, 1832, 1833, 1964, 1965, 2032, 2046], "exp_famili": 33, "famili": 33, "p_": [33, 962, 1357, 1789], "langl": 33, "rangl": 33, "denot": [33, 49, 61, 172, 994, 1191, 1286, 1305, 1311, 1324, 1334, 1446, 1447, 1484, 1726, 1729, 1789, 1902, 1903, 1904, 1906, 1907, 1966, 2017, 2043, 2065, 2068, 2072], "carrier": 33, "analyt": [33, 919, 920, 1616, 2072], "bregman": 33, "courtesi": 33, "frank": 33, "nielsen": 33, "richard": 33, "nock": 33, "70": [33, 935, 1324, 1819, 2027], "odd": [33, 1126, 1127, 1128, 1136, 1137, 1138, 1600, 1601, 1602], "interv": [33, 47, 257, 865, 938, 990, 1155, 1381, 1382, 1804, 1828, 1829, 1876, 2021, 2037, 2042, 2061], "lower_bound": 33, "upper_bound": 33, "has_enumerate_support": 33, "param_shap": 33, "concentration1": 33, "concentration0": 33, "concentr": 33, "1046": 33, "1st": [33, 2035, 2042], "2nd": [33, 616, 1527, 1554, 1664, 2035], "greaterthan": 33, "total_count": 33, "71": 33, "trial": [33, 285], "integergreaterthan": 33, "ldot": [33, 285, 1297, 1305, 1336, 1352, 1367, 1491, 1512, 1513, 1514, 1534, 1708, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "unnorm": [33, 1454, 1598, 1608, 1627], "likewis": [33, 1941], "25": [33, 495, 585, 586, 587, 935, 960, 1227, 1333, 1338, 1464, 1522, 1524, 1527, 1699, 1709, 1754, 1756, 1779, 1801, 1820, 1963, 2006, 2072, 2073], "independentconstraint": 33, "simplex": 33, "loc": [33, 1337], "lorentz": 33, "3214": 33, "width": [33, 778, 784, 858, 1226, 1227, 1228, 1429, 1430, 1447, 1448, 1450, 1451, 1487, 1488, 1513, 1514, 1526, 1554, 1572, 1636, 1696, 2026, 2072], "df": 33, "chi": 33, "continuous_bernoulli": 33, "lim": [33, 1262], "499": 33, "501": 33, "2538": [33, 1297], "pervas": 33, "loaiza": 33, "ganem": 33, "cunningham": 33, "jp": 33, "arxiv": [33, 1489, 1539, 1566, 1725, 1761, 1809, 1863, 1921, 2034, 2078], "ab": [33, 89, 90, 624, 625, 681, 960, 1105, 1297, 1318, 1319, 1321, 1322, 1335, 1338, 1489, 1539, 1566, 1569, 1571, 1666, 1725, 1761, 1764, 1803, 1809, 1813, 1863, 2005, 2007, 2009, 2025, 2026, 2027, 2037, 2046, 2057, 2072, 2078, 2088, 2089, 2091, 2092, 2094, 2098, 2103], "1907": 33, "06845": 33, "8954": 33, "greaterthaneq": 33, "df1": 33, "df2": 33, "fisher": 33, "snedecor": 33, "2453": 33, "degre": [33, 994, 1082, 1089, 1265, 1303, 1304, 1519, 1528, 1568, 1709, 1827, 1847, 1914, 1915, 1964, 1965, 2007, 2043, 2057, 2072], "freedom": [33, 994, 1914, 1915, 1964, 1965, 2043], "geometric_": [33, 2007, 2081], "0124": 33, "half_cauchi": 33, "half_norm": 33, "base_distribut": 33, "reinterpreted_batch_ndim": 33, "reinterpret": [33, 498, 2093], "diagon": [33, 57, 223, 259, 594, 595, 596, 597, 951, 990, 994, 1092, 1093, 1094, 1096, 1105, 1118, 1167, 1168, 1209, 1295, 1307, 1309, 1312, 1324, 1328, 1580, 1581, 1582, 1666, 1677, 1900, 1940, 1944, 1945, 1946, 1947, 1948, 2007, 2039, 2057, 2076, 2098], "multivari": [33, 1405, 2073], "multivariate_norm": 33, "mvn": 33, "scale_tril": 33, "diag": [33, 58, 1166, 1167, 1168, 1301, 1302, 1329, 1809, 1900, 1920, 1921, 2007, 2057], "diagn": 33, "inverse_gamma": 33, "2953": 33, "1729": [33, 2046], "lkj_choleski": 33, "lkj": 33, "matric": [33, 259, 685, 688, 940, 952, 953, 962, 963, 964, 965, 1093, 1209, 1286, 1295, 1296, 1297, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1338, 1346, 1355, 1357, 1370, 1469, 1528, 1590, 1624, 1723, 1729, 1807, 1809, 1819, 1867, 1893, 1897, 1898, 1920, 1921, 1944, 1945, 1947, 2007, 2025, 2043, 2049, 2072, 2078], "eta": [33, 1773, 1775, 1788], "proport": [33, 1486, 1487, 1488, 1525, 1567], "det": [33, 1303, 1304, 1325, 1346, 2007, 2057], "l": [33, 734, 759, 941, 950, 956, 963, 964, 965, 1105, 1223, 1224, 1265, 1285, 1295, 1296, 1301, 1302, 1303, 1304, 1308, 1312, 1313, 1355, 1357, 1428, 1431, 1432, 1433, 1446, 1454, 1457, 1458, 1465, 1470, 1478, 1479, 1481, 1484, 1485, 1489, 1501, 1510, 1512, 1519, 1521, 1525, 1526, 1535, 1551, 1568, 1569, 1571, 1677, 1735, 1744, 1752, 1754, 1779, 1855, 1916, 2007, 2009, 2034, 2077, 2091, 2092, 2103], "lkjcorr": 33, "onion": 33, "3x3": [33, 1088, 1942], "3516": 33, "9361": 33, "1899": [33, 1368], "4748": 33, "8593": 33, "vine": 33, "2009": [33, 1809, 1921], "lewandowski": 33, "dorota": 33, "kurowicka": 33, "harri": [33, 1883], "joe": 33, "journal": [33, 1826], "1016": 33, "jmva": 33, "04": [33, 1148, 1343, 1876, 1883], "008": 33, "corrcholeski": 33, "log_norm": [33, 2057], "lowrank_multivariate_norm": 33, "cov_factor": 33, "cov_diag": 33, "covari": [33, 953, 990, 994, 1433, 1434, 1435, 1559, 1809], "covariance_matrix": 33, "2102": 33, "5429": [33, 1944], "woodburi": 33, "lemma": 33, "formula": [33, 87, 767, 768, 889, 891, 905, 906, 941, 950, 1223, 1224, 1291, 1357, 1358, 1533, 1593, 1594, 1684, 1789, 1822, 1875, 2013, 2039, 2043, 2061, 2066, 2072, 2090], "capacit": 33, "precision_matrix": 33, "mixture_same_famili": 33, "mixture_distribut": 33, "component_distribut": 33, "rightmost": [33, 953, 1227, 1228, 2009], "gaussian": [33, 1468, 1472, 1549, 1622, 1623, 1680, 1882, 2073], "gmm": 33, "bivari": 33, "categori": [33, 37, 83, 1405, 2009, 2011, 2056, 2058, 2061, 2063, 2075, 2097, 2099], "innermost": [33, 61, 232, 1219, 1228, 1855], "1338": 33, "mathbf": [33, 1286, 1724, 1725, 1758, 1761, 1788], "sigma": [33, 172, 376, 759, 1432, 1469, 1470, 1471, 1489, 1490, 1549, 1550, 1624, 1680, 1724, 1758, 1877, 1914, 1915, 1964, 1965, 2007], "triangular": [33, 963, 964, 965, 1295, 1296, 1302, 1304, 1312, 1313, 1320, 1323, 1324, 1326, 1328, 1579, 1580, 1581, 1582, 1666, 1795, 1819, 1944, 1945, 1946, 1947, 1948], "decomposit": [33, 49, 50, 61, 80, 963, 964, 965, 1209, 1295, 1296, 1301, 1302, 1303, 1304, 1305, 1307, 1312, 1313, 1314, 1315, 1320, 1324, 1325, 1329, 1330, 1355, 1357, 1723, 1807, 1809, 1813, 1819, 1920, 1921, 2005, 2049, 2090, 2093, 2102], "positivedefinit": 33, "lowercholeski": 33, "negative_binomi": 33, "halfopeninterv": 33, "mu": [33, 376, 1787, 1789], "one_hot_categor": 33, "onehot": 33, "5623": 33, "nonneg": [33, 1569, 1809, 1921, 2073], "pmf": 33, "mathrm": [33, 942, 1303, 1304, 1305, 1306, 1317, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1528, 1533, 1534, 1559, 1708, 1723, 1776, 1777, 1778, 1788, 1823, 2034, 2073], "relaxed_bernoulli": 33, "temperatur": [33, 1627, 2005], "parametr": [33, 1162, 1726, 1733, 1758, 1759, 1761, 2028, 2039], "relax": [33, 1005, 1039, 1281, 1282, 1729, 2062, 2094], "reparametriz": 33, "99": [33, 1277, 1787, 2006], "2951": [33, 1365], "3442": 33, "8918": 33, "9021": 33, "maddison": 33, "2017": [33, 1563, 1565, 1567, 1901, 2052], "reparametr": [33, 1627, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1741, 1761], "jang": 33, "relaxed_categor": 33, "1294": [33, 963], "2324": [33, 1265, 1519], "3859": 33, "2523": 33, "student": 33, "transformed_distribut": 33, "composit": [33, 57, 1166, 1313, 1723, 2006, 2009, 2013, 2040, 2046, 2056], "basedistribut": 33, "dx": [33, 1088, 1431, 1942, 2007, 2039, 2040, 2073], "dy": 33, "logist": [33, 1549, 1552, 1680, 2073], "sigmoidtransform": 33, "affinetransform": 33, "invert": [33, 61, 1256, 1297, 1306, 1307, 1313, 1319, 1326, 1328, 1331, 1332, 1346, 1515, 1516, 1517, 1944, 2007, 2049, 2067], "3418": 33, "upper": [33, 49, 50, 63, 71, 72, 73, 74, 180, 181, 182, 593, 794, 951, 956, 963, 964, 965, 967, 1119, 1120, 1185, 1226, 1227, 1295, 1296, 1302, 1304, 1312, 1313, 1324, 1328, 1538, 1580, 1582, 1666, 1675, 1676, 1677, 1795, 1801, 1819, 1834, 1855, 1944, 1947, 1948, 2007, 2032, 2057, 2073, 2079], "von_mis": 33, "circular": [33, 1440, 1441, 1442, 1446, 1447, 1448, 1495, 1496, 1497, 1664], "von": 33, "mise": 33, "unconstrain": [33, 1729], "angl": [33, 754, 884, 1089, 1346, 1505, 1813, 1827, 1870, 2005, 2007, 2057, 2072], "9777": 33, "radian": [33, 697, 884, 1089, 1827, 2007, 2057], "simul": [33, 487, 798, 800, 2061, 2062, 2065, 2090], "1979": 33, "152": [33, 616], "157": 33, "_rejection_sampl": 33, "88443": 33, "4784": [33, 1370], "symmetr": [33, 801, 819, 941, 950, 963, 964, 965, 1126, 1127, 1128, 1133, 1135, 1139, 1140, 1142, 1223, 1224, 1285, 1295, 1296, 1301, 1302, 1304, 1308, 1309, 1310, 1317, 1320, 1323, 1329, 1338, 1723, 1729, 1801, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2062, 2065], "x_ij": 33, "wu": [33, 1338], "chu": 33, "2018": [33, 1338, 1817], "sawyer": 33, "2007": 33, "anderson": 33, "w": [33, 58, 149, 759, 889, 891, 893, 900, 903, 905, 906, 914, 941, 950, 994, 1164, 1183, 1206, 1223, 1224, 1262, 1305, 1421, 1422, 1429, 1430, 1432, 1434, 1435, 1439, 1447, 1448, 1454, 1458, 1459, 1461, 1462, 1463, 1470, 1482, 1483, 1491, 1502, 1503, 1513, 1514, 1524, 1525, 1526, 1531, 1532, 1554, 1570, 1571, 1573, 1574, 1590, 1598, 1616, 1617, 1625, 1661, 1667, 1668, 1724, 1725, 1758, 1761, 2007, 2013, 2025, 2026, 2032, 2034, 2039, 2043, 2058, 2059, 2077, 2101], "2003": 33, "ed": [33, 57, 1457, 1458, 2034, 2059, 2084, 2101, 2104], "odel": 33, "feiveson": 33, "1966": 33, "samplecovari": 33, "jasa": 33, "61": 33, "313": 33, "199": 33, "203": [33, 616], "ku": 33, "bloomfield": 33, "2010": [33, 2032], "ox": 33, "max_try_correct": 33, "bartlett": [33, 941], "singular": [33, 1297, 1311, 1312, 1318, 1320, 1322, 1323, 1329, 1330, 1338, 1346, 1355, 1724, 1729, 1809, 1920, 1921, 2049], "inf": [33, 49, 52, 257, 683, 685, 688, 689, 690, 885, 940, 956, 1254, 1255, 1257, 1259, 1260, 1297, 1312, 1318, 1322, 1325, 1335, 1346, 1409, 1509, 1553, 1563, 1677, 1714, 1735, 1744, 1764, 1848, 1855, 2033, 2034, 2040, 2049, 2073, 2079, 2103], "accordingli": [33, 61, 1275, 1489, 1729, 2027, 2067, 2099], "kl_diverg": 33, "kullback": [33, 1484, 1637], "leibler": [33, 1484, 1637], "notimplementederror": [33, 2013, 2017, 2059], "register_kl": 33, "type_p": 33, "type_q": 33, "pairwis": [33, 1478, 1528, 1568], "kl_normal_norm": 33, "ambigu": [33, 61, 1250, 1449, 1450, 1451, 1465, 1515, 1516, 1517, 1572, 2009], "runtimewarn": 33, "basep": 33, "derivedq": 33, "kl_version1": 33, "derivedp": 33, "baseq": 33, "kl_version2": 33, "tie": 33, "abstransform": 33, "cache_s": 33, "event_dim": 33, "affin": [33, 52, 471, 472, 473, 474, 475, 748, 750, 751, 752, 801, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1492, 1493, 1494, 1501, 1502, 1503, 1534, 1559, 1590, 1708, 2037, 2046], "cattransform": 33, "tseq": 33, "functor": [33, 1047, 1048], "submatrix": 33, "x0": [33, 2096], "t0": [33, 49, 1219, 1773, 2008], "exptransform": 33, "identity_transform": 33, "composetransform": 33, "corrcholeskytransform": 33, "uncontrain": 33, "euclidean": [33, 960, 1662], "x_i": [33, 57, 967, 1084, 1085, 1086, 1087, 1334, 1341, 1509, 1528, 1553, 1555, 1568, 1645, 1683, 1816, 1899, 1914, 1915, 1942, 1964, 1965, 1966, 2073], "stickbreakingtransform": 33, "r_i": 33, "tanh": [33, 576, 759, 764, 794, 885, 1468, 1470, 1471, 1489, 1490, 1518, 1535, 1537, 1561, 1623, 1656, 1689, 2007, 2025, 2026, 2032, 2057, 2064, 2072, 2098], "unsign": [33, 2065, 2075, 2078, 2079, 2094], "z_i": 33, "s_i": 33, "y_i": [33, 967, 1084, 1085, 1086, 1087, 1334, 1341, 1568, 1942, 1966, 2043], "sqrt": [33, 61, 376, 548, 672, 673, 759, 990, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1232, 1285, 1367, 1433, 1434, 1435, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1468, 1470, 1471, 1473, 1481, 1482, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1504, 1506, 1534, 1535, 1537, 1559, 1623, 1677, 1708, 1729, 1774, 1775, 1776, 1777, 1780, 1786, 1787, 1823, 1850, 1882, 1914, 1915, 2007, 2025, 2032, 2033, 2034, 2057, 2072, 2073, 2079, 2098], "cumulativedistributiontransform": 33, "copula": 33, "base_dist": 33, "independenttransform": 33, "base_transform": 33, "log_abs_det_jacobian": 33, "lowercholeskytransform": 33, "positivedefinitetransform": 33, "powertransform": 33, "expon": [33, 267, 268, 279, 467, 468, 1148, 1155, 1289, 1319, 1423, 1507, 1662, 1816, 1826, 1863, 2007, 2075, 2078, 2098], "reshapetransform": 33, "in_shap": 33, "out_shap": 33, "softplustransform": 33, "tanhtransform": 33, "softmaxtransform": 33, "biject": 33, "hmc": 33, "stacktransform": 33, "stick": [33, 2058], "aris": [33, 61, 2034, 2090], "memoiz": [33, 2093], "_call": 33, "_invers": 33, "codomain": [33, 2034], "iff": [33, 1525], "weaker": [33, 2037], "pseudoinvers": [33, 1306, 1323, 1331], "monoton": [33, 1518, 1656, 1855], "forward_shap": 33, "inverse_shap": 33, "corr_choleski": 33, "greater_than": 33, "greater_than_eq": 33, "integer_interv": 33, "less_than": 33, "lower_choleski": 33, "lower_triangular": 33, "nonnegative_integ": 33, "one_hot": [33, 2007, 2057], "positive_integ": 33, "positive_semidefinit": 33, "positive_definit": 33, "real_vector": 33, "unit_interv": 33, "is_discret": 33, "constrain": [33, 1185, 1192, 1556, 2009, 2046], "_cat": 33, "dependent_properti": 33, "_dependentproperti": 33, "_greaterthan": 33, "_greaterthaneq": 33, "_independentconstraint": 33, "_integerinterv": 33, "_interv": 33, "half_open_interv": 33, "_halfopeninterv": 33, "_lessthan": 33, "_multinomi": 33, "_stack": [33, 2057], "constraintregistri": 33, "biject_to": 33, "transform_to": 33, "overparameter": 33, "rotat": [33, 1847, 1920], "hamiltonian": 33, "mont": 33, "carlo": 33, "invari": [33, 49, 1750, 1895, 1902, 1903, 1904, 1905, 1906, 1907, 2069, 2072, 2088, 2102], "potential_energi": 33, "cheap": [33, 1181, 1423, 2094], "svi": 33, "fewer": [33, 49, 57, 692, 694, 695, 698, 966, 1286, 1287, 1353, 1363, 1365, 1366, 1368, 1371, 1410, 1413, 1472, 1607, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 1817, 1901, 1914, 1915, 1919, 1938, 1964, 1965, 2015, 2035, 2051, 2079, 2105], "my_constraint": 33, "my_transform": 33, "myconstraintclass": 33, "my_factori": 33, "mytransform": 33, "param1": [33, 2046], "param2": [33, 2046], "constraint_registri": 33, "my_registri": 33, "construct_transform": 33, "myconstraint": 33, "from_dlpack": [34, 880, 2005], "ext_tensor": [34, 1156], "extern": [34, 1008, 1156, 1281, 1960, 2021, 2036, 2037, 2049, 2054, 2056, 2084], "immut": [34, 1156, 2009], "__dlpack__": [34, 1156], "capsul": [34, 880, 1156], "pycapsul": [34, 1156], "to_dlpack": [34, 1156, 2005], "t2": [34, 686, 687, 880, 1156, 1219, 1709, 1962, 2067, 2068], "dltensor": [34, 1156], "t3": [34, 1156, 2068], "idiomat": 34, "inde": [34, 2006, 2016, 2059, 2069, 2099], "plane": [35, 44, 737, 738, 739, 740, 741, 742, 765, 766, 767, 768, 771, 772, 773, 781, 782, 1093, 1420, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1446, 1447, 1448, 1449, 1450, 1451, 1466, 1467, 1486, 1487, 1488, 1491, 1507, 1512, 1513, 1514, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1620, 1621, 1643, 1646, 1647, 1648, 1650, 1651, 1652, 1725, 1761, 1824, 1825, 1847], "monitor": [35, 45, 47, 85, 1007, 1378, 1803, 1974, 2005, 2037, 2044], "unhealthi": 35, "tear": 35, "react": [35, 2099], "decentr": 35, "diagram": [35, 44, 1265, 1519, 2062, 2069, 2092, 2094, 2103], "elasticag": 35, "quad": [35, 1431, 1432, 1454, 1485, 1510, 1526, 1569, 1832], "group_result": 35, "is_fail": [35, 36], "exit_cod": 35, "return_valu": [35, 36, 42, 2091, 2092], "get_worker_group": 35, "workergroup": [35, 45], "mutabl": [35, 1281, 2006, 2013, 2059, 2077], "implementor": 35, "defens": 35, "retri": [35, 37, 47, 1061, 2067, 2069], "max_restart": [35, 36, 45], "runresult": 35, "workerspec": [35, 36, 45, 47], "local_world_s": [35, 36, 45], "rdzv_handler": [35, 36, 44], "monitor_interv": [35, 36], "local_addr": [35, 44], "blueprint": 35, "spec": [35, 36, 47, 49, 50, 63, 792, 793, 818, 819, 820, 823, 824, 825, 2054, 2064, 2078], "homogen": [35, 45], "rendezvoushandl": [35, 36, 44, 45], "rdzv": [35, 43, 45], "chose": [35, 2033, 2090], "tee": [35, 42], "consol": [35, 38, 41, 42, 45, 2077], "get_entrypoint_nam": 35, "__qualname__": 35, "workerst": 35, "unknown": [35, 50, 1711, 1712, 2069], "unrecover": 35, "interrupt": [35, 2024, 2101], "succeed": [35, 44, 1355, 2091, 2094], "uncaught": [35, 37], "unhandl": 35, "recov": [35, 898, 1126, 1325, 1357, 1709, 1750, 1916, 2033, 2037, 2041, 2043, 2063], "is_run": 35, "role_rank": [35, 45], "role_world_s": [35, 45], "pid": [35, 37, 45, 47, 1559, 2041, 2061], "local_elastic_ag": 35, "localelasticag": [35, 36, 47], "logs_spec": [35, 42], "start_method": [35, 36, 42, 47, 2024], "exit_barrier_timeout": 35, "log_line_prefix_templ": 35, "advis": [35, 543, 616, 865, 2048], "pipe": [35, 47, 2005, 2067], "torchelastic_enable_file_tim": 35, "torchelastic_timer_fil": 35, "role_nam": 35, "trainer0": [35, 2067], "foobar": [35, 37, 41, 42], "templat": [35, 972, 1047, 1048, 2058], "substitut": [35, 44, 61, 80, 1278, 2034, 2075], "shared_queu": 35, "get_context": [35, 47, 2048], "nproc_per_process": 35, "other_param": [35, 47], "usr": [35, 42, 44, 2037], "bin": [35, 42, 44, 299, 300, 818, 943, 1226, 1227, 1228, 2007, 2009, 2057, 2077, 2100], "simpleelasticag": 35, "scaffold": [35, 2091], "_assign_worker_rank": 35, "group_world_s": 35, "_exit_barri": 35, "guard": [35, 63, 68, 72, 679, 972, 1180, 1181, 1185, 1191, 1193, 1194, 1195, 1201, 1202, 1204, 1205, 2015, 2048, 2057, 2059, 2081, 2094, 2099, 2103, 2104], "_initialize_work": 35, "worker_group": 35, "fresh": [35, 1096, 1184, 1187, 1858, 1888, 2004], "start_work": 35, "_stop_work": 35, "optimist": 35, "deleg": [35, 2091], "_monitor_work": 35, "_rendezv": 35, "_restart_work": 35, "_shutdown": 35, "death_sig": 35, "sigterm": 35, "_start_work": [35, 42], "gracefulli": [35, 44, 45, 57, 1296, 2040, 2094], "meaning": [35, 37, 38, 1061, 2037, 2097], "meaningless": 35, "intention": [35, 1102, 1966, 2044, 2067], "torchelastic_health_check_port": 35, "tcp": [35, 44, 45, 2067], "health_check_serv": 35, "healthcheckserv": 35, "alive_callback": 35, "dead": [35, 61, 2102], "unsupport": [35, 49, 57, 63, 77, 80, 81, 83, 86, 2006, 2010, 2026, 2054, 2067, 2072, 2094, 2099], "create_healthcheck_serv": 35, "ship": [36, 1163, 2036, 2067], "programmat": [36, 61, 2046], "my_launch": 36, "argv": [36, 48], "trainer_entrypoint_fn": 36, "fn_arg": 36, "run_result": 36, "tricki": [36, 53, 58, 2034, 2046, 2069, 2088, 2091], "myrendezvoushandl": 36, "elastic_ag": 36, "servic": [36, 2038, 2090], "metrichandl": [36, 41], "mymetrichandl": 36, "metric_data": [36, 41], "metricdata": 36, "sink": [36, 41, 2021], "eventhandl": 36, "cloudwatch": 36, "nulleventhandl": 36, "myeventhandl": 36, "invalid": [37, 42, 975, 1265, 1405, 1519, 2033, 2034, 2050, 2054, 2056, 2059, 2060, 2093], "infra": [37, 2102], "start_process": [37, 42, 2024], "torchelastic_error_fil": 37, "smallest": [37, 50, 961, 1287, 1297, 1318, 1322, 1338, 1818, 1939, 2079, 2103, 2107], "timestamp": [37, 38, 41, 45, 2021, 2061, 2077, 2103], "error_handl": 37, "sugar": [37, 2008], "get_error_handl": 37, "childfailederror": 37, "get_first_failur": 37, "dump_error_fil": 37, "error_fil": [37, 42], "exitcod": [37, 45], "nanni": 37, "accur": [37, 926, 1007, 1219, 1341, 1378, 1432, 1460, 1826, 1942, 2013, 2037, 2068, 2084, 2093], "diagnost": [37, 78, 79, 80, 81, 82, 85, 679, 2006], "torchelastic_ag": 37, "trainer_0": 37, "trainer_1": 37, "json": [37, 42, 47, 2045, 2061, 2097, 2101], "trainer_n": 37, "errorhandl": 37, "record_except": 37, "processfailur": 37, "test_ev": 38, "eventsourc": 38, "get_logging_handl": 38, "millisecond": [38, 41, 1007, 1378, 1974, 2021], "eventmetadatavalu": 38, "readm": [39, 40, 61, 791, 2027], "telemetri": 41, "timeseri": 41, "metric_group": 41, "metric_nam": 41, "sensibl": 41, "my_modul": [41, 50, 52, 61, 2006, 2059], "nullmetricshandl": 41, "consolemetricshandl": 41, "my_method": 41, "put_metr": 41, "calculate_lat": 41, "succinctli": 41, "baz": [41, 61, 854, 2059, 2079], "leaf_modul": 41, "classnam": [41, 2009], "threw": [41, 2105], "my_app": 41, "consolemetrichandl": 41, "toi": [41, 2103], "stdout": [41, 42, 46, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 2056], "stdoutmetrichandl": 41, "1574213883": 41, "4182858": 41, "my_metr": 41, "1574213940": 41, "5237644": 41, "nullmetrichandl": 41, "class_nam": [41, 61], "def_nam": 41, "leaf": [41, 50, 149, 221, 334, 447, 487, 502, 503, 790, 837, 839, 879, 893, 1172, 1771, 1935, 2027, 2033, 2034, 2042, 2056, 2083, 2093], "metric_valu": 41, "metric_group_nam": 41, "popen": [42, 46], "log_dir": [42, 2021, 2077], "stderr": [42, 46, 2004, 2020], "err": 42, "echo": 42, "hello": [42, 57, 2008, 2059, 2091], "pcontext": 42, "multiprocesscontext": 42, "subprocesscontext": 42, "log_line_prefix": 42, "keyset": 42, "bitmask": 42, "bar0": 42, "bar1": 42, "file1": 42, "file2": 42, "caution": [42, 2095], "short": [42, 61, 733, 762, 1105, 1194, 1262, 1438, 1489, 1490, 1609, 1770, 1867, 1916, 2008, 2013, 2025, 2034, 2035, 2046, 2067, 2074, 2075, 2078, 2091, 2092], "ing": 42, "cmd": [42, 45], "forkserv": [42, 1709, 2024, 2048], "local_ranks_filt": 42, "processcontext": [42, 2024], "superset": [42, 45, 2013], "tee_stdout": 42, "tee_stderr": 42, "runprocsresult": 42, "defaultlogsspec": 42, "logsspec": 42, "reifi": 42, "rdzv_run_id": 42, "attempt_": 42, "logsdest": 42, "num_nod": [43, 45], "trainers_per_nod": 43, "num_allowed_failur": 43, "job_id": [43, 44, 45], "endpoint": [43, 44, 45], "host_node_addr": [43, 45], "min_siz": [43, 45], "num_allowed_failures_or_membership_chang": 43, "node1": [43, 45], "29400": [43, 45], "sidecar": [43, 44], "agre": [44, 1324, 2069], "resum": [44, 1795, 1801, 1803, 2067, 2069, 2077, 2092, 2094], "retryabl": 44, "announc": 44, "lose": [44, 48, 52, 190, 207, 2026], "train_loop": [44, 862], "arriv": [44, 45, 2067, 2069], "dynamicrendezvoushandl": 44, "rendezvousbackend": 44, "c10drendezvousbackend": 44, "etcdrendezvousbackend": 44, "supersed": [44, 1183], "etcdrendezvoushandl": 44, "my_run_id": 44, "from_backend": 44, "run_id": [44, 45], "min_nod": 44, "max_nod": 44, "rendezvousparamet": 44, "admit": [44, 45, 2037], "get_as_bool": 44, "get_as_int": 44, "rendezvoushandlerregistri": 44, "create_handl": 44, "creator": [44, 2034, 2067, 2069], "get_run_id": 44, "is_clos": 44, "set_clos": 44, "next_rendezv": 44, "rendezvousclosederror": 44, "rendezvousconnectionerror": 44, "rendezvousstateerror": 44, "rendezvoustimeouterror": 44, "num_nodes_wait": 44, "shutdown": [44, 2018, 2067, 2068], "rendezvouserror": 44, "rendezvousgracefulexiterror": 44, "dynamic_rendezv": 44, "join_timeout": 44, "600": 44, "last_call_timeout": 44, "close_timeout": 44, "rendezvoustimeout": 44, "get_stat": [44, 87, 2037], "fenc": 44, "token": [44, 1005, 1039, 1040, 1050, 2004, 2010, 2096, 2098], "set_stat": [44, 87, 2037], "last_cal": 44, "heartbeat": 44, "keep_al": 44, "c10d_rendezvous_backend": 44, "create_backend": 44, "store_typ": 44, "read_timeout": 44, "60": [44, 47, 935, 1472, 1805, 1932, 1937, 2021, 2067, 2092], "is_host": 44, "skip": [44, 50, 859, 974, 1105, 1159, 1189, 1295, 1296, 1428, 1429, 1430, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 1888, 1959, 2006, 2033, 2034, 2037, 2038, 2039, 2046, 2058, 2061, 2067, 2090, 2094, 2095, 2101], "cname": 44, "fqdn": [44, 45], "etcd_rendezvous_backend": 44, "ssl_cert": 44, "ssl": 44, "certif": 44, "ssl_cert_kei": 44, "privat": [44, 52, 1181, 2037, 2039, 2059, 2088, 2094], "ca_cert": 44, "rool": 44, "key_prefix": 44, "ttl": 44, "hour": 44, "etcd_rendezv": 44, "rdzv_impl": 44, "etcdrendezv": 44, "etcd_address": 44, "min_work": 44, "max_work": 44, "noqa": 44, "w605": 44, "2379": [44, 1363], "etcd_prefix": 44, "etcdstor": 44, "etcd_stor": 44, "etcd_client": 44, "etcd_store_prefix": 44, "piggyback": 44, "num": [44, 744, 745, 759, 1405, 1470, 1473, 1489, 1525, 1535, 1563, 2048], "lookuperror": 44, "override_timeout": 44, "etcdserv": 44, "cumbersom": [44, 2009], "highli": [44, 1423, 1709, 2004, 2047, 2054, 2056, 2072, 2079, 2106], "etcd_serv": 44, "data_dir": 44, "v3": [44, 45], "torchelastic_etcd_binary_path": 44, "get_client": 44, "etcd_binary_path": 44, "entry_point": [45, 2089], "migrat": [45, 53, 1367, 1761, 2065], "train_script": 45, "aforment": 45, "suffic": [45, 61], "compliant": [45, 48], "num_train": 45, "wors": [45, 1803, 1957, 2094], "port_k": 45, "etcd": 45, "v2": [45, 1334, 1808, 2004], "revis": 45, "physic": [45, 232, 1123, 1141, 2010, 2036, 2048, 2072, 2094], "localworkergroup": 45, "rdzv_id": 45, "rdzv_backend": [45, 48], "rdzv_endpoint": [45, 48], "max_nnod": 45, "torchelastic_restart_count": 45, "far": [45, 1275, 1625, 2090], "torchelastic_max_restart": 45, "python_exec": 45, "gang": 45, "departur": 45, "surviv": 45, "kill": [45, 47, 2024, 2041], "frequenc": [45, 943, 994, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1262, 1423, 1461, 1462, 1616, 1617, 1795, 1916, 2102], "ness": [45, 2093], "load_checkpoint": [45, 48], "checkpoint_path": [45, 48], "dataset": [45, 48, 63, 797, 1423, 1432, 1484, 2005, 2041, 2045, 2048, 2052, 2058, 2062, 2063, 2077], "train_step": 45, "should_checkpoint": 45, "save_checkpoint": [45, 48], "subprocess_handl": 46, "get_subprocess_handl": 46, "local_rank_id": 46, "meta": [46, 50, 52, 56, 61, 335, 1189, 2005, 2013, 2054, 2067, 2075, 2077, 2079, 2090, 2093, 2095, 2102], "fd": [46, 2077], "acquir": [47, 61, 2046, 2069, 2072], "deadlin": 47, "message_queu": 47, "localtimerserv": 47, "max_interv": 47, "trainer_func": 47, "localtimercli": 47, "expiri": 47, "timer_cli": 47, "countdown": 47, "timefram": [47, 2067], "elig": [47, 2069], "reap": 47, "timerserv": 47, "mp_queue": 47, "daemon": [47, 2024], "filetimerserv": 47, "file_path": 47, "log_ev": [47, 2021], "filetimercli": 47, "fifo": 47, "watchdog": 47, "filetimerrequest": 47, "sigkil": 47, "named_pip": 47, "mkfifo": 47, "timercli": 47, "timerrequest": 47, "scope_id": 47, "expiration_tim": 47, "acquisit": 47, "whatev": [47, 61, 447, 1180, 1709, 1859, 1944, 2009, 2040, 2093, 2094], "request_queu": 47, "entiti": [47, 61], "clear_tim": 47, "get_expired_tim": 47, "register_tim": 47, "timer_request": 47, "use_env": 48, "expositori": 48, "worst": [48, 2039], "total_num_epoch": 48, "visit": [48, 2056, 2097], "WILL": 49, "BE": 49, "aot": [49, 679, 974, 2015, 2084, 2085, 2094, 2095, 2103], "mod": [49, 50, 61, 720, 721, 731, 737, 738, 739, 744, 745, 755, 763, 809, 810, 811, 812, 835, 836, 864, 1162, 1268, 1269, 1275, 1282, 1759, 1961, 2008, 2009, 2059, 2082, 2089, 2103], "example_arg": 49, "exported_program": [49, 2054], "exportedprogram": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "arg1_1": 49, "exportgraphsignatur": [49, 50, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "user_input": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "user_output": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "inputs_to_paramet": 49, "inputs_to_buff": 49, "buffers_to_mut": 49, "backward_signatur": 49, "assertion_dep_token": 49, "sound": [49, 61, 974, 975, 1178, 1548, 2077, 2095, 2103], "convent": [49, 52, 61, 334, 961, 1105, 1123, 1125, 1149, 1172, 1181, 1433, 1434, 1435, 1481, 1482, 1483, 1559, 1848, 1851, 1950, 2004, 2020, 2027, 2034, 2043, 2046, 2051], "alias": [49, 52, 898, 1163, 1174, 1636, 1969, 2008, 2009, 2013, 2039, 2093], "stacktrac": [49, 50, 63, 72], "leverag": [49, 972, 2053, 2054, 2067, 2084, 2087, 2091, 2096, 2106], "_dynamo": [49, 63, 74, 972, 979, 2038, 2084, 2088, 2089, 2090, 2091, 2092, 2099, 2101, 2103], "massiv": [49, 2091], "pt2": [49, 2090, 2093], "artifact": [49, 679, 1916, 2015, 2045, 2059, 2085, 2091, 2101, 2103], "untrac": [49, 61], "disjoint": [49, 2006], "usabl": [49, 60, 2009, 2055, 2056, 2091, 2092], "traceabl": [49, 61, 623, 816, 1186, 2006, 2013, 2062, 2090], "symbolic_trac": [49, 50, 61, 2062], "comprehens": [49, 80, 1883, 2009, 2010, 2026, 2037, 2044, 2062, 2085], "simpler": [49, 58, 1174, 1969, 2006, 2034, 2039, 2043, 2046, 2091], "straight": [49, 1431, 1627], "conv": [49, 61, 701, 702, 703, 704, 705, 706, 707, 708, 709, 791, 792, 795, 813, 854, 860, 1265, 1275, 1281, 1282, 1446, 1447, 1448, 1449, 1450, 1451, 1519, 1520, 1526, 1718, 1719, 1721, 2019, 2032, 2037, 2049, 2056, 2062, 2063, 2064, 2065, 2097, 2099], "in_channel": [49, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 1275, 1446, 1447, 1448, 1449, 1450, 1451, 1495, 1496, 1497, 1498, 1499, 1500], "out_channel": [49, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 1275, 1446, 1447, 1448, 1449, 1450, 1451, 1495, 1496, 1497, 1498, 1499, 1500], "kernel_s": [49, 711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 767, 768, 781, 782, 1265, 1275, 1428, 1429, 1430, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1466, 1467, 1486, 1487, 1488, 1495, 1496, 1497, 1498, 1499, 1500, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1571, 1592, 1593, 1594, 1603, 1604, 1605, 1619, 1620, 1621, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1695, 1824, 1825, 2007, 2077, 2098], "maxpool": [49, 795, 1466, 1467, 1620, 1621, 2056], "maxpool2d": [49, 782, 1516, 1520, 1651, 1654, 2056, 2064], "256": [49, 1438, 1816, 2037, 2056], "example_kwarg": 49, "arg2_1": 49, "arg3_1": 49, "max_pool2d_with_indic": [49, 2007, 2057, 2098], "getitem": [49, 63, 66, 71, 72, 75, 2091, 2102], "85": [49, 61, 1522, 1801, 2097, 2101], "l__self___conv": 49, "lift": [49, 50, 58, 1174, 1969, 2026, 2057, 2093], "get_attr": [49, 61, 79], "harden": 49, "oncal": 49, "proxytensor": 49, "contextlib": [49, 63, 67], "contextmanag": 49, "__enter__": [49, 2009], "__exit__": [49, 61, 2009, 2010, 2059], "exc_typ": [49, 2010], "exc_valu": [49, 2010], "exc": 49, "expot": 49, "branch1": 49, "64": [49, 55, 56, 58, 935, 972, 1087, 1167, 1168, 1172, 1420, 1421, 1422, 1424, 1425, 1426, 1432, 1548, 1677, 1856, 1959, 2013, 2027, 2051, 2052, 2054, 2056, 2062, 2066, 2072, 2075, 2077, 2078, 2094, 2096], "branch2": 49, "128": [49, 616, 719, 727, 728, 755, 763, 793, 818, 819, 1436, 1453, 1480, 1506, 1528, 1568, 1569, 1607, 1677, 2026, 2027, 2054, 2062, 2064, 2065, 2067, 2072, 2075, 2078, 2101], "x2": [49, 63, 69, 960, 1313, 1511, 1568, 1569, 1607, 1665, 2007, 2098], "out1": [49, 1163, 2007, 2094], "out2": [49, 1163, 2007, 2094], "arg4_1": 49, "arg5_1": 49, "arg6_1": 49, "permute_1": 49, "addmm_1": 49, "relu_1": [49, 61], "l__self___buff": 49, "rangeconstraint": [49, 50], "min_val": [49, 777, 1477, 1631, 1632, 2007, 2098], "max_val": [49, 777, 1477, 1631, 1632, 2007, 2098], "9223372036854775806": 49, "range_constraint": [49, 50], "dimx": 49, "dimi": 49, "slice_1": [49, 63, 72, 74], "9223372036854775807": [49, 63, 72, 894, 937, 1263, 1750, 2021, 2071, 2105], "input_spec": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "inputspec": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "inputkind": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "tensorargu": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "output_spec": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "outputspec": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "outputkind": [49, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 2054], "valuerang": [49, 63, 71, 72, 73, 74, 1180, 1181], "is_bool": [49, 63, 71, 72, 73, 74], "saved_exported_program": 49, "fold": [49, 1571, 1921, 2007, 2019, 2056, 2065, 2072], "argumen": 49, "example_input": [49, 816, 817, 861, 862, 1277, 1281, 2062, 2083, 2085, 2089, 2092, 2093], "dynamic_dim": [49, 1177, 1178, 1181], "rewritten": [49, 2043, 2091], "primtivi": 49, "symint": [49, 1181, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1199, 1201, 1202, 1203, 1924, 1925, 1927, 1928, 1929, 2013, 2081, 2091, 2093, 2098], "symfloat": [49, 1924, 1925, 2081, 2090, 2091], "symbool": [49, 1181, 1198, 1204, 1929, 2081, 2090, 2091], "const": [49, 1472, 2045], "add_1": [49, 61, 63, 66, 68, 71, 72, 1163], "add_2": [49, 61, 63, 66, 68, 71, 72], "shot": 49, "nearli": [49, 149, 893, 914, 1809, 2048, 2067, 2103], "imposs": [49, 1174, 1191, 1969, 2033], "exportdb": [49, 2081], "combinatori": 49, "explod": [49, 1551], "cond": [49, 50, 57, 63, 66, 72, 2049], "undergo": [49, 78], "refin": [49, 1272, 2026], "dynamo": [49, 61, 78, 679, 1181, 2015, 2038, 2084, 2089, 2090, 2093, 2094, 2095, 2097, 2099, 2100, 2101, 2103], "fake": [49, 61, 83, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 792, 798, 799, 809, 811, 837, 861, 862, 1119, 1120, 1181, 1190, 1203, 2013, 2054, 2059, 2062, 2065, 2084], "preserve_module_call_signatur": 49, "dim0_x": [49, 63, 65, 71, 72], "verbatim": 49, "bake": [49, 61, 63, 72, 1269, 1275, 1776, 1777, 1789, 2058], "diverg": [49, 1195, 1281, 1282, 1484, 1637, 2005, 2009], "register_dataclass": [49, 50], "ordereddict": [49, 1265, 1519, 1520, 1529, 1548, 1699, 1740, 2007, 2046, 2051, 2079], "debug_nam": 49, "_constraint": 49, "unbound": [49, 1180, 1185, 1191], "t1": [49, 686, 687, 880, 1219, 1709, 1962, 2008, 2067, 2068], "extra_fil": [49, 1273, 1276], "opset_vers": [49, 2054, 2056, 2057], "opset": [49, 2054, 2056, 2057, 2089, 2098], "txt": [49, 1273, 1276, 2059, 2085, 2103], "decod": [49, 1337, 1563, 1564, 1565, 1709, 2059], "utf": [49, 1337, 2056, 2059], "expected_opset_vers": 49, "rb": [49, 1273, 1337], "seek": [49, 1273, 1337, 2059, 2062], "cl": [49, 63, 65, 138, 2039, 2062, 2067, 2104], "serialized_type_nam": 49, "treespec": 49, "inputdataclass": 49, "outputdataclass": 49, "_derivedconstraint": 49, "graph_signatur": [49, 50], "module_call_graph": 49, "tensor_const": 49, "run_decomposit": 49, "decomp_t": 49, "joint": [49, 679, 2015], "exportbackwardsignatur": 49, "gradients_to_paramet": 49, "gradients_to_user_input": 49, "loss_output": 49, "gurante": 49, "getattr": [49, 61, 2007, 2039, 2051, 2067], "parameters_buffers_constant_tensor": 49, "flattened_user_input": 49, "mutated_input": 49, "flattened_user_output": 49, "custommodul": [49, 837, 2054, 2062], "my_paramet": [49, 2008, 2054], "register_buff": [49, 1265, 1519, 1701, 2006, 2008, 2039, 2046, 2054], "my_buffer1": [49, 2054], "my_buffer2": [49, 2054], "add_tensor": [49, 50], "call_funct": [49, 61, 63, 77, 79, 81, 82, 2089, 2091, 2092, 2102, 2103], "mul_tensor": 49, "mul_tensor_1": 49, "add_tensor_1": 49, "add_tensor_2": 49, "buffer_mut": [49, 2054], "modulecallsignatur": 49, "symintargu": [49, 63, 72], "constantargu": [49, 63, 65], "customobjargu": 49, "tokenargu": 49, "in_spec": 49, "_pytre": [49, 63], "out_spec": 49, "modulecallentri": 49, "nonetyp": [49, 2007, 2009], "replace_all_us": 49, "get_replace_hook": 49, "class_fqn": 49, "unflatten": [49, 52, 2007, 2025, 2026, 2028, 2057, 2076], "flatargsadapt": 49, "target_spec": 49, "input_arg": [49, 1771, 2056], "input_args_with_path": 49, "interpretermodul": 49, "codegen": [49, 50, 61, 2039, 2094, 2097, 2103], "flat_args_adapt": 49, "hierachi": 49, "swap": [49, 59, 61, 414, 616, 787, 788, 789, 792, 796, 864, 1271, 1355, 1568, 1569, 1693, 1694, 1941, 1962, 2007, 2010, 2037, 2062, 2072, 2074, 2082], "submod": [49, 61], "new_mod": 49, "unflattenedmodul": 49, "bear": 50, "mlir": 50, "soundli": 50, "audienc": 50, "realiz": [50, 1863], "implic": [50, 1263, 1281, 2039, 2067, 2072], "highlight": [50, 729, 730, 2009], "bundl": [50, 2045], "notabl": [50, 972, 2009, 2085], "graph_modul": [50, 859, 2092, 2102], "sympi": [50, 1181, 1188, 2090], "i0": [50, 305, 1285, 1882, 2007, 2057, 2073], "dag": [50, 2037, 2091], "acycl": [50, 791, 2034, 2091], "collorari": 50, "textual": 50, "machineri": [50, 61, 2039, 2091, 2094, 2101], "op_nam": [50, 2013, 2054], "arg4": 50, "arg5": 50, "compact": [50, 1121, 1122, 1124, 1308, 1310, 1313, 2039, 2056, 2062], "args1": 50, "add1": 50, "predefin": [50, 2056], "readign": 50, "referenc": [50, 61, 1008, 1265, 1519, 1944, 2008, 2034, 2056, 2067, 2092], "19": [50, 684, 745, 965, 1516, 2006, 2056, 2072, 2092, 2097], "dummy_help": 50, "helper_util": 50, "89": [50, 616, 1827, 2097], "val": [50, 63, 66, 71, 1047, 1181, 1196, 1271, 1272, 2007, 2009, 2032, 2093], "nn_module_stack": 50, "came": [50, 2091], "self_linear": 50, "self_sequenti": 50, "source_fn_stack": 50, "source_fn": 50, "encapsul": [50, 60, 61, 1182, 2054, 2067, 2088], "control_flow": [50, 63, 66, 71, 72, 75], "x_1": [50, 63, 1084, 1085, 1086, 1087, 1333, 1436, 1452, 1453, 1596, 1607, 1942], "num_us": [50, 61], "y_1": [50, 1942], "higher_ord": [50, 63, 66, 71, 72, 75], "liter": [50, 1770, 2007, 2010, 2026, 2059, 2102, 2105], "dim_ord": 50, "tensormeta": 50, "promot": [50, 52, 80, 684, 945, 948, 957, 1047, 1100, 1148, 1150, 1151, 1152, 1153, 1404, 1457, 1458, 1459, 1463, 1607, 1818, 1838, 1839, 1845, 1860, 1917, 2009, 2054, 2075, 2079, 2093, 2094, 2098], "max_pool2d_with_index": 50, "add_on": 50, "ph_0": 50, "jax": [50, 53, 56, 57, 58, 2034, 2040, 2091, 2094], "int64_t": [50, 1770], "scalartyp": [50, 2098], "memoryformat": [50, 2098], "memory_format": [50, 61, 154, 169, 171, 174, 177, 178, 179, 188, 194, 205, 208, 232, 239, 266, 296, 324, 330, 392, 498, 499, 524, 579, 969, 1106, 1107, 1161, 1265, 1519, 1709, 1716, 1717, 1769, 1829, 1831, 1833, 2003, 2005, 2007, 2039, 2079, 2098], "_register_pytree_nod": 50, "sharding_strategi": 52, "auto_wrap_polici": 52, "backward_prefetch": 52, "backwardprefetch": [52, 2005], "backward_pr": [52, 1265, 1519], "mixed_precis": [52, 1709], "ignored_modul": 52, "param_init_fn": 52, "sync_module_st": 52, "forward_prefetch": [52, 2042], "limit_all_gath": [52, 2042], "use_orig_param": 52, "ignored_st": 52, "inspir": [52, 1779, 2039, 2096], "deepspe": 52, "shorten": 52, "sharded_modul": 52, "0001": [52, 61, 1086, 1310, 1507, 1643, 1773, 1803, 2007, 2058], "dev_id": 52, "shard_grad_op": 52, "unshard": [52, 2042], "full_shard": 52, "summon_full_param": 52, "with_grad": 52, "gap": [52, 865, 1835, 2005, 2062, 2101], "delai": [52, 485, 1709, 2069, 2094], "reacquir": 52, "nccl_cross_nic": 52, "no_sync": [52, 1709], "cpuoffload": [52, 2005], "modulewrappolici": 52, "custompolici": 52, "proceed": [52, 1007, 1378, 1472, 1974, 2068, 2069], "nonwrapped_numel": 52, "travers": [52, 835, 1190, 1709, 2038, 2039, 2068, 2082, 2083], "subtre": 52, "size_based_auto_wrap_polici": 52, "exce": [52, 1343, 2037, 2048], "100m": 52, "numel": [52, 434, 443, 970, 994, 1136, 1250, 2007, 2025, 2034, 2057, 2071, 2072], "custom_auto_wrap_polici": 52, "min_num_param": 52, "1e8": 52, "my_auto_wrap_polici": 52, "functool": [52, 55, 63, 841, 1894, 2039, 2079], "1e5": 52, "mixedprecis": [52, 2005], "granular": [52, 79, 1279, 2033, 2101], "is_meta": [52, 2057], "reset_paramet": [52, 1534, 1708], "torchdistx": 52, "deferred_init": 52, "materialize_modul": 52, "my_init_fn": 52, "fullstatedictconfig": [52, 2005], "flatparamet": 52, "unifi": [52, 2005, 2026, 2091], "check_is_root": 52, "clip_grad_norm_": [52, 1713, 2033], "max_norm": [52, 744, 745, 1461, 1462, 1616, 1617, 1713, 1714, 2007, 2033], "norm_typ": [52, 744, 745, 1461, 1462, 1486, 1487, 1488, 1616, 1617, 1646, 1647, 1648, 1713, 1714, 2007], "clip": [52, 990, 1713, 1714, 1715, 2007, 2028, 2040, 2056, 2057], "infin": [52, 992, 1255, 1257, 1259, 1260, 1409, 1431, 1512, 1513, 1514, 1650, 1651, 1652, 1714, 1778, 1887, 1899, 2072, 2073], "no_shard": 52, "largest": [52, 589, 943, 1149, 1297, 1318, 1320, 1322, 1323, 1338, 1663, 1724, 1939, 2007, 2008, 2009, 2098, 2102, 2107], "fp32": [52, 780, 793, 816, 1090, 1709, 2037, 2042, 2049, 2062, 2063, 2065, 2096], "flatten_sharded_optim_state_dict": 52, "sharded_optim_state_dict": 52, "shard_full_optim_state_dict": 52, "fsdp_modul": 52, "root_onli": 52, "full_optim_state_dict": 52, "optim_input": 52, "rank0_onli": 52, "get_state_dict_typ": 52, "state_dict_typ": 52, "statedictset": [52, 2005], "assertionerror": [52, 61, 63, 65, 70, 72, 83, 733, 1771, 2079, 2103], "differen": 52, "intercept": [52, 61, 2039, 2095], "occurr": [52, 401, 894, 937, 1263, 1366, 1750, 1953, 1954, 2071, 2090], "statedicttyp": 52, "fulloptimstatedictconfig": [52, 2005], "set_state_dict_typ": 52, "save_a_checkpoint": 52, "load_a_checkpoint": 52, "optim_state_dict_to_load": 52, "is_named_optim": 52, "load_directli": 52, "original_osd": 52, "namedoptim": 52, "keyedoptim": 52, "torchrec": [52, 2005], "gossipgrad": [52, 1709], "latter": [52, 686, 790, 1265, 1489, 1519, 1526, 2040, 2046, 2048, 2050, 2091], "rekey_optim_state_dict": 52, "optim_state_key_typ": 52, "loadabl": [52, 2004], "wrapped_model": 52, "wrapped_optim": 52, "full_osd": 52, "nonwrapped_model": 52, "nonwrapped_optim": 52, "rekeyed_osd": 52, "optimstatekeytyp": 52, "param_id": 52, "osd": 52, "param_nam": 52, "sharded_osd": 52, "scatter_full_optim_state_dict": 52, "new_model": 52, "new_optim": 52, "resid": [52, 60, 195, 288, 336, 1337, 1709, 2037, 2060, 2067], "remap": [52, 87, 414, 1269, 1273, 1337, 1358, 2004, 2020, 2066], "state_dict_config": 52, "optim_state_dict_config": 52, "descend": [52, 61, 135, 541, 876, 1265, 1329, 1330, 1519, 1892, 1920, 2007, 2098], "transpar": [52, 2038, 2060, 2067, 2069], "sharded_state_dict": 52, "shardedstatedictconfig": [52, 2005], "offload_to_cpu": 52, "optimstatedictconfig": [52, 2005], "param_state_dict": 52, "statedictconfig": [52, 2005], "writeback": 52, "summon": 52, "portion": [52, 1154, 1455, 1551, 1666, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 2063, 2095, 2103], "discard": [52, 1262, 1323, 1727, 2004, 2008, 2021], "redundantli": [52, 2033], "materi": [52, 900, 904, 905, 906, 987, 1580, 1581, 1582, 1711, 1712, 1790, 1843, 1844, 2039, 2094], "throughput": [52, 2006, 2036, 2037, 2042], "backward_post": 52, "altogeth": [52, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 2091], "contend": 52, "volum": [52, 1228], "_hybrid_shard_zero2": 52, "freed": [52, 149, 893, 914, 1013, 1061, 2024, 2037, 2042, 2044, 2067, 2074, 2088, 2105], "param_dtyp": 52, "reduce_dtyp": 52, "buffer_dtyp": 52, "keep_low_precision_grad": 52, "cast_forward_input": 52, "cast_root_forward_input": 52, "_module_classes_to_ignor": 52, "batchnorm": [52, 699, 700, 1171, 1265, 1275, 1519, 1559, 1709, 1718, 1719, 1720, 1721, 2019, 2028, 2034, 2046, 2058, 2060, 2062, 2064, 2065], "_batchnorm": [52, 1718, 1720], "kept": [52, 56, 61, 696, 778, 784, 1433, 1434, 1435, 1481, 1482, 1483, 1559, 1636, 1696, 2009, 2024, 2042, 2065, 2072], "permit": [52, 1180, 1191, 2037, 2072], "thereaft": 52, "local_state_dict": 52, "upcast": 52, "recast": 52, "offload_param": 52, "cfg": 52, "finetun": [52, 1265, 1519], "model_fn": 52, "my_checkpoint": 52, "_use_dtensor": 52, "localstatedictconfig": [52, 2005], "shardedoptimstatedictconfig": [52, 2005], "localoptimstatedictconfig": [52, 2005], "love": 53, "hear": 53, "vmap": [53, 55, 56, 61, 905, 906, 908, 910, 914, 919, 920, 1164, 1167, 1168, 1170, 1172], "arbitrarili": [53, 58, 512, 1268, 1590, 2009, 2034, 2039, 2040], "stock": [53, 58], "ensembl": [53, 56, 58, 1172], "maml": [53, 58], "vjp": [53, 56, 57, 889, 890, 900, 905, 906, 1168, 1174, 1969, 2039, 2040], "whirlwind": 53, "tour": 53, "ux": [53, 58, 1178, 2062], "jacrev": [54, 56, 57, 910, 1166, 1167, 2040], "functional_cal": [54, 56, 1172, 2094], "running_mean": [55, 1171, 1265, 1433, 1434, 1435, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1519, 1559, 1595, 1635, 2007, 2046, 2051, 2098], "running_var": [55, 1171, 1265, 1433, 1434, 1435, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1519, 1559, 1595, 1635, 2007, 2051, 2098], "groupnorm": [55, 1626], "anywher": [55, 2033], "batchnorm2d": [55, 712, 715, 717, 722, 813, 1275, 1455, 1493, 1595, 2019, 2034, 2046, 2062, 2064], "track_running_stat": [55, 750, 751, 752, 1171, 1433, 1434, 1435, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1559, 2051], "resnet": [55, 2004, 2006, 2008, 2046, 2059, 2077, 2082], "regnet": 55, "norm_lay": 55, "resnet18": [55, 61, 2004, 2006, 2008, 2020, 2059, 2101], "num_group": [55, 748, 1473, 1626, 2007], "fragil": 55, "replace_all_batch_norm_modules_": 55, "upstream": [56, 2052], "reflect": [56, 457, 519, 555, 1158, 1159, 1162, 1262, 1446, 1447, 1448, 1495, 1496, 1497, 1541, 1542, 1543, 1625, 1664, 1759, 1804, 1916, 2006, 2007, 2041, 2076, 2088], "coupl": [56, 80, 2006, 2045, 2053, 2068, 2088, 2102], "jvp": [56, 57, 890, 895, 898, 899, 900, 904, 905, 906, 1170, 2039], "jacfwd": [56, 57, 910, 1166, 2040], "carefulli": [56, 60, 485, 2013, 2040, 2059, 2093, 2095], "make_functional_with_buff": 56, "hurri": 56, "gist": [56, 792, 2043, 2097], "emul": [56, 798, 2010, 2039, 2061], "fmodel": 56, "compute_loss": [56, 58, 1162, 1164], "predict": [56, 485, 1423, 1432, 1472, 1608, 2058, 2077, 2085], "argnum": [56, 1164, 1165, 1166, 1167, 1168], "carri": [56, 335, 796, 837, 838, 857, 858, 2013, 2035, 2062], "stack_module_st": 56, "num_model": [56, 1172], "in_featur": [56, 719, 727, 728, 731, 732, 755, 763, 1172, 1265, 1423, 1504, 1506, 1519, 1699, 1723, 1724, 1725, 1757, 1758, 1761, 2017, 2046], "out_featur": [56, 719, 727, 728, 731, 732, 755, 763, 1172, 1265, 1436, 1504, 1506, 1519, 1699, 1723, 1724, 1725, 1757, 1758, 1761, 2017, 2046], "base_model": 56, "clearer": [56, 1322, 1790, 2039, 2054], "call_single_model": 56, "aotautograd": [56, 679, 2015, 2038, 2093, 2094, 2095, 2103], "stori": [56, 2043, 2091], "grad_x": [57, 2013, 2040, 2094], "has_aux": [57, 1164, 1165, 1167, 1168, 1169, 1173], "mental": [57, 1163], "absenc": [57, 2085], "unbind": [57, 1174, 1969, 2005, 2007, 2025, 2057, 2076], "presenc": [57, 61, 1275, 1410, 2048, 2059, 2072, 2099], "pop": [57, 939, 1065, 1066, 1520, 1529, 2057, 2060, 2061, 2091], "lst": 57, "in_dim": [57, 58, 892, 905, 906, 1164, 1174, 1969, 2040], "batchedtensor": 57, "batched_tensor_input": 57, "new_": [57, 2037, 2078], "new_zero": [57, 2007, 2057], "new_empti": [57, 2007, 2013, 2057], "diag_emb": [57, 1095, 1301, 1302, 1329, 1920, 2007, 2057], "vec": [57, 106, 107, 423, 689, 1407, 1760, 2007, 2072, 2098], "copy_": [57, 59, 414, 1163, 1572, 2006, 2007, 2025, 2037, 2074], "arithmet": [57, 945, 948, 962, 1321, 1845, 2010, 2021, 2025, 2026, 2049, 2062, 2075], "extra_arg": 57, "theoret": 57, "custom_dot": 57, "lax": 57, "while_loop": 57, "is_nonzero": [57, 2007, 2057, 2072], "rag": 57, "unclear": [57, 616], "add_nois": 57, "prng": 57, "cos_x": [58, 1164], "neg_sin_x": [58, 1164], "feature_s": [58, 1164, 1174, 1969], "feature_vec": [58, 1164, 1174, 1969], "mseloss": [58, 1164, 1479, 1551, 1657, 2037, 2038], "grad_weight_per_exampl": [58, 1164], "cotang": [58, 1173], "vjp_fn": [58, 1173], "out_tang": 58, "hessian0": 58, "hessian1": 58, "hess": [58, 1166], "set_overwrite_module_params_on_convers": [59, 2005], "to_empti": [59, 1265, 1519, 2017], "get_overwrite_module_params_on_convers": [59, 2005], "set_swap_module_params_on_convers": [59, 2005], "swap_tensor": [59, 414, 2005], "module_load": 59, "get_swap_module_params_on_convers": [59, 414, 1265, 1519, 2005], "rpc_async": [60, 2009, 2057, 2067, 2069], "add_done_callback": 60, "fut": [60, 1268, 1709, 2036, 2067], "set_result": [60, 1709, 2067], "haven": [60, 2046, 2101], "set_except": 60, "baseexcept": 60, "valueerror": [60, 63, 83, 894, 937, 1263, 1729, 1730, 1750, 1753, 2039, 2054, 2060, 2071, 2079, 2102], "twice": [60, 616, 909, 1170, 2033, 2034, 2041, 2043, 2093], "slow_set_futur": 60, "sleep": 60, "cb1": 60, "cb2": 60, "dedic": [60, 2037], "pool": [60, 765, 766, 767, 768, 781, 782, 1005, 1039, 1040, 1050, 1061, 1374, 1376, 1420, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1466, 1467, 1486, 1487, 1488, 1512, 1513, 1514, 1515, 1516, 1517, 1520, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1593, 1594, 1620, 1621, 1646, 1647, 1648, 1650, 1651, 1652, 1824, 1825, 2005, 2036, 2037, 2039, 2046, 2048, 2064, 2067, 2088], "didn": [60, 2039, 2042, 2052, 2058], "cb_fut": 60, "chain_cb_fut": 60, "cb": [60, 2067], "held": [60, 1005, 1029, 1057, 1377, 1982, 2033, 2096], "collect_al": [60, 2005], "fut0": 60, "fut1": [60, 2067], "fut_list": 60, "wait_al": [60, 2005], "toolkit": 61, "clamp": [61, 185, 186, 798, 801, 968, 1272, 1431, 1472, 1625, 1636, 1696, 2007, 2019, 2025, 2056, 2057, 2062, 2064, 2065, 2073, 2079, 2098], "call_modul": [61, 79, 2102], "call_method": [61, 79, 2089, 2092], "feed": [61, 2006, 2041, 2046, 2082, 2093], "theses": 61, "callsit": 61, "constitut": [61, 2091], "isol": [61, 1699, 2024, 2058, 2060, 2103], "tracer_class": 61, "gm": [61, 2089, 2092, 2093, 2102, 2103], "treatment": 61, "topk": [61, 2007, 2025, 2057, 2098], "print_tabular": [61, 2089, 2092], "opcod": [61, 2059, 2089, 2092], "linear_weight": 61, "linear_1": 61, "topk_1": 61, "pose": [61, 2068, 2091], "explor": [61, 78, 2004, 2034, 2046, 2059, 2105], "edit": [61, 2013, 2059, 2076], "lint": 61, "inserting_aft": [61, 2102], "new_nod": 61, "replace_all_uses_with": [61, 2102], "tediou": 61, "unwieldi": 61, "fusion": [61, 679, 791, 813, 860, 861, 972, 1267, 1274, 1279, 1280, 1281, 1282, 1716, 1717, 2019, 2046, 2062, 2091, 2094, 2096, 2102, 2103], "imagin": [61, 2067, 2091, 2095], "requisit": 61, "relu_decomposit": 61, "decomposition_rul": 61, "constitu": [61, 2027, 2039, 2042], "new_graph": 61, "graphappendingtrac": 61, "proxy_arg": 61, "output_proxi": 61, "node_copi": 61, "ari": [61, 2056], "unari": [61, 1167, 1168, 1563, 1565, 1567, 2010, 2025], "organiz": 61, "shapeprop": 61, "named_modul": [61, 1265, 1519, 2046], "args_it": 61, "load_arg": 61, "map_arg": 61, "fetch_attr": 61, "target_atom": 61, "attr_itr": 61, "hasattr": [61, 1958, 2007, 2039, 2062, 2092], "nonexist": [61, 2008, 2009], "elif": [61, 1272, 1484, 2008, 2009, 2044, 2054, 2091, 2102], "self_obj": 61, "encompass": 61, "prove": [61, 2024], "disprov": 61, "led": [61, 2105], "auxiliari": [61, 1164, 1165, 1167, 1168, 1169, 1173, 2004, 2045], "nondeterminist": [61, 312, 314, 320, 498, 514, 516, 943, 1106, 1107, 1108, 1287, 1438, 1446, 1447, 1448, 1449, 1450, 1451, 1515, 1516, 1517, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1617, 1625, 1636, 1664, 1677, 1696, 1697, 1698, 1862, 1957, 2089], "unord": [61, 1520, 1529], "nondetermin": [61, 920, 2050], "dedupl": [61, 2056], "straightforward": [61, 2016, 2027, 2046, 2058, 2072, 2089], "torchvis": [61, 2004, 2005, 2006, 2008, 2056, 2059, 2062, 2077, 2082, 2101], "transformed_resnet18": 61, "input_imag": 61, "224": [61, 861, 862, 2006, 2008, 2056, 2101], "margin": [61, 1452, 1478, 1511, 1522, 1524, 1568, 1569, 1606, 1633, 1649, 1658, 1693, 1694, 2007, 2077], "commut": 61, "toolbox": 61, "tradit": [61, 1567, 2053, 2054], "luckili": 61, "my_pass": 61, "my_module_transform": 61, "input_valu": 61, "prompt": [61, 2004, 2052], "set_trac": [61, 1270, 1277, 1283, 2006], "examin": [61, 2046, 2056, 2061, 2105], "undergon": 61, "subclassm": 61, "pre_trac": 61, "post_trac": 61, "sake": 61, "tabular": [61, 679, 2015], "transform_graph": 61, "session": [61, 2054], "luck": [61, 2091], "input_nod": 61, "stepwis": 61, "breakpoint": [61, 2009, 2091, 2102], "excel": [61, 2095], "realpython": 61, "pycharm": 61, "vscode": 61, "graphic": [61, 2022, 2052, 2101], "parlanc": 61, "func_to_trac": 61, "dyn": 61, "155": 61, "__bool__": [61, 2007, 2009], "to_bool": 61, "traceerror": [61, 2062], "hyper": [61, 1551, 2008, 2077], "do_activ": 61, "512": [61, 1563, 1564, 1565, 1566, 1567, 2037, 2087], "without_activ": 61, "with_activ": 61, "traced_without_activ": 61, "traced_with_activ": 61, "concrete_arg": 61, "truli": [61, 2013, 2053, 2056], "__torch_function__": [61, 2104], "161": 61, "len_1": 61, "sqrt_1": 61, "truediv": [61, 2089, 2091, 2092], "mycustomtrac": 61, "traced_graph": 61, "runnabl": [61, 2033, 2056, 2077, 2103], "myspecialsubmodul": 61, "neg_1": 61, "is_leaf_modul": [61, 2083], "sparse_coo_tensor": [61, 543, 580, 1901, 2007, 2011, 2057, 2072], "ones_lik": [61, 1167, 1168, 1173, 2007, 2013, 2027, 2037, 2039, 2040, 2046, 2057], "zeros_lik": [61, 900, 902, 904, 905, 906, 2007, 2011, 2027, 2037, 2057, 2072], "viabl": [61, 2034, 2037], "torch_randn": 61, "gotcha": 61, "dropoutrepro": 61, "assert_clos": [61, 1122, 1124, 1125, 1130, 1131, 1136, 1137, 1138, 1140, 1142, 2005, 2006, 2079], "greatest": [61, 1207, 1409, 2056, 2079], "6207983493804932": 61, "dropoutrepro2": 61, "overspeci": [61, 972, 2090], "ph": 61, "shouldn": [61, 1005, 2059, 2072, 2076], "fn_or_nam": 61, "callfunct": 61, "my_custom_funct": 61, "fn_to_be_trac": 61, "reassign": [61, 2037], "regener": 61, "unset": [61, 935, 2049], "add_submodul": 61, "subpath": 61, "get_submodul": [61, 1265, 1519], "delete_all_unused_submodul": 61, "delete_submodul": 61, "print_read": [61, 2013, 2092], "print_output": 61, "include_strid": 61, "include_devic": 61, "date": [61, 2059, 2060], "pythoncod": 61, "fxmodul": 61, "owning_modul": 61, "tracer_cl": 61, "tracer_extra": 61, "the_funct": 61, "type_expr": 61, "create_nod": 61, "method_nam": 61, "0th": [61, 1174, 1969], "inserting_befor": 61, "influenc": [61, 2054, 2072, 2106], "eliminate_dead_cod": 61, "topolog": [61, 2056], "attr_1": 61, "is_impur": 61, "bad": [61, 63, 2024, 2056, 2059, 2062, 2093, 2101], "erase_nod": 61, "to_eras": 61, "eras": [61, 63, 68, 69, 2090], "find_nod": 61, "iterat": 61, "qualified_nam": 61, "graph_copi": 61, "val_map": 61, "return_output_nod": 61, "opoverload": [61, 2013], "companion": 61, "arg_transform": 61, "value_remap": 61, "_node_list": 61, "doubli": 61, "on_generate_cod": 61, "make_transform": 61, "transformcodefunc": 61, "insert_pdb": 61, "bodi": [61, 63, 72, 75, 1277, 2006, 2008, 2009, 2010, 2054, 2092, 2103], "current_tran": 61, "stuff": [61, 2093], "default_valu": 61, "_not_": 61, "tabul": 61, "process_input": 61, "process_output": 61, "python_cod": 61, "root_modul": [61, 792, 2064], "set_codegen": 61, "return_typ": [61, 696, 1084, 1085, 1228, 1287, 1325, 1363, 1366, 1368, 1371, 1411, 1892, 1939, 1944], "printout": [61, 1049, 1062, 2092], "all_input_nod": 61, "format_nod": 61, "placeholder_nam": 61, "maybe_return_typenam": 61, "autogener": [61, 2040], "insert_arg": 61, "impur": 61, "normalized_argu": 61, "arg_typ": 61, "kwarg_typ": 61, "normalize_to_only_use_kwarg": 61, "vararg": 61, "argskwargspair": 61, "bx": 61, "ax": [61, 965, 1297, 1311, 1315, 1326, 1327, 1328, 1356, 1367, 1527, 1538, 1944, 2056, 2094], "prev": [61, 1788], "replace_with": 61, "delete_user_cb": 61, "propagate_meta": 61, "replace_input_with": 61, "old_input": 61, "new_input": 61, "create_proxi": [61, 2091], "record_stack_trac": 61, "outputgraph": [61, 2091], "update_arg": 61, "update_kwarg": 61, "autowrap_modul": 61, "autowrap_funct": 61, "create_arg": 61, "create_args_for_root": 61, "root_fn": 61, "is_modul": 61, "introspect": [61, 974, 2094], "disallow": [61, 2059, 2067, 2075, 2094, 2095], "proxy_factory_fn": 61, "attr": [61, 63, 65, 149, 1186, 1367, 1848], "attr_val": 61, "parameter_proxy_cach": 61, "module_qualified_nam": [61, 2083], "path_of_modul": 61, "some_hyperparamet": 61, "indexed_item": 61, "proxied_valu": 61, "garbage_collect_valu": 61, "run_nod": 61, "vice": [61, 457, 602, 1158, 1159, 1511, 2034, 2065, 2074, 2090], "versa": [61, 457, 602, 1158, 1159, 1511, 2034, 2065, 2074, 2090], "negsigmswapinterpret": 61, "call_self": 61, "args_tail": 61, "boxed_run": 61, "args_list": 61, "promptli": [61, 1338], "fetch_args_kwargs_from_env": 61, "map_nodes_to_valu": 61, "initial_env": 61, "enable_io_process": 61, "negsigmswapxform": 61, "nodes_map": [61, 2102], "subgraph_rewrit": [61, 2102], "m1": [61, 1967, 1968], "m2": [61, 1757, 1967, 1968, 2062], "traced_modul": [61, 2051, 2102], "despit": [61, 1281, 1282, 2037, 2043], "stack_1": 61, "stack_2": 61, "sum_2": 61, "max_1": 61, "max_2": 61, "exhaust": [63, 1709, 2106], "wih": 63, "escap": [63, 73], "hatch": [63, 73], "assumeconstantresult": [63, 74], "burn": [63, 74, 2088], "tracabl": [63, 74], "get_item": [63, 74], "i64": [63, 68, 69, 73, 74], "myautogradfunct": 63, "autogradfunct": 63, "allow_in_graph": [63, 2094], "p_linear_weight": 63, "p_linear_bia": 63, "mul_1": [63, 69, 2089, 2091], "mysubmodul": [63, 71, 72], "condbranchclassmethod": [63, 71, 72], "subm": [63, 71, 72], "condbranchnestedfunct": [63, 71, 72], "inner_true_fn": [63, 71, 72], "inner_false_fn": [63, 71, 72], "condbranchnonlocalvari": [63, 71, 72], "my_tensor_var": [63, 71, 72], "my_primitive_var": [63, 71, 72], "nonloc": [63, 66, 71, 72, 2010], "c_lifted_tensor_0": [63, 71, 72], "lift_fresh_copi": [63, 71, 72, 2057], "sub_1": [63, 71, 72], "constant_tensor": [63, 71, 72], "lifted_tensor_0": [63, 71, 72], "condclosedovervari": [63, 66, 71], "condoperand": [63, 71, 72], "sym_size_int": [63, 71, 72], "oo": [63, 71, 72], "condpred": [63, 71, 72], "constrainassizeexampl": [63, 73, 74], "hint": [63, 73, 74, 679, 1005, 1039, 1050, 1181, 1191, 1197, 1266, 1525, 1563, 1564, 1565, 1566, 1567, 2006, 2008, 2009, 2013, 2037, 2039, 2054, 2067, 2090], "constrain_as_valu": [63, 73, 74], "constrain_as_s": [63, 73, 74], "_constrain_as_s": [63, 73, 74], "_local_scalar_dens": [63, 73, 74, 2057, 2098], "u3": [63, 73, 74], "ge": [63, 73, 74, 284, 1221, 1359, 1470, 1475, 1476, 1489, 1527, 1629, 1630, 2007, 2025, 2057, 2098], "scalar_tensor_default": [63, 73, 74], "scalar_tensor": [63, 73, 74, 2007, 2057, 2098], "_assert_async_msg": [63, 73, 74], "_assert_async": [63, 73, 74, 2057], "msg": [63, 73, 74, 1064, 1065, 1067, 1181, 2061, 2079], "le": [63, 73, 74, 359, 1188, 1293, 1475, 1476, 1629, 1630, 2007, 2025, 2057, 2079, 2098], "scalar_tensor_default_1": [63, 73, 74], "_assert_async_msg_1": [63, 73, 74], "sym_constrain_range_for_s": [63, 73, 74, 2007, 2057], "u0": [63, 73, 74], "u1": [63, 73, 74], "u2": [63, 73, 74, 2103], "constrainasvalueexampl": [63, 73, 74], "_constrain_as_valu": [63, 73, 74], "sym_constrain_rang": [63, 73, 74, 2007, 2057], "test_decor": 63, "dynamicshapeassert": [63, 64], "dynamicshapeconstructor": [63, 72], "dynamicshapeifguard": [63, 68, 72], "dynamicshapemap": [63, 72, 75], "body_graph_0": [63, 72, 75], "map_impl": [63, 72, 75], "dynamicshapesl": [63, 72], "slice_2": [63, 72], "dynamicshapeview": [63, 72], "new_x_shap": [63, 72], "support_level": [63, 69], "supportlevel": [63, 69], "fnwithkwarg": [63, 69], "pos0": [63, 69], "tuple0": [63, 69], "myarg": [63, 69], "mykw0": [63, 69], "mykwarg": [63, 69], "input0": [63, 69], "input1": [63, 69, 759, 1436, 1452, 1453, 1511, 1528, 1596, 1606, 1607, 1649, 2007, 2033, 2056], "tuple0_0": [63, 69], "tuple0_1": [63, 69], "myargs_0": [63, 69], "myargs_1": [63, 69], "mul_2": [63, 69], "mul_3": [63, 69], "mul_4": [63, 69], "mul_5": [63, 69], "mul_6": [63, 69], "listcontain": [63, 64, 69, 72], "monkei": [63, 64, 69, 72, 1958], "cow": [63, 64, 69, 72], "pig": [63, 64, 69, 72], "listunpack": [63, 68, 69], "args_0": [63, 68, 69], "args_1": [63, 68, 69], "args_2": [63, 68, 69], "nestedfunct": [63, 66], "nullcontextmanag": [63, 67], "nullcontext": [63, 67], "pytreeflatten": 63, "tree_flatten": 63, "x_2": [63, 1084, 1085, 1086, 1087, 1333, 1436, 1452, 1453, 1596, 1607], "dim1_x": [63, 72], "scalaroutput": [63, 72], "anim": 63, "moo": 63, "specializedattribut": 63, "staticforloop": [63, 68], "unrol": [63, 68, 2008, 2009, 2056, 2094], "ret": [63, 68, 2039, 2067], "add_3": [63, 68], "add_4": [63, 68], "add_5": [63, 68], "add_6": [63, 68], "add_7": [63, 68], "add_8": [63, 68], "add_9": [63, 68], "staticif": [63, 68], "tensorsetattr": [63, 65], "setattr": [63, 65, 2009], "typereflectionmethod": [63, 65], "overli": [63, 65, 2039, 2091], "typereflectionmethodrewrit": [63, 65], "userinputmut": [63, 76], "not_supported_yet": [63, 65, 70, 72, 77], "dynamicshaperound": [63, 65, 72], "modelattrmut": [63, 70], "attr_list": [63, 70], "recreate_list": [63, 70], "optionalinput": [63, 70], "unexpectedli": [63, 70, 485, 2074, 2078], "torchsymmin": [63, 77], "sym_min": [63, 77], "0x7ffb6e2880d0": [63, 77], "gain": [78, 1790, 2032, 2084, 2085, 2096, 2097], "fxe0010": [78, 2054], "diagnosticopt": [78, 80, 2054], "verbosity_level": [78, 80, 2054], "onnx_diagnost": [78, 80, 679], "fxe0008": [78, 2054], "onnxscript": [79, 2054, 2055, 2056], "torchlib": [79, 83], "fxonnxinterpret": 79, "onnx": [80, 81, 83, 84, 85, 679, 1751, 1752, 1770, 1771, 1772, 2005, 2026, 2062, 2084], "endors": 80, "noteworthi": 80, "_intern": [80, 85, 2074], "todo": [81, 82, 825, 859, 861, 862, 1191, 2083, 2093, 2099], "disregard": [83, 84, 86, 2091], "indexerror": [83, 1735, 1737], "typeerror": [83, 1740, 2039, 2060, 2079, 2104], "opschema": [83, 2054], "onnxfunct": [84, 86, 2054], "perfect": 84, "nearest": [84, 778, 784, 786, 1412, 1572, 1574, 1625, 1636, 1696, 1698, 1820, 1848, 2037], "highest": [84, 679, 1423, 1830, 1831, 1863, 2063, 2079], "stringent": 84, "op_level_debug": [84, 86, 2054], "elementwise_dtyp": 85, "_ref": 85, "type_promot": 85, "absent": [86, 2038], "signifi": 86, "g_cpu": 87, "g_cuda": 87, "clone_st": 87, "cloned_st": 87, "bytetensor": [87, 1036, 1037, 1076, 1077, 1218, 1379, 1386, 1868, 1960, 1986, 1987, 1997, 1998, 2066, 2075, 2078], "graphsafe_get_st": [87, 2037], "current_st": 87, "graphsafe_set_st": [87, 2037], "g_cuda_oth": 87, "2147483647": 87, "0x8000_0000_0000_0000": [87, 1358, 2066], "0xffff_ffff_ffff_ffff": [87, 1358, 2066], "random_devic": 87, "1516516984916": 87, "new_stat": [87, 1076, 1077, 1386, 1868, 1960, 1997, 1998, 2066], "void": [87, 1048, 2037, 2045, 2094], "g_cpu_oth": 87, "abs_": [91, 2007, 2025, 2078], "acosh": [95, 121, 867, 2007, 2025, 2057, 2098], "batch1": [98, 99, 150, 151, 685, 940, 2007], "batch2": [98, 99, 150, 151, 168, 685, 940, 2007], "tensor1": [100, 101, 102, 103, 686, 687, 1360, 1845, 2007], "tensor2": [100, 101, 102, 103, 313, 403, 686, 687, 1360, 1845, 2007], "mat1": [104, 105, 553, 688, 1230, 1286, 1370, 1893, 1897, 1898, 1912, 2007, 2098], "mat2": [104, 105, 412, 553, 688, 952, 1230, 1286, 1370, 1893, 1897, 1898, 1912, 2007, 2098], "mat": [106, 107, 539, 689, 1407, 1826, 1890, 1893, 1912, 2007, 2077], "vec1": [108, 109, 690, 2007], "vec2": [108, 109, 287, 460, 690, 1210, 1808, 2007], "keepdim": [111, 113, 114, 115, 117, 133, 134, 353, 391, 406, 408, 409, 410, 413, 428, 429, 430, 431, 452, 469, 478, 554, 564, 614, 692, 694, 695, 696, 698, 874, 875, 1287, 1318, 1322, 1335, 1353, 1363, 1365, 1366, 1368, 1371, 1410, 1411, 1412, 1413, 1528, 1665, 1764, 1817, 1820, 1914, 1915, 1919, 1964, 1965, 2007, 2025, 2073, 2098], "rtol": [112, 343, 693, 919, 920, 1254, 1320, 1323, 1772, 2006, 2007, 2079], "atol": [112, 343, 693, 919, 920, 1254, 1320, 1323, 1332, 1772, 2006, 2007, 2039, 2079], "08": [112, 343, 693, 950, 1254, 1312, 1453, 1533, 1669, 1776, 1777, 1778, 1780, 1786, 1787, 1790, 1803, 1874, 2007], "equal_nan": [112, 343, 693, 1254, 2007, 2079], "arcco": [120, 2007, 2057, 2079], "acosh_": [122, 2007, 2025], "arccosh": [122, 2007, 2057], "arcsin": [124, 881, 2007, 2057, 2072], "arcsinh": [126, 2007, 2057], "atan2_": [129, 2007, 2025], "arctan2": [129, 2007, 2057], "arctan": [130, 2007, 2057], "arctanh": [132, 2007, 2057], "asinh": [142, 869, 2007, 2025, 2057, 2072, 2098], "atan": [146, 630, 631, 870, 2007, 2025, 2057, 2072, 2098], "atanh": [148, 872, 2007, 2025, 2057, 2072, 2098], "wrt": [149, 919, 920], "60521": [149, 893], "issuecom": [149, 893], "867061780": [149, 893], "texttt": [152, 153, 693, 1254, 1423, 2079], "bernoulli": [153, 759, 1427, 1456, 1457, 1458, 1459, 1463, 1470, 1489, 1610, 1611, 1612, 1613, 1618, 2005, 2007, 2025, 2057, 2081], "preserve_format": [154, 169, 171, 174, 177, 178, 179, 188, 205, 208, 239, 266, 296, 324, 392, 524, 579, 969, 1107, 1161, 1769, 1829, 1831, 1833, 2003, 2039, 2075], "minlength": [155, 943, 2007], "bitwise_and": [157, 2007, 2057, 2098], "bitwise_left_shift": [159, 2007, 2057], "bitwise_not": [161, 2007, 2025, 2057, 2098], "bitwise_or": [163, 2007, 2057, 2098], "bitwise_right_shift": [165, 2007, 2057], "bitwise_xor": [167, 2007, 2057, 2098], "uint8": [171, 241, 616, 692, 698, 1158, 1818, 1821, 1822, 1845, 2062, 2074, 2075, 2077, 2078, 2107], "cauchi": [172, 2005, 2034, 2043, 2057, 2081], "dfrac": [172, 376, 607, 1453, 1607, 1724, 1725, 1758, 1761], "complex32": [178, 1446, 1447, 1448, 1600, 1601, 1602, 1770, 1860, 2078, 2079], "int8": [179, 447, 728, 944, 945, 946, 947, 948, 949, 1158, 1347, 1348, 1349, 1350, 2062, 2065, 2072, 2074, 2075, 2078, 2107], "input2": [182, 458, 459, 516, 759, 1436, 1452, 1453, 1511, 1528, 1596, 1606, 1607, 1649, 2007, 2033, 2056], "clamp_": [187, 2007, 2025], "uncoalesc": [189, 327, 1905], "coo": [189, 322, 327, 341, 613, 1230, 1893, 1897, 1902, 1903, 1904, 1905, 1906, 1907, 2005, 2016, 2075, 2079], "inttensor": [190, 207, 1240, 1355, 1356, 1461, 2075, 2078], "csr": [190, 207, 342, 582, 587, 1462, 1893, 1897, 1898, 1904, 1907, 2016, 2079], "sparse_csr": [190, 207, 582, 587, 1897, 1898, 1900, 1904, 1907, 2072], "nnz": [190, 543, 582, 583, 584, 586, 587, 1191, 1415, 1895, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 2013, 2072], "int32": [190, 207, 312, 320, 324, 446, 616, 956, 1107, 1119, 1120, 1155, 1158, 1159, 1296, 1307, 1308, 1309, 1327, 1355, 1438, 1818, 1855, 2062, 2072, 2074, 2075, 2078, 2096, 2107], "mkl": [190, 207, 2005, 2036, 2052, 2057, 2072, 2080, 2106], "routin": [190, 207, 876, 1338, 1892, 1920, 2072], "downcast": [190, 207], "to_sparse_csr": [190, 207, 583, 584, 1894, 1897, 1898, 2007, 2057, 2072], "conj_phys": [193, 987, 2007, 2057, 2072, 2098], "contiguous_format": [194, 330, 498, 499, 1106, 1709, 1716, 1717, 2075], "non_block": [195, 208, 579, 602, 1265, 1519, 1750, 2007, 2037, 2074, 2098], "copysign": [197, 2007, 2057], "fweight": [204, 994, 2007], "aweight": [204, 994, 2007], "sparse_dim": [217, 544, 545, 1893, 1897, 1901, 1905, 2007, 2057, 2072], "dim1": [224, 226, 227, 568, 591, 592, 1093, 1095, 1096, 1300, 1923, 1941, 2007, 2098], "dim2": [224, 226, 227, 1093, 1095, 1096, 1300, 2007, 2098], "digamma": [230, 2007, 2025, 2057, 2073, 2098], "laid": 232, "outermost": [232, 1219], "channels_last": [232, 1265, 1519, 1709, 1716, 1717, 2075], "rounding_mod": [234, 235, 236, 237, 1100, 1101, 1150, 1153, 1839, 1949, 2007, 2098], "split_size_or_sect": [240, 301, 618, 1908], "eq": [243, 2007, 2025, 2057, 2098], "erf": [246, 638, 639, 2007, 2025, 2057, 2072, 2073, 2098], "erfc": [248, 640, 641, 2007, 2025, 2057, 2073, 2098], "front": [253, 972, 1338, 1522, 2026, 2040], "lambd": [257, 297, 1474, 1557, 1628, 1686, 1773, 2007], "pdf": [257, 1438, 1883, 2034], "theori": [257, 2034, 2042], "fill_valu": [259, 445, 1160, 1161, 1438, 2007, 2037, 2098], "tall": [259, 1324, 1329, 2039], "start_dim": [262, 1144, 1464, 2007], "end_dim": [262, 1144, 1464, 2007], "float_pow": [268, 2007, 2057], "floor_divid": [272, 1100, 2007, 2057, 2072], "divisor": [275, 276, 488, 489, 767, 768, 1100, 1150, 1153, 1207, 1429, 1430, 1465, 1571, 1593, 1594, 1839, 1949], "fmod": [276, 1839, 2007, 2057, 2098], "mantissa": [279, 480, 1155, 1289, 1863, 2007, 2037, 2049, 2098], "gcd": [282, 2007, 2057, 2098], "geometr": [285, 778, 784, 1625, 1636, 1696, 1963, 2005, 2057, 2081, 2100], "ordin": [288, 1902, 1903, 1904, 1906, 1907, 2075], "greater_equ": [293, 2007, 2057], "hypot": [303, 2007, 2057, 2098], "igamma": [307, 2007, 2057, 2098], "igammac": [309, 2007, 2057, 2098], "3100": [310, 482, 1236, 1837], "3553j": [310, 482, 1236, 1837], "5445": [310, 482, 1236, 1837], "7896j": [310, 482, 1236, 1837], "6492": [310, 482, 1236, 1837], "0633j": [310, 482, 1236, 1837], "0638": [310, 482, 1236, 1837], "8119j": [310, 482, 1236, 1837], "3553": [310, 1236], "7896": [310, 1236], "0633": [310, 1236, 1312, 2027], "8119": [310, 1236], "index_add_": [311, 900, 902, 905, 1237, 1238, 2007, 2050], "index_copy_": [313, 2007], "index_fill_": [315, 2007, 2025], "index_put_": [317, 2007], "include_self": [320, 515, 516, 1239, 1854, 2007, 2098], "identit": 320, "floattensor": [320, 486, 685, 686, 687, 688, 689, 734, 919, 920, 940, 1461, 1462, 1522, 1563, 1861, 2075, 2078], "amax": [320, 516, 695, 696, 1897, 2007, 2057, 2098], "amin": [320, 516, 694, 696, 1897, 2007, 2057, 2098], "fill_": [320, 1265, 1291, 1519, 1840, 2007, 2025, 2046, 2074], "72": [320, 616, 1219, 2062], "uint8_t": [325, 1770], "retain_grad": [334, 2007, 2034, 2057], "requires_grad_": [334, 447, 1265, 1438, 1519, 1609, 1894, 1897, 1935, 2007, 2025, 2034, 2078, 2103], "n_fft": [350, 555, 1262, 1916, 2007], "hop_length": [350, 555, 1262, 1916, 2007], "win_length": [350, 555, 1262, 1916, 2007], "center": [350, 555, 778, 784, 1125, 1262, 1590, 1625, 1636, 1696, 1787, 1809, 1876, 1916, 2007, 2034, 2057, 2077], "onesid": [350, 555, 1262, 1916, 2007, 2098], "return_complex": [350, 555, 1262, 1916, 2007], "element_s": [352, 434, 2007, 2025, 2057, 2074], "lcm": [355, 2007, 2057], "ldexp": [357, 1155, 2007, 2057], "lerp": [361, 2007, 2057], "lt": [362, 394, 1188, 1292, 2006, 2007, 2025, 2057, 2089, 2092, 2098], "less_equ": [365, 2007, 2057], "lgamma": [367, 650, 651, 2007, 2057, 2098], "ln": [376, 1294, 2073], "logical_and": [382, 2007, 2057, 2098], "logical_not": [384, 1677, 2007, 2025, 2027, 2057, 2098], "logical_or": [386, 2007, 2057, 2098], "logical_xor": [388, 2007, 2057, 2098], "pivot": [395, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1355, 1356, 1357, 1819, 2007], "get_info": [395, 1355], "lu_data": [396, 1356, 1357, 2007], "lu_pivot": [396, 1356, 1357, 2007], "masked_fill_": [398, 1677, 2007, 2025, 2026], "booltensor": [399, 401, 734, 1359, 1563, 1972, 2075, 2078], "masked_scatter_": [400, 2007], "mvlgamma": [425, 2007, 2057], "posinf": [426, 427, 1409, 2007], "neginf": [426, 427, 1409, 2007], "nan_to_num": [427, 2007, 2057], "interpol": [430, 478, 784, 785, 786, 818, 1291, 1412, 1572, 1573, 1574, 1590, 1625, 1696, 1697, 1698, 1820, 1957, 2007, 2064], "ne": [438, 1724, 1758, 1766, 2007, 2025, 2057, 2098, 2103], "8182e": 444, "5765e": 444, "41": [444, 1108, 1324, 1699, 1757, 1819], "0545e": 444, "0949e": 444, "4842e": [444, 1108], "0000e": [444, 1108, 1148, 1343, 1352, 1409, 1757, 1874, 1876, 1877, 1882, 1883], "00": [444, 1108, 1148, 1343, 1352, 1409, 1757, 1771, 1874, 1876, 1877, 1882, 1883, 2006, 2056], "141592": [445, 1160], "1416": [445, 1089, 1160, 1935], "from_numpi": [447, 879, 880, 1859, 1935, 2013, 2094], "array_lik": [447, 879, 1902, 1903, 1904, 1905, 1906, 1907, 1935, 2027], "nextaft": [450, 2007, 2057, 2098], "fro": [452, 1297, 1318, 1322, 1335, 1735, 1744, 1764, 2007], "not_equ": [455, 2007, 2057], "resolve_conj": [457, 987, 2007, 2057], "resolve_neg": [457, 2007, 2057], "shorthand": [457, 1285], "input3": [459, 2007], "transpos": [459, 592, 593, 616, 691, 740, 741, 742, 964, 965, 1105, 1173, 1295, 1296, 1302, 1305, 1308, 1315, 1326, 1329, 1449, 1450, 1451, 1535, 1571, 1603, 1604, 1605, 1677, 1718, 1719, 1721, 1723, 1753, 1807, 1920, 1922, 1923, 1930, 1944, 2007, 2025, 2027, 2034, 2049, 2056, 2057, 2064, 2072, 2076, 2078, 2098], "polygamma": [465, 2007, 2057, 2073], "q_per_channel_axi": [472, 473, 2007, 2057], "zero_point": [473, 475, 737, 738, 739, 740, 741, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 769, 771, 772, 773, 774, 776, 779, 780, 798, 801, 818, 819, 820, 821, 824, 852, 1119, 1120, 1821, 1822, 1823, 1824, 1825, 2007, 2062, 2063], "qtensor": [477, 2007], "queu": [485, 1011, 1392, 1976, 2037], "life": [485, 1008], "cycl": [485, 893, 1008, 1181, 1795, 1801, 2034, 2061], "gc": [485, 2069], "poll": 485, "realloc": [485, 972, 1240, 2037], "counterintuit": [485, 2034], "s1": [485, 1181, 2091], "some_comm_op": 485, "wouldn": [485, 1194, 2069, 2093], "chrome": [485, 931, 2061, 2097, 2101], "export_chrome_trac": [485, 2061, 2101], "cudacachingalloc": [485, 2037, 2042], "enable_grad": [487, 2011, 2081], "0100": [487, 875, 1319, 1821], "0200": 487, "0300": [487, 2051], "maxnorm": [490, 491, 1840, 2007], "tile": [492, 2007, 2037, 2057, 2072, 2094], "repeat_interleav": [492, 1957, 2007, 2057, 2064], "output_s": [493, 740, 741, 742, 765, 766, 1420, 1421, 1422, 1424, 1425, 1426, 1450, 1465, 1466, 1467, 1515, 1516, 1517, 1571, 1584, 1585, 1586, 1587, 1588, 1589, 1619, 1620, 1621, 1653, 1654, 1655, 1841, 2007, 2027, 2098], "is_leaf": [494, 2007, 2025, 2027, 2057], "saved_weight": 495, "loaded_weight": 495, "5503": 495, "4926": [495, 2046], "1158": 495, "8303": 495, "1007": 495, "9853": 495, "2316": 495, "6606": 495, "resiz": [498, 499, 523, 544, 545, 1158, 1159, 1163, 1572, 1625, 1636, 2007, 2025, 2057, 2074, 2098], "set_": [498, 2007], "shift": [504, 945, 948, 1125, 1132, 1427, 1433, 1434, 1435, 1463, 1559, 1618, 1846, 1875, 2007, 2010], "decim": [506, 507, 1848, 2007, 2049, 2107], "scatter_": [511, 514, 1852, 2007], "scatter_add_": [512, 513, 1853, 1957, 2007], "scatter_reduce_": [512, 515, 1854, 2007], "axi": [512, 514, 516, 821, 824, 985, 1104, 1119, 1145, 1206, 1231, 1821, 1841, 1846, 1847, 1971, 2007, 2013, 2040, 2056, 2060, 2062, 2094, 2098, 2102], "4600": 512, "2300": 512, "scatter_reduc": [516, 1957, 2007, 2057, 2098], "sgn": [521, 1154, 1872, 2007, 2025, 2027, 2057, 2072], "untypedstorag": [523, 556, 612, 2005, 2051, 2074], "int16": [524, 1158, 1348, 2072, 2074, 2075, 2078, 2107], "dense_dim": [542, 544, 545, 582, 583, 584, 586, 587, 1905, 2007, 2057, 2072], "nse": [543, 2072], "6550": 543, "2397": 543, "1611": 543, "0779": [543, 1302, 1816, 1972], "2326": 543, "0558": 543, "4711": 543, "9678": 543, "5138": 543, "0411": 543, "9417": 543, "5158": 543, "0793": 543, "0036": [543, 1363], "2569": 543, "1055": 543, "sparse_coo": [543, 582, 1415, 1897, 1900, 1901, 1905, 2072, 2075], "split_siz": [546, 1908, 2007, 2098], "squeez": [552, 692, 694, 695, 696, 698, 1287, 1353, 1363, 1365, 1366, 1368, 1371, 1410, 1413, 1607, 1817, 1901, 1914, 1915, 1919, 1964, 1965, 2007, 2025, 2056, 2057, 2064, 2076, 2098], "pad_mod": [555, 1916, 2007], "typedstorag": [556, 2005, 2051, 2074], "untyped_storag": 556, "compute_uv": [566, 1329, 1330, 1920, 2007], "axis0": [567, 1922, 2007], "axis1": [567, 1922, 2007], "dim0": [568, 591, 592, 1923, 1941, 2007], "indices_or_sect": [577, 1103, 1229, 1936, 1970], "5044": 579, "0005": [579, 1799, 1805], "3310": 579, "0584": [579, 1920], "cuda0": [579, 2037, 2044, 2078], "masked_grad": [580, 2007], "sparse_mask": [580, 2007, 2057], "mkldnn": [581, 1275, 2005, 2057], "sparsedim": 582, "blocksiz": [582, 583, 584, 1902, 1903, 1904, 2007, 2072], "sparse_csc": [582, 586, 1900, 1904, 1906, 2072], "sparse_bsr": [582, 584, 1903, 1904, 2072], "sparse_bsc": [582, 583, 1902, 1904, 2072], "bsr": [582, 584, 1903, 1904, 2079], "bsc": [582, 583, 1902, 1904, 2079], "csc": [582, 586, 1904, 1906, 2079], "minu": [582, 583, 584, 586, 587, 2073], "crow_indic": [582, 584, 587, 1895, 1897, 1898, 1900, 1903, 1904, 1907, 2007, 2057, 2072, 2079], "col_indic": [582, 584, 587, 1897, 1898, 1900, 1903, 1904, 1907, 2007, 2057, 2072, 2079], "sparsecsr": [582, 1941, 2072], "row_indic": [583, 586, 1902, 1906, 2007, 2057, 2072, 2079], "ccol_indic": [583, 586, 1902, 1906, 2007, 2057, 2072, 2079], "_nnz": [585, 586, 587, 2057], "012766935862600803": 588, "5415473580360413": 588, "08909505605697632": 588, "7729271650314331": 588, "unitriangular": [593, 1328, 1944, 2007], "tril": [595, 1580, 1581, 1582, 1677, 2007, 2057, 2094], "triu": [597, 1729, 1944, 2007, 2056, 2057, 2094], "trunc": [601, 676, 677, 686, 1100, 1143, 1150, 1153, 1848, 2007, 2025, 2057, 2072, 2098], "sizedim": 606, "return_invers": [608, 609, 1953, 1954, 2007], "return_count": [608, 609, 1953, 1954, 2007], "unsqueez": [611, 1125, 1286, 1326, 1461, 1539, 1729, 1938, 2007, 2039, 2057, 2064, 2072, 2076, 2077, 2098], "subspac": [616, 1329, 1525, 1809, 1920, 1921], "span": [616, 1066, 1067, 1454, 1920, 2061, 2067], "foral": 616, "proportion": [616, 784, 1572, 1696], "9482": [616, 1242], "0310": 616, "4999": 616, "5316": 616, "1520": 616, "7472": 616, "5617": 616, "8649": 616, "4724": [616, 2046], "0334": 616, "2976": 616, "8499": 616, "2109": 616, "9913": 616, "9607": 616, "6123": 616, "1064483442": 616, "1124191867": 616, "1069546515": 616, "1089989247": 616, "1105482831": 616, "1061112040": 616, "1057999968": 616, "1084397505": 616, "1071760287": 616, "1123489973": 616, "1097310419": 616, "1084649136": 616, "1101533110": 616, "1073668768": 616, "1082790149": 616, "1088634448": 616, "1000000000": 616, "0047": 616, "0310j": 616, "5316j": 616, "7472j": 616, "8649j": 616, "0334j": 616, "8499j": 616, "9913j": 616, "6123j": 616, "202": 616, "154": [616, 2052], "59": [616, 1946, 1948], "182": 616, "243": [616, 1262, 1920], "253": 616, "188": 616, "185": [616, 2103], "252": [616, 2052], "191": 616, "63": [616, 2052, 2062], "240": 616, "227": 616, "165": 616, "190": 616, "146": 616, "106": 616, "205": 616, "112": [616, 2103], "206": 616, "189": 616, "95": [616, 1797, 1800, 1801], "147": 616, "43": 616, "246": [616, 2103], "87": 616, "235": 616, "226": 616, "254": [616, 2052], "111": [616, 1771, 2056], "117": 616, "177": 616, "28": [616, 745, 1088, 1942, 2054, 2056, 2091, 2092, 2097], "xlogi": [621, 2007, 2057, 2073], "inductor": [679, 972, 2015, 2057, 2062, 2084, 2085, 2088, 2089, 2090, 2091, 2092, 2094, 2096, 2097, 2100, 2101, 2103, 2105], "dist_c10d": 679, "dist_ddp": [679, 2038], "dist_fsdp": 679, "aot_graph": [679, 2015], "aot_joint_graph": [679, 2015], "ddp_graph": [679, 2015, 2038], "graph_cod": [679, 2015, 2091], "graph_break": [679, 2015, 2088, 2091, 2094, 2095, 2101], "graph_siz": [679, 2091], "recompiles_verbos": 679, "trace_sourc": 679, "trace_cal": 679, "output_cod": [679, 2015, 2094, 2096, 2103], "perf_hint": [679, 972], "post_grad_graph": 679, "cudagraph": [679, 972, 1039, 2037, 2084, 2094, 2096, 2097, 2100], "sym_nod": 679, "toggl": [679, 2037], "suppress": [679, 2009, 2066], "silenc": 679, "lowest": [679, 962, 1409, 1734, 1735, 1743, 1744, 1830, 1831, 2039, 2079], "notset": 679, "torchinductor": [679, 2015, 2084, 2085, 2090, 2092, 2094, 2096], "ddpoptim": [679, 2015], "symnod": [679, 2090], "opter": 679, "unregist": [679, 2015, 2021, 2056], "cosin": [682, 683, 991, 992, 1452, 1453, 1607, 1793, 1794, 1801, 1878, 2058, 2094], "3348": 682, "5889": 682, "2005": [682, 1965, 2103], "1584": 682, "2294": [682, 1365], "2004": 682, "3690": 682, "7298": [682, 1838], "hyperbol": [683, 882, 885, 992, 1560, 1887, 1934], "uniform_": [683, 885, 942, 2005, 2007, 2025, 2032, 2039, 2073, 2081], "3192": 683, "9915": 683, "9674": 683, "7151": 683, "7791": 683, "3120": [683, 989], "2979": 683, "1341": 683, "_i": [684, 685, 686, 687, 688, 940, 942, 945, 948, 952, 967, 1100, 1150, 1289, 1291, 1404, 1568, 1812, 1816, 1832, 1835, 1870, 1917, 1972, 2073], "0202": 684, "0985": 684, "3506": [684, 1355], "6056": 684, "3944": 684, "9732": 684, "3497": 684, "6245": [684, 1297], "4022": [684, 1920], "3743": 684, "7724": 684, "5811": 684, "8017": 684, "7695": 684, "3930": 684, "3672": [684, 1004, 1298], "1450": [684, 1901], "6971": 684, "0736": [684, 2046], "0994": 684, "3216": 684, "7845": 684, "1610": 684, "1868": 684, "4090": 684, "9902": [684, 1004, 1298], "3667": [684, 989], "3925": 684, "6147": 684, "sum_": [685, 1262, 1317, 1334, 1428, 1429, 1430, 1446, 1447, 1448, 1454, 1486, 1487, 1488, 1507, 1522, 1526, 1528, 1914, 1915, 1916, 1937, 1942, 1964, 1965, 1966, 2073], "mathbin": [685, 688, 689, 940, 952, 1898], "doubletensor": [685, 686, 687, 688, 689, 940, 1861, 2075, 2078], "tensorfloat32": [685, 688, 940, 952, 1360, 1370, 1446, 1447, 1448, 1449, 1450, 1451, 1506, 1600, 1601, 1602, 1603, 1604, 1605, 1642, 1863, 2037, 2049], "6311": 685, "0503": 685, "9768": [685, 2046], "0362": 685, "1653": 685, "8185": 685, "4255": [685, 1404], "6760": 685, "9453": 685, "5743": 685, "8202": 685, "3691": 685, "0943": 685, "1109": [685, 1472, 1883], "4730": [685, 1937], "histor": [686, 1061, 1458, 2036, 2046, 2051], "2312": [686, 1901], "6496": 686, "1312": 686, "0428": 686, "4292": 686, "1030": 686, "5369": 686, "9829": 686, "0430": 686, "8635": 687, "6391": 687, "6174": 687, "7617": 687, "5879": 687, "7388": 687, "8353": 687, "6249": 687, "6511": 687, "8716": 688, "4671": 688, "3746": 688, "7573": 688, "9555": 688, "8681": 688, "3768": 689, "5565": 689, "otim": [690, 1286, 1469, 1624], "conj": [691, 988, 1121, 1122, 1124, 1126, 1133, 1135, 1139, 1140, 1142, 1295, 1296, 1302, 1304, 1323, 1843, 1844, 2007, 2039, 2043, 2057, 2078, 2098], "mh": [691, 963, 964, 965, 1302, 1920, 2007, 2057, 2076, 2078], "lvert": [693, 1254, 1568, 1662, 2079], "rvert": [693, 1254, 2079], "leq": [693, 941, 942, 989, 1123, 1125, 1254, 1286, 1290, 1305, 1311, 1438, 1460, 1522, 1524, 1526, 1609, 1661, 1664, 1873, 1916, 2032, 2073], "elementwis": [693, 989, 1020, 1047, 1048, 1148, 1150, 1419, 1481, 1482, 1483, 1686, 1963, 2009, 2027, 2043, 2073], "07": [693, 818, 819, 820, 821, 824, 963, 1108, 1303, 1306, 1311, 1323, 1324, 1330, 1353, 1356, 1723, 1772, 1779, 1877, 1882, 1920, 2056], "09": [693, 1779, 1791, 2013, 2079], "8177": 694, "4878": 694, "2491": 694, "9130": 694, "7158": 694, "1775": 694, "0992": 694, "4817": 694, "0053": 694, "0164": 694, "3738": 694, "0507": [694, 2056], "9700": 694, "1106": 694, "0318": 694, "0816": [694, 1355], "6451": 695, "4866": [695, 2085], "2987": 695, "3312": 695, "5744": 695, "2980": [695, 2027], "8397": 695, "2713": 695, "9128": 695, "9214": 695, "7268": 695, "2995": 695, "9023": [695, 1296], "4853": 695, "9075": 695, "6165": 695, "180": [697, 1089, 1827], "14159": [697, 1935], "135": 697, "45": [697, 1434, 1435, 1482, 1483, 1559, 1757, 2056], "ao": [699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 2062, 2063, 2064], "batch_norm": [699, 700, 1275, 2007, 2057], "fuse": [699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 791, 792, 801, 803, 804, 805, 813, 847, 859, 860, 972, 1279, 1280, 1677, 1716, 1717, 1718, 1719, 1720, 1721, 1776, 1777, 1789, 1863, 2019, 2025, 2028, 2056, 2058, 2062, 2063, 2064, 2065, 2094, 2096, 2102], "3d": [700, 703, 706, 734, 739, 742, 766, 768, 773, 778, 1367, 1422, 1426, 1430, 1433, 1435, 1448, 1451, 1458, 1459, 1465, 1467, 1481, 1483, 1488, 1514, 1525, 1572, 1586, 1589, 1590, 1594, 1602, 1605, 1613, 1619, 1621, 1636, 1648, 1652, 1664, 1696, 2027, 2049, 2062, 2072, 2077], "bn": [701, 702, 703, 704, 705, 706, 813, 860, 1105, 1275, 1718, 1720, 2051, 2058, 2062, 2063], "qat": [711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 729, 730, 731, 732, 791, 792, 846, 2062, 2063, 2064], "dilat": [711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 771, 772, 773, 781, 782, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1495, 1496, 1497, 1498, 1499, 1500, 1512, 1513, 1514, 1571, 1600, 1601, 1602, 1603, 1604, 1605, 1619, 1650, 1651, 1652, 1695, 1824, 1825, 2007, 2056, 2098], "padding_mod": [711, 712, 713, 714, 715, 716, 717, 718, 724, 725, 726, 729, 730, 737, 738, 739, 740, 741, 742, 771, 772, 773, 1446, 1447, 1448, 1449, 1450, 1451, 1495, 1496, 1497, 1498, 1499, 1500, 1625, 2007, 2098], "momentum": [711, 712, 713, 714, 715, 716, 722, 723, 735, 736, 750, 751, 752, 1433, 1434, 1435, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1559, 1595, 1635, 1780, 1787, 1789, 1795, 1801, 1803, 2007, 2046, 2048, 2058, 2098], "freeze_bn": [711, 712, 713, 714, 715, 716], "qconfig": [711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 787, 788, 790, 793, 794, 795, 796, 837, 838, 839, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 861, 862, 2083], "batchnorm1d": [711, 714, 1492, 1559, 1595, 2051, 2064], "fakequant": [711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 732, 801, 862], "weight_fake_qu": [711, 712, 713, 714, 715, 716, 717, 718, 729, 730], "quant": [711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 731, 789, 791, 792, 837, 861, 862, 1119, 1120, 2062, 2063], "batchnorm3d": [713, 716, 718, 723, 1494, 1559, 1595, 2064], "num_featur": [722, 723, 735, 736, 750, 751, 752, 1265, 1433, 1434, 1435, 1481, 1482, 1483, 1492, 1493, 1494, 1501, 1502, 1503, 1519, 1559, 1627, 2046], "qint8": [727, 728, 755, 760, 763, 764, 771, 772, 773, 780, 791, 793, 798, 819, 841, 858, 859, 861, 862, 1770, 1821, 1822, 2062, 2064, 2065, 2074, 2078, 2079], "from_float": [731, 737, 738, 739, 744, 745, 755, 763, 796, 816, 822, 825, 837, 2062], "qparams_dict": [731, 737, 738, 739, 763], "hidden_s": [733, 759, 760, 764, 1470, 1471, 1489, 1490, 1535, 1536, 1537, 2007], "num_lay": [733, 759, 1470, 1489, 1535, 1536, 1564, 1566, 2007, 2046], "batch_first": [733, 734, 759, 1470, 1489, 1525, 1535, 1536, 1563, 1565, 1567, 1751, 1753, 1754, 1756, 2007, 2041], "bidirect": [733, 759, 1470, 1489, 1535, 1536, 2007], "_lstmlayer": 733, "nnqa": 733, "h0": [733, 759, 761, 1470, 1489, 1535], "c0": [733, 761, 1489, 2103], "hn": [733, 759, 761, 1470, 1471, 1489, 1535], "cn": [733, 761, 1265, 1489, 1832], "weight_ih": [733, 1471, 1490, 1535, 1537], "weight_hh": [733, 1471, 1490, 1535, 1537], "embed_dim": [734, 1525], "num_head": [734, 1525, 1579, 2007], "add_bias_kv": [734, 1525], "add_zero_attn": [734, 1525, 2007], "kdim": [734, 1525], "vdim": [734, 1525], "dequant": [734, 787, 789, 791, 792, 798, 800, 861, 2007, 2057, 2063, 2065, 2079, 2082], "mha": [734, 1525, 2005], "conver": 734, "key_padding_mask": [734, 1525, 2007], "need_weight": [734, 1525, 2007], "attn_mask": [734, 1525, 1563, 1677, 2007], "average_attn_weight": [734, 1525, 2007], "is_caus": [734, 1525, 1566, 1567, 1582, 1677, 2007], "attn_output_weight": [734, 1525], "unmask": [734, 1563], "attn_weight": [734, 1525, 1677], "head": [734, 1423, 1525, 1563, 1565, 1567], "attn_output": [734, 1525], "quint8": [737, 738, 739, 740, 741, 742, 744, 745, 755, 771, 772, 773, 780, 791, 793, 798, 818, 819, 820, 821, 824, 826, 859, 861, 1770, 1821, 1822, 1823, 1824, 1825, 2062, 2064, 2065, 2074, 2078, 2079], "learnabl": [737, 738, 739, 740, 741, 742, 744, 745, 755, 759, 763, 1433, 1434, 1435, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1461, 1462, 1470, 1471, 1473, 1481, 1482, 1483, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1527, 1534, 1535, 1537, 1559, 1617, 1670, 1708, 2046, 2058], "q_input": [737, 738, 739, 740, 741, 742, 771, 772, 773], "quantize_per_tensor": [737, 738, 739, 740, 741, 742, 755, 756, 757, 771, 772, 773, 1823, 1824, 1825, 2007, 2057, 2062], "unequ": [738, 739, 740, 741, 742, 1447, 1448, 1450, 1451], "50": [738, 740, 741, 742, 771, 823, 1321, 1429, 1430, 1438, 1446, 1447, 1448, 1450, 1451, 1466, 1467, 1486, 1487, 1488, 1512, 1513, 1514, 1570, 1602, 1603, 1605, 1609, 1620, 1621, 1788, 1932, 2027, 2037, 2077, 2094], "56": [739, 1955, 2072, 2097], "output_pad": [740, 741, 742, 1449, 1450, 1451, 1498, 1499, 1500, 1603, 1604, 1605, 2007, 2098], "qnnpack": [740, 741, 755, 763, 855, 856, 859, 861, 862, 2062, 2064], "convtranspose2d": [740, 1499, 1604, 1716, 1957, 2064], "nnq": [740, 741, 742, 787, 788, 789, 864, 2062], "downsampl": [740, 741, 742, 1450, 1572, 1590, 1625, 1636], "upsampl": [740, 741, 742, 778, 785, 786, 818, 1450, 1573, 1574, 1590, 1625, 1636, 1697, 1698], "fbgemm": [741, 742, 755, 763, 832, 855, 856, 859, 861, 862, 2013, 2062, 2063, 2094, 2095], "cubic": [742, 1467, 1621, 1625], "num_embed": [744, 745, 1461, 1462, 1617], "embedding_dim": [744, 745, 1461, 1462, 1491, 1616, 1617], "padding_idx": [744, 1461, 1462, 1616, 1617, 2007, 2098], "scale_grad_by_freq": [744, 745, 1461, 1462, 1616, 1617, 2007, 2098], "_weight": [744, 745, 1461, 1462, 1780, 1786, 2102], "overwritten": [744, 745, 755, 763, 796, 841, 861, 2034, 2039, 2079, 2088], "_embed": [744, 745], "_dim": [744, 745, 1461], "include_last_offset": [745, 1462, 1617, 2007, 2098], "embedding_bag": [745, 2007, 2057], "floatfunct": [746, 2062], "activation_post_process": [746, 798, 2062], "add_relu": [746, 747, 756, 2019, 2057, 2082], "add_scalar": [746, 747, 756, 2057, 2077, 2082], "mul_scalar": [746, 747, 756, 2057, 2082], "collector": 747, "f_add": 747, "num_channel": [748, 1473, 2026], "normalized_shap": [753, 1491, 1534, 1639, 1674, 1708, 2007, 2027, 2098], "elementwise_affin": [753, 1491, 1534, 1708], "negative_slop": [754, 779, 1505, 1640, 1641, 2007, 2032, 2098], "slope": [754, 779, 1505, 1551, 2032], "bias_": [755, 763], "_featur": [755, 763, 780, 1423, 1436, 1504, 1506, 1596, 1642], "from_refer": [755, 763], "ref_qlinear": [755, 763], "output_scal": [755, 758, 1823, 2007], "output_zero_point": [755, 758, 1823, 2007], "q_add": 756, "qint32": [756, 757, 1770, 1821, 1822, 2062, 2065, 2074, 2078, 2079], "x_0": [757, 1942], "gate": [759, 760, 1469, 1470, 1471, 1489, 1549, 1624, 1680], "r_t": [759, 1470, 1786], "w_": [759, 1421, 1422, 1425, 1426, 1429, 1430, 1432, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1450, 1451, 1454, 1466, 1467, 1470, 1471, 1487, 1488, 1489, 1490, 1513, 1514, 1516, 1517, 1526, 1531, 1532, 1535, 1537, 1541, 1542, 1543, 1544, 1545, 1546, 1572, 1573, 1574, 1575, 1576, 1577, 1621, 1625], "x_t": [759, 895, 899, 900, 905, 906, 1433, 1434, 1435, 1470, 1481, 1482, 1483, 1489, 1535, 1559, 1774], "b_": [759, 1470, 1471, 1489, 1490, 1507, 1535, 1537, 1937, 2072], "hr": [759, 1470, 1471, 1489, 2043], "h_": [759, 1421, 1422, 1425, 1426, 1429, 1430, 1436, 1441, 1442, 1444, 1445, 1447, 1448, 1450, 1451, 1466, 1467, 1470, 1471, 1487, 1488, 1489, 1506, 1513, 1514, 1515, 1516, 1517, 1531, 1532, 1535, 1537, 1542, 1543, 1545, 1546, 1572, 1573, 1574, 1576, 1577, 1596, 1621, 1625], "z_t": [759, 1470], "iz": [759, 1470, 1471], "hz": [759, 1016, 1470, 1471, 2077], "n_t": [759, 1470], "odot": [759, 1470, 1471, 1489, 1490], "h_t": [759, 1470, 1489, 1535], "hadamard": [759, 1470, 1471, 1489, 1490], "multilay": [759, 1470, 1489, 2054], "_t": [759, 1470, 1489, 1787, 1789, 2039, 2058], "b_ih": [759, 1470, 1471, 1489, 1490, 1535, 1537, 2007], "b_hh": [759, 1470, 1471, 1489, 1490, 1535, 1537, 2007], "h_0": [759, 1470, 1489, 1490, 1535], "seq_len": [759, 1470, 1489, 1525, 1535], "pack_padded_sequ": [759, 1470, 1489, 1535, 1750, 1752, 1753, 2041], "num_direct": [759, 1470, 1489, 1535], "h_n": [759, 1470, 1489, 1535], "_size": [759, 1420, 1421, 1422, 1424, 1425, 1426, 1428, 1429, 1430, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1466, 1467, 1470, 1471, 1486, 1487, 1488, 1489, 1490, 1512, 1513, 1514, 1515, 1516, 1517, 1535, 1537, 1571, 1621], "_layer": [759, 1470, 1489, 1535], "_direct": 759, "output1": [759, 1423, 2033, 2056], "output2": [759, 1423], "weight_ih_l": [759, 1470, 1489, 1535], "w_ir": [759, 1470], "w_iz": [759, 1470], "w_in": [759, 1470], "weight_hh_l": [759, 1470, 1489, 1535], "w_hr": [759, 1470], "w_hz": [759, 1470], "w_hn": [759, 1470], "bias_ih_l": [759, 1470, 1489, 1535], "b_ir": [759, 1470], "b_iz": [759, 1470], "b_in": [759, 1470], "bias_hh_l": [759, 1470, 1489, 1535], "b_hr": [759, 1470], "b_hz": [759, 1470], "b_hn": [759, 1470], "mathcal": [759, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1461, 1462, 1470, 1471, 1489, 1490, 1504, 1506, 1535, 1537, 1538, 1559, 1832, 2032, 2043], "subtli": [759, 1470, 1789], "gru": [760, 1471, 1536, 2007, 2037, 2057, 2062, 2064], "cell": [760, 762, 764, 1470, 1471, 1489, 1490, 1535, 1537], "hx": [760, 762, 764, 1471, 1490, 1537, 2007], "cx": [762, 1490, 2007], "nonlinear": [764, 1431, 1452, 1478, 1535, 1537, 1547, 2005, 2032, 2072], "elman": [764, 1535, 1537], "adaptiveavgpool2d": [765, 1585, 1957, 2064], "adaptiveavgpool3d": [766, 1586, 1957, 2064], "ceil_mod": [767, 768, 781, 782, 1428, 1429, 1430, 1486, 1487, 1488, 1512, 1513, 1514, 1592, 1593, 1594, 1646, 1647, 1648, 1650, 1651, 1652, 1824, 1825, 2007, 2098], "count_include_pad": [767, 768, 1428, 1429, 1430, 1592, 1593, 1594, 2007, 2098], "divisor_overrid": [767, 768, 1429, 1430, 1593, 1594, 2007, 2098], "kh": [767, 768, 772, 773, 1429, 1430, 1466, 1467, 1513, 1514, 1593, 1594, 1601, 1602, 1604, 1605, 1620, 1621, 1651, 1652], "kw": [767, 768, 772, 773, 1429, 1430, 1466, 1467, 1513, 1514, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1620, 1621, 1650, 1651, 1652], "sh": [767, 768, 772, 773, 1593, 1594, 1601, 1602, 1604, 1605, 1651, 1652, 2103], "sw": [767, 768, 771, 772, 773, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1650, 1651, 1652], "avgpool2d": [767, 1593, 2064], "_channel": [767, 768, 771, 772, 773, 1446, 1447, 1448, 1449, 1450, 1451, 1473, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1650, 1651, 1652, 2067], "ih": [767, 768, 772, 773, 1535, 1537, 1593, 1594, 1601, 1602, 1604, 1605, 1651, 1652], "iw": [767, 768, 771, 772, 773, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1650, 1651, 1652], "padh": [767, 768, 772, 773, 1593, 1594, 1601, 1602, 1604, 1605], "padw": [767, 768, 771, 772, 773, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605], "kd": [768, 773, 1430, 1514], "padd": [768, 773], "formul": [769, 1437, 1460, 1474, 1509, 1556, 1557, 1644, 1662, 1677, 2043, 2072], "min_": [770, 1301, 1302, 1311, 1329, 1920], "max_": [770, 1512, 1513, 1514, 1724, 1758], "convolv": [771, 772, 773, 1446, 1447, 1448, 1449, 1450, 1451, 1495, 1496, 1497, 1498, 1499, 1500, 1600, 1601, 1602, 1603, 1604, 1605], "dw": [771, 772, 773, 1600, 1601, 1602, 1603, 1604, 1605], "qf": [771, 772, 773], "dtype_input": [771, 772, 773], "dtype_filt": [771, 772, 773], "q_filter": [771, 772, 773], "dh": [772, 773, 1601, 1602, 1604, 1605], "dd": 773, "scale_factor": [778, 784, 785, 786, 1572, 1573, 1574, 1636, 1677, 1696, 1697, 1698, 2007, 2098], "align_corn": [778, 784, 785, 1572, 1573, 1590, 1625, 1636, 1696, 1697, 2007, 2098], "height": [778, 784, 1429, 1430, 1447, 1448, 1450, 1451, 1487, 1488, 1513, 1514, 1526, 1554, 1572, 1636, 1696, 2026], "spatial": [778, 784, 785, 786, 960, 1125, 1434, 1465, 1491, 1531, 1532, 1554, 1571, 1572, 1573, 1574, 1590, 1625, 1636, 1666, 1667, 1668, 1696, 1697, 1698], "pixel": [778, 784, 786, 1447, 1454, 1457, 1458, 1459, 1463, 1526, 1531, 1532, 1572, 1590, 1625, 1636, 1696, 1698], "corner": [778, 784, 951, 1572, 1580, 1581, 1582, 1590, 1625, 1636, 1696, 2054], "leakyrelu": [779, 1520, 1640, 2046, 2064], "_slope": [779, 1505, 1640, 2032], "xa": [780, 1315, 1326, 1327, 1328, 1506, 1642], "return_indic": [781, 782, 1424, 1425, 1426, 1466, 1467, 1512, 1513, 1514, 1515, 1516, 1517, 1587, 1588, 1589, 1620, 1621, 1650, 1651, 1652, 2007], "maxpool1d": [781, 1515, 1650, 1653, 2064], "linearli": [784, 1170, 1324, 1572, 1696, 1798, 1819, 2041, 2058, 2065], "neighbour": [786, 1507, 1636, 1698], "stub": [787, 788, 2059], "calibr": [787, 788, 796, 837, 838, 857, 859, 861, 2033, 2062, 2063, 2065, 2083], "quantstub": [789, 2062], "dequantstub": [789, 2062], "quantwrapp": 790, "backend_config": [791, 792, 793, 794, 795, 816, 817, 859, 860, 861, 862, 2083], "backendpatternconfig": [791, 861], "blob": [791, 1163, 2043, 2045, 2077, 2102], "dtypeconfig": [791, 792, 794, 861], "observationtyp": [791, 792, 861, 2064], "weighted_int8_dtype_config": [791, 861], "input_dtyp": [791, 793, 861, 2064], "output_dtyp": [791, 793, 861, 2064, 2098], "weight_dtyp": [791, 793, 861, 2064], "bias_dtyp": [791, 793, 2064], "fuse_conv2d_relu": 791, "is_qat": [791, 792], "convrelu2d": [791, 2064], "linear_config": 791, "set_observation_typ": [791, 792, 861], "output_use_different_observer_as_input": [791, 792, 795, 861, 2064], "add_dtype_config": [791, 792, 861], "set_root_modul": [791, 792], "set_qat_modul": [791, 792], "set_reference_quantized_modul": [791, 792], "conv_relu_config": 791, "set_fused_modul": [791, 792], "set_fuser_method": [791, 792], "fused_conv_relu_config": 791, "my_backend": [791, 2089], "set_backend_pattern_config": [791, 861], "from_dict": [791, 792, 793, 814, 815, 816, 854], "backend_config_dict": [791, 2062], "set_nam": 791, "to_dict": [791, 792, 793, 814, 815, 816, 854], "backendconfig": [792, 817, 859, 861, 2065], "dtype_config": [792, 2064], "backend_pattern_config_dict": 792, "observation_typ": [792, 2064], "qat_modul": [792, 2064], "reference_quantized_modul": 792, "fused_modul": [792, 2064], "fuser_method": [792, 813, 2064], "pattern_complex_format": 792, "set_dtype_config": 792, "fuser": [792, 1279, 2006], "fuse_linear_relu": 792, "linearrelu": [792, 2064], "8bea7180a8ba3c279f2c9b050f2a69a6": 792, "understood": [792, 959], "output_share_observer_with_input": [792, 795, 2064], "renam": [792, 1958, 1960, 2007, 2013, 2025, 2026, 2057, 2097], "quantdequantstub": 792, "set_pattern": 792, "is_dynam": [793, 798, 818, 819, 820, 821, 823, 824, 825, 2064], "quant1": 793, "dequant1": 793, "fp32_linear": 793, "quant2": 793, "dequant2": 793, "bracket": [793, 2068], "dtype_config1": 793, "dtype_config2": 793, "dtypewithconstraint": [793, 2064], "quant_min_lower_bound": [793, 794, 2064], "quant_max_upper_bound": [793, 794, 2064], "255": [793, 801, 1119, 1120, 1159, 1625, 1636, 1696, 2062, 2064, 2077], "input_dtype_with_constraint": 793, "scale_min_lower_bound": [793, 794, 2064], "scale_max_upper_bound": [793, 794, 2064], "dtype_config_dict": 793, "bias_typ": [793, 861], "scale_exact_match": [794, 2064], "zero_point_exact_match": [794, 2064], "quant_min": [794, 798, 801, 818, 819, 820, 821, 824, 825, 1119, 1120, 2007, 2062], "quant_max": [794, 798, 801, 818, 819, 820, 821, 824, 825, 1119, 1120, 2007, 2062], "fixedqparamsobserv": 794, "fixedqparamsfakequant": 794, "input_output_not_observ": [795, 2064], "remove_qconfig": 796, "is_refer": 796, "convert_custom_config_dict": [796, 814, 2062], "from_observ": [796, 814, 2062], "observed_to_quantized_custom_module_class": [796, 814, 2062], "observedcustommodul": [796, 814, 816, 837, 2062], "quantizedcustommodul": [796, 814], "calib_data": 797, "fake_quant": [798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 862, 1119, 1120, 2083], "movingaverageminmaxobserv": [798, 801, 821], "observer_kwarg": [798, 801], "x_out": [798, 801], "quanti": 798, "choose_qparam": 798, "dq": 798, "fake_quant_en": 798, "observer_en": 798, "calculate_qparam": [799, 818, 819, 823], "extra_repr": [800, 1265, 1519, 1534, 1708, 2039], "qscheme": [801, 818, 819, 820, 821, 824, 825, 826, 2007, 2057, 2062, 2065, 2079], "fake_qu": [802, 806, 807, 808, 2062], "default_fake_qu": 803, "default_per_channel_weight_fake_qu": 804, "default_weight_fake_qu": 805, "histogram": [806, 818, 830, 1226, 1228, 2007, 2057, 2077], "memoryless": [807, 808], "averaging_const": [807, 808, 820, 821, 2007], "modules_to_fus": 813, "fuser_func": 813, "fuse_known_modul": 813, "fuse_custom_config_dict": [813, 815], "convmodul": 813, "bnmodul": 813, "convbnmodul": 813, "additional_fuser_method_map": 813, "fuse_conv_bn": [813, 2064], "conv1": [813, 1277, 1519, 1548, 2006, 2054, 2062, 2077], "bn1": 813, "relu1": [813, 1548, 1699], "fused_m": 813, "custom_config": [814, 815, 816, 817], "convert_fx": [814, 2062, 2083], "convert_custom_config": [814, 859, 2062], "set_observed_to_quantized_map": 814, "set_preserved_attribut": [814, 815, 816], "attr1": [814, 815, 816, 2056], "attr2": [814, 815, 816, 2056], "floatcustommodul": [814, 816], "weight_onli": [814, 859, 2018, 2062], "preserved_attribut": [814, 815, 816], "observed_class": [814, 816], "quantized_class": 814, "quant_typ": [814, 816], "quanttyp": [814, 816], "fuse_fx": [815, 2062], "fuse_custom_config": [815, 860], "convertcustomconfig": [815, 859], "prepare_fx": [816, 839, 859, 862, 2062, 2083], "prepare_qat_fx": [816, 859, 2062], "prepare_custom_config": [816, 817, 861, 862, 2062], "set_standalone_module_nam": 816, "module1": [816, 854, 2037], "qconfig_map": [816, 817, 854, 855, 856, 859, 861, 862, 2062], "child_prepare_custom_config": 816, "set_standalone_module_class": 816, "mystandalonemodul": 816, "set_float_to_observed_map": 816, "set_non_traceable_module_nam": 816, "module2": [816, 854, 2037], "module3": [816, 2037], "set_non_traceable_module_class": 816, "nontraceablemodule1": 816, "nontraceablemodule2": 816, "set_input_quantized_index": 816, "set_output_quantized_index": 816, "prepare_custom_config_dict": [816, 837, 839, 2062], "standalone_module_nam": 816, "standalone_module_class": 816, "module_class": 816, "float_to_observed_custom_module_class": [816, 837, 2062], "non_traceable_module_nam": 816, "non_traceable_module_class": 816, "input_quantized_idx": 816, "output_quantized_idx": 816, "float_class": 816, "qconfigmap": [817, 855, 856, 859, 861, 2062, 2065], "preparecustomconfig": [817, 861], "2048": [818, 1563, 1565, 1567, 2037], "upsample_r": 818, "per_tensor_affin": [818, 819, 820, 1822, 1823, 1824, 1825, 2062, 2065], "reduce_rang": [818, 819, 820, 821, 824, 826, 2007, 2062, 2063], "factory_kwarg": [818, 819, 824], "1920928955078125e": [818, 819, 820, 821, 824], "finfo": [818, 819, 820, 821, 824, 1320, 1323, 1419, 1534, 1708, 2005, 2079], "minmaxobserv": [818, 820, 824, 841, 861, 862, 2065], "x_": [819, 820, 994, 1115, 1339, 1340, 1342, 1345, 1353, 1432, 1454, 1509, 1526, 1553, 1555, 1683, 1897, 1899, 1942, 2034, 2065, 2073], "q_": [819, 2065], "x_orig": 819, "reset_min_max_v": [819, 824], "ch_axi": [821, 824, 2007], "per_channel_affin": [821, 824, 1821, 2062, 2065], "custom_op_nam": [822, 825], "with_arg": [823, 841, 861, 862], "_callable_arg": 823, "_with_arg": 823, "foo_build": 823, "foo_instance1": 823, "foo_instance2": 823, "with_callable_arg": 823, "_with_callable_arg": 823, "cur_tim": 823, "get_time_func": 823, "dan": 823, "creation_tim": 823, "compute_dtyp": 825, "ptq": [830, 2062, 2063, 2065], "obs_dict": 836, "get_observer_state_dict": 836, "allow_list": [837, 2082], "observer_non_leaf_module_list": 837, "preemptiv": [837, 838, 1709], "propagate_qconfig_": 839, "qconfig_dict": [839, 854], "pt2e": 840, "export_util": 840, "my_qconfig": 841, "default_observ": 841, "default_qat_config": 847, "set_glob": [854, 859, 861, 2062], "set_object_typ": [854, 859, 861], "set_module_name_regex": 854, "regex": 854, "set_module_nam": [854, 859, 861], "set_module_name_object_type_ord": 854, "global_qconfig": 854, "qconfig1": 854, "qconfig2": 854, "qconfig3": 854, "object_typ": 854, "module_name_regex": 854, "module_name_object_type_ord": 854, "conv0": 854, "x86": [855, 856, 1864, 2062, 2064], "run_arg": [857, 863], "qconfig_spec": 858, "quantize_fx": [859, 860, 861, 862, 2062, 2083], "_remove_qconfig": 859, "qconfig_from_prepar": 859, "prepared_model": [859, 861, 862], "xnnpack": [859, 2019, 2062], "get_default_backend_config": [859, 861, 862], "quantized_model": 859, "fusion_pattern": 860, "fusecustomconfig": 860, "_equalization_config": 861, "get_default_qconfig_map": [861, 2062], "float_model": [861, 862, 2062, 2082], "data_load": [861, 862, 1795, 1801, 2048, 2062], "get_default_qconfig": [861, 862, 2062], "linear_pattern_config": 861, "suer": 861, "sample_inference_data": [861, 2062], "get_default_qat_qconfig_map": [862, 2062], "load_weight": 862, "train_data": 862, "get_default_qat_qconfig": [862, 2062], "custom_module_class_map": 864, "lceil": [865, 961], "rceil": [865, 961], "adjac": [865, 951, 1457, 1458, 1459, 1463, 1835, 2072, 2101], "set_default_dtyp": [865, 941, 950, 1106, 1108, 1118, 1123, 1141, 1157, 1160, 1212, 1223, 1224, 1285, 1768, 1828, 1832, 1835, 1861, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2002], "get_default_dtyp": [865, 1336, 1352, 1770, 1835, 2074, 2075, 2107], "set_default_devic": [865, 941, 950, 1106, 1108, 1118, 1123, 1141, 1157, 1160, 1223, 1224, 1285, 1336, 1352, 1768, 1828, 1830, 1832, 1834, 1835, 1861, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1902, 1903, 1904, 1905, 1906, 1907, 1946, 1948, 2002, 2075], "5000": [865, 880, 886, 887, 888, 943, 967, 1123, 1125, 1126, 1133, 1136, 1141, 1151, 1153, 1154, 1155, 1219, 1225, 1228, 1291, 1317, 1336, 1410, 1412, 1443, 1444, 1462, 1572, 1820, 1824, 1825, 1826, 1835, 1839, 2073, 2078], "maxim": [874, 1363, 1452, 1515, 1516, 1517, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1787, 1788, 1789, 1790, 2072, 2094, 2103], "3398": 874, "2663": [874, 2037], "2686": 874, "2450": 874, "7401": 874, "8805": 874, "3402": 874, "1936": 874, "4907": [874, 1353], "3948": [874, 989], "0691": 874, "3132": 874, "6092": 874, "5419": 874, "2993": [874, 1919], "3195": 874, "1139": 875, "2254": 875, "1381": [875, 1919], "3687": 875, "1975": [875, 2027], "0102": 875, "4732": 875, "9240": 875, "1207": [875, 1404], "7506": 875, "0213": 875, "7809": 875, "2960": 875, "9384": 875, "1438": 875, "ascend": [876, 1125, 1302, 1304, 1333, 1388, 1855, 1892, 1953], "0785": 876, "5267": 876, "8521": 876, "4065": 876, "1598": 876, "0788": 876, "0745": 876, "2700": 876, "2208": 876, "0722": 876, "7064": 876, "2564": 876, "0669": 876, "2318": 876, "8229": 876, "9280": 876, "lexicograph": [877, 1763, 2009, 2072], "9039": 878, "6291": 878, "0795": [878, 1820, 2046], "1586": 878, "1939": [878, 2039], "4900": 878, "1909": 878, "7503": 878, "9355": 878, "histori": [879, 880, 1172, 1779, 1935, 2005, 2016, 2027, 2039, 2041, 2068], "dlpack": [880, 1156, 2005], "frombuff": [880, 1859], "data_ptr": [880, 926, 2013, 2025, 2074, 2076], "addbackward0": [880, 2046, 2051], "__array_interface__": [880, 2094], "5962": 881, "4985": 881, "4396": 881, "4525": [881, 2027], "6387": 881, "4552": 881, "sine": [882, 1875, 1885, 1887], "1606": 882, "4267": 882, "0899": 882, "0250": 882, "1599": 882, "1534": 882, "9435": 882, "8990": [882, 1100], "arctang": [883, 884], "2341": 883, "2539": 883, "6256": 883, "6448": 883, "2299": 883, "2487": 883, "5591": [883, 912], "5727": 883, "quadrant": 884, "9041": [884, 960], "0196": [884, 960], "3108": [884, 960], "4423": [884, 960], "9833": 884, "0811": 884, "9743": 884, "4151": 884, "tangent": [885, 894, 898, 899, 1169, 1170, 1560, 1933, 1934], "9385": 885, "2968": 885, "8591": 885, "1871": 885, "7253": 885, "3060": 885, "2899": 885, "1893": 885, "needs_input_grad": [889, 905, 906, 2039], "setup_context": [890, 900, 901, 902, 903, 904, 905, 906, 2013, 2040], "save_for_forward": [890, 900, 905, 906, 2040], "grad_input": [891, 900, 902, 904, 905, 906, 924, 1265, 1519, 2039, 2046], "underneath": [892, 905, 906], "generate_vmap_rul": [892, 905, 906, 2040], "out_dim": [892, 905, 906, 1174, 1969, 2007, 2026, 2040], "grad_tensor": [893, 914, 2007, 2037], "grad_vari": 893, "forward_ad": [894, 895], "primal": [894, 899, 1165, 1169, 1170, 1173], "unpack_du": [894, 895, 898], "dual": [894, 895, 896, 898, 899, 1762, 2040], "make_du": [895, 899, 900, 905, 906], "your_fn": 895, "grad_aft": 895, "dual_level": [898, 899, 900, 905, 906], "apply_jvp": 900, "mark_dirti": [900, 905, 906, 926, 2039], "x_npy": [900, 901, 905], "once_differenti": [900, 901, 902, 903, 904, 905, 906, 2039], "mark_non_differenti": [900, 905, 906, 2039, 2040], "g1": [900, 902, 904, 905, 906, 2037, 2069], "g2": [900, 902, 904, 905, 906, 2037, 2069], "oppos": [900, 903, 905, 906, 2040], "weren": [900, 903, 905], "grad_out": [900, 903, 905, 906, 2007, 2043, 2098], "gx": [900, 903, 905], "gy": [900, 903, 905], "gz": [900, 903, 905, 2061], "y_t": [900, 905, 906], "fwad": [900, 905, 906], "a_dual": [900, 905, 906], "set_materialize_grad": [900, 905, 906, 2039], "simplefunc": [900, 904, 905, 906], "induc": [900, 904, 905, 906, 1625, 1664, 2032, 2090], "backward_extend": 906, "forward_extend": 906, "outer_jacobian_strategi": 908, "disconnect": [908, 909, 910, 911, 912, 913], "said": [908, 909, 910, 911, 912, 913, 2016, 2049, 2091], "cliff": [908, 910, 914], "_debug_only_display_vmap_fallback_warn": [908, 914], "pow_reduc": [908, 909, 912], "2265": 908, "8221": 908, "9456": [908, 942], "2550": 908, "viewbackward": [908, 910, 2042], "pow_adder_reduc": [908, 909, 912], "func_output": [909, 911, 912, 913], "1448": 909, "0239": 909, "6456": 909, "4988": 909, "4310": 909, "sumbackward0": [909, 912, 2039], "3030": 909, "vhp": 909, "batched_grad": 910, "exp_reduc": [910, 911, 913], "4917": 910, "4352": 910, "4369": 910, "3799": 910, "exp_add": 910, "8052": 910, "3963": 910, "3090": 911, "6742": 911, "9114": 911, "2106": 911, "sumbackward1": [911, 913], "squeezebackward1": 911, "adder": [911, 913], "2399": 911, "5005": 911, "0689": 912, "2431": 912, "0989": 912, "4456": 912, "8053": [912, 1850], "7817": 913, "2458": 913, "7830": 913, "7782": 913, "4458": 913, "3962": 913, "3042": [913, 1323], "6354": 913, "1288": [913, 1878, 1913], "0652": 913, "5483": 913, "5035": 913, "2046": [913, 989, 2039], "1292": 913, "1432": 913, "3059": 913, "3225": 913, "6652": 913, "7753": 913, "0152": 913, "4225": 913, "3340": 913, "only_input": 914, "allow_unus": [914, 2007], "is_grads_batch": 914, "materialize_grad": 914, "require_grad": [914, 2009, 2034], "inferencemod": [915, 2034, 2085], "bump": 915, "_version": [915, 2057], "doubler": [915, 1109, 1762], "is_train": [916, 2081], "gradgradcheck": [918, 919, 2039], "06": [919, 920, 1306, 1311, 1312, 1323, 1324, 1329, 1472, 1528, 1568, 1571, 1622, 1693, 1774, 1788, 1920, 2007, 2079], "raise_except": [919, 920, 2013], "nondet_tol": [919, 920], "check_undefined_grad": [919, 920], "check_grad_dtyp": [919, 920], "check_batched_grad": [919, 920], "check_batched_forward_grad": 919, "check_forward_ad": 919, "check_backward_ad": 919, "fast_mod": [919, 920, 2043], "differenc": [919, 2039], "perturb": [919, 920, 2043], "gen_non_contig_grad_output": 920, "check_fwd_over_rev": 920, "check_rev_over_rev": 920, "noncontigu": [920, 1047, 2079], "inaccuraci": 920, "clonebackward0": 922, "gi": [924, 925, 2046], "removablehandl": [924, 925, 1265, 1519, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 2059], "88446": 928, "profilerstep": 928, "optimizer1step": 928, "optimizer2step": 928, "optimizer1": [928, 2033], "current_step": 928, "erase_step_count": 928, "increment_step": 928, "_kineto_step": 928, "init_step_count": 928, "eventlist": [931, 932], "group_by_stack_n": [932, 2061], "roof": 932, "functioneventavg": [932, 934], "node_id": 935, "77": 935, "47": 935, "470u": 935, "73": 935, "465u": 935, "03": [935, 963, 1343, 1876, 1877, 1882], "121": 935, "891u": 935, "324u": 935, "421u": 935, "503u": 935, "234": [935, 2013], "344u": 935, "000u": 935, "profiler_util": [936, 937, 938, 939], "elapsed_u": 936, "mem_record": 938, "in_interv": 938, "start_u": 938, "end_u": 938, "shallow": [939, 1265, 1455, 1519, 1568, 1569, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "default_factori": [939, 2102], "__missing__": 939, "fromkei": [939, 1529], "keyerror": 939, "popitem": [939, 1529, 2057], "lifo": 939, "setdefault": [939, 1529, 2057], "window_length": [941, 950, 1223, 1224, 1285, 2007], "2n": [941, 1873, 2072], "trim": [941, 950, 1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1223, 1224, 1262], "_length": [941, 950, 1223, 1224, 1262, 1438, 1916], "sim": [942, 1533, 1669, 1812, 1832], "pseudorandom": [942, 1405, 1765, 1809, 1812, 1828, 1830, 1832, 1834, 1921], "1737": 942, "0950": [942, 1898], "3609": 942, "7148": 942, "0289": [942, 1945], "2676": 942, "8937": 942, "7202": 942, "2500": [943, 1123, 1125, 1126, 1136, 1141, 1336, 1572, 1826], "7500": [943, 1126, 1136, 1155, 1219, 1321, 1336, 1572, 1826, 1881], "AND": [944, 1185, 1347, 2009, 2034], "OR": [947, 1202, 1349, 2009, 2027], "xor": [949, 1350, 2009], "blackman": [950, 1883], "arrang": 951, "broadcast_tensor": [953, 2007, 2057], "out_int32": [956, 1855, 2007], "opposit": [956, 1126, 1128, 1563, 1920, 1941], "formal": [956, 1855, 2016, 2026, 2042, 2071], "eg": [956, 1848, 1855, 2102], "tensor_a": [958, 971], "tensor_b": 958, "6580": 959, "0969": 959, "4614": 959, "1034": [959, 1105], "5790": 959, "1497": 959, "compute_mod": [960, 2098], "use_mm_for_euclid_dist_if_necessari": 960, "distanc": [960, 1262, 1301, 1302, 1329, 1478, 1528, 1568, 1569, 1666, 1694, 1795, 1916, 1920, 2005], "infti": [960, 1262, 1317, 1431, 1486, 1487, 1488, 1551, 1666, 1786, 2073], "use_mm_for_euclid_dist": 960, "donot_use_mm_for_euclid_dist": 960, "minkowski": [960, 1666], "ham": [960, 1223, 1666, 1879], "closest": [960, 1666], "xn": [960, 1666], "4821": [960, 963], "059": 960, "0590": 960, "1763": [960, 1838], "4713": [960, 1838], "6986": [960, 1838], "3702": [960, 1838], "1193": [960, 1355], "0959": 960, "7138": 960, "8322": 960, "2830": [960, 1947], "3791": 960, "6341": 961, "4208": 961, "0900": 961, "5826": 961, "clr": [962, 1795], "3375": 962, "9790": 962, "1119": 962, "6577": 962, "5609": [962, 1616], "5095": 962, "2614": 962, "4038": 962, "3378": [962, 1947], "4982": 962, "2457": [962, 1368], "2561": 962, "4684": 962, "7163": 962, "9647": 962, "8917": [962, 1346], "3213": [962, 1342], "2284": [962, 1085], "8615": 962, "2816": 962, "tu": 963, "mt": [963, 1295, 1302, 1304, 1308, 1309, 1310, 1315, 1324, 1819, 1920, 2007, 2016, 2057, 2076, 2078], "4112": 963, "7486": 963, "4551": 963, "3544": 963, "6724": 963, "5528": 963, "0592": [963, 2046], "9371": 963, "5487": 963, "7023": 963, "3842e": [963, 1311], "hermitian": [964, 965, 990, 1121, 1122, 1124, 1126, 1127, 1128, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1295, 1296, 1301, 1302, 1304, 1308, 1309, 1310, 1320, 1323, 1329, 2007], "9314": 964, "2251": [964, 1004, 1298, 1340], "0889": 964, "4439": 964, "2122": 964, "1412": 964, "6358e": 964, "lh": [965, 1311], "1625": 965, "6097": 965, "8398": 965, "2387": [965, 990], "3771": [965, 1312], "4173": 965, "1626": [965, 1004, 1298], "6881e": 965, "tensor_split": [966, 1103, 1229, 1970, 2007, 2057, 2076], "min_valu": [967, 1477], "max_valu": [967, 1477, 2007], "_valu": [967, 1423, 1715, 1905, 2039, 2057, 2072], "7120": 967, "1734": [967, 1240], "0478": [967, 1972], "0922": 967, "3333": [967, 1219, 1228, 1572, 1573, 1935], "horizont": [970, 1229, 1231, 2058, 2060, 2094], "hstack": [970, 2007, 2057, 2072], "with_replac": [971, 2007], "combinations_with_replac": 971, "fullgraph": [972, 2094, 2103], "cache_size_limit": [972, 2094, 2103], "list_backend": [972, 2084, 2089, 2096], "compiler_custom_backend": 972, "triton": [972, 2040, 2084, 2088, 2092, 2094, 2096, 2101, 2103], "_inductor": [972, 2094, 2103], "list_mode_opt": 972, "epilogue_fus": 972, "max_autotun": 972, "fallback_random": [972, 2094, 2103], "shape_pad": 972, "graph_diagram": 972, "pictur": 972, "list_opt": 972, "_glibcxx_use_cxx11_abi": 973, "bypass": [974, 1105, 2013, 2027, 2037, 2039, 2095, 2101], "rand_foo": 977, "compiler_cudagraph_tre": 977, "external_util": 979, "stricter": [980, 1405, 2095], "is_compil": [980, 2095], "exclude_tag": 981, "flip": [987, 1146, 1147, 1333, 2007, 2057, 2058, 2094, 2098], "writeabl": [987, 988], "is_conj": [987, 1843, 2007, 2057], "geq": [989, 1208, 1297, 1305, 1428, 1429, 1430, 1454, 1505, 1526, 1538, 1608, 1661, 1723, 2032, 2073], "signbit": [989, 2007, 2057, 2072, 2098], "2557": 989, "0026": 989, "5387": 989, "4740": 989, "9244": 989, "7079": 989, "2778": 989, "0249": [989, 1341], "5719": 989, "0059": 989, "2600": 989, "4475": 989, "9567": [989, 1301, 1919], "5757": 989, "1751": 989, "0742": 989, "2998": 989, "1054": 989, "2373": 989, "3190": [989, 2037], "1128": [989, 1323, 1489], "pearson": 990, "coeffici": [990, 1223, 1774, 1776, 1777, 1778, 1780, 1786, 1790, 1878, 1879, 1880, 1944], "r_": [990, 1937], "ij": [990, 1105, 1345, 1353, 1367, 1522, 1897], "c_": [990, 1446, 1447, 1448, 1449, 1450, 1451, 1489, 1531, 1532], "jj": 990, "cov": [990, 2007, 2057], "2678": [990, 1461], "0908": 990, "3766": 990, "2780": 990, "5812": 990, "1535": [990, 1461], "2350": 990, "3582": 990, "4309": 991, "2706": 991, "8562": 991, "9796": [991, 1311], "1395": 991, "2957": 991, "6553": 991, "5574": 991, "1632": 992, "1835": 992, "6979": 992, "7325": [992, 1095], "0133": 992, "7860": 992, "2536": 992, "2805": 992, "sleef": [992, 1887], "y_": [994, 1115, 1339, 1340, 1342, 1432, 1454, 1484, 1897, 1942, 2034, 2073], "_w": [994, 1466], "w_i": [994, 1305], "mu_x": 994, "mu_i": [994, 1780], "w_ia_i": 994, "whichev": [994, 1174, 1625, 1820, 1969, 2037], "w_ix_": 994, "mathbb": [994, 1219, 1295, 1297, 1301, 1302, 1303, 1304, 1305, 1306, 1311, 1312, 1315, 1317, 1324, 1326, 1328, 1329, 1454, 1526, 1723], "bessel": [994, 1285, 1882, 1914, 1915, 1964, 1965, 2073], "unbias": [994, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1559, 1914, 1915, 1964, 1965, 2007, 2098], "corrcoef": [994, 2007, 2057], "6667": [994, 1228, 1572, 1573, 1840, 1873, 2051], "fw": 994, "4282": 994, "0255": [994, 1092], "4144": [994, 2037], "4169": 994, "streamcontext": [1002, 1080, 1402, 2000, 2005], "abstractcontextmanag": 1002, "3956": [1004, 1298], "1455": [1004, 1298, 2052], "6895": [1004, 1298], "5849": [1004, 1298], "3599": [1004, 1298], "7180": [1004, 1298], "0521": [1004, 1298], "1339": [1004, 1298], "0225": [1004, 1298, 1311], "0257": [1004, 1298], "4725": [1004, 1298], "1479": [1004, 1298], "7005": [1004, 1298], "9757": [1004, 1298], "3904": [1004, 1298], "3726": [1004, 1298], "1836": [1004, 1298], "9688": [1004, 1298], "7153": [1004, 1298, 2073], "2159": [1004, 1298], "0844": [1004, 1298], "5281": [1004, 1298], "6120": [1004, 1298], "4490": [1004, 1298], "5687": [1004, 1298], "9792": [1004, 1086, 1298], "8304": [1004, 1298], "3037": [1004, 1298, 2046], "5650": [1004, 1298], "2329": [1004, 1298], "9883": [1004, 1298], "0551": [1004, 1298], "capture_begin": [1005, 2037], "capture_error_mod": [1005, 1039], "make_graphed_cal": [1005, 2037], "graph_pool_handl": [1005, 1039, 1050], "other_graph_inst": [1005, 1039, 1050], "cudastreamcapturemod": [1005, 1039], "thread_loc": [1005, 1039], "cudamalloc": [1005, 1039, 1061, 2037, 2105], "unsaf": [1005, 1039, 1337, 1726, 1729, 2007, 2037, 2059], "capture_end": [1005, 2037], "replai": [1005, 1039, 2037, 2054, 2061, 2088, 2091, 2103], "debug_dump": 1005, "debug_path": 1005, "enable_debug_mod": 1005, "path_to_so_fil": 1006, "alloc_fn_nam": 1006, "free_fn_nam": 1006, "enable_tim": [1007, 1378, 1974, 2037], "interprocess": 1007, "marker": [1007, 1378, 1974], "elapsed_tim": [1007, 1378, 1974, 2037], "end_ev": [1007, 1378, 1974, 2037], "elaps": [1007, 1378, 1974, 2021], "from_ipc_handl": 1007, "reconstruct": [1007, 1355, 1431, 1432, 2043, 2051, 2059, 2091], "ipc": [1007, 1043], "ipc_handl": 1007, "cudaeventsynchron": 1007, "cudastreamwaitev": [1007, 1008, 1010], "stream_ptr": 1008, "cudastream_t": [1008, 2037], "record_ev": [1008, 1010, 1975], "cudastreamsynchron": [1008, 1010], "wait_ev": [1008, 1010, 1975], "interoper": 1012, "caching_allocator_delet": 1012, "mem_ptr": 1013, "caching_allocator_alloc": 1013, "peer_devic": 1014, "_cudaalloc": 1015, "clock": 1016, "sm": 1016, "hertz": 1016, "smi": [1016, 1029, 1057, 1063, 1068, 1082, 1083, 2037, 2041, 2044], "buffer_s": 1018, "10485760": 1018, "chunk_siz": [1021, 1168, 1174, 1969], "cublashandle_t": 1022, "unoccupi": [1029, 1377, 1982], "cudamallocasync": [1030, 1061, 2037], "_cudadeviceproperti": 1034, "gencod": 1035, "cuda_graph": 1039, "ordinari": [1041, 1709, 1960, 2033], "code_str": [1047, 1048], "temp": 1047, "typenam": [1047, 1048], "my_kernel": [1047, 1048], "jitted_fn": [1047, 1048], "create_jit_fn": [1047, 1048], "util_fn": 1047, "gelu": [1047, 1549, 1563, 1565, 1567, 1680, 2007, 2027, 2057, 2098], "my_gelu": 1047, "my_lib": [1047, 2013, 2052], "impl": [1047, 1271, 2013], "num_output": 1048, "sample_arg": 1050, "num_warmup_it": 1050, "allow_unused_input": 1050, "datadistributedparallel": 1050, "amp": [1050, 1960, 2005, 2033, 2097, 2100, 2103], "autocast": [1050, 1525, 2005, 2037, 2039, 2103], "insuffici": [1051, 1992, 2090, 2103], "manual_seed_al": [1051, 1960, 1992], "occupi": [1053, 1057, 1069, 1374, 1507, 1643, 2037, 2044, 2107], "reset_peak_memory_stat": [1053, 1055, 1069, 1070], "max_memory_reserv": [1054, 2037, 2044], "cudamemgetinfo": 1056, "memory_reserv": [1058, 2037, 2044], "snapshot": [1060, 2005, 2009, 2037, 2044], "large_pool": 1061, "small_pool": 1061, "allocated_byt": 1061, "reserved_byt": 1061, "active_byt": 1061, "inactive_split": 1061, "inactive_split_byt": 1061, "octob": 1061, "1mb": [1061, 2105], "num_alloc_retri": 1061, "num_oom": 1061, "num_sync_all_stream": 1061, "synchronize_and_free_ev": 1061, "num_device_alloc": 1061, "cumemmap": 1061, "num_device_fre": 1061, "cumemunmap": 1061, "cudafre": [1061, 2037, 2105], "assist": [1061, 2038, 2078], "max_split_s": 1061, "oversize_alloc": 1061, "oversize_seg": 1061, "requested_byt": 1061, "abbrevi": 1062, "percent": [1063, 1083, 2097], "instantan": [1064, 2061], "ascii": [1064, 1067, 1337, 2009, 2061], "sensor": [1068, 1082], "mw": 1068, "milliwatt": 1068, "fermi": 1068, "max_memory_alloc": [1069, 2037, 2044], "max_memory_cach": 1070, "memory_stat": [1071, 2037, 2044], "seed_al": [1072, 1994], "environment": [1074, 2097], "total_memori": [1075, 1385], "debug_mod": [1079, 1862], "centigrad": 1082, "x_3": [1084, 1085, 1086, 1087, 1333], "3449": 1084, "5447": 1084, "0685": 1084, "5104": [1084, 2037], "1706": 1084, "2259": 1084, "4696": 1084, "3284": 1084, "9946": 1084, "8209": 1084, "6628": 1085, "0975": 1085, "2680": [1085, 2036], "3298": [1085, 1092], "4220": 1085, "3885": 1085, "1762": 1085, "9165": 1085, "6684": [1085, 1242], "6001": 1086, "2069": 1086, "1919": 1086, "6727": [1086, 1099], "0062": 1086, "4126": 1086, "2129": 1086, "4206": 1086, "1968": [1086, 2073], "1241": 1086, "0238": 1086, "0233": [1086, 1827], "0157": 1086, "0158": [1086, 1920], "0065": 1086, "0014": [1086, 2073], "0006": 1086, "46": [1087, 1223, 1878], "49": [1087, 1148, 1321, 2036], "74": 1087, "83": 1087, "trapezoid": [1088, 1943, 2007, 2057], "360": 1089, "2832": 1089, "diagflat": [1092, 2007, 2057], "5950": 1092, "0872": 1092, "4264": 1092, "1064": [1092, 2046], "8795": 1092, "2429": 1092, "1374": 1092, "1029": 1092, "6482": 1092, "6300": 1092, "5410": 1093, "2934": 1093, "1788": [1093, 2073], "5684": 1093, "0845": [1093, 1887, 2046], "3986": 1093, "2956": [1094, 1298], "9068": 1094, "1695": 1094, "2094": [1094, 2037], "3018": 1094, "1516": 1094, "9342": 1094, "0854": 1095, "1431": 1095, "1752": 1095, "8536": 1095, "0905": 1095, "0360": [1095, 1404], "6927": 1095, "3735": 1095, "4945": 1095, "2631": [1095, 1388, 2037], "3755": 1095, "5977": [1095, 2039], "8172": 1095, "1065": [1095, 2046], "0401": 1095, "2235": [1095, 1919], "7938": 1095, "3081": 1095, "6166": 1095, "2335": 1095, "0500": 1095, "7336": 1095, "3836": 1095, "1015": 1095, "emb": [1096, 1858, 1888], "5393": 1099, "8675": 1099, "5916": 1099, "6321": 1099, "0967": 1099, "0511": 1099, "6295": 1099, "8360": 1099, "6973": 1099, "6537": 1099, "dividend": [1100, 1150, 1153, 1839, 1949], "true_divid": [1100, 2007, 2057], "3810": [1100, 1227], "2774": 1100, "2972": 1100, "3719": 1100, "4637": [1100, 2039], "7620": 1100, "5548": 1100, "5944": 1100, "7438": 1100, "9274": 1100, "3711": 1100, "9353": 1100, "4605": 1100, "2917": 1100, "1815": [1100, 1346], "0111": [1100, 1876], "9805": 1100, "5923": 1100, "1062": 1100, "4581": [1100, 1305], "7759": 1100, "2344": 1100, "1830": 1100, "0313": 1100, "1908": 1100, "4757": 1100, "8032": 1100, "2930": 1100, "8113": 1100, "2308": 1100, "4620": [1100, 1972], "6051": 1100, "5676": 1100, "2639": 1100, "2260": 1100, "4509": [1100, 1319], "2086": 1100, "1322": 1100, "9764": 1100, "9564": 1100, "3484": 1100, "2278": 1100, "1068": [1100, 1240], "4678": 1100, "3938": [1100, 1930], "depthwis": [1103, 1104, 1446, 1447, 1448], "atleast_3d": [1104, 2007, 2057], "notat": [1105, 1484, 1867, 2010, 2046, 2078], "einstein": 1105, "summat": [1105, 1262, 1345, 1353, 2072], "subscript": [1105, 2010, 2048], "jk": [1105, 2097], "ik": [1105, 1338, 1897], "za": 1105, "alphabet": [1105, 1609, 2067], "arrow": [1105, 2069], "ki": 1105, "ellipsi": [1105, 2009, 2010, 2026], "fourth": 1105, "whitespac": [1105, 2010], "opt_einsum": [1105, 2005], "_the_": 1105, "disclaim": 1105, "sublist": [1105, 2103], "52": 1105, "op1": [1105, 2009], "sublist1": 1105, "op2": [1105, 2009], "sublist2": 1105, "subslist_out": 1105, "2104": 1105, "7952": 1105, "2433": 1105, "4545": 1105, "1156": 1105, "2897": [1105, 2046], "3918": 1105, "4963": 1105, "3744": 1105, "9381": 1105, "2685": 1105, "6070": 1105, "7208": 1105, "8058": 1105, "4419": 1105, "0936": 1105, "1713": 1105, "4291": 1105, "5802": 1105, "7350": [1105, 2073], "5704": 1105, "4290": 1105, "9323": 1105, "4480": 1105, "bij": 1105, "bjk": 1105, "bik": 1105, "0564": 1105, "5904": 1105, "2023": 1105, "1271": 1105, "6706": [1105, 1820], "8097": 1105, "8025": 1105, "1183": 1105, "2239": [1105, 1325], "3107": 1105, "5756": 1105, "2354": 1105, "4558": 1105, "3460": 1105, "5087": 1105, "8530": [1105, 1443, 1575], "8153": 1105, "8787": 1105, "3839": [1105, 1968], "2112": [1105, 1945], "3728": 1105, "1131": [1105, 1817], "0921": 1105, "8305": 1105, "ji": 1105, "anm": 1105, "bm": 1105, "ba": 1105, "3430": [1105, 1346], "2405": 1105, "4494": 1105, "3311": 1105, "5201": 1105, "0356": 1105, "4064e": 1106, "8000e": 1106, "3493e": 1106, "5751e": 1106, "1428e": 1106, "5955e": 1106, "9683e": 1108, "1239e": 1108, "0705e": 1108, "orig_func": [1109, 1762], "set_grad_en": [1109, 2007, 2057, 2081], "tripler": [1109, 1762], "elsewher": [1110, 1118, 1208, 1222, 1255, 1257, 1258, 1261, 1290, 1354, 1416, 1898, 2004], "_max": [1119, 1120, 2062], "_min": [1119, 1120, 2062], "nearbi": [1119, 1120], "_int": [1119, 1120], "_point": [1119, 1120], "2525": 1119, "0466": 1119, "3491": [1119, 1319], "2168": [1119, 1937], "5906": [1119, 2073], "6258": 1119, "6444": 1119, "0542": 1119, "0475": [1119, 2073], "0486": 1119, "3405": 1119, "6134": [1119, 1368], "6323": 1119, "0552": 1120, "9730": 1120, "3973": 1120, "0780": 1120, "4000": [1120, 1123, 1132, 1141, 1572, 1823, 1873], "fourier": [1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1262, 1883, 1916, 2005], "rfft": [1121, 1126, 1136, 1140, 1141, 1142], "chalf": [1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1137, 1138, 2007, 2057, 2078], "sm53": [1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142], "ortho": [1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1338], "orthonorm": [1121, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1142, 1329, 1723, 1920], "ifft": [1121, 1125, 1126, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138], "fftn": [1122, 1125, 1131, 1134, 1142], "rfft2": [1122, 1137], "ifft2": [1122, 1134], "two_fft": [1122, 1124, 1134, 1140, 1142], "check_strid": [1122, 1124, 1125, 1130, 1131, 1136, 1137, 1138, 1140, 1142, 2079], "nyquist": [1123, 1125, 1133, 1135, 1139, 1140, 1141, 1142], "i_1": [1124, 1142, 1286], "i_n": [1124, 1142, 1174, 1286, 1937, 1969], "rfftn": [1124, 1128, 1134, 1138, 1140], "ifftn": [1124, 1130, 1135], "reorder": [1125, 1321, 2042], "rearrang": [1125, 1132, 1439, 1531, 1532, 1667, 1668, 2026], "fftfreq": [1125, 1132, 1141], "9000": [1125, 1935], "8000": [1125, 1410, 1572, 1820, 1873], "uncent": 1125, "ifftshift": 1125, "x_center": 1125, "x_uncent": 1125, "fft_uncent": 1125, "fft_center": 1125, "x_centered_2": 1125, "ihfft": [1126, 1134, 1135], "irfft": [1126, 1138, 1139], "symmetri": [1126, 1128, 1916], "transformed_dim_s": [1126, 1136], "0000j": [1126, 1133, 1136, 1295, 1296, 1301, 1302, 1304, 1813, 1870], "1250": [1126, 1388], "1720j": 1126, "0406j": 1126, "2809": 1126, "6250": [1126, 1136, 1155, 1572], "9691": 1126, "hfftn": [1127, 1135], "last_dim_s": [1127, 1128, 1137, 1138, 2098], "ihfft2": 1127, "roundtrip": [1127, 1128, 1136, 1137, 1138], "ihfftn": [1128, 1134], "irfftn": [1128, 1137, 1142], "fft2": [1130, 1140], "two_ifft": [1130, 1131, 1135], "fftshift": 1132, "hfft": 1133, "6882j": 1133, "1625j": 1133, "hfft2": 1134, "8602j": 1136, "2031j": 1136, "1562": 1136, "3511": 1136, "7812": 1136, "2114": 1136, "irfft2": 1140, "wider": [1148, 2006, 2009, 2058, 2072], "2500e": 1148, "1000e": 1148, "7656e": 1148, "lfloor": [1149, 1154, 1423, 1428, 1429, 1430, 1446, 1447, 1448, 1465, 1486, 1487, 1488, 1512, 1513, 1514, 1571, 1572, 1573, 1574, 1594, 1664, 1835, 1916], "rfloor": [1149, 1154, 1423, 1428, 1429, 1430, 1446, 1447, 1448, 1465, 1486, 1487, 1488, 1512, 1513, 1514, 1571, 1572, 1573, 1574, 1594, 1664, 1835, 1916], "8166": 1149, "5308": 1149, "2530": 1149, "2091": 1149, "7000": [1151, 1462, 1872], "3000": [1152, 1461, 1872, 2037], "entrywis": [1153, 1839], "modulu": [1153, 1325, 1839], "operatornam": [1154, 1301, 1302, 1303, 1304, 1321, 1329, 1431, 1432, 1438, 1478, 1479, 1485, 1510, 1551, 1569, 1832, 1872], "8750": [1155, 1572], "sizeof": [1157, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 2074], "map_shar": [1157, 2074], "map_priv": [1157, 2074], "mmap": [1157, 1337, 2024, 2074], "tofil": 1157, "t_map": 1157, "char": [1159, 1770, 2025, 2074, 2094], "parameter_and_buffer_dict": 1162, "tie_weight": [1162, 1759], "submodule_nam": [1162, 1759], "parameter_nam": [1162, 1759], "ti": [1162, 1759, 1848, 2013, 2042, 2093], "ty": [1162, 1759], "foo_ti": [1162, 1759], "new_a": [1162, 1759], "grad_weight": [1162, 2039], "detached_param": 1162, "parameters_and_buffer_dict": 1162, "intermediate_upd": 1163, "mutations_and_view": 1163, "proxy_tensor": [1163, 2013, 2093, 2103], "make_fx": [1163, 2013, 2090, 2103], "inpt": 1163, "f_trace": 1163, "f_no_mutations_trac": 1163, "f_no_mutations_and_views_trac": 1163, "a_1": [1163, 1286], "view_1": 1163, "view_copi": [1163, 2007, 2057, 2081], "view_copy_1": 1163, "as_strid": [1163, 2007, 2057, 2076, 2098], "native_funct": [1163, 2039, 2098], "yaml": [1163, 2039, 2098], "aux": [1164, 1165, 1167, 1168, 1169, 1173], "my_loss_func": 1164, "y_pred": [1164, 2037], "loss_per_sampl": 1164, "y_true": 1164, "autodiff": [1167, 1168, 1169, 1324], "jacobian_f": [1167, 1168], "f_x": [1167, 1168], "jacboian": [1167, 1168], "expectedx": [1167, 1168], "expectedi": [1167, 1168], "_preallocate_and_copi": 1168, "jvp_out": 1169, "wish": [1169, 1911, 2013, 2033, 2037, 2039, 2040], "jvp_fn": 1170, "optimiz": [1172, 2006], "l1": [1172, 1478, 1479, 1551, 1634, 1681, 1734, 1743, 2046, 2051], "l2": [1172, 1479, 1510, 1551, 1773, 1774, 1775, 1776, 1778, 1780, 1786, 1787, 1789, 2033], "vjpfunc": 1173, "unsuccessfulli": [1174, 1969], "rummag": [1174, 1969], "batched_dot": [1174, 1969], "jacobian_row": [1174, 1969], "get_vjp": [1174, 1969], "n1": [1174, 1841, 1969], "n0": [1174, 1969], "batched_pow": [1174, 1969], "autobatch": [1174, 1969], "symbolic_shap": [1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 2005, 2090], "symbol_to_sourc": 1177, "var_to_v": 1177, "marked_dynam": 1177, "source_name_to_debug_nam": 1177, "solver": [1177, 2005, 2049], "expr": [1177, 1181, 1188, 1195], "tautologi": 1177, "add_equ": 1177, "forced_speci": 1177, "prettify_result": 1177, "original_signatur": 1177, "constraint_violation_error": 1177, "violat": [1177, 2037, 2040], "erro": 1177, "remove_redundant_dynamic_result": 1177, "rewrite_with_congru": 1177, "congruenc": 1177, "ration": 1177, "inequ": [1177, 1188], "disable_congru": 1177, "disable_equival": 1177, "duck": [1178, 1181, 2039, 2059], "nb": [1178, 1185, 1188, 1190, 1192, 1279], "simplic": [1178, 1729, 2067, 2068], "varieti": [1178, 2037, 2068], "assume_static_by_default": [1178, 1182], "mark_dynamic_dim": 1178, "warn_onli": [1179, 1180, 1185, 1957], "source_pair": 1179, "derived_equ": 1179, "phantom_symbol": 1179, "forest": 1179, "transit": [1179, 1265, 1367, 1519, 1916, 2005, 2006, 2084], "phantom": 1179, "unspeci": 1180, "unspec": 1180, "brittl": 1180, "strictminmaxconstraint": 1180, "should_record_ev": 1181, "tracked_fak": 1181, "add_var_to_v": 1181, "bind_symbol": 1181, "littl": [1181, 2039, 2051, 2069], "evaluate_guard": 1181, "cleanest": 1181, "shenanigan": 1181, "bound_sympi": 1181, "size_oblivi": 1181, "check_equ": 1181, "create_symbol": 1181, "dimdynam": [1181, 1184], "constraint_dim": 1181, "do_not_specialize_zero_on": 1181, "symbolic_context": [1181, 1183, 1184], "create_symbolic_sizes_strides_storage_offset": [1181, 1183, 1184, 1187], "create_symboolnod": 1181, "create_symintnod": 1181, "create_unbacked_symbool": 1181, "create_unbacked_symfloat": 1181, "create_unbacked_symint": 1181, "create_unspecified_symbol": 1181, "specialz": 1181, "create_unspecified_symint_and_symbol": 1181, "defer_runtime_assert": 1181, "orig_expr": 1181, "fx_node": 1181, "evaluate_expr": [1181, 2091], "expect_r": 1181, "forcing_spec": 1181, "evaluate_guards_express": 1181, "produce_guards_express": 1181, "evaluate_guards_for_arg": 1181, "ignore_stat": 1181, "format_guard": 1181, "get_nontrivial_guard": 1181, "is_unbacked_symint": 1181, "unback": [1181, 1190, 1191, 1193, 1194, 1201, 1202, 1203, 2093], "produce_guard": 1181, "source_ref": 1181, "input_context": 1181, "equalities_input": 1181, "_simplifi": 1181, "localsourc": [1181, 2091], "boilerpl": [1181, 2046, 2059], "nice": [1181, 1446, 1447, 1448, 1449, 1450, 1451, 1465, 1512, 1513, 1514, 1571, 2026, 2034, 2037, 2059, 2091], "size_hint": [1181, 2096], "allow_non": 1181, "suppress_guard": 1181, "allow_scalar_output": 1182, "allow_dynamic_output_shape_op": 1182, "specialize_zero_on": 1182, "duck_shap": 1182, "prefer_deferred_runtime_asserts_over_guard": 1182, "faketensor": [1182, 2013, 2054, 2093], "dynamic_s": [1183, 1184, 1186], "constraint_s": [1183, 1184, 1186], "view_base_context": [1183, 1184, 1186], "tensor_sourc": [1183, 1186], "shape_env_to_source_to_symbol_cach": [1183, 1186], "statelesssymboliccontext": 1183, "owner": [1183, 2004, 2039, 2057, 2067, 2068], "lifecycl": [1183, 2093], "shape_env": [1183, 1190, 1203], "dimconstraint": 1184, "vr": 1185, "relaxedunspecconstraint": 1185, "unsoundli": [1185, 1191], "inner_context": 1186, "canonic": 1188, "rh": [1188, 1311, 1356], "Ors": 1188, "cnf": 1188, "subexpr": 1188, "25924": 1188, "retrac": [1189, 1203, 1273, 2091], "example_valu": 1190, "freshli": 1190, "lie": [1191, 1553, 1555, 1683, 1899, 2073, 2077, 2093], "intersect": 1191, "fairli": [1191, 2048, 2060, 2090, 2094, 2096], "discharg": 1191, "perfectli": [1191, 1863, 2037, 2060], "definitely_tru": 1193, "parallel_or": 1194, "parallel_and": 1194, "circuit": 1194, "oblivi": 1195, "118579": 1195, "free_symbol": 1196, "maxsiz": 1200, "sym_and": 1205, "sparse_grad": [1206, 2007, 2098], "tau": [1209, 1305, 1627, 1775, 1789, 1806, 1807, 1876, 2007], "elementari": [1209, 2034, 2043], "reflector": [1209, 1723, 1807], "household": [1209, 1305, 1723, 1807], "householder_product": [1209, 1723, 1806], "gel": [1209, 1311], "set_deterministic_debug_mod": [1213, 1957], "mtia": [1214, 1390, 1391, 1392, 1396, 2005, 2061], "edge_ord": [1219, 2007], "rightarrow": 1219, "closer": [1219, 1569, 1820, 2039, 2046, 2062, 2096, 2097], "interior": 1219, "theorem": 1219, "h_l": 1219, "h_r": 1219, "neighbor": [1219, 1262, 1572, 1574, 1916], "xi_1": 1219, "xi_2": 1219, "approx": [1219, 1921, 2043], "80": [1219, 1321, 1799, 1867, 2037, 2058], "halv": 1219, "coord": 1219, "54": [1223, 1480, 1879], "hann_window": [1223, 1916, 2007, 2011, 2057], "hann": [1224, 1879], "hist": [1227, 1228, 2007], "bin_edg": [1227, 1228, 2007], "9524": 1227, "leftmost": [1228, 2027], "leg": 1232, "triangl": [1232, 2077], "hypotenus": 1232, "4031": 1232, "gammainc": [1234, 2073], "gammaincc": [1235, 2073], "index_reduce_": [1239, 2007], "1427": 1240, "0231": 1240, "5414": 1240, "0009": 1240, "4664": [1240, 1937], "2647": 1240, "1228": 1240, "6571": 1240, "7230": 1240, "6004": 1240, "multidimension": [1242, 1335, 1481], "8173": 1242, "0874": 1242, "1784": 1242, "3279": 1242, "7894": 1242, "4682": 1242, "7159": 1242, "1506": 1242, "4034": 1242, "3657": 1242, "0387": 1242, "9892": 1242, "1774": 1242, "3261": 1242, "3917": 1242, "4537": [1242, 1699], "7493": 1242, "1724": 1242, "2291": 1242, "5749": 1242, "2267": 1242, "7920": 1242, "3607": 1242, "3701": 1242, "3666": 1242, "5850": [1242, 1296], "7242": 1242, "9837": 1242, "1560": 1242, "2907": 1242, "6785": 1242, "5671": [1242, 1297], "5452": 1242, "6912": 1242, "5509": 1242, "1782": 1242, "9843": 1242, "7366": 1242, "5672": [1242, 1765], "5115": 1242, "4864": 1242, "2476": 1242, "4337": 1242, "6347": 1242, "1748": 1242, "3567": [1242, 1296], "6558": 1242, "2469": [1242, 2046], "5787": [1242, 1346], "typecheck": [1252, 2057], "mypi": [1252, 2008, 2009], "warn_alwai": 1253, "set_warn_alwai": 1253, "nonfinit": 1254, "test_el": [1256, 2007], "assume_uniqu": [1256, 2007], "0j": [1261, 1966], "nola": 1262, "envelop": 1262, "hop": [1262, 1916], "shorter": [1262, 2056, 2067], "griffin": 1262, "ieee": [1262, 1472, 1883, 2049], "tran": 1262, "assp": 1262, "vol": [1262, 1472, 1883], "pp": [1262, 1472, 1883], "236": 1262, "apr": 1262, "1984": 1262, "slide": [1262, 1428, 1429, 1430, 1465, 1512, 1513, 1514, 1571, 1619, 1650, 1651, 1652, 1695, 1824, 1825, 1916], "fft_size": 1262, "scriptmodul": [1263, 1264, 1269, 1273, 1275, 1276, 1277, 1281, 1282, 1772, 2006, 2008, 2019, 2056], "attributemodul": 1263, "names_ag": 1263, "get_debug_st": 1264, "graphexecutorst": 1264, "_extra_fil": [1264, 1265, 1273, 1276, 2045], "save_to_buff": 1264, "add_modul": [1265, 1519], "init_weight": [1265, 1519, 2046], "buf": [1265, 1519], "20l": [1265, 1519], "1l": [1265, 1519], "5l": [1265, 1519], "pretti": [1265, 1771, 1867, 2006, 2089, 2093], "syntax": [1265, 2006, 2009, 2059, 2095], "code_with_const": 1265, "constmap": 1265, "get_buff": [1265, 1519], "attributeerror": [1265, 1519, 2039, 2062], "get_extra_st": [1265, 1519], "set_extra_st": [1265, 1519], "get_paramet": [1265, 1519], "net_b": [1265, 1519], "net_c": [1265, 1519], "inlined_graph": 1265, "ipu": [1265, 1519, 2013, 2051], "remove_dupl": [1265, 1519], "named_children": [1265, 1519, 2046], "conv4": [1265, 1519], "conv5": [1265, 1519], "memo": [1265, 1519, 2093], "register_backward_hook": [1265, 1519], "register_full_backward_hook": [1265, 1519, 1704, 2046], "register_forward_hook": [1265, 1519, 1702, 2046], "with_kwarg": [1265, 1519], "always_cal": [1265, 1519, 1702], "fire": [1265, 1519, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790, 2038, 2045, 2099], "register_module_forward_hook": [1265, 1519, 2046], "register_forward_pre_hook": [1265, 1455, 1519, 1703, 2046], "forward_pr": [1265, 1519], "register_module_forward_pre_hook": [1265, 1519, 2046], "register_module_full_backward_hook": [1265, 1519, 1700, 2034, 2046], "register_full_backward_pre_hook": [1265, 1519, 1705, 2046], "register_module_full_backward_pre_hook": [1265, 1519, 2046], "register_load_state_dict_post_hook": [1265, 1519, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "incompatible_kei": [1265, 1519], "register_modul": [1265, 1519, 1706], "register_paramet": [1265, 1519, 1707, 2039, 2046], "register_state_dict_pre_hook": [1265, 1519, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "keep_var": [1265, 1519], "gan": [1265, 1519, 1724, 1758], "share_memori": [1265, 1519, 2048], "share_memory_": [1265, 1519, 2024, 2074], "4d": [1265, 1434, 1465, 1482, 1519, 1572, 1619, 1636, 1664, 1696, 1716, 1717, 1823], "1913": [1265, 1519], "3420": [1265, 1519], "5113": [1265, 1519, 1937], "2325": [1265, 1298, 1519], "gpu1": [1265, 1519], "1914": [1265, 1519], "5112": [1265, 1519, 2037], "3741": [1265, 1519], "2382": [1265, 1404, 1519], "5593": [1265, 1519], "4443": [1265, 1519], "6122": [1265, 1519], "1150": [1265, 1519], "dst_type": [1265, 1519], "set_to_non": [1265, 1519, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1785, 1786, 1787, 1788, 1789, 1790, 2037], "the_typ": 1266, "the_valu": 1266, "script_bar": 1268, "addmod": 1268, "preserved_attr": 1269, "optimize_numer": 1269, "optimize_for_infer": [1269, 2089], "run_frozen_optim": 1269, "scripted_modul": [1269, 1277, 2051], "frozen_modul": 1269, "modified_tensor": 1269, "mymodule2": 1269, "dump_alias_db": 1269, "training_method": 1270, "testcod": [1271, 1272, 1273, 1276, 2008], "interfacetyp": 1271, "impl1": 1271, "impl2": 1271, "user_fn": 1271, "user_fn_jit": 1271, "target_typ": 1272, "key1": 1272, "val1": 1272, "key2": 1272, "val2": 1272, "_restore_shap": 1273, "scriptfunct": [1273, 1277, 1278, 1281, 2056], "readlin": [1273, 1337, 2059], "other_method": 1275, "lesser": [1275, 2034, 2036], "extent": [1275, 2036, 2072], "frozen_mod": 1275, "_frames_up": 1277, "_rcb": 1277, "scriptdict": 1277, "scriptlist": 1277, "test_sum": 1277, "scripted_fn": [1277, 2006], "conv2": [1277, 1519, 1548, 2006, 2054, 2062], "some_entry_point": 1277, "python_only_fn": 1277, "testnnmodul": 1277, "pdt_model": 1277, "scripted_model": [1277, 2059], "un": [1279, 1438, 2062], "unfus": 1279, "check_trac": [1281, 1282], "check_input": [1281, 1282, 2006], "check_toler": [1281, 1282], "_force_outplac": [1281, 1282], "_module_class": [1281, 1282], "_compilation_unit": [1281, 1282], "compilationunit": [1281, 1282], "example_kwarg_input": 1281, "_store_input": [1281, 1282], "trace_modul": [1281, 2006, 2009], "untrack": 1281, "checker": [1281, 1282, 2009, 2056], "traced_foo": [1281, 2006], "example_weight": [1281, 1282], "example_forward_input": [1281, 1282], "example_inputs_is_kwarg": 1282, "method2": 1282, "example_method2_input": 1282, "weighted_kernel_sum": 1282, "use_memory_effici": 1283, "memory_effici": 1283, "scriptabl": 1283, "kaiser": [1285, 1563, 1565, 1567], "i_0": [1285, 1286, 1882, 1937, 2073], "zeroth": [1285, 1882, 2073], "out_i": 1285, "kroneck": 1286, "a_0": 1286, "a_n": 1286, "b_0": 1286, "b_1": 1286, "b_n": 1286, "k_0": [1286, 1937], "k_1": 1286, "k_n": 1286, "j_0": 1286, "j_1": 1286, "j_n": 1286, "k_t": 1286, "i_t": [1286, 1489, 1788], "b_t": 1286, "j_t": 1286, "bmatrix": 1286, "a_": [1286, 1357, 1507, 1937], "cdot": [1286, 1311, 1323, 1431, 1432, 1453, 1454, 1476, 1484, 1522, 1523, 1524, 1525, 1526, 1563, 1607, 1630, 1813, 1916, 2073, 2079], "vdot": [1286, 1333, 1334, 2007, 2057], "ddot": [1286, 1333], "kth": 1287, "full_lik": [1291, 2007, 2011, 2057], "logarithm": [1294, 1299, 1325, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1352, 1438, 1609, 1644, 1896, 2073], "gamma": [1294, 1433, 1434, 1435, 1473, 1481, 1482, 1483, 1491, 1534, 1559, 1708, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1789, 1791, 1795, 1796, 1799, 1804, 1805, 1823, 2005, 2007, 2056, 2057, 2058, 2073], "5724": [1294, 2073], "1208": [1294, 2073], "mathrlap": [1295, 1301, 1302, 1303, 1304, 1312, 1315, 1324, 1326, 1328, 1329, 1723], "qquad": [1295, 1297, 1301, 1302, 1303, 1304, 1305, 1312, 1315, 1324, 1326, 1328, 1329, 1723], "eigenvalu": [1295, 1301, 1302, 1303, 1304, 1317, 1320, 1323, 1328, 1329, 1338, 1809, 2007], "resp": [1295, 1302, 1304, 1328, 1329, 1346], "5266": 1295, "9586": 1295, "0626j": 1295, "4160": 1295, "5895": 1295, "2322": 1295, "2976j": 1295, "4928": [1295, 1937], "4692e": 1295, "8747e": 1295, "check_error": [1296, 1307, 1309, 1314, 1327, 2007], "opportun": [1296, 2006, 2068, 2093, 2094], "performantli": 1296, "3792": 1296, "9831j": 1296, "8757": 1296, "5425": 1296, "6374j": 1296, "kappa": 1297, "_p": [1297, 1528], "frobeniu": [1297, 1311, 1318, 1322, 1764], "nuc": [1297, 1318, 1322, 1335, 1735, 1744, 1764], "nuclear": [1297, 1318, 1322, 1764], "sigma_1": [1297, 1311, 1320, 1323], "sigma_n": 1297, "kappa_2": 1297, "kappa_": 1297, "4142": [1297, 1322, 1764, 1813], "1623": [1297, 1318], "2426": [1297, 1322, 1764], "7071": [1297, 1875], "5917": 1297, "9941": 1298, "5132": 1298, "5681": 1298, "4653": 1298, "4507": 1298, "4119": 1298, "6163": 1298, "1073": 1298, "3957": 1298, "9666": [1298, 1616], "0840": 1298, "3357": 1298, "2139": 1298, "slogdet": [1299, 1346, 2007, 2057], "0934": 1299, "1990": [1299, 1346], "4099": [1299, 1346], "7386": [1299, 1346], "diagonaliz": [1301, 1303], "eigenvector": [1301, 1302, 1338, 2007], "neq": [1301, 1302, 1305, 1329, 1416, 1522, 1524, 1774, 1775, 1776, 1778, 1780, 1786, 1787, 1789, 1793, 1920], "phi": [1301, 1302, 1329, 1468, 1623, 1920], "shall": [1301, 1302, 1329, 1726, 1730], "lambda_i": [1301, 1302, 1317], "lambda_j": [1301, 1302], "eigval": [1301, 2007], "9828": [1301, 1945, 2046], "3889j": 1301, "4617": 1301, "3010j": 1301, "1662": 1301, "7435j": 1301, "6139": 1301, "0562j": 1301, "1226": [1301, 1303], "5738j": [1301, 1303], "7537": [1301, 1303], "1286j": [1301, 1303], "9218": 1301, "1882": 1301, "2220j": 1301, "0270": 1301, "3867j": 1301, "7119e": 1301, "2841e": 1301, "uplo": [1302, 1304, 2007], "unitari": [1302, 1305, 1324, 1329, 1723, 1807], "ill": [1302, 1590, 2049], "eigvalsh": [1302, 1320], "9228": [1302, 1304], "2029": [1302, 1304], "0862j": [1302, 1304], "3464": [1302, 1304], "3277": [1302, 1304], "9415": [1302, 1304], "0846": 1302, "9964": 1302, "9170": 1302, "3898j": 1302, "0331j": 1302, "1062e": 1302, "5423e": 1302, "polynomi": [1303, 1304, 1802, 2094], "_n": [1303, 1304, 1306, 1723, 2039], "4576e": [1303, 1330], "5797": 1304, "4629": 1304, "1605": 1304, "3780": 1304, "1113": [1304, 2046], "7381": 1304, "h_1h_2": 1305, "h_k": 1305, "h_i": [1305, 1554], "_m": [1305, 1723], "tau_i": 1305, "8034": 1305, "4184j": 1305, "2588": 1305, "0174j": 1305, "6853": 1305, "7953j": 1305, "0790": 1305, "5620j": 1305, "6989j": 1305, "5360": 1305, "1193j": 1305, "3877": 1305, "6691j": 1305, "3512": 1305, "3024j": 1305, "4766": 1305, "5783j": 1305, "0361": [1305, 2046], "6587j": 1305, "6396": [1305, 2046], "1612j": 1305, "3693": 1305, "4481j": 1305, "aa": 1306, "pinv": [1306, 1311, 1811], "moor": [1306, 1323], "penros": [1306, 1323], "ainv": [1306, 1307, 1327, 1331], "1921e": 1306, "9073e": [1306, 1571], "5107e": 1306, "ldl": [1308, 1310], "indefinit": [1308, 2018], "ld": [1308, 1309, 1310, 2007], "sytrf": [1308, 1309], "ldl_solv": 1308, "ldl_factor_ex": [1308, 1310], "2079": [1308, 1309, 2073], "2414": [1308, 1309], "9428": [1308, 1309], "4554": [1308, 1309], "3264": [1308, 1309], "3823": [1308, 1309], "5884": [1308, 1309], "9595": [1308, 1309, 1875], "2695": [1308, 1309], "8513": [1308, 1309], "1633": [1308, 1309], "ldl_factor": 1309, "rcond": [1311, 1323, 1811, 2007], "_f": 1311, "gelsi": 1311, "gelsd": 1311, "gelss": 1311, "tridiagon": 1311, "sigma_i": [1311, 1329, 1920], "residu": [1311, 1338, 2007, 2046], "singular_valu": [1311, 2007], "0838": [1311, 2046], "2275": [1311, 1388], "3844": 1311, "5499": 1311, "1175": 1311, "9102": 1311, "0870": 1311, "6772": 1311, "7758": 1311, "5109": 1311, "4382": 1311, "3769": 1311, "1818": 1311, "3450": 1311, "0806": [1311, 2046], "3967": 1311, "3994": 1311, "1521": 1311, "1473": 1311, "9194": 1311, "0458": 1311, "6705": [1311, 1370], "1802": 1311, "4086": 1311, "5152e": 1311, "zero_": [1311, 1616, 2007, 2025, 2026, 2046, 2072], "almost": [1312, 1313, 2052, 2091, 2093, 2101], "5007": 1312, "9755": 1312, "0489": 1312, "9644": [1312, 1365], "9605e": 1312, "0376e": 1312, "lu_factor_ex": [1313, 1355], "lu_unpack": [1313, 1355, 2007, 2057], "b1": 1313, "b2": [1313, 2037, 2044], "getrf": [1314, 1327], "adjoint": [1315, 2007, 2057, 2076, 2078], "_exp": 1317, "7183": [1317, 2046], "3891": 1317, "8660": 1317, "ord": [1318, 1322, 1335, 1764, 2007, 2009, 2057], "la": [1318, 1322, 1335, 2046], "2829": 1318, "2627": 1318, "0756": 1319, "4980": 1319, "6617": 1319, "4994": 1319, "9980": 1319, "2731": 1319, "8001": 1319, "2640": 1319, "4571": 1319, "5511": 1319, "0163": [1319, 1365], "5292": 1319, "4899": 1319, "0822": 1319, "2773": [1319, 2027], "varepsilon": [1320, 1323, 1568], "tol": [1320, 1338, 2007], "fewest": 1321, "bc": [1321, 2017, 2058], "75000": 1321, "26": [1321, 1794, 2091, 2092, 2103], "148": 1321, "vector_norm": [1322, 1764], "matrix_norm": [1322, 1335, 1724, 1764], "7460": [1322, 1764], "3485": 1322, "8570e": 1322, "8480": 1322, "2361": [1322, 1764, 1765], "7417": [1322, 1764], "computation": [1323, 2043], "5495": [1323, 1388], "0979": 1323, "4092": 1323, "4132": [1323, 1881], "1143": 1323, "3662": 1323, "6374": 1323, "9294": 1323, "3269": [1323, 2046], "5745": [1323, 1914, 1915, 1964, 1965], "0382": [1323, 1404], "5922": 1323, "6759": 1323, "0600": 1323, "1933": 1323, "2090": 1323, "0903": 1323, "0817": 1323, "4752": [1323, 1919], "7124": 1323, "1631": 1323, "2272": 1323, "1356": 1323, "3933": 1323, "5023": 1323, "0308": 1323, "1725": 1323, "5216": 1323, "apinv": 1323, "5633e": 1323, "0830e": 1323, "wide": [1324, 1329, 1723, 1877, 2036, 2039, 2046, 2058, 2094], "51": [1324, 1517, 1819], "167": [1324, 1819], "68": [1324, 1819, 2006, 2008], "8571": [1324, 1819], "3943": [1324, 1819], "3314": [1324, 1819], "4286": [1324, 1819], "9029": [1324, 1819], "0343": [1324, 1819], "2857": [1324, 1819], "1714": [1324, 1819, 2046], "9429": [1324, 1819], "175": [1324, 1819], "q2": 1324, "r2": [1324, 1559], "6099e": 1324, "2158e": 1324, "logabsdet": [1325, 2007], "0032": 1325, "1219": [1325, 1838], "6690": 1325, "1161": 1325, "4053": 1325, "6218": [1325, 1934], "9273": 1325, "0082": 1325, "7576": 1325, "logdet": [1325, 2007, 2057], "linalg_slogdet": [1325, 2007, 2057], "2776": 1325, "solve_ex": 1326, "solve_triangular": [1326, 1944], "expand_a": [1326, 2007, 2039, 2057, 2076], "rectangular": [1328, 1329, 1357, 1916, 2032, 2054], "triu_": [1328, 2007], "tril_": [1328, 2007], "full_matric": [1329, 1330, 1729, 1920, 2007, 2098], "vh": [1329, 1729, 1920, 2007, 2098], "gesvdj": [1329, 1330, 1920], "jacobi": 1329, "gesvda": [1329, 1330], "gesvd": [1329, 1330, 1920], "u_k": 1329, "v_k": 1329, "sigma_j": [1329, 1920], "eigendecomposit": 1329, "0486e": 1329, "0957e": 1329, "5139": 1330, "1087": 1330, "1066": 1330, "ind": [1331, 1332, 2007, 2040], "tensorsolv": 1331, "ndim": [1331, 1332, 2025, 2027, 2072, 2078, 2092], "atensorinv": 1331, "movedim": [1332, 1372, 2007, 2040, 2057, 2076], "tensorinv": 1332, "vandermond": [1333, 1963], "pmatrix": 1333, "x_n": [1333, 1431, 1432, 1478, 1479, 1485, 1510, 1551, 1942, 2034], "125": [1333, 1538, 1963, 2007], "overlin": [1334, 1966], "3223": 1334, "2815": 1334, "1944": [1334, 2046], "4345": 1335, "pickle_modul": [1337, 1851], "weights_onli": [1337, 2004, 2020], "pickle_load_arg": 1337, "register_packag": [1337, 2051], "binaryio": [1337, 1851, 2059], "mmape": 1337, "untrust": [1337, 2004, 2020, 2059], "tamper": [1337, 2059], "ram": [1337, 2037], "surg": 1337, "unicodedecodeerror": 1337, "codec": 1337, "0x": 1337, "latin1": 1337, "byte_arrai": 1337, "niter": [1338, 1809, 1921], "ortho_iparam": 1338, "ortho_fparam": 1338, "ortho_bparam": 1338, "knyazev": 1338, "knyazev2001": 1338, "stathopoulosetal2002": 1338, "converg": [1338, 1551, 1723, 1776, 1777, 1801, 2033, 2046, 2049], "precondition": 1338, "eigenpair": 1338, "criterion": [1338, 1431, 1432, 1452, 1454, 1479, 1485, 1510, 1511, 1522, 1523, 1524, 1551, 1552, 1568, 1569, 1794, 1826, 2041], "fep": 1338, "eigenproblem": 1338, "iparam": 1338, "fparam": 1338, "bparam": 1338, "ivar": 1338, "fvar": 1338, "bvar": 1338, "tvar": 1338, "istep": 1338, "converged_count": 1338, "rerr": 1338, "force_stop": 1338, "2001": 1338, "precondit": 1338, "eigensolv": 1338, "siam": 1338, "sci": 1338, "517": 1338, "541": 1338, "epub": 1338, "doi": [1338, 1472, 1883], "1137": 1338, "s1064827500366124": 1338, "andrea": 1338, "stathopoulo": 1338, "kesheng": 1338, "2002": [1338, 1883], "2165": 1338, "2182": 1338, "s1064827500370883": 1338, "duerschetal2018": 1338, "jed": 1338, "duersch": 1338, "meiyu": 1338, "shao": 1338, "chao": 1338, "ming": 1338, "gu": 1338, "c655": 1338, "c676": 1338, "17m1129830": 1338, "log_": [1339, 1340, 1341, 1342, 2007, 2025], "7767": 1339, "3234": 1339, "2156": 1339, "2411": 1339, "5739": 1339, "5637": 1339, "4640": 1339, "1952": 1339, "4226": 1339, "5204": [1339, 1828], "5224": 1340, "9354": 1340, "7257": 1340, "1301": 1340, "2820": 1340, "0290": 1340, "1392": 1340, "8857": 1340, "6476": 1340, "0090": [1341, 1417, 1815, 2073], "9923": 1341, "5372": 1341, "2492": 1341, "8653": 1341, "7055": 1341, "7705": 1341, "2225": 1341, "8419": 1342, "8003": [1342, 2050], "9971": 1342, "5287": 1342, "0490": 1342, "2483": 1342, "0042": 1342, "9196": 1342, "3504": [1342, 1937], "logsumexp": [1343, 2007, 2025, 2057, 2073], "3069": 1343, "6867": 1343, "8731": 1343, "30000": 1343, "1269e": 1343, "log_2": 1344, "logaddexp": [1344, 2007, 2057], "limits_": 1345, "42296738": 1345, "04462666": 1345, "86278635": 1345, "94622083": 1345, "05277811": 1345, "39202815": 1345, "83525007": 1345, "84492621": 1345, "06084887": 1345, "06844475": 1345, "2611": [1346, 1934], "9254": 1346, "6213": [1346, 2046], "6843": 1346, "3242": 1346, "9665": 1346, "4539": 1346, "0887": [1346, 2073], "1336": 1346, "4025": 1346, "7089": [1346, 1461], "9032": 1346, "3031": 1346, "2589": 1352, "1135": 1352, "5481": [1352, 1365, 2046], "9566": 1352, "sum_j": [1353, 1509, 1553, 1555, 1683, 1899, 2073], "0593": [1353, 2046], "5696": 1353, "6859e": 1353, "compute_pivot": 1355, "transposit": [1355, 1941, 2072], "perm": 1355, "a_lu": 1355, "5558": 1355, "1684": 1355, "1551": 1355, "1940": 1355, "6189": 1355, "5497": 1355, "4526": 1355, "2526": 1355, "3285": 1355, "7988": 1355, "7175": 1355, "9701": 1355, "2634": 1355, "9255": 1355, "3459": 1355, "00000e": 1356, "8312": 1356, "unpack_data": [1357, 2007], "unpack_pivot": [1357, 2007], "l_": [1357, 1420, 1424, 1428, 1432, 1446, 1447, 1448, 1449, 1486, 1512], "u_": [1357, 1774, 1778], "3552": [1359, 1617], "3825": 1359, "8297": 1359, "3477": 1359, "2035": [1359, 1914, 1915, 1964, 1965], "2252": [1359, 2073], "5002": 1359, "6248": [1359, 1368], "1307": 1359, "0608": [1359, 1892], "1244": 1359, "0139": 1359, "6763": 1363, "7445": 1363, "2369": 1363, "argmax": [1363, 1423, 1512, 1650, 1651, 1652, 1932, 2007, 2057, 2098], "max_indic": 1363, "2360": 1363, "2942": 1363, "1222": [1363, 2046], "8475": 1363, "1949": 1363, "1127": 1363, "6702": 1363, "5717": 1363, "9207": 1363, "1297": 1363, "8768": 1363, "6172": 1363, "6060": 1363, "2432": 1363, "3288": 1365, "3367": [1365, 1913], "nanmean": [1365, 2007, 2057], "3841": 1365, "6320": 1365, "4254": 1365, "7384": 1365, "0131": 1365, "6549": [1365, 1875], "4279": 1365, "3350": 1365, "7694": 1365, "5600": [1365, 1572], "0842": 1365, "9580": 1365, "3623": 1365, "2343": [1365, 2027], "5085": 1365, "4599": 1365, "1807": 1365, "5219": 1366, "5212": 1366, "2202": 1366, "2505": 1366, "3982": 1366, "9948": 1366, "3518": 1366, "3131": 1366, "3180": [1366, 2072], "6993": 1366, "0436": 1366, "0438": 1366, "2270": 1366, "2751": 1366, "7303": 1366, "2192": 1366, "3321": 1366, "2488": 1366, "0778": 1366, "9510": 1366, "7048": 1366, "4742": [1366, 1950, 2073], "7125": [1366, 1901], "plot": [1367, 2036, 2061, 2077, 2105], "t_0": [1367, 1794], "t_": [1367, 1467, 1621, 1793, 1794, 2007, 2072, 2093], "s_0": 1367, "s_": [1367, 1421, 1422, 1464, 1570], "g_0": 1367, "g_": [1367, 1778, 1788, 1789], "g_i": 1367, "t_i": 1367, "0d": [1367, 1511], "xy": 1367, "50276": 1367, "cartesian_prod": [1367, 2007, 2057], "grid_x": 1367, "grid_i": 1367, "dstack": [1367, 2007, 2057, 2072], "matplotlib": [1367, 2077], "pyplot": 1367, "plt": 1367, "plot_surfac": 1367, "6750": 1368, "0857": [1368, 1947], "7197": [1368, 1972], "argmin": [1368, 2007, 2057, 2098], "min_indic": [1368, 2007], "1334": 1368, "2803": 1368, "4644": [1368, 1914, 1915, 1964, 1965], "2635": [1368, 2046], "3651": 1368, "0384": 1368, "0128": 1368, "7015": 1368, "1153": 1368, "9849": 1368, "1458": [1368, 2073], "5788": 1368, "deduc": [1370, 2072], "4851": 1370, "5037": 1370, "3633": 1370, "0760": 1370, "3362": [1372, 1373], "8437": [1372, 1373], "9627": [1372, 1373], "1727": [1372, 1373], "5173": [1372, 1373], "1398": [1372, 1373], "mpsalloc": [1374, 1376], "metal": [1376, 1385, 2019, 2022, 2047], "mpsgraph": 1376, "wait_until_complet": [1381, 1382], "signpost": [1381, 1382, 1383], "xcode": 1382, "recommendedmaxworkingsets": 1385, "unlimit": [1385, 2037], "1321": 1388, "4370": [1388, 2072], "1289": 1388, "0527": 1388, "3077": [1388, 1910], "0881": 1388, "1259": 1388, "0284": 1388, "2015": [1404, 2032, 2046], "6087": 1404, "1494": 1404, "5491": 1404, "260": 1404, "8663": 1404, "3137": 1404, "0700": 1404, "8378": 1404, "5146": 1404, "1216": 1404, "5244": 1404, "5767": 1404, "1363": 1404, "5877": 1404, "5083": 1404, "1614": 1404, "1645": 1404, "7021": 1404, "0085": 1404, "0367": 1404, "1567": 1404, "4312": 1404, "1019": 1404, "4394": 1404, "8753": 1404, "_sampl": 1405, "thtensorrandom": 1405, "320": [1405, 1442, 1546], "0404": 1407, "6361": 1407, "multigammaln": [1408, 2073], "4028e": 1409, "38": [1409, 2092], "1400e": 1409, "isnan": [1410, 2007, 2057, 2072, 2098], "midpoint": [1412, 1820], "weakli": [1414, 1415, 2073], "to_spars": [1415, 1897, 2007, 2050, 2057, 2072], "2262": [1417, 1815], "0682": [1417, 1815], "2866": [1417, 1815], "3940": [1417, 1815], "5x7": [1421, 1425], "7x7": [1421, 1425], "10x7": [1421, 1425], "cube": [1422, 1426, 1826], "d_": [1422, 1426, 1430, 1442, 1445, 1448, 1451, 1488, 1514, 1517, 1543, 1546, 1572, 1577, 1625, 1945, 1946, 1947, 1948], "5x7x9": [1422, 1426], "7x7x7": [1422, 1426], "7x9x8": [1422, 1426], "n_class": 1423, "cutoff": [1423, 2032], "div_valu": 1423, "head_bia": 1423, "edouard": 1423, "grave": [1423, 1438], "armand": 1423, "joulin": 1423, "moustapha": 1423, "ciss\u00e9": 1423, "grangier": 1423, "herv\u00e9": 1423, "j\u00e9gou": 1423, "imbalanc": 1423, "zipf": 1423, "law": 1423, "102": [1423, 2097], "1001": 1423, "1002": 1423, "_class": 1423, "maxunpool1d": [1424, 1512, 1653, 1957], "maxunpool2d": [1425, 1466, 1513, 1654, 1957], "maxunpool3d": [1426, 1467, 1514, 1655, 1957], "selu": [1427, 1463, 1618, 2007, 2032, 2056, 2057], "n_i": [1428, 1429, 1430, 1446, 1447, 1448, 1512, 1513, 1514, 1568, 1569], "c_j": [1428, 1429, 1430, 1512, 1513, 1514], "size_averag": [1431, 1432, 1452, 1454, 1478, 1484, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1597, 1598, 1606, 1608, 1633, 1637, 1638, 1649, 1657, 1658, 1659, 1660, 1661, 1669, 1681, 1682, 1693, 2007], "unreduc": [1431, 1432, 1454, 1479, 1485, 1510, 1526, 1551, 1569], "ell": [1431, 1432, 1454, 1478, 1479, 1485, 1510, 1526, 1551, 1569], "l_1": [1431, 1432, 1454, 1478, 1479, 1485, 1510, 1526, 1551, 1569], "l_n": [1431, 1432, 1454, 1478, 1479, 1485, 1510, 1526, 1551, 1569], "w_n": [1431, 1432, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883], "y_n": [1431, 1432, 1454, 1478, 1479, 1485, 1510, 1526, 1551, 1942, 2034], "lim_": [1431, 2034], "secondli": 1431, "rescal": [1431, 1432, 1454, 1523, 1524, 1526, 1553, 1555, 1597, 1598, 1608, 1661, 1729, 1758], "nbatch": [1431, 1432], "meantim": [1431, 1432, 1452, 1454, 1478, 1485, 1510, 1511, 1522, 1523, 1524, 1526, 1533, 1551, 1552, 1568, 1597, 1598, 1608, 1637, 1661, 1669, 2103], "pos_weight": [1432, 1598, 2007], "recal": [1432, 2039, 2077], "ell_c": 1432, "l_c": 1432, "p_c": 1432, "imbal": 1432, "pai": [1432, 1598, 2052, 2076], "spacial": [1432, 1598], "random_": [1432, 1454, 1526, 1598, 2007, 2025, 2081], "hat": [1433, 1434, 1435, 1481, 1482, 1483, 1559], "terminologi": [1433, 1434, 1435, 1559], "5d": [1435, 1483, 1572, 1625, 1636, 1664, 1696], "volumetr": [1435, 1559, 1572, 1625, 1636, 1696, 1697, 1698], "spatio": [1435, 1559], "in1_featur": 1436, "in2_featur": 1436, "in1": [1436, 1596], "in2": [1436, 1596], "blank": [1438, 1609, 2007, 2010], "zero_infin": [1438, 1609, 2007], "connectionist": [1438, 1609], "unseg": 1438, "longest": [1438, 1751, 1753, 1754, 2041], "input_length": [1438, 1609, 2007, 2041], "target_length": [1438, 1609, 2007], "s_n": 1438, "target_n": 1438, "unbatch": [1438, 1454, 1465, 1470, 1481, 1489, 1525, 1535, 1563, 1619], "s_min": 1438, "toronto": 1438, "edu": [1438, 1826], "icml_2006": 1438, "background": [1438, 1449, 1625, 1664, 2048, 2067], "channel_shuffl": [1439, 2007, 2057], "_left": [1440, 1441, 1442, 1443, 1444, 1445, 1541, 1542, 1543, 1544, 1545, 1546, 1575, 1576, 1577, 1664], "_right": [1440, 1441, 1442, 1443, 1444, 1445, 1541, 1542, 1543, 1544, 1545, 1546, 1575, 1576, 1577, 1664], "_top": [1441, 1442, 1444, 1445, 1542, 1543, 1545, 1546, 1576, 1577, 1664], "_bottom": [1441, 1442, 1444, 1445, 1542, 1543, 1545, 1546, 1576, 1577, 1664], "_front": [1442, 1445, 1543, 1546, 1577, 1664], "_back": [1442, 1445, 1543, 1546, 1577, 1664], "480": [1442, 1546], "0491": [1443, 1575], "7152": [1443, 1575], "0749": [1443, 1575], "3287": [1443, 1575], "8966": [1443, 1575], "1466": [1443, 1575], "2771": [1443, 1575], "6616": [1443, 1575], "4523": [1443, 1575], "1255": [1443, 1575], "6372": [1443, 1575, 1920], "1182": [1443, 1575], "8652": [1443, 1575], "6585": 1444, "4320": [1444, 1930], "8701": 1444, "4649": 1444, "_j": [1446, 1447], "star": [1446, 1447, 1448, 2009], "\u00e0": [1446, 1447, 1448, 1449, 1450, 1451, 1465, 1571], "trou": [1446, 1447, 1448, 1449, 1450, 1451, 1465, 1571], "harder": [1446, 1447, 1448, 1449, 1450, 1451, 1465, 1513, 1514, 1571], "prod_": [1447, 1448, 1450, 1451, 1464, 1570, 1780], "out_j": 1448, "deconvolut": [1449, 1450, 1451, 1603, 1604, 1605], "_pad": [1449, 1450, 1451], "semi": [1452, 1478, 2005, 2032], "supervis": [1452, 1478], "vert": [1453, 1528, 1607], "_2": [1453, 1607, 1724, 1758], "ast_1": [1453, 1469], "ast_2": [1453, 1469], "ignore_index": [1454, 1526, 1608, 1661, 2007], "unbalanc": [1454, 1526], "d_1": [1454, 1526, 1608, 1661], "d_2": [1454, 1526, 1608, 1661], "d_k": [1454, 1526, 1608, 1661], "_index": [1454, 1526], "logsoftmax": [1454, 1526, 1553, 1644], "nllloss": [1454, 1553, 1661, 1683, 1957], "blend": 1454, "smooth": [1454, 1479, 1551, 1556, 1608, 1634, 1681, 1787], "w_c": 1454, "rethink": [1454, 1608], "incept": [1454, 1608], "spectral_norm": [1455, 1748], "neuron": 1456, "detector": 1456, "dropout1d": [1458, 2007], "_freez": 1461, "sparseadam": [1461, 2058], "0251": 1461, "6902": [1461, 1817], "7172": 1461, "6431": 1461, "0748": 1461, "6969": 1461, "4970": 1461, "3448": 1461, "9685": 1461, "3677": 1461, "7265": 1461, "1685": 1461, "4362": 1461, "4004": [1461, 1901], "9400": 1461, "9124": 1461, "3616": 1461, "1151": 1461, "0309": 1461, "9315": 1461, "1655": [1461, 2037], "9897": [1461, 2039], "0635": 1461, "7895": 1461, "0364": 1461, "6778": 1461, "5803": 1461, "from_pretrain": [1461, 1462, 2096], "bag": [1462, 1617], "per_sample_weight": [1462, 1617, 2007, 2098], "embedding_sum": 1462, "8861": 1462, "4350": 1462, "0523": 1462, "1306": 1462, "5798": 1462, "0044": 1462, "7082": [1462, 1617], "2145": [1462, 1617], "6251": [1462, 1617], "6500": 1462, "satur": [1463, 1618], "alphadropout": [1463, 1591], "160": [1464, 2058], "unfold": [1465, 2007, 2057, 2076], "prod_d": [1465, 1571], "neighborhood": [1465, 1571], "col2im": [1465, 2007, 2057, 2098], "fold_param": [1465, 1571], "input_on": [1465, 1571], "output_ratio": [1466, 1467, 1620, 1621, 2007], "_random_sampl": [1466, 1467, 1620, 1621, 2007], "ben": [1466, 1467, 1620, 1621], "graham": [1466, 1467, 1620, 1621], "oh": [1466, 1467, 1620, 1621], "ow": [1466, 1467, 1620, 1621], "_ratio": [1466, 1467, 1621], "_h": 1466, "13x12": [1466, 1620], "kt": [1467, 1594, 1602, 1605, 1621, 1652], "ot": [1467, 1621], "13x12x11": [1467, 1621], "044715": [1468, 1623], "pack_sequ": [1470, 1489, 1535, 1753, 1755], "bias_ih": [1471, 1490, 1535, 1537], "bias_hh": [1471, 1490, 1535, 1537], "homoscedast": [1472, 1622], "heteroscedast": [1472, 1622], "nix": 1472, "weigend": 1472, "1994": 1472, "icnn": 1472, "94": 1472, "orlando": 1472, "fl": 1472, "usa": [1472, 2077], "374138": 1472, "instancenorm": [1473, 2064], "shrinkag": [1474, 1557, 1628, 1686], "mobilenetv3": [1476, 1630], "_val": 1477, "dissimilar": 1478, "l1loss": [1479, 1551, 1638], "outlier": [1479, 1551, 2062, 2063], "huber": [1479, 1551, 1634], "smoothl1loss": [1479, 1634, 1681], "insensit": 1480, "unused_argument1": 1480, "unused_argument2": 1480, "ingredi": [1481, 1482, 1483], "styliz": [1481, 1482, 1483], "rgb": [1482, 1483, 2077], "color": [1483, 2008, 2009, 2077, 2095], "log_target": [1484, 1637, 2007], "kl": [1484, 1637, 2005], "summaris": 1484, "loss_pointwis": 1484, "batchmean": [1484, 1637], "kl_loss": 1484, "mae": 1485, "proj_siz": [1489, 1536], "f_t": [1489, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "hf": [1489, 1490], "g_t": [1489, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "ig": [1489, 1490], "hg": [1489, 1490], "o_t": 1489, "ho": [1489, 1490], "c_t": 1489, "forget": [1489, 2008, 2009], "1402": 1489, "c_0": [1489, 1490], "proj": 1489, "c_n": 1489, "w_ii": 1489, "w_if": 1489, "w_ig": 1489, "w_io": 1489, "w_hi": 1489, "w_hf": 1489, "w_hg": 1489, "w_ho": 1489, "b_ii": 1489, "b_if": 1489, "b_ig": 1489, "b_io": 1489, "b_hi": 1489, "b_hf": 1489, "b_hg": 1489, "b_ho": 1489, "weight_hr_l": 1489, "_revers": 1489, "h_1": 1490, "c_1": 1490, "time_step": 1490, "_shape": [1491, 1534, 1708], "sentence_length": 1491, "lazymodulemixin": [1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504], "cls_to_becom": [1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1712], "convtranspose1d": [1498, 1603, 1957, 2064], "convtranspose3d": [1500, 1605, 1717, 1957, 2064], "instancenorm1d": [1501, 1635, 2064], "instancenorm2d": [1502, 1635, 2064], "instancenorm3d": [1503, 1635, 2064], "uninitializedparamet": [1504, 1699, 2005], "lrn": 1507, "signal_2d": 1507, "signal_4d": 1507, "output_2d": 1507, "output_4d": 1507, "x_j": [1509, 1553, 1555, 1683, 1899, 2043, 2073], "80827": [1515, 1516, 1517], "unpool": [1515, 1516, 1517], "maxpool3d": [1517, 1652, 1655, 1957, 2064], "unpooled_output": 1517, "t_destin": 1519, "lrelu": [1520, 2046], "hing": [1522, 1524], "sum_i": [1523, 1524, 1552], "nelement": [1523, 1552], "jointli": 1525, "multihead": [1525, 1565], "concat": [1525, 2007, 2042, 2057], "head_1": 1525, "head_h": 1525, "head_i": 1525, "qw_i": 1525, "kw_i": 1525, "vw_i": 1525, "inference_mod": [1525, 1567], "nestedtensor": [1525, 1567, 2027], "multihead_attn": 1525, "e_q": 1525, "e_k": 1525, "e_v": 1525, "_head": [1525, 1563], "merge_mask": 1525, "mask_typ": 1525, "merged_mask": 1525, "nll": 1526, "num_paramet": 1527, "nchannel": 1527, "decai": [1527, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1796, 1798, 1799, 1802, 1803, 1805, 1876, 2058], "legitim": [1527, 1625, 2040], "vert_p": 1528, "upscale_factor": [1531, 1667, 2007], "upscal": 1531, "video": [1531, 1532, 2026, 2077, 2092], "shi": [1531, 1532], "2016": [1531, 1532, 1569], "_factor": [1531, 1532, 1572, 1573, 1574], "pixel_shuffl": [1531, 2007, 2057, 2064], "downscale_factor": [1532, 1668, 2007], "pixelshuffl": [1532, 1667, 1668, 2064], "downscal": 1532, "pixel_unshuffl": [1532, 2007, 2057, 2064], "log_input": [1533, 1669, 2007], "poisson": [1533, 1669, 1876, 2005, 2007, 2057], "stirl": [1533, 1669], "rm": [1534, 1568, 1569, 1708], "rms_norm": [1534, 1708, 2007, 2057], "hh": [1535, 1537], "h_t_minus_1": 1535, "flatten_paramet": 1536, "3333333333333333": [1538, 1792, 1798, 2007], "leaki": [1538, 1675, 2032], "rectifi": [1538, 1539, 1671, 2032], "empir": 1538, "crelu": 1539, "1603": 1539, "05201": 1539, "6732632423543772848170429916717": [1547, 1678], "0507009873554804934193349852946": [1547, 1678], "kaiming_norm": 1547, "kaiming_normal_": [1547, 2005, 2011, 2032], "initialis": 1547, "calculate_gain": [1547, 2005, 2011, 2032], "modulelist": [1548, 2046], "cascad": 1548, "relu2": [1548, 1699], "swish": [1549, 1680], "coin": [1549, 1680], "cnn": [1551, 2062], "ross": 1551, "girshick": 1551, "quadrat": [1551, 2041], "huberloss": [1551, 1634], "w_j": 1554, "soft": [1557, 1627, 1686], "softshrinkag": 1557, "convert_sync_batchnorm": 1559, "r1": 1559, "sync_bn_network": 1559, "ddp_sync_bn_network": 1559, "sync_bn_modul": 1559, "d_model": [1563, 1564, 1565, 1566, 1567], "nhead": [1563, 1564, 1565, 1566, 1567], "num_encoder_lay": 1563, "num_decoder_lay": 1563, "dim_feedforward": [1563, 1565, 1567], "custom_encod": 1563, "custom_decod": 1563, "layer_norm_ep": [1563, 1565, 1567], "norm_first": [1563, 1565, 1567], "ashish": [1563, 1565, 1567], "vaswani": [1563, 1565, 1567], "noam": [1563, 1565, 1567], "shazeer": [1563, 1565, 1567], "niki": [1563, 1565, 1567], "parmar": [1563, 1565, 1567], "jakob": [1563, 1565, 1567], "uszkoreit": [1563, 1565, 1567], "llion": [1563, 1565, 1567], "jone": [1563, 1565, 1567], "aidan": [1563, 1565, 1567], "gomez": [1563, 1565, 1567], "lukasz": [1563, 1565, 1567], "illia": [1563, 1565, 1567], "polosukhin": [1563, 1565, 1567], "6000": [1563, 1565, 1567, 1572, 1823, 1870, 1873], "6010": [1563, 1565, 1567], "feedforward": [1563, 1565, 1567, 2032], "transformer_model": 1563, "word_language_model": 1563, "src_mask": [1563, 1567], "tgt_mask": [1563, 1564, 1565], "memory_mask": [1563, 1564, 1565], "src_key_padding_mask": [1563, 1566, 1567], "tgt_key_padding_mask": [1563, 1564, 1565], "memory_key_padding_mask": [1563, 1564, 1565], "src_is_caus": 1563, "tgt_is_caus": [1563, 1564, 1565], "memory_is_caus": [1563, 1564, 1565], "_mask": [1563, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1747], "_key_padding_mask": 1563, "generate_square_subsequent_mask": 1563, "sz": 1563, "decoder_lay": [1564, 1565], "transformerdecoderlay": 1564, "transformer_decod": 1564, "encoder_lay": [1566, 1567], "enable_nested_tensor": 1566, "mask_check": 1566, "bert": [1566, 2096], "1810": 1566, "04805": 1566, "transformerencoderlay": 1566, "transformer_encod": 1566, "triplet": [1568, 1569, 1693, 1694], "x3": 1568, "balnta": [1568, 1569], "riba": [1568, 1569], "a_i": [1568, 1569, 1878], "p_i": [1568, 1569], "bf": [1568, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "rvert_p": [1568, 1662], "tripletmarginwithdistanceloss": [1568, 1694], "triplet_loss": [1568, 1569], "distance_funct": [1569, 1694], "l_i": 1569, "tripletmarginloss": [1569, 1693], "l_p": [1569, 1662], "pairwisedist": [1569, 1665], "penal": [1569, 2046, 2058], "distant": 1569, "anchor_id": 1569, "positive_id": 1569, "negative_id": 1569, "l_infin": 1569, "bmva": 1569, "bmvc": 1569, "paper119": 1569, "unflattened_s": 1570, "namedtensor": 1570, "namedshap": 1570, "u_1": 1570, "u_n": 1570, "u_i": 1570, "im2col": [1571, 2007, 2057], "2x3": 1571, "3x4": 1571, "inp_unf": 1571, "out_unf": 1571, "recompute_scale_factor": [1572, 1636], "bicub": [1572, 1625, 1636, 1696, 1957], "trilinear": [1572, 1625, 1636, 1696, 1957], "input_3x3": 1572, "4375": 1572, "8125": 1572, "9375": 1572, "2400": [1572, 1937], "1200": [1572, 1848, 2037], "8800": 1572, "4400": [1572, 1937], "7200": 1572, "0400": 1572, "2800": [1572, 1870], "3600": 1572, "5200": 1572, "6400": 1572, "1678": 1576, "4418": 1576, "9466": [1576, 2073], "9604": 1576, "4219": 1576, "5241": 1576, "9162": 1576, "5436": [1576, 1937], "6446": 1576, "sdpa_kernel": [1578, 1677], "flash_attent": [1578, 1583], "cudnn_attent": 1578, "seq_len_q": 1579, "seq_len_kv": 1579, "causalvari": 1579, "constru": 1579, "causal_upper_left": 1579, "causal_lower_right": 1579, "bsz": 1579, "seqlen_q": 1579, "seqlen_kv": 1579, "head_dim": 1579, "attn_bia": [1579, 1677], "upper_left": [1580, 1582], "lower_right": [1580, 1581], "diagonal_offset": [1580, 1581], "causalbia": [1581, 1582], "sdpbackend": 1583, "adaptiveavgpool1d": [1584, 2064], "tripl": [1586, 1589], "adaptivemaxpool1d": 1587, "adaptivemaxpool2d": [1588, 1957], "adaptivemaxpool3d": 1589, "avgpool1d": [1592, 2064], "st": [1594, 1602, 1605, 1652, 2103], "avgpool3d": [1594, 1957, 2064], "iT": [1594, 1602, 1605], "padt": [1594, 1602, 1605], "score": [1598, 1677, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744, 2005], "dt": [1602, 1605, 2073, 2103], "out_padw": [1603, 1604, 1605], "out_padh": [1604, 1605], "out_padt": 1605, "cosineembeddingloss": 1606, "ctcloss": [1609, 1957], "charact": [1609, 1867, 2006, 2009, 2026, 2067], "elu": [1615, 2007, 2056, 2057, 2064], "embedding_matrix": [1616, 1617], "8490": 1616, "9625": 1616, "6753": 1616, "7761": 1616, "6108": 1616, "6246": 1616, "9751": 1616, "3618": 1616, "4161": [1616, 2072], "2419": 1616, "7383": 1616, "0237": 1616, "7794": 1616, "0528": 1616, "3385": 1616, "8612": 1616, "1867": 1616, "5384": 1616, "8720": 1616, "6262": 1616, "7471": 1616, "embeddingbag": [1617, 1957, 2062, 2064, 2078], "3397": 1617, "5545": 1617, "5893": 1617, "4386": 1617, "5882": 1617, "featurealphadropout": 1618, "gaussiannllloss": 1622, "border": 1625, "affine_grid": [1625, 2007], "extrema": 1625, "pil": [1625, 1636], "overshoot": [1625, 1636, 1696], "gumbel": [1627, 2005], "y_hard": 1627, "y_soft": 1627, "hardtanh": [1632, 2007, 2019, 2057, 2064, 2098], "hingeembeddingloss": 1633, "use_input_stat": [1635, 2007], "antialia": 1636, "anti": 1636, "pillow": [1636, 2077], "buggi": 1636, "inter_nearest": 1636, "104157": 1636, "kldivloss": 1637, "batchsiz": [1637, 1902, 1903, 1904, 1906, 1907, 2072], "leaky_relu": [1641, 2007, 2032, 2057, 2064, 2098], "localresponsenorm": 1643, "_stacklevel": [1644, 1683, 1684, 2007, 2013], "lppool1d": 1646, "lppool2d": 1647, "lppool3d": 1648, "marginrankingloss": 1649, "max_unpool1d": [1650, 2007], "multimarginloss": 1658, "multilabelmarginloss": 1659, "multilabelsoftmarginloss": 1660, "n_0": 1662, "n_": 1662, "n_k": 1662, "everywher": [1663, 1916, 2058], "circularpad2d": 1664, "constantpad2d": 1664, "reflectionpad2d": [1664, 1957], "replicationpad2d": [1664, 1957], "t4d": 1664, "p1d": 1664, "p2d": 1664, "p3d": 1664, "pixelunshuffl": [1668, 2064], "poissonnllloss": 1669, "rrelu": [1676, 2007, 2057], "dropout_p": [1677, 2007], "temp_mask": 1677, "ev": 1677, "legend": 1677, "softmarginloss": 1682, "module_kwarg": 1692, "upsample_trilinear": 1697, "fo": 1697, "spatia": 1698, "mixin": [1699, 2005], "dry": 1699, "lazymlp": 1699, "lazylinear": 1699, "lazy_mlp": 1699, "8832e": 1699, "5636e": 1699, "1598e": 1699, "5637e": 1699, "8788e": 1699, "0042e": 1699, "0019": 1699, "lazymodul": 1699, "full_mlp": 1699, "3837": [1699, 1817], "0907": 1699, "6708": 1699, "5223": 1699, "9028": 1699, "2851": 1699, "6813": 1699, "5766": 1699, "8678": 1699, "1320": 1699, "2938": 1699, "0679": [1699, 1947], "2793": [1699, 1765], "1088": 1699, "1795": 1699, "2301": 1699, "2807": 1699, "2479": 1699, "1091": 1699, "has_uninitialized_param": 1699, "initialize_paramet": 1699, "check_reduct": 1709, "delay_all_reduce_named_param": 1709, "param_to_hook_all_reduc": 1709, "optimizer_param": 1709, "loss_func": [1709, 2067], "consume_prefix_in_state_dict_if_pres": 1709, "nccl2": 1709, "dictat": [1709, 2009], "megabyt": 1709, "mb": [1709, 2037], "detach_": [1709, 2007, 2025, 2064, 2072], "ddp_logging_data": 1709, "can_set_static_graph": 1709, "model_ddp": 1709, "_get_ddp_logging_data": 1709, "divide_by_initial_world_s": 1709, "caught": [1709, 2024], "syncbatchnorm": 1709, "deplet": 1709, "pariti": 1709, "another_input": 1709, "predivid": 1709, "noop": 1709, "encode_and_decod": 1709, "encoded_tensor": 1709, "decoded_tensor": 1709, "error_if_nonfinit": [1713, 1714], "clip_valu": 1715, "nhwc": [1716, 1717, 2075, 2077], "outweigh": [1716, 1717, 1790, 2103], "_convnd": 1718, "conv_w": 1719, "conv_b": 1719, "bn_rm": [1719, 1721], "bn_rv": [1719, 1721], "bn_ep": [1719, 1721], "bn_w": [1719, 1721], "bn_b": [1719, 1721], "linear_w": 1721, "linear_b": 1721, "orthogonal_map": 1723, "use_trivi": 1723, "qq": 1723, "matrix_exp": [1723, 2007, 2057], "caylei": 1723, "thin": [1723, 1819], "manifold": 1723, "register_parametr": [1723, 1724, 1726, 1727, 1758, 2028], "orth_linear": 1723, "parametrizedlinear": [1723, 1724, 1725], "moduledict": [1723, 1724, 1725, 2008, 2046], "parametrizationlist": [1723, 1724, 1725, 1729], "_orthogon": 1723, "9332e": 1723, "n_power_iter": [1724, 1758], "sn": [1724, 1758], "discrimin": [1724, 1758], "adversari": [1724, 1758], "lipschitz": 1724, "reimplement": [1724, 1758, 2091], "_spectralnorm": 1724, "convtranspos": [1724, 1758], "snm": 1724, "0081": 1724, "amaxbackward0": 1724, "decoupl": [1725, 1761, 1777, 1780, 1786], "1602": [1725, 1761], "07868": [1725, 1761], "_weightnorm": 1725, "original0": [1725, 1726, 1729, 1761], "original1": [1725, 1726, 1729, 1761], "tensor_nam": [1726, 1728, 1729, 1730], "right_invers": [1726, 1729], "out_rnn": 1727, "rnn_cell": 1727, "inbuilt": 1729, "unparametr": 1729, "rankon": 1729, "surject": 1729, "s0_sqrt": 1729, "linear_rank_on": 1729, "matrix_rank": 1729, "leave_parametr": 1730, "unparametris": 1730, "prune": [1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 2028, 2072], "skeleton": 1731, "compute_mask": [1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738], "importance_scor": [1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1743, 1744], "apply_mask": [1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738], "pruned_tensor": [1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738], "default_mask": [1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738], "_orig": [1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745, 1746, 1747], "undon": [1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1747], "unprun": [1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746], "basepruningmethod": [1736, 1742], "add_pruning_method": 1736, "pruning_typ": [1736, 1740], "unstructur": [1736, 1740], "ravel": [1736, 2007, 2057], "nonmask": 1736, "bias_mask": [1739, 1741], "pruning_method": 1740, "parameters_to_prun": 1740, "l1unstructur": 1740, "parameters_to_vector": 1740, "forward_pre_hook": [1742, 2046], "random_unstructur": [1742, 1747], "odict_kei": 1743, "weight_orig": 1743, "weight_mask": [1743, 1746], "columns_prun": 1745, "t_modul": [1748, 1749, 1758, 1761], "weight_norm": 1749, "sorted_indic": [1750, 1752, 1753, 1755], "unsorted_indic": [1750, 1752, 1753, 1755], "abc": [1750, 2009], "axbc": 1750, "throughout": [1750, 2043, 2046, 2062, 2091], "conform": [1750, 2046], "is_cuda": [1750, 2025, 2057, 2074], "enforce_sort": [1751, 1752, 1753], "unsort": [1751, 1752, 1855], "shortest": 1751, "uncondition": [1751, 2004, 2039, 2104], "pad_sequ": [1752, 1756, 2007, 2057], "padding_valu": [1753, 1754, 2007], "total_length": [1753, 2041], "seq_unpack": 1753, "lens_unpack": 1753, "packed_sequ": 1755, "unpacked_sequ": 1755, "padded_sequ": 1756, "unpad": 1756, "unstack": 1756, "as_tensor": [1756, 1935, 2007, 2027, 2039, 2057, 2077, 2078, 2079], "unpadded_sequ": 1756, "module_cl": [1757, 2067], "5846e": 1757, "29": [1757, 1883, 2056], "8307e": 1757, "5250e": 1757, "1210e": 1757, "4677e": 1757, "5915e": 1757, "4013e": 1757, "weight_u": 1758, "parameters_and_buff": 1759, "reparamater": 1759, "weight_g": [1761, 2007], "weight_v": 1761, "modern": [1761, 2049, 2087, 2094], "bother": 1761, "102999": 1761, "remove_parametr": 1761, "as_tupl": [1763, 1972], "complexfloat": [1764, 1770], "0425": 1765, "7969": 1765, "2925": 1765, "7229": 1765, "2134": 1765, "0505": 1765, "1408": 1765, "0563": 1765, "0566": 1765, "0732": [1765, 1937], "0687": 1765, "1177": 1765, "2303": [1765, 1913], "1552": 1765, "6148": 1765, "6535": 1765, "8318": 1765, "3987": 1765, "9544": [1765, 1827], "6048": 1765, "7909": 1765, "120": [1767, 2077], "from_valu": 1770, "onnx_typ": 1770, "tensorprotodatatyp": 1770, "torch_c_value_with_type_float": 1770, "from_dtyp": 1770, "jit_type_bas": 1770, "safer": [1770, 2016], "onnxexportererror": [1770, 2054, 2056], "from_onnx_typ": 1770, "_onnx": 1770, "symbolicvalueerror": 1770, "onnx_compat": 1770, "scalar_nam": 1770, "complexhalf": 1770, "complexdoubl": 1770, "float8e5m2": 1770, "float8e4m3fn": 1770, "float8e5m2fnuz": 1770, "float8e4m3fnuz": 1770, "torch_nam": 1770, "int8_t": 1770, "int16_t": 1770, "float8_e5m2": [1770, 2074, 2078], "float8_e4m3fn": [1770, 2074, 2078], "float8_e5m2fnuz": [1770, 2074], "float8_e4m3fnuz": [1770, 2074], "verif": [1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 2056], "params_dict": 1771, "export_opt": [1771, 2054], "_excluded_node_kind": 1771, "frozenset": [1771, 2009], "scalarimplicit": [1771, 2057], "prim": [1771, 2006, 2056, 2057], "listconstruct": [1771, 2006], "all_mismatch_leaf_graph_info": 1771, "essential_node_count": 1771, "subgraph": [1771, 2034, 2038, 2056, 2059, 2083, 2092, 2093, 2103], "essential_node_kind": 1771, "export_repro": 1771, "repro_dir": 1771, "repro": [1771, 2094, 2103], "test_": 1771, "test_data_set_0": 1771, "input_0": [1771, 2056], "pb": [1771, 2056], "input_1": [1771, 2056], "output_0": 1771, "output_1": 1771, "find_mismatch": [1771, 2056], "exhibit": [1771, 2056, 2090, 2103], "verificationopt": [1771, 2056], "find_partit": 1771, "has_mismatch": 1771, "pretty_print_mismatch": 1771, "pretty_print_tre": 1771, "graph_info": [1771, 2056], "__2": [1771, 2056], "__1": [1771, 2056], "__3": [1771, 2056], "110": [1771, 2056], "verify_export": 1771, "onnx_graph": 1771, "onnx_out": 1771, "pt_out": 1771, "ignore_non": 1772, "check_shap": 1772, "check_dtyp": [1772, 2079], "onnxbackend": 1772, "onnx_runtime_cpu": 1772, "remained_onnx_input_idx": 1772, "acceptable_error_percentag": 1772, "percentag": [1772, 1801, 1876, 2062], "weight_decai": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 2046, 2058], "1e6": 1773, "tensorlist": [1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "prohibit": [1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789, 2037, 2051], "impair": [1773, 1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "ungraph": [1773, 1774, 1776, 1777, 1778, 1780, 1786, 1787, 1788], "removeablehandl": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "register_load_state_dict_pre_hook": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "register_state_dict_post_hook": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "register_step_post_hook": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "register_step_pre_hook": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "new_arg": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "new_kwarg": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1786, 1787, 1788, 1789, 1790], "momentum_buff": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1786, 1787, 1788, 1789, 1790], "reevalu": [1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 2058], "rho": 1774, "110mm": [1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "4pt": [1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "textbf": [1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "theta_0": [1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "v_0": [1774, 1776, 1777, 1780, 1786, 1787], "leftarrow": [1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "u_0": [1774, 1778], "hspace": [1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "5mm": [1774, 1775, 1776, 1777, 1778, 1780, 1787, 1788, 1789], "nabla_": [1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "theta_": [1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "10mm": [1774, 1775, 1776, 1777, 1778, 1780, 1787, 1788, 1789], "v_t": [1774, 1776, 1777, 1780, 1786, 1787], "v_": [1774, 1776, 1777, 1780, 1786, 1787, 1789], "2_t": [1774, 1775, 1776, 1777, 1780, 1786, 1787], "21mm": 1774, "u_t": [1774, 1778], "theta_t": [1774, 1775, 1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "oscil": 1774, "lr_decai": 1775, "initial_accumulator_valu": 1775, "12mm": [1775, 1786], "_sum_0": 1775, "tild": [1775, 1787], "_sum_t": 1775, "_sum_": 1775, "subgradi": 1775, "999": [1776, 1777, 1778, 1780, 1786, 1790, 2051, 2058], "amsgrad": [1776, 1777], "beta_1": [1776, 1777, 1778, 1780, 1786], "beta_2": [1776, 1777, 1778, 1780, 1786], "13mm": [1776, 1777, 1778, 1780, 1786, 1787, 1788, 1789], "textit": [1776, 1777, 1780, 1786, 1789], "m_0": [1776, 1777, 1778, 1780, 1786], "widehat": [1776, 1777, 1780, 1786], "m_t": [1776, 1777, 1778, 1780, 1786], "m_": [1776, 1777, 1778, 1780, 1786, 2072], "002": [1778, 1780], "t_1": 1778, "2e": [1778, 1780], "max_it": 1779, "max_ev": 1779, "tolerance_grad": 1779, "tolerance_chang": 1779, "history_s": 1779, "line_search_fn": 1779, "bfg": 1779, "minfunc": 1779, "intens": [1779, 2049], "param_byt": 1779, "strong_wolf": 1779, "momentum_decai": 1780, "004": 1780, "decoupled_weight_decai": [1780, 1786], "gamma_t": 1780, "psi": [1780, 2073], "_decai": [1780, 1786], "15mm": [1780, 1788, 1789], "mu_t": 1780, "96": 1780, "mu_": 1780, "11mm": 1780, "incorpor": [1780, 1875, 2062], "nesterov": [1780, 1789], "4e": 1780, "nadamw": 1780, "weightdecai": 1786, "18mm": 1786, "rho_": 1786, "6mm": 1786, "rho_t": 1786, "t_2": 1786, "l_t": 1786, "radamw": 1786, "_0": [1787, 2040, 2059, 2105], "av": 1787, "8mm": 1787, "3mm": 1787, "lectur": 1787, "hinton": 1787, "step_siz": [1788, 1805], "resili": [1788, 2049], "eta_": [1788, 1793, 1794], "etaplu": 1788, "etaminu": 1788, "gamma_": [1788, 2073], "0_": 1788, "eta_0": 1788, "i_": [1788, 1937], "eta_t": [1788, 1793, 1794], "dampen": 1789, "sutskev": 1789, "veloc": 1789, "conflat": 1790, "is_spars": [1790, 2025, 2057, 2072, 2074], "maskedtensor": [1790, 2072], "rig": 1790, "insist": 1790, "lr_schedul": [1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 2058], "chainabl": [1791, 1801], "081": 1791, "729": [1791, 1804], "6561": [1791, 1967], "59049": 1791, "scheduler1": [1791, 1804, 2058], "constantlr": [1791, 1804], "total_it": [1791, 1792, 1798, 1802, 1804], "scheduler2": [1791, 1804, 2058], "exponentiallr": [1791, 1804, 2058], "get_last_lr": [1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805], "print_lr": [1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805], "is_verbos": [1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805], "__dict__": [1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805], "last_epoch": [1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1805], "mileston": [1792, 1798, 1799, 1804, 2058], "simultan": [1792, 1793, 1798, 1799, 1805, 2034, 2067], "025": [1792, 1798], "t_max": [1793, 2058], "eta_min": [1793, 1794], "anneal": [1793, 1794, 1801, 2058], "cur": [1793, 1794], "sgdr": [1793, 1794], "2k": 1793, "sole": 1793, "t_mult": 1794, "interleav": 1794, "base_lr": [1795, 1801], "max_lr": [1795, 1801], "step_size_up": 1795, "step_size_down": 1795, "scale_fn": 1795, "scale_mod": 1795, "cycle_momentum": [1795, 1801], "base_momentum": [1795, 1801], "max_momentum": [1795, 1801], "cyclic": 1795, "forth": [1795, 1963, 2004, 2061, 2088], "amplitud": [1795, 1801], "triangular2": 1795, "exp_rang": 1795, "bckenstler": 1795, "train_batch": [1795, 1801], "get_lr": 1795, "lr_lambda": [1797, 1800], "lambda1": 1797, "lambda2": 1797, "start_factor": 1798, "end_factor": 1798, "03125": 1798, "0375": 1798, "04375": 1798, "005": [1799, 1805], "lmbda": 1800, "total_step": 1801, "steps_per_epoch": 1801, "pct_start": 1801, "anneal_strategi": [1801, 2058], "div_factor": 1801, "final_div_factor": 1801, "three_phas": 1801, "1cycl": 1801, "fastai": 1801, "unpublish": 1801, "initial_lr": 1801, "min_lr": [1801, 1803], "1e4": 1801, "annihil": 1801, "00075": 1802, "00050": 1802, "00025": 1802, "patienc": 1803, "threshold_mod": 1803, "cooldown": 1803, "stagnat": 1803, "new_lr": 1803, "baselin": 1803, "intoler": 1803, "optimum": 1803, "dynamic_threshold": 1803, "val_loss": 1803, "81": 1804, "mn": 1807, "pca": [1809, 2072], "overestim": [1809, 1921], "nathan": [1809, 1921], "halko": [1809, 1921], "gunnar": [1809, 1921], "martinsson": [1809, 1921], "tropp": [1809, 1921], "probabilist": [1809, 1921], "0909": [1809, 1921], "4061": [1809, 1921], "na": [1809, 1921], "cmath": [1813, 2007], "4142j": 1813, "4331": 1816, "2475": [1816, 1919], "6834": 1816, "2791": 1816, "1875": 1816, "5561": 1816, "4670": 1816, "8020": 1817, "5428": 1817, "5854": 1817, "5261": [1817, 1920], "1857": 1817, "2498": 1817, "1646": [1817, 2037], "0705": [1817, 2039], "0629": 1817, "2962": 1817, "0821": [1817, 1876], "1831": 1817, "type1": [1818, 2007], "type2": [1818, 2007], "2117": 1820, "9765": 1820, "1707": 1820, "4884": 1820, "5661": 1820, "5795": 1820, "5280": 1820, "9206": 1820, "quantization_schem": [1821, 1822, 1823, 1824, 1825], "int_repr": [1821, 1822, 2007, 2057], "nchw": [1823, 2077], "qx": [1823, 1824, 1825], "00001": 1823, "max_pool1d": [1824, 2007, 2057, 2064], "max_pool2d": [1825, 2007, 2054, 2057, 2064], "quasirandom": 1826, "scrambl": 1826, "sobol": 1826, "quasi": 1826, "21201": 1826, "web": 1826, "unsw": 1826, "au": [1826, 2059], "fkuo": 1826, "art": 1826, "owen": 1826, "niederreit": 1826, "xing": 1826, "466": 1826, "489": 1826, "decemb": 1826, "1998": 1826, "zh": 1826, "vychisl": 1826, "phy": 1826, "784": 1826, "802": 1826, "1967": 1826, "soboleng": 1826, "draw_base2": 1826, "base2": 1826, "fast_forward": 1826, "142": 1827, "283": 1827, "570": 1827, "359": 1827, "9894": 1827, "2503": 1828, "3525": 1828, "5673": 1828, "8237": 1828, "5781": 1828, "6879": 1828, "3816": 1828, "7249": 1828, "0998": 1828, "im": [1832, 2034], "1436": 1832, "9966": 1832, "3426": 1832, "6366": 1832, "5954": 1832, "8929": 1832, "0923": 1832, "1719": 1832, "4709": 1832, "1996": 1832, "4595": 1838, "4314": 1838, "n2": 1841, "n3": 1841, "negat": [1844, 1929, 2009], "is_neg": [1844, 2007, 2057], "equidist": 1848, "inexact": 1848, "1234567": 1848, "1230": 1848, "vstack": [1849, 2007, 2057, 2072], "0370": 1850, "2970": 1850, "5420": 1850, "9105": 1850, "8351": 1850, "pickle_protocol": [1851, 2059], "default_protocol": 1851, "_use_new_zipfile_seri": [1851, 2051], "zipfil": [1851, 2059], "sorted_sequ": [1855, 2007], "sorter": [1855, 2007], "sorted_sequence_1d": 1855, "select_copi": [1857, 2007, 2057], "92701": [1859, 2075], "get_default_devic": 1859, "henry2019": 1863, "briefli": [1863, 2042], "nine": 1863, "fma": 1863, "10x": 1863, "1904": 1863, "06376": 1863, "denorm": [1864, 2049], "sse3": 1864, "aarch64": 1864, "323": 1864, "88131e": 1864, "324": 1864, "interop": 1865, "intraop": 1866, "edgeitem": 1867, "linewidth": 1867, "sci_mod": 1867, "shamelessli": 1867, "repr": [1867, 2009], "sane": 1867, "_tensor_str": 1867, "_formatt": 1867, "12345": 1867, "1235": 1867, "excess": [1869, 2094], "24j": 1870, "8000j": 1870, "9600j": 1870, "4472": [1870, 2046], "8944j": 1870, "expit": [1871, 2073], "2222": [1873, 1935], "4444": 1873, "8889": 1873, "4901e": 1874, "4000e": 1874, "0077e": 1874, "4923e": 1874, "waveform": [1875, 1876, 1877], "1564": 1875, "4540": 1875, "8910": 1875, "9877": 1875, "1423": [1875, 1898], "4154": 1875, "8413": [1875, 2073], "0302": 1876, "2231": 1876, "6065": 1876, "5400e": 1876, "3546e": 1876, "4788e": 1876, "8316e": 1876, "02": [1876, 1877, 1882], "3534e": 1876, "0065e": [1877, 1882], "1875e": [1877, 1882], "3937e": [1877, 1882], "2465e": [1877, 1882], "8250e": [1877, 1882], "9858e": [1877, 1882], "1365e": [1877, 1882], "8659e": [1877, 1882], "4658e": [1877, 1882], "3941e": [1877, 1882], "5400": 1878, "3376": 1878, "4200": 1878, "9136": 1878, "wit": [1878, 2006], "0955": [1878, 1879, 1881], "3455": [1878, 1879, 1881], "6545": [1878, 1879, 1881], "9045": [1878, 1879, 1881], "0800": [1879, 1880], "1876": [1879, 1880], "4601": [1879, 1880], "7700": [1879, 1880], "9723": [1879, 1880], "1679": 1880, "3979": 1880, "6821": 1880, "9121": 1880, "1170": 1881, "9698": 1881, "36358": 1883, "z_n": [1883, 2034], "48917": 1883, "2z_n": 1883, "13659": 1883, "3z_n": 1883, "01064": 1883, "4z_n": 1883, "\u03c0": 1883, "sidelob": 1883, "transact": 1883, "acoust": 1883, "speech": 1883, "84": 1883, "91": 1883, "feb": 1883, "1981": 1883, "tassp": 1883, "1163506": 1883, "heinzel": 1883, "spectrum": [1883, 2049, 2106], "dft": 1883, "februari": 1883, "holomet": 1883, "fnal": 1883, "gov": 1883, "gh_fft": 1883, "nutal": 1883, "general_ham": 1883, "6280e": 1883, "2698e": 1883, "1052e": 1883, "9826e": 1883, "5461": [1885, 2046], "1347": 1885, "7266": 1885, "2746": 1885, "5194": 1885, "1343": 1885, "4032": 1885, "2711": 1885, "5380": 1887, "8632": 1887, "1265": 1887, "9399": 1887, "5644": 1887, "9744": 1887, "1268": 1887, "2162": 1892, "6719": 1892, "3332": 1892, "5793": [1892, 2046], "0061": 1892, "6058": 1892, "9497": 1892, "5071": 1892, "3343": 1892, "9553": 1892, "0960": 1892, "derivati": [1893, 1897], "to_sparse_coo": 1894, "sparsr": 1895, "run_my_model": 1895, "prev_checks_en": 1895, "is_en": [1895, 1902, 1903, 1904, 1905, 1906, 1907], "check_invari": [1895, 1902, 1903, 1904, 1905, 1906, 1907, 2072], "sparse_csr_tensor": [1895, 2007, 2057, 2072], "z_": [1897, 2034, 2073], "bigoplus_": 1897, "kj": 1897, "bigoplu": 1897, "sparseaddmmbackward0": 1897, "y1": [1897, 2054, 2088], "sparsemmreduceimplbackward0": 1897, "y2": [1897, 2054, 2088], "sparsiti": [1898, 2005, 2016, 2032], "spy": 1898, "2847": 1898, "7805": 1898, "1900": [1898, 2050], "to_dens": [1898, 1900, 2007, 2057, 2072], "3903": 1898, "x_k": 1899, "6438": 1901, "6467": 1901, "3411": 1901, "0918": 1901, "5348": 1901, "0634": 1901, "0494": 1901, "0646": 1901, "1844": 1901, "1276": 1901, "1874": 1901, "6334": 1901, "9682": 1901, "5340": 1901, "7483": 1901, "4512": 1901, "4073": 1901, "8901": 1901, "3183": 1901, "7539": 1901, "6596": 1901, "ncolblock": [1902, 2072], "array_list": [1902, 1903, 1904, 1906, 1907], "nrow": [1902, 1903, 1904, 1906, 1907, 2072], "ncol": [1902, 1903, 1904, 1906, 1907, 2072], "denses": [1902, 1903, 1904, 1906, 1907, 2072], "check_sparse_tensor_invari": [1902, 1903, 1904, 1905, 1906, 1907, 2072], "nrowblock": [1903, 2072], "compressed_indic": [1904, 2007, 2072], "plain_indic": [1904, 2007, 2072], "compressed_dim_s": [1904, 2072], "is_coalesc": [1905, 2007, 2057, 2072], "rdinat": 1905, "prerequisit": [1905, 2038], "coalescion": 1905, "sparsetensor": 1905, "_indic": [1905, 2057, 2072, 2094], "0755": [1909, 1910], "0226": [1909, 1910], "0831": [1909, 1910], "4806": [1909, 1910], "0112": 1909, "2883": 1909, "6933": 1909, "0457": 1910, "0069": 1910, "2310": 1910, "2345": [1913, 1945], "1229": 1913, "1863": 1913, "2959": [1914, 1915, 1964, 1965], "8101": [1914, 1915, 1964, 1965], "5027": [1914, 1915, 1964, 1965], "3270": [1914, 1915, 1964, 1965], "5905": [1914, 1915, 1964, 1965], "6538": [1914, 1915, 1964, 1965, 2046], "3330": [1914, 1915, 1964, 1965], "5596": [1914, 1915, 1964, 1965], "6548": [1914, 1915, 1964, 1965], "1264": [1914, 1915, 1964, 1965], "5080": [1914, 1915, 1920, 1964, 1965, 2046], "6420": [1914, 1915, 1964, 1965], "1992": [1914, 1915, 1964, 1965], "0311": [1914, 2073], "7477": 1914, "2204": 1914, "9087": 1914, "2620": 1915, "0028": [1915, 1941], "0957": 1915, "6038": 1915, "0645": [1915, 1965], "4485": [1915, 1965], "8707": [1915, 1965], "0665": [1915, 1965], "taper": 1916, "librosa": 1916, "omega": 1916, "win": [1916, 2034], "_fft": [1916, 2007], "1133": 1919, "2958": 1919, "5475": 1919, "0569": 1919, "0737": 1919, "3429": 1919, "9138": 1919, "9337": 1919, "6864": [1919, 1945], "1132": 1919, "7892": 1919, "1003": 1919, "5688": 1919, "3637": 1919, "9906": 1919, "5197": 1919, "4598": 1919, "3708": 1919, "6217": 1919, "435": 1919, "1335": 1919, "3135": 1919, "gesdd": 1920, "conquer": 1920, "gesvdjbatch": 1920, "fortran": 1920, "2364": 1920, "7752": 1920, "7201": 1920, "7394": 1920, "0504": 1920, "3371": 1920, "5296": 1920, "3550": 1920, "5569": 1920, "2445": 1920, "1414": 1920, "4027": 1920, "0287": 1920, "5434": 1920, "1946": 1920, "8833": 1920, "3679": 1920, "4296": 1920, "2890": 1920, "6604": 1920, "2717": 1920, "2618": 1920, "4234": 1920, "2481": 1920, "4733": 1920, "3289": [1920, 2051], "0315": 1920, "7806": 1920, "0199": 1920, "8766": 1920, "4809": 1920, "4054": 1920, "7600": 1920, "8611": 1920, "2594": 1920, "4373": 1920, "6531e": 1920, "a_big": 1920, "6503e": 1920, "swapax": [1923, 2007, 2057, 2076], "1995": 1930, "4608": 1930, "7702": 1930, "4875": 1930, "9158": 1930, "5872": 1930, "6929": 1930, "6932": 1930, "take_along_axi": [1932, 2040], "max_idx": 1932, "sorted_idx": 1932, "2027": 1933, "7687": 1933, "4412": 1933, "3856": 1933, "5930": 1933, "9859": 1933, "4722": 1933, "3366": 1933, "8986": 1934, "7279": 1934, "1745": [1934, 2039], "7156": 1934, "8257": 1934, "2553": 1934, "11111": 1935, "222222": 1935, "3333333": 1935, "1111": 1935, "array_split": 1936, "i_d": 1937, "k_": 1937, "4532": 1937, "4874": 1937, "5018": 1937, "4796": [1937, 2050], "5162": 1937, "5306": 1937, "2922": 1937, "7556": 1937, "2741": 1937, "3161": 1937, "0704": 1937, "0187": 1937, "4079": 1937, "3126": 1937, "8744": 1937, "8223": 1937, "9445": 1937, "4117": 1937, "7780": 1937, "7193": 1937, "4867": 1937, "3204": 1937, "5513": 1937, "4737": [1937, 1968], "2850": 1937, "2573": 1937, "5997": 1937, "sparsebsr": 1941, "sparsecsc": 1941, "sparsebsc": 1941, "9893": 1941, "5809": 1941, "1669": 1941, "7299": 1941, "4942": [1941, 2046], "y_0": 1942, "x_diff": 1942, "y_diff": 1942, "riemann": [1942, 2034, 2043, 2073], "badli": 1944, "cloned_coeffici": 1944, "1527": 1944, "0753": 1944, "7986": 1944, "0210": 1944, "3513": 1944, "5492": 1944, "7403": 1944, "0243": 1944, "7841": 1944, "9046": 1944, "5405": 1944, "9320": 1944, "9270": 1944, "2826": 1944, "lbrace": [1945, 1946, 1947, 1948], "rbrace": [1945, 1946, 1947, 1948], "0813": 1945, "8619": 1945, "7105": 1945, "0935": 1945, "1380": 1945, "3409": [1945, 2050], "2219": 1945, "5653": 1945, "2521": 1945, "2544": 1945, "3461": 1945, "4785": 1945, "4477": 1945, "6049": 1945, "6368": 1945, "8775": 1945, "7145": 1945, "1502": 1945, "2716": 1945, "1243": 1945, "5413": 1945, "3615": 1945, "0614": 1945, "7344": 1945, "3164": 1945, "7648": 1945, "4024": 1945, "0978": 1945, "col": [1946, 1948, 2007], "2309": 1947, "5207": 1947, "0049": 1947, "2072": 1947, "0680": 1947, "6602": 1947, "3480": 1947, "5211": 1947, "4573": 1947, "5876": 1947, "0794": [1947, 2073], "8373": 1947, "6654": 1947, "2604": 1947, "5235": 1947, "2447": 1947, "9556": 1947, "2919": 1947, "1768": 1947, "4333": 1947, "3146": [1947, 2046], "6576": 1947, "0432": 1947, "9348": [1947, 2073], "4410": 1947, "9888": 1947, "3337": 1947, "6556": 1947, "4798": 1947, "5466": 1950, "8008": 1950, "9079": 1950, "unique_consecut": [1953, 2007, 2057], "inverse_indic": [1953, 1954], "a_unique_dim0": 1953, "5678": [1955, 2067], "78": 1955, "alon": [1957, 2008, 2059], "put_": [1957, 2007], "index_add": [1957, 2007, 2057], "index_select": [1957, 2007, 2057, 2072, 2098], "fractionalmaxpool2d": 1957, "fractionalmaxpool3d": 1957, "reflectionpad1d": 1957, "reflectionpad3d": 1957, "replicationpad1d": 1957, "replicationpad3d": 1957, "histc": [1957, 2007, 2057], "bincount": [1957, 2007, 2057], "kthvalu": [1957, 2007, 2025, 2057], "avg_pool3d_backward_cuda": 1957, "for_tensor": 1958, "for_modul": 1958, "for_storag": 1958, "unsupported_dtyp": 1958, "privateuse1": [1958, 1960, 2061, 2066], "rename_privateuse1_backend": [1958, 2005], "is_foo": 1958, "frames_to_skip": 1959, "maximum_number_of_fram": 1959, "_register_device_modul": 1960, "backendmodul": 1960, "get_amp_supported_dtyp": 1960, "is_autocast_en": [1960, 2007, 2057], "get_autocast_dtyp": 1960, "set_autocast_dtyp": 1960, "set_autocast_en": 1960, "_is_in_bad_fork": 1960, "bad_fork": 1960, "get_rng_stat": [1960, 2005, 2066], "set_rng_stat": [1960, 2005, 2066], "extend_dispatch": 1960, "pytorch_open_registration_exampl": 1960, "nicer": 1961, "slot": [1962, 2087, 2104], "alexandr": 1963, "theophil": 1963, "0631": 1964, "5590": 1964, "4893": 1964, "8258": 1964, "5926": 1965, "0056": 1965, "3646": 1965, "vecdot": 1966, "mi": [1967, 1968], "6116": 1967, "5772": [1967, 2073], "4606": 1967, "9120": 1967, "0786": 1967, "7497": 1967, "6623": 1967, "5772j": 1967, "9120j": 1967, "7497j": 1967, "6623j": 1967, "3839j": 1968, "2098": 1968, "6699j": 1968, "3470": 1968, "9451j": 1968, "5174": 1968, "3136j": 1968, "6699": 1968, "9451": 1968, "3136": 1968, "vertic": [1970, 1971, 2058, 2060, 2077, 2094], "atleast_2d": [1971, 2007, 2057], "3139": 1972, "3898": 1972, "1657": 1972, "0383": 1972, "8785": 1972, "1089": 1972, "_xpudeviceproperti": 1985, "hubconf": 2004, "entrypoint_nam": 2004, "_resnet18": 2004, "smoother": [2004, 2016], "load_state_dict_from_url": [2004, 2020], "2gb": 2004, "relative_path_to_checkpoint": 2004, "pth": [2004, 2020, 2051], "dirnam": 2004, "__file__": [2004, 2052, 2059, 2096], "5c106cde": [2004, 2020], "force_reload": 2004, "skip_valid": 2004, "trust_repo": 2004, "repo_own": 2004, "repo_nam": 2004, "ref": [2004, 2072, 2090, 2103], "torchhub": 2004, "github_token": 2004, "mute": 2004, "repo_or_dir": 2004, "resnet50": [2004, 2077, 2096], "resnet50_weight": 2004, "imagenet1k_v1": 2004, "download_url_to_fil": 2004, "hash_prefix": 2004, "temporary_fil": 2004, "sha256": [2004, 2020], "s3": [2004, 2020, 2052], "amazonaw": [2004, 2020, 2052], "model_dir": [2004, 2020], "check_hash": [2004, 2020], "hub_dir": [2004, 2020], "get_dir": [2004, 2020], "ext": [2004, 2020], "eight": [2004, 2020], "hash": [2004, 2007, 2009, 2020, 2057], "succinct": 2004, "set_dir": 2004, "path_to_hub_dir": 2004, "torch_hom": 2004, "xdg_cache_hom": [2004, 2037], "reiniti": [2004, 2017], "path_importer_cach": 2004, "subpackag": [2004, 2059], "offend": [2004, 2095], "classifi": [2005, 2009, 2056, 2058, 2062, 2077], "pypi": 2005, "conda": [2005, 2052], "hip": 2005, "javadoc": 2005, "uninitializedbuff": 2005, "anomali": 2005, "can_device_access_p": 2005, "current_blas_handl": 2005, "device_of": 2005, "get_arch_list": 2005, "get_device_cap": 2005, "get_device_nam": 2005, "get_device_properti": 2005, "get_gencode_flag": 2005, "get_sync_debug_mod": 2005, "ipc_collect": 2005, "memory_usag": 2005, "set_stream": 2005, "set_sync_debug_mod": 2005, "power_draw": 2005, "clock_rat": 2005, "outofmemoryerror": 2005, "jiter": 2005, "sanit": 2005, "_record_memory_histori": [2005, 2105], "_snapshot": [2005, 2105], "_dump_snapshot": [2005, 2105], "empty_cach": [2005, 2037, 2044, 2105], "set_per_process_memory_fract": 2005, "current_allocated_memori": 2005, "driver_allocated_memori": 2005, "deferredmtiacallerror": 2005, "idiom": [2005, 2052], "nnpack": 2005, "openmp": [2005, 2036, 2052, 2080, 2092, 2094], "xeon": [2005, 2036, 2100], "pathwis": 2005, "exponentialfamili": 2005, "binomi": [2005, 2007, 2057], "chi2": 2005, "continuousbernoulli": 2005, "dirichlet": 2005, "fishersnedecor": 2005, "halfcauchi": 2005, "halfnorm": 2005, "inversegamma": 2005, "kumaraswami": 2005, "lkjcholeski": 2005, "laplac": 2005, "lognorm": 2005, "lowrankmultivariatenorm": 2005, "mixturesamefamili": 2005, "multinomi": [2005, 2007, 2057], "multivariatenorm": 2005, "negativebinomi": 2005, "onehotcategor": 2005, "relaxedbernoulli": 2005, "logitrelaxedbernoulli": 2005, "relaxedonehotcategor": 2005, "studentt": 2005, "transformeddistribut": 2005, "vonmis": 2005, "weibul": 2005, "wishart": 2005, "hub": [2005, 2020, 2096], "misc": 2005, "normal_": [2005, 2007, 2025, 2032, 2037, 2081], "constant_": [2005, 2032], "ones_": [2005, 2032], "zeros_": [2005, 2032], "eye_": [2005, 2011, 2032], "dirac_": [2005, 2011, 2032], "xavier_uniform_": [2005, 2032], "xavier_normal_": [2005, 2032, 2046], "kaiming_uniform_": [2005, 2032], "trunc_normal_": [2005, 2032], "orthogonal_": [2005, 2011, 2032, 2046], "sparse_": [2005, 2032], "swa": 2005, "ema": 2005, "powersgd": 2005, "remotemodul": 2005, "fork_rng": [2005, 2066], "doublestorag": [2005, 2074], "floatstorag": [2005, 2074], "halfstorag": [2005, 2074], "longstorag": [2005, 2074], "intstorag": [2005, 2074], "shortstorag": [2005, 2074], "charstorag": [2005, 2074], "bytestorag": [2005, 2074], "boolstorag": [2005, 2074], "bfloat16storag": [2005, 2074], "complexdoublestorag": [2005, 2074], "complexfloatstorag": [2005, 2074], "quint8storag": [2005, 2074], "qint8storag": [2005, 2074], "qint32storag": [2005, 2074], "quint4x2storag": [2005, 2074], "quint2x4storag": [2005, 2074], "make_tensor": [2005, 2079], "assert_allclos": [2005, 2079], "generate_methods_for_privateuse1_backend": 2005, "get_cpp_backtrac": 2005, "set_modul": 2005, "sampler": 2005, "mobile_optim": 2005, "optimize_for_mobil": [2005, 2019], "model_zoo": 2005, "load_url": [2005, 2020], "tensorboard": [2005, 2021, 2061], "summarywrit": [2005, 2021, 2077], "iinfo": 2005, "__config__": [2005, 2036], "__future__": 2005, "set_log": [2005, 2015, 2103], "miscellan": [2005, 2106], "torchdata": 2005, "torchserv": 2005, "torchtext": 2005, "xla": [2005, 2013, 2051, 2075, 2090], "disadvantag": 2006, "gentl": 2006, "beam": 2006, "traced_bar": 2006, "myscriptmodul": 2006, "103": [2006, 2008], "939": [2006, 2008], "116": [2006, 2008], "779": [2006, 2008], "123": [2006, 2008], "my_script_modul": [2006, 2008], "ins": 2006, "pytorch_jit": 2006, "traced_fn": 2006, "disable_jit_exampl": 2006, "printer": 2006, "rv": 2006, "rv0": 2006, "rv1": 2006, "ssa": 2006, "block0": 2006, "block1": 2006, "loop_in_traced_fn": 2006, "input_tupl": 2006, "fill_row_zero": 2006, "tracerwarn": 2006, "nr": 2006, "09115803241729736": 2006, "6782537698745728": 2006, "cpu_model": 2006, "gpu_model": 2006, "sample_input_cpu": 2006, "sample_input_gpu": 2006, "traced_cpu": 2006, "traced_gpu": 2006, "use_gpu": 2006, "__constants__": [2006, 2008], "my_module_inst": 2006, "redeclar": 2006, "nn_module_inst": 2006, "my_scripted_model": 2006, "pep": [2006, 2008, 2056, 2092], "526": [2006, 2008, 2056], "script_method": 2006, "implicitly_compiled_method": 2006, "another_forward": 2006, "unused_method": 2006, "some_fn": 2006, "ever": [2006, 2074, 2105], "some_fn2": 2006, "some_fn3": 2006, "some_fn4": 2006, "my_dict": [2006, 2008], "my_int": [2006, 2008], "my_const": 2006, "make_dict": 2006, "nnc": 2006, "nvfuser": 2006, "__and__": 2007, "__iand__": 2007, "__ilshift__": 2007, "__ior__": 2007, "__irshift__": 2007, "__ixor__": 2007, "__lshift__": 2007, "__or__": 2007, "__rshift__": 2007, "__xor__": 2007, "absolute_": 2007, "acos_": [2007, 2025], "addbmm_": 2007, "addcdiv_": 2007, "addcmul_": 2007, "addmv_": [2007, 2025], "addr_": 2007, "align_a": [2007, 2025, 2026, 2057], "align_to": [2007, 2025, 2026, 2057], "ellipsis_idx": 2007, "aminmax": [2007, 2057], "arccos_": 2007, "arccosh_": 2007, "arcsin_": [2007, 2072], "arcsinh_": 2007, "arctan2_": 2007, "arctan_": 2007, "arctanh_": 2007, "argwher": [2007, 2057], "as_strided_": 2007, "as_strided_scatt": [2007, 2057, 2098], "asin_": [2007, 2025, 2072], "asinh_": [2007, 2025], "atan_": [2007, 2025], "atanh_": [2007, 2025], "baddbmm_": 2007, "bernoulli_": [2007, 2025, 2081], "bitwise_and_": 2007, "bitwise_left_shift_": 2007, "bitwise_not_": [2007, 2025], "bitwise_or_": 2007, "bitwise_right_shift_": 2007, "bitwise_xor_": 2007, "broadcast_to": [2007, 2057], "cauchy_": [2007, 2025, 2081], "ceil_": [2007, 2025], "clamp_max": [2007, 2057], "clamp_max_": 2007, "clamp_min": [2007, 2057], "clamp_min_": 2007, "clip_": 2007, "conj_physical_": 2007, "copysign_": 2007, "cos_": [2007, 2025, 2034], "cosh_": [2007, 2025], "count_nonzero": [2007, 2057], "cummax": [2007, 2057], "cummin": [2007, 2057], "cumprod_": 2007, "cumsum_": 2007, "deg2rad": [2007, 2025, 2057, 2072], "deg2rad_": [2007, 2025, 2072], "outdim": 2007, "diagonal_scatt": [2007, 2057], "digamma_": [2007, 2025], "div_": [2007, 2025, 2072], "divide_": 2007, "dsplit": [2007, 2057], "eq_": 2007, "erf_": [2007, 2025], "erfc_": [2007, 2025], "erfinv_": [2007, 2025], "exp2": [2007, 2057, 2073, 2077, 2098], "exp2_": 2007, "exp_": [2007, 2025], "expm1_": [2007, 2025], "exponential_": [2007, 2025, 2081], "fill_diagonal_": 2007, "fix_": 2007, "fliplr": [2007, 2057], "flipud": [2007, 2057], "float_power_": 2007, "floor_": [2007, 2025], "floor_divide_": [2007, 2072], "fmax": [2007, 2057, 2098], "fmin": [2007, 2057, 2098], "fmod_": 2007, "frac_": [2007, 2025], "frexp": [2007, 2057, 2098], "gcd_": 2007, "ge_": 2007, "ger": [2007, 2057], "get_devic": [2007, 2025, 2057, 2072, 2074, 2075], "greater_": 2007, "greater_equal_": 2007, "gt_": 2007, "hardshrink": [2007, 2057], "heavisid": [2007, 2057], "heaviside_": 2007, "hsplit": [2007, 2057, 2076], "hypot_": 2007, "i0_": 2007, "igamma_": 2007, "igammac_": 2007, "index_fil": [2007, 2025, 2057], "index_reduc": [2007, 2057], "is_complex": [2007, 2054, 2057, 2072, 2075], "is_contigu": [2007, 2025, 2057, 2076], "is_floating_point": [2007, 2025, 2057, 2072, 2075], "is_infer": [2007, 2057], "is_same_s": [2007, 2057, 2072], "is_set_to": [2007, 2057], "is_sign": [2007, 2025, 2057, 2072], "isclos": [2007, 2057], "isfinit": [2007, 2049, 2057, 2098], "isinf": [2007, 2057, 2072, 2098], "isneginf": [2007, 2057, 2072], "isposinf": [2007, 2057, 2072], "isreal": [2007, 2057], "istft": [2007, 2057], "kron": [2007, 2057], "lcm_": 2007, "ldexp_": 2007, "le_": 2007, "lerp_": 2007, "less_": 2007, "less_equal_": 2007, "lgamma_": 2007, "log10_": [2007, 2025], "log1p_": [2007, 2025, 2072], "log2_": [2007, 2025], "log_normal_": [2007, 2025, 2081], "logaddexp2": [2007, 2057], "logcumsumexp": [2007, 2057], "logical_and_": 2007, "logical_not_": [2007, 2025], "logical_or_": 2007, "logical_xor_": 2007, "logit_": 2007, "lt_": 2007, "masked_fil": [2007, 2025, 2027, 2057, 2072], "masked_scatt": [2007, 2057], "masked_select": [2007, 2025, 2057], "matrix_pow": [2007, 2057], "moveaxi": [2007, 2057], "msort": [2007, 2057], "multiply_": 2007, "mvlgamma_": 2007, "nan_to_num_": 2007, "nanmedian": [2007, 2025, 2057], "nansum": [2007, 2057], "narrow_copi": [2007, 2057, 2072], "ne_": 2007, "neg_": [2007, 2025, 2072], "negative_": [2007, 2072], "new_empty_strid": [2007, 2057], "new_ful": [2007, 2037, 2057], "new_on": [2007, 2057], "nextafter_": 2007, "nonzero_stat": [2007, 2057], "not_equal_": 2007, "polygamma_": 2007, "pow_": [2007, 2025], "q_per_channel_scal": [2007, 2057], "q_per_channel_zero_point": [2007, 2057], "q_scale": [2007, 2057], "q_zero_point": [2007, 2057], "rad2deg": [2007, 2025, 2057, 2072], "rad2deg_": [2007, 2025, 2072], "reciprocal_": [2007, 2025], "record_stream": [2007, 2037, 2057], "refine_nam": [2007, 2025, 2026, 2057], "relu_": [2007, 2064], "remainder_": 2007, "rename_": [2007, 2025, 2026], "renorm_": 2007, "reshape_a": [2007, 2027, 2057, 2076], "resize_a": [2007, 2057], "the_templ": 2007, "resize_as_": [2007, 2025, 2072], "resize_as_sparse_": 2007, "retains_grad": [2007, 2057], "roll": [2007, 2057], "rot90": [2007, 2057], "round_": [2007, 2025], "rsqrt_": [2007, 2025], "select_scatt": [2007, 2057, 2098], "sgn_": [2007, 2025], "sigmoid_": [2007, 2025, 2064], "sign_": [2007, 2025], "sinc_": 2007, "sinh_": [2007, 2025], "slice_invers": [2007, 2057], "slice_scatt": [2007, 2057, 2098], "smm": [2007, 2057, 2072], "sparse_resize_": 2007, "sparse_resize_and_clear_": 2007, "split_with_s": [2007, 2057, 2076, 2098], "sqrt_": [2007, 2025], "square_": 2007, "squeeze_": [2007, 2064], "sspaddmm": [2007, 2057, 2072], "sub_": [2007, 2025, 2072], "subtract_": 2007, "sum_to_s": [2007, 2057], "swapaxes_": 2007, "swapdim": [2007, 2057, 2076], "swapdims_": 2007, "take_along_dim": [2007, 2057], "tan_": [2007, 2025], "tanh_": [2007, 2025, 2064], "tensor_indices_or_sect": 2007, "to_mkldnn": [2007, 2057], "to_padded_tensor": [2007, 2027, 2057], "to_sparse_bsc": [2007, 2057], "to_sparse_bsr": [2007, 2057, 2072], "to_sparse_csc": [2007, 2057, 2072], "transpose_": [2007, 2072], "true_divide_": 2007, "trunc_": [2007, 2025], "type_a": [2007, 2025, 2057], "out0": [2007, 2051], "unsafe_chunk": [2007, 2057], "unsafe_split": [2007, 2057], "unsafe_split_with_s": [2007, 2057], "unsqueeze_": [2007, 2064], "view_a": [2007, 2057, 2076], "vsplit": [2007, 2057, 2076], "xlogy_": 2007, "adaptive_avg_pool2d": [2007, 2039, 2057, 2064], "adaptive_max_pool1d_with_indic": [2007, 2039], "adaptive_max_pool2d_with_indic": 2007, "adaptive_max_pool3d_with_indic": 2007, "alpha_dropout": [2007, 2057], "assert_int_or_pair": 2007, "arg_nam": 2007, "binary_cross_entropi": [2007, 2057], "binary_cross_entropy_with_logit": [2007, 2057], "celu": [2007, 2057], "dropout2d": 2007, "dropout3d": 2007, "feature_alpha_dropout": [2007, 2057], "fractional_max_pool2d_with_indic": 2007, "fractional_max_pool3d_with_indic": 2007, "gaussian_nll_loss": 2007, "glu": [2007, 2057], "gumbel_softmax": 2007, "hardsigmoid": [2007, 2057, 2064], "hardswish": [2007, 2057, 2064], "huber_loss": [2007, 2057], "instance_norm": [2007, 2057, 2064], "local_response_norm": 2007, "lp_pool1d": 2007, "lp_pool2d": 2007, "lp_pool3d": 2007, "max_pool1d_with_indic": [2007, 2057], "max_pool3d_with_indic": [2007, 2057, 2098], "mish": [2007, 2057], "multi_head_attention_forward": 2007, "embed_dim_to_check": 2007, "in_proj_weight": 2007, "in_proj_bia": 2007, "bias_k": 2007, "bias_v": 2007, "out_proj_weight": 2007, "out_proj_bia": 2007, "use_separate_proj_weight": 2007, "q_proj_weight": 2007, "k_proj_weight": 2007, "v_proj_weight": 2007, "static_k": 2007, "static_v": 2007, "multilabel_soft_margin_loss": 2007, "relu6": [2007, 2057, 2064], "silu": [2007, 2027, 2057], "softsign": 2007, "tanhshrink": 2007, "adaptive_avg_pool1d": [2007, 2039, 2057, 2064, 2098], "adaptive_max_pool1d": [2007, 2039, 2057], "affine_grid_gener": [2007, 2057], "alias_copi": [2007, 2057], "align_tensor": [2007, 2057], "alpha_dropout_": 2007, "as_strided_copi": [2007, 2057], "atleast_1d": [2007, 2057], "avg_pool1d": [2007, 2057, 2064, 2098], "bartlett_window": [2007, 2011, 2057], "cudnn_en": 2007, "batch_norm_backward_elemt": 2007, "invstd": 2007, "sum_di": 2007, "sum_dy_xmu": 2007, "batch_norm_backward_reduc": 2007, "input_g": 2007, "bias_g": 2007, "out3": 2007, "batch_norm_elemt": [2007, 2057], "batch_norm_gather_stat": [2007, 2057], "batch_norm_gather_stats_with_count": [2007, 2057], "batch_norm_stat": [2007, 2057], "batch_norm_update_stat": [2007, 2057], "blackman_window": [2007, 2011, 2057], "block_diag": [2007, 2057], "can_cast": [2007, 2057], "ccol_indices_copi": [2007, 2057], "celu_": 2007, "choose_qparams_optim": [2007, 2057], "n_bin": 2007, "bit_width": 2007, "col_indices_copi": [2007, 2057], "column_stack": [2007, 2057], "constant_pad_nd": [2007, 2057, 2098], "conv_tbc": [2007, 2057], "crow_indices_copi": [2007, 2057], "cudnn_affine_grid_gener": [2007, 2057], "cudnn_batch_norm": [2007, 2057], "exponential_average_factor": 2007, "cudnn_convolut": [2007, 2057], "cudnn_convolution_add_relu": [2007, 2057], "cudnn_convolution_relu": [2007, 2057], "cudnn_convolution_transpos": [2007, 2057], "cudnn_grid_sampl": [2007, 2057], "cudnn_is_accept": [2007, 2057], "cumulative_trapezoid": [2007, 2057], "detach_copi": [2007, 2057, 2102], "diagonal_copi": [2007, 2057], "dropout_": [2007, 2019], "embedding_renorm_": 2007, "physical_layout": [2007, 2098], "empty_quant": [2007, 2057], "anyenumtyp": 2007, "expand_copi": [2007, 2057], "fake_quantize_per_channel_affin": [2007, 2057], "fbgemm_linear_fp16_weight": [2007, 2057], "packed_weight": 2007, "fbgemm_linear_fp16_weight_fp32_activ": [2007, 2057], "fbgemm_linear_int8_weight": [2007, 2057], "col_offset": 2007, "weight_scal": 2007, "weight_zero_point": 2007, "fbgemm_linear_int8_weight_fp32_activ": [2007, 2057], "fbgemm_linear_quantize_weight": [2007, 2057], "fbgemm_pack_gemm_matrix_fp16": [2007, 2057], "fbgemm_pack_quantized_matrix": [2007, 2057], "feature_alpha_dropout_": 2007, "feature_dropout": [2007, 2057], "feature_dropout_": 2007, "frobenius_norm": [2007, 2057], "from_fil": [2007, 2057, 2074], "fused_moving_avg_obs_fake_qu": [2007, 2057], "observer_on": 2007, "fake_quant_on": 2007, "running_min": 2007, "running_max": 2007, "per_row_fake_qu": 2007, "symmetric_qu": 2007, "interpolation_mod": [2007, 2098], "has_bias": 2007, "gru_cel": [2007, 2057], "w_ih": 2007, "w_hh": 2007, "hamming_window": [2007, 2011, 2057], "histogramdd": [2007, 2057], "hspmm": [2007, 2057, 2072], "indices_copi": [2007, 2057], "is_autocast_cpu_en": [2007, 2057], "is_grad_en": [2007, 2057], "is_vulkan_avail": [2007, 2057], "isin": [2007, 2057], "kaiser_window": [2007, 2057], "lstm_cell": [2007, 2057], "meshgrid": [2007, 2057], "miopen_batch_norm": [2007, 2057], "miopen_convolut": [2007, 2057], "miopen_convolution_add_relu": [2007, 2057], "miopen_convolution_relu": [2007, 2057], "miopen_convolution_transpos": [2007, 2057], "miopen_depthwise_convolut": [2007, 2057], "miopen_rnn": [2007, 2057], "weight_stride0": 2007, "dropout_st": 2007, "out4": 2007, "mkldnn_adaptive_avg_pool2d": [2007, 2057], "mkldnn_convolut": [2007, 2057], "mkldnn_linear_backward_weight": 2007, "bias_defin": 2007, "mkldnn_max_pool2d": [2007, 2057], "mkldnn_max_pool3d": [2007, 2057], "mkldnn_rnn_layer": [2007, 2057], "weight0": 2007, "weight1": 2007, "weight2": 2007, "weight3": 2007, "hx_": 2007, "cx_": 2007, "native_batch_norm": [2007, 2057], "save_mean": 2007, "save_invstd": 2007, "native_channel_shuffl": [2007, 2057], "native_dropout": [2007, 2057, 2098], "native_group_norm": [2007, 2057, 2098], "hxw": [2007, 2098], "native_layer_norm": [2007, 2057, 2098], "native_norm": [2007, 2057, 2072], "norm_except_dim": [2007, 2057], "nuclear_norm": [2007, 2057], "pairwise_dist": [2007, 2057], "permute_copi": [2007, 2057], "promote_typ": [2007, 2057, 2079], "quantize_per_channel": [2007, 2057, 2062], "quantize_per_tensor_dynam": [2007, 2057, 2062], "quantized_batch_norm": [2007, 2057], "quantized_gru_cel": [2007, 2057], "packed_ih": 2007, "packed_hh": 2007, "col_offsets_ih": 2007, "col_offsets_hh": 2007, "scale_ih": 2007, "scale_hh": 2007, "zero_point_ih": 2007, "zero_point_hh": 2007, "quantized_lstm_cel": [2007, 2057], "quantized_max_pool1d": [2007, 2057], "quantized_max_pool2d": [2007, 2057], "quantized_max_pool3d": [2007, 2057], "quantized_rnn_relu_cel": [2007, 2057], "quantized_rnn_tanh_cel": [2007, 2057], "rand_lik": [2007, 2011, 2037, 2057, 2081, 2088], "randint_lik": [2007, 2011, 2057, 2081], "randn_lik": [2007, 2011, 2027, 2057, 2081], "randperm": [2007, 2011, 2057, 2081, 2098], "result_typ": [2007, 2057], "scalar1": 2007, "scalar2": 2007, "rnn_relu": [2007, 2057], "rnn_relu_cel": [2007, 2057], "rnn_tanh": [2007, 2057], "rnn_tanh_cel": [2007, 2057], "row_indices_copi": [2007, 2057], "row_stack": [2007, 2057], "rrelu_": 2007, "rsub": [2007, 2057], "searchsort": [2007, 2057], "segment_reduc": [2007, 2057], "selu_": 2007, "slice_copi": [2007, 2057], "sparse_bsc_tensor": [2007, 2057, 2072], "sparse_bsr_tensor": [2007, 2057, 2072], "sparse_compressed_tensor": [2007, 2057, 2072], "sparse_csc_tensor": [2007, 2057, 2072], "split_copi": [2007, 2057], "split_with_sizes_copi": [2007, 2057], "squeeze_copi": [2007, 2057], "std_mean": [2007, 2025, 2057], "t_copi": [2007, 2057], "threshold_": 2007, "transpose_copi": [2007, 2057], "trapz": [2007, 2057], "tril_indic": [2007, 2011, 2057], "triu_indic": [2007, 2011, 2057], "unbind_copi": [2007, 2057], "unfold_copi": [2007, 2057], "unsqueeze_copi": [2007, 2057], "values_copi": [2007, 2057], "vander": [2007, 2011, 2057], "var_mean": [2007, 2025, 2057], "view_as_complex_copi": [2007, 2057], "view_as_real_copi": [2007, 2057], "_nn": 2007, "adaptive_max_pool2d": [2007, 2057], "avg_pool2d": [2007, 2057, 2064, 2098], "conv_depthwise3d": [2007, 2057], "cross_entropy_loss": [2007, 2057], "input_scal": 2007, "elu_": 2007, "flatten_dense_tensor": [2007, 2057], "random_sampl": 2007, "gelu_": 2007, "hardsigmoid_": [2007, 2064], "hardswish_": 2007, "hardtanh_": [2007, 2064], "leaky_relu_": 2007, "log_sigmoid": [2007, 2057], "mish_": 2007, "mkldnn_linear": [2007, 2057], "mkldnn_reorder_conv2d_weight": [2007, 2057], "mkldnn_reorder_conv3d_weight": [2007, 2057], "nll_loss2d": [2007, 2057], "nll_loss_nd": [2007, 2057], "reflection_pad3d": [2007, 2057, 2098], "relu6_": 2007, "rrelu_with_nois": [2007, 2057], "rrelu_with_noise_": 2007, "silu_": 2007, "slow_conv3d": [2007, 2057], "slow_conv_dilated2d": [2007, 2057], "slow_conv_dilated3d": [2007, 2057], "slow_conv_transpose2d": [2007, 2057], "slow_conv_transpose3d": [2007, 2057], "softshrink": [2007, 2057], "thnn_conv2d": [2007, 2057], "unflatten_dense_tensor": [2007, 2057], "upsample_bicubic2d": [2007, 2057], "scales_h": 2007, "scales_w": 2007, "upsample_bilinear2d": [2007, 2057, 2098], "upsample_linear1d": [2007, 2057], "upsample_nearest1d": [2007, 2057], "upsample_nearest2d": [2007, 2057, 2098], "upsample_nearest3d": [2007, 2057], "scales_d": 2007, "upsample_trilinear3d": [2007, 2057], "fft_fftfreq": [2007, 2057], "fft_fftshift": [2007, 2057], "fft_hfft2": [2007, 2057], "fft_hfftn": [2007, 2057], "fft_ifftshift": [2007, 2057], "fft_ihfft2": [2007, 2057], "fft_ihfftn": [2007, 2057], "fft_rfftfreq": [2007, 2057], "_linalg": 2007, "linalg_cross": [2007, 2057], "linalg_det": [2007, 2057], "linalg_diagon": [2007, 2057], "eigvec": 2007, "linalg_ldl_factor": [2007, 2057], "linalg_ldl_factor_ex": [2007, 2057], "linalg_ldl_solv": [2007, 2057], "linalg_lu": [2007, 2057], "linalg_lu_factor": [2007, 2057], "linalg_lu_factor_ex": [2007, 2057], "linalg_lu_solv": [2007, 2057], "linalg_matmul": [2007, 2057], "linalg_matrix_exp": [2007, 2057], "linalg_matrix_pow": [2007, 2057], "linalg_multi_dot": [2007, 2057], "linalg_norm": [2007, 2057], "linalg_pinv": [2007, 2057], "linalg_solve_ex": [2007, 2057], "linalg_solve_triangular": [2007, 2057], "linalg_vand": [2007, 2057], "linalg_vecdot": [2007, 2057], "linalg_vector_norm": [2007, 2057], "_nest": 2007, "nested_to_padded_tensor": [2007, 2057], "_spars": 2007, "sparse_sampled_addmm": [2007, 2057], "_special": 2007, "special_airy_ai": [2007, 2057], "special_bessel_j0": [2007, 2057], "special_bessel_j1": [2007, 2057], "special_bessel_y0": [2007, 2057], "special_bessel_y1": [2007, 2057], "special_chebyshev_polynomial_t": [2007, 2057], "special_chebyshev_polynomial_u": [2007, 2057], "special_chebyshev_polynomial_v": [2007, 2057], "special_chebyshev_polynomial_w": [2007, 2057], "special_digamma": [2007, 2057], "special_entr": [2007, 2057], "special_erf": [2007, 2057], "special_erfc": [2007, 2057], "special_erfcx": [2007, 2057], "special_erfinv": [2007, 2057], "special_exp2": [2007, 2057], "special_expit": [2007, 2057], "special_expm1": [2007, 2057], "special_gammainc": [2007, 2057], "special_gammaincc": [2007, 2057], "special_gammaln": [2007, 2057], "special_hermite_polynomial_h": [2007, 2057], "special_i0": [2007, 2057], "special_i1": [2007, 2057], "special_laguerre_polynomial_l": [2007, 2057], "special_legendre_polynomial_p": [2007, 2057], "special_log1p": [2007, 2057], "special_log_ndtr": [2007, 2057], "special_log_softmax": [2007, 2057], "special_logit": [2007, 2057], "special_logsumexp": [2007, 2057], "special_modified_bessel_i0": [2007, 2057], "special_modified_bessel_i1": [2007, 2057], "special_modified_bessel_k0": [2007, 2057], "special_modified_bessel_k1": [2007, 2057], "special_multigammaln": [2007, 2057], "special_ndtr": [2007, 2057], "special_ndtri": [2007, 2057], "special_polygamma": [2007, 2057], "special_psi": [2007, 2057], "special_round": [2007, 2057], "special_scaled_modified_bessel_k0": [2007, 2057], "special_scaled_modified_bessel_k1": [2007, 2057], "special_shifted_chebyshev_polynomial_t": [2007, 2057], "special_shifted_chebyshev_polynomial_u": [2007, 2057], "special_shifted_chebyshev_polynomial_v": [2007, 2057], "special_shifted_chebyshev_polynomial_w": [2007, 2057], "special_sinc": [2007, 2057], "special_softmax": [2007, 2057], "special_spherical_bessel_j0": [2007, 2057], "special_xlog1pi": [2007, 2057], "special_xlogi": [2007, 2057], "special_zeta": [2007, 2057], "tval": 2007, "is_accept": 2007, "rect": 2007, "magic": [2007, 2010, 2081, 2093], "__complex__": 2007, "__float__": 2007, "__int__": 2007, "hex": [2007, 2009, 2057], "__hex__": 2007, "oct": [2007, 2057], "__oct__": 2007, "divmod": [2007, 2009, 2057], "chr": [2007, 2009, 2057], "int_float": 2007, "float_int": 2007, "fab": [2007, 2057], "int_int": 2007, "float_float": 2007, "complex_complex": 2007, "int_complex": 2007, "complex_int": 2007, "float_complex": 2007, "complex_float": [2007, 2074], "scalar_scalar": 2007, "int_to_int": 2007, "modf": [2007, 2057], "mathremaind": [2007, 2057], "programm": [2008, 2009, 2062], "tn": 2008, "subtyp": 2008, "an_error": 2008, "noreturn": [2008, 2009], "classvar": [2008, 2009], "anystr": [2008, 2009], "nomin": 2008, "newtyp": [2008, 2009], "tup": [2008, 2009], "emptydatastructur": 2008, "my_list": 2008, "aug_add_x": 2008, "inc": [2008, 2009], "assign_x": [2008, 2009], "polymorph": 2008, "sum_pair": 2008, "red": [2008, 2009], "green": [2008, 2009, 2095], "enum_fn": [2008, 2009], "my_variable_nam": 2008, "top_level_method": 2008, "other_help": 2008, "ten": [2008, 2077], "my_submodul": 2008, "tuple_or_list": 2008, "a_tupl": 2008, "is_script": [2008, 2009, 2057], "unsupported_linear_op": 2008, "is_trac": [2008, 2009], "univers": 2008, "typing_extens": 2008, "a_dict": 2008, "some_dict": 2008, "delimit": [2009, 2010], "tstype": 2009, "tsmoduletyp": 2009, "tsalltyp": 2009, "tsmetatyp": 2009, "tsprimitivetyp": 2009, "tsstructuraltyp": 2009, "tsnominaltyp": 2009, "myclass": [2009, 2059], "printabl": [2009, 2059], "sortabl": 2009, "nevertheless": [2009, 2069], "inc_first_el": 2009, "cpufloattyp": 2009, "tstupl": 2009, "tsnamedtupl": 2009, "tslist": 2009, "tsdict": 2009, "tsoption": 2009, "tsunion": 2009, "tsfutur": 2009, "tsrref": 2009, "tsawait": 2009, "await": [2009, 2010, 2067], "keytyp": 2009, "tensortyp": [2009, 2102], "_await": 2009, "mytupl": 2009, "scripted_inc": 2009, "_annotatednamedtupl": 2009, "_namedtupleannot": 2009, "_unannotatednamedtupl": 2009, "mistak": [2009, 2041, 2093], "nameerror": 2009, "remedi": 2009, "tsbuiltinclass": 2009, "tscustomclass": 2009, "tsenum": 2009, "tstensor": 2009, "subtensor": [2009, 2039, 2104], "subwithtorchfunct": 2009, "script_g": 2009, "tsclassdef": 2009, "methoddefinit": 2009, "__torch__": [2009, 2056], "class2": 2009, "tsenumdef": 2009, "tsenumtyp": 2009, "memberidentifi": 2009, "intenum": 2009, "intflag": 2009, "basecolor": 2009, "compli": [2009, 2059], "classbodydefinit": 2009, "moduleobj": 2009, "testmodul": 2009, "mymodel": [2009, 2033, 2048, 2054], "dosometh": 2009, "strateg": 2009, "congruent": 2009, "python3": 2009, "unannot": 2009, "python3annot": 2009, "paramannot": 2009, "returnannot": 2009, "funcormethodbodi": 2009, "mypyannot": 2009, "localvarannot": 2009, "setval": 2009, "moduletyp": [2009, 2059], "classidentifi": 2009, "instanceattridentifi": 2009, "offset_": 2009, "tsstructualtyp": 2009, "grammar": 2009, "chapter": [2009, 2043], "floattyp": 2009, "inttyp": 2009, "stringtyp": 2009, "devicetyp": 2009, "bullet": 2009, "tupletyp": 2009, "listtyp": 2009, "enclosur": 2009, "parenth_form": 2009, "list_displai": 2009, "dict_displai": 2009, "legal": 2009, "stringliter": 2009, "floatnumb": 2009, "expression_list": 2009, "list_comprehens": 2009, "comp_for": 2009, "target_list": 2009, "or_expr": 2009, "key_datum_list": 2009, "dict_comprehens": 2009, "key_datum": 2009, "ongo": [2009, 2056, 2065, 2067], "enclos": 2009, "datum": [2009, 2083], "attributeref": 2009, "slice_list": 2009, "slice_item": 2009, "proper_slic": 2009, "argument_list": 2009, "desugar": [2009, 2093], "u_expr": 2009, "tightli": [2009, 2046], "m_expr": 2009, "a_expr": 2009, "shift_expr": 2009, "and_expr": 2009, "xor_expr": 2009, "comp_oper": 2009, "__contains__": 2009, "or_test": 2009, "and_test": 2009, "not_test": 2009, "conditional_express": 2009, "starred_item": 2009, "expression_stmt": 2009, "starred_express": 2009, "assignment_express": 2009, "assignment_stmt": 2009, "augmented_assignment_stmt": 2009, "augtarget": 2009, "augop": 2009, "annotated_assignment_stmt": 2009, "raise_stmt": 2009, "assert_stmt": 2009, "return_stmt": 2009, "del_stmt": 2009, "pass_stmt": 2009, "print_stmt": 2009, "break_stmt": 2009, "continue_stmt": 2009, "if_stmt": 2009, "while_stmt": 2009, "for_stmt": 2009, "with_stmt": 2009, "with_item": 2009, "tuple_stmt": 2009, "getattr_stmt": 2009, "hasattr_stmt": 2009, "zip_stmt": 2009, "iterable1": 2009, "iterable2": 2009, "enumerate_stmt": 2009, "five": [2009, 2051], "add_stat_valu": 2009, "sugaredvalu": 2009, "honor": 2009, "__abs__": 2009, "bytearrai": 2009, "delattr": 2009, "exec": 2009, "__index__": 2009, "isint": 2009, "issubclass": [2009, 2039], "ndigit": 2009, "__import__": [2009, 2059], "notimpl": [2009, 2010, 2039, 2093], "rpc_sync": [2009, 2057, 2067, 2068, 2069], "synonym": 2009, "_fork": [2009, 2036], "_wait": [2009, 2036], "lexic": 2010, "indent": 2010, "coroutin": [2010, 2091], "__del__": [2010, 2034], "__bytes__": 2010, "__slots__": 2010, "metaclass": 2010, "mro": 2010, "__r": 2010, "__": [2010, 2102], "bytesliter": 2010, "imagnumb": 2010, "parenthes": 2010, "ifs": 2010, "customiz": [2010, 2082, 2092, 2106], "compound": 2010, "adaptivelogsoftmaxwithloss": 2011, "gdoc": 2013, "opcheck": 2013, "torch_librari": [2013, 2085], "test_util": 2013, "test_schema": 2013, "test_autograd_registr": 2013, "test_faketensor": 2013, "test_aot_dispatch_dynam": 2013, "opoverloadpacket": 2013, "customopdef": 2013, "custom_op": [2013, 2056, 2093], "mylib": 2013, "numpy_mul": 2013, "mutates_arg": 2013, "numpy_add": 2013, "x_np": 2013, "z_np": 2013, "numpy_sin": 2013, "register_fak": 2013, "register_autograd": 2013, "sample_input": [2013, 2046], "718": 2013, "peek": 2013, "my_linear": 2013, "collis": 2013, "prone": [2013, 2024, 2048, 2093], "y_np": 2013, "numpy_sin_cpu": 2013, "numpy_sin_inplac": 2013, "register_kernel": 2013, "x_cpu": [2013, 2037], "x_cuda": 2013, "backward_fn": 2013, "setup_context_fn": 2013, "functionctx": 2013, "googl": 2013, "1w": 2013, "t6wz8iy8foi0vm8bf44pdbgs283qvpeljzwieqwq": 2013, "custom_linear": 2013, "_subclass": [2013, 2017, 2054, 2090, 2093], "fake_tensor": [2013, 2054, 2090, 2093], "faketensormod": [2013, 2054, 2090, 2093], "custom_nonzero": 2013, "get_ctx": 2013, "new_dynamic_s": 2013, "tracing_mod": 2013, "impl_abstract": [2013, 2093], "qualnam": 2013, "abstractimplctx": 2013, "2020": 2013, "colab": [2013, 2059, 2093], "dispatch_kei": [2013, 2092], "keynam": 2013, "alias_analysi": 2013, "conserv": [2013, 2016, 2037, 2093], "with_keyset": 2013, "fallthrough_kernel": 2013, "fallthrough": 2013, "div_cpu": 2013, "impl_": 2013, "operator_nam": 2013, "mysin": 2013, "off_by_default": 2015, "_registr": 2015, "spammi": [2015, 2092, 2103], "compiled_autograd": 2015, "born": 2016, "citizen": 2016, "afterthought": 2016, "intuit": [2016, 2096], "alik": 2016, "grai": 2016, "systemat": 2016, "onboard": 2016, "maskedarrai": 2016, "masked_tensor": 2016, "faithfulli": [2017, 2090], "principl": [2017, 2037, 2094], "meta_util": 2017, "undocu": 2017, "fidel": 2017, "torch_force_weights_only_load": 2018, "torch_autograd_shutdown_wait_limit": 2018, "mobil": [2019, 2062, 2094], "blocklist": [2019, 2059], "mobileoptimizertyp": 2019, "conv_bn_fus": 2019, "correspondingli": 2019, "prepack": [2019, 2057], "insert_fold_prepack_op": 2019, "arm": [2019, 2062], "remove_dropout": 2019, "hoist": 2019, "hoist_conv_packed_param": 2019, "fuse_add_relu": 2019, "vulkan": 2019, "vulkan_automatic_gpu_transf": 2019, "freeze_modul": 2019, "script_modul": 2019, "optimization_blocklist": 2019, "preserved_method": 2019, "_mobileoptimizertyp": 2019, "recursivescriptmodul": [2019, 2051], "download": [2020, 2052, 2077, 2096], "infrequ": 2021, "window_s": 2021, "max_sampl": 2021, "cap": 2021, "hasn": [2021, 2059], "_monitor": 2021, "data_value_t": 2021, "eventhandlerhandl": 2021, "register_event_handl": 2021, "unregister_event_handl": 2021, "tensorboardeventhandl": 2021, "shader": [2022, 2047], "processor": [2022, 2094], "metalperformanceshad": 2022, "shared_memori": 2024, "abruptli": 2024, "get_all_sharing_strategi": 2024, "get_sharing_strategi": 2024, "set_sharing_strategi": 2024, "new_strategi": 2024, "di": [2024, 2088, 2091, 2092], "abnorm": [2024, 2048], "forev": [2024, 2038], "asap": 2024, "queue_2": 2024, "x_clone": 2024, "segfault": [2024, 2049, 2093], "shm_open": [2024, 2074], "destructor": [2024, 2069], "seriou": [2024, 2037, 2093], "torch_shm_manag": 2024, "unnot": 2024, "spawncontext": 2024, "has_nam": 2025, "is_shar": [2025, 2074], "is_sparse_csr": [2025, 2057, 2074], "is_tensor": [2025, 2072], "items": [2025, 2057], "unifies_names_from_input_tensor": 2025, "nbyte": [2025, 2057, 2074], "ndimens": 2025, "register_post_accumulate_grad_hook": [2025, 2034], "position": [2025, 2026], "unnam": [2025, 2026], "misalign": 2025, "inher": 2025, "collaps": [2025, 2057, 2098], "disappear": 2025, "img": [2026, 2077], "renamed_img": 2026, "coexist": 2026, "wildcard": [2026, 2059, 2102], "somewher": [2026, 2045], "scale_channel": 2026, "more_img": 2026, "named_tensor": 2026, "named_img": 2026, "flat_img": 2026, "named_flat_img": 2026, "unflattened_named_img": 2026, "grad_loss": 2026, "8107": 2026, "6357": 2026, "0783": 2026, "untest": 2026, "rename_map": 2026, "greedili": 2026, "unment": 2026, "49152": 2026, "datastructur": 2027, "seamless": 2027, "nested_tensor": 2027, "nt": 2027, "vein": 2027, "as_nested_tensor": 2027, "irregular": 2027, "indistinguish": 2027, "2286": 2027, "4842": 2027, "7827": 2027, "6745": [2027, 2073], "0658": 2027, "1247": 2027, "4078": 2027, "8083": 2027, "2871": 2027, "5559": 2027, "9885": 2027, "4074": 2027, "4855": 2027, "0733": 2027, "8285": 2027, "6858": 2027, "7030": 2027, "3481": 2027, "0236": 2027, "jag": [2027, 2090], "fake_grad": 2027, "nt2": 2027, "6862": 2027, "1282": 2027, "1031": 2027, "0464": 2027, "3276": 2027, "9967": 2027, "0054": 2027, "8972": 2027, "9174": 2027, "4995": 2027, "8546": 2027, "7194": 2027, "2918": 2027, "1846": 2027, "8793": 2027, "5183": 2027, "6447": 2027, "8009": 2027, "8468": 2027, "9832": 2027, "5272": 2027, "pt_infer": 2027, "pt_larg": 2027, "pt_small": 2027, "bitwidth": [2028, 2046, 2062, 2072], "asymmetr": [2028, 2062, 2065], "alter": [2029, 2033, 2039, 2099], "attention_bias": 2031, "sacrific": [2032, 2037], "dirac": 2032, "xavier": 2032, "glorot": 2032, "bengio": 2032, "fan": 2032, "_in": 2032, "_out": [2032, 2043, 2098], "fan_in": 2032, "kaim": 2032, "delv": 2032, "surpass": 2032, "he": 2032, "_mode": 2032, "fan_out": 2032, "redrawn": 2032, "sax": 2032, "2013": 2032, "marten": 2032, "scaler": [2033, 2037], "clip_grad_value_": 2033, "unscale_": 2033, "optimizer2": 2033, "batch_per_it": 2033, "iters_to_accumul": 2033, "num_proc": 2033, "grad_param": 2033, "grad_norm": 2033, "scaled_grad_param": 2033, "inv_scal": 2033, "get_scal": 2033, "proce": [2033, 2037, 2067, 2103], "optimizer0": 2033, "output0": 2033, "model0": 2033, "model1": 2033, "loss0": 2033, "loss1": 2033, "hundr": [2033, 2045, 2103], "imped": 2033, "poor": [2033, 2034], "dp_model": 2033, "imported_funct": 2033, "mymm": 2033, "myfloat32func": 2033, "fwd_output": 2033, "cleaner": 2034, "mapsto": 2034, "educ": 2034, "_save": 2034, "_saved_self": 2034, "convex": 2034, "concav": 2034, "togglabl": 2034, "drawback": 2034, "0011": 2034, "dirti": [2034, 2091], "hogwild": 2034, "train_fn": 2034, "graphtask": 2034, "copyslic": 2034, "mutex": 2034, "gotten": 2034, "curiou": 2034, "\u2102": 2034, "yj": 2034, "holomorph": 2034, "fulfil": [2034, 2040, 2059, 2090], "homomorph": 2034, "mathematician": 2034, "studi": [2034, 2061], "beauti": 2034, "somewhat": [2034, 2037, 2072], "0906": 2034, "4835": 2034, "audio": [2034, 2077, 2091], "\u211d": 2034, "_output": 2034, "vj": 2034, "handi": [2034, 2037], "selfdeletingtempfil": 2034, "tmp_dir": 2034, "uuid": 2034, "uuid4": 2034, "temp_fil": 2034, "forbidden": 2034, "savedtensor": 2034, "_raw_saved_": 2034, "_raw_saved_self": 2034, "save_on_disk_threshold": 2034, "tensor_or_sctf": 2034, "_saved_oth": 2034, "4th": 2035, "backcompat": 2035, "broadcast_warn": 2035, "userwarn": 2035, "compute_z": 2036, "w_z": 2036, "w_y": 2036, "tbb": 2036, "aten_thread": 2036, "omp": 2036, "mkl_thread": 2036, "mkldnn_cpu_runtim": 2036, "use_mkldnn": 2036, "use_tbb": 2036, "use_openmp": 2036, "ON": [2036, 2044, 2045], "set_num_interop_thread": 2036, "get_num_interop_thread": 2036, "set_num_thread": [2036, 2048], "get_num_thread": 2036, "omp_num_thread": [2036, 2080], "mkl_num_thread": [2036, 2080], "1024": [2036, 2037, 2085, 2094], "e5": 2036, "oversubscript": 2036, "memory manag": 2037, "optimize pytorch": 2037, "irrespect": 2037, "spread": 2037, "cuda2": [2037, 2044], "broadli": [2037, 2062], "set_float_32_matmul_precis": 2037, "a100": [2037, 2100, 2103], "a_ful": 2037, "10240": 2037, "b_full": 2037, "ab_ful": 2037, "7277": 2037, "ab_tf32": 2037, "016": 2037, "ga100": 2037, "1747": 2037, "relative_error": 2037, "0022": 2037, "ab_fp32": 2037, "0031": 2037, "000039": 2037, "7x": 2037, "globalcontext": 2037, "setallowtf32cubla": 2037, "setallowtf32cudnn": 2037, "bench_gemm_transform": 2037, "allow_fp16_reduc": 2037, "4048": 2037, "1634": 2037, "1639": 2037, "4056": 2037, "1670": 2037, "1661": 2037, "4080": 2037, "1664": 2037, "1658": 2037, "1651": 2037, "4104": 2037, "1677": 2037, "1674": 2037, "4128": 2037, "1796": [2037, 2046], "2519": 2037, "5096": 2037, "2144": 2037, "2149": 2037, "2766": 2037, "5120": 2037, "2142": 2037, "9728": 2037, "3875": 2037, "5779": 2037, "16384": [2037, 2096], "6182": 2037, "9656": 2037, "setallowfp16reductioncubla": 2037, "instabl": 2037, "setallowbf16reductioncubla": 2037, "invis": [2037, 2091, 2094, 2103], "start_ev": 2037, "elapsed_time_m": 2037, "pointless": 2037, "exploit": 2037, "paragraph": [2037, 2043], "initial_grad": 2037, "memory_alloc": [2037, 2044], "memory_snapshot": [2037, 2044], "memcheck": 2037, "option2": 2037, "value2": 2037, "max_split_size_mb": 2037, "borderlin": 2037, "memory_summari": 2037, "resort": [2037, 2043, 2059], "roundup_power2_divis": 2037, "1280": 2037, "1536": 2037, "1792": 2037, "256mb": 2037, "512mb": 2037, "1gb": [2037, 2101], "knob": [2037, 2090], "garbage_collection_threshold": 2037, "reclaim": [2037, 2088], "release_cached_block": 2037, "unfavor": 2037, "expandable_seg": 2037, "2mb": 2037, "sliver": 2037, "pinned_use_cuda_host_regist": 2037, "cudahostregist": 2037, "cudahostalloc": 2037, "malloc": [2037, 2105], "pinned_num_register_thread": 2037, "cuda_runtime_api": 2037, "iostream": [2037, 2085], "fpic": 2037, "my_malloc": 2037, "ssize_t": 2037, "ptr": 2037, "cout": [2037, 2085], "endl": [2037, 2045, 2085], "my_fre": 2037, "cudapluggablealloc": 2037, "new_alloc": 2037, "change_current_alloc": 2037, "_cuda_clearcublasworkspac": 2037, "lru": 2037, "geometri": 2037, "1023": 2037, "zeta": [2037, 2057, 2073, 2098], "use_pytorch_kernel_cach": 2037, "pytorch_kernel_cache_path": 2037, "store_tru": 2037, "disable_cuda": 2037, "assess": 2037, "cudagetdevicecount": 2037, "cuinit": 2037, "nvmldevicegetcount_v2": 2037, "poison": 2037, "aforement": [2037, 2048], "train_load": [2037, 2048], "x_gpu": 2037, "x_cpu_long": 2037, "y_cpu": 2037, "y_gpu": 2037, "y_cpu_long": 2037, "new_tensor": 2037, "overus": 2037, "cudagraphlaunch": 2037, "elid": 2037, "versatil": 2037, "static_input": 2037, "static_output": 2037, "realist": 2037, "sophist": [2037, 2058], "register_generator_st": 2037, "virtual": [2037, 2074], "d_in": 2037, "d_out": 2037, "640": 2037, "static_target": 2037, "static_y_pr": 2037, "static_loss": 2037, "real_input": [2037, 2093], "real_target": 2037, "refil": 2037, "rejoin": 2037, "cuda_work": 2037, "nsight": 2037, "reorgan": 2037, "graphabl": 2037, "illeg": [2037, 2090], "needlessli": [2037, 2090], "econom": 2037, "static_out_1": 2037, "g1_workload": 2037, "static_in_1": 2037, "static_out_2": 2037, "g2_workload": 2037, "static_in_2": 2037, "real_data_1": 2037, "real_data_2": 2037, "occasion": [2037, 2072, 2093], "29500": [2038, 2060, 2067, 2068], "dive": [2038, 2043, 2059, 2092, 2097], "grad0": 2038, "grad1": 2038, "bucket1": 2038, "bucket0": 2038, "hurt": 2038, "kick": [2038, 2067, 2068, 2100], "earliest": 2038, "unreadi": 2038, "perspect": [2038, 2042, 2049, 2068], "hpp": 2038, "processgroupgloo": 2038, "processgroupmpi": 2038, "_sync_param": 2038, "autograd_hook": 2038, "prepare_for_backward": 2038, "_after_": 2038, "optimize_ddp": 2038, "linearfunct": 2039, "grad_bia": 2039, "mulconst": 2039, "mycub": [2039, 2040], "grad_dx": [2039, 2040], "my_cub": [2039, 2040], "input_featur": 2039, "output_featur": 2039, "__array_function__": [2039, 2094], "nep": [2039, 2094], "0018": 2039, "scalartensor": 2039, "handled_funct": 2039, "mandat": 2039, "update_wrapp": 2039, "ensure_tensor": 2039, "metadatatensor": 2039, "__add__": 2039, "subtensor2": 2039, "othersubtensor": 2039, "loggingtensor": 2039, "permiss": 2039, "_metadata": 2039, "ndata": 2039, "ministri": 2039, "silli": 2039, "superclass": 2039, "troublesom": 2039, "face": [2039, 2059, 2077, 2093], "_get_overridable_funct": 2039, "get_overridable_funct": [2039, 2104], "func_dict": 2039, "nn_func": 2039, "labori": 2039, "_get_testing_overrid": 2039, "get_testing_overrid": [2039, 2104], "override_dict": 2039, "dummy_add": 2039, "get_ignored_funct": [2039, 2104], "__torch_dispatch__": [2039, 2072, 2093], "outdat": 2039, "redispatch": [2039, 2093], "dispatchkei": 2039, "zerotensor": 2039, "compositeimplicitautograd": 2039, "func_nam": [2039, 2067], "overload_nam": 2039, "exot": 2039, "zoo": 2039, "intrus": 2039, "torchfunctionmod": 2039, "_python_dispatch": 2039, "torchdispatchmod": 2039, "resolve_nam": [2039, 2104], "functionlog": 2039, "dispatchlog": 2039, "7164": 2039, "9336": 2039, "4287": 2039, "7989": 2039, "2169": 2039, "7474": 2039, "5624": 2039, "5970": 2039, "4328": 2039, "9794": 2039, "3490": 2039, "8671": 2039, "8573": 2039, "4338": 2039, "4948": 2039, "1249": 2039, "3307": 2039, "2151": 2039, "6018": 2039, "9060": 2039, "2974": 2039, "7708": 2039, "6668": 2039, "0352": 2039, "7948": 2039, "6023": 2039, "4303": 2039, "2036": 2039, "6831": 2039, "8120": 2039, "5949": 2039, "5416": 2039, "3335": 2039, "5897": 2039, "custom_vjp": 2040, "custom_jvp": 2040, "to_numpi": 2040, "numpysort": 2040, "ind_inv": 2040, "_1": [2040, 2059], "numpytak": 2040, "numpy_sort": 2040, "ggx": 2040, "vmappabl": 2040, "x_bdim": 2040, "ind_bdim": 2040, "ind_inv_bdim": 2040, "expanded_x": 2040, "expanded_ind": 2040, "expanded_ind_inv": 2040, "new_dim": 2040, "logical_dim": 2040, "maybe_expand_bdim_at_front": 2040, "pseudocod": 2040, "rapidli": [2041, 2048, 2054, 2055], "fortun": [2041, 2103], "abridg": 2041, "total_loss": 2041, "extrud": 2041, "phenomenon": 2041, "plenti": [2041, 2091], "bptt": 2041, "repackag": 2041, "nm": 2041, "blow": 2041, "rememb": [2041, 2048, 2058], "elf": 2041, "grep": [2041, 2087, 2091], "run_model": 2041, "recoveri": 2041, "data_parallel": 2041, "pad_packed_sequ": 2041, "padded_input": 2041, "packed_input": 2041, "packed_output": 2041, "my_lstm": 2041, "dp_m": 2041, "padding_input": 2041, "flava": 2042, "sooner": 2042, "llm": 2042, "llama": 2042, "6b": 2042, "2b": 2042, "8gb": 2042, "1x": 2042, "24gb": 2042, "total_transformer_block_params_in_b": 2042, "dtype_byt": 2042, "num_gpu": 2042, "gb": 2042, "2x": [2042, 2077, 2097], "record_funct": [2042, 2101], "recordstream": 2042, "flat_param": 2042, "splitwithsizesbackward": 2042, "4gb": 2042, "6gb": 2042, "_another_": 2042, "_could_": 2042, "ur": 2043, "ui": [2043, 2077, 2097, 2100], "j_f": 2043, "calculu": 2043, "cw": 2043, "bigger": 2043, "articl": 2043, "58eb23378f2a376565a66ac32c93a316c45b6131": 2043, "l99": 2043, "l105": 2043, "ds_dx": 2043, "compute_gradi": 2043, "ds_dy": 2043, "conj_w_d": 2043, "w_d": 2043, "d_idx": 2043, "albeit": 2043, "wonder": 2043, "amd": [2044, 2084], "dialect": 2044, "portabl": 2044, "rocmdoc": 2044, "programming_guid": 2044, "hip_api_guid": 2044, "cuda_vers": 2044, "cudaruntimegetvers": 2044, "cudadrivergetvers": 2044, "hip_vers": 2044, "hipruntimegetvers": 2044, "hipdrivergetvers": 2044, "11000": 2044, "use_rocm": 2044, "rocm_vers": 2044, "40300": 2044, "cmake": [2044, 2052, 2085], "drocm_force_enable_gpu_assert": 2044, "addglobalcallback": 2045, "recordfunct": 2045, "ivalu": 2045, "threadlocaldebuginfo": 2045, "debuginfoguard": 2045, "recordfunctioncallback": 2045, "onfunctionent": 2045, "onfunctionexit": 2045, "needsinput": 2045, "samplingprob": 2045, "enablerecordfunct": 2045, "cerr": 2045, "broader": [2045, 2081], "inject": 2045, "setapiusagehandl": 2045, "setapiusagelogg": 2045, "event_nam": 2045, "c10_log_api_usage_onc": 2045, "my_api": 2045, "_log_api_usage_onc": 2045, "archiv": [2045, 2051], "akin": [2045, 2085], "jpeg": 2045, "camera": [2045, 2077], "setexportmoduleextrafileshook": 2045, "extrafilesmap": 2045, "producer_info": 2045, "getenv": 2045, "getsourc": 2045, "precompil": 2045, "pyc": 2045, "loos": 2045, "elabor": 2046, "tpu": 2046, "mylinear": 2046, "0413": 2046, "2057": 2046, "0597": 2046, "8247": 2046, "1045": 2046, "4299": 2046, "5457": 2046, "4793": 2046, "3634": 2046, "8525": 2046, "6749": 2046, "l0": [2046, 2051, 2091], "deeper": [2046, 2059], "bignet": 2046, "big_net": 2046, "dynamicnet": 2046, "dynamic_net": 2046, "2051": 2046, "7601": 2046, "1963": 2046, "4354": 2046, "6598": 2046, "4446": 2046, "4628": 2046, "8774": 2046, "6848": 2046, "5458": 2046, "4647": 2046, "5310": 2046, "0609": 2046, "0940": 2046, "1266": 2046, "0623": 2046, "3508": 2046, "0550": 2046, "5317": 2046, "5562": 2046, "4028": 2046, "6942": 2046, "0140": 2046, "0329": 2046, "1160": 2046, "0434": 2046, "3889": 2046, "1613": 2046, "6340": 2046, "3887": 2046, "9979": 2046, "0767": 2046, "3526": 2046, "8756": 2046, "5847": 2046, "6016": 2046, "1608": 2046, "0829": 2046, "6338": 2046, "9239": 2046, "6943": 2046, "5034": 2046, "0268": 2046, "4489": 2046, "9403": 2046, "1571": [2046, 2051], "2509": 2046, "5052": 2046, "3088": 2046, "4951": 2046, "3381": 2046, "5166": 2046, "beginn": 2046, "examples_nn": 2046, "polynomial_modul": 2046, "teach": 2046, "0013": [2046, 2073], "0030": 2046, "0008": 2046, "modalmodul": 2046, "6614": 2046, "2669": 2046, "0617": 2046, "4519": 2046, "two_layer_net_optim": 2046, "blitz": 2046, "neural_networks_tutori": 2046, "autograd_tutori": 2046, "new_net": 2046, "runningmean": 2046, "1041": 2046, "0647": 2046, "1515": 2046, "m_load": 2046, "unserialized_th": 2046, "statefulmodul": 2046, "param3": 2046, "param_list": 2046, "parameterlist": 2046, "param_dict": 2046, "parameterdict": 2046, "buffer1": 2046, "buffer2": 2046, "buffer3": 2046, "0322": 2046, "9066": 2046, "1409": 2046, "4852": 2046, "6949": 2046, "2911": 2046, "1044": 2046, "4202": 2046, "1953": 2046, "5299": 2046, "8747": 2046, "6289": 2046, "4898": 2046, "6434": 2046, "5187": 2046, "0346": 2046, "4077": 2046, "4324": 2046, "7022": 2046, "3915": 2046, "6176": 2046, "6062": 2046, "5992": 2046, "4452": 2046, "2843": 2046, "3710": 2046, "3947": 2046, "saving_loading_model": 2046, "what_is_state_dict": 2046, "skip_init": 2046, "skip_param_init": 2046, "forward_hook": [2046, 2099], "backward_hook": [2046, 2099], "new_grad_input": 2046, "5059": 2046, "8158": 2046, "2390": 2046, "0043": 2046, "addmmbackward": 2046, "forward_pre_hook_handl": 2046, "5752": 2046, "7421": 2046, "forward_hook_handl": 2046, "0980": 2046, "4666": 2046, "0256": 2046, "4497": 2046, "5046": 2046, "combat": 2046, "mps_devic": 2047, "yourfavoritenet": 2047, "a3c": 2048, "set_start_method": 2048, "simplequeu": 2048, "cope": 2048, "eleg": 2048, "num_process": 2048, "inappropri": 2048, "vcpu": 2048, "htop": 2048, "exceed": 2048, "competit": 2048, "oversubscrib": 2048, "mnist_hogwild": 2048, "dataloader_kwarg": 2048, "train_epoch": 2048, "30x": 2048, "boost": [2048, 2087], "754": 2049, "1e20": 2049, "4142e": 2049, "struggl": 2049, "benign": 2049, "v_dot2": 2049, "mfma": 2049, "fp64": 2049, "rocbla": 2049, "miopen": 2049, "rocblas_internal_fp16_alt_impl": 2049, "miopen_debug_convolution_attrib_fp16_alt_impl": 2049, "_convbackend": 2049, "slownd": 2049, "slownd_transpos": 2049, "slownd_dil": 2049, "slownd_dilated_transpos": 2049, "convbackend": 2049, "miopendepthwis": 2049, "miopentranspos": 2049, "svd_lowrank": [2050, 2072], "22modul": 2050, "20determin": 2050, "index_add_cuda_": 2050, "1509": 2050, "8027": 2050, "0333": 2050, "1444": 2050, "rese": 2050, "seed_work": 2050, "worker_se": 2050, "train_dataset": 2050, "tensor_dict": 2051, "loaded_numb": 2051, "loaded_even": 2051, "loaded_smal": 2051, "num_batches_track": 2051, "bn_state_dict": 2051, "new_bn": 2051, "out0_relu": 2051, "1400": 2051, "4563": 2051, "0271": 2051, "4406": 2051, "2827": 2051, "4588": 2051, "2031": 2051, "1316": 2051, "6533": 2051, "3413": 2051, "1112": 2051, "m_state_dict": 2051, "new_m": 2051, "zip64": 2051, "pkl": [2051, 2059], "byteord": 2051, "original_nam": 2051, "controlflowmodul": 2051, "controlflowmodule_trac": 2051, "3793": 2051, "controlflowmodule_script": 2051, "tagger": 2051, "ipu_tag": 2051, "ipu_deseri": 2051, "startswith": [2051, 2057], "get_default_load_endian": 2051, "loadendian": 2051, "default_load_endian": 2051, "set_default_load_endian": 2051, "endian": 2051, "rem": 2052, "7z": 2052, "curl": 2052, "ossci": 2052, "mkl_2020": 2052, "aoa": 2052, "omkl": 2052, "cuda_prefix": 2052, "cuda102": 2052, "magma_2": 2052, "4_": 2052, "omagma": 2052, "cmake_include_path": 2052, "cd": [2052, 2059, 2085, 2103], "magma_hom": 2052, "studio": [2052, 2054], "pip": [2052, 2054, 2055, 2056, 2077, 2092], "cmake_gener": 2052, "ffi": 2052, "create_extens": 2052, "_ext": 2052, "define_macro": 2052, "relative_to": 2052, "c99": 2052, "x86_x64": 2052, "packagesnotfounderror": 2052, "anaconda": 2052, "noarch": 2052, "continuum": 2052, "pkg": 2052, "pro": [2052, 2077], "msys2": 2052, "importerror": [2052, 2059], "dll": 2052, "vc2017": 2052, "vc": 2052, "vs2017_runtim": 2052, "mkl_fft": 2052, "intel_openmp": 2052, "vs2017": 2052, "openbla": 2052, "forg": 2052, "emerg": [2052, 2090], "bootstrap": 2052, "forgotten": 2052, "freeze_support": 2052, "forkingpickl": 2052, "brokenpipeerror": 2052, "errno": 2052, "couldn": [2052, 2056], "torch_14808_1591070686": 2052, "thalloc": 2052, "tdr": 2052, "thcudacheck": 2052, "csrc": [2052, 2085, 2090, 2091], "storageshar": 2052, "microsoft": [2053, 2062], "flavor": 2053, "polish": [2053, 2054], "orchestr": [2054, 2099], "exportopt": 2054, "onnxregistri": 2054, "extractor": 2054, "fxgraphextractor": 2054, "onnxfakecontext": 2054, "onnxprogram": 2054, "onnxprogramseri": 2054, "upgrad": [2054, 2058, 2079], "perceptron": 2054, "mlpmodel": 2054, "fc0": 2054, "fc3": 2054, "tensor_x": 2054, "97": [2054, 2073], "onnx_program": 2054, "dynamo_export": [2054, 2056], "model_proto": 2054, "modelproto": 2054, "complianc": 2054, "protobuf": [2054, 2056], "netron": 2054, "icon": 2054, "viewer": [2054, 2105], "parseabl": 2054, "fxe0007": 2054, "fxe0011": 2054, "fxe0012": 2054, "fxe0013": 2054, "fxe0014": 2054, "fxe0015": 2054, "fxe0016": 2054, "model_arg": 2054, "model_kwarg": 2054, "my_simple_model": 2054, "my_dynamic_model": 2054, "tensor_typ": 2054, "elem_typ": 2054, "dim_param": [2054, 2056], "arg0_dim_0": 2054, "arg0_dim_1": 2054, "arg0_dim_2": 2054, "fake_context": 2054, "onnx_registri": 2054, "diagnostic_opt": 2054, "enable_fake_mod": 2054, "xdoctest": [2054, 2055], "torch_doctest_onnx": [2054, 2055], "my_nn_modul": 2054, "my_model_without_initi": 2054, "WITH": [2054, 2056], "my_model_with_initi": 2054, "model_st": 2054, "input_adapt": 2054, "output_adapt": 2054, "diagnostic_context": 2054, "export_except": 2054, "model_signatur": 2054, "model_torch": 2054, "io_adapt": 2054, "inputadapt": 2054, "outputadapt": 2054, "diagnosticcontext": 2054, "adapt_torch_inputs_to_onnx": 2054, "model_with_state_dict": 2054, "func_nested_input": 2054, "x_dict": 2054, "y_tupl": 2054, "y3": 2054, "adapt_torch_outputs_to_onnx": 2054, "model_output": 2054, "func_returning_tupl": 2054, "pt_output": 2054, "inputadaptstep": 2054, "outputadaptstep": 2054, "pprint": 2054, "9216": [2054, 2056], "p_conv1_weight": 2054, "p_conv2_weight": 2054, "p_fc1_weight": 2054, "p_fc2_weight": 2054, "b_my_buffer2": 2054, "b_my_buffer1": 2054, "_log_softmax": [2054, 2057, 2098], "include_initi": 2054, "bufferediobas": 2054, "safetensor": 2054, "safe_open": 2054, "save_diagnost": 2054, "protobufonnxprogramseri": 2054, "serializetostr": 2054, "exported_model": 2054, "onnxruntimeopt": 2054, "session_opt": 2054, "execution_provid": 2054, "execution_provider_opt": 2054, "onnxruntim": [2054, 2055, 2056, 2062], "sessionopt": 2054, "invalidexportoptionserror": 2054, "get_op_funct": 2054, "is_registered_op": 2054, "register_op": 2054, "tracedonnxfunct": 2054, "sctip": 2054, "warnings_as_error": 2054, "is_onnxrt_backend_support": 2055, "onnxrt": [2055, 2084], "dummy_input": 2056, "input_nam": 2056, "actual_input_1": 2056, "learned_": 2056, "output_nam": 2056, "learned_0": 2056, "learned_1": 2056, "learned_2": 2056, "learned_3": 2056, "learned_14": 2056, "learned_15": 2056, "kernel_shap": 2056, "transb": 2056, "check_model": 2056, "printable_graph": 2056, "ort": 2056, "ort_sess": 2056, "inferencesess": 2056, "astyp": 2056, "seq_length": 2056, "real_seq_length": 2056, "experienc": 2056, "new_data": 2056, "hope": [2056, 2091, 2097], "symbolic_opset": 2056, "symbolic_opset9": 2056, "_variablefunct": 2056, "pyi": 2056, "checkout": 2056, "___torch_mangle_0": 2056, "alpha_f": 2056, "myrelu": 2056, "value_t": 2056, "pythonop": [2056, 2057], "mylogexp": 2056, "operator_export_typ": 2056, "onnx_fallthrough": 2056, "onnx_aten_fallback": 2056, "onnx_opset": 2056, "opset15": 2056, "custom_opset": 2056, "67326": 2056, "alphax": 2056, "castlik": 2056, "gammax": 2056, "settyp": 2056, "custom_selu": 2056, "jit_util": 2056, "graphcontext": 2056, "onnxscript_op": 2056, "register_custom_op_symbol": 2056, "symbolic_nam": 2056, "symbolic_fn": 2056, "Be": [2056, 2100], "symbolic_help": 2056, "symbolic_foo_forward": 2056, "custom_domain": 2056, "attr1_f": 2056, "attr2_i": 2056, "foo_forward": 2056, "foomodel": 2056, "example_input1": 2056, "caffe2": [2056, 2077], "torch_script_graph": 2056, "unconvertible_op": 2056, "dynamic_ax": 2056, "export_param": 2056, "trainingmod": 2056, "operatorexporttyp": 2056, "do_constant_fold": 2056, "keep_initializers_as_input": 2056, "export_modules_as_funct": 2056, "autograd_inlin": 2056, "OF": 2056, "input_i": 2056, "input_z": 2056, "fileno": 2056, "untrain": 2056, "doc_str": 2056, "onnx_aten": 2056, "build_caffe2": 2056, "summodul": 2056, "dim_valu": 2056, "my_custom_axis_nam": 2056, "sum_dynamic_axes_1": 2056, "deduplicate_initi": 2056, "74765": 2056, "checkererror": 2056, "unsupportedoperatorerror": 2056, "export_to_pretty_str": 2056, "export_typ": 2056, "google_print": 2056, "add_node_nam": 2056, "nodeproto": 2056, "debugstr": 2056, "contrib": 2056, "test_aten_embedding_2": 2056, "test_oper": 2056, "unregister_custom_op_symbol": 2056, "select_model_mode_for_export": 2056, "is_in_onnx_export": 2056, "middl": [2056, 2091], "enable_log": 2056, "disable_log": 2056, "graphinfo": 2056, "incorrect_relu_symbolic_funct": 2056, "2328854203224182": 2056, "699536174352349": 2056, "constantchunk": 2057, "__and_": 2057, "__contains_": 2057, "__derive_index": 2057, "__getitem_": 2057, "__interpol": 2057, "__is_": 2057, "__isnot_": 2057, "__lshift_": 2057, "__not_": 2057, "__or_": 2057, "__range_length": 2057, "__rshift_": 2057, "__xor_": 2057, "_cast_byt": 2057, "_cast_char": 2057, "_cast_doubl": 2057, "_cast_float": 2057, "_cast_half": 2057, "_cast_int": 2057, "_cast_long": 2057, "_cast_short": 2057, "_conj": 2057, "_convolution_mod": 2057, "_dim_arang": 2057, "_pack_padded_sequ": 2057, "_pad_packed_sequ": 2057, "_reshape_from_tensor": 2057, "_sample_dirichlet": 2057, "_set_item": 2057, "_shape_as_tensor": 2057, "_standard_gamma": 2057, "_uniqu": 2057, "_unique2": 2057, "_weight_norm": 2057, "conv1d_relu": 2057, "conv2d_relu": 2057, "conv3d_relu": 2057, "embedding_renorm": 2057, "floordiv": [2057, 2064], "linear_relu": [2057, 2064], "nonzero_numpi": 2057, "numpy_t": 2057, "unchecked_cast": 2057, "unique_dim": 2057, "_c10d_function": 2057, "all_gather_into_tensor_coalesc": 2057, "all_reduce_coalesc": 2057, "reduce_scatter_tensor_coalesc": 2057, "wait_tensor": 2057, "_c10d_functional_autograd": 2057, "_quantiz": 2057, "conv2d_prepack": 2057, "conv3d_prepack": 2057, "conv_transpose1d_prepack": 2057, "conv_transpose2d_prepack": 2057, "conv_transpose3d_prepack": 2057, "linear_dynam": 2057, "linear_prepack": 2057, "linear_prepack_fp16": 2057, "linear_prepack_fp16_legaci": 2057, "linear_prepack_legaci": 2057, "wrapped_fbgemm_linear_fp16_weight": 2057, "wrapped_fbgemm_pack_gemm_matrix_fp16": 2057, "_test": 2057, "get_first": 2057, "compleximplicit": 2057, "floatimplicit": 2057, "intimplicit": 2057, "__iand_": 2057, "__ilshift_": 2057, "__ior_": 2057, "__irshift_": 2057, "__ixor_": 2057, "__round_to_zero_floordiv": 2057, "__upsampl": 2057, "__upsample_bilinear": 2057, "__upsample_nearest": 2057, "_adaptive_avg_pool2d": [2057, 2098], "_adaptive_avg_pool3d": [2057, 2098], "_add_batch_dim": 2057, "_add_relu": 2057, "_addmm_activ": 2057, "_aminmax": 2057, "_amp_foreach_non_finite_check_and_unscal": 2057, "_amp_update_scal": 2057, "_assert_scalar": 2057, "_assert_tensor_metadata": 2057, "_autocast_to_full_precis": 2057, "_autocast_to_reduced_precis": 2057, "_batch_norm_impl_index": 2057, "_batch_norm_no_upd": 2057, "_batch_norm_with_upd": 2057, "_batch_norm_with_update_funct": 2057, "_cdist_forward": [2057, 2098], "_cholesky_solve_help": 2057, "_choose_qparams_per_tensor": 2057, "_chunk_cat": 2057, "_coalesc": 2057, "_compute_linear_combin": 2057, "_conj_copi": 2057, "_conj_phys": 2057, "_conv_depthwise2d": 2057, "_convert_indices_from_coo_to_csr": 2057, "_convert_indices_from_csr_to_coo": 2057, "_convert_weight_to_int4pack": 2057, "_copy_from": 2057, "_copy_from_and_res": 2057, "_cslt_compress": 2057, "_cslt_sparse_mm": 2057, "_cslt_sparse_mm_search": 2057, "_ctc_loss": 2057, "_cudnn_ctc_loss": 2057, "_cudnn_init_dropout_st": 2057, "_cudnn_rnn": 2057, "_cudnn_rnn_flatten_weight": 2057, "_cufft_clear_plan_cach": 2057, "_cufft_get_plan_cache_max_s": 2057, "_cufft_get_plan_cache_s": 2057, "_cufft_set_plan_cache_max_s": 2057, "_cummax_help": 2057, "_cummin_help": 2057, "_debug_has_internal_overlap": 2057, "_dimi": 2057, "_dimv": 2057, "_dirichlet_grad": 2057, "_efficient_attention_forward": 2057, "_efficientzerotensor": 2057, "_embedding_bag": [2057, 2098], "_embedding_bag_forward_onli": 2057, "_empty_affine_quant": 2057, "_empty_per_channel_affine_quant": 2057, "_euclidean_dist": 2057, "_fake_quantize_learnable_per_channel_affin": 2057, "_fake_quantize_learnable_per_tensor_affin": 2057, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 2057, "_fft_c2c": 2057, "_fft_c2r": 2057, "_fft_r2c": 2057, "_fill_mem_eff_dropout_mask": 2057, "_flash_attention_forward": 2057, "_foobar": [2057, 2103], "_foreach_ab": 2057, "_foreach_aco": 2057, "_foreach_add": 2057, "_foreach_addcdiv": 2057, "_foreach_addcmul": 2057, "_foreach_asin": 2057, "_foreach_atan": 2057, "_foreach_ceil": 2057, "_foreach_clamp_max": 2057, "_foreach_clamp_min": 2057, "_foreach_copi": 2057, "_foreach_co": 2057, "_foreach_cosh": 2057, "_foreach_div": 2057, "_foreach_erf": 2057, "_foreach_erfc": 2057, "_foreach_exp": 2057, "_foreach_expm1": 2057, "_foreach_floor": 2057, "_foreach_frac": 2057, "_foreach_lerp": 2057, "_foreach_lgamma": 2057, "_foreach_log": 2057, "_foreach_log10": 2057, "_foreach_log1p": 2057, "_foreach_log2": 2057, "_foreach_maximum": 2057, "_foreach_minimum": 2057, "_foreach_mul": 2057, "_foreach_neg": 2057, "_foreach_norm": 2057, "_foreach_pow": 2057, "_foreach_reciproc": 2057, "_foreach_round": 2057, "_foreach_sigmoid": 2057, "_foreach_sign": 2057, "_foreach_sin": 2057, "_foreach_sinh": 2057, "_foreach_sqrt": 2057, "_foreach_sub": 2057, "_foreach_tan": 2057, "_foreach_tanh": 2057, "_foreach_trunc": 2057, "_foreach_zero": 2057, "_functional_assert_async": 2057, "_functional_assert_scalar": 2057, "_functional_sym_constrain_rang": 2057, "_functional_sym_constrain_range_for_s": 2057, "_fused_adam": 2057, "_fused_adamw": 2057, "_fused_dropout": 2057, "_fused_moving_avg_obs_fq_help": 2057, "_fused_moving_avg_obs_fq_helper_funct": 2057, "_fused_sdp_choic": 2057, "_fused_sgd": 2057, "_fw_primal": 2057, "_fw_primal_copi": 2057, "_get_cpu_cap": 2057, "_get_tracing_st": 2057, "_grad_sum_to_s": 2057, "_has_compatible_shallow_copy_typ": 2057, "_has_same_storage_numel": 2057, "_histogramdd_bin_edg": 2057, "_histogramdd_from_bin_ct": 2057, "_histogramdd_from_bin_tensor": 2057, "_index_put_impl": 2057, "_indices_copi": 2057, "_infer_s": 2057, "_int_mm": 2057, "_is_all_tru": 2057, "_is_any_tru": 2057, "_is_zerotensor": 2057, "_lazy_clon": 2057, "_linalg_check_error": 2057, "_linalg_det": 2057, "_linalg_eigh": 2057, "_linalg_eigv": 2057, "_linalg_slogdet": 2057, "_linalg_solve_ex": 2057, "_linalg_svd": 2057, "_list_to_tensor": 2057, "_logcumsumexp": 2057, "_lstm_mp": 2057, "_make_dep_token": 2057, "_make_du": 2057, "_make_dual_copi": 2057, "_make_per_channel_quantized_tensor": 2057, "_make_per_tensor_quantized_tensor": 2057, "_masked_scal": 2057, "_masked_softmax": 2057, "_mixed_dtypes_linear": 2057, "_mkldnn_reshap": 2057, "_mkldnn_transpos": 2057, "_mps_convolut": 2057, "_mps_convolution_transpos": 2057, "_native_batch_norm_legit": [2057, 2098], "_native_batch_norm_legit_funct": 2057, "_native_batch_norm_legit_no_train": [2057, 2098], "_native_multi_head_attent": 2057, "_ncf_unsqueez": 2057, "_ncf_view": 2057, "_neg_view": 2057, "_neg_view_copi": 2057, "_nested_compute_contiguous_strides_offset": 2057, "_nested_from_pad": 2057, "_nested_from_padded_and_nested_exampl": 2057, "_nested_get_jagged_dummi": 2057, "_nested_get_length": 2057, "_nested_get_offset": 2057, "_nested_get_ragged_idx": 2057, "_nested_get_valu": 2057, "_nested_get_values_copi": 2057, "_nested_tensor_from_mask": 2057, "_nested_tensor_from_mask_left_align": 2057, "_nested_tensor_from_tensor_list": 2057, "_nested_tensor_s": 2057, "_nested_tensor_softmax_with_shap": 2057, "_nested_tensor_storage_offset": 2057, "_nested_tensor_strid": 2057, "_nested_view_from_buff": 2057, "_nested_view_from_buffer_copi": 2057, "_nested_view_from_jag": 2057, "_nested_view_from_jagged_copi": 2057, "_new_zeros_with_same_feature_meta": 2057, "_nnpack_avail": 2057, "_nnpack_spatial_convolut": 2057, "_no_grad_embedding_renorm": 2057, "_no_grad_fil": 2057, "_no_grad_norm": 2057, "_no_grad_uniform": 2057, "_no_grad_zero": 2057, "_pack_sequ": 2057, "_pad_circular": 2057, "_pad_enum": 2057, "_pdist_forward": [2057, 2098], "_pin_memori": 2057, "_prelu_kernel": 2057, "_print": 2057, "_propagate_xla_data": 2057, "_remove_batch_dim": 2057, "_reshape_alia": 2057, "_reshape_alias_copi": 2057, "_reshape_copi": 2057, "_resize_output": 2057, "_rowwise_prun": 2057, "_saturate_weight_to_fp16": 2057, "_scaled_dot_product_attention_math": 2057, "_scaled_dot_product_cudnn_attent": 2057, "_scaled_dot_product_efficient_attent": 2057, "_scaled_dot_product_flash_attent": 2057, "_scaled_dot_product_flash_attention_for_cpu": 2057, "_scaled_mm": 2057, "_size_if_not_equ": 2057, "_slow_conv2d_forward": 2057, "_sobol_engine_draw": 2057, "_sobol_engine_ff": 2057, "_sobol_engine_initialize_st": 2057, "_sobol_engine_scrambl": 2057, "_softmax": [2057, 2073, 2098], "_sparse_addmm": 2057, "_sparse_broadcast_to": 2057, "_sparse_broadcast_to_copi": 2057, "_sparse_bsc_tensor_unsaf": 2057, "_sparse_bsr_tensor_unsaf": 2057, "_sparse_compressed_tensor_unsaf": 2057, "_sparse_compressed_tensor_with_dim": 2057, "_sparse_coo_tensor_unsaf": 2057, "_sparse_coo_tensor_with_dim": 2057, "_sparse_coo_tensor_with_dims_and_tensor": 2057, "_sparse_csc_tensor_unsaf": 2057, "_sparse_csr_prod": 2057, "_sparse_csr_sum": 2057, "_sparse_csr_tensor_unsaf": 2057, "_sparse_log_softmax": 2057, "_sparse_mask_project": 2057, "_sparse_mm": 2057, "_sparse_mm_reduce_impl": 2057, "_sparse_semi_structured_addmm": 2057, "_sparse_semi_structured_appli": 2057, "_sparse_semi_structured_apply_dens": 2057, "_sparse_semi_structured_linear": 2057, "_sparse_semi_structured_mm": 2057, "_sparse_semi_structured_til": 2057, "_sparse_softmax": 2057, "_sparse_sparse_matmul": 2057, "_sparse_sum": 2057, "_spdiag": 2057, "_standard_gamma_grad": 2057, "_tensor_to_list": 2057, "_test_ambiguous_default": 2057, "_test_autograd_multiple_dispatch": 2057, "_test_autograd_multiple_dispatch_view": 2057, "_test_autograd_multiple_dispatch_view_copi": 2057, "_test_check_tensor": 2057, "_test_functorch_fallback": 2057, "_test_optional_filled_intlist": 2057, "_test_optional_floatlist": 2057, "_test_optional_intlist": 2057, "_test_parallel_materi": 2057, "_test_serialization_subcmul": 2057, "_test_string_default": 2057, "_test_warn_in_autograd": 2057, "_thnn_fused_gru_cel": 2057, "_thnn_fused_lstm_cel": 2057, "_to_copi": [2057, 2098], "_to_cpu": 2057, "_to_dens": 2057, "_to_spars": 2057, "_to_sparse_bsc": 2057, "_to_sparse_bsr": 2057, "_to_sparse_csc": 2057, "_to_sparse_csr": 2057, "_to_sparse_semi_structur": 2057, "_transform_bias_rescale_qkv": 2057, "_transformer_encoder_layer_fwd": 2057, "_trilinear": 2057, "_triton_multi_head_attent": 2057, "_triton_scaled_dot_attent": 2057, "_unpack_du": 2057, "_unsafe_index": 2057, "_unsafe_index_put": 2057, "_unsafe_view": 2057, "_unwrap_opt": 2057, "_upsample_bicubic2d_aa": 2057, "_upsample_bilinear2d_aa": 2057, "_upsample_nearest_exact1d": 2057, "_upsample_nearest_exact2d": 2057, "_upsample_nearest_exact3d": 2057, "_use_cudnn_ctc_loss": 2057, "_use_cudnn_rnn_flatten_weight": 2057, "_validate_compressed_sparse_indic": 2057, "_validate_sparse_bsc_tensor_arg": 2057, "_validate_sparse_bsr_tensor_arg": 2057, "_validate_sparse_compressed_tensor_arg": 2057, "_validate_sparse_coo_tensor_arg": 2057, "_validate_sparse_csc_tensor_arg": 2057, "_validate_sparse_csr_tensor_arg": 2057, "_values_copi": 2057, "_weight_int4pack_mm": 2057, "_weight_int8pack_mm": 2057, "_weight_norm_interfac": 2057, "capit": 2057, "confirmed_by_own": [2057, 2067], "convolution_overrid": 2057, "copy_sparse_to_spars": 2057, "endswith": 2057, "expandtab": 2057, "fake_quantize_per_channel_affine_cachemask": 2057, "fake_quantize_per_tensor_affine_cachemask": 2057, "fill_diagon": 2057, "glu_jvp": 2057, "has_torch_funct": [2057, 2104], "is_non_overlapping_and_dens": 2057, "is_own": [2057, 2067], "is_strides_like_format": 2057, "isalnum": 2057, "isalpha": 2057, "isdecim": 2057, "isdigit": 2057, "isidentifi": 2057, "islow": 2057, "isnumer": 2057, "isprint": 2057, "isspac": 2057, "istitl": 2057, "isupp": 2057, "lift_fresh": 2057, "ljust": 2057, "local_valu": [2057, 2060, 2067], "log_sigmoid_forward": 2057, "lstrip": 2057, "matrix_h": 2057, "nll_loss2d_forward": 2057, "nll_loss_forward": 2057, "normal_funct": 2057, "owner_nam": [2057, 2067], "percentformat": 2057, "quantized_gru": 2057, "quantized_lstm": 2057, "resize_as_spars": 2057, "rfind": 2057, "rindex": 2057, "rjust": 2057, "rpartit": 2057, "rsplit": 2057, "rstrip": 2057, "set_data": 2057, "slow_conv3d_forward": 2057, "sparse_res": 2057, "sparse_resize_and_clear": 2057, "splitlin": 2057, "swapcas": 2057, "sym_numel": [2057, 2098], "sym_storage_offset": [2057, 2098], "sym_strid": [2057, 2098], "unique_dim_consecut": 2057, "zfill": 2057, "_allgather_bas": 2057, "_reduce_scatter_bas": 2057, "allgath": 2057, "allgather_coalesc": 2057, "allgather_into_tensor_coalesc": 2057, "allreduce_coalesc": 2057, "alltoal": 2057, "alltoall_bas": 2057, "recv_any_sourc": 2057, "debugprim": 2057, "load_tensor": 2057, "_alloc_from_pool": 2057, "_mm_plus_mm": 2057, "_reinterpret_tensor": 2057, "accumulate_grad": 2057, "resize_storage_byt": 2057, "_mkl_linear": 2057, "_mkl_reorder_linear_weight": 2057, "_convolution_pointwis": 2057, "_convolution_transpose_pointwis": 2057, "_is_mkldnn_acl_support": 2057, "_is_mkldnn_bf16_support": 2057, "_is_mkldnn_fp16_support": 2057, "_linear_pointwis": 2057, "_reorder_convolution_transpose_weight": 2057, "_reorder_convolution_weight": 2057, "_reorder_linear_weight": 2057, "_reorder_mkldnn_rnn_layer_weight": 2057, "mkldnn_prepack": 2057, "conv2d_run": 2057, "qconv1d_pointwis": 2057, "qconv2d_pointwis": 2057, "qconv3d_pointwis": 2057, "qconv_prepack": 2057, "qlinear_pointwis": 2057, "qlinear_prepack": 2057, "conv2d_clamp_prepack": 2057, "conv2d_clamp_run": 2057, "conv2d_transpose_clamp_prepack": 2057, "conv2d_transpose_clamp_run": 2057, "linear_clamp_prepack": 2057, "linear_clamp_run": 2057, "unpack_prepacked_sizes_conv2d": 2057, "unpack_prepacked_sizes_linear": 2057, "addstatvalu": 2057, "autogradadd": 2057, "autogradallnonzero": 2057, "autogradallzero": 2057, "autogradanynonzero": 2057, "autogradzero": 2057, "bailout": [2057, 2090], "bailouttempl": 2057, "broadcastmkldnntensor": 2057, "broadcasts": 2057, "chunksiz": 2057, "constantmkldnntensor": 2057, "differentiablegraph": 2057, "enumnam": 2057, "enumvalu": 2057, "fallbackgraph": 2057, "fusedconcat": 2057, "fusiongroup": 2057, "ifthenels": 2057, "ignoredpythonop": 2057, "mkldnnclamp": 2057, "mkldnnhardsigmoid": 2057, "mkldnnhardswish": 2057, "mkldnnhardtanh": 2057, "mkldnnlayernorm": 2057, "mkldnnscalarmul": 2057, "mmbatchsid": 2057, "mmtreereduc": 2057, "modulecontainerindex": 2057, "numtotensor": 2057, "raiseexcept": 2057, "reductions": 2057, "requiresgradcheck": 2057, "staticruntimecopyout": 2057, "staticsubgraph": 2057, "stringindex": 2057, "tensorexprdynamicgroup": 2057, "tensorexprdynamicguard": 2057, "tensorexprgroup": 2057, "timepoint": 2057, "tupleindex": 2057, "tupleunpack": 2057, "varconcat": 2057, "varstack": 2057, "awaitable_nowait": 2057, "awaitable_wait": 2057, "is_cpu": 2057, "is_ipu": 2057, "is_maia": 2057, "is_mkldnn": 2057, "is_mp": 2057, "is_mtia": 2057, "is_nest": 2057, "is_quant": 2057, "is_vulkan": 2057, "is_xla": 2057, "is_xpu": 2057, "onednnfusiongroup": 2057, "onednnfusionguard": 2057, "profile_ivalu": 2057, "rangelist": 2057, "rpc_remot": 2057, "unchecked_unwrap_opt": 2057, "_make_token": [2057, 2098], "_sink_token": [2057, 2098], "bessel_i0": [2057, 2098], "bessel_i1": [2057, 2098], "bessel_j0": [2057, 2073, 2098], "bessel_j1": [2057, 2073, 2098], "broadcast_in_dim": [2057, 2098], "cbrt": [2057, 2098], "collapse_view": [2057, 2098], "convert_element_typ": [2057, 2098], "copy_strid": [2057, 2098], "copy_to": [2057, 2098], "device_put": [2057, 2098], "erf_inv": [2057, 2098], "erfcx": [2057, 2073, 2098], "fft_c2c": [2057, 2098], "fft_c2r": [2057, 2098], "fft_r2c": [2057, 2098], "iota": [2057, 2098], "maximum_valu": [2057, 2098], "minimum_valu": [2057, 2098], "ndtri": [2057, 2073, 2098], "rev": [2057, 2098], "shift_left": [2057, 2098], "shift_right_arithmet": [2057, 2098], "slice_in_dim": [2057, 2098], "spherical_bessel_j0": [2057, 2073, 2098], "split_dim": [2057, 2098], "view_of": [2057, 2098], "view_of_dtyp": [2057, 2098], "xor_sum": [2057, 2098], "_call_end_callbacks_on_jit_fut": 2057, "_record_function_ent": 2057, "_record_function_enter_new": 2057, "_record_function_exit": 2057, "_bfloat16quantizedtofloat": 2057, "_floattobfloat16quant": 2057, "add_out": 2057, "add_relu_out": 2057, "add_scalar_out": 2057, "add_scalar_relu": 2057, "add_scalar_relu_out": 2057, "batch_norm1d": 2057, "batch_norm1d_relu": 2057, "batch_norm2d": 2057, "batch_norm2d_relu": 2057, "batch_norm3d": 2057, "batch_norm3d_relu": 2057, "batch_norm_relu": 2057, "cat_out": 2057, "cat_relu": 2057, "cat_relu_out": 2057, "conv1d_dynam": 2057, "conv1d_prepack": 2057, "conv1d_unpack": 2057, "conv2d_add": 2057, "conv2d_add_relu": 2057, "conv2d_dil": 2057, "conv2d_dynam": 2057, "conv2d_group": 2057, "conv2d_output_pad": 2057, "conv2d_pad": 2057, "conv2d_strid": 2057, "conv2d_transpos": 2057, "conv2d_unpack": 2057, "conv2d_unpack_s": 2057, "conv3d_dil": 2057, "conv3d_dynam": 2057, "conv3d_group": 2057, "conv3d_output_pad": 2057, "conv3d_pad": 2057, "conv3d_strid": 2057, "conv3d_transpos": 2057, "conv3d_unpack": 2057, "conv_prepack": 2057, "conv_transpose1d_dynam": 2057, "conv_transpose1d_unpack": 2057, "conv_transpose2d_dil": 2057, "conv_transpose2d_dynam": 2057, "conv_transpose2d_group": 2057, "conv_transpose2d_output_pad": 2057, "conv_transpose2d_pad": 2057, "conv_transpose2d_strid": 2057, "conv_transpose2d_transpos": 2057, "conv_transpose2d_unpack": 2057, "conv_transpose3d_dil": 2057, "conv_transpose3d_dynam": 2057, "conv_transpose3d_group": 2057, "conv_transpose3d_output_pad": 2057, "conv_transpose3d_pad": 2057, "conv_transpose3d_strid": 2057, "conv_transpose3d_transpos": 2057, "conv_transpose3d_unpack": 2057, "conv_unpack": 2057, "embedding_4bit": 2057, "embedding_bag_2bit_prepack": 2057, "embedding_bag_2bit_rowwise_offset": 2057, "embedding_bag_2bit_unpack": 2057, "embedding_bag_4bit": 2057, "embedding_bag_4bit_prepack": 2057, "embedding_bag_4bit_rowwise_offset": 2057, "embedding_bag_4bit_unpack": 2057, "embedding_bag_byt": 2057, "embedding_bag_byte_prepack": 2057, "embedding_bag_byte_rowwise_offset": 2057, "embedding_bag_byte_unpack": 2057, "embedding_bag_prepack": 2057, "embedding_bag_unpack": 2057, "embedding_byt": 2057, "linear_dynamic_fp16": 2057, "linear_dynamic_fp16_unpacked_weight": 2057, "linear_leaky_relu": 2057, "linear_relu_dynam": 2057, "linear_relu_dynamic_fp16": 2057, "linear_tanh": 2057, "linear_unpack": 2057, "linear_unpack_fp16": 2057, "linear_with_input_q_dq_qweight_dq_output_fp32": 2057, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 2057, "make_quantized_cell_param": 2057, "make_quantized_cell_params_dynam": 2057, "make_quantized_cell_params_fp16": 2057, "mul_out": 2057, "mul_relu": 2057, "mul_relu_out": 2057, "mul_scalar_out": 2057, "mul_scalar_relu": 2057, "mul_scalar_relu_out": 2057, "quantized_gru_cell_dynam": 2057, "quantized_lstm_cell_dynam": 2057, "quantized_rnn_relu_cell_dynam": 2057, "quantized_rnn_tanh_cell_dynam": 2057, "rngprim": 2057, "philox_rand": 2057, "qlinear": 2057, "qlinear_dynam": 2057, "qlinear_relu": 2057, "qlinear_relu_dynam": 2057, "qlinear_unpack": 2057, "static_runtim": 2057, "vartupleunpack": 2057, "clamp_nan_to_num": 2057, "create_owned_ref": 2057, "dequantize_copi": 2057, "dict_unpack": 2057, "expand_dims_copi": 2057, "flatten_copi": 2057, "fused_equally_split": 2057, "reshape_copi": 2057, "select_tensor": 2057, "signed_log1p": 2057, "to_copi": 2057, "to_maybe_copy_out": 2057, "var1": 2058, "var2": 2058, "bias_param": 2058, "adadelta": 2058, "adamax": 2058, "asgd": 2058, "nadam": 2058, "radam": 2058, "rmsprop": 2058, "rprop": 2058, "reducelronplateau": 2058, "multisteplr": 2058, "swa_util": 2058, "averagedmodel": 2058, "swalr": 2058, "update_bn": 2058, "optima": 2058, "polyak": 2058, "averaged_model": 2058, "multi_avg_fn": 2058, "get_ema_multi_avg_fn": 2058, "textrm": 2058, "update_paramet": 2058, "avg_fn": 2058, "_foreach": 2058, "ema_model": 2058, "ema_avg": 2058, "averaged_model_paramet": 2058, "model_paramet": 2058, "num_averag": 2058, "swa_schedul": 2058, "anneal_epoch": 2058, "swa_lr": 2058, "swa_model": 2058, "cosineannealinglr": 2058, "swa_start": 2058, "test_input": 2058, "secur": 2059, "unpackag": 2059, "exercis": 2059, "unzip": 2059, "my_packag": 2059, "freeli": 2059, "94304870911616": 2059, "94304900784016": 2059, "extern_modul": 2059, "model_1": 2059, "myzip": 2059, "file_byt": 2059, "writestr": 2059, "new_file_byt": 2059, "vim": 2059, "vimrc": 2059, "bufreadcmd": 2059, "brows": 2059, "amatch": 2059, "vi": 2059, "packageimport": 2059, "queryabl": 2059, "glob": 2059, "packageexport": 2059, "pe": 2059, "save_pickl": 2059, "has_fil": 2059, "importer_file_structur": 2059, "package_a": 2059, "get_rdep": 2059, "all_path": 2059, "dependency_graph_str": 2059, "save_text": 2059, "save_binari": 2059, "my_resourc": 2059, "config_stuff": 2059, "raw_data": 2059, "my_byt": 2059, "complementari": [2059, 2073], "load_pickl": 2059, "load_text": 2059, "load_binari": 2059, "my_tensor": 2059, "__reduce_package__": 2059, "my_str": 2059, "time_import": 2059, "time_export": 2059, "pickler": 2059, "persistent_id": 2059, "persistent_load": 2059, "generated_module_nam": 2059, "get_unique_id": 2059, "clock_gettim": 2059, "unpackage_foo": 2059, "depickl": 2059, "foo_1": 2059, "foo_2": 2059, "foo_packag": 2059, "foo_collect": 2059, "foo1": 2059, "foo2": 2059, "imported_foo": 2059, "9857706": 2059, "650140837": 2059, "652698385": 2059, "__torch_package__": 2059, "is_in_packag": 2059, "userexcept": 2059, "unpackageableexcept": 2059, "loaded_modul": 2059, "import_modul": 2059, "save_source_str": 2059, "save_modul": 2059, "textwrap": 2059, "dedent": 2059, "my_funct": 2059, "is_packag": 2059, "importlib": 2059, "my_pickl": 2059, "get_my_resourc": 2059, "read_text": 2059, "torch_package_import": 2059, "get_my_pickl": 2059, "is_from_packag": 2059, "stdlib": 2059, "my_test": 2059, "f2": [2059, 2060], "sys_import": 2059, "script_model": 2059, "mixed_model": 2059, "python_model_with_scripted_submodul": 2059, "loaded_script": 2059, "loaded_mix": 2059, "convention": 2059, "94286146172688": 2059, "94286146172784": 2059, "consult": [2059, 2090], "essai": 2059, "another_packag": 2059, "pickletool": 2059, "ast": 2059, "deni": 2059, "my_export": 2059, "my_interned_modul": 2059, "package_export": 2059, "my_externed_modul": 2059, "my_mocked_modul": 2059, "unwant": [2059, 2077], "hodg": 2059, "podg": 2059, "bazel": 2059, "buck": 2059, "my_class_inst": 2059, "imported_myclass": 2059, "okai": 2059, "torch_package_0": 2059, "handle_me_this_wai": 2059, "inadvert": 2059, "pun": 2059, "packagingerror": 2059, "dependency_graph": 2059, "emptymatcherror": 2059, "allow_empti": 2059, "_sysimport": 2059, "hermet": 2059, "scan": 2059, "orderedimport": 2059, "add_depend": 2059, "graphviz": 2059, "lang": 2059, "denied_modul": 2059, "my_subpackag": 2059, "digraph": 2059, "externed_modul": 2059, "interned_modul": 2059, "mocked_modul": 2059, "register_extern_hook": 2059, "register_intern_hook": 2059, "register_mock_hook": 2059, "myobject": 2059, "save_source_fil": 2059, "file_or_directori": 2059, "my_subsubpackag": 2059, "file_or_buff": 2059, "module_allow": 2059, "pytorchfileread": 2059, "python_vers": 2059, "is_dir": 2059, "gpipe": 2060, "pippi": 2060, "suffer": 2060, "allevi": [2060, 2094], "microbatch": 2060, "bubbl": 2060, "except_last": 2060, "deferred_batch_norm": 2060, "torchgpip": 2060, "withdevic": 2060, "micro": 2060, "fc": [2060, 2062], "init_rpc": [2060, 2067, 2068], "output_rref": 2060, "fed": [2060, 2077], "nochunk": 2060, "resnext": 2060, "till": 2060, "skippabl": 2060, "1to3": 2060, "f1": 2060, "layer2": 2060, "layer3": 2060, "skip_1to3": 2060, "f3": 2060, "alic": 2060, "bob": 2060, "carol": 2060, "stashstashpop": 2060, "f_alic": 2060, "f_bob": 2060, "verify_skipp": 2060, "unmatch": [2060, 2083], "fairscal": 2060, "_kinetoprofil": 2061, "execution_trace_observ": 2061, "profileract": 2061, "export_memory_timelin": 2061, "executiontraceobserv": 2061, "add_metadata": 2061, "add_metadata_json": 2061, "unaggreg": 2061, "suffix": [2061, 2077, 2078], "png": 2061, "gzip": 2061, "numbyt": 2061, "increment_vers": 2061, "_memory_profil": 2061, "export_stack": 2061, "self_cuda_time_tot": 2061, "preset_metadata_json": 2061, "preset": 2061, "on_trace_readi": 2061, "record_and_sav": 2061, "tensorboard_trace_handl": 2061, "dir_nam": 2061, "logdir": [2061, 2077], "plugin": [2061, 2077, 2089], "code_to_profil": 2061, "row_limit": 2061, "trace_handl": 2061, "test_trace_": 2061, "step_num": 2061, "code_iteration_to_profil": 2061, "register_callback": 2061, "execution_trac": 2061, "test_execution_trace_with_kineto": 2061, "test_profil": 2061, "_itraceobserv": 2061, "skip_first": 2061, "worker_nam": [2061, 2067], "use_gzip": 2061, "range_push": 2061, "range_pop": 2061, "4x": 2062, "88": [2062, 2097], "14k": 2062, "domin": 2062, "previous_layer_fp32": 2062, "linear_fp32": 2062, "activation_fp32": 2062, "next_layer_fp32": 2062, "linear_weight_fp32": 2062, "linear_int8_w_fp32_inp": 2062, "linear_weight_int8": 2062, "ptdq": 2062, "model_fp32": 2062, "model_int8": 2062, "quantize_dynam": 2062, "input_fp32": 2062, "previous_layer_int8": 2062, "linear_with_activation_int8": 2062, "next_layer_int8": 2062, "ptsq": 2062, "minmax": 2062, "l2norm": 2062, "model_fp32_fus": 2062, "fuse_modul": [2062, 2063], "model_fp32_prepar": 2062, "fq": 2062, "prepare_qat": 2062, "training_loop": 2062, "requant": 2062, "linear1": 2062, "custom_qconfig": 2062, "fxptq": 2062, "model_fp": 2062, "usermodel": 2062, "model_to_quant": 2062, "default_dynamic_qconfig": 2062, "model_prepar": 2062, "model_quant": 2062, "model_fus": 2062, "quantize_pt2": 2062, "prepare_pt2": 2062, "_export": [2062, 2085], "capture_pre_autograd_graph": 2062, "xnnpackquant": 2062, "get_symmetric_quantization_config": 2062, "prepare_qat_pt2": 2062, "convert_pt2": 2062, "per_tensor_symmetr": [2062, 2065], "per_channel_symmetr": [2062, 2065], "per_channel_scal": 2062, "per_channel_zero_point": 2062, "quantized_tensor": 2062, "qengin": 2062, "in4": 2062, "tensorrt": [2062, 2084, 2089, 2094], "fx2trt": 2062, "float_modul": [2062, 2082], "staticquantcustommodul": 2062, "observed_modul": 2062, "default_qconfig": [2062, 2083], "vnni": 2062, "test_quantized_op": 2062, "testquantizedop": 2062, "test_custom_module_lstm": 2062, "test_quantize_fx": 2062, "testquantizefx": 2062, "test_static_lstm": 2062, "some_oper": 2062, "e2": 2062, "thnn_conv2d_forward": 2062, "quantizedcpu": 2062, "some_qconfig": 2062, "linearpackedparam": 2062, "_modul": 2062, "prepare_orig": 2062, "quantized_orig": 2062, "scripted_quant": 2062, "fp32_op": 2063, "int8_op": 2063, "cooperlak": 2063, "audit": 2063, "op_fp32": 2063, "op_int8": 2063, "_numeric_suit": 2063, "_numeric_suite_fx": 2063, "0x7fdc54e89660": 2064, "0x7fdc2ed86040": 2064, "0x7fdc2ed860d0": 2064, "num_tensor_args_to_observation_typ": 2064, "convbn1d": 2064, "0x7fdc2c84db80": 2064, "reference_quantized_module_for_root": 2064, "fuse_convtranspose_bn": 2064, "0x7fdc2c84dd30": 2064, "linearbn1d": 2064, "fuse_linear_bn": 2064, "0x7fdc2c84dca0": 2064, "convbn2d": 2064, "convbn3d": 2064, "bnrelu2d": 2064, "bnrelu3d": 2064, "input_type_to_index": 2064, "conv_fus": 2064, "convbnrelu1d": 2064, "convbnrelu2d": 2064, "convbnrelu3d": 2064, "convrelu1d": 2064, "convrelu3d": 2064, "0x7fdc2ed86160": 2064, "0x7fdc2ed86790": 2064, "quint4x2": [2064, 2074, 2078, 2079], "embedding_op": 2064, "0x7fdc2ed88700": 2064, "00390625": 2064, "0x7fdc2ed86f70": 2064, "0x7fdc2ed88160": 2064, "0x7fdc2ed86670": 2064, "0x7fdc2ed88550": 2064, "0x7fdc2ed02dc0": 2064, "0x7fdc2ed885e0": 2064, "0x7fdc2ed86940": 2064, "linear_fus": 2064, "_sequential_wrapper2": 2064, "0x7fdc5c01b430": 2064, "0x7fdc2ed86550": 2064, "0x7fdc26ac04c0": 2064, "fuse_conv_bn_relu": 2064, "0x7fdc2c84dc10": 2064, "0x7fdc26ac0550": 2064, "0x7fdc26ac05e0": 2064, "0x7fdc26ac0670": 2064, "0x7fdc26ac0700": 2064, "0x7fdc26ac0790": 2064, "0x7fdc26ac0820": 2064, "0x7fdc26ac08b0": 2064, "0x7fdc26ac0940": 2064, "0x7fdc26ac09d0": 2064, "0x7fdc26ac0a60": 2064, "0x7fdc2ed86700": 2064, "0078125": 2064, "customconfig": 2065, "custom_module_config": 2065, "_caller": 2066, "_devices_kw": 2066, "slowli": 2066, "unind": 2066, "deivce_typ": 2066, "shortcom": 2067, "stitch": 2067, "rpc_backend_opt": 2067, "trainer3": 2067, "parameterserver2": 2067, "backendtyp": 2067, "rpcbackendopt": 2067, "rpcagent": 2067, "transmit": 2067, "calle": [2067, 2069], "_set_rpc_timeout": 2067, "worker0": 2067, "my_script_add": 2067, "wire": 2067, "fut2": 2067, "meth": 2067, "grace": 2067, "userrref": [2067, 2069], "async_execut": 2067, "paus": 2067, "outmost": 2067, "async_add_chain": 2067, "worker2": 2067, "script_add": 2067, "async_add": 2067, "asyncexecutionclass": 2067, "static_async_add": 2067, "class_async_add": 2067, "ret_fut": 2067, "bound_async_add": 2067, "rpc_timeout": 2067, "incid": [2067, 2069], "nvlink": 2067, "multiplex": 2067, "tensorpiperpcbackendopt": 2067, "num_worker_thread": 2067, "device_map": 2067, "_transport": 2067, "tensorpipeag": 2067, "set_device_map": 2067, "intermitt": 2067, "backoff": 2067, "pyrref": 2067, "type_hint": 2067, "_distributed_rpc": 2067, "dist_autograd_ctx_id": 2067, "ctx_id": 2067, "ownerrref": [2067, 2069], "remote_modul": 2067, "forward_async": 2067, "remote_devic": 2067, "workernam": 2067, "ps0": 2067, "remote_linear_modul": 2067, "get_module_rref": 2067, "remote_paramet": 2067, "my_add": [2068, 2104], "t4": 2068, "t5": 2068, "autograd_message_id": 2068, "autograd_context_id": 2068, "send1": 2068, "kickoff": 2068, "recv2": 2068, "heard": 2068, "send2": 2068, "recv1": 2068, "dist_autograd_simpl": 2068, "random_tensor": 2068, "_run_process": 2068, "dst_rank": 2068, "dst_name": 2068, "run_process": 2068, "rrefid": 2069, "transient": 2069, "udf": 2069, "deliveri": 2069, "knowledg": 2069, "danger": 2069, "ancestor": 2069, "trickier": 2069, "forkid": 2069, "ack": 2069, "solid": 2069, "followup": 2069, "lil": 2072, "stark": 2072, "9093": 2072, "1411": 2072, "7568": 2072, "9589": 2072, "2794": 2072, "catastroph": 2072, "9900": 2072, "metadata_mask": 2072, "rce": 2072, "rc": 2072, "62": 2072, "to_sparse_semi_structur": 2072, "1x4": 2072, "16x16": 2072, "a_spars": 2072, "sparsesemistructuredtensor": 2072, "000": 2072, "400": 2072, "s2": 2072, "plain_dim_s": 2072, "lp64": 2072, "280": 2072, "310": 2072, "sp": 2072, "9078": 2072, "conception": 2072, "sparsesemistructur": 2072, "lobpcg": 2072, "geneig": 2072, "pca_lowrank": 2072, "kindli": 2072, "airy_ai": 2073, "airi": 2073, "9635": 2073, "entr": 2073, "3466": 2073, "int_": 2073, "8427": 2073, "0561": 2073, "4769": 2073, "9213": 2073, "8858": 2073, "7683": 2073, "7481": 2073, "2920": 2073, "int_0": 2073, "gammaln": 2073, "a1": 2073, "a2": 2073, "3528": 2073, "5665": 2073, "6472": 2073, "4335": 2073, "2650": 2073, "2661": 2073, "2796": 2073, "8808": 2073, "3019": 2073, "4658": 2073, "3085": 2073, "2430": 2073, "2070": 2073, "i1": 2073, "5652": 2073, "9534": 2073, "7595": 2073, "2153": 2073, "log_ndtr": 2073, "_ndtr": 2073, "6077": 2073, "7832": 2073, "841": 2073, "6931": 2073, "1728": 2073, "023": 2073, "9331": 2073, "6486": 2073, "1523": 2073, "6516": 2073, "6352": 2073, "6131": 2073, "7169": 2073, "6261": 2073, "displaystyl": 2073, "undefiend": 2073, "6835": 2073, "8474": 2073, "1929": 2073, "7162": 2073, "4180": 2073, "3928": 2073, "4007": 2073, "7586": 2073, "3901": 2073, "5049": 2073, "ndtr": 2073, "0228": 2073, "1587": 2073, "9772": 2073, "9987": 2073, "2p": 2073, "64493": 2073, "4041": 2073, "8288": 2073, "4939": 2073, "4091": 2073, "8863": 2073, "771": 2073, "scaled_modified_bessel_k0": 2073, "scaled_modified_bessel_k1": 2073, "2948": 2073, "0267": 2073, "1566": 2073, "9186": 2073, "8631": 2073, "0259": 2073, "1300": 2073, "spheric": 2073, "xlog1pi": 2073, "3863": 2073, "1972": 2073, "6094": 2073, "2189": 2073, "8283": 2073, "7726": 2073, "0986": 2073, "1589": 2073, "hurwitz": 2073, "6449": 2073, "0823": 2073, "untyp": 2074, "wrap_storag": 2074, "complex_doubl": 2074, "from_buff": 2074, "is_hpu": 2074, "pickle_storage_typ": 2074, "byteswap": 2074, "posix": 2074, "shm_unlink": 2074, "unlink": 2074, "quint2x4": [2074, 2079], "twelv": 2075, "halftensor": [2075, 2078], "bfloat16tensor": [2075, 2078], "chartensor": [2075, 2078], "shorttensor": [2075, 2078], "binary16": [2075, 2078], "significand": [2075, 2078], "float_tensor": 2075, "double_tensor": 2075, "complex_float_tensor": 2075, "complex_double_tensor": 2075, "int_tensor": 2075, "long_tensor": 2075, "uint_tensor": 2075, "bool_tensor": 2075, "long_zerodim": 2075, "int_zerodim": 2075, "cuda1": 2075, "channels_last_3d": 2075, "ndhwc": 2075, "blogpost": [2076, 2091], "totensor": 2077, "trainset": 2077, "mnist": 2077, "mnist_train": 2077, "trainload": 2077, "grayscal": 2077, "make_grid": 2077, "add_imag": 2077, "add_graph": 2077, "clutter": 2077, "n_iter": 2077, "purge_step": 2077, "max_queu": 2077, "flush_sec": 2077, "filename_suffix": 2077, "current_datetime_hostnam": 2077, "exp1": 2077, "global_step": 2077, "purg": 2077, "event_file_writ": 2077, "eventfilewrit": 2077, "may04_22": 2077, "54_": 2077, "macbook": 2077, "my_experi": 2077, "lr_0": 2077, "1_batch_16": 2077, "locallr_0": 2077, "scalar_valu": 2077, "walltim": 2077, "new_styl": 2077, "double_precis": 2077, "blobnam": 2077, "simple_valu": 2077, "main_tag": 2077, "tag_scalar_dict": 2077, "run_14h": 2077, "xsinx": 2077, "xcosx": 2077, "tanx": 2077, "add_histogram": 2077, "max_bin": 2077, "img_tensor": 2077, "dataformat": 2077, "chw": 2077, "hwc": 2077, "hw": 2077, "wh": 2077, "3xhxw": 2077, "img_hwc": 2077, "my_imag": 2077, "my_image_hwc": 2077, "img_batch": 2077, "my_image_batch": 2077, "add_figur": 2077, "add_video": 2077, "vid_tensor": 2077, "fp": 2077, "moviepi": 2077, "add_audio": 2077, "snd_tensor": 2077, "sample_r": 2077, "44100": 2077, "add_text": 2077, "text_str": 2077, "input_to_model": 2077, "use_strict_trac": 2077, "add_embed": 2077, "label_img": 2077, "metadata_head": 2077, "projector": 2077, "kwlist": 2077, "add_pr_curv": 2077, "num_threshold": 2077, "pr_curv": 2077, "add_custom_scalar": 2077, "chart": 2077, "categorynam": 2077, "chartnam": 2077, "listofproperti": 2077, "multilin": 2077, "taiwan": 2077, "twse": 2077, "0050": 2077, "2330": 2077, "dow": 2077, "aaa": 2077, "bbb": 2077, "ccc": 2077, "nasdaq": 2077, "add_mesh": 2077, "config_dict": 2077, "threej": 2077, "vertex": 2077, "number_of_vertic": 2077, "vertices_tensor": 2077, "colors_tensor": 2077, "faces_tensor": 2077, "my_mesh": 2077, "add_hparam": 2077, "hparam_dict": 2077, "metric_dict": 2077, "hparam_domain_discret": 2077, "run_nam": 2077, "hparam": 2077, "bsize": 2077, "uint16": [2078, 2094], "uint32": [2078, 2094], "uint64": [2078, 2094], "e4m3": 2078, "e5m2": 2078, "asid": 2078, "58734": 2078, "2209": 2078, "05433": 2078, "tini": [2078, 2079, 2097, 2107], "_like": 2078, "allow_subclass": 2079, "check_devic": 2079, "check_layout": 2079, "6e": 2079, "3e": 2079, "assert_equ": 2079, "000000000000001e": 2079, "1e0": 2079, "argh": 2079, "nfooter": 2079, "66": 2079, "footer": 2079, "exclude_zero": 2079, "1205": 2079, "2282": 2079, "6380": 2079, "default_gener": 2081, "click": [2081, 2100, 2101], "is_integ": 2081, "data_dependent_output": 2081, "dynamic_output_shap": 2081, "inplace_view": 2081, "needs_fixed_stride_ord": 2081, "nondeterministic_bitwis": 2081, "nondeterministic_seed": 2081, "pt2_compliant_tag": 2081, "compare_weight": 2082, "float_dict": 2082, "quantized_dict": 2082, "wt_compare_dict": 2082, "qmodel": 2082, "compute_error": 2082, "weight_dict": 2082, "get_logger_dict": 2082, "shadowlogg": 2082, "outputlogg": [2082, 2083], "target_dict": 2082, "q_modul": 2082, "logger_cl": [2082, 2083], "prepare_model_with_stub": 2082, "module_swap_list": 2082, "q_model": 2082, "ob_dict": 2082, "compare_model_stub": 2082, "quantizablebasicblock": 2082, "get_matching_activ": 2082, "act_dict": 2082, "prepare_model_output": 2082, "compare_model_output": 2082, "act_compare_dict": 2082, "weight_comparison": 2083, "extract_weight": 2083, "sqnr": 2083, "extend_logger_results_with_comparison": 2083, "compute_sqnr": 2083, "mp_n": 2083, "mq_n": 2083, "add_logg": 2083, "act_comparison": 2083, "extract_logger_info": 2083, "mp_shadows_mq": 2083, "add_shadow_logg": 2083, "shadow_act_comparison": 2083, "extract_shadow_logger_info": 2083, "ref_node_nam": 2083, "prev_node_nam": 2083, "model_nam": 2083, "ref_nam": 2083, "prev_node_target_typ": 2083, "ref_node_target_typ": 2083, "results_typ": 2083, "index_within_arg": 2083, "index_of_arg": 2083, "qconfig_str": 2083, "outputcomparisonlogg": 2083, "x_ref": 2083, "nstracer": 2083, "skipped_module_nam": 2083, "skipped_module_class": 2083, "model_name_a": 2083, "model_a": 2083, "model_name_b": 2083, "model_b": 2083, "base_name_to_sets_of_related_op": 2083, "unmatchable_types_map": 2083, "op_to_type_to_weight_extraction_fn": 2083, "nsresultstyp": 2083, "name_a": 2083, "name_b": 2083, "should_log_input": 2083, "model_a_with_logg": 2083, "model_b_with_logg": 2083, "model_name_to_use_for_layer_nam": 2083, "node_type_to_io_type_map": 2083, "model_a_shadows_b": 2083, "model_name_1": 2083, "model_name_2": 2083, "comparison_fn": 2083, "comparison_nam": 2083, "prepare_n_shadows_model": 2083, "qconfig_multi_map": 2083, "custom_prepare_fn": 2083, "custom_prepare_kwarg": 2083, "custom_trac": 2083, "args_kwargs_m": 2083, "op_m": 2083, "output_m": 2083, "op_m_n": 2083, "log_m_n": 2083, "log_m_0": 2083, "qconfig_n": 2083, "args_m": 2083, "op_m_prepared_with_qconfig_n": 2083, "out_m_n": 2083, "kwargs_m": 2083, "docblock": 2083, "loggers_set_en": 2083, "loggers_set_save_activ": 2083, "save_activ": 2083, "convert_n_shadows_model": 2083, "custom_convert_fn": 2083, "custom_convert_kwarg": 2083, "extract_results_n_shadows_model": 2083, "print_comparisons_n_shadows_model": 2083, "compute_normalized_l2_error": 2083, "compute_cosine_similar": 2083, "surfac": 2084, "openai": 2084, "ipex": 2084, "torch_tensorrt": 2084, "tvm": 2084, "apach": 2084, "openvino": 2084, "aotinductor": 2084, "dashboard": [2084, 2092, 2097], "nnmodul": 2084, "craft": 2085, "aot_compil": 2085, "batch_dim": 2085, "so_path": 2085, "aot_inductor": 2085, "output_path": 2085, "getcwd": 2085, "model_container_runner_cuda": 2085, "model_container_runner_cpu": 2085, "aotimodelcontainerrunnercuda": 2085, "aotimodelcontainerrunnercpu": 2085, "kcuda": 2085, "kcpu": 2085, "aoti_runn": 2085, "runner": 2085, "inputs2": 2085, "cmakelist": 2085, "aoti_exampl": 2085, "cmake_minimum_requir": 2085, "fatal_error": 2085, "find_packag": 2085, "add_execut": 2085, "add_custom_command": 2085, "cmake_current_source_dir": 2085, "target_link_librari": 2085, "set_properti": 2085, "cxx_standard": 2085, "cmake_prefix_path": 2085, "mkdir": 2085, "5184": 2085, "4462": 2085, "4611": 2085, "4744": 2085, "4811": 2085, "4938": 2085, "4193": 2085, "cudafloattyp": 2085, "4883": 2085, "4703": 2085, "simd": 2087, "isa": 2087, "amx": 2087, "collect_env": 2087, "avx512f": 2087, "avx512bw": 2087, "avx512_vnni": 2087, "amx_til": 2087, "amx_bf16": 2087, "amx_int8": 2087, "debut": 2088, "cachingalloc": 2088, "cudagraph_tre": 2088, "unintend": 2088, "prematur": 2088, "mark_step_begin": 2088, "footgun": [2088, 2093], "my_custom_backend": 2089, "f_opt": 2089, "my_compil": [2089, 2092], "torch_dynamo_backend": 2089, "your_modul": 2089, "minifi": [2089, 2094], "aot_autograd": 2089, "fw_compil": 2089, "bw_compil": 2089, "make_boxed_func": 2089, "model_opt": 2089, "0x7f1a894649a8": 2089, "mockmodul": 2089, "optimized_mod": 2089, "toy_exampl": [2089, 2092, 2094, 2103], "abs_1": [2089, 2092], "0x7f8d259298a0": 2089, "superior": 2089, "optimize_for_inference_compil": 2089, "code_to_acceler": 2089, "lookup_backend": 2089, "trt_compil": 2089, "inductor_compil": 2089, "recognit": 2090, "induct": 2090, "mark_dynam": [2090, 2091], "shapeenv": [2090, 2093], "reusabl": 2090, "plumb": 2090, "symnodeimpl": 2090, "python_symnod": 2090, "_meta_registr": 2090, "decomp": [2090, 2093], "primtorch": [2090, 2093], "apparatu": 2090, "precomput": 2090, "constrain_rang": 2090, "wherebi": 2090, "blame": 2091, "insan": 2091, "backtrac": [2091, 2093, 2103], "blindli": 2091, "arduou": 2091, "mse": 2091, "l_x_": 2091, "l_y_": 2091, "l_n_": 2091, "sequel": 2091, "_convert_frame_assert": 2091, "variabletrack": 2091, "listvari": 2091, "constantvari": [2091, 2094, 2103], "tensorvari": [2091, 2094, 2103], "variablebuild": 2091, "_wrap": 2091, "builder": 2091, "userdefinedobjectvari": 2091, "sourcebuild": 2091, "load_glob": [2091, 2092], "torchingraphfunctionvari": 2091, "instructortranslatorbas": 2091, "symbolic_convert": [2091, 2103], "instructiontranslatorbas": 2091, "build_list": 2091, "inst": 2091, "popn": 2091, "argval": 2091, "mutable_loc": 2091, "mutableloc": 2091, "instructiontransl": 2091, "wrap_fx_proxi": 2091, "overkil": 2091, "___check_type_id": 2091, "94334122025024": 2091, "9433": 2091, "getitemsourc": 2091, "94439025877664": 2091, "94439025840192": 2091, "saw": 2091, "l_a_": [2091, 2092], "l_b_": [2091, 2092], "__compiled_fn_1": 2091, "check_tensor": [2091, 2092], "maybe_mark_dynam": 2091, "mark_stat": 2091, "rout": 2091, "symnodevari": 2091, "812": 2091, "django": 2091, "rust": 2091, "choke": 2091, "doctr_det_predictor": 2091, "cv2": 2091, "postprocess": 2091, "confess": 2091, "revisit": 2091, "__compiled_fn_0": [2091, 2092], "load_fast": [2091, 2092], "store_fast": [2091, 2092], "graph_out_0": 2091, "load_const": [2091, 2092], "binary_subscr": 2091, "__resume_at_14_1": 2091, "rot_two": 2091, "resume_in_fn": 2091, "__compiled_fn_2": 2091, "unpack_sequ": [2091, 2092], "l6": 2091, "l8": 2091, "l20": 2091, "l22": 2091, "hamper": 2091, "ride": 2091, "demystifi": 2091, "literatur": 2091, "eval_fram": [2091, 2092], "lingo": 2091, "interestingli": 2091, "523": 2092, "watch": 2092, "kaichao": 2092, "_dynamo_dynamic_indic": 2092, "utils_devic": 2092, "___skip_backend_check": 2092, "___current_backend": 2092, "___lookup_backend": 2092, "140355900538256": 2092, "dispatchkeyset": 2092, "backendselect": 2092, "adinplaceorview": 2092, "autogradcpu": 2092, "recaptur": 2092, "decompil": 2092, "depyf": 2092, "eval_with_kei": 2092, "0x7f9ca082f8a0": 2092, "load_method": 2092, "binary_add": 2092, "binary_true_divid": 2092, "compare_op": 2092, "pop_jump_if_fals": 2092, "binary_multipli": 2092, "__resume_at_30_1": 2092, "__resume_at_38_2": 2092, "__temp_1": 2092, "youkaichao": 2092, "__resume_at_": 2092, "jump_absolut": 2092, "resume_at": 2092, "_debug_get_cache_entry_list": 2092, "__code__": 2092, "codetyp": 2092, "innermost_fn": 2092, "cache_entri": 2092, "check_fn": 2092, "code_part": 2092, "___guarded_cod": 2092, "___check_global_st": 2092, "140215810860528": 2092, "___check_tensor": 2092, "tensor_check_nam": 2092, "co_freevar": 2092, "__closure__": 2092, "___is_grad_en": 2092, "___are_deterministic_algorithms_en": 2092, "___is_torch_function_en": 2092, "value_a": 2092, "value_b": 2092, "__self__": 2092, "compiled_exampl": 2092, "get_cache_entri": 2092, "recompile_and_add_another_cache_entri": 2092, "trash": 2093, "subclass_zoo": 2093, "bunch": 2093, "from_real_tensor": 2093, "fakeifi": 2093, "dispatch_devic": 2093, "ly": 2093, "derefer": 2093, "in_kernel_invocation_manag": 2093, "unwrap": 2093, "test_fake_tensor": 2093, "fake_mod": 2093, "fake_x": 2093, "fake_i": 2093, "fake_z": 2093, "_guard": 2093, "detect_fake_mod": 2093, "fake_arg": 2093, "maybe_disable_fake_tensor_mod": 2093, "nich": 2093, "faketensorprop": 2093, "fake_tensor_prop": 2093, "propagate_dont_convert_input": 2093, "fake_input": 2093, "real_tensor": 2093, "annoi": 2093, "somehow": 2093, "fakecopymod": 2093, "gave": 2093, "fakeif": 2093, "tension": 2093, "analys": 2093, "metaconvert": 2093, "die": 2093, "saroufim": 2094, "evalfram": 2094, "usercod": 2094, "rob": 2094, "diminish": 2094, "vast": 2094, "250k": 2094, "aitempl": 2094, "aot_eag": [2094, 2103], "compile_tim": [2094, 2101, 2103], "torch_compile_debug": [2094, 2096], "troubl": [2094, 2095, 2103], "compileprofil": [2094, 2103], "profiler_model": [2094, 2103], "traffic": 2094, "frozen_toy_exampl": 2094, "multiprocessor": 2094, "some_fun": [2094, 2103], "insurmount": [2094, 2103], "woo": [2094, 2103], "framesummari": [2094, 2103], "generic_jump": [2094, 2103], "torch_dynamo_resume_in_toy_example_at_5": [2094, 2103], "torchdynamo_dynamic_shap": 2094, "cv": 2094, "app": 2094, "unnecessarili": 2094, "cold": [2094, 2100], "visibli": 2094, "torchdynamo_repro_level": [2094, 2103], "bisect": [2094, 2103], "torchdynamo_repro_aft": [2094, 2103], "dramat": [2094, 2103], "wrapper_fn": 2094, "my_fn": 2094, "pitfal": 2094, "_indices_from": 2094, "recarrai": 2094, "float128": 2094, "complex256": 2094, "esoter": 2094, "ufunc": 2094, "poly1d": 2094, "__array_wrap__": 2094, "ctype": 2094, "numpy_fn": 2094, "tweak": 2094, "wrap_numpi": 2094, "charg": 2094, "oop": 2094, "costli": 2094, "daunt": 2094, "diagnos": 2094, "pinpoint": 2094, "discern": 2094, "trace_numpi": 2094, "_numpi": 2094, "uncommon": 2094, "finer": 2094, "a_fn": [2094, 2095], "aa_fn": [2094, 2095], "ab_fn": [2094, 2095], "handel": 2095, "unblock": 2095, "nnthi": 2095, "black": 2095, "nnnote": 2095, "screen": [2095, 2101], "is_dynamo_compil": 2095, "b_fn": 2095, "white": 2095, "new_fn": 2096, "famou": 2096, "crunch": 2096, "torchinductor_": 2096, "your_usernam": 2096, "triton_meta": 2096, "i32": 2096, "mutated_arg_nam": 2096, "instance_descriptor": 2096, "divisible_by_16": 2096, "equal_to_1": 2096, "triton_": [2096, 2101], "in_ptr0": 2096, "out_ptr0": 2096, "xnumel": 2096, "xblock": 2096, "tl": 2096, "constexpr": 2096, "xoffset": 2096, "program_id": 2096, "xindex": 2096, "xmask": 2096, "tmp0": 2096, "tmp1": 2096, "tmp2": 2096, "v0": 2096, "opt_model": 2096, "timm": [2096, 2100], "huggingfac": [2096, 2100], "berttoken": 2096, "bertmodel": 2096, "uncas": 2096, "me": 2096, "encoded_input": 2096, "return_tensor": 2096, "trigonometri": 2096, "skim": 2096, "create_model": 2096, "resnext101_32x8d": 2096, "torchinductor_unique_kernel_nam": 2097, "triton_poi_fused_cat_155": 2097, "poi": 2097, "torchinductor_benchmark_kernel": 2097, "har": 2097, "torchinductor_max_autotun": 2097, "mixnet_l": 2097, "timm_model": 2097, "torchinductor_shunt": 2097, "qz": 2097, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 2097, "shunting314": 2097, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 2097, "48efc83b12ec3ead950052e4a0220b10": 2097, "compiled_module_profil": 2097, "browser": [2097, 2101], "zoom": [2097, 2101, 2105], "distort": [2097, 2101], "densenet121": 2097, "69": 2097, "cutlass": 2097, "57": 2097, "ff": 2097, "justifi": 2097, "triton_red_fus": 2097, "__native_batch_norm_legit_functional_16": 2097, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 2097, "_adaptive_avg_pool2d_backward": 2098, "half_to_float": 2098, "no_stat": 2098, "start_step": 2098, "avg_pool2d_backward": 2098, "convolution_backward": 2098, "bias_siz": 2098, "output_mask": 2098, "scalar_mod": 2098, "tensor_mod": 2098, "embedding_dense_backward": 2098, "num_weight": 2098, "max_pool2d_with_indices_backward": 2098, "native_group_norm_backward": 2098, "rstd": 2098, "native_layer_norm_backward": 2098, "tensor_scalar": 2098, "tensor_tensor": 2098, "dim_int": 2098, "dim_intlist": 2098, "broadcast_dimens": 2098, "start_indic": 2098, "limit_indic": 2098, "start_index": 2098, "limit_index": 2098, "outer_length": 2098, "constabl": 2099, "_forward_pre_hook": 2099, "_backward_pre_hook": 2099, "_backward_hook": 2099, "_state_dict_hook": 2099, "load_": 2099, "avoiabl": 2099, "skip_nnmodule_hook_guard": 2099, "pre_backward": 2099, "warn_onc": 2099, "hui": 2100, "nightli": 2100, "night": 2100, "40gb": [2100, 2103], "2ghz": 2100, "torchbench": 2100, "trend": 2100, "droplist": 2100, "with_cudagraph": 2100, "toosl": 2101, "ncu": 2101, "model_c": 2101, "fwd_bwd": 2101, "scroll": 2101, "shortcut": 2101, "compiledfunctionbackward": 2101, "ac2g": 2101, "dropdown": 2101, "525": 2101, "_init_for_cuda_graph": 2101, "warmup_compil": 2101, "fn_c": 2101, "trace_compil": 2101, "meanwhil": 2101, "clue": 2101, "synthet": 2101, "modelwithbreak": 2101, "create_sequenti": 2101, "mod1": 2101, "mod2": 2101, "mod3": 2101, "mod4": 2101, "trace_break": 2101, "culaunchkernel": 2101, "cudalaunchkernel": 2101, "unique_kernel_nam": 2101, "sit": 2102, "replace_add_with_mul": 2102, "insert_relu_after_add": 2102, "new_relu_nod": 2102, "replaceaddwithmul": 2102, "transformed_graph_modul": 2102, "replaceaddwithmulsub": 2102, "mul_r": 2102, "removedetachpass": 2102, "args_map": 2102, "_schema": 2102, "kwarg_onli": 2102, "scalartotensorpass": 2102, "try_coerc": 2102, "replace_pattern": 2102, "replaced_pattern": 2102, "replace_pattern_with_filt": 2102, "replacedpattern": 2102, "passmanag": 2102, "pass_manag": 2102, "pm": 2102, "replace_add_with_div": 2102, "replace_div_with_mul": 2102, "run_checks_after_each_pass": 2102, "suppress_check_failur": 2102, "graph_module_out": 2102, "set_check": 2102, "check_div_target": 2102, "add_check": 2102, "subgraphmatch": 2102, "matcher_util": 2102, "match_output": 2102, "match_placehold": 2102, "remove_overlapping_match": 2102, "ignore_liter": 2102, "largemodel": 2102, "_bia": 2102, "large_model_graph": 2102, "patternmodel": 2102, "_weight_1": 2102, "_bias_1": 2102, "pattern_graph": 2102, "subgraph_match": 2102, "match_result": 2102, "internalmatch": 2102, "placeholder_nod": 2102, "returning_nod": 2102, "capabilitybasedpartition": 2102, "l34": 2102, "operator_support": 2102, "operatorsupportbas": 2102, "allows_single_node_partit": 2102, "non_compute_op": 2102, "_oper": 2102, "allowed_single_node_partition_op": 2102, "ll28c1": 2102, "l28c1": 2102, "is_node_support": 2102, "l150": 2102, "any_chain": 2102, "l164": 2102, "addmuloperatorsupport": 2102, "capability_partition": 2102, "op_support": 2102, "partition_list": 2102, "propose_partit": 2102, "fused_graph_modul": 2102, "fuse_partit": 2102, "lazo": 2103, "torchdynamo_verbos": 2103, "replay_record_en": 2103, "torchdynamo_debug_funct": 2103, "test_assertion_error": 2103, "compiled_test_assertion_error": 2103, "convert_fram": 2103, "mlazo": 2103, "837": 2103, "build_map": 2103, "log_level": 2103, "thousand": 2103, "test_backend_error": 2103, "compiled_test_backend_error": 2103, "decomp_fn": 2103, "810": 2103, "repro_aft": 2103, "minifier_launch": 2103, "base_dir": 2103, "rand_strid": 2103, "0a0": 2103, "gitfddfc44": 2103, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 2103, "2022": 2103, "thu_feb_10_18": 2103, "41_pst_2022": 2103, "v11": 2103, "cuda_11": 2103, "r11": 2103, "30978841_0": 2103, "sxm4": 2103, "compile_fx": 2103, "compile_fx_inn": 2103, "toy_compil": 2103, "debug_util": 2103, "run_fwd_maybe_bwd": 2103, "opt_mod": 2103, "rg": 2103, "test_model": 2103, "debug_dir_root": 2103, "torch_compile_debug_dir": 2103, "run_2023_03_01_08_20_52_143510": 2103, "pid_180167": 2103, "model__0_forward_1": 2103, "aot_model___0_debug": 2103, "fx_graph_read": 2103, "fx_graph_runn": 2103, "fx_graph_transform": 2103, "ir_post_fus": 2103, "ir_pre_fus": 2103, "fx_graph": 2103, "buf1": 2103, "schedulernod": 2103, "computedbuff": 2103, "memorydep": 2103, "unmet_depend": 2103, "buf0": 2103, "met_depend": 2103, "primals_2": 2103, "buf1_loop_bodi": 2103, "var_rang": 2103, "z0": 2103, "index0": 2103, "index1": 2103, "get_index": 2103, "get_index_1": 2103, "load_1": 2103, "get_index_2": 2103, "compiled_fun": 2103, "hinder": 2103, "explanation_verbos": 2103, "out_guard": 2103, "ops_per_graph": 2103, "compiled_toi": 2103, "torchdynamo_extended_debug_guard_ad": 2103, "torchdynamo_extended_debug_create_symbol": 2103, "torchdynamo_extended_debug_cpp": 2103, "as_subclass": 2104, "handle_torch_funct": 2104, "public_api": 2104, "relevant_arg": 2104, "has_torch_function_unari": 2104, "is_tensor_lik": 2104, "notatensor": 2104, "tensorlik": 2104, "is_tensor_method_or_properti": 2104, "__get__": 2104, "__module__": 2104, "wrap_torch_funct": 2104, "drag": 2105, "interactiv": 2105, "memory_viz": 2105, "run_your_cod": 2105, "my_snapshot": 2105, "javascript": 2105, "upload": 2105, "pan": 2105, "mous": 2105, "slider": 2105, "b7f064c000000_0": 2105, "7f064c000000": 2105, "max_entri": 2105, "_memory_viz": 2105, "2u": 2105, "50n": 2105, "currenli": 2105, "typeddict": 2105, "device_trac": 2105, "traceentri": 2105, "total_s": 2105, "segment_typ": 2105, "allocated_s": 2105, "active_s": 2105, "active_awaiting_fre": 2105, "requested_s": 2105, "active_alloc": 2105, "took": 2105, "free_request": 2105, "free_complet": 2105, "segment_alloc": 2105, "segment_fre": 2105, "coorel": 2105, "device_fre": 2105, "dump_snapshot": 2105, "interplai": 2106, "smallest_norm": 2107, "subnorm": 2107, "denormal_numb": 2107, "tailor": 2109}, "objects": {"": [[2081, 0, 0, "-", "torch"], [2006, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[2074, 1, 1, "", "BFloat16Storage"], [2074, 1, 1, "", "BoolStorage"], [2074, 1, 1, "", "ByteStorage"], [2074, 1, 1, "", "CharStorage"], [2074, 1, 1, "", "ComplexDoubleStorage"], [2074, 1, 1, "", "ComplexFloatStorage"], [2074, 1, 1, "", "DoubleStorage"], [2074, 1, 1, "", "FloatStorage"], [87, 1, 1, "", "Generator"], [2074, 1, 1, "", "HalfStorage"], [2074, 1, 1, "", "IntStorage"], [2074, 1, 1, "", "LongStorage"], [2074, 1, 1, "", "QInt32Storage"], [2074, 1, 1, "", "QInt8Storage"], [2074, 1, 1, "", "QUInt2x4Storage"], [2074, 1, 1, "", "QUInt4x2Storage"], [2074, 1, 1, "", "QUInt8Storage"], [2074, 1, 1, "", "ShortStorage"], [2071, 1, 1, "", "Size"], [2081, 1, 1, "", "SymBool"], [2081, 1, 1, "", "SymFloat"], [2081, 1, 1, "", "SymInt"], [2081, 1, 1, "", "Tag"], [2078, 1, 1, "", "Tensor"], [2074, 1, 1, "", "TypedStorage"], [2074, 1, 1, "", "UntypedStorage"], [13, 0, 0, "-", "__config__"], [59, 0, 0, "-", "__future__"], [623, 5, 1, "", "_assert"], [624, 5, 1, "", "_foreach_abs"], [625, 5, 1, "", "_foreach_abs_"], [626, 5, 1, "", "_foreach_acos"], [627, 5, 1, "", "_foreach_acos_"], [628, 5, 1, "", "_foreach_asin"], [629, 5, 1, "", "_foreach_asin_"], [630, 5, 1, "", "_foreach_atan"], [631, 5, 1, "", "_foreach_atan_"], [632, 5, 1, "", "_foreach_ceil"], [633, 5, 1, "", "_foreach_ceil_"], [634, 5, 1, "", "_foreach_cos"], [635, 5, 1, "", "_foreach_cos_"], [636, 5, 1, "", "_foreach_cosh"], [637, 5, 1, "", "_foreach_cosh_"], [638, 5, 1, "", "_foreach_erf"], [639, 5, 1, "", "_foreach_erf_"], [640, 5, 1, "", "_foreach_erfc"], [641, 5, 1, "", "_foreach_erfc_"], [642, 5, 1, "", "_foreach_exp"], [643, 5, 1, "", "_foreach_exp_"], [644, 5, 1, "", "_foreach_expm1"], [645, 5, 1, "", "_foreach_expm1_"], [646, 5, 1, "", "_foreach_floor"], [647, 5, 1, "", "_foreach_floor_"], [648, 5, 1, "", "_foreach_frac"], [649, 5, 1, "", "_foreach_frac_"], [650, 5, 1, "", "_foreach_lgamma"], [651, 5, 1, "", "_foreach_lgamma_"], [652, 5, 1, "", "_foreach_log"], [653, 5, 1, "", "_foreach_log10"], [654, 5, 1, "", "_foreach_log10_"], [655, 5, 1, "", "_foreach_log1p"], [656, 5, 1, "", "_foreach_log1p_"], [657, 5, 1, "", "_foreach_log2"], [658, 5, 1, "", "_foreach_log2_"], [659, 5, 1, "", "_foreach_log_"], [660, 5, 1, "", "_foreach_neg"], [661, 5, 1, "", "_foreach_neg_"], [662, 5, 1, "", "_foreach_reciprocal"], [663, 5, 1, "", "_foreach_reciprocal_"], [664, 5, 1, "", "_foreach_round"], [665, 5, 1, "", "_foreach_round_"], [666, 5, 1, "", "_foreach_sigmoid"], [667, 5, 1, "", "_foreach_sigmoid_"], [668, 5, 1, "", "_foreach_sin"], [669, 5, 1, "", "_foreach_sin_"], [670, 5, 1, "", "_foreach_sinh"], [671, 5, 1, "", "_foreach_sinh_"], [672, 5, 1, "", "_foreach_sqrt"], [673, 5, 1, "", "_foreach_sqrt_"], [674, 5, 1, "", "_foreach_tan"], [675, 5, 1, "", "_foreach_tan_"], [676, 5, 1, "", "_foreach_trunc"], [677, 5, 1, "", "_foreach_trunc_"], [678, 5, 1, "", "_foreach_zero_"], [2015, 0, 0, "-", "_logging"], [680, 5, 1, "", "abs"], [681, 5, 1, "", "absolute"], [682, 5, 1, "", "acos"], [683, 5, 1, "", "acosh"], [684, 5, 1, "", "add"], [685, 5, 1, "", "addbmm"], [686, 5, 1, "", "addcdiv"], [687, 5, 1, "", "addcmul"], [688, 5, 1, "", "addmm"], [689, 5, 1, "", "addmv"], [690, 5, 1, "", "addr"], [691, 5, 1, "", "adjoint"], [692, 5, 1, "", "all"], [693, 5, 1, "", "allclose"], [694, 5, 1, "", "amax"], [695, 5, 1, "", "amin"], [696, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [697, 5, 1, "", "angle"], [698, 5, 1, "", "any"], [2062, 0, 0, "-", "ao"], [865, 5, 1, "", "arange"], [866, 5, 1, "", "arccos"], [867, 5, 1, "", "arccosh"], [868, 5, 1, "", "arcsin"], [869, 5, 1, "", "arcsinh"], [870, 5, 1, "", "arctan"], [871, 5, 1, "", "arctan2"], [872, 5, 1, "", "arctanh"], [873, 5, 1, "", "are_deterministic_algorithms_enabled"], [874, 5, 1, "", "argmax"], [875, 5, 1, "", "argmin"], [876, 5, 1, "", "argsort"], [877, 5, 1, "", "argwhere"], [878, 5, 1, "", "as_strided"], [879, 5, 1, "", "as_tensor"], [880, 5, 1, "", "asarray"], [881, 5, 1, "", "asin"], [882, 5, 1, "", "asinh"], [883, 5, 1, "", "atan"], [884, 5, 1, "", "atan2"], [885, 5, 1, "", "atanh"], [886, 5, 1, "", "atleast_1d"], [887, 5, 1, "", "atleast_2d"], [888, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [940, 5, 1, "", "baddbmm"], [941, 5, 1, "", "bartlett_window"], [942, 5, 1, "", "bernoulli"], [943, 5, 1, "", "bincount"], [944, 5, 1, "", "bitwise_and"], [945, 5, 1, "", "bitwise_left_shift"], [946, 5, 1, "", "bitwise_not"], [947, 5, 1, "", "bitwise_or"], [948, 5, 1, "", "bitwise_right_shift"], [949, 5, 1, "", "bitwise_xor"], [950, 5, 1, "", "blackman_window"], [951, 5, 1, "", "block_diag"], [952, 5, 1, "", "bmm"], [953, 5, 1, "", "broadcast_shapes"], [954, 5, 1, "", "broadcast_tensors"], [955, 5, 1, "", "broadcast_to"], [956, 5, 1, "", "bucketize"], [957, 5, 1, "", "can_cast"], [958, 5, 1, "", "cartesian_prod"], [959, 5, 1, "", "cat"], [960, 5, 1, "", "cdist"], [961, 5, 1, "", "ceil"], [962, 5, 1, "", "chain_matmul"], [963, 5, 1, "", "cholesky"], [964, 5, 1, "", "cholesky_inverse"], [965, 5, 1, "", "cholesky_solve"], [966, 5, 1, "", "chunk"], [967, 5, 1, "", "clamp"], [968, 5, 1, "", "clip"], [969, 5, 1, "", "clone"], [970, 5, 1, "", "column_stack"], [971, 5, 1, "", "combinations"], [972, 5, 1, "", "compile"], [973, 5, 1, "", "compiled_with_cxx11_abi"], [2086, 0, 0, "-", "compiler"], [983, 5, 1, "", "complex"], [984, 5, 1, "", "concat"], [985, 5, 1, "", "concatenate"], [986, 5, 1, "", "cond"], [987, 5, 1, "", "conj"], [988, 5, 1, "", "conj_physical"], [2081, 0, 0, "-", "contrib"], [989, 5, 1, "", "copysign"], [990, 5, 1, "", "corrcoef"], [991, 5, 1, "", "cos"], [992, 5, 1, "", "cosh"], [993, 5, 1, "", "count_nonzero"], [994, 5, 1, "", "cov"], [16, 0, 0, "-", "cpu"], [1004, 5, 1, "", "cross"], [17, 0, 0, "-", "cuda"], [1084, 5, 1, "", "cummax"], [1085, 5, 1, "", "cummin"], [1086, 5, 1, "", "cumprod"], [1087, 5, 1, "", "cumsum"], [1088, 5, 1, "", "cumulative_trapezoid"], [1089, 5, 1, "", "deg2rad"], [1090, 5, 1, "", "dequantize"], [1091, 5, 1, "", "det"], [2075, 1, 1, "", "device"], [1092, 5, 1, "", "diag"], [1093, 5, 1, "", "diag_embed"], [1094, 5, 1, "", "diagflat"], [1095, 5, 1, "", "diagonal"], [1096, 5, 1, "", "diagonal_scatter"], [1097, 5, 1, "", "diff"], [1098, 5, 1, "", "digamma"], [1099, 5, 1, "", "dist"], [27, 0, 0, "-", "distributed"], [33, 0, 0, "-", "distributions"], [1100, 5, 1, "", "div"], [1101, 5, 1, "", "divide"], [1102, 5, 1, "", "dot"], [1103, 5, 1, "", "dsplit"], [1104, 5, 1, "", "dstack"], [2075, 1, 1, "", "dtype"], [1105, 5, 1, "", "einsum"], [1106, 5, 1, "", "empty"], [1107, 5, 1, "", "empty_like"], [1108, 5, 1, "", "empty_strided"], [1109, 1, 1, "", "enable_grad"], [1110, 5, 1, "", "eq"], [1111, 5, 1, "", "equal"], [1112, 5, 1, "", "erf"], [1113, 5, 1, "", "erfc"], [1114, 5, 1, "", "erfinv"], [1115, 5, 1, "", "exp"], [1116, 5, 1, "", "exp2"], [1117, 5, 1, "", "expm1"], [49, 0, 0, "-", "export"], [1118, 5, 1, "", "eye"], [1119, 5, 1, "", "fake_quantize_per_channel_affine"], [1120, 5, 1, "", "fake_quantize_per_tensor_affine"], [51, 0, 0, "-", "fft"], [1143, 5, 1, "", "fix"], [1144, 5, 1, "", "flatten"], [1145, 5, 1, "", "flip"], [1146, 5, 1, "", "fliplr"], [1147, 5, 1, "", "flipud"], [1148, 5, 1, "", "float_power"], [1149, 5, 1, "", "floor"], [1150, 5, 1, "", "floor_divide"], [1151, 5, 1, "", "fmax"], [1152, 5, 1, "", "fmin"], [1153, 5, 1, "", "fmod"], [1154, 5, 1, "", "frac"], [1155, 5, 1, "", "frexp"], [1156, 5, 1, "", "from_dlpack"], [1157, 5, 1, "", "from_file"], [1158, 5, 1, "", "from_numpy"], [1159, 5, 1, "", "frombuffer"], [1160, 5, 1, "", "full"], [1161, 5, 1, "", "full_like"], [54, 0, 0, "-", "func"], [2081, 0, 0, "-", "functional"], [60, 0, 0, "-", "futures"], [61, 0, 0, "-", "fx"], [1206, 5, 1, "", "gather"], [1207, 5, 1, "", "gcd"], [1208, 5, 1, "", "ge"], [1209, 5, 1, "", "geqrf"], [1210, 5, 1, "", "ger"], [1211, 5, 1, "", "get_default_device"], [1212, 5, 1, "", "get_default_dtype"], [1213, 5, 1, "", "get_deterministic_debug_mode"], [1214, 5, 1, "", "get_device_module"], [1215, 5, 1, "", "get_float32_matmul_precision"], [1216, 5, 1, "", "get_num_interop_threads"], [1217, 5, 1, "", "get_num_threads"], [1218, 5, 1, "", "get_rng_state"], [1219, 5, 1, "", "gradient"], [1220, 5, 1, "", "greater"], [1221, 5, 1, "", "greater_equal"], [1222, 5, 1, "", "gt"], [1223, 5, 1, "", "hamming_window"], [1224, 5, 1, "", "hann_window"], [1225, 5, 1, "", "heaviside"], [1226, 5, 1, "", "histc"], [1227, 5, 1, "", "histogram"], [1228, 5, 1, "", "histogramdd"], [1229, 5, 1, "", "hsplit"], [1230, 5, 1, "", "hspmm"], [1231, 5, 1, "", "hstack"], [2004, 0, 0, "-", "hub"], [1232, 5, 1, "", "hypot"], [1233, 5, 1, "", "i0"], [1234, 5, 1, "", "igamma"], [1235, 5, 1, "", "igammac"], [1236, 5, 1, "", "imag"], [1237, 5, 1, "", "index_add"], [1238, 5, 1, "", "index_copy"], [1239, 5, 1, "", "index_reduce"], [1240, 5, 1, "", "index_select"], [1241, 5, 1, "", "initial_seed"], [1242, 5, 1, "", "inner"], [1243, 5, 1, "", "inverse"], [1244, 5, 1, "", "is_complex"], [1245, 5, 1, "", "is_conj"], [1246, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1247, 5, 1, "", "is_floating_point"], [1248, 5, 1, "", "is_grad_enabled"], [1249, 5, 1, "", "is_inference_mode_enabled"], [1250, 5, 1, "", "is_nonzero"], [1251, 5, 1, "", "is_storage"], [1252, 5, 1, "", "is_tensor"], [1253, 5, 1, "", "is_warn_always_enabled"], [1254, 5, 1, "", "isclose"], [1255, 5, 1, "", "isfinite"], [1256, 5, 1, "", "isin"], [1257, 5, 1, "", "isinf"], [1258, 5, 1, "", "isnan"], [1259, 5, 1, "", "isneginf"], [1260, 5, 1, "", "isposinf"], [1261, 5, 1, "", "isreal"], [1262, 5, 1, "", "istft"], [2006, 0, 0, "-", "jit"], [1285, 5, 1, "", "kaiser_window"], [1286, 5, 1, "", "kron"], [1287, 5, 1, "", "kthvalue"], [2075, 1, 1, "", "layout"], [1288, 5, 1, "", "lcm"], [1289, 5, 1, "", "ldexp"], [1290, 5, 1, "", "le"], [1291, 5, 1, "", "lerp"], [1292, 5, 1, "", "less"], [1293, 5, 1, "", "less_equal"], [1294, 5, 1, "", "lgamma"], [2013, 0, 0, "-", "library"], [2014, 0, 0, "-", "linalg"], [1336, 5, 1, "", "linspace"], [1337, 5, 1, "", "load"], [1338, 5, 1, "", "lobpcg"], [1339, 5, 1, "", "log"], [1340, 5, 1, "", "log10"], [1341, 5, 1, "", "log1p"], [1342, 5, 1, "", "log2"], [1343, 5, 1, "", "logaddexp"], [1344, 5, 1, "", "logaddexp2"], [1345, 5, 1, "", "logcumsumexp"], [1346, 5, 1, "", "logdet"], [1347, 5, 1, "", "logical_and"], [1348, 5, 1, "", "logical_not"], [1349, 5, 1, "", "logical_or"], [1350, 5, 1, "", "logical_xor"], [1351, 5, 1, "", "logit"], [1352, 5, 1, "", "logspace"], [1353, 5, 1, "", "logsumexp"], [1354, 5, 1, "", "lt"], [1355, 5, 1, "", "lu"], [1356, 5, 1, "", "lu_solve"], [1357, 5, 1, "", "lu_unpack"], [1358, 5, 1, "", "manual_seed"], [2016, 0, 0, "-", "masked"], [1359, 5, 1, "", "masked_select"], [1360, 5, 1, "", "matmul"], [1361, 5, 1, "", "matrix_exp"], [1362, 5, 1, "", "matrix_power"], [1363, 5, 1, "", "max"], [1364, 5, 1, "", "maximum"], [1365, 5, 1, "", "mean"], [1366, 5, 1, "", "median"], [2075, 1, 1, "", "memory_format"], [1367, 5, 1, "", "meshgrid"], [1368, 5, 1, "", "min"], [1369, 5, 1, "", "minimum"], [1370, 5, 1, "", "mm"], [1371, 5, 1, "", "mode"], [2021, 0, 0, "-", "monitor"], [1372, 5, 1, "", "moveaxis"], [1373, 5, 1, "", "movedim"], [2022, 0, 0, "-", "mps"], [1388, 5, 1, "", "msort"], [2023, 0, 0, "-", "mtia"], [1404, 5, 1, "", "mul"], [1405, 5, 1, "", "multinomial"], [1406, 5, 1, "", "multiply"], [2024, 0, 0, "-", "multiprocessing"], [1407, 5, 1, "", "mv"], [1408, 5, 1, "", "mvlgamma"], [1409, 5, 1, "", "nan_to_num"], [1410, 5, 1, "", "nanmean"], [1411, 5, 1, "", "nanmedian"], [1412, 5, 1, "", "nanquantile"], [1413, 5, 1, "", "nansum"], [1414, 5, 1, "", "narrow"], [1415, 5, 1, "", "narrow_copy"], [1416, 5, 1, "", "ne"], [1417, 5, 1, "", "neg"], [1418, 5, 1, "", "negative"], [2027, 0, 0, "-", "nested"], [1419, 5, 1, "", "nextafter"], [2028, 0, 0, "-", "nn"], [1762, 1, 1, "", "no_grad"], [1763, 5, 1, "", "nonzero"], [1764, 5, 1, "", "norm"], [1765, 5, 1, "", "normal"], [1766, 5, 1, "", "not_equal"], [1767, 5, 1, "", "numel"], [1768, 5, 1, "", "ones"], [1769, 5, 1, "", "ones_like"], [2056, 0, 0, "-", "onnx"], [2058, 0, 0, "-", "optim"], [1806, 5, 1, "", "orgqr"], [1807, 5, 1, "", "ormqr"], [1808, 5, 1, "", "outer"], [2104, 0, 0, "-", "overrides"], [2059, 0, 0, "-", "package"], [1809, 5, 1, "", "pca_lowrank"], [1810, 5, 1, "", "permute"], [1811, 5, 1, "", "pinverse"], [1812, 5, 1, "", "poisson"], [1813, 5, 1, "", "polar"], [1814, 5, 1, "", "polygamma"], [1815, 5, 1, "", "positive"], [1816, 5, 1, "", "pow"], [1817, 5, 1, "", "prod"], [2061, 0, 0, "-", "profiler"], [1818, 5, 1, "", "promote_types"], [1819, 5, 1, "", "qr"], [1820, 5, 1, "", "quantile"], [2065, 0, 0, "-", "quantization"], [1821, 5, 1, "", "quantize_per_channel"], [1822, 5, 1, "", "quantize_per_tensor"], [1823, 5, 1, "", "quantized_batch_norm"], [1824, 5, 1, "", "quantized_max_pool1d"], [1825, 5, 1, "", "quantized_max_pool2d"], [2081, 0, 0, "-", "quasirandom"], [1827, 5, 1, "", "rad2deg"], [1828, 5, 1, "", "rand"], [1829, 5, 1, "", "rand_like"], [1830, 5, 1, "", "randint"], [1831, 5, 1, "", "randint_like"], [1832, 5, 1, "", "randn"], [1833, 5, 1, "", "randn_like"], [2066, 0, 0, "-", "random"], [1834, 5, 1, "", "randperm"], [1835, 5, 1, "", "range"], [1836, 5, 1, "", "ravel"], [1837, 5, 1, "", "real"], [1838, 5, 1, "", "reciprocal"], [1839, 5, 1, "", "remainder"], [1840, 5, 1, "", "renorm"], [1841, 5, 1, "", "repeat_interleave"], [1842, 5, 1, "", "reshape"], [1843, 5, 1, "", "resolve_conj"], [1844, 5, 1, "", "resolve_neg"], [1845, 5, 1, "", "result_type"], [2081, 0, 0, "-", "return_types"], [1846, 5, 1, "", "roll"], [1847, 5, 1, "", "rot90"], [1848, 5, 1, "", "round"], [1849, 5, 1, "", "row_stack"], [1850, 5, 1, "", "rsqrt"], [1851, 5, 1, "", "save"], [1852, 5, 1, "", "scatter"], [1853, 5, 1, "", "scatter_add"], [1854, 5, 1, "", "scatter_reduce"], [1855, 5, 1, "", "searchsorted"], [1856, 5, 1, "", "seed"], [1857, 5, 1, "", "select"], [1858, 5, 1, "", "select_scatter"], [2081, 0, 0, "-", "serialization"], [1859, 5, 1, "", "set_default_device"], [1860, 5, 1, "", "set_default_dtype"], [1861, 5, 1, "", "set_default_tensor_type"], [1862, 5, 1, "", "set_deterministic_debug_mode"], [1863, 5, 1, "", "set_float32_matmul_precision"], [1864, 5, 1, "", "set_flush_denormal"], [1865, 5, 1, "", "set_num_interop_threads"], [1866, 5, 1, "", "set_num_threads"], [1867, 5, 1, "", "set_printoptions"], [1868, 5, 1, "", "set_rng_state"], [1869, 5, 1, "", "set_warn_always"], [1870, 5, 1, "", "sgn"], [1871, 5, 1, "", "sigmoid"], [1872, 5, 1, "", "sign"], [2070, 0, 0, "-", "signal"], [1884, 5, 1, "", "signbit"], [1885, 5, 1, "", "sin"], [1886, 5, 1, "", "sinc"], [1887, 5, 1, "", "sinh"], [1888, 5, 1, "", "slice_scatter"], [1889, 5, 1, "", "slogdet"], [1890, 5, 1, "", "smm"], [1891, 5, 1, "", "softmax"], [1892, 5, 1, "", "sort"], [2072, 0, 0, "-", "sparse"], [1902, 5, 1, "", "sparse_bsc_tensor"], [1903, 5, 1, "", "sparse_bsr_tensor"], [1904, 5, 1, "", "sparse_compressed_tensor"], [1905, 5, 1, "", "sparse_coo_tensor"], [1906, 5, 1, "", "sparse_csc_tensor"], [1907, 5, 1, "", "sparse_csr_tensor"], [2073, 0, 0, "-", "special"], [1908, 5, 1, "", "split"], [1909, 5, 1, "", "sqrt"], [1910, 5, 1, "", "square"], [1911, 5, 1, "", "squeeze"], [1912, 5, 1, "", "sspaddmm"], [1913, 5, 1, "", "stack"], [1914, 5, 1, "", "std"], [1915, 5, 1, "", "std_mean"], [1916, 5, 1, "", "stft"], [2081, 0, 0, "-", "storage"], [1917, 5, 1, "", "sub"], [1918, 5, 1, "", "subtract"], [1919, 5, 1, "", "sum"], [1920, 5, 1, "", "svd"], [1921, 5, 1, "", "svd_lowrank"], [1922, 5, 1, "", "swapaxes"], [1923, 5, 1, "", "swapdims"], [1924, 5, 1, "", "sym_float"], [1925, 5, 1, "", "sym_int"], [1926, 5, 1, "", "sym_ite"], [1927, 5, 1, "", "sym_max"], [1928, 5, 1, "", "sym_min"], [1929, 5, 1, "", "sym_not"], [1930, 5, 1, "", "t"], [1931, 5, 1, "", "take"], [1932, 5, 1, "", "take_along_dim"], [1933, 5, 1, "", "tan"], [1934, 5, 1, "", "tanh"], [1935, 5, 1, "", "tensor"], [1936, 5, 1, "", "tensor_split"], [1937, 5, 1, "", "tensordot"], [2079, 0, 0, "-", "testing"], [1938, 5, 1, "", "tile"], [1939, 5, 1, "", "topk"], [2081, 0, 0, "-", "torch_version"], [1940, 5, 1, "", "trace"], [1941, 5, 1, "", "transpose"], [1942, 5, 1, "", "trapezoid"], [1943, 5, 1, "", "trapz"], [1944, 5, 1, "", "triangular_solve"], [1945, 5, 1, "", "tril"], [1946, 5, 1, "", "tril_indices"], [1947, 5, 1, "", "triu"], [1948, 5, 1, "", "triu_indices"], [1949, 5, 1, "", "true_divide"], [1950, 5, 1, "", "trunc"], [2081, 0, 0, "-", "types"], [1951, 5, 1, "", "unbind"], [1952, 5, 1, "", "unflatten"], [1953, 5, 1, "", "unique"], [1954, 5, 1, "", "unique_consecutive"], [1955, 5, 1, "", "unravel_index"], [1956, 5, 1, "", "unsqueeze"], [1957, 5, 1, "", "use_deterministic_algorithms"], [2108, 0, 0, "-", "utils"], [1963, 5, 1, "", "vander"], [1964, 5, 1, "", "var"], [1965, 5, 1, "", "var_mean"], [1966, 5, 1, "", "vdot"], [2081, 0, 0, "-", "version"], [1967, 5, 1, "", "view_as_complex"], [1968, 5, 1, "", "view_as_real"], [1969, 5, 1, "", "vmap"], [1970, 5, 1, "", "vsplit"], [1971, 5, 1, "", "vstack"], [1972, 5, 1, "", "where"], [1973, 5, 1, "", "xlogy"], [2109, 0, 0, "-", "xpu"], [2002, 5, 1, "", "zeros"], [2003, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[2074, 2, 1, "", "dtype"]], "torch.BoolStorage": [[2074, 2, 1, "", "dtype"]], "torch.ByteStorage": [[2074, 2, 1, "", "dtype"]], "torch.CharStorage": [[2074, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[2074, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[2074, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[2074, 2, 1, "", "dtype"]], "torch.FloatStorage": [[2074, 2, 1, "", "dtype"]], "torch.Generator": [[87, 3, 1, "", "clone_state"], [87, 2, 1, "", "device"], [87, 3, 1, "", "get_state"], [87, 3, 1, "", "graphsafe_get_state"], [87, 3, 1, "", "graphsafe_set_state"], [87, 3, 1, "", "initial_seed"], [87, 3, 1, "", "manual_seed"], [87, 3, 1, "", "seed"], [87, 3, 1, "", "set_state"]], "torch.HalfStorage": [[2074, 2, 1, "", "dtype"]], "torch.IntStorage": [[2074, 2, 1, "", "dtype"]], "torch.LongStorage": [[2074, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[2074, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[2074, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[2074, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[2074, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[2074, 2, 1, "", "dtype"]], "torch.ShortStorage": [[2074, 2, 1, "", "dtype"]], "torch.Size": [[2071, 3, 1, "", "count"], [2071, 3, 1, "", "index"], [2071, 3, 1, "", "numel"]], "torch.SymFloat": [[2081, 3, 1, "", "is_integer"]], "torch.Tag": [[2081, 4, 1, "", "name"]], "torch.Tensor": [[2078, 2, 1, "", "H"], [2078, 2, 1, "", "T"], [88, 3, 1, "", "abs"], [89, 3, 1, "", "abs_"], [90, 3, 1, "", "absolute"], [91, 3, 1, "", "absolute_"], [92, 3, 1, "", "acos"], [93, 3, 1, "", "acos_"], [94, 3, 1, "", "acosh"], [95, 3, 1, "", "acosh_"], [96, 3, 1, "", "add"], [97, 3, 1, "", "add_"], [98, 3, 1, "", "addbmm"], [99, 3, 1, "", "addbmm_"], [100, 3, 1, "", "addcdiv"], [101, 3, 1, "", "addcdiv_"], [102, 3, 1, "", "addcmul"], [103, 3, 1, "", "addcmul_"], [104, 3, 1, "", "addmm"], [105, 3, 1, "", "addmm_"], [106, 3, 1, "", "addmv"], [107, 3, 1, "", "addmv_"], [108, 3, 1, "", "addr"], [109, 3, 1, "", "addr_"], [110, 3, 1, "", "adjoint"], [2026, 3, 1, "", "align_as"], [2026, 3, 1, "", "align_to"], [111, 3, 1, "", "all"], [112, 3, 1, "", "allclose"], [113, 3, 1, "", "amax"], [114, 3, 1, "", "amin"], [115, 3, 1, "", "aminmax"], [116, 3, 1, "", "angle"], [117, 3, 1, "", "any"], [118, 3, 1, "", "apply_"], [119, 3, 1, "", "arccos"], [120, 3, 1, "", "arccos_"], [121, 3, 1, "", "arccosh"], [122, 3, 1, "", "arccosh_"], [123, 3, 1, "", "arcsin"], [124, 3, 1, "", "arcsin_"], [125, 3, 1, "", "arcsinh"], [126, 3, 1, "", "arcsinh_"], [127, 3, 1, "", "arctan"], [128, 3, 1, "", "arctan2"], [129, 3, 1, "", "arctan2_"], [130, 3, 1, "", "arctan_"], [131, 3, 1, "", "arctanh"], [132, 3, 1, "", "arctanh_"], [133, 3, 1, "", "argmax"], [134, 3, 1, "", "argmin"], [135, 3, 1, "", "argsort"], [136, 3, 1, "", "argwhere"], [137, 3, 1, "", "as_strided"], [138, 3, 1, "", "as_subclass"], [139, 3, 1, "", "asin"], [140, 3, 1, "", "asin_"], [141, 3, 1, "", "asinh"], [142, 3, 1, "", "asinh_"], [143, 3, 1, "", "atan"], [144, 3, 1, "", "atan2"], [145, 3, 1, "", "atan2_"], [146, 3, 1, "", "atan_"], [147, 3, 1, "", "atanh"], [148, 3, 1, "", "atanh_"], [149, 3, 1, "", "backward"], [150, 3, 1, "", "baddbmm"], [151, 3, 1, "", "baddbmm_"], [152, 3, 1, "", "bernoulli"], [153, 3, 1, "", "bernoulli_"], [154, 3, 1, "", "bfloat16"], [155, 3, 1, "", "bincount"], [156, 3, 1, "", "bitwise_and"], [157, 3, 1, "", "bitwise_and_"], [158, 3, 1, "", "bitwise_left_shift"], [159, 3, 1, "", "bitwise_left_shift_"], [160, 3, 1, "", "bitwise_not"], [161, 3, 1, "", "bitwise_not_"], [162, 3, 1, "", "bitwise_or"], [163, 3, 1, "", "bitwise_or_"], [164, 3, 1, "", "bitwise_right_shift"], [165, 3, 1, "", "bitwise_right_shift_"], [166, 3, 1, "", "bitwise_xor"], [167, 3, 1, "", "bitwise_xor_"], [168, 3, 1, "", "bmm"], [169, 3, 1, "", "bool"], [170, 3, 1, "", "broadcast_to"], [171, 3, 1, "", "byte"], [172, 3, 1, "", "cauchy_"], [173, 3, 1, "", "ccol_indices"], [174, 3, 1, "", "cdouble"], [175, 3, 1, "", "ceil"], [176, 3, 1, "", "ceil_"], [177, 3, 1, "", "cfloat"], [178, 3, 1, "", "chalf"], [179, 3, 1, "", "char"], [180, 3, 1, "", "cholesky"], [181, 3, 1, "", "cholesky_inverse"], [182, 3, 1, "", "cholesky_solve"], [183, 3, 1, "", "chunk"], [184, 3, 1, "", "clamp"], [185, 3, 1, "", "clamp_"], [186, 3, 1, "", "clip"], [187, 3, 1, "", "clip_"], [188, 3, 1, "", "clone"], [189, 3, 1, "", "coalesce"], [190, 3, 1, "", "col_indices"], [191, 3, 1, "", "conj"], [192, 3, 1, "", "conj_physical"], [193, 3, 1, "", "conj_physical_"], [194, 3, 1, "", "contiguous"], [195, 3, 1, "", "copy_"], [196, 3, 1, "", "copysign"], [197, 3, 1, "", "copysign_"], [198, 3, 1, "", "corrcoef"], [199, 3, 1, "", "cos"], [200, 3, 1, "", "cos_"], [201, 3, 1, "", "cosh"], [202, 3, 1, "", "cosh_"], [203, 3, 1, "", "count_nonzero"], [204, 3, 1, "", "cov"], [205, 3, 1, "", "cpu"], [206, 3, 1, "", "cross"], [207, 3, 1, "", "crow_indices"], [208, 3, 1, "", "cuda"], [209, 3, 1, "", "cummax"], [210, 3, 1, "", "cummin"], [211, 3, 1, "", "cumprod"], [212, 3, 1, "", "cumprod_"], [213, 3, 1, "", "cumsum"], [214, 3, 1, "", "cumsum_"], [215, 3, 1, "", "data_ptr"], [216, 3, 1, "", "deg2rad"], [217, 3, 1, "", "dense_dim"], [218, 3, 1, "", "dequantize"], [219, 3, 1, "", "det"], [220, 3, 1, "", "detach"], [221, 3, 1, "", "detach_"], [222, 2, 1, "", "device"], [223, 3, 1, "", "diag"], [224, 3, 1, "", "diag_embed"], [225, 3, 1, "", "diagflat"], [226, 3, 1, "", "diagonal"], [227, 3, 1, "", "diagonal_scatter"], [228, 3, 1, "", "diff"], [229, 3, 1, "", "digamma"], [230, 3, 1, "", "digamma_"], [231, 3, 1, "", "dim"], [232, 3, 1, "", "dim_order"], [233, 3, 1, "", "dist"], [234, 3, 1, "", "div"], [235, 3, 1, "", "div_"], [236, 3, 1, "", "divide"], [237, 3, 1, "", "divide_"], [238, 3, 1, "", "dot"], [239, 3, 1, "", "double"], [240, 3, 1, "", "dsplit"], [241, 3, 1, "", "element_size"], [242, 3, 1, "", "eq"], [243, 3, 1, "", "eq_"], [244, 3, 1, "", "equal"], [245, 3, 1, "", "erf"], [246, 3, 1, "", "erf_"], [247, 3, 1, "", "erfc"], [248, 3, 1, "", "erfc_"], [249, 3, 1, "", "erfinv"], [250, 3, 1, "", "erfinv_"], [251, 3, 1, "", "exp"], [252, 3, 1, "", "exp_"], [253, 3, 1, "", "expand"], [254, 3, 1, "", "expand_as"], [255, 3, 1, "", "expm1"], [256, 3, 1, "", "expm1_"], [257, 3, 1, "", "exponential_"], [258, 3, 1, "", "fill_"], [259, 3, 1, "", "fill_diagonal_"], [260, 3, 1, "", "fix"], [261, 3, 1, "", "fix_"], [262, 3, 1, "", "flatten"], [263, 3, 1, "", "flip"], [264, 3, 1, "", "fliplr"], [265, 3, 1, "", "flipud"], [266, 3, 1, "", "float"], [267, 3, 1, "", "float_power"], [268, 3, 1, "", "float_power_"], [269, 3, 1, "", "floor"], [270, 3, 1, "", "floor_"], [271, 3, 1, "", "floor_divide"], [272, 3, 1, "", "floor_divide_"], [273, 3, 1, "", "fmax"], [274, 3, 1, "", "fmin"], [275, 3, 1, "", "fmod"], [276, 3, 1, "", "fmod_"], [277, 3, 1, "", "frac"], [278, 3, 1, "", "frac_"], [279, 3, 1, "", "frexp"], [280, 3, 1, "", "gather"], [281, 3, 1, "", "gcd"], [282, 3, 1, "", "gcd_"], [283, 3, 1, "", "ge"], [284, 3, 1, "", "ge_"], [285, 3, 1, "", "geometric_"], [286, 3, 1, "", "geqrf"], [287, 3, 1, "", "ger"], [288, 3, 1, "", "get_device"], [289, 2, 1, "", "grad"], [290, 3, 1, "", "greater"], [291, 3, 1, "", "greater_"], [292, 3, 1, "", "greater_equal"], [293, 3, 1, "", "greater_equal_"], [294, 3, 1, "", "gt"], [295, 3, 1, "", "gt_"], [296, 3, 1, "", "half"], [297, 3, 1, "", "hardshrink"], [298, 3, 1, "", "heaviside"], [299, 3, 1, "", "histc"], [300, 3, 1, "", "histogram"], [301, 3, 1, "", "hsplit"], [302, 3, 1, "", "hypot"], [303, 3, 1, "", "hypot_"], [304, 3, 1, "", "i0"], [305, 3, 1, "", "i0_"], [306, 3, 1, "", "igamma"], [307, 3, 1, "", "igamma_"], [308, 3, 1, "", "igammac"], [309, 3, 1, "", "igammac_"], [310, 2, 1, "", "imag"], [311, 3, 1, "", "index_add"], [312, 3, 1, "", "index_add_"], [313, 3, 1, "", "index_copy"], [314, 3, 1, "", "index_copy_"], [315, 3, 1, "", "index_fill"], [316, 3, 1, "", "index_fill_"], [317, 3, 1, "", "index_put"], [318, 3, 1, "", "index_put_"], [319, 3, 1, "", "index_reduce"], [320, 3, 1, "", "index_reduce_"], [321, 3, 1, "", "index_select"], [322, 3, 1, "", "indices"], [323, 3, 1, "", "inner"], [324, 3, 1, "", "int"], [325, 3, 1, "", "int_repr"], [326, 3, 1, "", "inverse"], [327, 3, 1, "", "is_coalesced"], [328, 3, 1, "", "is_complex"], [329, 3, 1, "", "is_conj"], [330, 3, 1, "", "is_contiguous"], [331, 2, 1, "", "is_cuda"], [332, 3, 1, "", "is_floating_point"], [333, 3, 1, "", "is_inference"], [334, 2, 1, "", "is_leaf"], [335, 2, 1, "", "is_meta"], [336, 3, 1, "", "is_pinned"], [337, 2, 1, "", "is_quantized"], [338, 3, 1, "", "is_set_to"], [339, 3, 1, "", "is_shared"], [340, 3, 1, "", "is_signed"], [341, 2, 1, "", "is_sparse"], [342, 2, 1, "", "is_sparse_csr"], [343, 3, 1, "", "isclose"], [344, 3, 1, "", "isfinite"], [345, 3, 1, "", "isinf"], [346, 3, 1, "", "isnan"], [347, 3, 1, "", "isneginf"], [348, 3, 1, "", "isposinf"], [349, 3, 1, "", "isreal"], [350, 3, 1, "", "istft"], [351, 3, 1, "", "item"], [352, 2, 1, "", "itemsize"], [353, 3, 1, "", "kthvalue"], [354, 3, 1, "", "lcm"], [355, 3, 1, "", "lcm_"], [356, 3, 1, "", "ldexp"], [357, 3, 1, "", "ldexp_"], [358, 3, 1, "", "le"], [359, 3, 1, "", "le_"], [360, 3, 1, "", "lerp"], [361, 3, 1, "", "lerp_"], [362, 3, 1, "", "less"], [363, 3, 1, "", "less_"], [364, 3, 1, "", "less_equal"], [365, 3, 1, "", "less_equal_"], [366, 3, 1, "", "lgamma"], [367, 3, 1, "", "lgamma_"], [368, 3, 1, "", "log"], [369, 3, 1, "", "log10"], [370, 3, 1, "", "log10_"], [371, 3, 1, "", "log1p"], [372, 3, 1, "", "log1p_"], [373, 3, 1, "", "log2"], [374, 3, 1, "", "log2_"], [375, 3, 1, "", "log_"], [376, 3, 1, "", "log_normal_"], [377, 3, 1, "", "logaddexp"], [378, 3, 1, "", "logaddexp2"], [379, 3, 1, "", "logcumsumexp"], [380, 3, 1, "", "logdet"], [381, 3, 1, "", "logical_and"], [382, 3, 1, "", "logical_and_"], [383, 3, 1, "", "logical_not"], [384, 3, 1, "", "logical_not_"], [385, 3, 1, "", "logical_or"], [386, 3, 1, "", "logical_or_"], [387, 3, 1, "", "logical_xor"], [388, 3, 1, "", "logical_xor_"], [389, 3, 1, "", "logit"], [390, 3, 1, "", "logit_"], [391, 3, 1, "", "logsumexp"], [392, 3, 1, "", "long"], [393, 3, 1, "", "lt"], [394, 3, 1, "", "lt_"], [395, 3, 1, "", "lu"], [396, 3, 1, "", "lu_solve"], [2078, 2, 1, "", "mH"], [2078, 2, 1, "", "mT"], [397, 3, 1, "", "map_"], [398, 3, 1, "", "masked_fill"], [399, 3, 1, "", "masked_fill_"], [400, 3, 1, "", "masked_scatter"], [401, 3, 1, "", "masked_scatter_"], [402, 3, 1, "", "masked_select"], [403, 3, 1, "", "matmul"], [404, 3, 1, "", "matrix_exp"], [405, 3, 1, "", "matrix_power"], [406, 3, 1, "", "max"], [407, 3, 1, "", "maximum"], [408, 3, 1, "", "mean"], [409, 3, 1, "", "median"], [410, 3, 1, "", "min"], [411, 3, 1, "", "minimum"], [412, 3, 1, "", "mm"], [413, 3, 1, "", "mode"], [414, 3, 1, "", "module_load"], [415, 3, 1, "", "moveaxis"], [416, 3, 1, "", "movedim"], [417, 3, 1, "", "msort"], [418, 3, 1, "", "mul"], [419, 3, 1, "", "mul_"], [420, 3, 1, "", "multinomial"], [421, 3, 1, "", "multiply"], [422, 3, 1, "", "multiply_"], [423, 3, 1, "", "mv"], [424, 3, 1, "", "mvlgamma"], [425, 3, 1, "", "mvlgamma_"], [2026, 2, 1, "", "names"], [426, 3, 1, "", "nan_to_num"], [427, 3, 1, "", "nan_to_num_"], [428, 3, 1, "", "nanmean"], [429, 3, 1, "", "nanmedian"], [430, 3, 1, "", "nanquantile"], [431, 3, 1, "", "nansum"], [432, 3, 1, "", "narrow"], [433, 3, 1, "", "narrow_copy"], [434, 2, 1, "", "nbytes"], [435, 2, 1, "", "ndim"], [436, 3, 1, "", "ndimension"], [437, 3, 1, "", "ne"], [438, 3, 1, "", "ne_"], [439, 3, 1, "", "neg"], [440, 3, 1, "", "neg_"], [441, 3, 1, "", "negative"], [442, 3, 1, "", "negative_"], [443, 3, 1, "", "nelement"], [444, 3, 1, "", "new_empty"], [445, 3, 1, "", "new_full"], [446, 3, 1, "", "new_ones"], [447, 3, 1, "", "new_tensor"], [448, 3, 1, "", "new_zeros"], [449, 3, 1, "", "nextafter"], [450, 3, 1, "", "nextafter_"], [451, 3, 1, "", "nonzero"], [452, 3, 1, "", "norm"], [453, 3, 1, "", "normal_"], [454, 3, 1, "", "not_equal"], [455, 3, 1, "", "not_equal_"], [456, 3, 1, "", "numel"], [457, 3, 1, "", "numpy"], [458, 3, 1, "", "orgqr"], [459, 3, 1, "", "ormqr"], [460, 3, 1, "", "outer"], [461, 3, 1, "", "permute"], [462, 3, 1, "", "pin_memory"], [463, 3, 1, "", "pinverse"], [464, 3, 1, "", "polygamma"], [465, 3, 1, "", "polygamma_"], [466, 3, 1, "", "positive"], [467, 3, 1, "", "pow"], [468, 3, 1, "", "pow_"], [469, 3, 1, "", "prod"], [470, 3, 1, "", "put_"], [471, 3, 1, "", "q_per_channel_axis"], [472, 3, 1, "", "q_per_channel_scales"], [473, 3, 1, "", "q_per_channel_zero_points"], [474, 3, 1, "", "q_scale"], [475, 3, 1, "", "q_zero_point"], [476, 3, 1, "", "qr"], [477, 3, 1, "", "qscheme"], [478, 3, 1, "", "quantile"], [479, 3, 1, "", "rad2deg"], [480, 3, 1, "", "random_"], [481, 3, 1, "", "ravel"], [482, 2, 1, "", "real"], [483, 3, 1, "", "reciprocal"], [484, 3, 1, "", "reciprocal_"], [485, 3, 1, "", "record_stream"], [2026, 3, 1, "", "refine_names"], [486, 3, 1, "", "register_hook"], [487, 3, 1, "", "register_post_accumulate_grad_hook"], [488, 3, 1, "", "remainder"], [489, 3, 1, "", "remainder_"], [2026, 3, 1, "", "rename"], [2026, 3, 1, "", "rename_"], [490, 3, 1, "", "renorm"], [491, 3, 1, "", "renorm_"], [492, 3, 1, "", "repeat"], [493, 3, 1, "", "repeat_interleave"], [494, 2, 1, "", "requires_grad"], [495, 3, 1, "", "requires_grad_"], [496, 3, 1, "", "reshape"], [497, 3, 1, "", "reshape_as"], [498, 3, 1, "", "resize_"], [499, 3, 1, "", "resize_as_"], [500, 3, 1, "", "resolve_conj"], [501, 3, 1, "", "resolve_neg"], [502, 3, 1, "", "retain_grad"], [503, 2, 1, "", "retains_grad"], [504, 3, 1, "", "roll"], [505, 3, 1, "", "rot90"], [506, 3, 1, "", "round"], [507, 3, 1, "", "round_"], [508, 3, 1, "", "row_indices"], [509, 3, 1, "", "rsqrt"], [510, 3, 1, "", "rsqrt_"], [511, 3, 1, "", "scatter"], [512, 3, 1, "", "scatter_"], [513, 3, 1, "", "scatter_add"], [514, 3, 1, "", "scatter_add_"], [515, 3, 1, "", "scatter_reduce"], [516, 3, 1, "", "scatter_reduce_"], [517, 3, 1, "", "select"], [518, 3, 1, "", "select_scatter"], [519, 3, 1, "", "set_"], [520, 3, 1, "", "sgn"], [521, 3, 1, "", "sgn_"], [522, 2, 1, "", "shape"], [523, 3, 1, "", "share_memory_"], [524, 3, 1, "", "short"], [525, 3, 1, "", "sigmoid"], [526, 3, 1, "", "sigmoid_"], [527, 3, 1, "", "sign"], [528, 3, 1, "", "sign_"], [529, 3, 1, "", "signbit"], [530, 3, 1, "", "sin"], [531, 3, 1, "", "sin_"], [532, 3, 1, "", "sinc"], [533, 3, 1, "", "sinc_"], [534, 3, 1, "", "sinh"], [535, 3, 1, "", "sinh_"], [536, 3, 1, "", "size"], [537, 3, 1, "", "slice_scatter"], [538, 3, 1, "", "slogdet"], [539, 3, 1, "", "smm"], [540, 3, 1, "", "softmax"], [541, 3, 1, "", "sort"], [542, 3, 1, "", "sparse_dim"], [543, 3, 1, "", "sparse_mask"], [544, 3, 1, "", "sparse_resize_"], [545, 3, 1, "", "sparse_resize_and_clear_"], [546, 3, 1, "", "split"], [547, 3, 1, "", "sqrt"], [548, 3, 1, "", "sqrt_"], [549, 3, 1, "", "square"], [550, 3, 1, "", "square_"], [551, 3, 1, "", "squeeze"], [552, 3, 1, "", "squeeze_"], [553, 3, 1, "", "sspaddmm"], [554, 3, 1, "", "std"], [555, 3, 1, "", "stft"], [556, 3, 1, "", "storage"], [557, 3, 1, "", "storage_offset"], [558, 3, 1, "", "storage_type"], [559, 3, 1, "", "stride"], [560, 3, 1, "", "sub"], [561, 3, 1, "", "sub_"], [562, 3, 1, "", "subtract"], [563, 3, 1, "", "subtract_"], [564, 3, 1, "", "sum"], [565, 3, 1, "", "sum_to_size"], [566, 3, 1, "", "svd"], [567, 3, 1, "", "swapaxes"], [568, 3, 1, "", "swapdims"], [569, 3, 1, "", "t"], [570, 3, 1, "", "t_"], [571, 3, 1, "", "take"], [572, 3, 1, "", "take_along_dim"], [573, 3, 1, "", "tan"], [574, 3, 1, "", "tan_"], [575, 3, 1, "", "tanh"], [576, 3, 1, "", "tanh_"], [577, 3, 1, "", "tensor_split"], [578, 3, 1, "", "tile"], [579, 3, 1, "", "to"], [580, 3, 1, "", "to_dense"], [581, 3, 1, "", "to_mkldnn"], [582, 3, 1, "", "to_sparse"], [583, 3, 1, "", "to_sparse_bsc"], [584, 3, 1, "", "to_sparse_bsr"], [585, 3, 1, "", "to_sparse_coo"], [586, 3, 1, "", "to_sparse_csc"], [587, 3, 1, "", "to_sparse_csr"], [588, 3, 1, "", "tolist"], [589, 3, 1, "", "topk"], [590, 3, 1, "", "trace"], [591, 3, 1, "", "transpose"], [592, 3, 1, "", "transpose_"], [593, 3, 1, "", "triangular_solve"], [594, 3, 1, "", "tril"], [595, 3, 1, "", "tril_"], [596, 3, 1, "", "triu"], [597, 3, 1, "", "triu_"], [598, 3, 1, "", "true_divide"], [599, 3, 1, "", "true_divide_"], [600, 3, 1, "", "trunc"], [601, 3, 1, "", "trunc_"], [602, 3, 1, "", "type"], [603, 3, 1, "", "type_as"], [604, 3, 1, "", "unbind"], [605, 3, 1, "", "unflatten"], [606, 3, 1, "", "unfold"], [607, 3, 1, "", "uniform_"], [608, 3, 1, "", "unique"], [609, 3, 1, "", "unique_consecutive"], [610, 3, 1, "", "unsqueeze"], [611, 3, 1, "", "unsqueeze_"], [612, 3, 1, "", "untyped_storage"], [613, 3, 1, "", "values"], [614, 3, 1, "", "var"], [615, 3, 1, "", "vdot"], [616, 3, 1, "", "view"], [617, 3, 1, "", "view_as"], [618, 3, 1, "", "vsplit"], [619, 3, 1, "", "where"], [620, 3, 1, "", "xlogy"], [621, 3, 1, "", "xlogy_"], [622, 3, 1, "", "zero_"]], "torch.TypedStorage": [[2074, 3, 1, "", "bfloat16"], [2074, 3, 1, "", "bool"], [2074, 3, 1, "", "byte"], [2074, 3, 1, "", "char"], [2074, 3, 1, "", "clone"], [2074, 3, 1, "", "complex_double"], [2074, 3, 1, "", "complex_float"], [2074, 3, 1, "", "copy_"], [2074, 3, 1, "", "cpu"], [2074, 3, 1, "", "cuda"], [2074, 3, 1, "", "data_ptr"], [2074, 4, 1, "", "device"], [2074, 3, 1, "", "double"], [2074, 2, 1, "", "dtype"], [2074, 3, 1, "", "element_size"], [2074, 4, 1, "", "filename"], [2074, 3, 1, "", "fill_"], [2074, 3, 1, "", "float"], [2074, 3, 1, "", "float8_e4m3fn"], [2074, 3, 1, "", "float8_e4m3fnuz"], [2074, 3, 1, "", "float8_e5m2"], [2074, 3, 1, "", "float8_e5m2fnuz"], [2074, 3, 1, "", "from_buffer"], [2074, 3, 1, "", "from_file"], [2074, 3, 1, "", "get_device"], [2074, 3, 1, "", "half"], [2074, 3, 1, "", "hpu"], [2074, 3, 1, "", "int"], [2074, 4, 1, "", "is_cuda"], [2074, 4, 1, "", "is_hpu"], [2074, 3, 1, "", "is_pinned"], [2074, 3, 1, "", "is_shared"], [2074, 2, 1, "", "is_sparse"], [2074, 3, 1, "", "long"], [2074, 3, 1, "", "nbytes"], [2074, 3, 1, "", "pickle_storage_type"], [2074, 3, 1, "", "pin_memory"], [2074, 3, 1, "", "resizable"], [2074, 3, 1, "", "resize_"], [2074, 3, 1, "", "share_memory_"], [2074, 3, 1, "", "short"], [2074, 3, 1, "", "size"], [2074, 3, 1, "", "tolist"], [2074, 3, 1, "", "type"], [2074, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[2074, 3, 1, "", "bfloat16"], [2074, 3, 1, "", "bool"], [2074, 3, 1, "", "byte"], [2074, 3, 1, "", "byteswap"], [2074, 3, 1, "", "char"], [2074, 3, 1, "", "clone"], [2074, 3, 1, "", "complex_double"], [2074, 3, 1, "", "complex_float"], [2074, 3, 1, "", "copy_"], [2074, 3, 1, "", "cpu"], [2074, 3, 1, "", "cuda"], [2074, 3, 1, "", "data_ptr"], [2074, 2, 1, "", "device"], [2074, 3, 1, "", "double"], [2074, 3, 1, "", "element_size"], [2074, 4, 1, "", "filename"], [2074, 3, 1, "", "fill_"], [2074, 3, 1, "", "float"], [2074, 3, 1, "", "float8_e4m3fn"], [2074, 3, 1, "", "float8_e4m3fnuz"], [2074, 3, 1, "", "float8_e5m2"], [2074, 3, 1, "", "float8_e5m2fnuz"], [2074, 3, 1, "", "from_buffer"], [2074, 3, 1, "", "from_file"], [2074, 3, 1, "", "get_device"], [2074, 3, 1, "", "half"], [2074, 3, 1, "", "hpu"], [2074, 3, 1, "", "int"], [2074, 4, 1, "", "is_cuda"], [2074, 4, 1, "", "is_hpu"], [2074, 3, 1, "", "is_pinned"], [2074, 3, 1, "", "is_shared"], [2074, 2, 1, "", "is_sparse"], [2074, 2, 1, "", "is_sparse_csr"], [2074, 3, 1, "", "long"], [2074, 3, 1, "", "mps"], [2074, 3, 1, "", "nbytes"], [2074, 3, 1, "", "new"], [2074, 3, 1, "", "pin_memory"], [2074, 3, 1, "", "resizable"], [2074, 3, 1, "", "resize_"], [2074, 3, 1, "", "share_memory_"], [2074, 3, 1, "", "short"], [2074, 3, 1, "", "size"], [2074, 3, 1, "", "tolist"], [2074, 3, 1, "", "type"], [2074, 3, 1, "", "untyped"]], "torch.__config__": [[13, 5, 1, "", "parallel_info"], [13, 5, 1, "", "show"]], "torch.__future__": [[59, 5, 1, "", "get_overwrite_module_params_on_conversion"], [59, 5, 1, "", "get_swap_module_params_on_conversion"], [59, 5, 1, "", "set_overwrite_module_params_on_conversion"], [59, 5, 1, "", "set_swap_module_params_on_conversion"]], "torch._higher_order_ops.cond": [[12, 5, 1, "", "cond"]], "torch._logging": [[679, 5, 1, "", "set_logs"]], "torch.amp": [[0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "grad_scaler"]], "torch.ao": [[2062, 0, 0, "-", "nn"], [2062, 0, 0, "-", "ns"], [2062, 0, 0, "-", "pruning"], [2062, 0, 0, "-", "quantization"]], "torch.ao.nn": [[2065, 0, 0, "-", "intrinsic"], [2065, 0, 0, "-", "qat"], [2062, 0, 0, "-", "quantizable"], [2062, 0, 0, "-", "quantized"], [2062, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[699, 1, 1, "", "BNReLU2d"], [700, 1, 1, "", "BNReLU3d"], [701, 1, 1, "", "ConvBn1d"], [702, 1, 1, "", "ConvBn2d"], [703, 1, 1, "", "ConvBn3d"], [704, 1, 1, "", "ConvBnReLU1d"], [705, 1, 1, "", "ConvBnReLU2d"], [706, 1, 1, "", "ConvBnReLU3d"], [707, 1, 1, "", "ConvReLU1d"], [708, 1, 1, "", "ConvReLU2d"], [709, 1, 1, "", "ConvReLU3d"], [710, 1, 1, "", "LinearReLU"], [2065, 0, 0, "-", "modules"], [2065, 0, 0, "-", "qat"], [2065, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.modules": [[2062, 0, 0, "-", "fused"]], "torch.ao.nn.intrinsic.qat": [[711, 1, 1, "", "ConvBn1d"], [712, 1, 1, "", "ConvBn2d"], [713, 1, 1, "", "ConvBn3d"], [714, 1, 1, "", "ConvBnReLU1d"], [715, 1, 1, "", "ConvBnReLU2d"], [716, 1, 1, "", "ConvBnReLU3d"], [717, 1, 1, "", "ConvReLU2d"], [718, 1, 1, "", "ConvReLU3d"], [719, 1, 1, "", "LinearReLU"], [720, 1, 1, "", "freeze_bn_stats"], [2065, 0, 0, "-", "modules"], [721, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.qat.modules": [[2062, 0, 0, "-", "conv_fused"], [2062, 0, 0, "-", "linear_fused"], [2062, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized": [[722, 1, 1, "", "BNReLU2d"], [723, 1, 1, "", "BNReLU3d"], [724, 1, 1, "", "ConvReLU1d"], [725, 1, 1, "", "ConvReLU2d"], [726, 1, 1, "", "ConvReLU3d"], [727, 1, 1, "", "LinearReLU"], [2065, 0, 0, "-", "dynamic"], [2065, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[728, 1, 1, "", "LinearReLU"], [2065, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2062, 0, 0, "-", "linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules": [[2062, 0, 0, "-", "bn_relu"], [2062, 0, 0, "-", "conv_add"], [2062, 0, 0, "-", "conv_relu"], [2062, 0, 0, "-", "linear_relu"]], "torch.ao.nn.qat": [[729, 1, 1, "", "Conv2d"], [730, 1, 1, "", "Conv3d"], [731, 1, 1, "", "Linear"], [2065, 0, 0, "-", "dynamic"], [2065, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[731, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[732, 1, 1, "", "Linear"], [2065, 0, 0, "-", "modules"]], "torch.ao.nn.qat.dynamic.modules": [[2062, 0, 0, "-", "linear"]], "torch.ao.nn.qat.modules": [[2062, 0, 0, "-", "conv"], [2062, 0, 0, "-", "embedding_ops"], [2062, 0, 0, "-", "linear"]], "torch.ao.nn.quantizable": [[733, 1, 1, "", "LSTM"], [734, 1, 1, "", "MultiheadAttention"], [2062, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[734, 3, 1, "", "dequantize"], [734, 3, 1, "", "forward"]], "torch.ao.nn.quantizable.modules": [[2062, 0, 0, "-", "activation"], [2062, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized": [[735, 1, 1, "", "BatchNorm2d"], [736, 1, 1, "", "BatchNorm3d"], [737, 1, 1, "", "Conv1d"], [738, 1, 1, "", "Conv2d"], [739, 1, 1, "", "Conv3d"], [740, 1, 1, "", "ConvTranspose1d"], [741, 1, 1, "", "ConvTranspose2d"], [742, 1, 1, "", "ConvTranspose3d"], [743, 1, 1, "", "ELU"], [744, 1, 1, "", "Embedding"], [745, 1, 1, "", "EmbeddingBag"], [746, 1, 1, "", "FXFloatFunctional"], [747, 1, 1, "", "FloatFunctional"], [748, 1, 1, "", "GroupNorm"], [749, 1, 1, "", "Hardswish"], [750, 1, 1, "", "InstanceNorm1d"], [751, 1, 1, "", "InstanceNorm2d"], [752, 1, 1, "", "InstanceNorm3d"], [753, 1, 1, "", "LayerNorm"], [754, 1, 1, "", "LeakyReLU"], [755, 1, 1, "", "Linear"], [756, 1, 1, "", "QFunctional"], [757, 1, 1, "", "ReLU6"], [758, 1, 1, "", "Sigmoid"], [2065, 0, 0, "-", "dynamic"], [2065, 0, 0, "-", "functional"], [2065, 0, 0, "-", "modules"], [2062, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[737, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[738, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[739, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[744, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[745, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[755, 3, 1, "", "from_float"], [755, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[759, 1, 1, "", "GRU"], [760, 1, 1, "", "GRUCell"], [761, 1, 1, "", "LSTM"], [762, 1, 1, "", "LSTMCell"], [763, 1, 1, "", "Linear"], [764, 1, 1, "", "RNNCell"], [2065, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[763, 3, 1, "", "from_float"], [763, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic.modules": [[2062, 0, 0, "-", "conv"], [2062, 0, 0, "-", "linear"], [2062, 0, 0, "-", "rnn"]], "torch.ao.nn.quantized.functional": [[765, 1, 1, "", "adaptive_avg_pool2d"], [766, 1, 1, "", "adaptive_avg_pool3d"], [767, 1, 1, "", "avg_pool2d"], [768, 1, 1, "", "avg_pool3d"], [769, 1, 1, "", "celu"], [770, 1, 1, "", "clamp"], [771, 1, 1, "", "conv1d"], [772, 1, 1, "", "conv2d"], [773, 1, 1, "", "conv3d"], [774, 1, 1, "", "elu"], [775, 1, 1, "", "hardsigmoid"], [776, 1, 1, "", "hardswish"], [777, 1, 1, "", "hardtanh"], [778, 1, 1, "", "interpolate"], [779, 1, 1, "", "leaky_relu"], [780, 1, 1, "", "linear"], [781, 1, 1, "", "max_pool1d"], [782, 1, 1, "", "max_pool2d"], [783, 1, 1, "", "threshold"], [784, 1, 1, "", "upsample"], [785, 1, 1, "", "upsample_bilinear"], [786, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.modules": [[2062, 0, 0, "-", "activation"], [2062, 0, 0, "-", "batchnorm"], [2062, 0, 0, "-", "conv"], [2062, 0, 0, "-", "dropout"], [2062, 0, 0, "-", "embedding_ops"], [2062, 0, 0, "-", "functional_modules"], [2062, 0, 0, "-", "linear"], [2062, 0, 0, "-", "normalization"], [2062, 0, 0, "-", "rnn"], [2062, 0, 0, "-", "utils"]], "torch.ao.nn.quantized.reference": [[2062, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.reference.modules": [[2062, 0, 0, "-", "conv"], [2062, 0, 0, "-", "linear"], [2062, 0, 0, "-", "rnn"], [2062, 0, 0, "-", "sparse"], [2062, 0, 0, "-", "utils"]], "torch.ao.nn.sparse": [[2062, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[2062, 0, 0, "-", "dynamic"], [2062, 0, 0, "-", "linear"], [2062, 0, 0, "-", "utils"]], "torch.ao.nn.sparse.quantized.dynamic": [[2062, 0, 0, "-", "linear"]], "torch.ao.ns": [[2082, 0, 0, "-", "_numeric_suite"], [2083, 0, 0, "-", "_numeric_suite_fx"], [2062, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[2082, 1, 1, "", "Logger"], [2082, 1, 1, "", "OutputLogger"], [2082, 1, 1, "", "Shadow"], [2082, 1, 1, "", "ShadowLogger"], [2082, 5, 1, "", "compare_model_outputs"], [2082, 5, 1, "", "compare_model_stub"], [2082, 5, 1, "", "compare_weights"], [2082, 5, 1, "", "get_logger_dict"], [2082, 5, 1, "", "get_matching_activations"], [2082, 5, 1, "", "prepare_model_outputs"], [2082, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[2082, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[2082, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[2082, 3, 1, "", "add"], [2082, 3, 1, "", "add_relu"], [2082, 3, 1, "", "add_scalar"], [2082, 3, 1, "", "cat"], [2082, 3, 1, "", "forward"], [2082, 3, 1, "", "mul"], [2082, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[2082, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[2083, 1, 1, "", "NSTracer"], [2083, 1, 1, "", "OutputComparisonLogger"], [2083, 1, 1, "", "OutputLogger"], [2083, 5, 1, "", "add_loggers"], [2083, 5, 1, "", "add_shadow_loggers"], [2083, 5, 1, "", "convert_n_shadows_model"], [2083, 5, 1, "", "extend_logger_results_with_comparison"], [2083, 5, 1, "", "extract_logger_info"], [2083, 5, 1, "", "extract_results_n_shadows_model"], [2083, 5, 1, "", "extract_shadow_logger_info"], [2083, 5, 1, "", "extract_weights"], [2083, 5, 1, "", "loggers_set_enabled"], [2083, 5, 1, "", "loggers_set_save_activations"], [2083, 5, 1, "", "prepare_n_shadows_model"], [2083, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[2083, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[2083, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[2083, 3, 1, "", "forward"]], "torch.ao.ns.fx": [[2062, 0, 0, "-", "graph_matcher"], [2062, 0, 0, "-", "graph_passes"], [2062, 0, 0, "-", "mappings"], [2062, 0, 0, "-", "n_shadows_utils"], [2062, 0, 0, "-", "ns_types"], [2062, 0, 0, "-", "pattern_utils"], [2062, 0, 0, "-", "qconfig_multi_mapping"], [2062, 0, 0, "-", "utils"], [2062, 0, 0, "-", "weight_utils"]], "torch.ao.ns.fx.utils": [[2083, 5, 1, "", "compute_cosine_similarity"], [2083, 5, 1, "", "compute_normalized_l2_error"], [2083, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[2062, 0, 0, "-", "scheduler"], [2062, 0, 0, "-", "sparsifier"]], "torch.ao.pruning.scheduler": [[2062, 0, 0, "-", "base_scheduler"], [2062, 0, 0, "-", "cubic_scheduler"], [2062, 0, 0, "-", "lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2062, 0, 0, "-", "base_sparsifier"], [2062, 0, 0, "-", "nearly_diagonal_sparsifier"], [2062, 0, 0, "-", "utils"], [2062, 0, 0, "-", "weight_norm_sparsifier"]], "torch.ao.quantization": [[787, 1, 1, "", "DeQuantStub"], [788, 1, 1, "", "QuantStub"], [789, 1, 1, "", "QuantWrapper"], [790, 1, 1, "", "add_quant_dequant"], [2062, 0, 0, "-", "backend_config"], [796, 1, 1, "", "convert"], [797, 1, 1, "", "default_eval_fn"], [2062, 0, 0, "-", "fake_quantize"], [2062, 0, 0, "-", "fuse_modules"], [2062, 0, 0, "-", "fuser_method_mappings"], [2062, 0, 0, "-", "fx"], [2062, 0, 0, "-", "observer"], [837, 1, 1, "", "prepare"], [838, 1, 1, "", "prepare_qat"], [839, 1, 1, "", "propagate_qconfig_"], [2065, 0, 0, "-", "pt2e"], [2062, 0, 0, "-", "qconfig"], [2062, 0, 0, "-", "qconfig_mapping"], [2062, 0, 0, "-", "quant_type"], [2062, 0, 0, "-", "quantization_mappings"], [857, 1, 1, "", "quantize"], [858, 1, 1, "", "quantize_dynamic"], [2062, 0, 0, "-", "quantize_fx"], [2062, 0, 0, "-", "quantize_jit"], [2062, 0, 0, "-", "quantize_pt2e"], [863, 1, 1, "", "quantize_qat"], [2065, 0, 0, "-", "quantizer"], [2062, 0, 0, "-", "stubs"], [864, 1, 1, "", "swap_module"], [2062, 0, 0, "-", "utils"]], "torch.ao.quantization.backend_config": [[791, 1, 1, "", "BackendConfig"], [792, 1, 1, "", "BackendPatternConfig"], [793, 1, 1, "", "DTypeConfig"], [794, 1, 1, "", "DTypeWithConstraints"], [795, 1, 1, "", "ObservationType"], [2062, 0, 0, "-", "backend_config"], [2062, 0, 0, "-", "executorch"], [2062, 0, 0, "-", "fbgemm"], [2062, 0, 0, "-", "native"], [2062, 0, 0, "-", "observation_type"], [2062, 0, 0, "-", "onednn"], [2062, 0, 0, "-", "qnnpack"], [2062, 0, 0, "-", "tensorrt"], [2062, 0, 0, "-", "utils"], [2062, 0, 0, "-", "x86"]], "torch.ao.quantization.backend_config.BackendConfig": [[791, 4, 1, "", "configs"], [791, 3, 1, "", "from_dict"], [791, 3, 1, "", "set_backend_pattern_config"], [791, 3, 1, "", "set_backend_pattern_configs"], [791, 3, 1, "", "set_name"], [791, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[792, 3, 1, "", "add_dtype_config"], [792, 3, 1, "", "from_dict"], [792, 3, 1, "", "set_dtype_configs"], [792, 3, 1, "", "set_fused_module"], [792, 3, 1, "", "set_fuser_method"], [792, 3, 1, "", "set_observation_type"], [792, 3, 1, "", "set_pattern"], [792, 3, 1, "", "set_qat_module"], [792, 3, 1, "", "set_reference_quantized_module"], [792, 3, 1, "", "set_root_module"], [792, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[793, 3, 1, "", "from_dict"], [793, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[795, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [795, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [795, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[798, 1, 1, "", "FakeQuantize"], [799, 1, 1, "", "FakeQuantizeBase"], [800, 1, 1, "", "FixedQParamsFakeQuantize"], [801, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [802, 2, 1, "", "default_fake_quant"], [803, 2, 1, "", "default_fused_act_fake_quant"], [804, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [805, 2, 1, "", "default_fused_wt_fake_quant"], [806, 2, 1, "", "default_histogram_fake_quant"], [807, 2, 1, "", "default_per_channel_weight_fake_quant"], [808, 2, 1, "", "default_weight_fake_quant"], [809, 1, 1, "", "disable_fake_quant"], [810, 1, 1, "", "disable_observer"], [811, 1, 1, "", "enable_fake_quant"], [812, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize": [[800, 3, 1, "", "extra_repr"]], "torch.ao.quantization.fuse_modules": [[813, 1, 1, "", "fuse_modules"]], "torch.ao.quantization.fx": [[2062, 0, 0, "-", "convert"], [2062, 0, 0, "-", "custom_config"], [2062, 0, 0, "-", "fuse"], [2062, 0, 0, "-", "fuse_handler"], [2062, 0, 0, "-", "graph_module"], [2062, 0, 0, "-", "lower_to_fbgemm"], [2062, 0, 0, "-", "lower_to_qnnpack"], [2062, 0, 0, "-", "lstm_utils"], [2062, 0, 0, "-", "match_utils"], [2062, 0, 0, "-", "pattern_utils"], [2062, 0, 0, "-", "prepare"], [2062, 0, 0, "-", "qconfig_mapping_utils"], [2062, 0, 0, "-", "quantize_handler"], [2062, 0, 0, "-", "tracer"], [2062, 0, 0, "-", "utils"]], "torch.ao.quantization.fx.custom_config": [[814, 1, 1, "", "ConvertCustomConfig"], [815, 1, 1, "", "FuseCustomConfig"], [816, 1, 1, "", "PrepareCustomConfig"], [817, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[814, 3, 1, "", "from_dict"], [814, 3, 1, "", "set_observed_to_quantized_mapping"], [814, 3, 1, "", "set_preserved_attributes"], [814, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[815, 3, 1, "", "from_dict"], [815, 3, 1, "", "set_preserved_attributes"], [815, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[816, 3, 1, "", "from_dict"], [816, 3, 1, "", "set_float_to_observed_mapping"], [816, 3, 1, "", "set_input_quantized_indexes"], [816, 3, 1, "", "set_non_traceable_module_classes"], [816, 3, 1, "", "set_non_traceable_module_names"], [816, 3, 1, "", "set_output_quantized_indexes"], [816, 3, 1, "", "set_preserved_attributes"], [816, 3, 1, "", "set_standalone_module_class"], [816, 3, 1, "", "set_standalone_module_name"], [816, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[818, 1, 1, "", "HistogramObserver"], [819, 1, 1, "", "MinMaxObserver"], [820, 1, 1, "", "MovingAverageMinMaxObserver"], [821, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [822, 1, 1, "", "NoopObserver"], [823, 1, 1, "", "ObserverBase"], [824, 1, 1, "", "PerChannelMinMaxObserver"], [825, 1, 1, "", "PlaceholderObserver"], [826, 1, 1, "", "RecordingObserver"], [827, 2, 1, "", "default_debug_observer"], [828, 2, 1, "", "default_dynamic_quant_observer"], [829, 2, 1, "", "default_float_qparams_observer"], [830, 2, 1, "", "default_histogram_observer"], [831, 2, 1, "", "default_observer"], [832, 2, 1, "", "default_per_channel_weight_observer"], [833, 2, 1, "", "default_placeholder_observer"], [834, 2, 1, "", "default_weight_observer"], [835, 1, 1, "", "get_observer_state_dict"], [836, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[819, 3, 1, "", "calculate_qparams"], [819, 3, 1, "", "forward"], [819, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[823, 3, 1, "", "with_args"], [823, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[824, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[2062, 0, 0, "-", "duplicate_dq_pass"], [2062, 0, 0, "-", "export_utils"], [2065, 0, 0, "-", "generate_numeric_debug_handle"], [2062, 0, 0, "-", "graph_utils"], [2062, 0, 0, "-", "port_metadata_pass"], [2062, 0, 0, "-", "prepare"], [2062, 0, 0, "-", "qat_utils"], [2065, 0, 0, "-", "representation"], [2062, 0, 0, "-", "utils"]], "torch.ao.quantization.pt2e.export_utils": [[840, 1, 1, "", "model_is_exported"]], "torch.ao.quantization.pt2e.representation": [[2062, 0, 0, "-", "rewrite"]], "torch.ao.quantization.qconfig": [[841, 1, 1, "", "QConfig"], [842, 2, 1, "", "default_activation_only_qconfig"], [843, 2, 1, "", "default_debug_qconfig"], [844, 2, 1, "", "default_dynamic_qconfig"], [845, 2, 1, "", "default_per_channel_qconfig"], [846, 2, 1, "", "default_qat_qconfig"], [847, 2, 1, "", "default_qat_qconfig_v2"], [848, 2, 1, "", "default_qconfig"], [849, 2, 1, "", "default_weight_only_qconfig"], [850, 2, 1, "", "float16_dynamic_qconfig"], [851, 2, 1, "", "float16_static_qconfig"], [852, 2, 1, "", "float_qparams_weight_only_qconfig"], [853, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[854, 1, 1, "", "QConfigMapping"], [855, 1, 1, "", "get_default_qat_qconfig_mapping"], [856, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[854, 3, 1, "", "from_dict"], [854, 3, 1, "", "set_global"], [854, 3, 1, "", "set_module_name"], [854, 3, 1, "", "set_module_name_object_type_order"], [854, 3, 1, "", "set_module_name_regex"], [854, 3, 1, "", "set_object_type"], [854, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[859, 1, 1, "", "convert_fx"], [860, 1, 1, "", "fuse_fx"], [861, 1, 1, "", "prepare_fx"], [862, 1, 1, "", "prepare_qat_fx"]], "torch.ao.quantization.quantizer": [[2062, 0, 0, "-", "composable_quantizer"], [2062, 0, 0, "-", "embedding_quantizer"], [2062, 0, 0, "-", "quantizer"], [2062, 0, 0, "-", "utils"], [2062, 0, 0, "-", "x86_inductor_quantizer"], [2062, 0, 0, "-", "xnnpack_quantizer"], [2062, 0, 0, "-", "xnnpack_quantizer_utils"]], "torch.autograd": [[1, 1, 1, "", "Function"], [1, 0, 0, "-", "anomaly_mode"], [893, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [1, 0, 0, "-", "forward_ad"], [1, 0, 0, "-", "function"], [1, 0, 0, "-", "functional"], [914, 5, 1, "", "grad"], [1, 0, 0, "-", "grad_mode"], [1, 0, 0, "-", "gradcheck"], [1, 0, 0, "-", "graph"], [1, 0, 0, "-", "profiler"], [1, 0, 0, "-", "profiler_legacy"], [1, 0, 0, "-", "profiler_util"], [1, 1, 1, "", "set_detect_anomaly"], [1, 0, 0, "-", "variable"]], "torch.autograd.Function": [[889, 3, 1, "", "backward"], [890, 3, 1, "", "forward"], [891, 3, 1, "", "jvp"], [892, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[894, 1, 1, "", "UnpackedDualTensor"], [895, 1, 1, "", "dual_level"], [896, 5, 1, "", "enter_dual_level"], [897, 5, 1, "", "exit_dual_level"], [898, 5, 1, "", "make_dual"], [899, 5, 1, "", "unpack_dual"]], "torch.autograd.forward_ad.UnpackedDualTensor": [[894, 3, 1, "", "count"], [894, 3, 1, "", "index"], [894, 2, 1, "", "primal"], [894, 2, 1, "", "tangent"]], "torch.autograd.function": [[900, 1, 1, "", "BackwardCFunction"], [905, 1, 1, "", "InplaceFunction"], [906, 1, 1, "", "NestedIOFunction"], [907, 5, 1, "", "once_differentiable"]], "torch.autograd.function.BackwardCFunction": [[900, 3, 1, "", "apply"], [900, 3, 1, "", "apply_jvp"], [900, 3, 1, "", "mark_dirty"], [900, 3, 1, "", "mark_non_differentiable"], [900, 3, 1, "", "save_for_backward"], [900, 3, 1, "", "save_for_forward"], [900, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.FunctionCtx": [[901, 3, 1, "", "mark_dirty"], [902, 3, 1, "", "mark_non_differentiable"], [903, 3, 1, "", "save_for_backward"], [904, 3, 1, "", "set_materialize_grads"]], "torch.autograd.function.InplaceFunction": [[905, 3, 1, "", "backward"], [905, 3, 1, "", "forward"], [905, 3, 1, "", "jvp"], [905, 3, 1, "", "mark_dirty"], [905, 3, 1, "", "mark_non_differentiable"], [905, 3, 1, "", "save_for_backward"], [905, 3, 1, "", "save_for_forward"], [905, 3, 1, "", "set_materialize_grads"], [905, 3, 1, "", "setup_context"], [905, 3, 1, "", "vjp"], [905, 3, 1, "", "vmap"]], "torch.autograd.function.NestedIOFunction": [[906, 3, 1, "", "backward"], [906, 3, 1, "", "backward_extended"], [906, 3, 1, "", "forward"], [906, 3, 1, "", "forward_extended"], [906, 3, 1, "", "jvp"], [906, 3, 1, "", "mark_dirty"], [906, 3, 1, "", "mark_non_differentiable"], [906, 3, 1, "", "save_for_backward"], [906, 3, 1, "", "save_for_forward"], [906, 4, 1, "", "saved_tensors"], [906, 3, 1, "", "set_materialize_grads"], [906, 3, 1, "", "setup_context"], [906, 3, 1, "", "vjp"], [906, 3, 1, "", "vmap"]], "torch.autograd.functional": [[908, 5, 1, "", "hessian"], [909, 5, 1, "", "hvp"], [910, 5, 1, "", "jacobian"], [911, 5, 1, "", "jvp"], [912, 5, 1, "", "vhp"], [913, 5, 1, "", "vjp"]], "torch.autograd.grad_mode": [[915, 1, 1, "", "inference_mode"], [916, 1, 1, "", "set_grad_enabled"], [917, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.grad_mode.inference_mode": [[915, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_grad_enabled": [[916, 3, 1, "", "clone"]], "torch.autograd.grad_mode.set_multithreading_enabled": [[917, 3, 1, "", "clone"]], "torch.autograd.gradcheck": [[918, 6, 1, "", "GradcheckError"], [919, 5, 1, "", "gradcheck"], [920, 5, 1, "", "gradgradcheck"]], "torch.autograd.graph": [[1, 1, 1, "", "GradientEdge"], [1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 5, 1, "", "get_gradient_edge"], [926, 5, 1, "", "increment_version"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.graph.Node": [[921, 3, 1, "", "metadata"], [922, 3, 1, "", "name"], [923, 4, 1, "", "next_functions"], [924, 3, 1, "", "register_hook"], [925, 3, 1, "", "register_prehook"]], "torch.autograd.profiler": [[927, 1, 1, "", "EnforceUnique"], [928, 1, 1, "", "KinetoStepTracker"], [1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [929, 5, 1, "", "load_nvprof"], [930, 5, 1, "", "parse_nvprof_trace"], [1, 1, 1, "", "profile"], [935, 1, 1, "", "record_function"]], "torch.autograd.profiler.EnforceUnique": [[927, 3, 1, "", "see"]], "torch.autograd.profiler.KinetoStepTracker": [[928, 3, 1, "", "current_step"], [928, 3, 1, "", "erase_step_count"], [928, 3, 1, "", "increment_step"], [928, 3, 1, "", "init_step_count"]], "torch.autograd.profiler.profile": [[931, 3, 1, "", "export_chrome_trace"], [932, 3, 1, "", "key_averages"], [933, 4, 1, "", "self_cpu_time_total"], [934, 3, 1, "", "total_average"]], "torch.autograd.profiler_util": [[936, 1, 1, "", "Interval"], [937, 1, 1, "", "Kernel"], [938, 1, 1, "", "MemRecordsAcc"], [939, 1, 1, "", "StringTable"]], "torch.autograd.profiler_util.Interval": [[936, 3, 1, "", "elapsed_us"]], "torch.autograd.profiler_util.Kernel": [[937, 3, 1, "", "count"], [937, 2, 1, "", "device"], [937, 2, 1, "", "duration"], [937, 3, 1, "", "index"], [937, 2, 1, "", "name"]], "torch.autograd.profiler_util.MemRecordsAcc": [[938, 3, 1, "", "in_interval"]], "torch.autograd.profiler_util.StringTable": [[939, 3, 1, "", "clear"], [939, 3, 1, "", "copy"], [939, 2, 1, "", "default_factory"], [939, 3, 1, "", "fromkeys"], [939, 3, 1, "", "get"], [939, 3, 1, "", "items"], [939, 3, 1, "", "keys"], [939, 3, 1, "", "pop"], [939, 3, 1, "", "popitem"], [939, 3, 1, "", "setdefault"], [939, 3, 1, "", "update"], [939, 3, 1, "", "values"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mha"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "nnpack"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPAParams"], [2, 5, 1, "", "can_use_efficient_attention"], [2, 5, 1, "", "can_use_flash_attention"], [2, 5, 1, "", "cudnn_sdp_enabled"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_cudnn_sdp"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_blas_library"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 0, 0, "-", "rnn"], [2, 5, 1, "", "version"]], "torch.backends.mha": [[2, 5, 1, "", "get_fastpath_enabled"], [2, 5, 1, "", "set_fastpath_enabled"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.nnpack": [[2, 5, 1, "", "flags"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "set_flags"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.backends.xeon": [[2, 0, 0, "-", "run_cpu"]], "torch.compiler": [[974, 5, 1, "", "allow_in_graph"], [975, 5, 1, "", "assume_constant_result"], [976, 5, 1, "", "compile"], [977, 5, 1, "", "cudagraph_mark_step_begin"], [978, 5, 1, "", "disable"], [979, 5, 1, "", "is_compiling"], [980, 5, 1, "", "is_dynamo_compiling"], [981, 5, 1, "", "list_backends"], [982, 5, 1, "", "reset"]], "torch.cpu": [[995, 1, 1, "", "Stream"], [996, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [997, 5, 1, "", "current_device"], [998, 5, 1, "", "current_stream"], [999, 5, 1, "", "device_count"], [1000, 5, 1, "", "is_available"], [1001, 5, 1, "", "set_device"], [1002, 5, 1, "", "stream"], [1003, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda": [[1005, 1, 1, "", "CUDAGraph"], [1006, 1, 1, "", "CUDAPluggableAllocator"], [1007, 1, 1, "", "Event"], [1008, 1, 1, "", "ExternalStream"], [1009, 6, 1, "", "OutOfMemoryError"], [1010, 1, 1, "", "Stream"], [1011, 1, 1, "", "StreamContext"], [18, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [1012, 5, 1, "", "caching_allocator_alloc"], [1013, 5, 1, "", "caching_allocator_delete"], [1014, 5, 1, "", "can_device_access_peer"], [1015, 5, 1, "", "change_current_allocator"], [1016, 5, 1, "", "clock_rate"], [17, 0, 0, "-", "comm"], [1022, 5, 1, "", "current_blas_handle"], [1023, 5, 1, "", "current_device"], [1024, 5, 1, "", "current_stream"], [1025, 5, 1, "", "default_stream"], [1026, 1, 1, "", "device"], [1027, 5, 1, "", "device_count"], [1028, 1, 1, "", "device_of"], [1029, 5, 1, "", "empty_cache"], [17, 0, 0, "-", "error"], [1030, 5, 1, "", "get_allocator_backend"], [1031, 5, 1, "", "get_arch_list"], [1032, 5, 1, "", "get_device_capability"], [1033, 5, 1, "", "get_device_name"], [1034, 5, 1, "", "get_device_properties"], [1035, 5, 1, "", "get_gencode_flags"], [1036, 5, 1, "", "get_rng_state"], [1037, 5, 1, "", "get_rng_state_all"], [1038, 5, 1, "", "get_sync_debug_mode"], [1039, 1, 1, "", "graph"], [1040, 5, 1, "", "graph_pool_handle"], [17, 0, 0, "-", "graphs"], [1041, 5, 1, "", "init"], [1042, 5, 1, "", "initial_seed"], [1043, 5, 1, "", "ipc_collect"], [1044, 5, 1, "", "is_available"], [1045, 5, 1, "", "is_current_stream_capturing"], [1046, 5, 1, "", "is_initialized"], [17, 0, 0, "-", "jiterator"], [1049, 5, 1, "", "list_gpu_processes"], [1050, 5, 1, "", "make_graphed_callables"], [1051, 5, 1, "", "manual_seed"], [1052, 5, 1, "", "manual_seed_all"], [1053, 5, 1, "", "max_memory_allocated"], [1054, 5, 1, "", "max_memory_cached"], [1055, 5, 1, "", "max_memory_reserved"], [1056, 5, 1, "", "mem_get_info"], [17, 0, 0, "-", "memory"], [1057, 5, 1, "", "memory_allocated"], [1058, 5, 1, "", "memory_cached"], [1059, 5, 1, "", "memory_reserved"], [1060, 5, 1, "", "memory_snapshot"], [1061, 5, 1, "", "memory_stats"], [1062, 5, 1, "", "memory_summary"], [1063, 5, 1, "", "memory_usage"], [17, 0, 0, "-", "nccl"], [17, 0, 0, "-", "nvtx"], [1068, 5, 1, "", "power_draw"], [17, 0, 0, "-", "profiler"], [17, 0, 0, "-", "random"], [1069, 5, 1, "", "reset_max_memory_allocated"], [1070, 5, 1, "", "reset_max_memory_cached"], [1071, 5, 1, "", "reset_peak_memory_stats"], [1072, 5, 1, "", "seed"], [1073, 5, 1, "", "seed_all"], [1074, 5, 1, "", "set_device"], [1075, 5, 1, "", "set_per_process_memory_fraction"], [1076, 5, 1, "", "set_rng_state"], [1077, 5, 1, "", "set_rng_state_all"], [1078, 5, 1, "", "set_stream"], [1079, 5, 1, "", "set_sync_debug_mode"], [17, 0, 0, "-", "sparse"], [1080, 5, 1, "", "stream"], [17, 0, 0, "-", "streams"], [1081, 5, 1, "", "synchronize"], [1082, 5, 1, "", "temperature"], [1083, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[1005, 3, 1, "", "capture_begin"], [1005, 3, 1, "", "capture_end"], [1005, 3, 1, "", "debug_dump"], [1005, 3, 1, "", "enable_debug_mode"], [1005, 3, 1, "", "pool"], [1005, 3, 1, "", "replay"], [1005, 3, 1, "", "reset"]], "torch.cuda.Event": [[1007, 3, 1, "", "elapsed_time"], [1007, 3, 1, "", "from_ipc_handle"], [1007, 3, 1, "", "ipc_handle"], [1007, 3, 1, "", "query"], [1007, 3, 1, "", "record"], [1007, 3, 1, "", "synchronize"], [1007, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[1008, 3, 1, "", "query"], [1008, 3, 1, "", "record_event"], [1008, 3, 1, "", "synchronize"], [1008, 3, 1, "", "wait_event"], [1008, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[1010, 3, 1, "", "query"], [1010, 3, 1, "", "record_event"], [1010, 3, 1, "", "synchronize"], [1010, 3, 1, "", "wait_event"], [1010, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[18, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 0, 0, "-", "autocast_mode"], [0, 0, 0, "-", "common"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"], [0, 0, 0, "-", "grad_scaler"]], "torch.cuda.comm": [[1017, 5, 1, "", "broadcast"], [1018, 5, 1, "", "broadcast_coalesced"], [1019, 5, 1, "", "gather"], [1020, 5, 1, "", "reduce_add"], [1021, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1047, 5, 1, "", "_create_jit_fn"], [1048, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.memory": [[2105, 5, 1, "", "_dump_snapshot"], [2105, 5, 1, "", "_record_memory_history"], [2105, 5, 1, "", "_snapshot"]], "torch.cuda.nvtx": [[1064, 5, 1, "", "mark"], [1065, 5, 1, "", "range"], [1066, 5, 1, "", "range_pop"], [1067, 5, 1, "", "range_push"]], "torch.distributed": [[27, 1, 1, "", "Backend"], [27, 1, 1, "", "DistBackendError"], [27, 1, 1, "", "DistError"], [27, 1, 1, "", "DistNetworkError"], [27, 1, 1, "", "DistStoreError"], [27, 1, 1, "", "FileStore"], [23, 1, 1, "", "GradBucket"], [27, 1, 1, "", "HashStore"], [27, 1, 1, "", "P2POp"], [27, 1, 1, "", "PrefixStore"], [27, 1, 1, "", "ReduceOp"], [27, 1, 1, "", "Store"], [27, 1, 1, "", "TCPStore"], [27, 1, 1, "", "Work"], [27, 0, 0, "-", "algorithms"], [27, 5, 1, "", "all_gather"], [27, 5, 1, "", "all_gather_into_tensor"], [27, 5, 1, "", "all_gather_object"], [27, 5, 1, "", "all_reduce"], [27, 5, 1, "", "all_to_all"], [27, 5, 1, "", "all_to_all_single"], [27, 0, 0, "-", "argparse_util"], [2067, 0, 0, "-", "autograd"], [27, 5, 1, "", "barrier"], [27, 5, 1, "", "batch_isend_irecv"], [27, 5, 1, "", "breakpoint"], [27, 5, 1, "", "broadcast"], [27, 5, 1, "", "broadcast_object_list"], [27, 0, 0, "-", "c10d_logger"], [29, 0, 0, "-", "checkpoint"], [27, 0, 0, "-", "collective_utils"], [27, 0, 0, "-", "constants"], [27, 0, 0, "-", "device_mesh"], [27, 0, 0, "-", "distributed_c10d"], [27, 0, 0, "-", "elastic"], [52, 0, 0, "-", "fsdp"], [27, 5, 1, "", "gather"], [27, 5, 1, "", "gather_object"], [27, 5, 1, "", "get_backend"], [27, 5, 1, "", "get_global_rank"], [27, 5, 1, "", "get_group_rank"], [27, 5, 1, "", "get_process_group_ranks"], [27, 5, 1, "", "get_rank"], [27, 5, 1, "", "get_world_size"], [27, 5, 1, "", "init_process_group"], [27, 5, 1, "", "irecv"], [27, 5, 1, "", "is_available"], [27, 5, 1, "", "is_gloo_available"], [27, 5, 1, "", "is_initialized"], [27, 5, 1, "", "is_mpi_available"], [27, 5, 1, "", "is_nccl_available"], [27, 5, 1, "", "is_torchelastic_launched"], [27, 5, 1, "", "isend"], [27, 0, 0, "-", "launch"], [27, 0, 0, "-", "launcher"], [27, 0, 0, "-", "logging_handlers"], [27, 5, 1, "", "monitored_barrier"], [27, 5, 1, "", "new_group"], [27, 0, 0, "-", "nn"], [31, 0, 0, "-", "optim"], [27, 0, 0, "-", "pipeline"], [27, 5, 1, "", "recv"], [27, 5, 1, "", "reduce"], [27, 1, 1, "", "reduce_op"], [27, 5, 1, "", "reduce_scatter"], [27, 5, 1, "", "reduce_scatter_tensor"], [27, 0, 0, "-", "remote_device"], [27, 0, 0, "-", "rendezvous"], [2067, 0, 0, "-", "rpc"], [45, 0, 0, "-", "run"], [27, 5, 1, "", "scatter"], [27, 5, 1, "", "scatter_object_list"], [27, 5, 1, "", "send"], [27, 0, 0, "-", "tensor"], [27, 0, 0, "-", "utils"]], "torch.distributed.Backend": [[27, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[23, 5, 1, "", "buffer"], [23, 5, 1, "", "gradients"], [23, 5, 1, "", "index"], [23, 5, 1, "", "is_last"], [23, 5, 1, "", "parameters"], [23, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[27, 5, 1, "", "add"], [27, 5, 1, "", "compare_set"], [27, 5, 1, "", "delete_key"], [27, 5, 1, "", "get"], [27, 5, 1, "", "num_keys"], [27, 5, 1, "", "set"], [27, 5, 1, "", "set_timeout"], [27, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[28, 1, 1, "", "Join"], [28, 1, 1, "", "JoinHook"], [28, 1, 1, "", "Joinable"], [27, 0, 0, "-", "ddp_comm_hooks"], [27, 0, 0, "-", "join"], [27, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[28, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[28, 3, 1, "", "main_hook"], [28, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[28, 4, 1, "", "join_device"], [28, 3, 1, "", "join_hook"], [28, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks": [[27, 0, 0, "-", "ddp_zero_hook"], [27, 0, 0, "-", "debugging_hooks"], [27, 0, 0, "-", "default_hooks"], [27, 0, 0, "-", "mixed_precision_hooks"], [27, 0, 0, "-", "optimizer_overlap_hooks"], [27, 0, 0, "-", "post_localSGD_hook"], [27, 0, 0, "-", "powerSGD_hook"], [27, 0, 0, "-", "quantization_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[23, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[23, 5, 1, "", "allreduce_hook"], [23, 5, 1, "", "bf16_compress_hook"], [23, 5, 1, "", "bf16_compress_wrapper"], [23, 5, 1, "", "fp16_compress_hook"], [23, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[23, 1, 1, "", "PowerSGDState"], [23, 5, 1, "", "batched_powerSGD_hook"], [23, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[23, 3, 1, "", "__getstate__"], [23, 3, 1, "", "__setstate__"]], "torch.distributed.algorithms.model_averaging": [[27, 0, 0, "-", "averagers"], [27, 0, 0, "-", "hierarchical_model_averager"], [27, 0, 0, "-", "utils"]], "torch.distributed.autograd": [[2067, 5, 1, "", "backward"], [2067, 1, 1, "", "context"], [2067, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[29, 1, 1, "", "DefaultLoadPlanner"], [29, 1, 1, "", "DefaultSavePlanner"], [29, 1, 1, "", "FileSystemReader"], [29, 1, 1, "", "FileSystemWriter"], [29, 1, 1, "", "LoadPlan"], [29, 1, 1, "", "LoadPlanner"], [29, 1, 1, "", "ReadItem"], [29, 1, 1, "", "SavePlan"], [29, 1, 1, "", "SavePlanner"], [29, 1, 1, "", "StorageReader"], [29, 1, 1, "", "StorageWriter"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "default_planner"], [27, 0, 0, "-", "filesystem"], [29, 0, 0, "-", "format_utils"], [29, 0, 0, "-", "logger"], [29, 0, 0, "-", "logging_handlers"], [27, 0, 0, "-", "metadata"], [27, 0, 0, "-", "optimizer"], [27, 0, 0, "-", "planner"], [27, 0, 0, "-", "planner_helpers"], [27, 0, 0, "-", "resharding"], [27, 0, 0, "-", "state_dict"], [27, 0, 0, "-", "state_dict_loader"], [27, 0, 0, "-", "state_dict_saver"], [27, 0, 0, "-", "stateful"], [27, 0, 0, "-", "storage"], [27, 0, 0, "-", "utils"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[29, 3, 1, "", "lookup_tensor"], [29, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[29, 3, 1, "", "lookup_object"], [29, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.FileSystemReader": [[29, 4, 1, "", "checkpoint_id"]], "torch.distributed.checkpoint.FileSystemWriter": [[29, 4, 1, "", "checkpoint_id"]], "torch.distributed.checkpoint.LoadPlanner": [[29, 3, 1, "", "commit_tensor"], [29, 3, 1, "", "create_global_plan"], [29, 3, 1, "", "create_local_plan"], [29, 3, 1, "", "finish_plan"], [29, 3, 1, "", "load_bytes"], [29, 3, 1, "", "resolve_bytes"], [29, 3, 1, "", "resolve_tensor"], [29, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[29, 3, 1, "", "create_global_plan"], [29, 3, 1, "", "create_local_plan"], [29, 3, 1, "", "finish_plan"], [29, 3, 1, "", "resolve_data"], [29, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[29, 3, 1, "", "prepare_global_plan"], [29, 3, 1, "", "prepare_local_plan"], [29, 3, 1, "", "read_data"], [29, 3, 1, "", "read_metadata"], [29, 3, 1, "", "reset"], [29, 3, 1, "", "set_up_storage_reader"], [29, 3, 1, "", "validate_checkpoint_id"]], "torch.distributed.checkpoint.StorageWriter": [[29, 3, 1, "", "finish"], [29, 3, 1, "", "prepare_global_plan"], [29, 3, 1, "", "prepare_local_plan"], [29, 3, 1, "", "reset"], [29, 3, 1, "", "set_up_storage_writer"], [29, 3, 1, "", "validate_checkpoint_id"], [29, 3, 1, "", "write_data"]], "torch.distributed.checkpoint.format_utils": [[29, 1, 1, "", "BroadcastingTorchSaveReader"], [29, 1, 1, "", "DynamicMetaLoadPlanner"], [29, 5, 1, "", "dcp_to_torch_save"], [29, 5, 1, "", "torch_save_to_dcp"]], "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader": [[29, 3, 1, "", "prepare_global_plan"], [29, 3, 1, "", "prepare_local_plan"], [29, 3, 1, "", "read_data"], [29, 3, 1, "", "read_metadata"], [29, 3, 1, "", "reset"], [29, 3, 1, "", "set_up_storage_reader"], [29, 3, 1, "", "validate_checkpoint_id"]], "torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner": [[29, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.planner": [[29, 1, 1, "", "WriteItem"]], "torch.distributed.checkpoint.planner.WriteItem": [[29, 3, 1, "", "tensor_storage_size"]], "torch.distributed.checkpoint.state_dict": [[29, 1, 1, "", "StateDictOptions"], [29, 5, 1, "", "get_model_state_dict"], [29, 5, 1, "", "get_optimizer_state_dict"], [29, 5, 1, "", "get_state_dict"], [29, 5, 1, "", "set_model_state_dict"], [29, 5, 1, "", "set_optimizer_state_dict"], [29, 5, 1, "", "set_state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[29, 5, 1, "", "load"], [29, 5, 1, "", "load_state_dict"]], "torch.distributed.checkpoint.state_dict_saver": [[29, 5, 1, "", "async_save"], [29, 5, 1, "", "save"], [29, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.stateful": [[29, 1, 1, "", "Stateful"]], "torch.distributed.checkpoint.stateful.Stateful": [[29, 3, 1, "", "load_state_dict"], [29, 3, 1, "", "state_dict"]], "torch.distributed.device_mesh": [[27, 1, 1, "", "DeviceMesh"], [27, 5, 1, "", "init_device_mesh"]], "torch.distributed.elastic": [[35, 0, 0, "-", "agent"], [38, 0, 0, "-", "events"], [41, 0, 0, "-", "metrics"], [42, 0, 0, "-", "multiprocessing"], [44, 0, 0, "-", "rendezvous"], [47, 0, 0, "-", "timer"], [27, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[35, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[35, 1, 1, "", "ElasticAgent"], [35, 1, 1, "", "SimpleElasticAgent"], [35, 1, 1, "", "Worker"], [35, 1, 1, "", "WorkerGroup"], [35, 1, 1, "", "WorkerSpec"], [35, 1, 1, "", "WorkerState"], [27, 0, 0, "-", "api"], [35, 0, 0, "-", "health_check_server"], [27, 0, 0, "-", "local_elastic_agent"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[35, 3, 1, "", "get_worker_group"], [35, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[35, 3, 1, "", "_assign_worker_ranks"], [35, 3, 1, "", "_exit_barrier"], [35, 3, 1, "", "_initialize_workers"], [35, 3, 1, "", "_monitor_workers"], [35, 3, 1, "", "_rendezvous"], [35, 3, 1, "", "_restart_workers"], [35, 3, 1, "", "_shutdown"], [35, 3, 1, "", "_start_workers"], [35, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[35, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[35, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[35, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.health_check_server": [[35, 1, 1, "", "HealthCheckServer"], [35, 5, 1, "", "create_healthcheck_server"]], "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer": [[35, 3, 1, "", "start"], [35, 3, 1, "", "stop"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[35, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events": [[27, 0, 0, "-", "api"], [38, 5, 1, "", "get_logging_handler"], [27, 0, 0, "-", "handlers"], [38, 5, 1, "", "record"]], "torch.distributed.elastic.events.api": [[38, 1, 1, "", "Event"], [38, 2, 1, "", "EventMetadataValue"], [38, 1, 1, "", "EventSource"]], "torch.distributed.elastic.metrics": [[27, 0, 0, "-", "api"], [41, 5, 1, "", "configure"], [41, 5, 1, "", "prof"], [41, 5, 1, "", "put_metric"]], "torch.distributed.elastic.metrics.api": [[41, 1, 1, "", "ConsoleMetricHandler"], [41, 1, 1, "", "MetricHandler"], [41, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.multiprocessing": [[27, 0, 0, "-", "api"], [37, 0, 0, "-", "errors"], [27, 0, 0, "-", "redirects"], [42, 5, 1, "", "start_processes"], [46, 0, 0, "-", "subprocess_handler"], [27, 0, 0, "-", "tail_log"]], "torch.distributed.elastic.multiprocessing.api": [[42, 1, 1, "", "DefaultLogsSpecs"], [42, 1, 1, "", "LogsDest"], [42, 1, 1, "", "LogsSpecs"], [42, 1, 1, "", "MultiprocessContext"], [42, 1, 1, "", "PContext"], [42, 1, 1, "", "RunProcsResult"], [42, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs": [[42, 3, 1, "", "reify"]], "torch.distributed.elastic.multiprocessing.api.LogsSpecs": [[42, 3, 1, "", "reify"]], "torch.distributed.elastic.multiprocessing.errors": [[37, 1, 1, "", "ChildFailedError"], [37, 1, 1, "", "ErrorHandler"], [37, 1, 1, "", "ProcessFailure"], [27, 0, 0, "-", "error_handler"], [27, 0, 0, "-", "handlers"], [37, 5, 1, "", "record"]], "torch.distributed.elastic.multiprocessing.subprocess_handler": [[46, 0, 0, "-", "handlers"], [46, 0, 0, "-", "subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers": [[46, 5, 1, "", "get_subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler": [[46, 1, 1, "", "SubprocessHandler"]], "torch.distributed.elastic.rendezvous": [[44, 1, 1, "", "RendezvousClosedError"], [44, 1, 1, "", "RendezvousConnectionError"], [44, 1, 1, "", "RendezvousError"], [44, 1, 1, "", "RendezvousGracefulExitError"], [44, 1, 1, "", "RendezvousHandler"], [44, 1, 1, "", "RendezvousHandlerRegistry"], [44, 1, 1, "", "RendezvousParameters"], [44, 1, 1, "", "RendezvousStateError"], [44, 1, 1, "", "RendezvousTimeoutError"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "c10d_rendezvous_backend"], [27, 0, 0, "-", "dynamic_rendezvous"], [27, 0, 0, "-", "etcd_rendezvous"], [27, 0, 0, "-", "etcd_rendezvous_backend"], [27, 0, 0, "-", "etcd_server"], [27, 0, 0, "-", "etcd_store"], [44, 0, 0, "-", "registry"], [27, 0, 0, "-", "static_tcp_rendezvous"], [27, 0, 0, "-", "utils"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[44, 3, 1, "", "get_backend"], [44, 3, 1, "", "get_run_id"], [44, 3, 1, "", "is_closed"], [44, 3, 1, "", "next_rendezvous"], [44, 3, 1, "", "num_nodes_waiting"], [44, 3, 1, "", "set_closed"], [44, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[44, 3, 1, "", "create_handler"], [44, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[44, 3, 1, "", "get"], [44, 3, 1, "", "get_as_bool"], [44, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[44, 1, 1, "", "C10dRendezvousBackend"], [44, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[44, 3, 1, "", "get_state"], [44, 4, 1, "", "name"], [44, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[44, 1, 1, "", "DynamicRendezvousHandler"], [44, 1, 1, "", "RendezvousBackend"], [44, 1, 1, "", "RendezvousTimeout"], [44, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[44, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[44, 3, 1, "", "get_state"], [44, 4, 1, "", "name"], [44, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[44, 4, 1, "", "close"], [44, 4, 1, "", "heartbeat"], [44, 4, 1, "", "join"], [44, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[44, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[44, 1, 1, "", "EtcdRendezvousBackend"], [44, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[44, 3, 1, "", "get_state"], [44, 4, 1, "", "name"], [44, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[44, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[44, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[44, 3, 1, "", "add"], [44, 3, 1, "", "check"], [44, 3, 1, "", "get"], [44, 3, 1, "", "set"], [44, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[47, 1, 1, "", "FileTimerClient"], [47, 1, 1, "", "FileTimerServer"], [47, 1, 1, "", "LocalTimerClient"], [47, 1, 1, "", "LocalTimerServer"], [47, 1, 1, "", "TimerClient"], [47, 1, 1, "", "TimerRequest"], [47, 1, 1, "", "TimerServer"], [27, 0, 0, "-", "api"], [47, 5, 1, "", "configure"], [47, 5, 1, "", "expires"], [27, 0, 0, "-", "file_based_local_timer"], [27, 0, 0, "-", "local_timer"]], "torch.distributed.elastic.timer.TimerClient": [[47, 3, 1, "", "acquire"], [47, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[47, 3, 1, "", "clear_timers"], [47, 3, 1, "", "get_expired_timers"], [47, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[27, 0, 0, "-", "api"], [27, 0, 0, "-", "data"], [27, 0, 0, "-", "distributed"], [27, 0, 0, "-", "log_level"], [27, 0, 0, "-", "logging"], [27, 0, 0, "-", "store"]], "torch.distributed.elastic.utils.data": [[27, 0, 0, "-", "cycling_iterator"], [27, 0, 0, "-", "elastic_distributed_sampler"]], "torch.distributed.fsdp": [[52, 1, 1, "", "BackwardPrefetch"], [52, 1, 1, "", "CPUOffload"], [52, 1, 1, "", "FullOptimStateDictConfig"], [52, 1, 1, "", "FullStateDictConfig"], [52, 1, 1, "", "FullyShardedDataParallel"], [52, 1, 1, "", "LocalOptimStateDictConfig"], [52, 1, 1, "", "LocalStateDictConfig"], [52, 1, 1, "", "MixedPrecision"], [52, 1, 1, "", "OptimStateDictConfig"], [52, 1, 1, "", "ShardedOptimStateDictConfig"], [52, 1, 1, "", "ShardedStateDictConfig"], [52, 1, 1, "", "ShardingStrategy"], [52, 1, 1, "", "StateDictConfig"], [52, 1, 1, "", "StateDictSettings"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "fully_sharded_data_parallel"], [27, 0, 0, "-", "sharded_grad_scaler"], [27, 0, 0, "-", "wrap"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "check_is_root"], [52, 3, 1, "", "clip_grad_norm_"], [52, 3, 1, "", "flatten_sharded_optim_state_dict"], [52, 3, 1, "", "forward"], [52, 3, 1, "", "fsdp_modules"], [52, 3, 1, "", "full_optim_state_dict"], [52, 3, 1, "", "get_state_dict_type"], [52, 4, 1, "", "module"], [52, 3, 1, "", "named_buffers"], [52, 3, 1, "", "named_parameters"], [52, 3, 1, "", "no_sync"], [52, 3, 1, "", "optim_state_dict"], [52, 3, 1, "", "optim_state_dict_to_load"], [52, 3, 1, "", "register_comm_hook"], [52, 3, 1, "", "rekey_optim_state_dict"], [52, 3, 1, "", "scatter_full_optim_state_dict"], [52, 3, 1, "", "set_state_dict_type"], [52, 3, 1, "", "shard_full_optim_state_dict"], [52, 3, 1, "", "sharded_optim_state_dict"], [52, 3, 1, "", "state_dict_type"], [52, 3, 1, "", "summon_full_params"]], "torch.distributed.launcher": [[27, 0, 0, "-", "api"]], "torch.distributed.nn": [[27, 0, 0, "-", "api"], [27, 0, 0, "-", "functional"], [27, 0, 0, "-", "jit"]], "torch.distributed.nn.api": [[27, 0, 0, "-", "remote_module"]], "torch.distributed.nn.api.remote_module": [[2067, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[2067, 3, 1, "", "get_module_rref"], [2067, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[27, 0, 0, "-", "instantiator"], [27, 0, 0, "-", "templates"]], "torch.distributed.nn.jit.templates": [[27, 0, 0, "-", "remote_module_template"]], "torch.distributed.optim": [[31, 1, 1, "", "DistributedOptimizer"], [31, 1, 1, "", "PostLocalSGDOptimizer"], [31, 1, 1, "", "ZeroRedundancyOptimizer"], [27, 0, 0, "-", "apply_optimizer_in_backward"], [27, 0, 0, "-", "functional_adadelta"], [27, 0, 0, "-", "functional_adagrad"], [27, 0, 0, "-", "functional_adam"], [27, 0, 0, "-", "functional_adamax"], [27, 0, 0, "-", "functional_adamw"], [27, 0, 0, "-", "functional_rmsprop"], [27, 0, 0, "-", "functional_rprop"], [27, 0, 0, "-", "functional_sgd"], [27, 0, 0, "-", "named_optimizer"], [27, 0, 0, "-", "optimizer"], [27, 0, 0, "-", "post_localSGD_optimizer"], [27, 0, 0, "-", "utils"], [27, 0, 0, "-", "zero_redundancy_optimizer"]], "torch.distributed.optim.DistributedOptimizer": [[31, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[31, 3, 1, "", "load_state_dict"], [31, 3, 1, "", "state_dict"], [31, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[31, 3, 1, "", "add_param_group"], [31, 3, 1, "", "consolidate_state_dict"], [31, 4, 1, "", "join_device"], [31, 3, 1, "", "join_hook"], [31, 4, 1, "", "join_process_group"], [31, 3, 1, "", "load_state_dict"], [31, 3, 1, "", "state_dict"], [31, 3, 1, "", "step"]], "torch.distributed.pipeline": [[27, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[2060, 1, 1, "", "Pipe"], [27, 0, 0, "-", "batchnorm"], [27, 0, 0, "-", "checkpoint"], [27, 0, 0, "-", "copy"], [27, 0, 0, "-", "dependency"], [27, 0, 0, "-", "microbatch"], [27, 0, 0, "-", "phony"], [27, 0, 0, "-", "pipe"], [27, 0, 0, "-", "pipeline"], [27, 0, 0, "-", "skip"], [27, 0, 0, "-", "stream"], [27, 0, 0, "-", "utils"], [27, 0, 0, "-", "worker"]], "torch.distributed.pipeline.sync.Pipe": [[2060, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip": [[27, 0, 0, "-", "layout"], [27, 0, 0, "-", "namespace"], [27, 0, 0, "-", "portal"], [27, 0, 0, "-", "skippable"], [27, 0, 0, "-", "tracker"]], "torch.distributed.pipeline.sync.skip.skippable": [[2060, 1, 1, "", "pop"], [2060, 5, 1, "", "skippable"], [2060, 1, 1, "", "stash"], [2060, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[2067, 1, 1, "", "BackendType"], [2067, 1, 1, "", "PyRRef"], [2067, 1, 1, "", "RpcBackendOptions"], [2067, 1, 1, "", "TensorPipeRpcBackendOptions"], [2067, 1, 1, "", "WorkerInfo"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "backend_registry"], [27, 0, 0, "-", "constants"], [27, 0, 0, "-", "functions"], [2067, 5, 1, "", "get_worker_info"], [2067, 5, 1, "", "init_rpc"], [27, 0, 0, "-", "internal"], [27, 0, 0, "-", "options"], [2067, 5, 1, "", "remote"], [2067, 5, 1, "", "rpc_async"], [2067, 5, 1, "", "rpc_sync"], [27, 0, 0, "-", "rref_proxy"], [27, 0, 0, "-", "server_process_global_profiler"], [2067, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[2067, 3, 1, "", "backward"], [2067, 3, 1, "", "confirmed_by_owner"], [2067, 3, 1, "", "is_owner"], [2067, 3, 1, "", "local_value"], [2067, 3, 1, "", "owner"], [2067, 3, 1, "", "owner_name"], [2067, 3, 1, "", "remote"], [2067, 3, 1, "", "rpc_async"], [2067, 3, 1, "", "rpc_sync"], [2067, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[2067, 4, 1, "", "init_method"], [2067, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[2067, 4, 1, "", "device_maps"], [2067, 4, 1, "", "devices"], [2067, 4, 1, "", "init_method"], [2067, 4, 1, "", "num_worker_threads"], [2067, 4, 1, "", "rpc_timeout"], [2067, 3, 1, "", "set_device_map"], [2067, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[2067, 4, 1, "", "id"], [2067, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[2067, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[32, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel": [[32, 1, 1, "", "ColwiseParallel"], [32, 1, 1, "", "PrepareModuleInput"], [32, 1, 1, "", "PrepareModuleOutput"], [32, 1, 1, "", "RowwiseParallel"], [32, 1, 1, "", "SequenceParallel"], [27, 0, 0, "-", "api"], [27, 0, 0, "-", "ddp"], [27, 0, 0, "-", "fsdp"], [27, 0, 0, "-", "input_reshard"], [27, 0, 0, "-", "loss"], [32, 5, 1, "", "loss_parallel"], [32, 5, 1, "", "parallelize_module"], [27, 0, 0, "-", "style"]], "torch.distributions": [[33, 0, 0, "-", "bernoulli"], [33, 0, 0, "-", "beta"], [33, 0, 0, "-", "binomial"], [33, 0, 0, "-", "categorical"], [33, 0, 0, "-", "cauchy"], [33, 0, 0, "-", "chi2"], [33, 0, 0, "-", "constraint_registry"], [33, 0, 0, "-", "constraints"], [33, 0, 0, "-", "continuous_bernoulli"], [33, 0, 0, "-", "dirichlet"], [33, 0, 0, "-", "distribution"], [33, 0, 0, "-", "exp_family"], [33, 0, 0, "-", "exponential"], [33, 0, 0, "-", "fishersnedecor"], [33, 0, 0, "-", "gamma"], [33, 0, 0, "-", "geometric"], [33, 0, 0, "-", "gumbel"], [33, 0, 0, "-", "half_cauchy"], [33, 0, 0, "-", "half_normal"], [33, 0, 0, "-", "independent"], [33, 0, 0, "-", "inverse_gamma"], [33, 0, 0, "-", "kl"], [33, 0, 0, "-", "kumaraswamy"], [33, 0, 0, "-", "laplace"], [33, 0, 0, "-", "lkj_cholesky"], [33, 0, 0, "-", "log_normal"], [33, 0, 0, "-", "logistic_normal"], [33, 0, 0, "-", "lowrank_multivariate_normal"], [33, 0, 0, "-", "mixture_same_family"], [33, 0, 0, "-", "multinomial"], [33, 0, 0, "-", "multivariate_normal"], [33, 0, 0, "-", "negative_binomial"], [33, 0, 0, "-", "normal"], [33, 0, 0, "-", "one_hot_categorical"], [33, 0, 0, "-", "pareto"], [33, 0, 0, "-", "poisson"], [33, 0, 0, "-", "relaxed_bernoulli"], [33, 0, 0, "-", "relaxed_categorical"], [33, 0, 0, "-", "studentT"], [33, 0, 0, "-", "transformed_distribution"], [33, 0, 0, "-", "transforms"], [33, 0, 0, "-", "uniform"], [33, 0, 0, "-", "utils"], [33, 0, 0, "-", "von_mises"], [33, 0, 0, "-", "weibull"], [33, 0, 0, "-", "wishart"]], "torch.distributions.bernoulli": [[33, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "enumerate_support"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_enumerate_support"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "param_shape"], [33, 4, 1, "", "probs"], [33, 3, 1, "", "sample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.beta": [[33, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[33, 2, 1, "", "arg_constraints"], [33, 4, 1, "", "concentration0"], [33, 4, 1, "", "concentration1"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.binomial": [[33, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "enumerate_support"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_enumerate_support"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "param_shape"], [33, 4, 1, "", "probs"], [33, 3, 1, "", "sample"], [33, 4, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.categorical": [[33, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "enumerate_support"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_enumerate_support"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "param_shape"], [33, 4, 1, "", "probs"], [33, 3, 1, "", "sample"], [33, 4, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[33, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.chi2": [[33, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[33, 2, 1, "", "arg_constraints"], [33, 4, 1, "", "df"], [33, 3, 1, "", "expand"]], "torch.distributions.constraint_registry": [[33, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[33, 3, 1, "", "register"]], "torch.distributions.constraints": [[33, 1, 1, "", "Constraint"], [33, 2, 1, "", "cat"], [33, 2, 1, "", "dependent_property"], [33, 2, 1, "", "greater_than"], [33, 2, 1, "", "greater_than_eq"], [33, 2, 1, "", "half_open_interval"], [33, 2, 1, "", "independent"], [33, 2, 1, "", "integer_interval"], [33, 2, 1, "", "interval"], [33, 2, 1, "", "less_than"], [33, 2, 1, "", "multinomial"], [33, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[33, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[33, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "param_shape"], [33, 4, 1, "", "probs"], [33, 3, 1, "", "rsample"], [33, 3, 1, "", "sample"], [33, 4, 1, "", "stddev"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[33, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.distribution": [[33, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[33, 4, 1, "", "arg_constraints"], [33, 4, 1, "", "batch_shape"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "enumerate_support"], [33, 4, 1, "", "event_shape"], [33, 3, 1, "", "expand"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "perplexity"], [33, 3, 1, "", "rsample"], [33, 3, 1, "", "sample"], [33, 3, 1, "", "sample_n"], [33, 3, 1, "", "set_default_validate_args"], [33, 4, 1, "", "stddev"], [33, 4, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[33, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[33, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[33, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 4, 1, "", "stddev"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[33, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.gamma": [[33, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.geometric": [[33, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "probs"], [33, 3, 1, "", "sample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[33, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "stddev"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[33, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "scale"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[33, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "scale"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.independent": [[33, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "enumerate_support"], [33, 3, 1, "", "expand"], [33, 4, 1, "", "has_enumerate_support"], [33, 4, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 3, 1, "", "sample"], [33, 4, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.inverse_gamma": [[33, 1, 1, "", "InverseGamma"]], "torch.distributions.inverse_gamma.InverseGamma": [[33, 2, 1, "", "arg_constraints"], [33, 4, 1, "", "concentration"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "rate"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.kl": [[33, 5, 1, "", "kl_divergence"], [33, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[33, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.laplace": [[33, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 4, 1, "", "stddev"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[33, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "expand"], [33, 3, 1, "", "log_prob"], [33, 3, 1, "", "sample"], [33, 2, 1, "", "support"]], "torch.distributions.log_normal": [[33, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 4, 1, "", "loc"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "scale"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[33, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[33, 2, 1, "", "arg_constraints"], [33, 4, 1, "", "covariance_matrix"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "precision_matrix"], [33, 3, 1, "", "rsample"], [33, 4, 1, "", "scale_tril"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[33, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 4, 1, "", "component_distribution"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mixture_distribution"], [33, 3, 1, "", "sample"], [33, 4, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[33, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "param_shape"], [33, 4, 1, "", "probs"], [33, 3, 1, "", "sample"], [33, 4, 1, "", "support"], [33, 2, 1, "", "total_count"], [33, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[33, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[33, 2, 1, "", "arg_constraints"], [33, 4, 1, "", "covariance_matrix"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "precision_matrix"], [33, 3, 1, "", "rsample"], [33, 4, 1, "", "scale_tril"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[33, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "expand"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "param_shape"], [33, 4, 1, "", "probs"], [33, 3, 1, "", "sample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.normal": [[33, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 3, 1, "", "sample"], [33, 4, 1, "", "stddev"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[33, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "enumerate_support"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_enumerate_support"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "param_shape"], [33, 4, 1, "", "probs"], [33, 3, 1, "", "sample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.pareto": [[33, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.poisson": [[33, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "expand"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "sample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[33, 1, 1, "", "LogitRelaxedBernoulli"], [33, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "expand"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "param_shape"], [33, 4, 1, "", "probs"], [33, 3, 1, "", "rsample"], [33, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "probs"], [33, 2, 1, "", "support"], [33, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[33, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "probs"], [33, 2, 1, "", "support"], [33, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[33, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[33, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "expand"], [33, 4, 1, "", "has_rsample"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 3, 1, "", "rsample"], [33, 3, 1, "", "sample"], [33, 4, 1, "", "support"]], "torch.distributions.transforms": [[33, 1, 1, "", "AbsTransform"], [33, 1, 1, "", "AffineTransform"], [33, 1, 1, "", "CatTransform"], [33, 1, 1, "", "ComposeTransform"], [33, 1, 1, "", "CorrCholeskyTransform"], [33, 1, 1, "", "CumulativeDistributionTransform"], [33, 1, 1, "", "ExpTransform"], [33, 1, 1, "", "IndependentTransform"], [33, 1, 1, "", "LowerCholeskyTransform"], [33, 1, 1, "", "PositiveDefiniteTransform"], [33, 1, 1, "", "PowerTransform"], [33, 1, 1, "", "ReshapeTransform"], [33, 1, 1, "", "SigmoidTransform"], [33, 1, 1, "", "SoftmaxTransform"], [33, 1, 1, "", "SoftplusTransform"], [33, 1, 1, "", "StackTransform"], [33, 1, 1, "", "StickBreakingTransform"], [33, 1, 1, "", "TanhTransform"], [33, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[33, 3, 1, "", "forward_shape"], [33, 4, 1, "", "inv"], [33, 3, 1, "", "inverse_shape"], [33, 3, 1, "", "log_abs_det_jacobian"], [33, 4, 1, "", "sign"]], "torch.distributions.uniform": [[33, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "cdf"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "icdf"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "rsample"], [33, 4, 1, "", "stddev"], [33, 4, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[33, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 3, 1, "", "sample"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.weibull": [[33, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[33, 2, 1, "", "arg_constraints"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.distributions.wishart": [[33, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[33, 2, 1, "", "arg_constraints"], [33, 4, 1, "", "covariance_matrix"], [33, 3, 1, "", "entropy"], [33, 3, 1, "", "expand"], [33, 2, 1, "", "has_rsample"], [33, 3, 1, "", "log_prob"], [33, 4, 1, "", "mean"], [33, 4, 1, "", "mode"], [33, 4, 1, "", "precision_matrix"], [33, 3, 1, "", "rsample"], [33, 4, 1, "", "scale_tril"], [33, 2, 1, "", "support"], [33, 4, 1, "", "variance"]], "torch.export": [[49, 2, 1, "", "Constraint"], [49, 1, 1, "", "ExportBackwardSignature"], [49, 1, 1, "", "ExportGraphSignature"], [49, 1, 1, "", "ExportedProgram"], [49, 1, 1, "", "ModuleCallEntry"], [49, 1, 1, "", "ModuleCallSignature"], [49, 0, 0, "-", "custom_obj"], [49, 5, 1, "", "dims"], [49, 0, 0, "-", "dynamic_shapes"], [49, 5, 1, "", "export"], [49, 0, 0, "-", "exported_program"], [49, 0, 0, "-", "graph_signature"], [49, 5, 1, "", "load"], [49, 5, 1, "", "register_dataclass"], [49, 5, 1, "", "save"], [49, 0, 0, "-", "unflatten"]], "torch.export.ExportedProgram": [[49, 3, 1, "", "buffers"], [49, 3, 1, "", "module"], [49, 3, 1, "", "named_buffers"], [49, 3, 1, "", "named_parameters"], [49, 3, 1, "", "parameters"], [49, 3, 1, "", "run_decompositions"]], "torch.export.dynamic_shapes": [[49, 5, 1, "", "Dim"], [49, 5, 1, "", "dynamic_dim"]], "torch.export.graph_signature": [[49, 1, 1, "", "CustomObjArgument"], [49, 1, 1, "", "ExportGraphSignature"], [49, 1, 1, "", "InputKind"], [49, 1, 1, "", "InputSpec"], [49, 1, 1, "", "OutputKind"], [49, 1, 1, "", "OutputSpec"]], "torch.export.graph_signature.ExportGraphSignature": [[49, 3, 1, "", "get_replace_hook"], [49, 3, 1, "", "replace_all_uses"]], "torch.export.unflatten": [[49, 1, 1, "", "FlatArgsAdapter"], [49, 1, 1, "", "InterpreterModule"], [49, 5, 1, "", "unflatten"]], "torch.export.unflatten.FlatArgsAdapter": [[49, 3, 1, "", "adapt"]], "torch.fft": [[1121, 5, 1, "", "fft"], [1122, 5, 1, "", "fft2"], [1123, 5, 1, "", "fftfreq"], [1124, 5, 1, "", "fftn"], [1125, 5, 1, "", "fftshift"], [1126, 5, 1, "", "hfft"], [1127, 5, 1, "", "hfft2"], [1128, 5, 1, "", "hfftn"], [1129, 5, 1, "", "ifft"], [1130, 5, 1, "", "ifft2"], [1131, 5, 1, "", "ifftn"], [1132, 5, 1, "", "ifftshift"], [1133, 5, 1, "", "ihfft"], [1134, 5, 1, "", "ihfft2"], [1135, 5, 1, "", "ihfftn"], [1136, 5, 1, "", "irfft"], [1137, 5, 1, "", "irfft2"], [1138, 5, 1, "", "irfftn"], [1139, 5, 1, "", "rfft"], [1140, 5, 1, "", "rfft2"], [1141, 5, 1, "", "rfftfreq"], [1142, 5, 1, "", "rfftn"]], "torch.func": [[1162, 5, 1, "", "functional_call"], [1163, 5, 1, "", "functionalize"], [1164, 5, 1, "", "grad"], [1165, 5, 1, "", "grad_and_value"], [1166, 5, 1, "", "hessian"], [1167, 5, 1, "", "jacfwd"], [1168, 5, 1, "", "jacrev"], [1169, 5, 1, "", "jvp"], [1170, 5, 1, "", "linearize"], [1171, 5, 1, "", "replace_all_batch_norm_modules_"], [1172, 5, 1, "", "stack_module_state"], [1173, 5, 1, "", "vjp"], [1174, 5, 1, "", "vmap"]], "torch.futures": [[60, 1, 1, "", "Future"], [60, 5, 1, "", "collect_all"], [60, 5, 1, "", "wait_all"]], "torch.futures.Future": [[60, 3, 1, "", "add_done_callback"], [60, 3, 1, "", "done"], [60, 3, 1, "", "set_exception"], [60, 3, 1, "", "set_result"], [60, 3, 1, "", "then"], [60, 3, 1, "", "value"], [60, 3, 1, "", "wait"]], "torch.fx": [[61, 1, 1, "", "Graph"], [61, 1, 1, "", "GraphModule"], [61, 1, 1, "", "Interpreter"], [61, 1, 1, "", "Node"], [61, 1, 1, "", "Proxy"], [61, 1, 1, "", "Tracer"], [61, 1, 1, "", "Transformer"], [61, 0, 0, "-", "annotate"], [61, 0, 0, "-", "config"], [61, 0, 0, "-", "experimental"], [61, 0, 0, "-", "graph"], [61, 0, 0, "-", "graph_module"], [61, 0, 0, "-", "immutable_collections"], [61, 0, 0, "-", "interpreter"], [61, 0, 0, "-", "node"], [61, 0, 0, "-", "operator_schemas"], [61, 0, 0, "-", "passes"], [61, 0, 0, "-", "proxy"], [61, 5, 1, "", "replace_pattern"], [61, 0, 0, "-", "subgraph_rewriter"], [61, 5, 1, "", "symbolic_trace"], [61, 0, 0, "-", "tensor_type"], [61, 0, 0, "-", "traceback"], [61, 5, 1, "", "wrap"]], "torch.fx.Graph": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "call_function"], [61, 3, 1, "", "call_method"], [61, 3, 1, "", "call_module"], [61, 3, 1, "", "create_node"], [61, 3, 1, "", "eliminate_dead_code"], [61, 3, 1, "", "erase_node"], [61, 3, 1, "", "find_nodes"], [61, 3, 1, "", "get_attr"], [61, 3, 1, "", "graph_copy"], [61, 3, 1, "", "inserting_after"], [61, 3, 1, "", "inserting_before"], [61, 3, 1, "", "lint"], [61, 3, 1, "", "node_copy"], [61, 4, 1, "", "nodes"], [61, 3, 1, "", "on_generate_code"], [61, 3, 1, "", "output"], [61, 3, 1, "", "placeholder"], [61, 3, 1, "", "print_tabular"], [61, 3, 1, "", "process_inputs"], [61, 3, 1, "", "process_outputs"], [61, 3, 1, "", "python_code"], [61, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "add_submodule"], [61, 4, 1, "", "code"], [61, 3, 1, "", "delete_all_unused_submodules"], [61, 3, 1, "", "delete_submodule"], [61, 4, 1, "", "graph"], [61, 3, 1, "", "print_readable"], [61, 3, 1, "", "recompile"], [61, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[61, 3, 1, "", "boxed_run"], [61, 3, 1, "", "call_function"], [61, 3, 1, "", "call_method"], [61, 3, 1, "", "call_module"], [61, 3, 1, "", "fetch_args_kwargs_from_env"], [61, 3, 1, "", "fetch_attr"], [61, 3, 1, "", "get_attr"], [61, 3, 1, "", "map_nodes_to_values"], [61, 3, 1, "", "output"], [61, 3, 1, "", "placeholder"], [61, 3, 1, "", "run"], [61, 3, 1, "", "run_node"]], "torch.fx.Node": [[61, 4, 1, "", "all_input_nodes"], [61, 3, 1, "", "append"], [61, 4, 1, "", "args"], [61, 3, 1, "", "format_node"], [61, 3, 1, "", "insert_arg"], [61, 3, 1, "", "is_impure"], [61, 4, 1, "", "kwargs"], [61, 4, 1, "", "next"], [61, 3, 1, "", "normalized_arguments"], [61, 3, 1, "", "prepend"], [61, 4, 1, "", "prev"], [61, 3, 1, "", "replace_all_uses_with"], [61, 3, 1, "", "replace_input_with"], [61, 4, 1, "", "stack_trace"], [61, 3, 1, "", "update_arg"], [61, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[61, 3, 1, "", "call_module"], [61, 3, 1, "", "create_arg"], [61, 3, 1, "", "create_args_for_root"], [61, 3, 1, "", "create_node"], [61, 3, 1, "", "create_proxy"], [61, 3, 1, "", "getattr"], [61, 3, 1, "", "is_leaf_module"], [61, 3, 1, "", "iter"], [61, 3, 1, "", "keys"], [61, 3, 1, "", "path_of_module"], [61, 3, 1, "", "proxy"], [61, 3, 1, "", "to_bool"], [61, 3, 1, "", "trace"]], "torch.fx.Transformer": [[61, 3, 1, "", "call_function"], [61, 3, 1, "", "call_module"], [61, 3, 1, "", "get_attr"], [61, 3, 1, "", "placeholder"], [61, 3, 1, "", "transform"]], "torch.fx.experimental": [[61, 0, 0, "-", "accelerator_partitioner"], [61, 0, 0, "-", "const_fold"], [61, 0, 0, "-", "debug"], [61, 0, 0, "-", "graph_gradual_typechecker"], [61, 0, 0, "-", "merge_matmul"], [61, 0, 0, "-", "meta_tracer"], [61, 0, 0, "-", "migrate_gradual_types"], [61, 0, 0, "-", "normalize"], [61, 0, 0, "-", "optimization"], [61, 0, 0, "-", "partitioner_utils"], [61, 0, 0, "-", "proxy_tensor"], [61, 0, 0, "-", "recording"], [61, 0, 0, "-", "refinement_types"], [61, 0, 0, "-", "rewriter"], [61, 0, 0, "-", "schema_type_annotation"], [61, 0, 0, "-", "sym_node"], [62, 0, 0, "-", "symbolic_shapes"], [61, 0, 0, "-", "unification"], [61, 0, 0, "-", "unify_refinements"], [61, 0, 0, "-", "validator"]], "torch.fx.experimental.migrate_gradual_types": [[61, 0, 0, "-", "constraint"], [61, 0, 0, "-", "constraint_generator"], [61, 0, 0, "-", "constraint_transformation"], [61, 0, 0, "-", "operation"], [61, 0, 0, "-", "transform_to_z3"], [61, 0, 0, "-", "util"], [61, 0, 0, "-", "z3_types"]], "torch.fx.experimental.symbolic_shapes": [[1175, 1, 1, "", "CallMethodKey"], [1176, 1, 1, "", "ConvertIntKey"], [1177, 1, 1, "", "DimConstraints"], [1178, 1, 1, "", "DimDynamic"], [1179, 1, 1, "", "EqualityConstraint"], [1180, 1, 1, "", "RelaxedUnspecConstraint"], [1181, 1, 1, "", "ShapeEnv"], [1182, 1, 1, "", "ShapeEnvSettings"], [1183, 1, 1, "", "StatefulSymbolicContext"], [1184, 1, 1, "", "StatelessSymbolicContext"], [1185, 1, 1, "", "StrictMinMaxConstraint"], [1186, 1, 1, "", "SubclassSymbolicContext"], [1187, 1, 1, "", "SymbolicContext"], [1188, 5, 1, "", "canonicalize_bool_expr"], [1189, 5, 1, "", "check_consistent"], [1190, 5, 1, "", "compute_unbacked_bindings"], [1191, 5, 1, "", "constrain_range"], [1192, 5, 1, "", "constrain_unify"], [1193, 5, 1, "", "definitely_false"], [1194, 5, 1, "", "definitely_true"], [1195, 5, 1, "", "guard_size_oblivious"], [1196, 5, 1, "", "has_free_symbols"], [1197, 5, 1, "", "hint_int"], [1198, 5, 1, "", "is_concrete_bool"], [1199, 5, 1, "", "is_concrete_int"], [1200, 5, 1, "", "lru_cache"], [1201, 5, 1, "", "parallel_and"], [1202, 5, 1, "", "parallel_or"], [1203, 5, 1, "", "rebind_unbacked"], [1204, 5, 1, "", "statically_known_true"], [1205, 5, 1, "", "sym_eq"]], "torch.fx.experimental.symbolic_shapes.CallMethodKey": [[1175, 3, 1, "", "get"]], "torch.fx.experimental.symbolic_shapes.ConvertIntKey": [[1176, 3, 1, "", "get"]], "torch.fx.experimental.symbolic_shapes.DimConstraints": [[1177, 3, 1, "", "add"], [1177, 3, 1, "", "add_equality"], [1177, 3, 1, "", "forced_specializations"], [1177, 3, 1, "", "prettify_results"], [1177, 3, 1, "", "remove_redundant_dynamic_results"], [1177, 3, 1, "", "rewrite_with_congruences"], [1177, 3, 1, "", "solve"]], "torch.fx.experimental.symbolic_shapes.ShapeEnv": [[1181, 3, 1, "", "add_var_to_val"], [1181, 3, 1, "", "bind_symbols"], [1181, 3, 1, "", "bound_sympy"], [1181, 3, 1, "", "check_equal"], [1181, 3, 1, "", "cleanup"], [1181, 3, 1, "", "create_symbol"], [1181, 3, 1, "", "create_symbolic_sizes_strides_storage_offset"], [1181, 3, 1, "", "create_symboolnode"], [1181, 3, 1, "", "create_symintnode"], [1181, 3, 1, "", "create_unbacked_symbool"], [1181, 3, 1, "", "create_unbacked_symfloat"], [1181, 3, 1, "", "create_unbacked_symint"], [1181, 3, 1, "", "create_unspecified_symbol"], [1181, 3, 1, "", "create_unspecified_symint_and_symbol"], [1181, 3, 1, "", "defer_runtime_assert"], [1181, 3, 1, "", "evaluate_expr"], [1181, 3, 1, "", "evaluate_guards_expression"], [1181, 3, 1, "", "evaluate_guards_for_args"], [1181, 3, 1, "", "format_guards"], [1181, 3, 1, "", "freeze"], [1181, 3, 1, "", "get_nontrivial_guards"], [1181, 3, 1, "", "is_unbacked_symint"], [1181, 3, 1, "", "produce_guards"], [1181, 3, 1, "", "produce_guards_expression"], [1181, 3, 1, "", "replace"], [1181, 3, 1, "", "simplify"], [1181, 3, 1, "", "size_hint"], [1181, 3, 1, "", "suppress_guards"]], "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint": [[1185, 3, 1, "", "render"]], "torch.fx.experimental.unification": [[61, 0, 0, "-", "core"], [61, 0, 0, "-", "dispatch"], [61, 0, 0, "-", "match"], [61, 0, 0, "-", "more"], [61, 0, 0, "-", "multipledispatch"], [61, 0, 0, "-", "unification_tools"], [61, 0, 0, "-", "utils"], [61, 0, 0, "-", "variable"]], "torch.fx.experimental.unification.multipledispatch": [[61, 0, 0, "-", "conflict"], [61, 0, 0, "-", "core"], [61, 0, 0, "-", "dispatcher"], [61, 0, 0, "-", "utils"], [61, 0, 0, "-", "variadic"]], "torch.fx.passes": [[61, 0, 0, "-", "annotate_getitem_nodes"], [61, 0, 0, "-", "backends"], [61, 0, 0, "-", "dialect"], [61, 0, 0, "-", "fake_tensor_prop"], [61, 0, 0, "-", "graph_drawer"], [61, 0, 0, "-", "graph_manipulation"], [61, 0, 0, "-", "infra"], [61, 0, 0, "-", "net_min_base"], [61, 0, 0, "-", "operator_support"], [61, 0, 0, "-", "param_fetch"], [61, 0, 0, "-", "pass_manager"], [61, 0, 0, "-", "reinplace"], [61, 0, 0, "-", "runtime_assert"], [61, 0, 0, "-", "shape_prop"], [61, 0, 0, "-", "split_module"], [61, 0, 0, "-", "split_utils"], [61, 0, 0, "-", "splitter_base"], [61, 0, 0, "-", "tests"], [61, 0, 0, "-", "tools_common"], [61, 0, 0, "-", "utils"]], "torch.fx.passes.backends": [[61, 0, 0, "-", "cudagraphs"]], "torch.fx.passes.dialect": [[61, 0, 0, "-", "common"]], "torch.fx.passes.dialect.common": [[61, 0, 0, "-", "cse_pass"]], "torch.fx.passes.infra": [[61, 0, 0, "-", "partitioner"], [61, 0, 0, "-", "pass_base"], [61, 0, 0, "-", "pass_manager"]], "torch.fx.passes.tests": [[61, 0, 0, "-", "test_pass_manager"]], "torch.fx.passes.utils": [[61, 0, 0, "-", "common"], [61, 0, 0, "-", "fuser_utils"], [61, 0, 0, "-", "matcher_utils"], [61, 0, 0, "-", "matcher_with_name_node_map_utils"], [61, 0, 0, "-", "source_matcher_utils"]], "torch.hub": [[2004, 5, 1, "", "download_url_to_file"], [2004, 5, 1, "", "get_dir"], [2004, 5, 1, "", "help"], [2004, 5, 1, "", "list"], [2004, 5, 1, "", "load"], [2004, 5, 1, "", "load_state_dict_from_url"], [2004, 5, 1, "", "set_dir"]], "torch.jit": [[1263, 1, 1, "", "Attribute"], [1264, 1, 1, "", "ScriptFunction"], [1265, 1, 1, "", "ScriptModule"], [1266, 5, 1, "", "annotate"], [2006, 0, 0, "-", "annotations"], [1267, 5, 1, "", "enable_onednn_fusion"], [2006, 5, 1, "", "export"], [1268, 5, 1, "", "fork"], [1269, 5, 1, "", "freeze"], [2006, 0, 0, "-", "frontend"], [2006, 0, 0, "-", "generate_bytecode"], [1270, 5, 1, "", "ignore"], [1271, 5, 1, "", "interface"], [2008, 5, 1, "", "is_scripting"], [2008, 5, 1, "", "is_tracing"], [1272, 5, 1, "", "isinstance"], [1273, 5, 1, "", "load"], [2006, 0, 0, "-", "mobile"], [1274, 5, 1, "", "onednn_fusion_enabled"], [1275, 5, 1, "", "optimize_for_inference"], [2006, 0, 0, "-", "quantized"], [1276, 5, 1, "", "save"], [1277, 5, 1, "", "script"], [1278, 5, 1, "", "script_if_tracing"], [1279, 5, 1, "", "set_fusion_strategy"], [1280, 1, 1, "", "strict_fusion"], [2007, 0, 0, "-", "supported_ops"], [1281, 5, 1, "", "trace"], [1282, 5, 1, "", "trace_module"], [2011, 0, 0, "-", "unsupported_tensor_ops"], [1283, 5, 1, "", "unused"], [1284, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1263, 3, 1, "", "count"], [1263, 3, 1, "", "index"], [1263, 2, 1, "", "type"], [1263, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1264, 3, 1, "", "get_debug_state"], [1264, 3, 1, "", "save"], [1264, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1265, 3, 1, "", "add_module"], [1265, 3, 1, "", "apply"], [1265, 3, 1, "", "bfloat16"], [1265, 3, 1, "", "buffers"], [1265, 3, 1, "", "children"], [1265, 4, 1, "", "code"], [1265, 4, 1, "", "code_with_constants"], [1265, 3, 1, "", "compile"], [1265, 3, 1, "", "cpu"], [1265, 3, 1, "", "cuda"], [1265, 3, 1, "", "double"], [1265, 3, 1, "", "eval"], [1265, 3, 1, "", "extra_repr"], [1265, 3, 1, "", "float"], [1265, 3, 1, "", "get_buffer"], [1265, 3, 1, "", "get_extra_state"], [1265, 3, 1, "", "get_parameter"], [1265, 3, 1, "", "get_submodule"], [1265, 4, 1, "", "graph"], [1265, 3, 1, "", "half"], [1265, 4, 1, "", "inlined_graph"], [1265, 3, 1, "", "ipu"], [1265, 3, 1, "", "load_state_dict"], [1265, 3, 1, "", "modules"], [1265, 3, 1, "", "named_buffers"], [1265, 3, 1, "", "named_children"], [1265, 3, 1, "", "named_modules"], [1265, 3, 1, "", "named_parameters"], [1265, 3, 1, "", "parameters"], [1265, 3, 1, "", "register_backward_hook"], [1265, 3, 1, "", "register_buffer"], [1265, 3, 1, "", "register_forward_hook"], [1265, 3, 1, "", "register_forward_pre_hook"], [1265, 3, 1, "", "register_full_backward_hook"], [1265, 3, 1, "", "register_full_backward_pre_hook"], [1265, 3, 1, "", "register_load_state_dict_post_hook"], [1265, 3, 1, "", "register_module"], [1265, 3, 1, "", "register_parameter"], [1265, 3, 1, "", "register_state_dict_pre_hook"], [1265, 3, 1, "", "requires_grad_"], [1265, 3, 1, "", "save"], [1265, 3, 1, "", "set_extra_state"], [1265, 3, 1, "", "share_memory"], [1265, 3, 1, "", "state_dict"], [1265, 3, 1, "", "to"], [1265, 3, 1, "", "to_empty"], [1265, 3, 1, "", "train"], [1265, 3, 1, "", "type"], [1265, 3, 1, "", "xpu"], [1265, 3, 1, "", "zero_grad"]], "torch.library": [[2013, 1, 1, "", "Library"], [2013, 5, 1, "", "custom_op"], [2013, 5, 1, "", "define"], [2013, 5, 1, "", "fallthrough_kernel"], [2013, 5, 1, "", "get_ctx"], [2013, 5, 1, "", "impl"], [2013, 5, 1, "", "impl_abstract"], [2013, 5, 1, "", "opcheck"], [2013, 5, 1, "", "register_autograd"], [2013, 5, 1, "", "register_fake"], [2013, 5, 1, "", "register_kernel"]], "torch.library.Library": [[2013, 3, 1, "", "define"], [2013, 3, 1, "", "impl"]], "torch.linalg": [[1295, 5, 1, "", "cholesky"], [1296, 5, 1, "", "cholesky_ex"], [1297, 5, 1, "", "cond"], [1298, 5, 1, "", "cross"], [1299, 5, 1, "", "det"], [1300, 5, 1, "", "diagonal"], [1301, 5, 1, "", "eig"], [1302, 5, 1, "", "eigh"], [1303, 5, 1, "", "eigvals"], [1304, 5, 1, "", "eigvalsh"], [1305, 5, 1, "", "householder_product"], [1306, 5, 1, "", "inv"], [1307, 5, 1, "", "inv_ex"], [1308, 5, 1, "", "ldl_factor"], [1309, 5, 1, "", "ldl_factor_ex"], [1310, 5, 1, "", "ldl_solve"], [1311, 5, 1, "", "lstsq"], [1312, 5, 1, "", "lu"], [1313, 5, 1, "", "lu_factor"], [1314, 5, 1, "", "lu_factor_ex"], [1315, 5, 1, "", "lu_solve"], [1316, 5, 1, "", "matmul"], [1317, 5, 1, "", "matrix_exp"], [1318, 5, 1, "", "matrix_norm"], [1319, 5, 1, "", "matrix_power"], [1320, 5, 1, "", "matrix_rank"], [1321, 5, 1, "", "multi_dot"], [1322, 5, 1, "", "norm"], [1323, 5, 1, "", "pinv"], [1324, 5, 1, "", "qr"], [1325, 5, 1, "", "slogdet"], [1326, 5, 1, "", "solve"], [1327, 5, 1, "", "solve_ex"], [1328, 5, 1, "", "solve_triangular"], [1329, 5, 1, "", "svd"], [1330, 5, 1, "", "svdvals"], [1331, 5, 1, "", "tensorinv"], [1332, 5, 1, "", "tensorsolve"], [1333, 5, 1, "", "vander"], [1334, 5, 1, "", "vecdot"], [1335, 5, 1, "", "vector_norm"]], "torch.masked": [[2016, 0, 0, "-", "maskedtensor"]], "torch.masked.maskedtensor": [[2016, 0, 0, "-", "binary"], [2016, 0, 0, "-", "core"], [2016, 0, 0, "-", "creation"], [2016, 0, 0, "-", "passthrough"], [2016, 0, 0, "-", "reductions"], [2016, 0, 0, "-", "unary"]], "torch.monitor": [[2021, 1, 1, "", "Aggregation"], [2021, 1, 1, "", "Event"], [2021, 1, 1, "", "EventHandlerHandle"], [2021, 1, 1, "", "Stat"], [2021, 1, 1, "", "TensorboardEventHandler"], [2021, 1, 1, "", "data_value_t"], [2021, 5, 1, "", "log_event"], [2021, 5, 1, "", "register_event_handler"], [2021, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[2021, 4, 1, "", "name"]], "torch.monitor.Event": [[2021, 3, 1, "", "__init__"], [2021, 4, 1, "", "data"], [2021, 4, 1, "", "name"], [2021, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[2021, 3, 1, "", "__init__"], [2021, 3, 1, "", "add"], [2021, 4, 1, "", "count"], [2021, 3, 1, "", "get"], [2021, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[2021, 3, 1, "", "__init__"]], "torch.mps": [[1374, 5, 1, "", "current_allocated_memory"], [1375, 5, 1, "", "device_count"], [1376, 5, 1, "", "driver_allocated_memory"], [1377, 5, 1, "", "empty_cache"], [2022, 0, 0, "-", "event"], [1379, 5, 1, "", "get_rng_state"], [1380, 5, 1, "", "manual_seed"], [2022, 0, 0, "-", "profiler"], [1384, 5, 1, "", "seed"], [1385, 5, 1, "", "set_per_process_memory_fraction"], [1386, 5, 1, "", "set_rng_state"], [1387, 5, 1, "", "synchronize"]], "torch.mps.event": [[1378, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1378, 3, 1, "", "elapsed_time"], [1378, 3, 1, "", "query"], [1378, 3, 1, "", "record"], [1378, 3, 1, "", "synchronize"], [1378, 3, 1, "", "wait"]], "torch.mps.profiler": [[1381, 5, 1, "", "profile"], [1382, 5, 1, "", "start"], [1383, 5, 1, "", "stop"]], "torch.mtia": [[1389, 6, 1, "", "DeferredMtiaCallError"], [1390, 1, 1, "", "Event"], [1391, 1, 1, "", "Stream"], [1392, 1, 1, "", "StreamContext"], [1393, 5, 1, "", "current_device"], [1394, 5, 1, "", "current_stream"], [1395, 5, 1, "", "default_stream"], [1396, 1, 1, "", "device"], [1397, 5, 1, "", "device_count"], [1398, 5, 1, "", "init"], [1399, 5, 1, "", "is_available"], [1400, 5, 1, "", "is_initialized"], [1401, 5, 1, "", "set_stream"], [1402, 5, 1, "", "stream"], [1403, 5, 1, "", "synchronize"]], "torch.multiprocessing": [[2024, 1, 1, "", "SpawnContext"], [2024, 5, 1, "", "get_all_sharing_strategies"], [2024, 5, 1, "", "get_sharing_strategy"], [2024, 0, 0, "-", "pool"], [2024, 0, 0, "-", "queue"], [2024, 0, 0, "-", "reductions"], [2024, 5, 1, "", "set_sharing_strategy"], [2024, 0, 0, "-", "spawn"]], "torch.multiprocessing.SpawnContext": [[2024, 3, 1, "", "join"]], "torch.multiprocessing.spawn": [[2024, 5, 1, "", "spawn"]], "torch.nested": [[2027, 5, 1, "", "as_nested_tensor"], [2027, 5, 1, "", "nested_tensor"], [2027, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1420, 1, 1, "", "AdaptiveAvgPool1d"], [1421, 1, 1, "", "AdaptiveAvgPool2d"], [1422, 1, 1, "", "AdaptiveAvgPool3d"], [1423, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1424, 1, 1, "", "AdaptiveMaxPool1d"], [1425, 1, 1, "", "AdaptiveMaxPool2d"], [1426, 1, 1, "", "AdaptiveMaxPool3d"], [1427, 1, 1, "", "AlphaDropout"], [1428, 1, 1, "", "AvgPool1d"], [1429, 1, 1, "", "AvgPool2d"], [1430, 1, 1, "", "AvgPool3d"], [1431, 1, 1, "", "BCELoss"], [1432, 1, 1, "", "BCEWithLogitsLoss"], [1433, 1, 1, "", "BatchNorm1d"], [1434, 1, 1, "", "BatchNorm2d"], [1435, 1, 1, "", "BatchNorm3d"], [1436, 1, 1, "", "Bilinear"], [1437, 1, 1, "", "CELU"], [1438, 1, 1, "", "CTCLoss"], [1439, 1, 1, "", "ChannelShuffle"], [1440, 1, 1, "", "CircularPad1d"], [1441, 1, 1, "", "CircularPad2d"], [1442, 1, 1, "", "CircularPad3d"], [1443, 1, 1, "", "ConstantPad1d"], [1444, 1, 1, "", "ConstantPad2d"], [1445, 1, 1, "", "ConstantPad3d"], [1446, 1, 1, "", "Conv1d"], [1447, 1, 1, "", "Conv2d"], [1448, 1, 1, "", "Conv3d"], [1449, 1, 1, "", "ConvTranspose1d"], [1450, 1, 1, "", "ConvTranspose2d"], [1451, 1, 1, "", "ConvTranspose3d"], [1452, 1, 1, "", "CosineEmbeddingLoss"], [1453, 1, 1, "", "CosineSimilarity"], [1454, 1, 1, "", "CrossEntropyLoss"], [1455, 1, 1, "", "DataParallel"], [1456, 1, 1, "", "Dropout"], [1457, 1, 1, "", "Dropout1d"], [1458, 1, 1, "", "Dropout2d"], [1459, 1, 1, "", "Dropout3d"], [1460, 1, 1, "", "ELU"], [1461, 1, 1, "", "Embedding"], [1462, 1, 1, "", "EmbeddingBag"], [1463, 1, 1, "", "FeatureAlphaDropout"], [1464, 1, 1, "", "Flatten"], [1465, 1, 1, "", "Fold"], [1466, 1, 1, "", "FractionalMaxPool2d"], [1467, 1, 1, "", "FractionalMaxPool3d"], [1468, 1, 1, "", "GELU"], [1469, 1, 1, "", "GLU"], [1470, 1, 1, "", "GRU"], [1471, 1, 1, "", "GRUCell"], [1472, 1, 1, "", "GaussianNLLLoss"], [1473, 1, 1, "", "GroupNorm"], [1474, 1, 1, "", "Hardshrink"], [1475, 1, 1, "", "Hardsigmoid"], [1476, 1, 1, "", "Hardswish"], [1477, 1, 1, "", "Hardtanh"], [1478, 1, 1, "", "HingeEmbeddingLoss"], [1479, 1, 1, "", "HuberLoss"], [1480, 1, 1, "", "Identity"], [1481, 1, 1, "", "InstanceNorm1d"], [1482, 1, 1, "", "InstanceNorm2d"], [1483, 1, 1, "", "InstanceNorm3d"], [1484, 1, 1, "", "KLDivLoss"], [1485, 1, 1, "", "L1Loss"], [1486, 1, 1, "", "LPPool1d"], [1487, 1, 1, "", "LPPool2d"], [1488, 1, 1, "", "LPPool3d"], [1489, 1, 1, "", "LSTM"], [1490, 1, 1, "", "LSTMCell"], [1491, 1, 1, "", "LayerNorm"], [1492, 1, 1, "", "LazyBatchNorm1d"], [1493, 1, 1, "", "LazyBatchNorm2d"], [1494, 1, 1, "", "LazyBatchNorm3d"], [1495, 1, 1, "", "LazyConv1d"], [1496, 1, 1, "", "LazyConv2d"], [1497, 1, 1, "", "LazyConv3d"], [1498, 1, 1, "", "LazyConvTranspose1d"], [1499, 1, 1, "", "LazyConvTranspose2d"], [1500, 1, 1, "", "LazyConvTranspose3d"], [1501, 1, 1, "", "LazyInstanceNorm1d"], [1502, 1, 1, "", "LazyInstanceNorm2d"], [1503, 1, 1, "", "LazyInstanceNorm3d"], [1504, 1, 1, "", "LazyLinear"], [1505, 1, 1, "", "LeakyReLU"], [1506, 1, 1, "", "Linear"], [1507, 1, 1, "", "LocalResponseNorm"], [1508, 1, 1, "", "LogSigmoid"], [1509, 1, 1, "", "LogSoftmax"], [1510, 1, 1, "", "MSELoss"], [1511, 1, 1, "", "MarginRankingLoss"], [1512, 1, 1, "", "MaxPool1d"], [1513, 1, 1, "", "MaxPool2d"], [1514, 1, 1, "", "MaxPool3d"], [1515, 1, 1, "", "MaxUnpool1d"], [1516, 1, 1, "", "MaxUnpool2d"], [1517, 1, 1, "", "MaxUnpool3d"], [1518, 1, 1, "", "Mish"], [1519, 1, 1, "", "Module"], [1520, 1, 1, "", "ModuleDict"], [1521, 1, 1, "", "ModuleList"], [1522, 1, 1, "", "MultiLabelMarginLoss"], [1523, 1, 1, "", "MultiLabelSoftMarginLoss"], [1524, 1, 1, "", "MultiMarginLoss"], [1525, 1, 1, "", "MultiheadAttention"], [1526, 1, 1, "", "NLLLoss"], [1527, 1, 1, "", "PReLU"], [1528, 1, 1, "", "PairwiseDistance"], [1529, 1, 1, "", "ParameterDict"], [1530, 1, 1, "", "ParameterList"], [1531, 1, 1, "", "PixelShuffle"], [1532, 1, 1, "", "PixelUnshuffle"], [1533, 1, 1, "", "PoissonNLLLoss"], [1534, 1, 1, "", "RMSNorm"], [1535, 1, 1, "", "RNN"], [1536, 1, 1, "", "RNNBase"], [1537, 1, 1, "", "RNNCell"], [1538, 1, 1, "", "RReLU"], [1539, 1, 1, "", "ReLU"], [1540, 1, 1, "", "ReLU6"], [1541, 1, 1, "", "ReflectionPad1d"], [1542, 1, 1, "", "ReflectionPad2d"], [1543, 1, 1, "", "ReflectionPad3d"], [1544, 1, 1, "", "ReplicationPad1d"], [1545, 1, 1, "", "ReplicationPad2d"], [1546, 1, 1, "", "ReplicationPad3d"], [1547, 1, 1, "", "SELU"], [1548, 1, 1, "", "Sequential"], [1549, 1, 1, "", "SiLU"], [1550, 1, 1, "", "Sigmoid"], [1551, 1, 1, "", "SmoothL1Loss"], [1552, 1, 1, "", "SoftMarginLoss"], [1553, 1, 1, "", "Softmax"], [1554, 1, 1, "", "Softmax2d"], [1555, 1, 1, "", "Softmin"], [1556, 1, 1, "", "Softplus"], [1557, 1, 1, "", "Softshrink"], [1558, 1, 1, "", "Softsign"], [1559, 1, 1, "", "SyncBatchNorm"], [1560, 1, 1, "", "Tanh"], [1561, 1, 1, "", "Tanhshrink"], [1562, 1, 1, "", "Threshold"], [1563, 1, 1, "", "Transformer"], [1564, 1, 1, "", "TransformerDecoder"], [1565, 1, 1, "", "TransformerDecoderLayer"], [1566, 1, 1, "", "TransformerEncoder"], [1567, 1, 1, "", "TransformerEncoderLayer"], [1568, 1, 1, "", "TripletMarginLoss"], [1569, 1, 1, "", "TripletMarginWithDistanceLoss"], [1570, 1, 1, "", "Unflatten"], [1571, 1, 1, "", "Unfold"], [1572, 1, 1, "", "Upsample"], [1573, 1, 1, "", "UpsamplingBilinear2d"], [1574, 1, 1, "", "UpsamplingNearest2d"], [1575, 1, 1, "", "ZeroPad1d"], [1576, 1, 1, "", "ZeroPad2d"], [1577, 1, 1, "", "ZeroPad3d"], [2029, 0, 0, "-", "attention"], [2028, 0, 0, "-", "backends"], [2028, 0, 0, "-", "common_types"], [2028, 0, 0, "-", "cpp"], [2028, 0, 0, "-", "functional"], [2028, 0, 0, "-", "grad"], [2028, 0, 0, "-", "init"], [2065, 0, 0, "-", "intrinsic"], [2028, 0, 0, "-", "modules"], [2028, 0, 0, "-", "parallel"], [2028, 0, 0, "-", "parameter"], [2065, 0, 0, "-", "qat"], [2065, 0, 0, "-", "quantizable"], [2065, 0, 0, "-", "quantized"], [2028, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1423, 3, 1, "", "log_prob"], [1423, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1461, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1462, 3, 1, "", "forward"], [1462, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1492, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1493, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1494, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1495, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1496, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1497, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1498, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1499, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1500, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1501, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1502, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1503, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1504, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1519, 3, 1, "", "add_module"], [1519, 3, 1, "", "apply"], [1519, 3, 1, "", "bfloat16"], [1519, 3, 1, "", "buffers"], [1519, 3, 1, "", "children"], [1519, 3, 1, "", "compile"], [1519, 3, 1, "", "cpu"], [1519, 3, 1, "", "cuda"], [1519, 3, 1, "", "double"], [1519, 3, 1, "", "eval"], [1519, 3, 1, "", "extra_repr"], [1519, 3, 1, "", "float"], [1519, 3, 1, "", "forward"], [1519, 3, 1, "", "get_buffer"], [1519, 3, 1, "", "get_extra_state"], [1519, 3, 1, "", "get_parameter"], [1519, 3, 1, "", "get_submodule"], [1519, 3, 1, "", "half"], [1519, 3, 1, "", "ipu"], [1519, 3, 1, "", "load_state_dict"], [1519, 3, 1, "", "modules"], [1519, 3, 1, "", "named_buffers"], [1519, 3, 1, "", "named_children"], [1519, 3, 1, "", "named_modules"], [1519, 3, 1, "", "named_parameters"], [1519, 3, 1, "", "parameters"], [1519, 3, 1, "", "register_backward_hook"], [1519, 3, 1, "", "register_buffer"], [1519, 3, 1, "", "register_forward_hook"], [1519, 3, 1, "", "register_forward_pre_hook"], [1519, 3, 1, "", "register_full_backward_hook"], [1519, 3, 1, "", "register_full_backward_pre_hook"], [1519, 3, 1, "", "register_load_state_dict_post_hook"], [1519, 3, 1, "", "register_module"], [1519, 3, 1, "", "register_parameter"], [1519, 3, 1, "", "register_state_dict_pre_hook"], [1519, 3, 1, "", "requires_grad_"], [1519, 3, 1, "", "set_extra_state"], [1519, 3, 1, "", "share_memory"], [1519, 3, 1, "", "state_dict"], [1519, 3, 1, "", "to"], [1519, 3, 1, "", "to_empty"], [1519, 3, 1, "", "train"], [1519, 3, 1, "", "type"], [1519, 3, 1, "", "xpu"], [1519, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1520, 3, 1, "", "clear"], [1520, 3, 1, "", "items"], [1520, 3, 1, "", "keys"], [1520, 3, 1, "", "pop"], [1520, 3, 1, "", "update"], [1520, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1521, 3, 1, "", "append"], [1521, 3, 1, "", "extend"], [1521, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1525, 3, 1, "", "forward"], [1525, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1529, 3, 1, "", "clear"], [1529, 3, 1, "", "copy"], [1529, 3, 1, "", "fromkeys"], [1529, 3, 1, "", "get"], [1529, 3, 1, "", "items"], [1529, 3, 1, "", "keys"], [1529, 3, 1, "", "pop"], [1529, 3, 1, "", "popitem"], [1529, 3, 1, "", "setdefault"], [1529, 3, 1, "", "update"], [1529, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1530, 3, 1, "", "append"], [1530, 3, 1, "", "extend"]], "torch.nn.RMSNorm": [[1534, 3, 1, "", "extra_repr"], [1534, 3, 1, "", "forward"], [1534, 3, 1, "", "reset_parameters"]], "torch.nn.RNNBase": [[1536, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1548, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1559, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1563, 3, 1, "", "forward"], [1563, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1564, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1565, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1566, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1567, 3, 1, "", "forward"]], "torch.nn.attention": [[1578, 1, 1, "", "SDPBackend"], [2030, 0, 0, "-", "bias"], [1583, 5, 1, "", "sdpa_kernel"]], "torch.nn.attention.SDPBackend": [[1578, 4, 1, "", "name"]], "torch.nn.attention.bias": [[1579, 1, 1, "", "CausalBias"], [1580, 1, 1, "", "CausalVariant"], [1581, 5, 1, "", "causal_lower_right"], [1582, 5, 1, "", "causal_upper_left"]], "torch.nn.backends": [[2028, 0, 0, "-", "thnn"]], "torch.nn.functional": [[1584, 5, 1, "", "adaptive_avg_pool1d"], [1585, 5, 1, "", "adaptive_avg_pool2d"], [1586, 5, 1, "", "adaptive_avg_pool3d"], [1587, 5, 1, "", "adaptive_max_pool1d"], [1588, 5, 1, "", "adaptive_max_pool2d"], [1589, 5, 1, "", "adaptive_max_pool3d"], [1590, 5, 1, "", "affine_grid"], [1591, 5, 1, "", "alpha_dropout"], [1592, 5, 1, "", "avg_pool1d"], [1593, 5, 1, "", "avg_pool2d"], [1594, 5, 1, "", "avg_pool3d"], [1595, 5, 1, "", "batch_norm"], [1596, 5, 1, "", "bilinear"], [1597, 5, 1, "", "binary_cross_entropy"], [1598, 5, 1, "", "binary_cross_entropy_with_logits"], [1599, 5, 1, "", "celu"], [1600, 5, 1, "", "conv1d"], [1601, 5, 1, "", "conv2d"], [1602, 5, 1, "", "conv3d"], [1603, 5, 1, "", "conv_transpose1d"], [1604, 5, 1, "", "conv_transpose2d"], [1605, 5, 1, "", "conv_transpose3d"], [1606, 5, 1, "", "cosine_embedding_loss"], [1607, 5, 1, "", "cosine_similarity"], [1608, 5, 1, "", "cross_entropy"], [1609, 5, 1, "", "ctc_loss"], [1610, 5, 1, "", "dropout"], [1611, 5, 1, "", "dropout1d"], [1612, 5, 1, "", "dropout2d"], [1613, 5, 1, "", "dropout3d"], [1614, 5, 1, "", "elu"], [1615, 5, 1, "", "elu_"], [1616, 5, 1, "", "embedding"], [1617, 5, 1, "", "embedding_bag"], [1618, 5, 1, "", "feature_alpha_dropout"], [1619, 5, 1, "", "fold"], [1620, 5, 1, "", "fractional_max_pool2d"], [1621, 5, 1, "", "fractional_max_pool3d"], [1622, 5, 1, "", "gaussian_nll_loss"], [1623, 5, 1, "", "gelu"], [1624, 5, 1, "", "glu"], [1625, 5, 1, "", "grid_sample"], [1626, 5, 1, "", "group_norm"], [1627, 5, 1, "", "gumbel_softmax"], [1628, 5, 1, "", "hardshrink"], [1629, 5, 1, "", "hardsigmoid"], [1630, 5, 1, "", "hardswish"], [1631, 5, 1, "", "hardtanh"], [1632, 5, 1, "", "hardtanh_"], [1633, 5, 1, "", "hinge_embedding_loss"], [1634, 5, 1, "", "huber_loss"], [1635, 5, 1, "", "instance_norm"], [1636, 5, 1, "", "interpolate"], [1637, 5, 1, "", "kl_div"], [1638, 5, 1, "", "l1_loss"], [1639, 5, 1, "", "layer_norm"], [1640, 5, 1, "", "leaky_relu"], [1641, 5, 1, "", "leaky_relu_"], [1642, 5, 1, "", "linear"], [1643, 5, 1, "", "local_response_norm"], [1644, 5, 1, "", "log_softmax"], [1645, 5, 1, "", "logsigmoid"], [1646, 5, 1, "", "lp_pool1d"], [1647, 5, 1, "", "lp_pool2d"], [1648, 5, 1, "", "lp_pool3d"], [1649, 5, 1, "", "margin_ranking_loss"], [1650, 5, 1, "", "max_pool1d"], [1651, 5, 1, "", "max_pool2d"], [1652, 5, 1, "", "max_pool3d"], [1653, 5, 1, "", "max_unpool1d"], [1654, 5, 1, "", "max_unpool2d"], [1655, 5, 1, "", "max_unpool3d"], [1656, 5, 1, "", "mish"], [1657, 5, 1, "", "mse_loss"], [1658, 5, 1, "", "multi_margin_loss"], [1659, 5, 1, "", "multilabel_margin_loss"], [1660, 5, 1, "", "multilabel_soft_margin_loss"], [1661, 5, 1, "", "nll_loss"], [1662, 5, 1, "", "normalize"], [1663, 5, 1, "", "one_hot"], [1664, 5, 1, "", "pad"], [1665, 5, 1, "", "pairwise_distance"], [1666, 5, 1, "", "pdist"], [1667, 5, 1, "", "pixel_shuffle"], [1668, 5, 1, "", "pixel_unshuffle"], [1669, 5, 1, "", "poisson_nll_loss"], [1670, 5, 1, "", "prelu"], [1671, 5, 1, "", "relu"], [1672, 5, 1, "", "relu6"], [1673, 5, 1, "", "relu_"], [1674, 5, 1, "", "rms_norm"], [1675, 5, 1, "", "rrelu"], [1676, 5, 1, "", "rrelu_"], [1677, 5, 1, "", "scaled_dot_product_attention"], [1678, 5, 1, "", "selu"], [1679, 5, 1, "", "sigmoid"], [1680, 5, 1, "", "silu"], [1681, 5, 1, "", "smooth_l1_loss"], [1682, 5, 1, "", "soft_margin_loss"], [1683, 5, 1, "", "softmax"], [1684, 5, 1, "", "softmin"], [1685, 5, 1, "", "softplus"], [1686, 5, 1, "", "softshrink"], [1687, 5, 1, "", "softsign"], [1688, 5, 1, "", "tanh"], [1689, 5, 1, "", "tanhshrink"], [1690, 5, 1, "", "threshold"], [1691, 5, 1, "", "threshold_"], [1693, 5, 1, "", "triplet_margin_loss"], [1694, 5, 1, "", "triplet_margin_with_distance_loss"], [1695, 5, 1, "", "unfold"], [1696, 5, 1, "", "upsample"], [1697, 5, 1, "", "upsample_bilinear"], [1698, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[2032, 5, 1, "", "calculate_gain"], [2032, 5, 1, "", "constant_"], [2032, 5, 1, "", "dirac_"], [2032, 5, 1, "", "eye_"], [2032, 5, 1, "", "kaiming_normal_"], [2032, 5, 1, "", "kaiming_uniform_"], [2032, 5, 1, "", "normal_"], [2032, 5, 1, "", "ones_"], [2032, 5, 1, "", "orthogonal_"], [2032, 5, 1, "", "sparse_"], [2032, 5, 1, "", "trunc_normal_"], [2032, 5, 1, "", "uniform_"], [2032, 5, 1, "", "xavier_normal_"], [2032, 5, 1, "", "xavier_uniform_"], [2032, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[2065, 0, 0, "-", "modules"], [2065, 0, 0, "-", "qat"], [2065, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.modules": [[2062, 0, 0, "-", "fused"]], "torch.nn.intrinsic.qat": [[2065, 0, 0, "-", "modules"]], "torch.nn.intrinsic.qat.modules": [[2062, 0, 0, "-", "conv_fused"], [2062, 0, 0, "-", "linear_fused"], [2062, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized": [[2065, 0, 0, "-", "dynamic"], [2065, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[2065, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2062, 0, 0, "-", "linear_relu"]], "torch.nn.intrinsic.quantized.modules": [[2062, 0, 0, "-", "bn_relu"], [2062, 0, 0, "-", "conv_relu"], [2062, 0, 0, "-", "linear_relu"]], "torch.nn.modules": [[2028, 0, 0, "-", "activation"], [2028, 0, 0, "-", "adaptive"], [2028, 0, 0, "-", "batchnorm"], [2028, 0, 0, "-", "channelshuffle"], [2028, 0, 0, "-", "container"], [2028, 0, 0, "-", "conv"], [2028, 0, 0, "-", "distance"], [2028, 0, 0, "-", "dropout"], [2028, 0, 0, "-", "flatten"], [2028, 0, 0, "-", "fold"], [2028, 0, 0, "-", "instancenorm"], [2028, 0, 0, "-", "lazy"], [2028, 0, 0, "-", "linear"], [2028, 0, 0, "-", "loss"], [2028, 0, 0, "-", "module"], [2028, 0, 0, "-", "normalization"], [2028, 0, 0, "-", "padding"], [2028, 0, 0, "-", "pixelshuffle"], [2028, 0, 0, "-", "pooling"], [2028, 0, 0, "-", "rnn"], [2028, 0, 0, "-", "sparse"], [2028, 0, 0, "-", "transformer"], [2028, 0, 0, "-", "upsampling"], [2028, 0, 0, "-", "utils"]], "torch.nn.modules.lazy": [[1699, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1699, 3, 1, "", "has_uninitialized_params"], [1699, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1700, 5, 1, "", "register_module_backward_hook"], [1701, 5, 1, "", "register_module_buffer_registration_hook"], [1702, 5, 1, "", "register_module_forward_hook"], [1703, 5, 1, "", "register_module_forward_pre_hook"], [1704, 5, 1, "", "register_module_full_backward_hook"], [1705, 5, 1, "", "register_module_full_backward_pre_hook"], [1706, 5, 1, "", "register_module_module_registration_hook"], [1707, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.modules.normalization.RMSNorm": [[1708, 3, 1, "", "extra_repr"], [1708, 3, 1, "", "forward"], [1708, 3, 1, "", "reset_parameters"]], "torch.nn.parallel": [[1709, 1, 1, "", "DistributedDataParallel"], [2028, 0, 0, "-", "comm"], [1692, 5, 1, "", "data_parallel"], [2028, 0, 0, "-", "distributed"], [2028, 0, 0, "-", "parallel_apply"], [2028, 0, 0, "-", "replicate"], [2028, 0, 0, "-", "scatter_gather"]], "torch.nn.parallel.DistributedDataParallel": [[1709, 3, 1, "", "join"], [1709, 3, 1, "", "join_hook"], [1709, 3, 1, "", "no_sync"], [1709, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1710, 1, 1, "", "Parameter"], [1711, 1, 1, "", "UninitializedBuffer"], [1712, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1712, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[2065, 0, 0, "-", "dynamic"], [2065, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[2065, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic.modules": [[2062, 0, 0, "-", "linear"]], "torch.nn.qat.modules": [[2062, 0, 0, "-", "conv"], [2062, 0, 0, "-", "embedding_ops"], [2062, 0, 0, "-", "linear"]], "torch.nn.quantizable": [[2065, 0, 0, "-", "modules"]], "torch.nn.quantizable.modules": [[2062, 0, 0, "-", "activation"], [2062, 0, 0, "-", "rnn"]], "torch.nn.quantized": [[2065, 0, 0, "-", "dynamic"], [2062, 0, 0, "-", "functional"], [2065, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[2065, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic.modules": [[2062, 0, 0, "-", "conv"], [2062, 0, 0, "-", "linear"], [2062, 0, 0, "-", "rnn"]], "torch.nn.quantized.modules": [[2062, 0, 0, "-", "activation"], [2062, 0, 0, "-", "batchnorm"], [2062, 0, 0, "-", "conv"], [2062, 0, 0, "-", "dropout"], [2062, 0, 0, "-", "embedding_ops"], [2062, 0, 0, "-", "functional_modules"], [2062, 0, 0, "-", "linear"], [2062, 0, 0, "-", "normalization"], [2062, 0, 0, "-", "rnn"], [2062, 0, 0, "-", "utils"]], "torch.nn.utils": [[2028, 0, 0, "-", "clip_grad"], [1713, 5, 1, "", "clip_grad_norm"], [1714, 5, 1, "", "clip_grad_norm_"], [1715, 5, 1, "", "clip_grad_value_"], [1716, 5, 1, "", "convert_conv2d_weight_memory_format"], [1717, 5, 1, "", "convert_conv3d_weight_memory_format"], [2028, 0, 0, "-", "convert_parameters"], [1718, 5, 1, "", "fuse_conv_bn_eval"], [1719, 5, 1, "", "fuse_conv_bn_weights"], [1720, 5, 1, "", "fuse_linear_bn_eval"], [1721, 5, 1, "", "fuse_linear_bn_weights"], [2028, 0, 0, "-", "fusion"], [2028, 0, 0, "-", "init"], [2028, 0, 0, "-", "memory_format"], [1722, 5, 1, "", "parameters_to_vector"], [2028, 0, 0, "-", "parametrizations"], [2028, 0, 0, "-", "parametrize"], [2028, 0, 0, "-", "prune"], [1748, 5, 1, "", "remove_spectral_norm"], [1749, 5, 1, "", "remove_weight_norm"], [2028, 0, 0, "-", "rnn"], [1757, 5, 1, "", "skip_init"], [1758, 5, 1, "", "spectral_norm"], [2028, 0, 0, "-", "stateless"], [1760, 5, 1, "", "vector_to_parameters"], [1761, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1723, 5, 1, "", "orthogonal"], [1724, 5, 1, "", "spectral_norm"], [1725, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrize": [[1726, 1, 1, "", "ParametrizationList"], [1727, 5, 1, "", "cached"], [1728, 5, 1, "", "is_parametrized"], [1729, 5, 1, "", "register_parametrization"], [1730, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1726, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1731, 1, 1, "", "BasePruningMethod"], [1732, 1, 1, "", "CustomFromMask"], [1733, 1, 1, "", "Identity"], [1734, 1, 1, "", "L1Unstructured"], [1735, 1, 1, "", "LnStructured"], [1736, 1, 1, "", "PruningContainer"], [1737, 1, 1, "", "RandomStructured"], [1738, 1, 1, "", "RandomUnstructured"], [1739, 5, 1, "", "custom_from_mask"], [1740, 5, 1, "", "global_unstructured"], [1741, 5, 1, "", "identity"], [1742, 5, 1, "", "is_pruned"], [1743, 5, 1, "", "l1_unstructured"], [1744, 5, 1, "", "ln_structured"], [1745, 5, 1, "", "random_structured"], [1746, 5, 1, "", "random_unstructured"], [1747, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1731, 3, 1, "", "apply"], [1731, 3, 1, "", "apply_mask"], [1731, 3, 1, "", "compute_mask"], [1731, 3, 1, "", "prune"], [1731, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1732, 3, 1, "", "apply"], [1732, 3, 1, "", "apply_mask"], [1732, 3, 1, "", "prune"], [1732, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1733, 3, 1, "", "apply"], [1733, 3, 1, "", "apply_mask"], [1733, 3, 1, "", "prune"], [1733, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1734, 3, 1, "", "apply"], [1734, 3, 1, "", "apply_mask"], [1734, 3, 1, "", "prune"], [1734, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1735, 3, 1, "", "apply"], [1735, 3, 1, "", "apply_mask"], [1735, 3, 1, "", "compute_mask"], [1735, 3, 1, "", "prune"], [1735, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1736, 3, 1, "", "add_pruning_method"], [1736, 3, 1, "", "apply"], [1736, 3, 1, "", "apply_mask"], [1736, 3, 1, "", "compute_mask"], [1736, 3, 1, "", "prune"], [1736, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1737, 3, 1, "", "apply"], [1737, 3, 1, "", "apply_mask"], [1737, 3, 1, "", "compute_mask"], [1737, 3, 1, "", "prune"], [1737, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1738, 3, 1, "", "apply"], [1738, 3, 1, "", "apply_mask"], [1738, 3, 1, "", "prune"], [1738, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1750, 1, 1, "", "PackedSequence"], [1751, 5, 1, "", "pack_padded_sequence"], [1752, 5, 1, "", "pack_sequence"], [1753, 5, 1, "", "pad_packed_sequence"], [1754, 5, 1, "", "pad_sequence"], [1755, 5, 1, "", "unpack_sequence"], [1756, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1750, 2, 1, "", "batch_sizes"], [1750, 3, 1, "", "count"], [1750, 2, 1, "", "data"], [1750, 3, 1, "", "index"], [1750, 4, 1, "", "is_cuda"], [1750, 3, 1, "", "is_pinned"], [1750, 2, 1, "", "sorted_indices"], [1750, 3, 1, "", "to"], [1750, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1759, 5, 1, "", "functional_call"]], "torch.onnx": [[2054, 1, 1, "", "DiagnosticOptions"], [2054, 1, 1, "", "ExportOptions"], [2054, 1, 1, "", "InvalidExportOptionsError"], [1770, 1, 1, "", "JitScalarType"], [2054, 1, 1, "", "ONNXProgram"], [2054, 1, 1, "", "ONNXProgramSerializer"], [2054, 1, 1, "", "ONNXRuntimeOptions"], [2054, 1, 1, "", "OnnxExporterError"], [2054, 1, 1, "", "OnnxRegistry"], [2056, 5, 1, "", "disable_log"], [2054, 5, 1, "", "dynamo_export"], [2054, 5, 1, "", "enable_fake_mode"], [2056, 5, 1, "", "enable_log"], [2053, 0, 0, "-", "errors"], [2056, 5, 1, "", "export"], [2056, 5, 1, "", "export_to_pretty_string"], [2056, 5, 1, "", "is_in_onnx_export"], [2055, 5, 1, "", "is_onnxrt_backend_supported"], [2053, 0, 0, "-", "operators"], [2056, 5, 1, "", "register_custom_op_symbolic"], [2056, 5, 1, "", "select_model_mode_for_export"], [2053, 0, 0, "-", "symbolic_caffe2"], [2053, 0, 0, "-", "symbolic_helper"], [2053, 0, 0, "-", "symbolic_opset10"], [2053, 0, 0, "-", "symbolic_opset11"], [2053, 0, 0, "-", "symbolic_opset12"], [2053, 0, 0, "-", "symbolic_opset13"], [2053, 0, 0, "-", "symbolic_opset14"], [2053, 0, 0, "-", "symbolic_opset15"], [2053, 0, 0, "-", "symbolic_opset16"], [2053, 0, 0, "-", "symbolic_opset17"], [2053, 0, 0, "-", "symbolic_opset18"], [2053, 0, 0, "-", "symbolic_opset19"], [2053, 0, 0, "-", "symbolic_opset20"], [2053, 0, 0, "-", "symbolic_opset7"], [2053, 0, 0, "-", "symbolic_opset8"], [2053, 0, 0, "-", "symbolic_opset9"], [2056, 5, 1, "", "unregister_custom_op_symbolic"], [2053, 0, 0, "-", "utils"], [2053, 0, 0, "-", "verification"]], "torch.onnx.JitScalarType": [[1770, 3, 1, "", "dtype"], [1770, 3, 1, "", "from_dtype"], [1770, 3, 1, "", "from_onnx_type"], [1770, 3, 1, "", "from_value"], [1770, 3, 1, "", "onnx_compatible"], [1770, 3, 1, "", "onnx_type"], [1770, 3, 1, "", "scalar_name"], [1770, 3, 1, "", "torch_name"]], "torch.onnx.ONNXProgram": [[2054, 3, 1, "", "adapt_torch_inputs_to_onnx"], [2054, 3, 1, "", "adapt_torch_outputs_to_onnx"], [2054, 4, 1, "", "diagnostic_context"], [2054, 4, 1, "", "fake_context"], [2054, 4, 1, "", "model_proto"], [2054, 4, 1, "", "model_signature"], [2054, 3, 1, "", "save"], [2054, 3, 1, "", "save_diagnostics"]], "torch.onnx.ONNXProgramSerializer": [[2054, 3, 1, "", "serialize"]], "torch.onnx.OnnxRegistry": [[2054, 3, 1, "", "get_op_functions"], [2054, 3, 1, "", "is_registered_op"], [2054, 4, 1, "", "opset_version"], [2054, 3, 1, "", "register_op"]], "torch.onnx.verification": [[1771, 1, 1, "", "GraphInfo"], [1772, 1, 1, "", "VerificationOptions"], [2056, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1771, 3, 1, "", "all_mismatch_leaf_graph_info"], [1771, 3, 1, "", "clear"], [1771, 3, 1, "", "essential_node_count"], [1771, 3, 1, "", "essential_node_kinds"], [1771, 3, 1, "", "export_repro"], [1771, 3, 1, "", "find_mismatch"], [1771, 3, 1, "", "find_partition"], [1771, 3, 1, "", "has_mismatch"], [1771, 3, 1, "", "pretty_print_mismatch"], [1771, 3, 1, "", "pretty_print_tree"], [1771, 3, 1, "", "verify_export"]], "torch.optim": [[1773, 1, 1, "", "ASGD"], [1774, 1, 1, "", "Adadelta"], [1775, 1, 1, "", "Adagrad"], [1776, 1, 1, "", "Adam"], [1777, 1, 1, "", "AdamW"], [1778, 1, 1, "", "Adamax"], [1779, 1, 1, "", "LBFGS"], [1780, 1, 1, "", "NAdam"], [2058, 1, 1, "", "Optimizer"], [1786, 1, 1, "", "RAdam"], [1787, 1, 1, "", "RMSprop"], [1788, 1, 1, "", "Rprop"], [1789, 1, 1, "", "SGD"], [1790, 1, 1, "", "SparseAdam"], [2058, 0, 0, "-", "adadelta"], [2058, 0, 0, "-", "adagrad"], [2058, 0, 0, "-", "adam"], [2058, 0, 0, "-", "adamax"], [2058, 0, 0, "-", "adamw"], [2058, 0, 0, "-", "asgd"], [2058, 0, 0, "-", "lbfgs"], [2058, 0, 0, "-", "lr_scheduler"], [2058, 0, 0, "-", "nadam"], [2058, 0, 0, "-", "optimizer"], [2058, 0, 0, "-", "radam"], [2058, 0, 0, "-", "rmsprop"], [2058, 0, 0, "-", "rprop"], [2058, 0, 0, "-", "sgd"], [2058, 0, 0, "-", "sparse_adam"], [2058, 0, 0, "-", "swa_utils"]], "torch.optim.ASGD": [[1773, 3, 1, "", "add_param_group"], [1773, 3, 1, "", "load_state_dict"], [1773, 3, 1, "", "register_load_state_dict_post_hook"], [1773, 3, 1, "", "register_load_state_dict_pre_hook"], [1773, 3, 1, "", "register_state_dict_post_hook"], [1773, 3, 1, "", "register_state_dict_pre_hook"], [1773, 3, 1, "", "register_step_post_hook"], [1773, 3, 1, "", "register_step_pre_hook"], [1773, 3, 1, "", "state_dict"], [1773, 3, 1, "", "step"], [1773, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1774, 3, 1, "", "add_param_group"], [1774, 3, 1, "", "load_state_dict"], [1774, 3, 1, "", "register_load_state_dict_post_hook"], [1774, 3, 1, "", "register_load_state_dict_pre_hook"], [1774, 3, 1, "", "register_state_dict_post_hook"], [1774, 3, 1, "", "register_state_dict_pre_hook"], [1774, 3, 1, "", "register_step_post_hook"], [1774, 3, 1, "", "register_step_pre_hook"], [1774, 3, 1, "", "state_dict"], [1774, 3, 1, "", "step"], [1774, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1775, 3, 1, "", "add_param_group"], [1775, 3, 1, "", "load_state_dict"], [1775, 3, 1, "", "register_load_state_dict_post_hook"], [1775, 3, 1, "", "register_load_state_dict_pre_hook"], [1775, 3, 1, "", "register_state_dict_post_hook"], [1775, 3, 1, "", "register_state_dict_pre_hook"], [1775, 3, 1, "", "register_step_post_hook"], [1775, 3, 1, "", "register_step_pre_hook"], [1775, 3, 1, "", "state_dict"], [1775, 3, 1, "", "step"], [1775, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1776, 3, 1, "", "add_param_group"], [1776, 3, 1, "", "load_state_dict"], [1776, 3, 1, "", "register_load_state_dict_post_hook"], [1776, 3, 1, "", "register_load_state_dict_pre_hook"], [1776, 3, 1, "", "register_state_dict_post_hook"], [1776, 3, 1, "", "register_state_dict_pre_hook"], [1776, 3, 1, "", "register_step_post_hook"], [1776, 3, 1, "", "register_step_pre_hook"], [1776, 3, 1, "", "state_dict"], [1776, 3, 1, "", "step"], [1776, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1777, 3, 1, "", "add_param_group"], [1777, 3, 1, "", "load_state_dict"], [1777, 3, 1, "", "register_load_state_dict_post_hook"], [1777, 3, 1, "", "register_load_state_dict_pre_hook"], [1777, 3, 1, "", "register_state_dict_post_hook"], [1777, 3, 1, "", "register_state_dict_pre_hook"], [1777, 3, 1, "", "register_step_post_hook"], [1777, 3, 1, "", "register_step_pre_hook"], [1777, 3, 1, "", "state_dict"], [1777, 3, 1, "", "step"], [1777, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1778, 3, 1, "", "add_param_group"], [1778, 3, 1, "", "load_state_dict"], [1778, 3, 1, "", "register_load_state_dict_post_hook"], [1778, 3, 1, "", "register_load_state_dict_pre_hook"], [1778, 3, 1, "", "register_state_dict_post_hook"], [1778, 3, 1, "", "register_state_dict_pre_hook"], [1778, 3, 1, "", "register_step_post_hook"], [1778, 3, 1, "", "register_step_pre_hook"], [1778, 3, 1, "", "state_dict"], [1778, 3, 1, "", "step"], [1778, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1779, 3, 1, "", "add_param_group"], [1779, 3, 1, "", "load_state_dict"], [1779, 3, 1, "", "register_load_state_dict_post_hook"], [1779, 3, 1, "", "register_load_state_dict_pre_hook"], [1779, 3, 1, "", "register_state_dict_post_hook"], [1779, 3, 1, "", "register_state_dict_pre_hook"], [1779, 3, 1, "", "register_step_post_hook"], [1779, 3, 1, "", "register_step_pre_hook"], [1779, 3, 1, "", "state_dict"], [1779, 3, 1, "", "step"], [1779, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1780, 3, 1, "", "add_param_group"], [1780, 3, 1, "", "load_state_dict"], [1780, 3, 1, "", "register_load_state_dict_post_hook"], [1780, 3, 1, "", "register_load_state_dict_pre_hook"], [1780, 3, 1, "", "register_state_dict_post_hook"], [1780, 3, 1, "", "register_state_dict_pre_hook"], [1780, 3, 1, "", "register_step_post_hook"], [1780, 3, 1, "", "register_step_pre_hook"], [1780, 3, 1, "", "state_dict"], [1780, 3, 1, "", "step"], [1780, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1781, 3, 1, "", "add_param_group"], [1782, 3, 1, "", "load_state_dict"], [1783, 3, 1, "", "state_dict"], [1784, 3, 1, "", "step"], [1785, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1786, 3, 1, "", "add_param_group"], [1786, 3, 1, "", "load_state_dict"], [1786, 3, 1, "", "register_load_state_dict_post_hook"], [1786, 3, 1, "", "register_load_state_dict_pre_hook"], [1786, 3, 1, "", "register_state_dict_post_hook"], [1786, 3, 1, "", "register_state_dict_pre_hook"], [1786, 3, 1, "", "register_step_post_hook"], [1786, 3, 1, "", "register_step_pre_hook"], [1786, 3, 1, "", "state_dict"], [1786, 3, 1, "", "step"], [1786, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1787, 3, 1, "", "add_param_group"], [1787, 3, 1, "", "load_state_dict"], [1787, 3, 1, "", "register_load_state_dict_post_hook"], [1787, 3, 1, "", "register_load_state_dict_pre_hook"], [1787, 3, 1, "", "register_state_dict_post_hook"], [1787, 3, 1, "", "register_state_dict_pre_hook"], [1787, 3, 1, "", "register_step_post_hook"], [1787, 3, 1, "", "register_step_pre_hook"], [1787, 3, 1, "", "state_dict"], [1787, 3, 1, "", "step"], [1787, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1788, 3, 1, "", "add_param_group"], [1788, 3, 1, "", "load_state_dict"], [1788, 3, 1, "", "register_load_state_dict_post_hook"], [1788, 3, 1, "", "register_load_state_dict_pre_hook"], [1788, 3, 1, "", "register_state_dict_post_hook"], [1788, 3, 1, "", "register_state_dict_pre_hook"], [1788, 3, 1, "", "register_step_post_hook"], [1788, 3, 1, "", "register_step_pre_hook"], [1788, 3, 1, "", "state_dict"], [1788, 3, 1, "", "step"], [1788, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1789, 3, 1, "", "add_param_group"], [1789, 3, 1, "", "load_state_dict"], [1789, 3, 1, "", "register_load_state_dict_post_hook"], [1789, 3, 1, "", "register_load_state_dict_pre_hook"], [1789, 3, 1, "", "register_state_dict_post_hook"], [1789, 3, 1, "", "register_state_dict_pre_hook"], [1789, 3, 1, "", "register_step_post_hook"], [1789, 3, 1, "", "register_step_pre_hook"], [1789, 3, 1, "", "state_dict"], [1789, 3, 1, "", "step"], [1789, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1790, 3, 1, "", "add_param_group"], [1790, 3, 1, "", "load_state_dict"], [1790, 3, 1, "", "register_load_state_dict_post_hook"], [1790, 3, 1, "", "register_load_state_dict_pre_hook"], [1790, 3, 1, "", "register_state_dict_post_hook"], [1790, 3, 1, "", "register_state_dict_pre_hook"], [1790, 3, 1, "", "register_step_post_hook"], [1790, 3, 1, "", "register_step_pre_hook"], [1790, 3, 1, "", "state_dict"], [1790, 3, 1, "", "step"], [1790, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1791, 1, 1, "", "ChainedScheduler"], [1792, 1, 1, "", "ConstantLR"], [1793, 1, 1, "", "CosineAnnealingLR"], [1794, 1, 1, "", "CosineAnnealingWarmRestarts"], [1795, 1, 1, "", "CyclicLR"], [1796, 1, 1, "", "ExponentialLR"], [1797, 1, 1, "", "LambdaLR"], [1798, 1, 1, "", "LinearLR"], [1799, 1, 1, "", "MultiStepLR"], [1800, 1, 1, "", "MultiplicativeLR"], [1801, 1, 1, "", "OneCycleLR"], [1802, 1, 1, "", "PolynomialLR"], [1803, 1, 1, "", "ReduceLROnPlateau"], [1804, 1, 1, "", "SequentialLR"], [1805, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1791, 3, 1, "", "get_last_lr"], [1791, 3, 1, "", "load_state_dict"], [1791, 3, 1, "", "print_lr"], [1791, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1792, 3, 1, "", "get_last_lr"], [1792, 3, 1, "", "load_state_dict"], [1792, 3, 1, "", "print_lr"], [1792, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1793, 3, 1, "", "get_last_lr"], [1793, 3, 1, "", "load_state_dict"], [1793, 3, 1, "", "print_lr"], [1793, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1794, 3, 1, "", "get_last_lr"], [1794, 3, 1, "", "load_state_dict"], [1794, 3, 1, "", "print_lr"], [1794, 3, 1, "", "state_dict"], [1794, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1795, 3, 1, "", "get_last_lr"], [1795, 3, 1, "", "get_lr"], [1795, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1796, 3, 1, "", "get_last_lr"], [1796, 3, 1, "", "load_state_dict"], [1796, 3, 1, "", "print_lr"], [1796, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1797, 3, 1, "", "get_last_lr"], [1797, 3, 1, "", "load_state_dict"], [1797, 3, 1, "", "print_lr"], [1797, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1798, 3, 1, "", "get_last_lr"], [1798, 3, 1, "", "load_state_dict"], [1798, 3, 1, "", "print_lr"], [1798, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1799, 3, 1, "", "get_last_lr"], [1799, 3, 1, "", "load_state_dict"], [1799, 3, 1, "", "print_lr"], [1799, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1800, 3, 1, "", "get_last_lr"], [1800, 3, 1, "", "load_state_dict"], [1800, 3, 1, "", "print_lr"], [1800, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1801, 3, 1, "", "get_last_lr"], [1801, 3, 1, "", "load_state_dict"], [1801, 3, 1, "", "print_lr"], [1801, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1802, 3, 1, "", "get_last_lr"], [1802, 3, 1, "", "load_state_dict"], [1802, 3, 1, "", "print_lr"], [1802, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ReduceLROnPlateau": [[1803, 3, 1, "", "get_last_lr"], [1803, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.SequentialLR": [[1804, 3, 1, "", "get_last_lr"], [1804, 3, 1, "", "load_state_dict"], [1804, 3, 1, "", "print_lr"], [1804, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1805, 3, 1, "", "get_last_lr"], [1805, 3, 1, "", "load_state_dict"], [1805, 3, 1, "", "print_lr"], [1805, 3, 1, "", "state_dict"]], "torch.overrides": [[2104, 5, 1, "", "get_ignored_functions"], [2104, 5, 1, "", "get_overridable_functions"], [2104, 5, 1, "", "get_testing_overrides"], [2104, 5, 1, "", "handle_torch_function"], [2104, 5, 1, "", "has_torch_function"], [2104, 5, 1, "", "is_tensor_like"], [2104, 5, 1, "", "is_tensor_method_or_property"], [2104, 5, 1, "", "resolve_name"], [2104, 5, 1, "", "wrap_torch_function"]], "torch.package": [[2059, 1, 1, "", "Directory"], [2059, 1, 1, "", "EmptyMatchError"], [2059, 1, 1, "", "PackageExporter"], [2059, 1, 1, "", "PackageImporter"], [2059, 1, 1, "", "PackagingError"], [2059, 0, 0, "-", "analyze"], [2059, 0, 0, "-", "file_structure_representation"], [2059, 0, 0, "-", "find_file_dependencies"], [2059, 0, 0, "-", "glob_group"], [2059, 0, 0, "-", "importer"], [2059, 0, 0, "-", "package_exporter"], [2059, 0, 0, "-", "package_importer"]], "torch.package.Directory": [[2059, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[2059, 3, 1, "", "__init__"], [2059, 3, 1, "", "add_dependency"], [2059, 3, 1, "", "all_paths"], [2059, 3, 1, "", "close"], [2059, 3, 1, "", "denied_modules"], [2059, 3, 1, "", "deny"], [2059, 3, 1, "", "dependency_graph_string"], [2059, 3, 1, "", "extern"], [2059, 3, 1, "", "externed_modules"], [2059, 3, 1, "", "get_rdeps"], [2059, 3, 1, "", "get_unique_id"], [2059, 3, 1, "", "intern"], [2059, 3, 1, "", "interned_modules"], [2059, 3, 1, "", "mock"], [2059, 3, 1, "", "mocked_modules"], [2059, 3, 1, "", "register_extern_hook"], [2059, 3, 1, "", "register_intern_hook"], [2059, 3, 1, "", "register_mock_hook"], [2059, 3, 1, "", "save_binary"], [2059, 3, 1, "", "save_module"], [2059, 3, 1, "", "save_pickle"], [2059, 3, 1, "", "save_source_file"], [2059, 3, 1, "", "save_source_string"], [2059, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[2059, 3, 1, "", "__init__"], [2059, 3, 1, "", "file_structure"], [2059, 3, 1, "", "id"], [2059, 3, 1, "", "import_module"], [2059, 3, 1, "", "load_binary"], [2059, 3, 1, "", "load_pickle"], [2059, 3, 1, "", "load_text"], [2059, 3, 1, "", "python_version"]], "torch.package.analyze": [[2059, 0, 0, "-", "find_first_use_of_broken_modules"], [2059, 0, 0, "-", "is_from_package"], [2059, 0, 0, "-", "trace_dependencies"]], "torch.profiler": [[2061, 1, 1, "", "ProfilerAction"], [2061, 1, 1, "", "ProfilerActivity"], [2061, 1, 1, "", "_KinetoProfile"], [2061, 0, 0, "-", "itt"], [2061, 1, 1, "", "profile"], [2061, 0, 0, "-", "profiler"], [2061, 0, 0, "-", "python_tracer"], [2061, 5, 1, "", "schedule"], [2061, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[2061, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[2061, 3, 1, "", "add_metadata"], [2061, 3, 1, "", "add_metadata_json"], [2061, 3, 1, "", "events"], [2061, 3, 1, "", "export_chrome_trace"], [2061, 3, 1, "", "export_memory_timeline"], [2061, 3, 1, "", "export_stacks"], [2061, 3, 1, "", "key_averages"], [2061, 3, 1, "", "preset_metadata_json"]], "torch.profiler.itt": [[2061, 5, 1, "", "is_available"], [2061, 5, 1, "", "mark"], [2061, 5, 1, "", "range_pop"], [2061, 5, 1, "", "range_push"]], "torch.profiler.profile": [[2061, 3, 1, "", "step"]], "torch.quantization": [[2062, 0, 0, "-", "fake_quantize"], [2062, 0, 0, "-", "fuse_modules"], [2062, 0, 0, "-", "fuser_method_mappings"], [2065, 0, 0, "-", "fx"], [2062, 0, 0, "-", "observer"], [2062, 0, 0, "-", "qconfig"], [2062, 0, 0, "-", "quant_type"], [2062, 0, 0, "-", "quantization_mappings"], [2062, 0, 0, "-", "quantize"], [2062, 0, 0, "-", "quantize_fx"], [2062, 0, 0, "-", "quantize_jit"], [2062, 0, 0, "-", "stubs"], [2062, 0, 0, "-", "utils"]], "torch.quantization.fx": [[2062, 0, 0, "-", "convert"], [2062, 0, 0, "-", "fuse"], [2062, 0, 0, "-", "fusion_patterns"], [2062, 0, 0, "-", "graph_module"], [2062, 0, 0, "-", "match_utils"], [2062, 0, 0, "-", "pattern_utils"], [2062, 0, 0, "-", "prepare"], [2062, 0, 0, "-", "quantization_patterns"], [2062, 0, 0, "-", "quantization_types"], [2062, 0, 0, "-", "utils"]], "torch.quasirandom": [[1826, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1826, 3, 1, "", "draw"], [1826, 3, 1, "", "draw_base2"], [1826, 3, 1, "", "fast_forward"], [1826, 3, 1, "", "reset"]], "torch.random": [[2066, 5, 1, "", "fork_rng"], [2066, 5, 1, "", "get_rng_state"], [2066, 5, 1, "", "initial_seed"], [2066, 5, 1, "", "manual_seed"], [2066, 5, 1, "", "seed"], [2066, 5, 1, "", "set_rng_state"]], "torch.serialization": [[2051, 5, 1, "", "get_default_load_endianness"], [2051, 5, 1, "", "register_package"], [2051, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[2070, 0, 0, "-", "windows"]], "torch.signal.windows": [[1873, 5, 1, "", "bartlett"], [1874, 5, 1, "", "blackman"], [1875, 5, 1, "", "cosine"], [1876, 5, 1, "", "exponential"], [1877, 5, 1, "", "gaussian"], [1878, 5, 1, "", "general_cosine"], [1879, 5, 1, "", "general_hamming"], [1880, 5, 1, "", "hamming"], [1881, 5, 1, "", "hann"], [1882, 5, 1, "", "kaiser"], [1883, 5, 1, "", "nuttall"], [2081, 0, 0, "-", "windows"]], "torch.sparse": [[1893, 5, 1, "", "addmm"], [1894, 5, 1, "", "as_sparse_gradcheck"], [1895, 1, 1, "", "check_sparse_tensor_invariants"], [1896, 5, 1, "", "log_softmax"], [1897, 5, 1, "", "mm"], [1898, 5, 1, "", "sampled_addmm"], [2081, 0, 0, "-", "semi_structured"], [1899, 5, 1, "", "softmax"], [1900, 5, 1, "", "spdiags"], [1901, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1895, 3, 1, "", "disable"], [1895, 3, 1, "", "enable"], [1895, 3, 1, "", "is_enabled"]], "torch.special": [[2073, 5, 1, "", "airy_ai"], [2073, 5, 1, "", "bessel_j0"], [2073, 5, 1, "", "bessel_j1"], [2073, 5, 1, "", "digamma"], [2073, 5, 1, "", "entr"], [2073, 5, 1, "", "erf"], [2073, 5, 1, "", "erfc"], [2073, 5, 1, "", "erfcx"], [2073, 5, 1, "", "erfinv"], [2073, 5, 1, "", "exp2"], [2073, 5, 1, "", "expit"], [2073, 5, 1, "", "expm1"], [2073, 5, 1, "", "gammainc"], [2073, 5, 1, "", "gammaincc"], [2073, 5, 1, "", "gammaln"], [2073, 5, 1, "", "i0"], [2073, 5, 1, "", "i0e"], [2073, 5, 1, "", "i1"], [2073, 5, 1, "", "i1e"], [2073, 5, 1, "", "log1p"], [2073, 5, 1, "", "log_ndtr"], [2073, 5, 1, "", "log_softmax"], [2073, 5, 1, "", "logit"], [2073, 5, 1, "", "logsumexp"], [2073, 5, 1, "", "multigammaln"], [2073, 5, 1, "", "ndtr"], [2073, 5, 1, "", "ndtri"], [2073, 5, 1, "", "polygamma"], [2073, 5, 1, "", "psi"], [2073, 5, 1, "", "round"], [2073, 5, 1, "", "scaled_modified_bessel_k0"], [2073, 5, 1, "", "scaled_modified_bessel_k1"], [2073, 5, 1, "", "sinc"], [2073, 5, 1, "", "softmax"], [2073, 5, 1, "", "spherical_bessel_j0"], [2073, 5, 1, "", "xlog1py"], [2073, 5, 1, "", "xlogy"], [2073, 5, 1, "", "zeta"]], "torch.testing": [[2079, 5, 1, "", "assert_allclose"], [2079, 5, 1, "", "assert_close"], [2079, 5, 1, "", "make_tensor"]], "torch.torch": [[2081, 2, 1, "", "default_generator"], [2107, 1, 1, "", "finfo"], [2107, 1, 1, "", "iinfo"]], "torch.utils": [[2081, 0, 0, "-", "backcompat"], [2108, 0, 0, "-", "backend_registration"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [2108, 0, 0, "-", "bundled_inputs"], [2108, 0, 0, "-", "checkpoint"], [2108, 0, 0, "-", "collect_env"], [2108, 0, 0, "-", "cpp_backtrace"], [2108, 0, 0, "-", "cpp_extension"], [22, 0, 0, "-", "data"], [26, 0, 0, "-", "deterministic"], [2108, 0, 0, "-", "dlpack"], [2108, 0, 0, "-", "file_baton"], [2108, 0, 0, "-", "flop_counter"], [1958, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1959, 5, 1, "", "get_cpp_backtrace"], [2081, 0, 0, "-", "hipify"], [2108, 0, 0, "-", "hooks"], [2012, 0, 0, "-", "jit"], [2108, 0, 0, "-", "mkldnn"], [2108, 0, 0, "-", "mobile_optimizer"], [2081, 0, 0, "-", "model_dump"], [2020, 0, 0, "-", "model_zoo"], [1960, 5, 1, "", "rename_privateuse1_backend"], [1961, 5, 1, "", "set_module"], [2108, 0, 0, "-", "show_pickle"], [1962, 5, 1, "", "swap_tensors"], [2077, 0, 0, "-", "tensorboard"], [2108, 0, 0, "-", "throughput_benchmark"], [2081, 0, 0, "-", "viz"], [2108, 0, 0, "-", "weak"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "adaptive_autorange"], [3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.examples": [[2108, 0, 0, "-", "blas_compare_setup"], [2108, 0, 0, "-", "compare"], [2108, 0, 0, "-", "fuzzer"], [2108, 0, 0, "-", "op_benchmark"], [2108, 0, 0, "-", "simple_timeit"], [2108, 0, 0, "-", "spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers": [[2108, 0, 0, "-", "binary"], [2108, 0, 0, "-", "sparse_binary"], [2108, 0, 0, "-", "sparse_unary"], [2108, 0, 0, "-", "spectral"], [2108, 0, 0, "-", "unary"]], "torch.utils.benchmark.utils": [[2108, 0, 0, "-", "common"], [2108, 0, 0, "-", "compare"], [2108, 0, 0, "-", "compile"], [2108, 0, 0, "-", "cpp_jit"], [2108, 0, 0, "-", "fuzzer"], [2108, 0, 0, "-", "sparse_fuzzer"], [2108, 0, 0, "-", "timer"], [3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[2108, 0, 0, "-", "timer_interface"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"], [5, 5, 1, "", "set_checkpoint_debug_enabled"]], "torch.utils.cpp_extension": [[14, 5, 1, "", "BuildExtension"], [14, 5, 1, "", "CUDAExtension"], [14, 5, 1, "", "CppExtension"], [14, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [14, 5, 1, "", "include_paths"], [14, 5, 1, "", "is_ninja_available"], [14, 5, 1, "", "load"], [14, 5, 1, "", "load_inline"], [14, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[22, 1, 1, "", "BatchSampler"], [22, 1, 1, "", "ChainDataset"], [22, 1, 1, "", "ConcatDataset"], [22, 1, 1, "", "DataLoader"], [22, 1, 1, "", "Dataset"], [22, 1, 1, "", "IterableDataset"], [22, 1, 1, "", "RandomSampler"], [22, 1, 1, "", "Sampler"], [22, 1, 1, "", "SequentialSampler"], [22, 1, 1, "", "StackDataset"], [22, 1, 1, "", "Subset"], [22, 1, 1, "", "SubsetRandomSampler"], [22, 1, 1, "", "TensorDataset"], [22, 1, 1, "", "WeightedRandomSampler"], [2108, 0, 0, "-", "backward_compatibility"], [2108, 0, 0, "-", "dataloader"], [22, 0, 0, "-", "datapipes"], [2108, 0, 0, "-", "dataset"], [22, 5, 1, "", "default_collate"], [22, 5, 1, "", "default_convert"], [2108, 0, 0, "-", "distributed"], [22, 5, 1, "", "get_worker_info"], [2108, 0, 0, "-", "graph"], [2108, 0, 0, "-", "graph_settings"], [22, 5, 1, "", "random_split"], [2108, 0, 0, "-", "sampler"]], "torch.utils.data._utils.collate": [[22, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[22, 0, 0, "-", "dataframe"], [2108, 0, 0, "-", "datapipe"], [2108, 0, 0, "-", "gen_pyi"], [22, 0, 0, "-", "iter"], [22, 0, 0, "-", "map"], [22, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.dataframe": [[2108, 0, 0, "-", "dataframe_wrapper"], [2108, 0, 0, "-", "dataframes"], [2108, 0, 0, "-", "datapipes"], [2108, 0, 0, "-", "structures"]], "torch.utils.data.datapipes.iter": [[2108, 0, 0, "-", "callable"], [2108, 0, 0, "-", "combinatorics"], [2108, 0, 0, "-", "combining"], [2108, 0, 0, "-", "filelister"], [2108, 0, 0, "-", "fileopener"], [2108, 0, 0, "-", "grouping"], [2108, 0, 0, "-", "routeddecoder"], [2108, 0, 0, "-", "selecting"], [2108, 0, 0, "-", "sharding"], [2108, 0, 0, "-", "streamreader"], [2108, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.map": [[2108, 0, 0, "-", "callable"], [2108, 0, 0, "-", "combinatorics"], [2108, 0, 0, "-", "combining"], [2108, 0, 0, "-", "grouping"], [2108, 0, 0, "-", "utils"]], "torch.utils.data.datapipes.utils": [[2108, 0, 0, "-", "common"], [2108, 0, 0, "-", "decoder"], [2108, 0, 0, "-", "snapshot"]], "torch.utils.data.distributed": [[22, 1, 1, "", "DistributedSampler"]], "torch.utils.deterministic": [[26, 2, 1, "", "fill_uninitialized_memory"]], "torch.utils.dlpack": [[34, 5, 1, "", "from_dlpack"], [34, 5, 1, "", "to_dlpack"]], "torch.utils.hipify": [[2108, 0, 0, "-", "constants"], [2108, 0, 0, "-", "cuda_to_hip_mappings"], [2108, 0, 0, "-", "hipify_python"], [2108, 0, 0, "-", "version"]], "torch.utils.jit": [[2108, 0, 0, "-", "log_extract"]], "torch.utils.mobile_optimizer": [[2019, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[2020, 5, 1, "", "load_url"]], "torch.utils.tensorboard": [[2108, 0, 0, "-", "summary"], [2108, 0, 0, "-", "writer"]], "torch.utils.tensorboard.writer": [[2077, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[2077, 3, 1, "", "__init__"], [2077, 3, 1, "", "add_audio"], [2077, 3, 1, "", "add_custom_scalars"], [2077, 3, 1, "", "add_embedding"], [2077, 3, 1, "", "add_figure"], [2077, 3, 1, "", "add_graph"], [2077, 3, 1, "", "add_histogram"], [2077, 3, 1, "", "add_hparams"], [2077, 3, 1, "", "add_image"], [2077, 3, 1, "", "add_images"], [2077, 3, 1, "", "add_mesh"], [2077, 3, 1, "", "add_pr_curve"], [2077, 3, 1, "", "add_scalar"], [2077, 3, 1, "", "add_scalars"], [2077, 3, 1, "", "add_text"], [2077, 3, 1, "", "add_video"], [2077, 3, 1, "", "close"], [2077, 3, 1, "", "flush"]], "torch.xpu": [[1974, 1, 1, "", "Event"], [1975, 1, 1, "", "Stream"], [1976, 1, 1, "", "StreamContext"], [1977, 5, 1, "", "current_device"], [1978, 5, 1, "", "current_stream"], [1979, 1, 1, "", "device"], [1980, 5, 1, "", "device_count"], [1981, 1, 1, "", "device_of"], [1982, 5, 1, "", "empty_cache"], [1983, 5, 1, "", "get_device_capability"], [1984, 5, 1, "", "get_device_name"], [1985, 5, 1, "", "get_device_properties"], [1986, 5, 1, "", "get_rng_state"], [1987, 5, 1, "", "get_rng_state_all"], [1988, 5, 1, "", "init"], [1989, 5, 1, "", "initial_seed"], [1990, 5, 1, "", "is_available"], [1991, 5, 1, "", "is_initialized"], [1992, 5, 1, "", "manual_seed"], [1993, 5, 1, "", "manual_seed_all"], [2109, 0, 0, "-", "random"], [1994, 5, 1, "", "seed"], [1995, 5, 1, "", "seed_all"], [1996, 5, 1, "", "set_device"], [1997, 5, 1, "", "set_rng_state"], [1998, 5, 1, "", "set_rng_state_all"], [1999, 5, 1, "", "set_stream"], [2000, 5, 1, "", "stream"], [2109, 0, 0, "-", "streams"], [2001, 5, 1, "", "synchronize"]], "torch.xpu.Event": [[1974, 3, 1, "", "elapsed_time"], [1974, 3, 1, "", "query"], [1974, 3, 1, "", "record"], [1974, 3, 1, "", "synchronize"], [1974, 3, 1, "", "wait"]], "torch.xpu.Stream": [[1975, 3, 1, "", "query"], [1975, 3, 1, "", "record_event"], [1975, 3, 1, "", "synchronize"], [1975, 3, 1, "", "wait_event"], [1975, 3, 1, "", "wait_stream"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 22, 2006, 2033, 2040], "mix": [0, 2006, 2033], "precis": [0, 2033, 2037, 2049], "packag": [0, 1, 15, 27, 2024, 2052, 2059], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 14, 16, 17, 22, 25, 26, 27, 29, 30, 32, 33, 34, 45, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 71, 72, 73, 74, 75, 76, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 896, 897, 898, 899, 901, 902, 903, 904, 907, 908, 909, 910, 911, 912, 913, 914, 918, 919, 920, 921, 922, 923, 924, 925, 926, 929, 930, 931, 932, 933, 934, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1579, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1781, 1782, 1783, 1784, 1785, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1977, 1978, 1980, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2019, 2020, 2021, 2022, 2023, 2024, 2027, 2028, 2029, 2030, 2031, 2032, 2037, 2039, 2040, 2044, 2049, 2051, 2053, 2056, 2058, 2059, 2061, 2065, 2066, 2070, 2071, 2072, 2073, 2074, 2075, 2077, 2078, 2079, 2081, 2082, 2083, 2084, 2085, 2086, 2094, 2095, 2101, 2104, 2106, 2107, 2108, 2109], "amp": [0, 2037], "autocast": [0, 2033], "gradient": [0, 1, 58, 1219, 2033, 2034, 2040, 2081, 2094], "scale": [0, 2033, 2045], "op": [0, 12, 83, 2011, 2013, 2033, 2056, 2081], "refer": [0, 12, 18, 49, 50, 54, 61, 2006, 2008, 2009, 2010, 2021, 2026, 2044, 2054, 2059, 2061, 2062, 2065, 2069, 2078, 2086, 2105], "elig": 0, "cuda": [0, 2, 10, 17, 18, 19, 208, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 2024, 2033, 2037, 2041, 2044, 2048, 2050, 2052, 2088, 2094, 2101, 2105], "specif": [0, 22, 50, 2072], "behavior": [0, 22, 2034, 2043], "can": [0, 2034, 2041, 2094, 2100], "float16": 0, "float32": 0, "promot": [0, 7, 85], "widest": 0, "input": [0, 49, 2025, 2033, 2043], "type": [0, 22, 50, 85, 602, 2008, 2009, 2039, 2056, 2059, 2078, 2107], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1598], "over": [0, 8, 2008], "binary_cross_entropi": [0, 1597], "cpu": [0, 2, 10, 16, 205, 997, 998, 999, 1000, 1001, 1002, 1003, 2034, 2036, 2048, 2062, 2087], "bfloat16": [0, 154], "differenti": [1, 2034], "autograd": [1, 10, 11, 15, 57, 889, 890, 891, 892, 893, 896, 897, 898, 899, 901, 902, 903, 904, 907, 908, 909, 910, 911, 912, 913, 914, 918, 919, 920, 921, 922, 923, 924, 925, 926, 929, 930, 931, 932, 933, 934, 2026, 2033, 2034, 2039, 2040, 2056, 2067, 2068], "forward": [1, 890, 2039, 2068], "mode": [1, 45, 55, 413, 1371, 2034, 2039, 2043, 2056, 2062, 2068], "function": [1, 27, 33, 51, 53, 54, 56, 58, 61, 81, 84, 889, 890, 891, 892, 901, 902, 903, 904, 907, 908, 909, 910, 911, 912, 913, 1163, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 2006, 2007, 2008, 2009, 2011, 2014, 2016, 2025, 2027, 2028, 2031, 2033, 2034, 2040, 2043, 2051, 2056, 2065, 2072, 2073, 2094, 2104], "higher": 1, "level": [1, 10, 83, 2013, 2065], "api": [1, 10, 12, 15, 18, 30, 38, 49, 54, 57, 61, 2005, 2006, 2009, 2013, 2021, 2026, 2036, 2037, 2039, 2044, 2045, 2054, 2056, 2059, 2060, 2061, 2062, 2065, 2086, 2090, 2091, 2093, 2094, 2095, 2105], "local": [1, 2009, 2034, 2081, 2100, 2102], "disabl": [1, 22, 978, 2006, 2034, 2081, 2094, 2095], "comput": [1, 58, 2034, 2049, 2068, 2081, 2094], "default": [1, 22, 23, 2008, 2034, 2037, 2043, 2064, 2091], "layout": [1, 2075], "manual": 1, "In": [1, 8, 2034, 2035, 2081], "place": [1, 57, 2025, 2034, 2035, 2056, 2081], "oper": [1, 10, 23, 27, 49, 57, 77, 86, 2008, 2009, 2014, 2016, 2025, 2026, 2027, 2034, 2039, 2045, 2052, 2056, 2057, 2062, 2072, 2078, 2081, 2093, 2101], "tensor": [1, 11, 15, 32, 49, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 1935, 2007, 2011, 2014, 2017, 2024, 2025, 2026, 2027, 2034, 2039, 2051, 2056, 2062, 2065, 2072, 2075, 2076, 2078, 2081, 2093], "correct": [1, 61, 2034], "check": [1, 35, 61, 2006, 2034, 2044, 2100], "variabl": [1, 19, 24, 27, 45, 2006, 2008, 2009, 2018, 2080, 2097, 2106], "deprec": 1, "context": [1, 28, 42, 67, 2068], "method": [1, 37, 38, 41, 47, 2007, 2008, 2011, 2056, 2065, 2072], "mixin": 1, "custom": [1, 36, 47, 61, 2009, 2013, 2033, 2037, 2039, 2040, 2046, 2056, 2058, 2059, 2062, 2089], "util": [1, 3, 4, 5, 10, 14, 22, 26, 27, 34, 54, 56, 1083, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1958, 1959, 1960, 1961, 1962, 2012, 2019, 2020, 2028, 2029, 2051, 2065, 2077, 2081, 2083, 2102, 2108], "numer": [1, 2043, 2049, 2063], "profil": [1, 27, 929, 930, 931, 932, 933, 934, 1381, 1382, 1383, 2022, 2045, 2046, 2061, 2097, 2101, 2103], "debug": [1, 23, 24, 27, 61, 83, 2006, 2062, 2063, 2089, 2094, 2103], "anomali": 1, "detect": 1, "graph": [1, 17, 49, 50, 61, 78, 921, 922, 923, 924, 925, 926, 1039, 2006, 2034, 2037, 2062, 2088, 2091, 2094, 2101, 2102, 2103], "backend": [2, 27, 44, 45, 2006, 2044, 2047, 2055, 2062, 2064, 2067, 2084, 2087, 2089, 2103], "cudnn": 2, "mha": 2, "mp": [2, 10, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 2022, 2047], "mkl": 2, "mkldnn": [2, 10], "nnpack": 2, "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 2050, 2097], "bottleneck": 4, "checkpoint": [5, 23, 29], "pytorch": [6, 7, 8, 9, 10, 15, 25, 27, 49, 57, 2005, 2006, 2007, 2011, 2034, 2037, 2039, 2050, 2051, 2056, 2060, 2062, 2065, 2084, 2088, 2099, 2100, 2103], "govern": [6, 9, 10], "build": [6, 7, 10, 2036, 2045, 2046, 2052], "ci": [6, 10], "how": [6, 23, 55, 2004, 2034, 2039, 2058, 2059, 2092, 2093, 2094, 2100], "add": [6, 9, 96, 684], "new": [6, 7, 9, 2013], "maintain": [6, 9, 10], "contribut": [7, 2053], "guid": 7, "process": [7, 9, 22, 42, 2033], "get": [7, 30, 2056, 2084, 2094, 2096], "start": [7, 30, 42, 1382, 2084, 2096], "propos": 7, "featur": [7, 2045, 2046, 2094], "report": [7, 2041], "issu": [7, 2006, 2054, 2101], "implement": [7, 35, 44, 47, 2004, 2038, 2043, 2056, 2063, 2065, 2069, 2091, 2093], "fix": [7, 45, 55, 260, 1143], "bug": 7, "ad": [7, 2039, 2056, 2091], "tutori": [7, 10, 2059, 2060, 2067], "improv": [7, 2046], "document": [7, 30, 2005], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 61, 2006, 2037, 2059, 2094], "readabl": 7, "test": [7, 2009, 2013, 2039, 2059, 2079, 2100], "case": [7, 2006], "make": [7, 9, 2088, 2091], "codebas": 7, "more": [7, 49, 53, 2067, 2084], "robust": 7, "triag": 7, "about": [7, 2034, 2067, 2093], "sourc": [7, 2050, 2052, 2059], "develop": [7, 49, 2005, 2053, 2084], "common": [7, 27, 61, 2045, 2062], "mistak": 7, "To": 7, "avoid": [7, 2048, 2050, 2056, 2059], "frequent": [7, 2006, 2041, 2056, 2062, 2094], "ask": [7, 2006, 2041, 2056, 2062, 2094], "question": [7, 2006, 2041, 2056, 2062, 2094], "On": [7, 23, 2008], "python": [7, 8, 27, 49, 57, 64, 65, 66, 67, 68, 69, 70, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2013, 2039, 2050, 2056, 2091], "doc": [7, 10, 2044], "c": [7, 10, 15, 2013, 2034, 2039, 2044, 2051, 2056, 2085], "overview": [7, 18, 49, 61, 2053, 2054, 2059, 2061, 2072, 2089, 2092], "design": [8, 2009, 2038, 2067, 2068, 2069], "philosophi": 8, "principl": [8, 9], "1": [8, 45, 55, 2006, 2040, 2091], "usabl": 8, "perform": [8, 10, 2046, 2051, 2093, 2100, 2101, 2103], "2": [8, 55, 2006, 2037, 2040, 2041, 2062, 2065, 2099, 2100, 2103], "simpl": [8, 2008, 2009, 2046, 2054, 2068], "easi": 8, "3": [8, 45, 55], "first": [8, 2059], "best": [8, 2037, 2048, 2062, 2087], "class": [8, 37, 61, 2006, 2008, 2009, 2011, 2056, 2058, 2059, 2078], "languag": [8, 2005, 2006, 2008, 2009, 2010], "interoper": 8, "mechan": [9, 2031, 2034, 2043], "summari": [9, 2062], "modul": [9, 10, 54, 56, 61, 1519, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 2006, 2007, 2008, 2009, 2011, 2028, 2034, 2039, 2046, 2051, 2059, 2062, 2099], "core": [9, 10, 2098], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 2009], "confirm": 9, "remov": [9, 1747, 2025], "The": [9, 61, 2009, 2034, 2090], "re": [9, 2059], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 45, 55, 2094], "controversi": 9, "gener": [9, 17, 28, 57, 61, 87, 2035, 2040, 2050, 2062, 2063, 2081, 2091, 2092, 2105, 2109], "polici": [9, 2090], "faq": [9, 2052], "respons": 10, "nn": [10, 54, 56, 1579, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 2008, 2009, 2028, 2029, 2030, 2031, 2032, 2034, 2037, 2039, 2051, 2065, 2072, 2099], "optim": [10, 11, 31, 1781, 1782, 1783, 1784, 1785, 2033, 2034, 2037, 2058, 2067, 2068, 2081], "compil": [10, 56, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 2037, 2084, 2085, 2086, 2094, 2095, 2101, 2103], "jit": [10, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 2006, 2009, 2012], "torchscript": [10, 15, 2006, 2007, 2008, 2009, 2011, 2036, 2045, 2053, 2056, 2057, 2059], "fx": [10, 61, 62, 78, 79, 80, 82, 85, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 2046, 2062, 2065, 2083], "torchdynamo": [10, 2038, 2053, 2054, 2055, 2088, 2092, 2095, 2103], "distribut": [10, 27, 29, 30, 31, 32, 33, 45, 2028, 2031, 2038, 2044, 2046, 2067, 2068, 2094], "rng": 10, "multiprocess": [10, 42, 2024, 2037, 2048, 2052], "dataload": [10, 2050], "linear": [10, 11, 731, 732, 755, 763, 780, 1170, 1506, 1642, 2028, 2031, 2049, 2072], "algebra": [10, 11, 2049, 2072], "linalg": [10, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 2014, 2049], "spars": [10, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 2028, 2031, 2072], "nestedtensor": 10, "nest": [10, 2027], "maskedtensor": [10, 2016], "mask": [10, 2016], "fast": [10, 51, 2043, 2068], "fourier": [10, 51], "transform": [10, 33, 51, 53, 54, 56, 58, 61, 1563, 2028, 2039, 2046, 2094, 2102], "fft": [10, 51, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142], "inductor": 10, "gpu": [10, 27, 2028, 2031, 2033, 2041, 2060, 2097], "triton": [10, 2097], "nvfuser": 10, "amd": [10, 2049], "rocm": [10, 2044], "hip": [10, 2044], "tool": [10, 17, 2063, 2072], "c10": 10, "dispatch": 10, "onnx": [10, 78, 79, 86, 2053, 2054, 2055, 2056, 2057], "export": [10, 49, 50, 2053, 2054, 2056, 2059, 2062, 2065, 2081, 2085, 2094], "mobil": 10, "edg": [10, 2006, 2059], "model": [10, 15, 49, 70, 2004, 2033, 2041, 2045, 2054, 2058, 2059, 2060, 2062, 2065, 2085, 2090, 2096, 2097], "compress": [10, 2072], "window": [10, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2052, 2070], "appl": 10, "m1": 10, "powerpc": 10, "aarch64": 10, "librari": [10, 2005, 2013, 2050], "xla": 10, "torchserv": 10, "torchvis": [10, 55], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 983, 2034, 2043], "number": [11, 17, 45, 2034, 2036, 2041, 2050, 2081, 2109], "creat": [11, 2006, 2013, 2026], "transit": [11, 45], "from": [11, 45, 56, 61, 2004, 2013, 2025, 2052, 2056, 2059], "old": 11, "represent": [11, 78], "access": [11, 2008, 2059, 2103], "real": [11, 482, 1837, 2043], "imag": [11, 310, 1236], "angl": [11, 116, 697], "ab": [11, 88, 680], "serial": [11, 49, 2051, 2081], "control": [12, 49, 57, 61, 68, 2050, 2081, 2095], "flow": [12, 49, 57, 61, 68, 2062, 2081], "cond": [12, 71, 986, 1297], "exampl": [12, 39, 49, 61, 2033, 2038, 2039, 2040, 2054, 2056, 2068, 2089], "invari": 12, "higher_ord": 12, "__config__": 13, "cpp_extens": 14, "extend": [15, 35, 2013, 2039, 2040, 2103], "extens": [15, 17, 2039, 2045, 2052], "author": [15, 61], "stream": [16, 17, 18, 995, 1002, 1010, 1080, 1391, 1402, 1975, 2000, 2023, 2037, 2109], "event": [16, 17, 36, 38, 1007, 1378, 1390, 1974, 2022, 2023, 2109], "random": [17, 22, 57, 2041, 2050, 2066, 2081, 2109], "commun": [17, 23, 27, 2005, 2042], "collect": [17, 27], "beta": [17, 33], "memori": [17, 22, 2037, 2041, 2044, 2046, 2050, 2105], "manag": [17, 28, 67, 2024, 2037, 2044, 2059, 2102], "nvidia": [17, 2049], "nvtx": [17, 1064, 1065, 1066, 1067], "jiter": [17, 1047, 1048], "sanit": [17, 18], "prototyp": [17, 2062, 2063], "usag": [18, 30, 45, 2037, 2040, 2045, 2046, 2052, 2099, 2105], "environ": [19, 24, 27, 45, 2018, 2045, 2059, 2080, 2097, 2106], "data": [22, 49, 57, 69, 2009, 2038, 2041, 2056, 2063, 2078], "dataset": 22, "map": [22, 75, 2044], "style": 22, "iter": [22, 2008], "load": [22, 1273, 1337, 2004, 2051, 2059, 2062], "order": [22, 2034], "sampler": 22, "batch": [22, 55, 2049, 2058], "non": [22, 49, 61, 2028, 2031, 2034, 2037, 2049, 2059, 2062], "work": [22, 54, 2017, 2033, 2041, 2072, 2093, 2094, 2101], "collate_fn": 22, "singl": [22, 45, 2033], "multi": [22, 27, 45, 2028, 2031], "platform": 22, "pin": [22, 2037], "ddp": 23, "hook": [23, 2034, 2046, 2099], "us": [23, 27, 61, 2008, 2034, 2037, 2039, 2043, 2054, 2056, 2058, 2059, 2060, 2062, 2072, 2094, 2096, 2101, 2103, 2105], "what": [23, 50, 53, 55, 58, 2016, 2034, 2059, 2092, 2094, 2100, 2101], "doe": [23, 2034, 2093, 2094], "powersgd": 23, "state": [23, 2046, 2059, 2105], "acknowledg": [23, 2060], "deploi": 25, "ha": 25, "been": 25, "move": 25, "multipi": 25, "determinist": 26, "come": [27, 2034], "which": [27, 2034, 2094], "choos": 27, "network": [27, 2037, 2041, 2046], "interfac": [27, 1271, 2044], "other": [27, 2028, 2050, 2059, 2072, 2081, 2093], "nccl": [27, 2037], "basic": [27, 2009, 2026, 2040, 2067, 2078, 2101], "initi": [27, 2028, 2046, 2078], "tcp": 27, "share": [27, 2024, 2037, 2059, 2069], "file": [27, 2024, 2051, 2059], "system": [27, 2009, 2024, 2040], "post": [27, 2062], "kei": [27, 78, 2052], "valu": [27, 73, 613, 2008, 2009, 2049, 2064, 2069], "store": [27, 44], "group": 27, "devicemesh": 27, "point": [27, 2045], "synchron": [27, 1003, 1081, 1387, 1403, 2001], "asynchron": [27, 2009, 2037, 2048], "third": 27, "parti": 27, "launch": [27, 45, 2101], "spawn": [27, 2024], "applic": 27, "breakpoint": 27, "monitor": [27, 2021], "barrier": 27, "torch_distributed_debug": 27, "log": [27, 368, 1339, 2045], "join": [28, 2081], "elast": [30, 35, 45], "advanc": [30, 2046], "plugin": 30, "parallel": [32, 1692, 2037, 2038, 2041, 2060, 2081], "probabl": 33, "score": 33, "pathwis": 33, "deriv": [33, 2034], "exponentialfamili": 33, "bernoulli": [33, 152, 942], "binomi": 33, "categor": 33, "cauchi": 33, "chi2": 33, "continuousbernoulli": 33, "dirichlet": 33, "exponenti": [33, 1876], "fishersnedecor": 33, "gamma": 33, "geometr": 33, "gumbel": 33, "halfcauchi": 33, "halfnorm": 33, "independ": 33, "inversegamma": 33, "kumaraswami": 33, "lkjcholeski": 33, "laplac": 33, "lognorm": 33, "lowrankmultivariatenorm": 33, "mixturesamefamili": 33, "multinomi": [33, 420, 1405], "multivariatenorm": 33, "negativebinomi": 33, "normal": [33, 1662, 1765, 2028, 2058], "onehotcategor": 33, "pareto": 33, "poisson": [33, 1812], "relaxedbernoulli": 33, "logitrelaxedbernoulli": 33, "relaxedonehotcategor": 33, "studentt": 33, "transformeddistribut": 33, "uniform": 33, "vonmis": 33, "weibul": 33, "wishart": 33, "kl": 33, "diverg": [33, 2011], "constraint": [33, 2037], "registri": [33, 44, 86], "dlpack": 34, "agent": 35, "server": [35, 44, 47], "concept": 35, "watchdog": 35, "health": 35, "launcher": 36, "rendezv": [36, 44, 45], "handler": [36, 41, 44, 2041], "metric": [36, 41], "error": [37, 2041, 2052, 2062, 2063, 2103], "propag": [37, 2026], "object": [38, 70, 2059], "torchelast": 40, "kubernet": 40, "multipl": [42, 2033, 2037, 2039, 2060], "worker": [42, 45, 2041], "quickstart": 43, "except": [44, 2041], "dynam": [44, 49, 57, 61, 72, 73, 2062, 2065, 2090, 2093], "c10d": 44, "etcd": 44, "legaci": 44, "torchrun": 45, "node": [45, 50, 79, 82, 85, 921, 922, 923, 924, 925, 2034], "stack": [45, 1913, 2062], "fault": 45, "toler": 45, "size": [45, 536, 2027, 2042, 2071], "failur": 45, "min": [45, 410, 1368], "max": [45, 406, 1363], "4": [45, 55], "up": [45, 2094], "membership": [45, 2009], "note": [45, 78, 2005, 2009, 2037, 2042, 2062, 2067], "definit": [45, 2009], "deploy": [45, 2045], "import": [45, 2004, 2052, 2059, 2093], "notic": [45, 2004], "subprocess": [46, 2024], "handl": [46, 2094], "retriev": 46, "subprocesshandl": 46, "expir": 47, "timer": 47, "client": 47, "write": [47, 61, 2034, 2039, 2056, 2102], "train": [48, 2033, 2046, 2048, 2062, 2094], "script": [48, 1277, 2006, 2052, 2056], "exist": 49, "framework": [49, 2059, 2067], "an": [49, 2004, 2056, 2058, 2059], "strict": 49, "express": [49, 2008, 2009], "special": [49, 2009, 2034, 2073, 2091], "shape": [49, 57, 72, 522, 2056, 2090, 2091, 2093], "primit": [49, 2009], "contain": [49, 2028], "limit": [49, 57, 61, 2004, 2040, 2056, 2088, 2095, 2099], "break": [49, 2008, 2009, 2091, 2094, 2101, 2103], "depend": [49, 57, 2054, 2059, 2068], "miss": 49, "meta": [49, 2009, 2017], "kernel": [49, 937, 2044, 2062, 2097, 2101], "read": [49, 53, 2056, 2084, 2100], "addit": [49, 78], "link": 49, "user": [49, 2059, 2069, 2084], "deep": [49, 2084, 2091], "dive": [49, 2084, 2091], "ir": [50, 2098, 2102], "assumpt": [50, 2069], "i": [50, 58, 2016, 2034, 2059, 2092, 2093, 2094, 2100], "exportedprogram": 50, "call_funct": 50, "metadata": [50, 921, 2045], "placehold": 50, "output": [50, 2043, 2091], "get_attr": 50, "symint": [50, 2090], "faketensor": 50, "pytre": 50, "abl": 50, "helper": 51, "fullyshardeddataparallel": 52, "func": [53, 54, 56, 58, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 2039, 2040, 2094], "ar": [53, 58, 2004, 2034, 2059, 2091, 2094], "compos": [53, 58, 2089], "why": [53, 58, 2037, 2043, 2059, 2072, 2094], "patch": [55, 2059], "norm": [55, 452, 1322, 1764], "": [55, 2059, 2094, 2100], "happen": 55, "option": [55, 2008, 2036, 2052, 2058], "batchnorm": 55, "paramet": [55, 1710, 2008, 2058], "functorch": [55, 56], "eval": [55, 2034], "migrat": [56, 2006], "make_funct": 56, "combine_state_for_ensembl": 56, "ux": 57, "vmap": [57, 58, 892, 1174, 1969, 2039, 2040, 2094], "mutat": [57, 76, 2081], "arbitrari": [57, 2059], "structur": [57, 69, 2009, 2072], "out": [57, 2025, 2041], "item": [57, 351], "nonzero": [57, 451, 1763], "friend": 57, "whirlwind": 58, "tour": 58, "grad": [58, 289, 914, 1164, 2034, 2037, 2094], "auto": 58, "vector": 58, "vjp": [58, 913, 1173], "jacobian": [58, 910], "product": [58, 2014, 2094], "jvp": [58, 891, 911, 1169, 2040], "jacrev": [58, 1168], "jacfwd": [58, 1167], "hessian": [58, 908, 1166], "__future__": 59, "futur": 60, "A": [61, 2046, 2054, 2091], "quick": 61, "primer": 61, "manipul": [61, 2026], "direct": 61, "subgraph": [61, 2102], "rewrit": [61, 2102], "With": [61, 2011], "replace_pattern": 61, "proxi": 61, "retrac": 61, "interpret": [61, 2006], "pattern": [61, 2008, 2056, 2059], "introduct": [61, 2016, 2027, 2062, 2091], "pitfal": [61, 2056], "pdb": 61, "print": [61, 2008, 2009], "to_fold": 61, "graphmodul": 61, "avail": 61, "debugg": 61, "symbol": [61, 81, 84, 2056, 2062, 2081, 2091], "trace": [61, 590, 1281, 1940, 2006, 2056, 2061, 2062, 2094, 2095, 2101], "static": [61, 2056, 2062, 2091], "tracer": [61, 2006], "leaf": 61, "miscellanea": 61, "experiment": [62, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 2014], "symbolic_shap": [62, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205], "exportdb": 63, "tag": [63, 2081], "support": [63, 2007, 2009, 2016, 2025, 2026, 2027, 2040, 2056, 2057, 2062, 2072, 2094, 2099], "assume_constant_result": [63, 74, 975], "autograd_funct": 63, "class_method": 63, "cond_branch_class_method": [63, 71, 72], "cond_branch_nested_funct": [63, 71, 72], "cond_branch_nonlocal_vari": [63, 71, 72], "cond_closed_over_vari": [63, 66, 71], "cond_operand": [63, 71, 72], "cond_pred": [63, 71, 72], "constrain_as_size_exampl": [63, 73, 74], "constrain_as_value_exampl": [63, 73, 74], "decor": 63, "dictionari": [63, 69, 2009], "dynamic_shape_assert": [63, 64], "dynamic_shape_constructor": [63, 72], "dynamic_shape_if_guard": [63, 68, 72], "dynamic_shape_map": [63, 72, 75], "dynamic_shape_sl": [63, 72], "dynamic_shape_view": [63, 72], "fn_with_kwarg": [63, 69], "list_contain": [63, 64, 69, 72], "list_unpack": [63, 68, 69], "nested_funct": [63, 66], "null_context_manag": [63, 67], "pytree_flatten": 63, "scalar_output": [63, 72], "specialized_attribut": 63, "static_for_loop": [63, 68], "static_if": [63, 68], "tensor_setattr": [63, 65], "type_reflection_method": [63, 65], "user_input_mut": [63, 76], "Not": [63, 2011], "yet": 63, "dynamic_shape_round": [63, 65, 72], "model_attr_mut": [63, 70], "optional_input": [63, 70], "torch_sym_min": [63, 77], "assert": [64, 2009, 2044], "builtin": [65, 2007], "closur": [66, 2058], "escap": [74, 2094], "hatch": [74, 2094], "fxe0007": 78, "fxe0008": 79, "fxe0010": 80, "pass": [80, 2009, 2037, 2048, 2062, 2068, 2102], "fxe0011": 81, "call": [81, 2008, 2009, 2040, 2094], "fxe0012": 82, "unsupport": [82, 2008, 2009, 2011, 2056, 2057], "analysi": 82, "fxe0013": 83, "fxe0014": 84, "find": [84, 86, 2059, 2101], "opschema": 84, "match": [84, 2008, 2026], "fxe0015": 85, "insert": 85, "fxe0016": 86, "overload": 86, "abs_": 89, "absolut": [90, 681], "absolute_": 91, "aco": [92, 682], "acos_": 93, "acosh": [94, 683], "acosh_": 95, "add_": 97, "addbmm": [98, 685], "addbmm_": 99, "addcdiv": [100, 686], "addcdiv_": 101, "addcmul": [102, 687], "addcmul_": 103, "addmm": [104, 688, 1893], "addmm_": 105, "addmv": [106, 689], "addmv_": 107, "addr": [108, 690], "addr_": 109, "adjoint": [110, 691], "all": [111, 692, 2039, 2056, 2058], "allclos": [112, 693], "amax": [113, 694], "amin": [114, 695], "aminmax": [115, 696], "ani": [117, 698, 2009, 2094, 2100], "apply_": 118, "arcco": [119, 866], "arccos_": 120, "arccosh": [121, 867], "arccosh_": 122, "arcsin": [123, 868], "arcsin_": 124, "arcsinh": [125, 869], "arcsinh_": 126, "arctan": [127, 870], "arctan2": [128, 871], "arctan2_": 129, "arctan_": 130, "arctanh": [131, 872], "arctanh_": 132, "argmax": [133, 874], "argmin": [134, 875], "argsort": [135, 876], "argwher": [136, 877], "as_strid": [137, 878], "as_subclass": 138, "asin": [139, 881], "asin_": 140, "asinh": [141, 882], "asinh_": 142, "atan": [143, 883], "atan2": [144, 884], "atan2_": 145, "atan_": 146, "atanh": [147, 885], "atanh_": 148, "backward": [149, 889, 893, 2034, 2035, 2037, 2043, 2068], "baddbmm": [150, 940], "baddbmm_": 151, "bernoulli_": 153, "bincount": [155, 943], "bitwise_and": [156, 944], "bitwise_and_": 157, "bitwise_left_shift": [158, 945], "bitwise_left_shift_": 159, "bitwise_not": [160, 946], "bitwise_not_": 161, "bitwise_or": [162, 947], "bitwise_or_": 163, "bitwise_right_shift": [164, 948], "bitwise_right_shift_": 165, "bitwise_xor": [166, 949], "bitwise_xor_": 167, "bmm": [168, 952], "bool": 169, "broadcast_to": [170, 955], "byte": 171, "cauchy_": 172, "ccol_indic": 173, "cdoubl": 174, "ceil": [175, 961], "ceil_": 176, "cfloat": 177, "chalf": 178, "char": 179, "choleski": [180, 963, 1295], "cholesky_invers": [181, 964], "cholesky_solv": [182, 965], "chunk": [183, 966], "clamp": [184, 770, 967], "clamp_": 185, "clip": [186, 968, 2033], "clip_": 187, "clone": [188, 969], "coalesc": 189, "col_indic": 190, "conj": [191, 987], "conj_phys": [192, 988], "conj_physical_": 193, "contigu": 194, "copy_": 195, "copysign": [196, 989], "copysign_": 197, "corrcoef": [198, 990], "co": [199, 991], "cos_": 200, "cosh": [201, 992], "cosh_": 202, "count_nonzero": [203, 993], "cov": [204, 994], "cross": [206, 1004, 1298, 2034], "crow_indic": 207, "cummax": [209, 1084], "cummin": [210, 1085], "cumprod": [211, 1086], "cumprod_": 212, "cumsum": [213, 1087], "cumsum_": 214, "data_ptr": 215, "deg2rad": [216, 1089], "dense_dim": 217, "dequant": [218, 1090, 2062], "det": [219, 1091, 1299], "detach": 220, "detach_": 221, "devic": [222, 1026, 1396, 1979, 2017, 2037, 2049, 2075], "diag": [223, 1092], "diag_emb": [224, 1093], "diagflat": [225, 1094], "diagon": [226, 1095, 1300], "diagonal_scatt": [227, 1096], "diff": [228, 1097], "digamma": [229, 1098], "digamma_": 230, "dim": [231, 2025], "dim_ord": 232, "dist": [233, 1099], "div": [234, 1100, 2051], "div_": 235, "divid": [236, 1101], "divide_": 237, "dot": [238, 1102], "doubl": 239, "dsplit": [240, 1103], "element_s": 241, "eq": [242, 1110], "eq_": 243, "equal": [244, 1111], "erf": [245, 1112], "erf_": 246, "erfc": [247, 1113], "erfc_": 248, "erfinv": [249, 1114], "erfinv_": 250, "exp": [251, 1115], "exp_": 252, "expand": 253, "expand_a": 254, "expm1": [255, 1117], "expm1_": 256, "exponential_": 257, "fill_": 258, "fill_diagonal_": 259, "fix_": 261, "flatten": [262, 1144, 1464], "flip": [263, 1145], "fliplr": [264, 1146], "flipud": [265, 1147], "float": [266, 2051], "float_pow": [267, 1148], "float_power_": 268, "floor": [269, 1149], "floor_": 270, "floor_divid": [271, 1150], "floor_divide_": 272, "fmax": [273, 1151], "fmin": [274, 1152], "fmod": [275, 1153], "fmod_": 276, "frac": [277, 1154], "frac_": 278, "frexp": [279, 1155], "gather": [280, 1019, 1206], "gcd": [281, 1207], "gcd_": 282, "ge": [283, 1208], "ge_": 284, "geometric_": 285, "geqrf": [286, 1209], "ger": [287, 1210], "get_devic": 288, "greater": [290, 1220], "greater_": 291, "greater_equ": [292, 1221], "greater_equal_": 293, "gt": [294, 1222], "gt_": 295, "half": 296, "hardshrink": [297, 1474, 1628], "heavisid": [298, 1225], "histc": [299, 1226], "histogram": [300, 1227], "hsplit": [301, 1229], "hypot": [302, 1232], "hypot_": 303, "i0": [304, 1233], "i0_": 305, "igamma": [306, 1234], "igamma_": 307, "igammac": [308, 1235], "igammac_": 309, "index_add": [311, 1237], "index_add_": 312, "index_copi": [313, 1238], "index_copy_": 314, "index_fil": 315, "index_fill_": 316, "index_put": 317, "index_put_": 318, "index_reduc": [319, 1239], "index_reduce_": 320, "index_select": [321, 1240], "indic": [322, 2005], "inner": [323, 1242], "int": [324, 2091], "int_repr": 325, "invers": [326, 1243, 2014], "is_coalesc": 327, "is_complex": [328, 1244], "is_conj": [329, 1245], "is_contigu": 330, "is_cuda": 331, "is_floating_point": [332, 1247], "is_infer": 333, "is_leaf": 334, "is_meta": 335, "is_pin": 336, "is_quant": 337, "is_set_to": 338, "is_shar": 339, "is_sign": 340, "is_spars": 341, "is_sparse_csr": 342, "isclos": [343, 1254], "isfinit": [344, 1255], "isinf": [345, 1257], "isnan": [346, 1258], "isneginf": [347, 1259], "isposinf": [348, 1260], "isreal": [349, 1261], "istft": [350, 1262], "items": 352, "kthvalu": [353, 1287], "lcm": [354, 1288], "lcm_": 355, "ldexp": [356, 1289], "ldexp_": 357, "le": [358, 1290], "le_": 359, "lerp": [360, 1291], "lerp_": 361, "less": [362, 1292], "less_": 363, "less_equ": [364, 1293], "less_equal_": 365, "lgamma": [366, 1294], "lgamma_": 367, "log10": [369, 1340], "log10_": 370, "log1p": [371, 1341], "log1p_": 372, "log2": [373, 1342], "log2_": 374, "log_": 375, "log_normal_": 376, "logaddexp": [377, 1343], "logaddexp2": [378, 1344], "logcumsumexp": [379, 1345], "logdet": [380, 1346], "logical_and": [381, 1347], "logical_and_": 382, "logical_not": [383, 1348], "logical_not_": 384, "logical_or": [385, 1349], "logical_or_": 386, "logical_xor": [387, 1350], "logical_xor_": 388, "logit": [389, 1351], "logit_": 390, "logsumexp": [391, 1353], "long": 392, "lt": [393, 1354], "lt_": 394, "lu": [395, 1312, 1355], "lu_solv": [396, 1315, 1356], "map_": 397, "masked_fil": 398, "masked_fill_": 399, "masked_scatt": 400, "masked_scatter_": 401, "masked_select": [402, 1359], "matmul": [403, 1316, 1360], "matrix_exp": [404, 1317, 1361], "matrix_pow": [405, 1319, 1362], "maximum": [407, 1364], "mean": [408, 1365], "median": [409, 1366], "minimum": [411, 1369], "mm": [412, 1370, 1897], "module_load": 414, "moveaxi": [415, 1372], "movedim": [416, 1373], "msort": [417, 1388], "mul": [418, 1404], "mul_": 419, "multipli": [421, 1406], "multiply_": 422, "mv": [423, 1407], "mvlgamma": [424, 1408], "mvlgamma_": 425, "nan_to_num": [426, 1409], "nan_to_num_": 427, "nanmean": [428, 1410], "nanmedian": [429, 1411], "nanquantil": [430, 1412], "nansum": [431, 1413], "narrow": [432, 1414], "narrow_copi": [433, 1415], "nbyte": 434, "ndim": 435, "ndimens": 436, "ne": [437, 1416], "ne_": 438, "neg": [439, 441, 1417, 1418], "neg_": 440, "negative_": 442, "nelement": 443, "new_empti": 444, "new_ful": 445, "new_on": 446, "new_tensor": 447, "new_zero": 448, "nextaft": [449, 1419], "nextafter_": 450, "normal_": 453, "not_equ": [454, 1766], "not_equal_": 455, "numel": [456, 1767], "numpi": [457, 2056, 2094], "orgqr": [458, 1806], "ormqr": [459, 1807], "outer": [460, 1808], "permut": [461, 1810, 2025], "pin_memori": 462, "pinvers": [463, 1811], "polygamma": [464, 1814], "polygamma_": 465, "posit": [466, 1815], "pow": [467, 1816], "pow_": 468, "prod": [469, 1817], "put_": 470, "q_per_channel_axi": 471, "q_per_channel_scal": 472, "q_per_channel_zero_point": 473, "q_scale": 474, "q_zero_point": 475, "qr": [476, 1324, 1819], "qscheme": 477, "quantil": [478, 1820], "rad2deg": [479, 1827], "random_": 480, "ravel": [481, 1836], "reciproc": [483, 1838], "reciprocal_": 484, "record_stream": 485, "register_hook": [486, 924], "register_post_accumulate_grad_hook": 487, "remaind": [488, 1839], "remainder_": 489, "renorm": [490, 1840], "renorm_": 491, "repeat": 492, "repeat_interleav": [493, 1841], "requires_grad": [494, 2034], "requires_grad_": 495, "reshap": [496, 1842], "reshape_a": 497, "resize_": 498, "resize_as_": 499, "resolve_conj": [500, 1843], "resolve_neg": [501, 1844], "retain_grad": 502, "retains_grad": 503, "roll": [504, 1846], "rot90": [505, 1847], "round": [506, 1848], "round_": 507, "row_indic": 508, "rsqrt": [509, 1850], "rsqrt_": 510, "scatter": [511, 1021, 1852], "scatter_": 512, "scatter_add": [513, 1853], "scatter_add_": 514, "scatter_reduc": [515, 1854], "scatter_reduce_": 516, "select": [517, 1857, 2016], "select_scatt": [518, 1858], "set_": 519, "sgn": [520, 1870], "sgn_": 521, "share_memory_": 523, "short": 524, "sigmoid": [525, 758, 1550, 1679, 1871], "sigmoid_": 526, "sign": [527, 1872], "sign_": 528, "signbit": [529, 1884], "sin": [530, 1885], "sin_": 531, "sinc": [532, 1886], "sinc_": 533, "sinh": [534, 1887], "sinh_": 535, "slice_scatt": [537, 1888], "slogdet": [538, 1325, 1889], "smm": [539, 1890], "softmax": [540, 1553, 1683, 1891, 1899], "sort": [541, 1892], "sparse_dim": 542, "sparse_mask": 543, "sparse_resize_": 544, "sparse_resize_and_clear_": 545, "split": [546, 1908], "sqrt": [547, 1909], "sqrt_": 548, "squar": [549, 1910], "square_": 550, "squeez": [551, 1911], "squeeze_": 552, "sspaddmm": [553, 1912], "std": [554, 1914], "stft": [555, 1916], "storag": [556, 2074], "storage_offset": 557, "storage_typ": 558, "stride": 559, "sub": [560, 1917], "sub_": 561, "subtract": [562, 1918], "subtract_": 563, "sum": [564, 1901, 1919, 2028], "sum_to_s": 565, "svd": [566, 1329, 1920], "swapax": [567, 1922], "swapdim": [568, 1923], "t": [569, 1930, 2009, 2041, 2094], "t_": 570, "take": [571, 1931, 2058], "take_along_dim": [572, 1932], "tan": [573, 1933], "tan_": 574, "tanh": [575, 1560, 1688, 1934], "tanh_": 576, "tensor_split": [577, 1936], "tile": [578, 1938], "to_dens": 580, "to_mkldnn": 581, "to_spars": 582, "to_sparse_bsc": 583, "to_sparse_bsr": 584, "to_sparse_coo": 585, "to_sparse_csc": 586, "to_sparse_csr": 587, "tolist": 588, "topk": [589, 1939], "transpos": [591, 1941], "transpose_": 592, "triangular_solv": [593, 1944], "tril": [594, 1945], "tril_": 595, "triu": [596, 1947], "triu_": 597, "true_divid": [598, 1949], "true_divide_": 599, "trunc": [600, 1950], "trunc_": 601, "type_a": 603, "unbind": [604, 1951, 2027], "unflatten": [605, 1570, 1952], "unfold": [606, 1571, 1695], "uniform_": 607, "uniqu": [608, 1953], "unique_consecut": [609, 1954], "unsqueez": [610, 1956], "unsqueeze_": 611, "untyped_storag": 612, "var": [614, 1964], "vdot": [615, 1966], "view": [616, 2016, 2051, 2076, 2101], "view_a": 617, "vsplit": [618, 1970], "where": [619, 1972, 2004], "xlogi": [620, 1973], "xlogy_": 621, "zero_": 622, "_assert": 623, "_foreach_ab": 624, "_foreach_abs_": 625, "_foreach_aco": 626, "_foreach_acos_": 627, "_foreach_asin": 628, "_foreach_asin_": 629, "_foreach_atan": 630, "_foreach_atan_": 631, "_foreach_ceil": 632, "_foreach_ceil_": 633, "_foreach_co": 634, "_foreach_cos_": 635, "_foreach_cosh": 636, "_foreach_cosh_": 637, "_foreach_erf": 638, "_foreach_erf_": 639, "_foreach_erfc": 640, "_foreach_erfc_": 641, "_foreach_exp": 642, "_foreach_exp_": 643, "_foreach_expm1": 644, "_foreach_expm1_": 645, "_foreach_floor": 646, "_foreach_floor_": 647, "_foreach_frac": 648, "_foreach_frac_": 649, "_foreach_lgamma": 650, "_foreach_lgamma_": 651, "_foreach_log": 652, "_foreach_log10": 653, "_foreach_log10_": 654, "_foreach_log1p": 655, "_foreach_log1p_": 656, "_foreach_log2": 657, "_foreach_log2_": 658, "_foreach_log_": 659, "_foreach_neg": 660, "_foreach_neg_": 661, "_foreach_reciproc": 662, "_foreach_reciprocal_": 663, "_foreach_round": 664, "_foreach_round_": 665, "_foreach_sigmoid": 666, "_foreach_sigmoid_": 667, "_foreach_sin": 668, "_foreach_sin_": 669, "_foreach_sinh": 670, "_foreach_sinh_": 671, "_foreach_sqrt": 672, "_foreach_sqrt_": 673, "_foreach_tan": 674, "_foreach_tan_": 675, "_foreach_trunc": 676, "_foreach_trunc_": 677, "_foreach_zero_": 678, "_log": [679, 2015], "set_log": 679, "bnrelu2d": [699, 722], "bnrelu3d": [700, 723], "convbn1d": [701, 711], "convbn2d": [702, 712], "convbn3d": [703, 713], "convbnrelu1d": [704, 714], "convbnrelu2d": [705, 715], "convbnrelu3d": [706, 716], "convrelu1d": [707, 724], "convrelu2d": [708, 717, 725], "convrelu3d": [709, 718, 726], "linearrelu": [710, 719, 727, 728], "freeze_bn_stat": 720, "update_bn_stat": 721, "conv2d": [729, 738, 772, 1447, 1601], "conv3d": [730, 739, 773, 1448, 1602], "lstm": [733, 761, 1489, 2050], "multiheadattent": [734, 1525], "batchnorm2d": [735, 1434], "batchnorm3d": [736, 1435], "conv1d": [737, 771, 1446, 1600], "convtranspose1d": [740, 1449], "convtranspose2d": [741, 1450], "convtranspose3d": [742, 1451], "elu": [743, 774, 1460, 1614], "embed": [744, 1461, 1616], "embeddingbag": [745, 1462], "fxfloatfunct": 746, "floatfunct": 747, "groupnorm": [748, 1473], "hardswish": [749, 776, 1476, 1630], "instancenorm1d": [750, 1481], "instancenorm2d": [751, 1482], "instancenorm3d": [752, 1483], "layernorm": [753, 1491], "leakyrelu": [754, 1505], "qfunction": 756, "relu6": [757, 1540, 1672], "gru": [759, 1470], "grucel": [760, 1471], "lstmcell": [762, 1490], "rnncell": [764, 1537], "adaptive_avg_pool2d": [765, 1585], "adaptive_avg_pool3d": [766, 1586], "avg_pool2d": [767, 1593], "avg_pool3d": [768, 1594], "celu": [769, 1437, 1599], "hardsigmoid": [775, 1475, 1629], "hardtanh": [777, 1477, 1631], "interpol": [778, 1636], "leaky_relu": [779, 1640], "max_pool1d": [781, 1650], "max_pool2d": [782, 1651], "threshold": [783, 1562, 1690], "upsampl": [784, 1572, 1696], "upsample_bilinear": [785, 1697], "upsample_nearest": [786, 1698], "dequantstub": 787, "quantstub": 788, "quantwrapp": 789, "add_quant_dequ": 790, "backendconfig": 791, "backendpatternconfig": 792, "dtypeconfig": 793, "dtypewithconstraint": 794, "observationtyp": 795, "convert": [796, 2093], "default_eval_fn": 797, "fakequant": [798, 2062], "fakequantizebas": 799, "fixedqparamsfakequant": 800, "fusedmovingavgobsfakequant": 801, "default_fake_qu": 802, "default_fused_act_fake_qu": 803, "default_fused_per_channel_wt_fake_qu": 804, "default_fused_wt_fake_qu": 805, "default_histogram_fake_qu": 806, "default_per_channel_weight_fake_qu": 807, "default_weight_fake_qu": 808, "disable_fake_qu": 809, "disable_observ": 810, "enable_fake_qu": 811, "enable_observ": 812, "fuse_modul": 813, "convertcustomconfig": 814, "fusecustomconfig": 815, "preparecustomconfig": 816, "standalonemoduleconfigentri": 817, "histogramobserv": 818, "minmaxobserv": 819, "movingaverageminmaxobserv": 820, "movingaverageperchannelminmaxobserv": 821, "noopobserv": 822, "observerbas": 823, "perchannelminmaxobserv": 824, "placeholderobserv": 825, "recordingobserv": 826, "default_debug_observ": 827, "default_dynamic_quant_observ": 828, "default_float_qparams_observ": 829, "default_histogram_observ": 830, "default_observ": 831, "default_per_channel_weight_observ": 832, "default_placeholder_observ": 833, "default_weight_observ": 834, "get_observer_state_dict": 835, "load_observer_state_dict": 836, "prepar": [837, 2062, 2065], "prepare_qat": 838, "propagate_qconfig": 839, "model_is_export": 840, "qconfig": [841, 2062, 2065], "default_activation_only_qconfig": 842, "default_debug_qconfig": 843, "default_dynamic_qconfig": 844, "default_per_channel_qconfig": 845, "default_qat_qconfig": 846, "default_qat_qconfig_v2": 847, "default_qconfig": 848, "default_weight_only_qconfig": 849, "float16_dynamic_qconfig": 850, "float16_static_qconfig": 851, "float_qparams_weight_only_qconfig": 852, "per_channel_dynamic_qconfig": 853, "qconfigmap": 854, "get_default_qat_qconfig_map": 855, "get_default_qconfig_map": 856, "quantiz": [857, 2028, 2046, 2056, 2062, 2063, 2064, 2065], "quantize_dynam": 858, "convert_fx": 859, "fuse_fx": 860, "prepare_fx": 861, "prepare_qat_fx": 862, "quantize_qat": 863, "swap_modul": 864, "arang": 865, "are_deterministic_algorithms_en": 873, "as_tensor": 879, "asarrai": 880, "atleast_1d": 886, "atleast_2d": 887, "atleast_3d": 888, "unpackeddualtensor": 894, "dual_level": 895, "forward_ad": [896, 897, 898, 899], "enter_dual_level": 896, "exit_dual_level": 897, "make_du": 898, "unpack_du": 899, "backwardcfunct": 900, "functionctx": [901, 902, 903, 904], "mark_dirti": 901, "mark_non_differenti": 902, "save_for_backward": 903, "set_materialize_grad": 904, "inplacefunct": 905, "nestediofunct": 906, "once_differenti": 907, "hvp": 909, "vhp": 912, "inference_mod": 915, "set_grad_en": 916, "set_multithreading_en": 917, "gradcheck": [918, 919, 920, 2043], "gradcheckerror": 918, "gradgradcheck": [920, 2043], "name": [922, 2008, 2025, 2026], "next_funct": 923, "register_prehook": 925, "increment_vers": 926, "enforceuniqu": 927, "kinetosteptrack": 928, "load_nvprof": 929, "parse_nvprof_trac": 930, "export_chrome_trac": 931, "key_averag": 932, "self_cpu_time_tot": 933, "total_averag": 934, "record_funct": 935, "interv": 936, "memrecordsacc": 938, "stringtabl": 939, "bartlett_window": 941, "blackman_window": 950, "block_diag": 951, "broadcast_shap": 953, "broadcast_tensor": 954, "bucket": 956, "can_cast": 957, "cartesian_prod": 958, "cat": 959, "cdist": 960, "chain_matmul": 962, "column_stack": 970, "combin": [971, 2039], "compiled_with_cxx11_abi": 973, "allow_in_graph": [974, 2095], "cudagraph_mark_step_begin": 977, "is_compil": 979, "is_dynamo_compil": 980, "list_backend": 981, "reset": 982, "concat": 984, "concaten": 985, "streamcontext": [996, 1011, 1392, 1976], "current_devic": [997, 1023, 1393, 1977], "current_stream": [998, 1024, 1394, 1978], "device_count": [999, 1027, 1375, 1397, 1980], "is_avail": [1000, 1044, 1399, 1990], "set_devic": [1001, 1074, 1996], "cudagraph": [1005, 2088], "cudapluggablealloc": 1006, "externalstream": 1008, "outofmemoryerror": 1009, "caching_allocator_alloc": 1012, "caching_allocator_delet": 1013, "can_device_access_p": 1014, "change_current_alloc": 1015, "clock_rat": 1016, "comm": [1017, 1018, 1019, 1020, 1021], "broadcast": [1017, 2035], "broadcast_coalesc": 1018, "reduce_add": 1020, "current_blas_handl": 1022, "default_stream": [1025, 1395], "device_of": [1028, 1981], "empty_cach": [1029, 1377, 1982], "get_allocator_backend": 1030, "get_arch_list": 1031, "get_device_cap": [1032, 1983], "get_device_nam": [1033, 1984], "get_device_properti": [1034, 1985], "get_gencode_flag": 1035, "get_rng_stat": [1036, 1218, 1379, 1986], "get_rng_state_al": [1037, 1987], "get_sync_debug_mod": 1038, "graph_pool_handl": 1040, "init": [1041, 1398, 1988, 2032], "initial_se": [1042, 1241, 1989], "ipc_collect": 1043, "is_current_stream_captur": 1045, "is_initi": [1046, 1400, 1991], "_create_jit_fn": 1047, "_create_multi_output_jit_fn": 1048, "list_gpu_process": 1049, "make_graphed_cal": 1050, "manual_se": [1051, 1358, 1380, 1992], "manual_seed_al": [1052, 1993], "max_memory_alloc": 1053, "max_memory_cach": 1054, "max_memory_reserv": 1055, "mem_get_info": 1056, "memory_alloc": 1057, "memory_cach": 1058, "memory_reserv": 1059, "memory_snapshot": 1060, "memory_stat": 1061, "memory_summari": 1062, "memory_usag": 1063, "mark": 1064, "rang": [1065, 1835, 2008], "range_pop": 1066, "range_push": 1067, "power_draw": 1068, "reset_max_memory_alloc": 1069, "reset_max_memory_cach": 1070, "reset_peak_memory_stat": 1071, "seed": [1072, 1384, 1856, 1994], "seed_al": [1073, 1995], "set_per_process_memory_fract": [1075, 1385], "set_rng_stat": [1076, 1386, 1868, 1997], "set_rng_state_al": [1077, 1998], "set_stream": [1078, 1401, 1999], "set_sync_debug_mod": 1079, "temperatur": 1082, "cumulative_trapezoid": 1088, "dstack": 1104, "einsum": 1105, "empti": 1106, "empty_lik": 1107, "empty_strid": 1108, "enable_grad": 1109, "exp2": 1116, "ey": 1118, "fake_quantize_per_channel_affin": 1119, "fake_quantize_per_tensor_affin": 1120, "fft2": 1122, "fftfreq": 1123, "fftn": 1124, "fftshift": 1125, "hfft": 1126, "hfft2": 1127, "hfftn": 1128, "ifft": 1129, "ifft2": 1130, "ifftn": 1131, "ifftshift": 1132, "ihfft": 1133, "ihfft2": 1134, "ihfftn": 1135, "irfft": 1136, "irfft2": 1137, "irfftn": 1138, "rfft": 1139, "rfft2": 1140, "rfftfreq": 1141, "rfftn": 1142, "from_dlpack": 1156, "from_fil": 1157, "from_numpi": 1158, "frombuff": 1159, "full": [1160, 2051], "full_lik": 1161, "functional_cal": [1162, 1759], "grad_and_valu": 1165, "replace_all_batch_norm_modules_": 1171, "stack_module_st": 1172, "callmethodkei": 1175, "convertintkei": 1176, "dimconstraint": 1177, "dimdynam": [1178, 2090], "equalityconstraint": 1179, "relaxedunspecconstraint": 1180, "shapeenv": 1181, "shapeenvset": 1182, "statefulsymboliccontext": 1183, "statelesssymboliccontext": 1184, "strictminmaxconstraint": 1185, "subclasssymboliccontext": 1186, "symboliccontext": 1187, "canonicalize_bool_expr": 1188, "check_consist": 1189, "compute_unbacked_bind": 1190, "constrain_rang": 1191, "constrain_unifi": 1192, "definitely_fals": 1193, "definitely_tru": 1194, "guard_size_oblivi": 1195, "has_free_symbol": 1196, "hint_int": 1197, "is_concrete_bool": 1198, "is_concrete_int": 1199, "lru_cach": 1200, "parallel_and": 1201, "parallel_or": 1202, "rebind_unback": 1203, "statically_known_tru": 1204, "sym_eq": 1205, "get_default_devic": 1211, "get_default_dtyp": 1212, "get_deterministic_debug_mod": 1213, "get_device_modul": 1214, "get_float32_matmul_precis": 1215, "get_num_interop_thread": 1216, "get_num_thread": 1217, "hamming_window": 1223, "hann_window": 1224, "histogramdd": 1228, "hspmm": 1230, "hstack": 1231, "is_deterministic_algorithms_warn_only_en": 1246, "is_grad_en": 1248, "is_inference_mode_en": 1249, "is_nonzero": 1250, "is_storag": 1251, "is_tensor": 1252, "is_warn_always_en": 1253, "isin": 1256, "attribut": [1263, 2006, 2008, 2009, 2011, 2075], "scriptfunct": 1264, "scriptmodul": [1265, 2051], "annot": [1266, 2009], "enable_onednn_fus": 1267, "fork": 1268, "freez": 1269, "ignor": 1270, "isinst": 1272, "onednn_fusion_en": 1274, "optimize_for_infer": 1275, "save": [1276, 1851, 2004, 2034, 2045, 2051, 2062], "script_if_trac": 1278, "set_fusion_strategi": 1279, "strict_fus": 1280, "trace_modul": 1282, "unus": 1283, "wait": 1284, "kaiser_window": 1285, "kron": 1286, "cholesky_ex": 1296, "eig": 1301, "eigh": 1302, "eigval": 1303, "eigvalsh": 1304, "householder_product": 1305, "inv": 1306, "inv_ex": 1307, "ldl_factor": 1308, "ldl_factor_ex": 1309, "ldl_solv": 1310, "lstsq": 1311, "lu_factor": 1313, "lu_factor_ex": 1314, "matrix_norm": 1318, "matrix_rank": 1320, "multi_dot": 1321, "pinv": 1323, "solv": 1326, "solve_ex": 1327, "solve_triangular": 1328, "svdval": 1330, "tensorinv": 1331, "tensorsolv": 1332, "vander": [1333, 1963], "vecdot": 1334, "vector_norm": 1335, "linspac": 1336, "lobpcg": 1338, "logspac": 1352, "lu_unpack": 1357, "meshgrid": 1367, "current_allocated_memori": 1374, "driver_allocated_memori": 1376, "stop": 1383, "mtia": [1389, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 2023], "deferredmtiacallerror": 1389, "adaptiveavgpool1d": 1420, "adaptiveavgpool2d": 1421, "adaptiveavgpool3d": 1422, "adaptivelogsoftmaxwithloss": 1423, "adaptivemaxpool1d": 1424, "adaptivemaxpool2d": 1425, "adaptivemaxpool3d": 1426, "alphadropout": 1427, "avgpool1d": 1428, "avgpool2d": 1429, "avgpool3d": 1430, "bceloss": 1431, "bcewithlogitsloss": 1432, "batchnorm1d": 1433, "bilinear": [1436, 1596], "ctcloss": 1438, "channelshuffl": 1439, "circularpad1d": 1440, "circularpad2d": 1441, "circularpad3d": 1442, "constantpad1d": 1443, "constantpad2d": 1444, "constantpad3d": 1445, "cosineembeddingloss": 1452, "cosinesimilar": 1453, "crossentropyloss": 1454, "dataparallel": [1455, 2028, 2031, 2033, 2037], "dropout": [1456, 1610, 2028, 2031], "dropout1d": [1457, 1611], "dropout2d": [1458, 1612], "dropout3d": [1459, 1613], "featurealphadropout": 1463, "fold": [1465, 1619], "fractionalmaxpool2d": 1466, "fractionalmaxpool3d": 1467, "gelu": [1468, 1623], "glu": [1469, 1624], "gaussiannllloss": 1472, "hingeembeddingloss": 1478, "huberloss": 1479, "ident": [1480, 1733, 1741, 2009, 2041], "kldivloss": 1484, "l1loss": 1485, "lppool1d": 1486, "lppool2d": 1487, "lppool3d": 1488, "lazybatchnorm1d": 1492, "lazybatchnorm2d": 1493, "lazybatchnorm3d": 1494, "lazyconv1d": 1495, "lazyconv2d": 1496, "lazyconv3d": 1497, "lazyconvtranspose1d": 1498, "lazyconvtranspose2d": 1499, "lazyconvtranspose3d": 1500, "lazyinstancenorm1d": 1501, "lazyinstancenorm2d": 1502, "lazyinstancenorm3d": 1503, "lazylinear": 1504, "localresponsenorm": 1507, "logsigmoid": [1508, 1645], "logsoftmax": 1509, "mseloss": 1510, "marginrankingloss": 1511, "maxpool1d": 1512, "maxpool2d": 1513, "maxpool3d": 1514, "maxunpool1d": 1515, "maxunpool2d": 1516, "maxunpool3d": 1517, "mish": [1518, 1656], "moduledict": [1520, 2009], "modulelist": [1521, 2008, 2009], "multilabelmarginloss": 1522, "multilabelsoftmarginloss": 1523, "multimarginloss": 1524, "nllloss": 1526, "prelu": [1527, 1670], "pairwisedist": 1528, "parameterdict": 1529, "parameterlist": 1530, "pixelshuffl": 1531, "pixelunshuffl": 1532, "poissonnllloss": 1533, "rmsnorm": [1534, 1708], "rnn": [1535, 1751, 1752, 1753, 1754, 1755, 1756, 2050], "rnnbase": 1536, "rrelu": [1538, 1675], "relu": [1539, 1671], "reflectionpad1d": 1541, "reflectionpad2d": 1542, "reflectionpad3d": 1543, "replicationpad1d": 1544, "replicationpad2d": 1545, "replicationpad3d": 1546, "selu": [1547, 1678], "sequenti": 1548, "silu": [1549, 1680], "smoothl1loss": 1551, "softmarginloss": 1552, "softmax2d": 1554, "softmin": [1555, 1684], "softplu": [1556, 1685], "softshrink": [1557, 1686], "softsign": [1558, 1687], "syncbatchnorm": 1559, "tanhshrink": [1561, 1689], "transformerdecod": 1564, "transformerdecoderlay": 1565, "transformerencod": 1566, "transformerencoderlay": 1567, "tripletmarginloss": 1568, "tripletmarginwithdistanceloss": 1569, "upsamplingbilinear2d": 1573, "upsamplingnearest2d": 1574, "zeropad1d": 1575, "zeropad2d": 1576, "zeropad3d": 1577, "sdpbackend": 1578, "attent": [1579, 1581, 1582, 1583, 2029, 2030, 2031], "bia": [1579, 1581, 1582, 2030], "causalbia": [1579, 2030], "causalvari": 1580, "causal_lower_right": 1581, "causal_upper_left": 1582, "sdpa_kernel": 1583, "adaptive_avg_pool1d": 1584, "adaptive_max_pool1d": 1587, "adaptive_max_pool2d": 1588, "adaptive_max_pool3d": 1589, "affine_grid": 1590, "alpha_dropout": 1591, "avg_pool1d": 1592, "batch_norm": 1595, "conv_transpose1d": 1603, "conv_transpose2d": 1604, "conv_transpose3d": 1605, "cosine_embedding_loss": 1606, "cosine_similar": 1607, "cross_entropi": 1608, "ctc_loss": 1609, "elu_": 1615, "embedding_bag": 1617, "feature_alpha_dropout": 1618, "fractional_max_pool2d": 1620, "fractional_max_pool3d": 1621, "gaussian_nll_loss": 1622, "grid_sampl": 1625, "group_norm": 1626, "gumbel_softmax": 1627, "hardtanh_": 1632, "hinge_embedding_loss": 1633, "huber_loss": 1634, "instance_norm": 1635, "kl_div": 1637, "l1_loss": 1638, "layer_norm": 1639, "leaky_relu_": 1641, "local_response_norm": 1643, "log_softmax": [1644, 1896], "lp_pool1d": 1646, "lp_pool2d": 1647, "lp_pool3d": 1648, "margin_ranking_loss": 1649, "max_pool3d": 1652, "max_unpool1d": 1653, "max_unpool2d": 1654, "max_unpool3d": 1655, "mse_loss": 1657, "multi_margin_loss": 1658, "multilabel_margin_loss": 1659, "multilabel_soft_margin_loss": 1660, "nll_loss": 1661, "one_hot": 1663, "pad": [1664, 2028], "pairwise_dist": 1665, "pdist": 1666, "pixel_shuffl": 1667, "pixel_unshuffl": 1668, "poisson_nll_loss": 1669, "relu_": 1673, "rms_norm": 1674, "rrelu_": 1676, "scaled_dot_product_attent": 1677, "smooth_l1_loss": 1681, "soft_margin_loss": 1682, "threshold_": 1691, "data_parallel": [1692, 2031], "triplet_margin_loss": 1693, "triplet_margin_with_distance_loss": 1694, "lazymodulemixin": 1699, "register_module_backward_hook": 1700, "register_module_buffer_registration_hook": 1701, "register_module_forward_hook": 1702, "register_module_forward_pre_hook": 1703, "register_module_full_backward_hook": 1704, "register_module_full_backward_pre_hook": 1705, "register_module_module_registration_hook": 1706, "register_module_parameter_registration_hook": 1707, "distributeddataparallel": [1709, 2033, 2037, 2038], "uninitializedbuff": 1711, "uninitializedparamet": 1712, "clip_grad_norm": 1713, "clip_grad_norm_": 1714, "clip_grad_value_": 1715, "convert_conv2d_weight_memory_format": 1716, "convert_conv3d_weight_memory_format": 1717, "fuse_conv_bn_ev": 1718, "fuse_conv_bn_weight": 1719, "fuse_linear_bn_ev": 1720, "fuse_linear_bn_weight": 1721, "parameters_to_vector": 1722, "parametr": [1723, 1724, 1725, 1727, 1728, 1729, 1730, 2046], "orthogon": 1723, "spectral_norm": [1724, 1758], "weight_norm": [1725, 1761], "parametrizationlist": 1726, "cach": [1727, 2004, 2037, 2044], "is_parametr": 1728, "register_parametr": 1729, "remove_parametr": 1730, "basepruningmethod": 1731, "customfrommask": 1732, "l1unstructur": 1734, "lnstructur": 1735, "pruningcontain": 1736, "randomstructur": 1737, "randomunstructur": 1738, "prune": [1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 2046], "custom_from_mask": 1739, "global_unstructur": 1740, "is_prun": 1742, "l1_unstructur": 1743, "ln_structur": 1744, "random_structur": 1745, "random_unstructur": 1746, "remove_spectral_norm": 1748, "remove_weight_norm": 1749, "packedsequ": 1750, "pack_padded_sequ": 1751, "pack_sequ": 1752, "pad_packed_sequ": 1753, "pad_sequ": 1754, "unpack_sequ": 1755, "unpad_sequ": 1756, "skip_init": 1757, "stateless": 1759, "vector_to_paramet": 1760, "no_grad": 1762, "ones": [1768, 2094], "ones_lik": 1769, "jitscalartyp": 1770, "graphinfo": 1771, "verificationopt": 1772, "asgd": 1773, "adadelta": 1774, "adagrad": 1775, "adam": 1776, "adamw": 1777, "adamax": 1778, "lbfg": 1779, "nadam": 1780, "add_param_group": 1781, "load_state_dict": 1782, "state_dict": [1783, 2099], "step": [1784, 2058, 2096], "zero_grad": 1785, "radam": 1786, "rmsprop": 1787, "rprop": 1788, "sgd": 1789, "sparseadam": 1790, "chainedschedul": 1791, "constantlr": 1792, "cosineannealinglr": 1793, "cosineannealingwarmrestart": 1794, "cycliclr": 1795, "exponentiallr": 1796, "lambdalr": 1797, "linearlr": 1798, "multisteplr": 1799, "multiplicativelr": 1800, "onecyclelr": 1801, "polynomiallr": 1802, "reducelronplateau": 1803, "sequentiallr": 1804, "steplr": 1805, "pca_lowrank": 1809, "polar": 1813, "promote_typ": 1818, "quantize_per_channel": 1821, "quantize_per_tensor": 1822, "quantized_batch_norm": 1823, "quantized_max_pool1d": 1824, "quantized_max_pool2d": 1825, "sobolengin": 1826, "rand": 1828, "rand_lik": 1829, "randint": 1830, "randint_lik": 1831, "randn": 1832, "randn_lik": 1833, "randperm": 1834, "result_typ": 1845, "row_stack": 1849, "searchsort": 1855, "set_default_devic": 1859, "set_default_dtyp": 1860, "set_default_tensor_typ": 1861, "set_deterministic_debug_mod": 1862, "set_float32_matmul_precis": 1863, "set_flush_denorm": 1864, "set_num_interop_thread": 1865, "set_num_thread": 1866, "set_printopt": 1867, "set_warn_alwai": 1869, "signal": [1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 2070], "bartlett": 1873, "blackman": 1874, "cosin": 1875, "gaussian": 1877, "general_cosin": 1878, "general_ham": 1879, "ham": 1880, "hann": 1881, "kaiser": 1882, "nuttal": 1883, "as_sparse_gradcheck": 1894, "check_sparse_tensor_invari": 1895, "sampled_addmm": 1898, "spdiag": 1900, "sparse_bsc_tensor": 1902, "sparse_bsr_tensor": 1903, "sparse_compressed_tensor": 1904, "sparse_coo_tensor": 1905, "sparse_csc_tensor": 1906, "sparse_csr_tensor": 1907, "std_mean": 1915, "svd_lowrank": 1921, "sym_float": 1924, "sym_int": 1925, "sym_it": 1926, "sym_max": 1927, "sym_min": 1928, "sym_not": 1929, "tensordot": 1937, "trapezoid": 1942, "trapz": 1943, "tril_indic": 1946, "triu_indic": 1948, "unravel_index": 1955, "use_deterministic_algorithm": 1957, "generate_methods_for_privateuse1_backend": 1958, "get_cpp_backtrac": 1959, "rename_privateuse1_backend": 1960, "set_modul": 1961, "swap_tensor": 1962, "var_mean": 1965, "view_as_complex": 1967, "view_as_r": 1968, "vstack": 1971, "xpu": [1977, 1978, 1980, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2109], "zero": 2002, "zeros_lik": 2003, "hub": 2004, "publish": 2004, "entrypoint": 2004, "run": [2004, 2100], "my": [2004, 2034, 2041, 2059, 2094, 2100], "download": 2004, "logic": [2004, 2008], "known": [2004, 2006], "bind": 2005, "tabl": [2005, 2051], "built": [2006, 2007, 2009, 2056], "comparison": [2006, 2008, 2009, 2081, 2088], "inspect": [2006, 2054, 2092], "warn": 2006, "appendix": [2006, 2009], "recurs": 2006, "constant": [2006, 2008], "fusion": 2006, "math": [2007, 2081], "construct": [2008, 2009, 2011, 2027, 2058, 2072], "refin": [2008, 2009], "enum": [2008, 2009], "tupl": [2008, 2009], "liter": [2008, 2009], "list": [2008, 2009, 2056], "dict": 2008, "arithmet": [2008, 2009], "subscript": [2008, 2009], "slice": [2008, 2009, 2049, 2081], "ternari": [2008, 2009], "cast": 2008, "statement": [2008, 2009], "assign": [2008, 2009], "If": 2008, "while": [2008, 2009], "loop": 2008, "For": 2008, "continu": [2008, 2009], "return": [2008, 2009, 2041, 2069], "resolut": [2008, 2009], "lookup": 2008, "defin": [2008, 2039, 2040], "terminologi": 2009, "instanc": 2009, "when": [2009, 2034, 2039, 2056, 2062, 2072, 2094], "signatur": 2009, "expr": 2009, "convers": [2009, 2027], "atom": 2009, "identifi": [2009, 2094, 2103], "parenthes": 2009, "form": 2009, "displai": 2009, "primari": 2009, "power": 2009, "unari": [2009, 2016, 2072], "bitwis": 2009, "binari": [2009, 2016], "shift": 2009, "boolean": 2009, "condit": 2009, "augment": 2009, "rais": 2009, "del": 2009, "compound": 2009, "els": 2009, "getattr": 2009, "hasattr": 2009, "zip": [2009, 2059], "enumer": 2009, "rule": [2009, 2026, 2040, 2054], "remot": [2009, 2069], "procedur": 2009, "execut": [2009, 2034, 2037, 2059, 2060, 2094], "program": 2009, "coverag": [2010, 2025, 2039], "properti": [2011, 2014], "correctli": 2011, "bound": 2011, "schema": 2011, "between": [2011, 2059, 2094], "low": 2013, "matrix": [2014, 2062], "decomposit": 2014, "solver": 2014, "misc": 2014, "motiv": [2016, 2090, 2093], "reduct": [2016, 2037, 2049, 2081], "idiom": 2017, "miscellan": 2018, "mobile_optim": 2019, "model_zoo": 2020, "strategi": [2024, 2058], "descriptor": 2024, "file_descriptor": 2024, "file_system": 2024, "keep": [2025, 2059], "dimens": [2025, 2026], "unifi": 2025, "contract": 2025, "awai": 2025, "factori": 2025, "variant": 2025, "semant": [2026, 2035, 2037, 2044, 2051], "infer": [2026, 2034, 2036, 2051, 2085], "explicit": 2026, "align": 2026, "current": 2026, "subsystem": 2026, "constructor": 2027, "convolut": [2028, 2031, 2049, 2050], "layer": 2028, "pool": [2028, 2031], "activ": [2028, 2031, 2105], "weight": [2028, 2058], "nonlinear": 2028, "recurr": [2028, 2041], "distanc": [2028, 2031], "loss": [2028, 2031, 2033], "vision": [2028, 2031], "shuffl": 2028, "lazi": 2028, "alias": 2028, "submodul": 2029, "typic": 2033, "unscal": 2033, "accumul": 2033, "penalti": 2033, "one": 2033, "per": [2033, 2058], "need": [2033, 2094], "particular": [2033, 2034], "dtype": [2033, 2051, 2065, 2075], "encod": 2034, "histori": [2034, 2105], "set": [2034, 2056], "No": 2034, "evalu": [2034, 2043, 2091], "multithread": 2034, "concurr": 2034, "determin": [2034, 2050], "retain": 2034, "thread": [2034, 2036, 2080], "safeti": 2034, "wirting": 2034, "calculu": 2034, "pictur": 2034, "conjug": 2034, "own": 2034, "formula": 2034, "domain": 2034, "regist": [2034, 2089], "whether": [2034, 2059], "fire": 2034, "differ": [2034, 2056, 2094], "modifi": 2034, "compat": 2035, "runtim": [2036, 2041, 2103], "tune": 2036, "tensorfloat": [2037, 2044, 2049], "32": [2037, 2044, 2049, 2052], "tf32": [2037, 2044, 2049], "amper": [2037, 2049], "later": [2037, 2049, 2059], "reduc": [2037, 2049], "fp16": [2037, 2049], "gemm": [2037, 2049], "bf16": [2037, 2049], "bc": 2037, "pytorch_cuda_alloc_conf": 2037, "alloc": [2037, 2041, 2105], "cubla": 2037, "workspac": 2037, "cufft": 2037, "plan": [2037, 2044], "just": 2037, "time": [2037, 2085, 2097, 2101], "practic": [2037, 2048, 2062, 2087], "agnost": 2037, "buffer": [2037, 2042, 2048], "instead": 2037, "whole": [2037, 2094], "captur": 2037, "partial": 2037, "9": 2037, "6": 2037, "across": [2037, 2051], "intern": [2038, 2056, 2059, 2090, 2092], "processgroup": 2038, "ddpoptim": 2038, "separ": 2039, "setup_context": 2039, "like": [2039, 2059], "subclass": [2039, 2093], "wrapper": 2039, "__torch_function__": 2039, "overrid": [2039, 2104], "nativ": [2039, 2062, 2064], "anoth": 2040, "specifi": 2040, "gotcha": 2040, "staticmethod": 2040, "isn": 2041, "freed": 2041, "properli": 2041, "loader": 2041, "doesn": 2041, "fsdp": 2042, "prefetch": 2042, "nuanc": 2042, "payload": 2042, "notat": 2043, "background": [2043, 2068, 2069, 2088], "inform": [2043, 2067, 2102], "analyt": 2043, "u": 2043, "reus": [2044, 2048], "hipfft": 2044, "rocfft": 2044, "enabl": 2044, "larg": 2045, "fleet": 2045, "wide": 2045, "attach": 2045, "consider": 2045, "block": 2046, "neural": 2046, "tip": [2048, 2063], "fight": 2048, "deadlock": 2048, "through": 2048, "queue": 2048, "e": 2048, "g": 2048, "hogwild": 2048, "oversubscript": 2048, "accuraci": [2049, 2062, 2063, 2103], "extrem": 2049, "finit": 2049, "instinct": 2049, "mi200": 2049, "reproduc": 2050, "nondeterminist": 2050, "algorithm": [2050, 2058, 2068], "fill": 2050, "uniniti": 2050, "content": [2051, 2059], "preserv": 2051, "format": [2051, 2059], "them": [2051, 2059], "version": 2051, "integ": 2051, "divis": 2051, "alwai": [2051, 2091], "includ": [2052, 2059], "compon": 2052, "speed": [2052, 2094], "One": [2052, 2102], "instal": 2052, "cffi": 2052, "cpp": 2052, "found": 2052, "win": 2052, "channel": 2052, "without": 2052, "claus": 2052, "protect": 2052, "broken": 2052, "pipe": [2052, 2060], "driver": 2052, "shut": 2052, "down": 2052, "ipc": 2052, "base": [2053, 2054, 2056, 2058, 2102], "gui": 2054, "diagnos": [2054, 2103], "sarif": 2054, "diagnost": 2054, "alexnet": 2056, "v": 2056, "index": [2056, 2081], "aten": [2056, 2098, 2102], "inlin": 2056, "discov": 2056, "unconvert": 2056, "onc": 2056, "adjust": 2058, "learn": 2058, "rate": 2058, "averag": 2058, "swa": 2058, "ema": 2058, "schedul": 2058, "care": 2058, "put": 2058, "togeth": 2058, "your": 2059, "do": [2059, 2092, 2094], "see": [2059, 2094], "insid": [2059, 2094], "treat": 2059, "archiv": 2059, "file_structur": 2059, "given": 2059, "wa": 2059, "resourc": [2059, 2093], "distinguish": 2059, "explan": 2059, "analyz": 2059, "extern": 2059, "mock": 2059, "refactor": 2059, "sharp": 2059, "global": 2059, "isol": 2059, "each": [2059, 2093], "mangl": 2059, "pipelin": 2060, "skip": 2060, "connect": 2060, "intel": 2061, "instrument": 2061, "technologi": 2061, "eager": 2062, "awar": 2062, "mainten": 2062, "engin": 2062, "observ": [2062, 2065], "hardwar": 2062, "configur": [2062, 2064], "insensit": 2063, "int8": 2063, "sensit": 2063, "ao": [2065, 2082, 2083], "top": 2065, "quantize_fx": 2065, "qconfig_map": 2065, "backend_config": 2065, "custom_config": 2065, "pt2e": 2065, "0": [2065, 2091, 2099, 2100, 2103], "export_util": 2065, "relat": [2065, 2093], "fake_quant": 2065, "intrins": 2065, "qat": 2065, "scheme": 2065, "rpc": 2067, "tensorpip": 2067, "rref": [2067, 2069], "remotemodul": 2067, "record": 2068, "dure": 2068, "smart": 2068, "end": 2068, "protocol": 2069, "lifetim": 2069, "reason": 2069, "scenario": 2069, "owner": 2069, "argument": 2069, "sparsiti": 2072, "semi": 2072, "acceler": 2072, "coo": 2072, "hybrid": 2072, "uncoalesc": 2072, "csr": 2072, "csc": 2072, "bsr": 2072, "bsc": 2072, "memory_format": 2075, "tensorboard": 2077, "creation": 2081, "sampl": 2081, "quasi": 2081, "pointwis": 2081, "spectral": 2081, "bla": 2081, "lapack": 2081, "foreach": 2081, "path": 2081, "n": [2082, 2083], "_numeric_suit": 2082, "_numeric_suite_fx": 2083, "howto": 2084, "vendor": 2084, "aotinductor": 2085, "ahead": 2085, "Of": 2085, "ed": 2085, "x86": 2087, "tree": 2088, "integr": 2088, "callabl": 2088, "previou": 2088, "after": 2089, "aotautograd": 2089, "speedi": 2089, "abridg": 2090, "public": 2090, "guard": [2090, 2091, 2092], "overal": [2090, 2093], "architectur": [2090, 2093], "unback": 2090, "dynamo": [2091, 2092], "gentl": 2091, "pep": 2091, "523": 2091, "frame": 2091, "cpython": 2091, "sound": 2091, "duck": 2091, "complet": 2091, "conclus": 2091, "footnot": 2091, "artifact": 2092, "fake": 2093, "bit": 2093, "detail": 2093, "individu": [2093, 2097], "characterist": 2093, "interact": 2093, "you": 2094, "still": 2094, "crash": 2094, "slow": 2094, "recompil": [2094, 2103], "am": 2094, "speedup": 2094, "caus": [2094, 2103], "didn": 2094, "incorrect": 2094, "result": 2094, "oom": 2094, "besid": 2094, "via": 2094, "under": 2094, "some": 2094, "did": 2094, "fine": [2094, 2095], "grain": [2094, 2095], "_dynamo": [2094, 2095], "disallow_in_graph": [2094, 2095], "_dynamo_skip": 2094, "pretrain": 2096, "next": 2096, "torchinductor": [2097, 2100, 2103], "relev": 2097, "breakdown": 2097, "prim": 2098, "nnmodul": 2099, "__call__": 2099, "dashboard": 2100, "measur": 2100, "pr": 2100, "affect": 2100, "befor": 2100, "merg": 2100, "understand": [2101, 2105], "around": 2101, "region": 2101, "compiledfunct": 2101, "overhead": 2101, "x": 2102, "none": 2102, "partition": 2102, "matcher": 2102, "capabl": 2102, "troubleshoot": 2103, "titl": 2103, "minifi": 2103, "torch_compile_debug": 2103, "excess": 2103, "snapshot": 2105, "visual": 2105, "timelin": 2105, "info": 2107, "finfo": 2107, "iinfo": 2107}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.fliplr": [[264, "torch-tensor-fliplr"]], "torch.Tensor.gt_": [[295, "torch-tensor-gt"]], "torch.Tensor.floor_divide": [[271, "torch-tensor-floor-divide"]], "torch.Tensor.ge": [[283, "torch-tensor-ge"]], "torch.Tensor.hardshrink": [[297, "torch-tensor-hardshrink"]], "torch.Tensor.flipud": [[265, "torch-tensor-flipud"]], "torch.Tensor.flip": [[263, "torch-tensor-flip"]], "torch.Tensor.fmod_": [[276, "torch-tensor-fmod"]], "torch.Tensor.frac_": [[278, "torch-tensor-frac"]], "torch.Tensor.geometric_": [[285, "torch-tensor-geometric"]], "torch.Tensor.get_device": [[288, "torch-tensor-get-device"]], "torch.Tensor.float": [[266, "torch-tensor-float"]], "torch.Tensor.floor": [[269, "torch-tensor-floor"]], "torch.Tensor.fmod": [[275, "torch-tensor-fmod"]], "torch.Tensor.fix": [[260, "torch-tensor-fix"]], "torch.Tensor.floor_": [[270, "torch-tensor-floor"]], "torch.Tensor.hypot_": [[303, "torch-tensor-hypot"]], "torch.Tensor.histogram": [[300, "torch-tensor-histogram"]], "torch.Tensor.hsplit": [[301, "torch-tensor-hsplit"]], "torch.Tensor.fmax": [[273, "torch-tensor-fmax"]], "torch.Tensor.half": [[296, "torch-tensor-half"]], "torch.Tensor.i0": [[304, "torch-tensor-i0"]], "torch.Tensor.gather": [[280, "torch-tensor-gather"]], "torch.Tensor.geqrf": [[286, "torch-tensor-geqrf"]], "torch.Tensor.histc": [[299, "torch-tensor-histc"]], "torch.Tensor.flatten": [[262, "torch-tensor-flatten"]], "torch.Tensor.fmin": [[274, "torch-tensor-fmin"]], "torch.Tensor.heaviside": [[298, "torch-tensor-heaviside"]], "torch.Tensor.ge_": [[284, "torch-tensor-ge"]], "torch.Tensor.greater_equal_": [[293, "torch-tensor-greater-equal"]], "torch.Tensor.hypot": [[302, "torch-tensor-hypot"]], "torch.Tensor.frac": [[277, "torch-tensor-frac"]], "torch.Tensor.exponential_": [[257, "torch-tensor-exponential"]], "torch.Tensor.floor_divide_": [[272, "torch-tensor-floor-divide"]], "torch.Tensor.ger": [[287, "torch-tensor-ger"]], "torch.Tensor.grad": [[289, "torch-tensor-grad"]], "torch.Tensor.frexp": [[279, "torch-tensor-frexp"]], "torch.Tensor.float_power": [[267, "torch-tensor-float-power"]], "torch.Tensor.fix_": [[261, "torch-tensor-fix"]], "torch.Tensor.expm1_": [[256, "torch-tensor-expm1"]], "torch.Tensor.i0_": [[305, "torch-tensor-i0"]], "torch.Tensor.greater": [[290, "torch-tensor-greater"]], "torch.Tensor.gt": [[294, "torch-tensor-gt"]], "torch.Tensor.float_power_": [[268, "torch-tensor-float-power"]], "torch.Tensor.gcd": [[281, "torch-tensor-gcd"]], "torch.Tensor.gcd_": [[282, "torch-tensor-gcd"]], "torch.Tensor.greater_equal": [[292, "torch-tensor-greater-equal"]], "torch.Tensor.fill_diagonal_": [[259, "torch-tensor-fill-diagonal"]], "torch.Tensor.greater_": [[291, "torch-tensor-greater"]], "torch.Tensor.fill_": [[258, "torch-tensor-fill"]], "torch.Tensor.expm1": [[255, "torch-tensor-expm1"]], "torch.Tensor.bitwise_right_shift_": [[165, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.ccol_indices": [[173, "torch-tensor-ccol-indices"]], "torch.Tensor.bitwise_or_": [[163, "torch-tensor-bitwise-or"]], "torch.Tensor.coalesce": [[189, "torch-tensor-coalesce"]], "torch.Tensor.bernoulli_": [[153, "torch-tensor-bernoulli"]], "torch.Tensor.copysign": [[196, "torch-tensor-copysign"]], "torch.Tensor.copysign_": [[197, "torch-tensor-copysign"]], "torch.Tensor.bitwise_or": [[162, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_right_shift": [[164, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bmm": [[168, "torch-tensor-bmm"]], "torch.Tensor.col_indices": [[190, "torch-tensor-col-indices"]], "torch.Tensor.clip": [[186, "torch-tensor-clip"]], "torch.Tensor.bitwise_left_shift_": [[159, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.conj_physical": [[192, "torch-tensor-conj-physical"]], "torch.Tensor.cosh_": [[202, "torch-tensor-cosh"]], "torch.Tensor.cosh": [[201, "torch-tensor-cosh"]], "torch.Tensor.cholesky_inverse": [[181, "torch-tensor-cholesky-inverse"]], "torch.Tensor.conj": [[191, "torch-tensor-conj"]], "torch.Tensor.bitwise_and": [[156, "torch-tensor-bitwise-and"]], "torch.Tensor.bincount": [[155, "torch-tensor-bincount"]], "torch.Tensor.ceil_": [[176, "torch-tensor-ceil"]], "torch.Tensor.clip_": [[187, "torch-tensor-clip"]], "torch.Tensor.corrcoef": [[198, "torch-tensor-corrcoef"]], "torch.Tensor.clone": [[188, "torch-tensor-clone"]], "torch.Tensor.bool": [[169, "torch-tensor-bool"]], "torch.Tensor.count_nonzero": [[203, "torch-tensor-count-nonzero"]], "torch.Tensor.bitwise_and_": [[157, "torch-tensor-bitwise-and"]], "torch.Tensor.copy_": [[195, "torch-tensor-copy"]], "torch.Tensor.byte": [[171, "torch-tensor-byte"]], "torch.Tensor.cholesky": [[180, "torch-tensor-cholesky"]], "torch.Tensor.cdouble": [[174, "torch-tensor-cdouble"]], "torch.Tensor.bitwise_not": [[160, "torch-tensor-bitwise-not"]], "torch.Tensor.bfloat16": [[154, "torch-tensor-bfloat16"]], "torch.Tensor.chalf": [[178, "torch-tensor-chalf"]], "torch.Tensor.bitwise_left_shift": [[158, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.conj_physical_": [[193, "torch-tensor-conj-physical"]], "torch.Tensor.clamp_": [[185, "torch-tensor-clamp"]], "torch.Tensor.cos": [[199, "torch-tensor-cos"]], "torch.Tensor.bitwise_xor_": [[167, "torch-tensor-bitwise-xor"]], "torch.Tensor.cos_": [[200, "torch-tensor-cos"]], "torch.Tensor.clamp": [[184, "torch-tensor-clamp"]], "torch.Tensor.char": [[179, "torch-tensor-char"]], "torch.Tensor.contiguous": [[194, "torch-tensor-contiguous"]], "torch.Tensor.ceil": [[175, "torch-tensor-ceil"]], "torch.Tensor.cfloat": [[177, "torch-tensor-cfloat"]], "torch.Tensor.chunk": [[183, "torch-tensor-chunk"]], "torch.Tensor.cholesky_solve": [[182, "torch-tensor-cholesky-solve"]], "torch.Tensor.bitwise_xor": [[166, "torch-tensor-bitwise-xor"]], "torch.Tensor.cauchy_": [[172, "torch-tensor-cauchy"]], "torch.Tensor.broadcast_to": [[170, "torch-tensor-broadcast-to"]], "torch.Tensor.bitwise_not_": [[161, "torch-tensor-bitwise-not"]], "torch.Tensor.argmax": [[133, "torch-tensor-argmax"]], "torch.Tensor.addr_": [[109, "torch-tensor-addr"]], "torch.Tensor.baddbmm": [[150, "torch-tensor-baddbmm"]], "torch.Tensor.argwhere": [[136, "torch-tensor-argwhere"]], "torch.Tensor.arctan2_": [[129, "torch-tensor-arctan2"]], "torch.Tensor.addmv_": [[107, "torch-tensor-addmv"]], "torch.Tensor.asin": [[139, "torch-tensor-asin"]], "torch.Tensor.addcmul": [[102, "torch-tensor-addcmul"]], "torch.Tensor.argmin": [[134, "torch-tensor-argmin"]], "torch.Tensor.aminmax": [[115, "torch-tensor-aminmax"]], "torch.Tensor.arcsinh_": [[126, "torch-tensor-arcsinh"]], "torch.Tensor.arctan2": [[128, "torch-tensor-arctan2"]], "torch.Tensor.atanh": [[147, "torch-tensor-atanh"]], "torch.Tensor.bernoulli": [[152, "torch-tensor-bernoulli"]], "torch.Tensor.atanh_": [[148, "torch-tensor-atanh"]], "torch.Tensor.arccos": [[119, "torch-tensor-arccos"]], "torch.Tensor.asinh": [[141, "torch-tensor-asinh"]], "torch.Tensor.atan": [[143, "torch-tensor-atan"]], "torch.Tensor.baddbmm_": [[151, "torch-tensor-baddbmm"]], "torch.Tensor.atan_": [[146, "torch-tensor-atan"]], "torch.Tensor.as_strided": [[137, "torch-tensor-as-strided"]], "torch.Tensor.arccosh_": [[122, "torch-tensor-arccosh"]], "torch.Tensor.angle": [[116, "torch-tensor-angle"]], "torch.Tensor.arccosh": [[121, "torch-tensor-arccosh"]], "torch.Tensor.asin_": [[140, "torch-tensor-asin"]], "torch.Tensor.addcmul_": [[103, "torch-tensor-addcmul"]], "torch.Tensor.amax": [[113, "torch-tensor-amax"]], "torch.Tensor.as_subclass": [[138, "torch-tensor-as-subclass"]], "torch.Tensor.all": [[111, "torch-tensor-all"]], "torch.Tensor.addr": [[108, "torch-tensor-addr"]], "torch.Tensor.addmm": [[104, "torch-tensor-addmm"]], "torch.Tensor.allclose": [[112, "torch-tensor-allclose"]], "torch.Tensor.any": [[117, "torch-tensor-any"]], "torch.Tensor.apply_": [[118, "torch-tensor-apply"]], "torch.Tensor.argsort": [[135, "torch-tensor-argsort"]], "torch.Tensor.arcsin_": [[124, "torch-tensor-arcsin"]], "torch.Tensor.addmm_": [[105, "torch-tensor-addmm"]], "torch.Tensor.adjoint": [[110, "torch-tensor-adjoint"]], "torch.Tensor.atan2_": [[145, "torch-tensor-atan2"]], "torch.Tensor.arccos_": [[120, "torch-tensor-arccos"]], "torch.Tensor.arctan": [[127, "torch-tensor-arctan"]], "torch.Tensor.arctanh": [[131, "torch-tensor-arctanh"]], "torch.Tensor.arctanh_": [[132, "torch-tensor-arctanh"]], "torch.Tensor.atan2": [[144, "torch-tensor-atan2"]], "torch.Tensor.addmv": [[106, "torch-tensor-addmv"]], "torch.Tensor.backward": [[149, "torch-tensor-backward"]], "torch.Tensor.asinh_": [[142, "torch-tensor-asinh"]], "torch.Tensor.arctan_": [[130, "torch-tensor-arctan"]], "torch.Tensor.amin": [[114, "torch-tensor-amin"]], "torch.Tensor.arcsinh": [[125, "torch-tensor-arcsinh"]], "torch.Tensor.arcsin": [[123, "torch-tensor-arcsin"]], "torch.Tensor.detach_": [[221, "torch-tensor-detach"]], "torch.Tensor.double": [[239, "torch-tensor-double"]], "torch.Tensor.expand": [[253, "torch-tensor-expand"]], "torch.Tensor.exp_": [[252, "torch-tensor-exp"]], "torch.Tensor.dequantize": [[218, "torch-tensor-dequantize"]], "torch.Tensor.dense_dim": [[217, "torch-tensor-dense-dim"]], "torch.Tensor.eq_": [[243, "torch-tensor-eq"]], "torch.Tensor.deg2rad": [[216, "torch-tensor-deg2rad"]], "torch.Tensor.diagflat": [[225, "torch-tensor-diagflat"]], "torch.Tensor.digamma_": [[230, "torch-tensor-digamma"]], "torch.Tensor.dim_order": [[232, "torch-tensor-dim-order"]], "torch.Tensor.expand_as": [[254, "torch-tensor-expand-as"]], "torch.Tensor.diagonal": [[226, "torch-tensor-diagonal"]], "torch.Tensor.divide_": [[237, "torch-tensor-divide"]], "torch.Tensor.det": [[219, "torch-tensor-det"]], "torch.Tensor.diagonal_scatter": [[227, "torch-tensor-diagonal-scatter"]], "torch.Tensor.diff": [[228, "torch-tensor-diff"]], "torch.Tensor.data_ptr": [[215, "torch-tensor-data-ptr"]], "torch.Tensor.crow_indices": [[207, "torch-tensor-crow-indices"]], "torch.Tensor.detach": [[220, "torch-tensor-detach"]], "torch.Tensor.element_size": [[241, "torch-tensor-element-size"]], "torch.Tensor.equal": [[244, "torch-tensor-equal"]], "torch.Tensor.device": [[222, "torch-tensor-device"]], "torch.Tensor.erfinv": [[249, "torch-tensor-erfinv"]], "torch.Tensor.dsplit": [[240, "torch-tensor-dsplit"]], "torch.Tensor.cpu": [[205, "torch-tensor-cpu"]], "torch.Tensor.erf": [[245, "torch-tensor-erf"]], "torch.Tensor.div_": [[235, "torch-tensor-div"]], "torch.Tensor.cov": [[204, "torch-tensor-cov"]], "torch.Tensor.erfc": [[247, "torch-tensor-erfc"]], "torch.Tensor.digamma": [[229, "torch-tensor-digamma"]], "torch.Tensor.erfinv_": [[250, "torch-tensor-erfinv"]], "torch.Tensor.diag": [[223, "torch-tensor-diag"]], "torch.Tensor.dist": [[233, "torch-tensor-dist"]], "torch.Tensor.erf_": [[246, "torch-tensor-erf"]], "torch.Tensor.cumprod_": [[212, "torch-tensor-cumprod"]], "torch.Tensor.diag_embed": [[224, "torch-tensor-diag-embed"]], "torch.Tensor.cumprod": [[211, "torch-tensor-cumprod"]], "torch.Tensor.dim": [[231, "torch-tensor-dim"]], "torch.Tensor.divide": [[236, "torch-tensor-divide"]], "torch.Tensor.eq": [[242, "torch-tensor-eq"]], "torch.Tensor.exp": [[251, "torch-tensor-exp"]], "torch.Tensor.cross": [[206, "torch-tensor-cross"]], "torch.Tensor.cuda": [[208, "torch-tensor-cuda"]], "torch.Tensor.cummax": [[209, "torch-tensor-cummax"]], "torch.Tensor.div": [[234, "torch-tensor-div"]], "torch.Tensor.dot": [[238, "torch-tensor-dot"]], "torch.Tensor.erfc_": [[248, "torch-tensor-erfc"]], "torch.Tensor.cumsum": [[213, "torch-tensor-cumsum"]], "torch.Tensor.cumsum_": [[214, "torch-tensor-cumsum"]], "torch.Tensor.cummin": [[210, "torch-tensor-cummin"]], "torch.Tensor.index_copy": [[313, "torch-tensor-index-copy"]], "torch.Tensor.isreal": [[349, "torch-tensor-isreal"]], "torch.Tensor.is_inference": [[333, "torch-tensor-is-inference"]], "torch.Tensor.index_select": [[321, "torch-tensor-index-select"]], "torch.Tensor.int_repr": [[325, "torch-tensor-int-repr"]], "torch.Tensor.isnan": [[346, "torch-tensor-isnan"]], "torch.Tensor.ldexp": [[356, "torch-tensor-ldexp"]], "torch.Tensor.kthvalue": [[353, "torch-tensor-kthvalue"]], "torch.Tensor.isinf": [[345, "torch-tensor-isinf"]], "torch.Tensor.index_put": [[317, "torch-tensor-index-put"]], "torch.Tensor.is_meta": [[335, "torch-tensor-is-meta"]], "torch.Tensor.is_shared": [[339, "torch-tensor-is-shared"]], "torch.Tensor.lcm_": [[355, "torch-tensor-lcm"]], "torch.Tensor.is_leaf": [[334, "torch-tensor-is-leaf"]], "torch.Tensor.isfinite": [[344, "torch-tensor-isfinite"]], "torch.Tensor.is_sparse_csr": [[342, "torch-tensor-is-sparse-csr"]], "torch.Tensor.is_conj": [[329, "torch-tensor-is-conj"]], "torch.Tensor.igamma_": [[307, "torch-tensor-igamma"]], "torch.Tensor.index_add_": [[312, "torch-tensor-index-add"]], "torch.Tensor.index_reduce": [[319, "torch-tensor-index-reduce"]], "torch.Tensor.istft": [[350, "torch-tensor-istft"]], "torch.Tensor.is_pinned": [[336, "torch-tensor-is-pinned"]], "torch.Tensor.isneginf": [[347, "torch-tensor-isneginf"]], "torch.Tensor.is_quantized": [[337, "torch-tensor-is-quantized"]], "torch.Tensor.is_contiguous": [[330, "torch-tensor-is-contiguous"]], "torch.Tensor.igammac": [[308, "torch-tensor-igammac"]], "torch.Tensor.is_floating_point": [[332, "torch-tensor-is-floating-point"]], "torch.Tensor.is_signed": [[340, "torch-tensor-is-signed"]], "torch.Tensor.indices": [[322, "torch-tensor-indices"]], "torch.Tensor.imag": [[310, "torch-tensor-imag"]], "torch.Tensor.is_cuda": [[331, "torch-tensor-is-cuda"]], "torch.Tensor.int": [[324, "torch-tensor-int"]], "torch.Tensor.index_put_": [[318, "torch-tensor-index-put"]], "torch.Tensor.index_reduce_": [[320, "torch-tensor-index-reduce"]], "torch.Tensor.isposinf": [[348, "torch-tensor-isposinf"]], "torch.Tensor.index_fill_": [[316, "torch-tensor-index-fill"]], "torch.Tensor.item": [[351, "torch-tensor-item"]], "torch.Tensor.igammac_": [[309, "torch-tensor-igammac"]], "torch.Tensor.index_add": [[311, "torch-tensor-index-add"]], "torch.Tensor.isclose": [[343, "torch-tensor-isclose"]], "torch.Tensor.itemsize": [[352, "torch-tensor-itemsize"]], "torch.Tensor.index_fill": [[315, "torch-tensor-index-fill"]], "torch.Tensor.igamma": [[306, "torch-tensor-igamma"]], "torch.Tensor.is_sparse": [[341, "torch-tensor-is-sparse"]], "torch.Tensor.inner": [[323, "torch-tensor-inner"]], "torch.Tensor.is_set_to": [[338, "torch-tensor-is-set-to"]], "torch.Tensor.is_complex": [[328, "torch-tensor-is-complex"]], "torch.Tensor.lcm": [[354, "torch-tensor-lcm"]], "torch.Tensor.is_coalesced": [[327, "torch-tensor-is-coalesced"]], "torch.Tensor.index_copy_": [[314, "torch-tensor-index-copy"]], "torch.Tensor.inverse": [[326, "torch-tensor-inverse"]], "torch.Tensor.log1p_": [[372, "torch-tensor-log1p"]], "torch.Tensor.logical_or": [[385, "torch-tensor-logical-or"]], "torch.Tensor.le_": [[359, "torch-tensor-le"]], "torch.Tensor.log2": [[373, "torch-tensor-log2"]], "torch.Tensor.max": [[406, "torch-tensor-max"]], "torch.Tensor.log10_": [[370, "torch-tensor-log10"]], "torch.Tensor.masked_fill_": [[399, "torch-tensor-masked-fill"]], "torch.Tensor.logical_and_": [[382, "torch-tensor-logical-and"]], "torch.Tensor.ldexp_": [[357, "torch-tensor-ldexp"]], "torch.Tensor.logical_xor": [[387, "torch-tensor-logical-xor"]], "torch.Tensor.matrix_power": [[405, "torch-tensor-matrix-power"]], "torch.Tensor.long": [[392, "torch-tensor-long"]], "torch.Tensor.logsumexp": [[391, "torch-tensor-logsumexp"]], "torch.Tensor.less_equal_": [[365, "torch-tensor-less-equal"]], "torch.Tensor.logical_and": [[381, "torch-tensor-logical-and"]], "torch.Tensor.matmul": [[403, "torch-tensor-matmul"]], "torch.Tensor.lgamma_": [[367, "torch-tensor-lgamma"]], "torch.Tensor.masked_scatter_": [[401, "torch-tensor-masked-scatter"]], "torch.Tensor.logical_not": [[383, "torch-tensor-logical-not"]], "torch.Tensor.matrix_exp": [[404, "torch-tensor-matrix-exp"]], "torch.Tensor.map_": [[397, "torch-tensor-map"]], "torch.Tensor.logical_xor_": [[388, "torch-tensor-logical-xor"]], "torch.Tensor.less": [[362, "torch-tensor-less"]], "torch.Tensor.logdet": [[380, "torch-tensor-logdet"]], "torch.Tensor.lt_": [[394, "torch-tensor-lt"]], "torch.Tensor.maximum": [[407, "torch-tensor-maximum"]], "torch.Tensor.log1p": [[371, "torch-tensor-log1p"]], "torch.Tensor.logaddexp": [[377, "torch-tensor-logaddexp"]], "torch.Tensor.logaddexp2": [[378, "torch-tensor-logaddexp2"]], "torch.Tensor.lu": [[395, "torch-tensor-lu"]], "torch.Tensor.log_normal_": [[376, "torch-tensor-log-normal"]], "torch.Tensor.lu_solve": [[396, "torch-tensor-lu-solve"]], "torch.Tensor.log2_": [[374, "torch-tensor-log2"]], "torch.Tensor.logical_or_": [[386, "torch-tensor-logical-or"]], "torch.Tensor.le": [[358, "torch-tensor-le"]], "torch.Tensor.masked_fill": [[398, "torch-tensor-masked-fill"]], "torch.Tensor.log_": [[375, "torch-tensor-log"]], "torch.Tensor.masked_select": [[402, "torch-tensor-masked-select"]], "torch.Tensor.lerp_": [[361, "torch-tensor-lerp"]], "torch.Tensor.logit": [[389, "torch-tensor-logit"]], "torch.Tensor.lt": [[393, "torch-tensor-lt"]], "torch.Tensor.lgamma": [[366, "torch-tensor-lgamma"]], "torch.Tensor.logical_not_": [[384, "torch-tensor-logical-not"]], "torch.Tensor.log": [[368, "torch-tensor-log"]], "torch.Tensor.less_equal": [[364, "torch-tensor-less-equal"]], "torch.Tensor.masked_scatter": [[400, "torch-tensor-masked-scatter"]], "torch.Tensor.log10": [[369, "torch-tensor-log10"]], "torch.Tensor.less_": [[363, "torch-tensor-less"]], "torch.Tensor.logit_": [[390, "torch-tensor-logit"]], "torch.Tensor.lerp": [[360, "torch-tensor-lerp"]], "torch.Tensor.logcumsumexp": [[379, "torch-tensor-logcumsumexp"]], "torch.xpu.get_device_name": [[1984, "torch-xpu-get-device-name"]], "Event": [[1974, "event"], [1390, "event"], [1378, "event"], [1007, "event"]], "StreamContext": [[1976, "streamcontext"], [1392, "streamcontext"], [996, "streamcontext"], [1011, "streamcontext"]], "torch.true_divide": [[1949, "torch-true-divide"]], "torch.vdot": [[1966, "torch-vdot"]], "torch.trace": [[1940, "torch-trace"]], "torch.vsplit": [[1970, "torch-vsplit"]], "torch.transpose": [[1941, "torch-transpose"]], "torch.utils.get_cpp_backtrace": [[1959, "torch-utils-get-cpp-backtrace"]], "torch.xpu.current_stream": [[1978, "torch-xpu-current-stream"]], "torch.xpu.current_device": [[1977, "torch-xpu-current-device"]], "torch.utils.swap_tensors": [[1962, "torch-utils-swap-tensors"]], "torch.vmap": [[1969, "torch-vmap"]], "torch.xpu.get_device_capability": [[1983, "torch-xpu-get-device-capability"]], "device": [[1979, "device"], [1396, "device"], [1026, "device"]], "torch.triu": [[1947, "torch-triu"]], "torch.unbind": [[1951, "torch-unbind"]], "torch.trapezoid": [[1942, "torch-trapezoid"]], "torch.tril": [[1945, "torch-tril"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1958, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.trunc": [[1950, "torch-trunc"]], "torch.vstack": [[1971, "torch-vstack"]], "torch.trapz": [[1943, "torch-trapz"]], "torch.var": [[1964, "torch-var"]], "torch.triangular_solve": [[1944, "torch-triangular-solve"]], "torch.unique_consecutive": [[1954, "torch-unique-consecutive"]], "torch.tile": [[1938, "torch-tile"]], "torch.unique": [[1953, "torch-unique"]], "torch.unravel_index": [[1955, "torch-unravel-index"]], "torch.xpu.get_rng_state": [[1986, "torch-xpu-get-rng-state"]], "torch.unflatten": [[1952, "torch-unflatten"]], "torch.xpu.get_rng_state_all": [[1987, "torch-xpu-get-rng-state-all"]], "torch.xlogy": [[1973, "torch-xlogy"]], "torch.xpu.get_device_properties": [[1985, "torch-xpu-get-device-properties"]], "torch.var_mean": [[1965, "torch-var-mean"]], "torch.xpu.device_count": [[1980, "torch-xpu-device-count"]], "torch.triu_indices": [[1948, "torch-triu-indices"]], "torch.use_deterministic_algorithms": [[1957, "torch-use-deterministic-algorithms"]], "torch.utils.set_module": [[1961, "torch-utils-set-module"]], "torch.vander": [[1963, "torch-vander"]], "torch.where": [[1972, "torch-where"]], "Stream": [[1975, "stream"], [1391, "stream"], [1010, "stream"], [995, "stream"]], "torch.topk": [[1939, "torch-topk"]], "device_of": [[1981, "device-of"], [1028, "device-of"]], "torch.xpu.init": [[1988, "torch-xpu-init"]], "torch.view_as_real": [[1968, "torch-view-as-real"]], "torch.utils.rename_privateuse1_backend": [[1960, "torch-utils-rename-privateuse1-backend"]], "torch.unsqueeze": [[1956, "torch-unsqueeze"]], "torch.view_as_complex": [[1967, "torch-view-as-complex"]], "torch.xpu.empty_cache": [[1982, "torch-xpu-empty-cache"]], "torch.tril_indices": [[1946, "torch-tril-indices"]], "torch.std": [[1914, "torch-std"]], "torch.subtract": [[1918, "torch-subtract"]], "torch.sort": [[1892, "torch-sort"]], "torch.sym_min": [[1928, "torch-sym-min"]], "torch.sinh": [[1887, "torch-sinh"]], "torch.sparse_csr_tensor": [[1907, "torch-sparse-csr-tensor"]], "torch.sqrt": [[1909, "torch-sqrt"]], "torch.svd": [[1920, "torch-svd"]], "torch.square": [[1910, "torch-square"]], "torch.stack": [[1913, "torch-stack"]], "torch.sym_ite": [[1926, "torch-sym-ite"]], "torch.sym_float": [[1924, "torch-sym-float"]], "torch.sparse_coo_tensor": [[1905, "torch-sparse-coo-tensor"]], "torch.sparse.mm": [[1897, "torch-sparse-mm"]], "torch.tensordot": [[1937, "torch-tensordot"]], "torch.split": [[1908, "torch-split"]], "torch.tanh": [[1934, "torch-tanh"]], "torch.sparse_bsc_tensor": [[1902, "torch-sparse-bsc-tensor"]], "check_sparse_tensor_invariants": [[1895, "check-sparse-tensor-invariants"]], "torch.slogdet": [[1889, "torch-slogdet"]], "torch.sym_max": [[1927, "torch-sym-max"]], "torch.take_along_dim": [[1932, "torch-take-along-dim"]], "torch.sparse.sum": [[1901, "torch-sparse-sum"]], "torch.sparse_compressed_tensor": [[1904, "torch-sparse-compressed-tensor"]], "torch.sub": [[1917, "torch-sub"]], "torch.sparse.spdiags": [[1900, "torch-sparse-spdiags"]], "torch.sym_int": [[1925, "torch-sym-int"]], "torch.stft": [[1916, "torch-stft"]], "torch.tensor_split": [[1936, "torch-tensor-split"]], "torch.swapaxes": [[1922, "torch-swapaxes"]], "torch.smm": [[1890, "torch-smm"]], "torch.t": [[1930, "torch-t"]], "torch.take": [[1931, "torch-take"]], "torch.sparse.softmax": [[1899, "torch-sparse-softmax"]], "torch.swapdims": [[1923, "torch-swapdims"]], "torch.tan": [[1933, "torch-tan"]], "torch.sparse_bsr_tensor": [[1903, "torch-sparse-bsr-tensor"]], "torch.sparse.as_sparse_gradcheck": [[1894, "torch-sparse-as-sparse-gradcheck"]], "torch.slice_scatter": [[1888, "torch-slice-scatter"]], "torch.sspaddmm": [[1912, "torch-sspaddmm"]], "torch.tensor": [[1935, "torch-tensor"]], "torch.sparse.log_softmax": [[1896, "torch-sparse-log-softmax"]], "torch.sparse.sampled_addmm": [[1898, "torch-sparse-sampled-addmm"]], "torch.squeeze": [[1911, "torch-squeeze"]], "torch.softmax": [[1891, "torch-softmax"]], "torch.sym_not": [[1929, "torch-sym-not"]], "torch.sparse.addmm": [[1893, "torch-sparse-addmm"]], "torch.svd_lowrank": [[1921, "torch-svd-lowrank"]], "torch.std_mean": [[1915, "torch-std-mean"]], "torch.sparse_csc_tensor": [[1906, "torch-sparse-csc-tensor"]], "torch.sum": [[1919, "torch-sum"]], "torch.select": [[1857, "torch-select"]], "torch.scatter_reduce": [[1854, "torch-scatter-reduce"]], "torch.set_warn_always": [[1869, "torch-set-warn-always"]], "torch.ravel": [[1836, "torch-ravel"]], "torch.set_rng_state": [[1868, "torch-set-rng-state"]], "torch.signal.windows.cosine": [[1875, "torch-signal-windows-cosine"]], "torch.rot90": [[1847, "torch-rot90"]], "torch.renorm": [[1840, "torch-renorm"]], "torch.reshape": [[1842, "torch-reshape"]], "torch.resolve_conj": [[1843, "torch-resolve-conj"]], "torch.roll": [[1846, "torch-roll"]], "torch.remainder": [[1839, "torch-remainder"]], "torch.scatter": [[1852, "torch-scatter"]], "torch.set_deterministic_debug_mode": [[1862, "torch-set-deterministic-debug-mode"]], "torch.scatter_add": [[1853, "torch-scatter-add"]], "torch.set_default_tensor_type": [[1861, "torch-set-default-tensor-type"]], "torch.signal.windows.hann": [[1881, "torch-signal-windows-hann"]], "torch.select_scatter": [[1858, "torch-select-scatter"]], "torch.signbit": [[1884, "torch-signbit"]], "torch.set_default_dtype": [[1860, "torch-set-default-dtype"]], "torch.signal.windows.hamming": [[1880, "torch-signal-windows-hamming"]], "torch.signal.windows.kaiser": [[1882, "torch-signal-windows-kaiser"]], "torch.row_stack": [[1849, "torch-row-stack"]], "torch.set_flush_denormal": [[1864, "torch-set-flush-denormal"]], "torch.sinc": [[1886, "torch-sinc"]], "torch.set_printoptions": [[1867, "torch-set-printoptions"]], "torch.resolve_neg": [[1844, "torch-resolve-neg"]], "torch.signal.windows.exponential": [[1876, "torch-signal-windows-exponential"]], "torch.sigmoid": [[1871, "torch-sigmoid"]], "torch.signal.windows.general_hamming": [[1879, "torch-signal-windows-general-hamming"]], "torch.save": [[1851, "torch-save"]], "torch.sin": [[1885, "torch-sin"]], "torch.set_float32_matmul_precision": [[1863, "torch-set-float32-matmul-precision"]], "torch.signal.windows.blackman": [[1874, "torch-signal-windows-blackman"]], "torch.signal.windows.nuttall": [[1883, "torch-signal-windows-nuttall"]], "torch.seed": [[1856, "torch-seed"]], "torch.round": [[1848, "torch-round"]], "torch.real": [[1837, "torch-real"]], "torch.repeat_interleave": [[1841, "torch-repeat-interleave"]], "torch.set_num_threads": [[1866, "torch-set-num-threads"]], "torch.signal.windows.general_cosine": [[1878, "torch-signal-windows-general-cosine"]], "torch.signal.windows.bartlett": [[1873, "torch-signal-windows-bartlett"]], "torch.sgn": [[1870, "torch-sgn"]], "torch.set_default_device": [[1859, "torch-set-default-device"]], "torch.result_type": [[1845, "torch-result-type"]], "torch.rsqrt": [[1850, "torch-rsqrt"]], "torch.signal.windows.gaussian": [[1877, "torch-signal-windows-gaussian"]], "torch.sign": [[1872, "torch-sign"]], "torch.searchsorted": [[1855, "torch-searchsorted"]], "torch.set_num_interop_threads": [[1865, "torch-set-num-interop-threads"]], "torch.reciprocal": [[1838, "torch-reciprocal"]], "Frequently Asked Questions": [[2094, "frequently-asked-questions"], [2006, "frequently-asked-questions"], [7, "frequently-asked-questions"], [2062, "frequently-asked-questions"], [2056, "frequently-asked-questions"], [2041, "frequently-asked-questions"]], "Does torch.compile support training?": [[2094, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[2094, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[2094, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[2094, "why-is-my-code-crashing"]], "Why is compilation slow?": [[2094, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[2094, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[2094, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[2094, "why-am-i-not-seeing-speedups"]], "Graph Breaks": [[2094, "graph-breaks"], [2103, "graph-breaks"], [49, "graph-breaks"]], "Identifying the cause of a graph break": [[2094, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[2094, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[2094, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[2094, "why-am-i-getting-ooms"]], "Does torch.func work with torch.compile (for grad and vmap transforms)?": [[2094, "does-torch-func-work-with-torch-compile-for-grad-and-vmap-transforms"]], "Calling torch.func transform inside of a function handled with torch.compile": [[2094, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Compiling torch.func.grad with torch.compile": [[2094, "compiling-torch-func-grad-with-torch-compile"]], "Compiling torch.vmap with torch.compile": [[2094, "compiling-torch-vmap-with-torch-compile"]], "Compiling functions besides the ones which are supported (escape hatch)": [[2094, "compiling-functions-besides-the-ones-which-are-supported-escape-hatch"]], "Does NumPy work with torch.compile?": [[2094, "does-numpy-work-with-torch-compile"]], "Which NumPy features does torch.compile support?": [[2094, "which-numpy-features-does-torch-compile-support"]], "Can I compile NumPy code using torch.compile?": [[2094, "can-i-compile-numpy-code-using-torch-compile"]], "Can I execute NumPy code on CUDA and compute gradients via torch.compile?": [[2094, "can-i-execute-numpy-code-on-cuda-and-compute-gradients-via-torch-compile"]], "How do I debug NumPy code under torch.compile?": [[2094, "how-do-i-debug-numpy-code-under-torch-compile"]], "I torch.compile some NumPy code and I did not see any speed-up.": [[2094, "i-torch-compile-some-numpy-code-and-i-did-not-see-any-speed-up"]], "Which API to use for fine grain tracing?": [[2094, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[2094, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[2094, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[2094, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "Torch Environment Variables": [[2106, "torch-environment-variables"]], "TorchInductor GPU Profiling": [[2097, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[2097, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[2097, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[2097, "benchmark-individual-triton-kernel"]], "Understanding CUDA Memory Usage": [[2105, "understanding-cuda-memory-usage"]], "Generating a Snapshot": [[2105, "generating-a-snapshot"]], "Using the visualizer": [[2105, "using-the-visualizer"]], "Active Memory Timeline": [[2105, "active-memory-timeline"]], "Allocator State History": [[2105, "allocator-state-history"]], "Snapshot API Reference": [[2105, "snapshot-api-reference"]], "Type Info": [[2107, "type-info"]], "torch.finfo": [[2107, "torch-finfo"]], "torch.iinfo": [[2107, "torch-iinfo"]], "torch.overrides": [[2104, "module-torch.overrides"]], "Functions": [[2104, "functions"], [2008, "functions"], [2006, "functions"], [2056, "functions"], [2073, "functions"]], "torch.utils": [[2108, "module-torch.utils"]], "Profiling to understand torch.compile performance": [[2101, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[2101, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[2101, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[2101, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[2101, "understanding-compilation-time"]], "Finding graph breaks: \u201cTorch-Compiled Region\u201d and \u201cCompiledFunction\u201d": [[2101, "finding-graph-breaks-torch-compiled-region-and-compiledfunction"]], "Operator Kernels": [[2101, "operator-kernels"]], "Launch overhead": [[2101, "launch-overhead"]], "TorchDynamo APIs for fine-grained tracing": [[2095, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[2095, "id1"]], "torch.compiler.disable": [[2095, "torch-compiler-disable"], [978, "torch-compiler-disable"]], "torch._dynamo.disallow_in_graph": [[2095, "torch-dynamo-disallow-in-graph"]], "torch.compiler.allow_in_graph": [[2095, "torch-compiler-allow-in-graph"], [974, "torch-compiler-allow-in-graph"]], "Limitations": [[2095, "limitations"], [2088, "limitations"], [2056, "limitations"]], "Dynamo Deep-Dive": [[2091, "dynamo-deep-dive"]], "A Gentle Introduction to Dynamo": [[2091, "a-gentle-introduction-to-dynamo"]], "PEP 523: Adding a frame evaluation API to CPython": [[2091, "pep-523-adding-a-frame-evaluation-api-to-cpython"]], "Implementing CPython in Python": [[2091, "implementing-cpython-in-python"]], "Generating the Output Graph": [[2091, "generating-the-output-graph"]], "Making Dynamo Sound: Guards": [[2091, "making-dynamo-sound-guards"]], "Symbolic Shapes": [[2091, "symbolic-shapes"]], "Static by default": [[2091, "static-by-default"]], "0, 1 are always specialized": [[2091, "are-always-specialized"]], "Duck shaping": [[2091, "duck-shaping"]], "Guards on symbolic ints": [[2091, "guards-on-symbolic-ints"]], "Making Dynamo Complete: Graph Breaks": [[2091, "making-dynamo-complete-graph-breaks"]], "Conclusion": [[2091, "conclusion"]], "Footnotes": [[2091, "footnotes"]], "Getting Started": [[2096, "getting-started"], [7, "getting-started"]], "Using a pretrained model": [[2096, "using-a-pretrained-model"]], "Next Steps": [[2096, "next-steps"]], "Fake tensor": [[2093, "fake-tensor"]], "Motivation": [[2093, "motivation"], [2016, "motivation"], [2090, "motivation"]], "Related work": [[2093, "related-work"]], "Overall architecture": [[2093, "overall-architecture"], [2090, "overall-architecture"]], "API: the important bits": [[2093, "api-the-important-bits"]], "Details": [[2093, "details"]], "About the tensor subclass": [[2093, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[2093, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[2093, "how-does-the-converter-work"]], "Performance characteristics": [[2093, "performance-characteristics"]], "Fake tensor of fake tensor?": [[2093, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[2093, "interaction-with-dynamic-shapes"]], "Other resources": [[2093, "other-resources"]], "torch.xpu": [[2109, "module-torch.xpu"]], "Random Number Generator": [[2109, "random-number-generator"], [17, "random-number-generator"]], "Streams and events": [[2109, "streams-and-events"], [2023, "streams-and-events"], [16, "streams-and-events"], [17, "streams-and-events"]], "IRs": [[2098, "irs"]], "Core Aten IR": [[2098, "core-aten-ir"]], "Prims IR": [[2098, "prims-ir"]], "Writing Graph Transformations on ATen IR": [[2102, "writing-graph-transformations-on-aten-ir"]], "Passes": [[2102, "passes"]], "Transformer": [[2102, "transformer"], [1563, "transformer"]], "One-to-One Pass": [[2102, "one-to-one-pass"]], "One-to-X Pass": [[2102, "one-to-x-pass"]], "One-to-None Pass": [[2102, "one-to-none-pass"]], "Utilizing Local Information": [[2102, "utilizing-local-information"]], "Subgraph Rewriter": [[2102, "subgraph-rewriter"]], "Pass Manager": [[2102, "pass-manager"]], "Partitioner": [[2102, "partitioner"]], "Subgraph Matcher": [[2102, "subgraph-matcher"]], "Capability Based Partitioner": [[2102, "capability-based-partitioner"]], "PyTorch 2.0 NNModule Support": [[2099, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[2099, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[2099, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[2099, "state-dict-hooks"]], "PyTorch 2.0 Performance Dashboard": [[2100, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[2100, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[2100, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[2100, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[2100, "how-can-i-run-any-performance-test-locally"]], "TorchDynamo Overview": [[2092, "torchdynamo-overview"]], "TorchDynamo Internals": [[2092, "torchdynamo-internals"]], "What is a guard?": [[2092, "what-is-a-guard"]], "What is Dynamo doing?": [[2092, "what-is-dynamo-doing"]], "How to inspect artifacts generated by TorchDynamo?": [[2092, "how-to-inspect-artifacts-generated-by-torchdynamo"]], "PyTorch 2.0 Troubleshooting": [[2103, "pytorch-2-0-troubleshooting"]], "Title": [[2103, "id1"]], "Diagnosing Runtime Errors": [[2103, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[2103, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[2103, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[2103, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[2103, "minifying-backend-compiler-errors"]], "Performance Profiling": [[2103, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[2103, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[2103, "torchinductor-debugging-using-torch-compile-debug"]], "Identifying the Cause of a Graph Break": [[2103, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[2103, "excessive-recompilation"]], "Accuracy Debugging": [[2103, "accuracy-debugging"]], "Extended Debugging": [[2103, "extended-debugging"]], "torch.Tensor.absolute_": [[91, "torch-tensor-absolute"]], "torch.Tensor.addbmm_": [[99, "torch-tensor-addbmm"]], "FXE0015:fx-node-insert-type-promotion": [[85, "fxe0015-fx-node-insert-type-promotion"]], "FXE0013:op-level-debugging": [[83, "fxe0013-op-level-debugging"]], "python.object-model": [[70, "python-object-model"]], "model_attr_mutation": [[70, "model-attr-mutation"], [63, "model-attr-mutation"]], "optional_input": [[70, "optional-input"], [63, "optional-input"]], "Patching Batch Norm": [[55, "patching-batch-norm"]], "What\u2019s happening?": [[55, "what-s-happening"]], "How to fix": [[55, "how-to-fix"]], "Option 1: Change the BatchNorm": [[55, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[55, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[55, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[55, "option-4-eval-mode"]], "torch.__future__": [[59, "module-torch.__future__"]], "torch.Tensor.addbmm": [[98, "torch-tensor-addbmm"]], "FXE0010:fx-pass": [[80, "fxe0010-fx-pass"]], "torch.futures": [[60, "torch-futures"]], "torch.dynamic-shape": [[72, "torch-dynamic-shape"]], "cond_branch_class_method": [[72, "cond-branch-class-method"], [71, "cond-branch-class-method"], [63, "cond-branch-class-method"]], "cond_branch_nested_function": [[72, "cond-branch-nested-function"], [71, "cond-branch-nested-function"], [63, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[72, "cond-branch-nonlocal-variables"], [71, "cond-branch-nonlocal-variables"], [63, "cond-branch-nonlocal-variables"]], "cond_operands": [[72, "cond-operands"], [71, "cond-operands"], [63, "cond-operands"]], "cond_predicate": [[72, "cond-predicate"], [71, "cond-predicate"], [63, "cond-predicate"]], "dynamic_shape_constructor": [[72, "dynamic-shape-constructor"], [63, "dynamic-shape-constructor"]], "dynamic_shape_if_guard": [[72, "dynamic-shape-if-guard"], [68, "dynamic-shape-if-guard"], [63, "dynamic-shape-if-guard"]], "dynamic_shape_map": [[72, "dynamic-shape-map"], [63, "dynamic-shape-map"], [75, "dynamic-shape-map"]], "dynamic_shape_round": [[72, "dynamic-shape-round"], [63, "dynamic-shape-round"], [65, "dynamic-shape-round"]], "dynamic_shape_slicing": [[72, "dynamic-shape-slicing"], [63, "dynamic-shape-slicing"]], "dynamic_shape_view": [[72, "dynamic-shape-view"], [63, "dynamic-shape-view"]], "list_contains": [[72, "list-contains"], [63, "list-contains"], [64, "list-contains"], [69, "list-contains"]], "scalar_output": [[72, "scalar-output"], [63, "scalar-output"]], "torch.mutation": [[76, "torch-mutation"]], "user_input_mutation": [[76, "user-input-mutation"], [63, "user-input-mutation"]], "torch.Tensor.addcdiv_": [[101, "torch-tensor-addcdiv"]], "torch.Tensor.acosh_": [[95, "torch-tensor-acosh"]], "torch.func": [[53, "torch-func"]], "What are composable function transforms?": [[53, "what-are-composable-function-transforms"]], "Why composable function transforms?": [[53, "why-composable-function-transforms"], [58, "why-composable-function-transforms"]], "Read More": [[53, "read-more"], [49, "read-more"], [2084, "read-more"]], "FXE0007:fx-graph-to-onnx": [[78, "fxe0007-fx-graph-to-onnx"]], "Key Representations:": [[78, "key-representations"]], "Additional Notes:": [[78, "additional-notes"]], "python.context-manager": [[67, "python-context-manager"]], "null_context_manager": [[67, "null-context-manager"], [63, "null-context-manager"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[86, "fxe0016-find-operator-overloads-in-onnx-registry"]], "python.control-flow": [[68, "python-control-flow"]], "list_unpack": [[68, "list-unpack"], [63, "list-unpack"], [69, "list-unpack"]], "static_for_loop": [[68, "static-for-loop"], [63, "static-for-loop"]], "static_if": [[68, "static-if"], [63, "static-if"]], "torch.Tensor.acosh": [[94, "torch-tensor-acosh"]], "torch.cond": [[71, "torch-cond"], [986, "torch-cond"]], "cond_closed_over_variable": [[71, "cond-closed-over-variable"], [63, "cond-closed-over-variable"], [66, "cond-closed-over-variable"]], "FXE0011:no-symbolic-function-for-call-function": [[81, "fxe0011-no-symbolic-function-for-call-function"]], "ExportDB": [[63, "exportdb"]], "Tags": [[63, null]], "Supported": [[63, "supported"]], "assume_constant_result": [[63, "assume-constant-result"], [74, "assume-constant-result"]], "autograd_function": [[63, "autograd-function"]], "class_method": [[63, "class-method"]], "constrain_as_size_example": [[63, "constrain-as-size-example"], [73, "constrain-as-size-example"], [74, "constrain-as-size-example"]], "constrain_as_value_example": [[63, "constrain-as-value-example"], [73, "constrain-as-value-example"], [74, "constrain-as-value-example"]], "decorator": [[63, "decorator"]], "dictionary": [[63, "dictionary"], [69, "dictionary"]], "dynamic_shape_assert": [[63, "dynamic-shape-assert"], [64, "dynamic-shape-assert"]], "fn_with_kwargs": [[63, "fn-with-kwargs"], [69, "fn-with-kwargs"]], "nested_function": [[63, "nested-function"], [66, "nested-function"]], "pytree_flatten": [[63, "pytree-flatten"]], "specialized_attribute": [[63, "specialized-attribute"]], "tensor_setattr": [[63, "tensor-setattr"], [65, "tensor-setattr"]], "type_reflection_method": [[63, "type-reflection-method"], [65, "type-reflection-method"]], "Not Supported Yet": [[63, "not-supported-yet"]], "torch_sym_min": [[63, "torch-sym-min"], [77, "torch-sym-min"]], "torch.Tensor.absolute": [[90, "torch-tensor-absolute"]], "torch.fx": [[61, "torch-fx"]], "Overview": [[61, "module-torch.fx"], [18, "module-torch.cuda._sanitizer"], [49, "overview"], [2089, "overview"], [2061, "module-torch.profiler"], [2053, "overview"], [2054, "overview"]], "Writing Transformations": [[61, "writing-transformations"]], "A Quick Primer on Graphs": [[61, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[61, "graph-manipulation"]], "Direct Graph Manipulation": [[61, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[61, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[61, "graph-manipulation-examples"]], "Proxy/Retracing": [[61, "proxy-retracing"]], "The Interpreter Pattern": [[61, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[61, "examples-of-the-interpreter-pattern"]], "Debugging": [[61, "debugging"], [2006, "debugging"]], "Introduction": [[61, "introduction"], [2016, "introduction"], [2027, "introduction"]], "Common Pitfalls in Transform Authoring": [[61, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[61, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[61, "debugging-the-generated-code"]], "Use pdb": [[61, "use-pdb"]], "Print the Generated Code": [[61, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[61, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[61, "debugging-the-transformation"]], "Available Debuggers": [[61, "available-debuggers"]], "Limitations of Symbolic Tracing": [[61, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[61, "dynamic-control-flow"]], "Static Control Flow": [[61, "static-control-flow"]], "Non-torch Functions": [[61, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[61, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[61, "leaf-modules"]], "Miscellanea": [[61, "miscellanea"]], "API Reference": [[61, "api-reference"], [2021, "module-torch.monitor"], [12, "api-reference"], [18, "api-reference"], [49, "module-torch.export"], [2059, "api-reference"], [2061, "api-reference"], [2054, "api-reference"]], "torch.Tensor.acos_": [[93, "torch-tensor-acos"]], "torch.Tensor.acos": [[92, "torch-tensor-acos"]], "FXE0012:unsupported-fx-node-analysis": [[82, "fxe0012-unsupported-fx-node-analysis"]], "UX Limitations": [[57, "ux-limitations"]], "General limitations": [[57, "general-limitations"]], "torch.autograd APIs": [[57, "torch-autograd-apis"]], "vmap limitations": [[57, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[57, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[57, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[57, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[57, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[57, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[57, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[57, "randomness"]], "Generator": [[87, "generator"]], "python.builtin": [[65, "python-builtin"]], "Migrating from functorch to torch.func": [[56, "migrating-from-functorch-to-torch-func"]], "function transforms": [[56, "function-transforms"]], "NN module utilities": [[56, "nn-module-utilities"]], "functorch.make_functional": [[56, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[56, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[56, "functorch-compile"]], "torch.dynamic-value": [[73, "torch-dynamic-value"]], "FXE0014:find-opschema-matched-symbolic-function": [[84, "fxe0014-find-opschema-matched-symbolic-function"]], "torch.Tensor.abs": [[88, "torch-tensor-abs"]], "torch.operator": [[77, "torch-operator"]], "torch.fft": [[51, "torch-fft"]], "Fast Fourier Transforms": [[51, "fast-fourier-transforms"]], "Helper Functions": [[51, "helper-functions"]], "torch.escape-hatch": [[74, "torch-escape-hatch"]], "torch.map": [[75, "torch-map"]], "python.closure": [[66, "python-closure"]], "torch.Tensor.abs_": [[89, "torch-tensor-abs"]], "torch.func API Reference": [[54, "module-torch.func"]], "Function Transforms": [[54, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[54, "utilities-for-working-with-torch-nn-modules"]], "torch.Tensor.add": [[96, "torch-tensor-add"]], "torch.Tensor.addcdiv": [[100, "torch-tensor-addcdiv"]], "FXE0008:fx-node-to-onnx": [[79, "fxe0008-fx-node-to-onnx"]], "torch.Tensor.add_": [[97, "torch-tensor-add"]], "torch.func Whirlwind Tour": [[58, "torch-func-whirlwind-tour"]], "What is torch.func?": [[58, "what-is-torch-func"]], "What are the transforms?": [[58, "what-are-the-transforms"]], "grad() (gradient computation)": [[58, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[58, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[58, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[58, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[58, "jacrev-jacfwd-and-hessian"]], "FullyShardedDataParallel": [[52, "module-torch.distributed.fsdp"]], "torch.fx.experimental": [[62, "torch-fx-experimental"]], "torch.fx.experimental.symbolic_shapes": [[62, "module-torch.fx.experimental.symbolic_shapes"]], "python.assert": [[64, "python-assert"]], "python.data-structure": [[69, "python-data-structure"]], "torch.nn.functional.max_pool3d": [[1652, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.huber_loss": [[1634, "torch-nn-functional-huber-loss"]], "torch.nn.functional.pixel_shuffle": [[1667, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.poisson_nll_loss": [[1669, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.pixel_unshuffle": [[1668, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.max_unpool3d": [[1655, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.interpolate": [[1636, "torch-nn-functional-interpolate"]], "torch.nn.functional.one_hot": [[1663, "torch-nn-functional-one-hot"]], "torch.nn.functional.max_pool2d": [[1651, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.max_unpool1d": [[1653, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.linear": [[1642, "torch-nn-functional-linear"]], "torch.nn.functional.hardtanh_": [[1632, "torch-nn-functional-hardtanh"]], "torch.nn.functional.pdist": [[1666, "torch-nn-functional-pdist"]], "torch.nn.functional.multilabel_margin_loss": [[1659, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.multi_margin_loss": [[1658, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.rrelu": [[1675, "torch-nn-functional-rrelu"]], "torch.nn.functional.kl_div": [[1637, "torch-nn-functional-kl-div"]], "torch.nn.functional.rms_norm": [[1674, "torch-nn-functional-rms-norm"]], "torch.nn.functional.l1_loss": [[1638, "torch-nn-functional-l1-loss"]], "torch.nn.functional.normalize": [[1662, "torch-nn-functional-normalize"]], "torch.nn.functional.smooth_l1_loss": [[1681, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1660, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.layer_norm": [[1639, "torch-nn-functional-layer-norm"]], "torch.nn.functional.lp_pool3d": [[1648, "torch-nn-functional-lp-pool3d"]], "torch.nn.functional.logsigmoid": [[1645, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.hinge_embedding_loss": [[1633, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.leaky_relu": [[1640, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.sigmoid": [[1679, "torch-nn-functional-sigmoid"]], "torch.nn.functional.mse_loss": [[1657, "torch-nn-functional-mse-loss"]], "torch.nn.functional.soft_margin_loss": [[1682, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.silu": [[1680, "torch-nn-functional-silu"]], "torch.nn.functional.rrelu_": [[1676, "torch-nn-functional-rrelu"]], "torch.nn.functional.instance_norm": [[1635, "torch-nn-functional-instance-norm"]], "torch.nn.functional.relu": [[1671, "torch-nn-functional-relu"]], "torch.nn.functional.relu6": [[1672, "torch-nn-functional-relu6"]], "torch.nn.functional.local_response_norm": [[1643, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.scaled_dot_product_attention": [[1677, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.mish": [[1656, "torch-nn-functional-mish"]], "torch.nn.functional.max_unpool2d": [[1654, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.leaky_relu_": [[1641, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.pairwise_distance": [[1665, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.log_softmax": [[1644, "torch-nn-functional-log-softmax"]], "torch.nn.functional.lp_pool2d": [[1647, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.margin_ranking_loss": [[1649, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.lp_pool1d": [[1646, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.max_pool1d": [[1650, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.pad": [[1664, "torch-nn-functional-pad"]], "torch.nn.functional.prelu": [[1670, "torch-nn-functional-prelu"]], "torch.nn.functional.selu": [[1678, "torch-nn-functional-selu"]], "torch.nn.functional.relu_": [[1673, "torch-nn-functional-relu"]], "torch.nn.functional.nll_loss": [[1661, "torch-nn-functional-nll-loss"]], "torch.nn.utils.fuse_linear_bn_weights": [[1721, "torch-nn-utils-fuse-linear-bn-weights"]], "torch.nn.functional.softmax": [[1683, "torch-nn-functional-softmax"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1701, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "UninitializedBuffer": [[1711, "uninitializedbuffer"]], "torch.nn.functional.softmin": [[1684, "torch-nn-functional-softmin"]], "torch.nn.utils.convert_conv3d_weight_memory_format": [[1717, "torch-nn-utils-convert-conv3d-weight-memory-format"]], "torch.nn.functional.upsample_bilinear": [[1697, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.unfold": [[1695, "torch-nn-functional-unfold"]], "torch.nn.utils.convert_conv2d_weight_memory_format": [[1716, "torch-nn-utils-convert-conv2d-weight-memory-format"]], "torch.nn.utils.parametrizations.orthogonal": [[1723, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.utils.parametrizations.spectral_norm": [[1724, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1705, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "Parameter": [[1710, "parameter"]], "torch.nn.functional.softsign": [[1687, "torch-nn-functional-softsign"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1692, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.functional.upsample": [[1696, "torch-nn-functional-upsample"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1704, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.utils.parametrize.is_parametrized": [[1728, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.utils.parametrize.register_parametrization": [[1729, "torch-nn-utils-parametrize-register-parametrization"]], "LazyModuleMixin": [[1699, "lazymodulemixin"]], "torch.nn.utils.clip_grad_norm": [[1713, "torch-nn-utils-clip-grad-norm"]], "torch.nn.utils.parameters_to_vector": [[1722, "torch-nn-utils-parameters-to-vector"]], "torch.nn.utils.parametrize.cached": [[1727, "torch-nn-utils-parametrize-cached"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1730, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1703, "torch-nn-modules-module-register-module-forward-pre-hook"]], "DistributedDataParallel": [[1709, "distributeddataparallel"], [2038, "distributeddataparallel"]], "torch.nn.functional.threshold": [[1690, "torch-nn-functional-threshold"]], "torch.nn.functional.threshold_": [[1691, "torch-nn-functional-threshold"]], "CustomFromMask": [[1732, "customfrommask"]], "torch.nn.utils.clip_grad_value_": [[1715, "torch-nn-utils-clip-grad-value"]], "torch.nn.modules.module.register_module_forward_hook": [[1702, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1707, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "BasePruningMethod": [[1731, "basepruningmethod"]], "torch.nn.functional.upsample_nearest": [[1698, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.tanhshrink": [[1689, "torch-nn-functional-tanhshrink"]], "torch.nn.modules.module.register_module_backward_hook": [[1700, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1706, "torch-nn-modules-module-register-module-module-registration-hook"]], "Identity": [[1733, "identity"], [1480, "identity"]], "torch.nn.utils.parametrizations.weight_norm": [[1725, "torch-nn-utils-parametrizations-weight-norm"]], "torch.nn.utils.fuse_linear_bn_eval": [[1720, "torch-nn-utils-fuse-linear-bn-eval"]], "torch.nn.functional.triplet_margin_loss": [[1693, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.utils.clip_grad_norm_": [[1714, "torch-nn-utils-clip-grad-norm"]], "torch.nn.functional.softshrink": [[1686, "torch-nn-functional-softshrink"]], "RMSNorm": [[1708, "rmsnorm"], [1534, "rmsnorm"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1694, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.tanh": [[1688, "torch-nn-functional-tanh"]], "torch.nn.utils.fuse_conv_bn_eval": [[1718, "torch-nn-utils-fuse-conv-bn-eval"]], "torch.nn.utils.fuse_conv_bn_weights": [[1719, "torch-nn-utils-fuse-conv-bn-weights"]], "ParametrizationList": [[1726, "parametrizationlist"]], "UninitializedParameter": [[1712, "uninitializedparameter"]], "torch.nn.functional.softplus": [[1685, "torch-nn-functional-softplus"]], "torch.randint": [[1830, "torch-randint"]], "ExponentialLR": [[1796, "exponentiallr"]], "SGD": [[1789, "sgd"]], "torch.quantile": [[1820, "torch-quantile"]], "torch.pca_lowrank": [[1809, "torch-pca-lowrank"]], "SparseAdam": [[1790, "sparseadam"]], "torch.rad2deg": [[1827, "torch-rad2deg"]], "torch.pow": [[1816, "torch-pow"]], "torch.quantize_per_channel": [[1821, "torch-quantize-per-channel"]], "torch.randn_like": [[1833, "torch-randn-like"]], "torch.quantized_max_pool1d": [[1824, "torch-quantized-max-pool1d"]], "Rprop": [[1788, "rprop"]], "StepLR": [[1805, "steplr"]], "MultiplicativeLR": [[1800, "multiplicativelr"]], "LambdaLR": [[1797, "lambdalr"]], "torch.promote_types": [[1818, "torch-promote-types"]], "torch.rand": [[1828, "torch-rand"]], "torch.poisson": [[1812, "torch-poisson"]], "CosineAnnealingLR": [[1793, "cosineannealinglr"]], "ConstantLR": [[1792, "constantlr"]], "CyclicLR": [[1795, "cycliclr"]], "torch.quantize_per_tensor": [[1822, "torch-quantize-per-tensor"]], "RAdam": [[1786, "radam"]], "torch.randint_like": [[1831, "torch-randint-like"]], "torch.pinverse": [[1811, "torch-pinverse"]], "torch.quantized_max_pool2d": [[1825, "torch-quantized-max-pool2d"]], "torch.quantized_batch_norm": [[1823, "torch-quantized-batch-norm"]], "PolynomialLR": [[1802, "polynomiallr"]], "ReduceLROnPlateau": [[1803, "reducelronplateau"]], "torch.randperm": [[1834, "torch-randperm"]], "torch.orgqr": [[1806, "torch-orgqr"]], "MultiStepLR": [[1799, "multisteplr"]], "torch.randn": [[1832, "torch-randn"]], "torch.optim.Optimizer.zero_grad": [[1785, "torch-optim-optimizer-zero-grad"]], "torch.positive": [[1815, "torch-positive"]], "torch.prod": [[1817, "torch-prod"]], "OneCycleLR": [[1801, "onecyclelr"]], "torch.ormqr": [[1807, "torch-ormqr"]], "SequentialLR": [[1804, "sequentiallr"]], "torch.outer": [[1808, "torch-outer"]], "RMSprop": [[1787, "rmsprop"]], "torch.permute": [[1810, "torch-permute"]], "torch.polar": [[1813, "torch-polar"]], "torch.qr": [[1819, "torch-qr"]], "torch.polygamma": [[1814, "torch-polygamma"]], "torch.rand_like": [[1829, "torch-rand-like"]], "ChainedScheduler": [[1791, "chainedscheduler"]], "torch.range": [[1835, "torch-range"]], "CosineAnnealingWarmRestarts": [[1794, "cosineannealingwarmrestarts"]], "LinearLR": [[1798, "linearlr"]], "SobolEngine": [[1826, "sobolengine"]], "torch.nn.functional.dropout2d": [[1612, "torch-nn-functional-dropout2d"]], "torch.nn.functional.dropout1d": [[1611, "torch-nn-functional-dropout1d"]], "torch.nn.functional.affine_grid": [[1590, "torch-nn-functional-affine-grid"]], "torch.nn.functional.adaptive_avg_pool3d": [[1586, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.adaptive_max_pool1d": [[1587, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.elu_": [[1615, "torch-nn-functional-elu"]], "torch.nn.functional.cross_entropy": [[1608, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.embedding_bag": [[1617, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.glu": [[1624, "torch-nn-functional-glu"]], "torch.nn.functional.grid_sample": [[1625, "torch-nn-functional-grid-sample"]], "torch.nn.functional.adaptive_avg_pool1d": [[1584, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.conv_transpose1d": [[1603, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.feature_alpha_dropout": [[1618, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.hardshrink": [[1628, "torch-nn-functional-hardshrink"]], "torch.nn.functional.adaptive_avg_pool2d": [[1585, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.batch_norm": [[1595, "torch-nn-functional-batch-norm"]], "torch.nn.functional.adaptive_max_pool3d": [[1589, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.hardsigmoid": [[1629, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.group_norm": [[1626, "torch-nn-functional-group-norm"]], "torch.nn.functional.bilinear": [[1596, "torch-nn-functional-bilinear"]], "torch.nn.functional.cosine_embedding_loss": [[1606, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.gaussian_nll_loss": [[1622, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.attention.sdpa_kernel": [[1583, "torch-nn-attention-sdpa-kernel"]], "torch.nn.functional.fractional_max_pool3d": [[1621, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.gumbel_softmax": [[1627, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.conv_transpose3d": [[1605, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.avg_pool2d": [[1593, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.embedding": [[1616, "torch-nn-functional-embedding"]], "torch.nn.functional.fractional_max_pool2d": [[1620, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.dropout": [[1610, "torch-nn-functional-dropout"]], "torch.nn.functional.conv_transpose2d": [[1604, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.fold": [[1619, "torch-nn-functional-fold"]], "torch.nn.attention.bias.causal_lower_right": [[1581, "torch-nn-attention-bias-causal-lower-right"]], "torch.nn.functional.dropout3d": [[1613, "torch-nn-functional-dropout3d"]], "torch.nn.functional.hardtanh": [[1631, "torch-nn-functional-hardtanh"]], "torch.nn.functional.conv3d": [[1602, "torch-nn-functional-conv3d"]], "torch.nn.functional.hardswish": [[1630, "torch-nn-functional-hardswish"]], "torch.nn.functional.ctc_loss": [[1609, "torch-nn-functional-ctc-loss"]], "torch.nn.attention.bias.causal_upper_left": [[1582, "torch-nn-attention-bias-causal-upper-left"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1598, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.alpha_dropout": [[1591, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.elu": [[1614, "torch-nn-functional-elu"]], "torch.nn.functional.celu": [[1599, "torch-nn-functional-celu"]], "torch.nn.functional.cosine_similarity": [[1607, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.adaptive_max_pool2d": [[1588, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.conv2d": [[1601, "torch-nn-functional-conv2d"]], "torch.nn.functional.conv1d": [[1600, "torch-nn-functional-conv1d"]], "torch.nn.functional.avg_pool1d": [[1592, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.gelu": [[1623, "torch-nn-functional-gelu"]], "torch.nn.functional.binary_cross_entropy": [[1597, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.avg_pool3d": [[1594, "torch-nn-functional-avg-pool3d"]], "torch.nn.utils.vector_to_parameters": [[1760, "torch-nn-utils-vector-to-parameters"]], "torch.nn.utils.prune.global_unstructured": [[1740, "torch-nn-utils-prune-global-unstructured"]], "torch.nn.utils.skip_init": [[1757, "torch-nn-utils-skip-init"]], "PackedSequence": [[1750, "packedsequence"]], "VerificationOptions": [[1772, "verificationoptions"]], "torch.nn.utils.rnn.pack_sequence": [[1752, "torch-nn-utils-rnn-pack-sequence"]], "RandomStructured": [[1737, "randomstructured"]], "JitScalarType": [[1770, "jitscalartype"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1753, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.nn.utils.remove_spectral_norm": [[1748, "torch-nn-utils-remove-spectral-norm"]], "PruningContainer": [[1736, "pruningcontainer"]], "Adagrad": [[1775, "adagrad"]], "torch.nn.utils.prune.custom_from_mask": [[1739, "torch-nn-utils-prune-custom-from-mask"]], "torch.norm": [[1764, "torch-norm"]], "torch.ones_like": [[1769, "torch-ones-like"]], "torch.normal": [[1765, "torch-normal"]], "torch.optim.Optimizer.add_param_group": [[1781, "torch-optim-optimizer-add-param-group"]], "NAdam": [[1780, "nadam"]], "torch.not_equal": [[1766, "torch-not-equal"]], "ASGD": [[1773, "asgd"]], "torch.nn.utils.prune.l1_unstructured": [[1743, "torch-nn-utils-prune-l1-unstructured"]], "Adam": [[1776, "adam"]], "LBFGS": [[1779, "lbfgs"]], "torch.nn.utils.prune.ln_structured": [[1744, "torch-nn-utils-prune-ln-structured"]], "Adamax": [[1778, "adamax"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1751, "torch-nn-utils-rnn-pack-padded-sequence"]], "LnStructured": [[1735, "lnstructured"]], "torch.optim.Optimizer.state_dict": [[1783, "torch-optim-optimizer-state-dict"]], "L1Unstructured": [[1734, "l1unstructured"]], "torch.nn.utils.rnn.unpack_sequence": [[1755, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.utils.prune.identity": [[1741, "torch-nn-utils-prune-identity"]], "torch.optim.Optimizer.step": [[1784, "torch-optim-optimizer-step"]], "torch.nn.utils.rnn.unpad_sequence": [[1756, "torch-nn-utils-rnn-unpad-sequence"]], "AdamW": [[1777, "adamw"]], "torch.nonzero": [[1763, "torch-nonzero"]], "torch.nn.utils.stateless.functional_call": [[1759, "torch-nn-utils-stateless-functional-call"]], "torch.nn.utils.prune.random_unstructured": [[1746, "torch-nn-utils-prune-random-unstructured"]], "GraphInfo": [[1771, "graphinfo"]], "torch.nn.utils.weight_norm": [[1761, "torch-nn-utils-weight-norm"]], "no_grad": [[1762, "no-grad"]], "RandomUnstructured": [[1738, "randomunstructured"]], "torch.ones": [[1768, "torch-ones"]], "Adadelta": [[1774, "adadelta"]], "torch.nn.utils.prune.remove": [[1747, "torch-nn-utils-prune-remove"]], "torch.nn.utils.remove_weight_norm": [[1749, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.spectral_norm": [[1758, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.prune.random_structured": [[1745, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.prune.is_pruned": [[1742, "torch-nn-utils-prune-is-pruned"]], "torch.numel": [[1767, "torch-numel"]], "torch.nn.utils.rnn.pad_sequence": [[1754, "torch-nn-utils-rnn-pad-sequence"]], "torch.optim.Optimizer.load_state_dict": [[1782, "torch-optim-optimizer-load-state-dict"]], "RReLU": [[1538, "rrelu"]], "PoissonNLLLoss": [[1533, "poissonnllloss"]], "Tanh": [[1560, "tanh"]], "SELU": [[1547, "selu"]], "SDPBackend": [[1578, "sdpbackend"]], "torch.nn.attention.bias.CausalBias": [[1579, "torch-nn-attention-bias-causalbias"]], "ReplicationPad2d": [[1545, "replicationpad2d"]], "TransformerDecoder": [[1564, "transformerdecoder"]], "ZeroPad3d": [[1577, "zeropad3d"]], "SmoothL1Loss": [[1551, "smoothl1loss"]], "Sigmoid": [[1550, "sigmoid"], [758, "sigmoid"]], "SiLU": [[1549, "silu"]], "Softmax": [[1553, "softmax"]], "TripletMarginLoss": [[1568, "tripletmarginloss"]], "CausalVariant": [[1580, "causalvariant"]], "Softshrink": [[1557, "softshrink"]], "Softplus": [[1556, "softplus"]], "Softmin": [[1555, "softmin"]], "SyncBatchNorm": [[1559, "syncbatchnorm"]], "Softmax2d": [[1554, "softmax2d"]], "UpsamplingBilinear2d": [[1573, "upsamplingbilinear2d"]], "TransformerEncoderLayer": [[1567, "transformerencoderlayer"]], "Unfold": [[1571, "unfold"]], "RNNCell": [[1537, "rnncell"], [764, "rnncell"]], "ReflectionPad1d": [[1541, "reflectionpad1d"]], "PixelUnshuffle": [[1532, "pixelunshuffle"]], "PixelShuffle": [[1531, "pixelshuffle"]], "UpsamplingNearest2d": [[1574, "upsamplingnearest2d"]], "Tanhshrink": [[1561, "tanhshrink"]], "ReLU6": [[1540, "relu6"], [757, "relu6"]], "Sequential": [[1548, "sequential"]], "RNN": [[1535, "rnn"]], "ParameterList": [[1530, "parameterlist"]], "Threshold": [[1562, "threshold"]], "TransformerEncoder": [[1566, "transformerencoder"]], "Softsign": [[1558, "softsign"]], "ReflectionPad3d": [[1543, "reflectionpad3d"]], "TransformerDecoderLayer": [[1565, "transformerdecoderlayer"]], "RNNBase": [[1536, "rnnbase"]], "Unflatten": [[1570, "unflatten"]], "ZeroPad2d": [[1576, "zeropad2d"]], "ReplicationPad3d": [[1546, "replicationpad3d"]], "TripletMarginWithDistanceLoss": [[1569, "tripletmarginwithdistanceloss"]], "ReLU": [[1539, "relu"]], "ReplicationPad1d": [[1544, "replicationpad1d"]], "ZeroPad1d": [[1575, "zeropad1d"]], "SoftMarginLoss": [[1552, "softmarginloss"]], "Upsample": [[1572, "upsample"]], "ReflectionPad2d": [[1542, "reflectionpad2d"]], "torch.mps.set_per_process_memory_fraction": [[1385, "torch-mps-set-per-process-memory-fraction"]], "torch.mtia.is_available": [[1399, "torch-mtia-is-available"]], "torch.narrow_copy": [[1415, "torch-narrow-copy"]], "torch.mps.profiler.stop": [[1383, "torch-mps-profiler-stop"]], "torch.mv": [[1407, "torch-mv"]], "AdaptiveAvgPool2d": [[1421, "adaptiveavgpool2d"]], "torch.mtia.synchronize": [[1403, "torch-mtia-synchronize"]], "torch.nextafter": [[1419, "torch-nextafter"]], "torch.nanmean": [[1410, "torch-nanmean"]], "torch.negative": [[1418, "torch-negative"]], "torch.msort": [[1388, "torch-msort"]], "torch.nanmedian": [[1411, "torch-nanmedian"]], "torch.nansum": [[1413, "torch-nansum"]], "torch.neg": [[1417, "torch-neg"]], "AdaptiveAvgPool3d": [[1422, "adaptiveavgpool3d"]], "torch.multiply": [[1406, "torch-multiply"]], "AdaptiveLogSoftmaxWithLoss": [[1423, "adaptivelogsoftmaxwithloss"]], "torch.mtia.device_count": [[1397, "torch-mtia-device-count"]], "torch.mps.seed": [[1384, "torch-mps-seed"]], "AdaptiveMaxPool2d": [[1425, "adaptivemaxpool2d"]], "torch.mtia.default_stream": [[1395, "torch-mtia-default-stream"]], "torch.mtia.DeferredMtiaCallError": [[1389, "torch-mtia-deferredmtiacallerror"]], "torch.mtia.current_stream": [[1394, "torch-mtia-current-stream"]], "torch.mps.empty_cache": [[1377, "torch-mps-empty-cache"]], "torch.mps.synchronize": [[1387, "torch-mps-synchronize"]], "torch.mps.profiler.profile": [[1381, "torch-mps-profiler-profile"]], "torch.mtia.is_initialized": [[1400, "torch-mtia-is-initialized"]], "torch.nanquantile": [[1412, "torch-nanquantile"]], "AlphaDropout": [[1427, "alphadropout"]], "torch.mps.profiler.start": [[1382, "torch-mps-profiler-start"]], "torch.mps.get_rng_state": [[1379, "torch-mps-get-rng-state"]], "torch.mtia.stream": [[1402, "torch-mtia-stream"]], "torch.multinomial": [[1405, "torch-multinomial"]], "AdaptiveAvgPool1d": [[1420, "adaptiveavgpool1d"]], "torch.mul": [[1404, "torch-mul"]], "torch.mtia.set_stream": [[1401, "torch-mtia-set-stream"]], "torch.mtia.current_device": [[1393, "torch-mtia-current-device"]], "torch.mps.manual_seed": [[1380, "torch-mps-manual-seed"]], "torch.mtia.init": [[1398, "torch-mtia-init"]], "torch.nan_to_num": [[1409, "torch-nan-to-num"]], "AdaptiveMaxPool3d": [[1426, "adaptivemaxpool3d"]], "AdaptiveMaxPool1d": [[1424, "adaptivemaxpool1d"]], "torch.mvlgamma": [[1408, "torch-mvlgamma"]], "torch.narrow": [[1414, "torch-narrow"]], "torch.ne": [[1416, "torch-ne"]], "torch.mps.set_rng_state": [[1386, "torch-mps-set-rng-state"]], "GRUCell": [[1471, "grucell"], [760, "grucell"]], "ConstantPad1d": [[1443, "constantpad1d"]], "Fold": [[1465, "fold"]], "FractionalMaxPool2d": [[1466, "fractionalmaxpool2d"]], "ELU": [[1460, "elu"], [743, "elu"]], "GLU": [[1469, "glu"]], "FractionalMaxPool3d": [[1467, "fractionalmaxpool3d"]], "CELU": [[1437, "celu"]], "BatchNorm1d": [[1433, "batchnorm1d"]], "DataParallel": [[1455, "dataparallel"]], "AvgPool3d": [[1430, "avgpool3d"]], "GRU": [[1470, "gru"], [759, "gru"]], "BatchNorm2d": [[1434, "batchnorm2d"], [735, "batchnorm2d"]], "AvgPool2d": [[1429, "avgpool2d"]], "BatchNorm3d": [[1435, "batchnorm3d"], [736, "batchnorm3d"]], "Dropout3d": [[1459, "dropout3d"]], "Flatten": [[1464, "flatten"]], "GaussianNLLLoss": [[1472, "gaussiannllloss"]], "ConvTranspose2d": [[1450, "convtranspose2d"], [741, "convtranspose2d"]], "FeatureAlphaDropout": [[1463, "featurealphadropout"]], "Hardtanh": [[1477, "hardtanh"]], "Dropout": [[1456, "dropout"]], "AvgPool1d": [[1428, "avgpool1d"]], "CosineEmbeddingLoss": [[1452, "cosineembeddingloss"]], "EmbeddingBag": [[1462, "embeddingbag"], [745, "embeddingbag"]], "ConstantPad2d": [[1444, "constantpad2d"]], "ChannelShuffle": [[1439, "channelshuffle"]], "CircularPad2d": [[1441, "circularpad2d"]], "Bilinear": [[1436, "bilinear"]], "ConvTranspose3d": [[1451, "convtranspose3d"], [742, "convtranspose3d"]], "CosineSimilarity": [[1453, "cosinesimilarity"]], "HingeEmbeddingLoss": [[1478, "hingeembeddingloss"]], "Conv2d": [[1447, "conv2d"], [729, "conv2d"], [738, "conv2d"]], "Hardswish": [[1476, "hardswish"], [749, "hardswish"]], "GroupNorm": [[1473, "groupnorm"], [748, "groupnorm"]], "CTCLoss": [[1438, "ctcloss"]], "BCELoss": [[1431, "bceloss"]], "Embedding": [[1461, "embedding"], [744, "embedding"]], "Conv3d": [[1448, "conv3d"], [730, "conv3d"], [739, "conv3d"]], "Hardsigmoid": [[1475, "hardsigmoid"]], "GELU": [[1468, "gelu"]], "Conv1d": [[1446, "conv1d"], [737, "conv1d"]], "ConvTranspose1d": [[1449, "convtranspose1d"], [740, "convtranspose1d"]], "BCEWithLogitsLoss": [[1432, "bcewithlogitsloss"]], "CircularPad3d": [[1442, "circularpad3d"]], "CrossEntropyLoss": [[1454, "crossentropyloss"]], "CircularPad1d": [[1440, "circularpad1d"]], "ConstantPad3d": [[1445, "constantpad3d"]], "Dropout1d": [[1457, "dropout1d"]], "Dropout2d": [[1458, "dropout2d"]], "Hardshrink": [[1474, "hardshrink"]], "LazyBatchNorm2d": [[1493, "lazybatchnorm2d"]], "InstanceNorm2d": [[1482, "instancenorm2d"], [751, "instancenorm2d"]], "LPPool3d": [[1488, "lppool3d"]], "L1Loss": [[1485, "l1loss"]], "MaxPool3d": [[1514, "maxpool3d"]], "LazyInstanceNorm1d": [[1501, "lazyinstancenorm1d"]], "LogSoftmax": [[1509, "logsoftmax"]], "MaxUnpool3d": [[1517, "maxunpool3d"]], "PReLU": [[1527, "prelu"]], "LazyConvTranspose3d": [[1500, "lazyconvtranspose3d"]], "LogSigmoid": [[1508, "logsigmoid"]], "Mish": [[1518, "mish"]], "LazyInstanceNorm2d": [[1502, "lazyinstancenorm2d"]], "NLLLoss": [[1526, "nllloss"]], "LazyBatchNorm1d": [[1492, "lazybatchnorm1d"]], "LSTMCell": [[1490, "lstmcell"], [762, "lstmcell"]], "MultiLabelMarginLoss": [[1522, "multilabelmarginloss"]], "ParameterDict": [[1529, "parameterdict"]], "LSTM": [[1489, "lstm"], [761, "lstm"], [733, "lstm"]], "MaxUnpool2d": [[1516, "maxunpool2d"]], "InstanceNorm3d": [[1483, "instancenorm3d"], [752, "instancenorm3d"]], "InstanceNorm1d": [[1481, "instancenorm1d"], [750, "instancenorm1d"]], "MaxPool1d": [[1512, "maxpool1d"]], "MultiheadAttention": [[1525, "multiheadattention"], [734, "multiheadattention"]], "MaxUnpool1d": [[1515, "maxunpool1d"]], "MarginRankingLoss": [[1511, "marginrankingloss"]], "KLDivLoss": [[1484, "kldivloss"]], "LPPool1d": [[1486, "lppool1d"]], "HuberLoss": [[1479, "huberloss"]], "LazyConv2d": [[1496, "lazyconv2d"]], "Linear": [[1506, "linear"], [731, "linear"], [732, "linear"], [763, "linear"], [755, "linear"]], "LazyConvTranspose2d": [[1499, "lazyconvtranspose2d"]], "MSELoss": [[1510, "mseloss"]], "LazyConv3d": [[1497, "lazyconv3d"]], "ModuleDict": [[1520, "moduledict"]], "LazyLinear": [[1504, "lazylinear"]], "PairwiseDistance": [[1528, "pairwisedistance"]], "LayerNorm": [[1491, "layernorm"], [753, "layernorm"]], "LazyConv1d": [[1495, "lazyconv1d"]], "MaxPool2d": [[1513, "maxpool2d"]], "ModuleList": [[1521, "modulelist"]], "MultiLabelSoftMarginLoss": [[1523, "multilabelsoftmarginloss"]], "LPPool2d": [[1487, "lppool2d"]], "LazyBatchNorm3d": [[1494, "lazybatchnorm3d"]], "LeakyReLU": [[1505, "leakyrelu"], [754, "leakyrelu"]], "Module": [[1519, "module"]], "LazyInstanceNorm3d": [[1503, "lazyinstancenorm3d"]], "MultiMarginLoss": [[1524, "multimarginloss"]], "LocalResponseNorm": [[1507, "localresponsenorm"]], "LazyConvTranspose1d": [[1498, "lazyconvtranspose1d"]], "torch.minimum": [[1369, "torch-minimum"]], "torch.mps.driver_allocated_memory": [[1376, "torch-mps-driver-allocated-memory"]], "torch.logdet": [[1346, "torch-logdet"]], "torch.load": [[1337, "torch-load"]], "torch.logaddexp": [[1343, "torch-logaddexp"]], "torch.linalg.svdvals": [[1330, "torch-linalg-svdvals"]], "torch.logaddexp2": [[1344, "torch-logaddexp2"]], "torch.mps.current_allocated_memory": [[1374, "torch-mps-current-allocated-memory"]], "torch.linalg.solve_triangular": [[1328, "torch-linalg-solve-triangular"]], "torch.linspace": [[1336, "torch-linspace"]], "torch.mode": [[1371, "torch-mode"]], "torch.logcumsumexp": [[1345, "torch-logcumsumexp"]], "torch.lt": [[1354, "torch-lt"]], "torch.linalg.vector_norm": [[1335, "torch-linalg-vector-norm"]], "torch.logsumexp": [[1353, "torch-logsumexp"]], "torch.logical_and": [[1347, "torch-logical-and"]], "torch.linalg.tensorinv": [[1331, "torch-linalg-tensorinv"]], "torch.matrix_power": [[1362, "torch-matrix-power"]], "torch.log": [[1339, "torch-log"]], "torch.matrix_exp": [[1361, "torch-matrix-exp"]], "torch.mean": [[1365, "torch-mean"]], "torch.logit": [[1351, "torch-logit"]], "torch.logspace": [[1352, "torch-logspace"]], "torch.mm": [[1370, "torch-mm"]], "torch.logical_xor": [[1350, "torch-logical-xor"]], "torch.linalg.vander": [[1333, "torch-linalg-vander"]], "torch.max": [[1363, "torch-max"]], "torch.median": [[1366, "torch-median"]], "torch.log1p": [[1341, "torch-log1p"]], "torch.lu": [[1355, "torch-lu"]], "torch.linalg.tensorsolve": [[1332, "torch-linalg-tensorsolve"]], "torch.min": [[1368, "torch-min"]], "torch.linalg.solve": [[1326, "torch-linalg-solve"]], "torch.lu_solve": [[1356, "torch-lu-solve"]], "torch.logical_not": [[1348, "torch-logical-not"]], "torch.movedim": [[1373, "torch-movedim"]], "torch.maximum": [[1364, "torch-maximum"]], "torch.lobpcg": [[1338, "torch-lobpcg"]], "torch.logical_or": [[1349, "torch-logical-or"]], "torch.log2": [[1342, "torch-log2"]], "torch.linalg.vecdot": [[1334, "torch-linalg-vecdot"]], "torch.log10": [[1340, "torch-log10"]], "torch.linalg.svd": [[1329, "torch-linalg-svd"]], "torch.meshgrid": [[1367, "torch-meshgrid"]], "torch.linalg.solve_ex": [[1327, "torch-linalg-solve-ex"]], "torch.matmul": [[1360, "torch-matmul"]], "torch.masked_select": [[1359, "torch-masked-select"]], "torch.mps.device_count": [[1375, "torch-mps-device-count"]], "torch.moveaxis": [[1372, "torch-moveaxis"]], "torch.manual_seed": [[1358, "torch-manual-seed"]], "torch.lu_unpack": [[1357, "torch-lu-unpack"]], "CPU threading and TorchScript inference": [[2036, "cpu-threading-and-torchscript-inference"]], "Build options": [[2036, "build-options"]], "Runtime API": [[2036, "runtime-api"]], "Tuning the number of threads": [[2036, "tuning-the-number-of-threads"]], "TorchScript Language Reference": [[2008, "torchscript-language-reference"], [2009, "torchscript-language-reference"]], "Types": [[2008, "supported-type"], [2056, "types"]], "Unsupported Typing Constructs": [[2008, "unsupported-typing-constructs"], [2009, "unsupported-typing-constructs"]], "Default Types": [[2008, "default-types"]], "Optional Type Refinement": [[2008, "optional-type-refinement"]], "TorchScript Classes": [[2008, "id2"], [2006, "torchscript-classes"]], "TorchScript Enums": [[2008, "id4"]], "Named Tuples": [[2008, "named-tuples"]], "Iterables": [[2008, "iterables"]], "Expressions": [[2008, "expressions"], [2009, "expressions"]], "Literals": [[2008, "literals"], [2009, "literals"]], "List Construction": [[2008, "list-construction"]], "Tuple Construction": [[2008, "tuple-construction"]], "Dict Construction": [[2008, "dict-construction"]], "Variables": [[2008, "variables"], [2006, "variables"]], "Arithmetic Operators": [[2008, "arithmetic-operators"]], "Comparison Operators": [[2008, "comparison-operators"]], "Logical Operators": [[2008, "logical-operators"]], "Subscripts and Slicing": [[2008, "subscripts-and-slicing"]], "Function Calls": [[2008, "function-calls"]], "Method Calls": [[2008, "method-calls"]], "Ternary Expressions": [[2008, "ternary-expressions"]], "Casts": [[2008, "casts"]], "Accessing Module Parameters": [[2008, "accessing-module-parameters"]], "Statements": [[2008, "statements"]], "Simple Assignments": [[2008, "simple-assignments"]], "Pattern Matching Assignments": [[2008, "pattern-matching-assignments"]], "Print Statements": [[2008, "print-statements"]], "If Statements": [[2008, "if-statements"]], "While Loops": [[2008, "while-loops"]], "For loops with range": [[2008, "for-loops-with-range"]], "For loops over tuples": [[2008, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[2008, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[2008, "break-and-continue"]], "Return": [[2008, "return"]], "Variable Resolution": [[2008, "variable-resolution"]], "Use of Python Values": [[2008, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[2008, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[2008, "python-defined-constants"]], "Module Attributes": [[2008, "module-attributes"]], "torch.xpu.set_device": [[1996, "torch-xpu-set-device"]], "torch.xpu.manual_seed": [[1992, "torch-xpu-manual-seed"]], "TorchScript": [[2006, "torchscript"]], "Creating TorchScript Code": [[2006, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[2006, "mixing-tracing-and-scripting"]], "TorchScript Language": [[2006, "torchscript-language"]], "Built-in Functions and Modules": [[2006, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[2006, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[2006, "python-functions-and-modules"]], "Python Language Reference Comparison": [[2006, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[2006, "disable-jit-for-debugging"]], "Inspecting Code": [[2006, "inspecting-code"]], "Interpreting Graphs": [[2006, "interpreting-graphs"]], "Tracer": [[2006, "tracer"]], "Tracing Edge Cases": [[2006, "tracing-edge-cases"]], "Automatic Trace Checking": [[2006, "automatic-trace-checking"]], "Tracer Warnings": [[2006, "tracer-warnings"]], "Known Issues": [[2006, "known-issues"]], "Appendix": [[2006, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[2006, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[2006, "modules"], [2046, "modules"]], "Attributes": [[2006, "attributes"]], "Constants": [[2006, "constants"]], "Fusion Backends": [[2006, "fusion-backends"]], "References": [[2006, "references"], [50, "references"]], "torch.zeros": [[2002, "torch-zeros"]], "torch.xpu.is_available": [[1990, "torch-xpu-is-available"]], "torch.masked": [[2016, "torch-masked"]], "What is a MaskedTensor?": [[2016, "what-is-a-maskedtensor"]], "Supported Operators": [[2016, "supported-operators"]], "Unary Operators": [[2016, "unary-operators"]], "Binary Operators": [[2016, "binary-operators"]], "Reductions": [[2016, "reductions"]], "View and select functions": [[2016, "view-and-select-functions"]], "torch.xpu.set_rng_state_all": [[1998, "torch-xpu-set-rng-state-all"]], "torch.nn": [[2028, "module-torch.nn"], [2028, "id1"]], "Containers": [[2028, "containers"]], "Convolution Layers": [[2028, "convolution-layers"]], "Pooling layers": [[2028, "pooling-layers"]], "Padding Layers": [[2028, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[2028, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[2028, "non-linear-activations-other"]], "Normalization Layers": [[2028, "normalization-layers"]], "Recurrent Layers": [[2028, "recurrent-layers"]], "Transformer Layers": [[2028, "transformer-layers"]], "Linear Layers": [[2028, "linear-layers"]], "Dropout Layers": [[2028, "dropout-layers"]], "Sparse Layers": [[2028, "sparse-layers"]], "Distance Functions": [[2028, "distance-functions"]], "Loss Functions": [[2028, "loss-functions"]], "Vision Layers": [[2028, "vision-layers"]], "Shuffle Layers": [[2028, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[2028, "module-torch.nn.parallel"]], "Utilities": [[2028, "module-torch.nn.utils"], [2081, "utilities"]], "Quantized Functions": [[2028, "quantized-functions"]], "Lazy Modules Initialization": [[2028, "lazy-modules-initialization"]], "Aliases": [[2028, "aliases"]], "torch.xpu.seed_all": [[1995, "torch-xpu-seed-all"]], "torch.monitor": [[2021, "torch-monitor"]], "TorchScript Unsupported PyTorch Constructs": [[2011, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[2011, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[2011, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[2011, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[2011, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[2011, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[2011, "pytorch-unsupported-modules-and-classes"]], "Autograd mechanics": [[2034, "autograd-mechanics"]], "How autograd encodes the history": [[2034, "how-autograd-encodes-the-history"]], "Saved tensors": [[2034, "saved-tensors"]], "Gradients for non-differentiable functions": [[2034, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[2034, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [2081, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[2034, "setting-requires-grad"]], "Grad Modes": [[2034, "grad-modes"]], "Default Mode (Grad Mode)": [[2034, "default-mode-grad-mode"]], "No-grad Mode": [[2034, "no-grad-mode"]], "Inference Mode": [[2034, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[2034, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[2034, "in-place-operations-with-autograd"]], "In-place correctness checks": [[2034, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[2034, "multithreaded-autograd"]], "Concurrency on CPU": [[2034, "concurrency-on-cpu"]], "Non-determinism": [[2034, "non-determinism"]], "Graph retaining": [[2034, "graph-retaining"]], "Thread Safety on Autograd Node": [[2034, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[2034, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[2034, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[2034, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[2034, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[2034, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[2034, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[2034, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[2034, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[2034, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[2034, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[2034, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[2034, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[2034, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[2034, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[2034, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[2034, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "JIT Utils - torch.utils.jit": [[2012, "module-torch.utils.jit"]], "Terminology": [[2009, "terminology"]], "Type System": [[2009, "id1"]], "TorchScript Types": [[2009, "torchscript-types"]], "Meta Types": [[2009, "meta-types"]], "Any Type": [[2009, "any-type"]], "Operators Supported for Any Type": [[2009, "operators-supported-for-any-type"]], "Design Notes": [[2009, "design-notes"], [2067, "design-notes"]], "Primitive Types": [[2009, "primitive-types"]], "Structural Types": [[2009, "structural-types"]], "Nominal Types": [[2009, "nominal-types"]], "Built-in Class": [[2009, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[2009, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[2009, "custom-class"]], "Enum Type": [[2009, "enum-type"]], "TorchScript Module Class": [[2009, "torchscript-module-class"]], "Module Instance Class": [[2009, "module-instance-class"]], "Type Annotation": [[2009, "type-annotation"]], "When to Annotate Types": [[2009, "when-to-annotate-types"]], "Annotate Function Signature": [[2009, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[2009, "annotate-variables-and-data-attributes"]], "Local Variables": [[2009, "local-variables"]], "Instance Data Attributes": [[2009, "instance-data-attributes"]], "Type Annotation APIs": [[2009, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[2009, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[2009, "type-annotation-appendix"]], "TorchScript Type System Definition": [[2009, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[2009, "arithmetic-conversions"]], "Atoms": [[2009, "atoms"]], "Identifiers": [[2009, "identifiers"]], "Parenthesized Forms": [[2009, "parenthesized-forms"]], "List and Dictionary Displays": [[2009, "list-and-dictionary-displays"]], "Primaries": [[2009, "primaries"]], "Attribute References": [[2009, "attribute-references"]], "Subscriptions": [[2009, "subscriptions"]], "Slicings": [[2009, "slicings"]], "Calls": [[2009, "calls"]], "Power Operator": [[2009, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[2009, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[2009, "binary-arithmetic-operations"]], "Shifting Operations": [[2009, "shifting-operations"]], "Binary Bitwise Operations": [[2009, "binary-bitwise-operations"]], "Comparisons": [[2009, "comparisons"], [2088, "comparisons"]], "Value Comparisons": [[2009, "value-comparisons"]], "Membership Test Operations": [[2009, "membership-test-operations"]], "Identity Comparisons": [[2009, "identity-comparisons"]], "Boolean Operations": [[2009, "boolean-operations"]], "Conditional Expressions": [[2009, "conditional-expressions"]], "Expression Lists": [[2009, "expression-lists"]], "Simple Statements": [[2009, "simple-statements"]], "Expression Statements": [[2009, "expression-statements"]], "Assignment Statements": [[2009, "assignment-statements"]], "Augmented Assignment Statements": [[2009, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[2009, "annotated-assignment-statements"]], "The raise Statement": [[2009, "the-raise-statement"]], "The assert Statement": [[2009, "the-assert-statement"]], "The return Statement": [[2009, "the-return-statement"]], "The del Statement": [[2009, "the-del-statement"]], "The pass Statement": [[2009, "the-pass-statement"]], "The print Statement": [[2009, "the-print-statement"]], "The break Statement": [[2009, "the-break-statement"]], "The continue Statement:": [[2009, "the-continue-statement"]], "Compound Statements": [[2009, "compound-statements"]], "The if Statement": [[2009, "the-if-statement"]], "Basic if/else Statement": [[2009, "basic-if-else-statement"]], "Ternary if/else Statement": [[2009, "ternary-if-else-statement"]], "The while Statement": [[2009, "the-while-statement"]], "The for-in Statement": [[2009, "the-for-in-statement"]], "The with Statement": [[2009, "the-with-statement"]], "The tuple Statement": [[2009, "the-tuple-statement"]], "The getattr Statement": [[2009, "the-getattr-statement"]], "The hasattr Statement": [[2009, "the-hasattr-statement"]], "The zip Statement": [[2009, "the-zip-statement"]], "The enumerate Statement": [[2009, "the-enumerate-statement"]], "Python Values": [[2009, "python-values"]], "Resolution Rules": [[2009, "resolution-rules"]], "Python Built-in Functions Support": [[2009, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[2009, "id5"]], "Python Built-in Values Support": [[2009, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[2009, "id6"]], "torch.* APIs": [[2009, "torch-apis"]], "Remote Procedure Calls": [[2009, "remote-procedure-calls"]], "Asynchronous Execution": [[2009, "asynchronous-execution"]], "Type Annotations": [[2009, "type-annotations"]], "Meta Programming": [[2009, "meta-programming"]], "Type Refinement": [[2009, "type-refinement"]], "torch.nn.attention.bias": [[2030, "module-torch.nn.attention.bias"]], "CausalBias": [[2030, "causalbias"]], "torch.xpu.initial_seed": [[1989, "torch-xpu-initial-seed"]], "torch.nested": [[2027, "module-torch.nested"]], "Construction": [[2027, "construction"], [2072, "construction"]], "size": [[2027, "size"]], "unbind": [[2027, "unbind"]], "Nested tensor constructor and conversion functions": [[2027, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[2027, "supported-operations"], [2072, "supported-operations"]], "torch.xpu.seed": [[1994, "torch-xpu-seed"]], "torch.nn.functional": [[2031, "torch-nn-functional"]], "Convolution functions": [[2031, "convolution-functions"]], "Pooling functions": [[2031, "pooling-functions"]], "Attention Mechanisms": [[2031, "attention-mechanisms"]], "Non-linear activation functions": [[2031, "non-linear-activation-functions"]], "Linear functions": [[2031, "linear-functions"]], "Dropout functions": [[2031, "dropout-functions"]], "Sparse functions": [[2031, "sparse-functions"]], "Distance functions": [[2031, "distance-functions"]], "Loss functions": [[2031, "loss-functions"]], "Vision functions": [[2031, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[2031, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[2031, "data-parallel"]], "torch.mps": [[2022, "module-torch.mps"]], "MPS Profiler": [[2022, "mps-profiler"]], "MPS Event": [[2022, "mps-event"]], "torch._logging": [[2015, "torch-logging"]], "torch.linalg": [[2014, "torch-linalg"]], "Matrix Properties": [[2014, "matrix-properties"]], "Decompositions": [[2014, "decompositions"]], "Solvers": [[2014, "solvers"]], "Inverses": [[2014, "inverses"]], "Matrix Functions": [[2014, "matrix-functions"]], "Matrix Products": [[2014, "matrix-products"]], "Tensor Operations": [[2014, "tensor-operations"]], "Misc": [[2014, "misc"]], "Experimental Functions": [[2014, "experimental-functions"]], "torch.library": [[2013, "module-torch.library"]], "Testing custom ops": [[2013, "testing-custom-ops"]], "Creating new custom ops in Python": [[2013, "creating-new-custom-ops-in-python"]], "Extending custom ops (created from Python or C++)": [[2013, "extending-custom-ops-created-from-python-or-c"]], "Low-level APIs": [[2013, "low-level-apis"]], "Broadcasting semantics": [[2035, "broadcasting-semantics"]], "General semantics": [[2035, "general-semantics"]], "In-place semantics": [[2035, "in-place-semantics"]], "Backwards compatibility": [[2035, "backwards-compatibility"]], "torch.xpu.set_rng_state": [[1997, "torch-xpu-set-rng-state"]], "Distributed Data Parallel": [[2038, "distributed-data-parallel"]], "Example": [[2038, "example"], [2039, "example"]], "Internal Design": [[2038, "internal-design"]], "Implementation": [[2038, "implementation"], [2069, "implementation"]], "ProcessGroup": [[2038, "processgroup"]], "TorchDynamo DDPOptimizer": [[2038, "id1"]], "torch.nn.attention": [[2029, "module-torch.nn.attention"]], "Utils": [[2029, "utils"]], "Submodules": [[2029, "submodules"]], "torch.hub": [[2004, "torch-hub"]], "Publishing models": [[2004, "publishing-models"]], "How to implement an entrypoint?": [[2004, "how-to-implement-an-entrypoint"]], "Important Notice": [[2004, "important-notice"]], "Loading models from Hub": [[2004, "loading-models-from-hub"]], "Running a loaded model:": [[2004, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[2004, "where-are-my-downloaded-models-saved"]], "Caching logic": [[2004, "caching-logic"]], "Known limitations:": [[2004, "known-limitations"]], "torch.xpu.is_initialized": [[1991, "torch-xpu-is-initialized"]], "TorchScript Builtins": [[2007, "torchscript-builtins"]], "Supported Tensor Methods": [[2007, "supported-tensor-methods"]], "Supported PyTorch Functions": [[2007, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[2007, "torchscript-builtin-functions"]], "Python Built-in Functions": [[2007, "python-built-in-functions"]], "math Module": [[2007, "math-module"]], "torch.xpu.set_stream": [[1999, "torch-xpu-set-stream"]], "torch.mtia": [[2023, "torch-mtia"]], "Meta device": [[2017, "meta-device"]], "Idioms for working with meta tensors": [[2017, "idioms-for-working-with-meta-tensors"]], "torch.utils.mobile_optimizer": [[2019, "torch-utils-mobile-optimizer"]], "torch.zeros_like": [[2003, "torch-zeros-like"]], "torch.xpu.stream": [[2000, "torch-xpu-stream"]], "PyTorch documentation": [[2005, "pytorch-documentation"]], "Community": [[2005, null]], "Developer Notes": [[2005, null]], "Language Bindings": [[2005, null]], "Python API": [[2005, null], [2056, "module-torch.onnx"]], "Libraries": [[2005, null]], "Indices and tables": [[2005, "indices-and-tables"]], "Named Tensors": [[2026, "named-tensors"]], "Creating named tensors": [[2026, "creating-named-tensors"]], "Named dimensions": [[2026, "named-dimensions"]], "Name propagation semantics": [[2026, "name-propagation-semantics"]], "match semantics": [[2026, "match-semantics"]], "Basic name inference rules": [[2026, "basic-name-inference-rules"]], "Explicit alignment by names": [[2026, "explicit-alignment-by-names"]], "Manipulating dimensions": [[2026, "manipulating-dimensions"]], "Autograd support": [[2026, "autograd-support"]], "Currently supported operations and subsystems": [[2026, "currently-supported-operations-and-subsystems"]], "Operators": [[2026, "operators"]], "Subsystems": [[2026, "subsystems"]], "Named tensor API reference": [[2026, "named-tensor-api-reference"]], "Miscellaneous Environment Variables": [[2018, "miscellaneous-environment-variables"]], "Multiprocessing package - torch.multiprocessing": [[2024, "module-torch.multiprocessing"]], "Strategy management": [[2024, "strategy-management"]], "Sharing CUDA tensors": [[2024, "sharing-cuda-tensors"]], "Sharing strategies": [[2024, "sharing-strategies"]], "File descriptor - file_descriptor": [[2024, "file-descriptor-file-descriptor"]], "File system - file_system": [[2024, "file-system-file-system"]], "Spawning subprocesses": [[2024, "spawning-subprocesses"]], "CUDA Automatic Mixed Precision examples": [[2033, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[2033, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[2033, "working-with-unscaled-gradients"]], "Gradient clipping": [[2033, "gradient-clipping"]], "Working with Scaled Gradients": [[2033, "working-with-scaled-gradients"]], "Gradient accumulation": [[2033, "gradient-accumulation"]], "Gradient penalty": [[2033, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[2033, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[2033, "working-with-multiple-gpus"]], "DataParallel in a single process": [[2033, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[2033, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[2033, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[2033, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[2033, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[2033, "functions-that-need-a-particular-dtype"]], "torch.nn.init": [[2032, "torch-nn-init"]], "Python Language Reference Coverage": [[2010, "python-language-reference-coverage"]], "Named Tensors operator coverage": [[2025, "named-tensors-operator-coverage"]], "Supported Operations": [[2025, "id1"]], "Keeps input names": [[2025, "keeps-input-names"]], "Removes dimensions": [[2025, "removes-dimensions"]], "Unifies names from inputs": [[2025, "unifies-names-from-inputs"]], "Permutes dimensions": [[2025, "permutes-dimensions"]], "Contracts away dims": [[2025, "contracts-away-dims"]], "Factory functions": [[2025, "factory-functions"]], "out function and in-place variants": [[2025, "out-function-and-in-place-variants"]], "torch.xpu.manual_seed_all": [[1993, "torch-xpu-manual-seed-all"]], "Extending PyTorch": [[2039, "extending-pytorch"]], "Extending torch.autograd": [[2039, "extending-torch-autograd"]], "When to use": [[2039, "when-to-use"]], "When not to use": [[2039, "when-not-to-use"]], "How to use": [[2039, "how-to-use"]], "Combined or separate forward() and setup_context()": [[2039, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[2039, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[2039, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[2039, "extending-torch-nn"]], "Adding a Module": [[2039, "adding-a-module"]], "Extending torch Python API": [[2039, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[2039, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[2039, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[2039, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[2039, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[2039, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[2039, "extending-torch-native-api"]], "Extending all torch API with Modes": [[2039, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[2039, "writing-custom-c-extensions"]], "torch.utils.model_zoo": [[2020, "torch-utils-model-zoo"]], "torch.xpu.synchronize": [[2001, "torch-xpu-synchronize"]], "CUDA semantics": [[2037, "cuda-semantics"]], "TensorFloat-32 (TF32) on Ampere (and later) devices": [[2037, "tensorfloat-32-tf32-on-ampere-and-later-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[2037, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[2037, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[2037, "asynchronous-execution"]], "CUDA streams": [[2037, "cuda-streams"]], "Stream semantics of backward passes": [[2037, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[2037, "bc-note-using-grads-on-the-default-stream"]], "Memory management": [[2037, "memory-management"], [17, "memory-management"], [2044, "memory-management"]], "Optimizing memory usage  with PYTORCH_CUDA_ALLOC_CONF": [[2037, "optimizing-memory-usage-with-pytorch-cuda-alloc-conf"]], "Using custom memory allocators for CUDA": [[2037, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[2037, "cublas-workspaces"]], "cuFFT plan cache": [[2037, "cufft-plan-cache"]], "Just-in-Time Compilation": [[2037, "just-in-time-compilation"]], "Best practices": [[2037, "best-practices"]], "Device-agnostic code": [[2037, "device-agnostic-code"]], "Use pinned memory buffers": [[2037, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[2037, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[2037, "cuda-graphs"]], "Why CUDA Graphs?": [[2037, "why-cuda-graphs"]], "PyTorch API": [[2037, "pytorch-api"]], "Constraints": [[2037, "constraints"], [33, "module-torch.distributions.constraints"]], "Non-constraints": [[2037, "non-constraints"]], "Whole-network capture": [[2037, "whole-network-capture"]], "Partial-network capture": [[2037, "partial-network-capture"]], "Usage with torch.cuda.amp": [[2037, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[2037, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[2037, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[2037, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[2037, "id5"]], "Graph memory management": [[2037, "graph-memory-management"]], "Sharing memory across captures": [[2037, "sharing-memory-across-captures"]], "torch.linalg.matrix_power": [[1319, "torch-linalg-matrix-power"]], "torch.linalg.cholesky": [[1295, "torch-linalg-cholesky"]], "torch.linalg.lu_solve": [[1315, "torch-linalg-lu-solve"]], "torch.linalg.lu_factor_ex": [[1314, "torch-linalg-lu-factor-ex"]], "strict_fusion": [[1280, "strict-fusion"]], "torch.linalg.matmul": [[1316, "torch-linalg-matmul"]], "torch.linalg.cross": [[1298, "torch-linalg-cross"]], "torch.linalg.eigvalsh": [[1304, "torch-linalg-eigvalsh"]], "torch.linalg.ldl_factor_ex": [[1309, "torch-linalg-ldl-factor-ex"]], "torch.linalg.inv_ex": [[1307, "torch-linalg-inv-ex"]], "torch.kaiser_window": [[1285, "torch-kaiser-window"]], "torch.less": [[1292, "torch-less"]], "torch.kron": [[1286, "torch-kron"]], "torch.le": [[1290, "torch-le"]], "torch.linalg.ldl_factor": [[1308, "torch-linalg-ldl-factor"]], "torch.jit.script": [[1277, "torch-jit-script"]], "torch.jit.trace_module": [[1282, "torch-jit-trace-module"]], "torch.lgamma": [[1294, "torch-lgamma"]], "torch.lerp": [[1291, "torch-lerp"]], "torch.linalg.pinv": [[1323, "torch-linalg-pinv"]], "torch.linalg.lu": [[1312, "torch-linalg-lu"]], "torch.linalg.matrix_norm": [[1318, "torch-linalg-matrix-norm"]], "torch.jit.script_if_tracing": [[1278, "torch-jit-script-if-tracing"]], "torch.jit.unused": [[1283, "torch-jit-unused"]], "torch.lcm": [[1288, "torch-lcm"]], "torch.linalg.inv": [[1306, "torch-linalg-inv"]], "torch.linalg.lstsq": [[1311, "torch-linalg-lstsq"]], "torch.jit.wait": [[1284, "torch-jit-wait"]], "torch.linalg.cond": [[1297, "torch-linalg-cond"]], "torch.less_equal": [[1293, "torch-less-equal"]], "torch.linalg.matrix_rank": [[1320, "torch-linalg-matrix-rank"]], "torch.linalg.multi_dot": [[1321, "torch-linalg-multi-dot"]], "torch.linalg.norm": [[1322, "torch-linalg-norm"]], "torch.linalg.det": [[1299, "torch-linalg-det"]], "torch.linalg.eigh": [[1302, "torch-linalg-eigh"]], "torch.linalg.matrix_exp": [[1317, "torch-linalg-matrix-exp"]], "torch.linalg.ldl_solve": [[1310, "torch-linalg-ldl-solve"]], "torch.jit.trace": [[1281, "torch-jit-trace"]], "torch.linalg.eig": [[1301, "torch-linalg-eig"]], "torch.linalg.cholesky_ex": [[1296, "torch-linalg-cholesky-ex"]], "torch.linalg.householder_product": [[1305, "torch-linalg-householder-product"]], "torch.ldexp": [[1289, "torch-ldexp"]], "torch.linalg.diagonal": [[1300, "torch-linalg-diagonal"]], "torch.linalg.lu_factor": [[1313, "torch-linalg-lu-factor"]], "torch.linalg.slogdet": [[1325, "torch-linalg-slogdet"]], "torch.jit.set_fusion_strategy": [[1279, "torch-jit-set-fusion-strategy"]], "torch.jit.save": [[1276, "torch-jit-save"]], "torch.jit.optimize_for_inference": [[1275, "torch-jit-optimize-for-inference"]], "torch.linalg.eigvals": [[1303, "torch-linalg-eigvals"]], "torch.linalg.qr": [[1324, "torch-linalg-qr"]], "torch.kthvalue": [[1287, "torch-kthvalue"]], "torch.is_complex": [[1244, "torch-is-complex"]], "torch.histogramdd": [[1228, "torch-histogramdd"]], "torch.isfinite": [[1255, "torch-isfinite"]], "ScriptFunction": [[1264, "scriptfunction"]], "torch.jit.ignore": [[1270, "torch-jit-ignore"]], "torch.jit.fork": [[1268, "torch-jit-fork"]], "torch.index_copy": [[1238, "torch-index-copy"]], "torch.inverse": [[1243, "torch-inverse"]], "torch.hsplit": [[1229, "torch-hsplit"]], "torch.is_floating_point": [[1247, "torch-is-floating-point"]], "ScriptModule": [[1265, "scriptmodule"]], "torch.jit.interface": [[1271, "torch-jit-interface"]], "torch.isclose": [[1254, "torch-isclose"]], "torch.is_storage": [[1251, "torch-is-storage"]], "torch.hypot": [[1232, "torch-hypot"]], "torch.isreal": [[1261, "torch-isreal"]], "torch.jit.annotate": [[1266, "torch-jit-annotate"]], "torch.isnan": [[1258, "torch-isnan"]], "torch.isposinf": [[1260, "torch-isposinf"]], "torch.jit.load": [[1273, "torch-jit-load"]], "torch.is_conj": [[1245, "torch-is-conj"]], "torch.is_grad_enabled": [[1248, "torch-is-grad-enabled"]], "torch.i0": [[1233, "torch-i0"]], "torch.jit.onednn_fusion_enabled": [[1274, "torch-jit-onednn-fusion-enabled"]], "torch.initial_seed": [[1241, "torch-initial-seed"]], "torch.hstack": [[1231, "torch-hstack"]], "Attribute": [[1263, "attribute"]], "torch.inner": [[1242, "torch-inner"]], "torch.isin": [[1256, "torch-isin"]], "torch.is_warn_always_enabled": [[1253, "torch-is-warn-always-enabled"]], "torch.imag": [[1236, "torch-imag"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1246, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.igamma": [[1234, "torch-igamma"]], "torch.heaviside": [[1225, "torch-heaviside"]], "torch.jit.isinstance": [[1272, "torch-jit-isinstance"]], "torch.jit.freeze": [[1269, "torch-jit-freeze"]], "torch.is_nonzero": [[1250, "torch-is-nonzero"]], "torch.index_add": [[1237, "torch-index-add"]], "torch.index_reduce": [[1239, "torch-index-reduce"]], "torch.isinf": [[1257, "torch-isinf"]], "torch.histc": [[1226, "torch-histc"]], "torch.hspmm": [[1230, "torch-hspmm"]], "torch.is_inference_mode_enabled": [[1249, "torch-is-inference-mode-enabled"]], "torch.igammac": [[1235, "torch-igammac"]], "torch.hann_window": [[1224, "torch-hann-window"]], "torch.is_tensor": [[1252, "torch-is-tensor"]], "torch.histogram": [[1227, "torch-histogram"]], "torch.isneginf": [[1259, "torch-isneginf"]], "torch.istft": [[1262, "torch-istft"]], "torch.jit.enable_onednn_fusion": [[1267, "torch-jit-enable-onednn-fusion"]], "torch.index_select": [[1240, "torch-index-select"]], "CallMethodKey": [[1175, "callmethodkey"]], "SymbolicContext": [[1187, "symboliccontext"]], "torch.geqrf": [[1209, "torch-geqrf"]], "torch.fx.experimental.symbolic_shapes.lru_cache": [[1200, "torch-fx-experimental-symbolic-shapes-lru-cache"]], "torch.fx.experimental.symbolic_shapes.statically_known_true": [[1204, "torch-fx-experimental-symbolic-shapes-statically-known-true"]], "torch.gcd": [[1207, "torch-gcd"]], "torch.greater": [[1220, "torch-greater"]], "torch.get_default_dtype": [[1212, "torch-get-default-dtype"]], "torch.get_default_device": [[1211, "torch-get-default-device"]], "torch.fx.experimental.symbolic_shapes.parallel_or": [[1202, "torch-fx-experimental-symbolic-shapes-parallel-or"]], "torch.ge": [[1208, "torch-ge"]], "ConvertIntKey": [[1176, "convertintkey"]], "torch.fx.experimental.symbolic_shapes.definitely_false": [[1193, "torch-fx-experimental-symbolic-shapes-definitely-false"]], "torch.fx.experimental.symbolic_shapes.check_consistent": [[1189, "torch-fx-experimental-symbolic-shapes-check-consistent"]], "torch.func.vjp": [[1173, "torch-func-vjp"]], "torch.fx.experimental.symbolic_shapes.is_concrete_int": [[1199, "torch-fx-experimental-symbolic-shapes-is-concrete-int"]], "DimConstraints": [[1177, "dimconstraints"]], "ShapeEnvSettings": [[1182, "shapeenvsettings"]], "torch.get_rng_state": [[1218, "torch-get-rng-state"]], "torch.fx.experimental.symbolic_shapes.constrain_unify": [[1192, "torch-fx-experimental-symbolic-shapes-constrain-unify"]], "torch.fx.experimental.symbolic_shapes.hint_int": [[1197, "torch-fx-experimental-symbolic-shapes-hint-int"]], "torch.gradient": [[1219, "torch-gradient"]], "torch.fx.experimental.symbolic_shapes.definitely_true": [[1194, "torch-fx-experimental-symbolic-shapes-definitely-true"]], "torch.hamming_window": [[1223, "torch-hamming-window"]], "torch.gather": [[1206, "torch-gather"]], "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr": [[1188, "torch-fx-experimental-symbolic-shapes-canonicalize-bool-expr"]], "StatelessSymbolicContext": [[1184, "statelesssymboliccontext"]], "SubclassSymbolicContext": [[1186, "subclasssymboliccontext"]], "StatefulSymbolicContext": [[1183, "statefulsymboliccontext"]], "torch.fx.experimental.symbolic_shapes.is_concrete_bool": [[1198, "torch-fx-experimental-symbolic-shapes-is-concrete-bool"]], "torch.gt": [[1222, "torch-gt"]], "torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings": [[1190, "torch-fx-experimental-symbolic-shapes-compute-unbacked-bindings"]], "StrictMinMaxConstraint": [[1185, "strictminmaxconstraint"]], "torch.fx.experimental.symbolic_shapes.sym_eq": [[1205, "torch-fx-experimental-symbolic-shapes-sym-eq"]], "torch.get_num_threads": [[1217, "torch-get-num-threads"]], "torch.get_device_module": [[1214, "torch-get-device-module"]], "torch.func.vmap": [[1174, "torch-func-vmap"]], "torch.fx.experimental.symbolic_shapes.has_free_symbols": [[1196, "torch-fx-experimental-symbolic-shapes-has-free-symbols"]], "torch.fx.experimental.symbolic_shapes.guard_size_oblivious": [[1195, "torch-fx-experimental-symbolic-shapes-guard-size-oblivious"]], "torch.get_float32_matmul_precision": [[1215, "torch-get-float32-matmul-precision"]], "torch.fx.experimental.symbolic_shapes.rebind_unbacked": [[1203, "torch-fx-experimental-symbolic-shapes-rebind-unbacked"]], "torch.ger": [[1210, "torch-ger"]], "ShapeEnv": [[1181, "shapeenv"]], "torch.get_deterministic_debug_mode": [[1213, "torch-get-deterministic-debug-mode"]], "torch.fx.experimental.symbolic_shapes.constrain_range": [[1191, "torch-fx-experimental-symbolic-shapes-constrain-range"]], "torch.greater_equal": [[1221, "torch-greater-equal"]], "RelaxedUnspecConstraint": [[1180, "relaxedunspecconstraint"]], "EqualityConstraint": [[1179, "equalityconstraint"]], "torch.fx.experimental.symbolic_shapes.parallel_and": [[1201, "torch-fx-experimental-symbolic-shapes-parallel-and"]], "torch.get_num_interop_threads": [[1216, "torch-get-num-interop-threads"]], "DimDynamic": [[1178, "dimdynamic"]], "torch.func.hessian": [[1166, "torch-func-hessian"]], "torch.fft.ifftshift": [[1132, "torch-fft-ifftshift"]], "torch.frac": [[1154, "torch-frac"]], "torch.fft.ihfft": [[1133, "torch-fft-ihfft"]], "torch.func.functional_call": [[1162, "torch-func-functional-call"]], "torch.fmax": [[1151, "torch-fmax"]], "torch.fft.hfftn": [[1128, "torch-fft-hfftn"]], "torch.frombuffer": [[1159, "torch-frombuffer"]], "torch.flipud": [[1147, "torch-flipud"]], "torch.fliplr": [[1146, "torch-fliplr"]], "torch.float_power": [[1148, "torch-float-power"]], "torch.fft.fftfreq": [[1123, "torch-fft-fftfreq"]], "torch.func.functionalize": [[1163, "torch-func-functionalize"]], "torch.func.grad": [[1164, "torch-func-grad"]], "torch.func.jvp": [[1169, "torch-func-jvp"]], "torch.full_like": [[1161, "torch-full-like"]], "torch.full": [[1160, "torch-full"]], "torch.func.stack_module_state": [[1172, "torch-func-stack-module-state"]], "torch.fft.irfft2": [[1137, "torch-fft-irfft2"]], "torch.fft.ifft2": [[1130, "torch-fft-ifft2"]], "torch.flip": [[1145, "torch-flip"]], "torch.fmod": [[1153, "torch-fmod"]], "torch.fix": [[1143, "torch-fix"]], "torch.fft.ifft": [[1129, "torch-fft-ifft"]], "torch.func.linearize": [[1170, "torch-func-linearize"]], "torch.floor": [[1149, "torch-floor"]], "torch.fmin": [[1152, "torch-fmin"]], "torch.fft.irfftn": [[1138, "torch-fft-irfftn"]], "torch.fft.irfft": [[1136, "torch-fft-irfft"]], "torch.fft.ihfft2": [[1134, "torch-fft-ihfft2"]], "torch.fft.ihfftn": [[1135, "torch-fft-ihfftn"]], "torch.fft.rfft2": [[1140, "torch-fft-rfft2"]], "torch.fft.hfft": [[1126, "torch-fft-hfft"]], "torch.func.jacfwd": [[1167, "torch-func-jacfwd"]], "torch.fft.fft2": [[1122, "torch-fft-fft2"]], "torch.fft.rfftfreq": [[1141, "torch-fft-rfftfreq"]], "torch.func.jacrev": [[1168, "torch-func-jacrev"]], "torch.func.replace_all_batch_norm_modules_": [[1171, "torch-func-replace-all-batch-norm-modules"]], "torch.from_numpy": [[1158, "torch-from-numpy"]], "torch.func.grad_and_value": [[1165, "torch-func-grad-and-value"]], "torch.fft.rfft": [[1139, "torch-fft-rfft"]], "torch.fft.fftn": [[1124, "torch-fft-fftn"]], "torch.floor_divide": [[1150, "torch-floor-divide"]], "torch.fft.fftshift": [[1125, "torch-fft-fftshift"]], "torch.from_file": [[1157, "torch-from-file"]], "torch.fft.ifftn": [[1131, "torch-fft-ifftn"]], "torch.fft.hfft2": [[1127, "torch-fft-hfft2"]], "torch.frexp": [[1155, "torch-frexp"]], "torch.fft.rfftn": [[1142, "torch-fft-rfftn"]], "torch.from_dlpack": [[1156, "torch-from-dlpack"]], "torch.flatten": [[1144, "torch-flatten"]], "torch.cuda.set_per_process_memory_fraction": [[1075, "torch-cuda-set-per-process-memory-fraction"]], "torch.dot": [[1102, "torch-dot"]], "torch.dsplit": [[1103, "torch-dsplit"]], "torch.cuda.reset_peak_memory_stats": [[1071, "torch-cuda-reset-peak-memory-stats"]], "torch.cummin": [[1085, "torch-cummin"]], "torch.erf": [[1112, "torch-erf"]], "torch.diagonal_scatter": [[1096, "torch-diagonal-scatter"]], "torch.diff": [[1097, "torch-diff"]], "torch.cuda.set_rng_state_all": [[1077, "torch-cuda-set-rng-state-all"]], "torch.exp2": [[1116, "torch-exp2"]], "torch.cuda.utilization": [[1083, "torch-cuda-utilization"]], "enable_grad": [[1109, "enable-grad"]], "torch.cuda.stream": [[1080, "torch-cuda-stream"]], "torch.cuda.seed": [[1072, "torch-cuda-seed"]], "torch.cuda.temperature": [[1082, "torch-cuda-temperature"]], "torch.erfc": [[1113, "torch-erfc"]], "torch.empty_like": [[1107, "torch-empty-like"]], "torch.det": [[1091, "torch-det"]], "torch.fake_quantize_per_channel_affine": [[1119, "torch-fake-quantize-per-channel-affine"]], "torch.erfinv": [[1114, "torch-erfinv"]], "torch.cuda.set_sync_debug_mode": [[1079, "torch-cuda-set-sync-debug-mode"]], "torch.einsum": [[1105, "torch-einsum"]], "torch.cuda.seed_all": [[1073, "torch-cuda-seed-all"]], "torch.diagonal": [[1095, "torch-diagonal"]], "torch.equal": [[1111, "torch-equal"]], "torch.diag_embed": [[1093, "torch-diag-embed"]], "torch.fft.fft": [[1121, "torch-fft-fft"]], "torch.cumsum": [[1087, "torch-cumsum"]], "torch.exp": [[1115, "torch-exp"]], "torch.cumulative_trapezoid": [[1088, "torch-cumulative-trapezoid"]], "torch.dequantize": [[1090, "torch-dequantize"]], "torch.cuda.set_device": [[1074, "torch-cuda-set-device"]], "torch.dist": [[1099, "torch-dist"]], "torch.fake_quantize_per_tensor_affine": [[1120, "torch-fake-quantize-per-tensor-affine"]], "torch.cumprod": [[1086, "torch-cumprod"]], "torch.empty": [[1106, "torch-empty"]], "torch.deg2rad": [[1089, "torch-deg2rad"]], "torch.div": [[1100, "torch-div"]], "torch.cuda.synchronize": [[1081, "torch-cuda-synchronize"]], "torch.diagflat": [[1094, "torch-diagflat"]], "torch.eq": [[1110, "torch-eq"]], "torch.cuda.set_stream": [[1078, "torch-cuda-set-stream"]], "torch.divide": [[1101, "torch-divide"]], "torch.cuda.set_rng_state": [[1076, "torch-cuda-set-rng-state"]], "torch.cummax": [[1084, "torch-cummax"]], "torch.digamma": [[1098, "torch-digamma"]], "torch.empty_strided": [[1108, "torch-empty-strided"]], "torch.diag": [[1092, "torch-diag"]], "torch.expm1": [[1117, "torch-expm1"]], "torch.eye": [[1118, "torch-eye"]], "torch.dstack": [[1104, "torch-dstack"]], "torch.cuda.current_stream": [[1024, "torch-cuda-current-stream"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1048, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.manual_seed": [[1051, "torch-cuda-manual-seed"]], "torch.cuda.memory_stats": [[1061, "torch-cuda-memory-stats"]], "torch.cuda.reset_max_memory_cached": [[1070, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.current_device": [[1023, "torch-cuda-current-device"]], "torch.cuda.memory_allocated": [[1057, "torch-cuda-memory-allocated"]], "torch.cuda.is_initialized": [[1046, "torch-cuda-is-initialized"]], "torch.cuda.init": [[1041, "torch-cuda-init"]], "torch.cuda.list_gpu_processes": [[1049, "torch-cuda-list-gpu-processes"]], "torch.cuda.max_memory_cached": [[1054, "torch-cuda-max-memory-cached"]], "torch.cuda.power_draw": [[1068, "torch-cuda-power-draw"]], "torch.cuda.get_allocator_backend": [[1030, "torch-cuda-get-allocator-backend"]], "torch.cuda.graph_pool_handle": [[1040, "torch-cuda-graph-pool-handle"]], "torch.cuda.ipc_collect": [[1043, "torch-cuda-ipc-collect"]], "torch.cuda.memory_usage": [[1063, "torch-cuda-memory-usage"]], "torch.cuda.nvtx.range": [[1065, "torch-cuda-nvtx-range"]], "torch.cuda.nvtx.range_pop": [[1066, "torch-cuda-nvtx-range-pop"]], "torch.cuda.mem_get_info": [[1056, "torch-cuda-mem-get-info"]], "torch.cuda.get_sync_debug_mode": [[1038, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.get_rng_state_all": [[1037, "torch-cuda-get-rng-state-all"]], "torch.cuda.default_stream": [[1025, "torch-cuda-default-stream"]], "torch.cuda.manual_seed_all": [[1052, "torch-cuda-manual-seed-all"]], "torch.cuda.get_device_capability": [[1032, "torch-cuda-get-device-capability"]], "torch.cuda.initial_seed": [[1042, "torch-cuda-initial-seed"]], "torch.cuda.comm.reduce_add": [[1020, "torch-cuda-comm-reduce-add"]], "torch.cuda.make_graphed_callables": [[1050, "torch-cuda-make-graphed-callables"]], "torch.cuda.get_device_name": [[1033, "torch-cuda-get-device-name"]], "torch.cuda.memory_cached": [[1058, "torch-cuda-memory-cached"]], "torch.cuda.memory_summary": [[1062, "torch-cuda-memory-summary"]], "torch.cuda.jiterator._create_jit_fn": [[1047, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.get_device_properties": [[1034, "torch-cuda-get-device-properties"]], "torch.cuda.memory_reserved": [[1059, "torch-cuda-memory-reserved"]], "torch.cuda.memory_snapshot": [[1060, "torch-cuda-memory-snapshot"]], "torch.cuda.current_blas_handle": [[1022, "torch-cuda-current-blas-handle"]], "torch.cuda.is_current_stream_capturing": [[1045, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.device_count": [[1027, "torch-cuda-device-count"]], "torch.cuda.is_available": [[1044, "torch-cuda-is-available"]], "torch.cuda.nvtx.mark": [[1064, "torch-cuda-nvtx-mark"]], "torch.cuda.get_rng_state": [[1036, "torch-cuda-get-rng-state"]], "torch.cuda.max_memory_allocated": [[1053, "torch-cuda-max-memory-allocated"]], "torch.cuda.max_memory_reserved": [[1055, "torch-cuda-max-memory-reserved"]], "torch.cuda.get_arch_list": [[1031, "torch-cuda-get-arch-list"]], "torch.cuda.nvtx.range_push": [[1067, "torch-cuda-nvtx-range-push"]], "torch.cuda.comm.scatter": [[1021, "torch-cuda-comm-scatter"]], "graph": [[1039, "graph"]], "torch.cuda.get_gencode_flags": [[1035, "torch-cuda-get-gencode-flags"]], "torch.cuda.reset_max_memory_allocated": [[1069, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.empty_cache": [[1029, "torch-cuda-empty-cache"]], "torch.corrcoef": [[990, "torch-corrcoef"]], "torch.clone": [[969, "torch-clone"]], "torch.compiler.list_backends": [[981, "torch-compiler-list-backends"]], "torch.conj": [[987, "torch-conj"]], "torch.compiler.reset": [[982, "torch-compiler-reset"]], "torch.cpu.is_available": [[1000, "torch-cpu-is-available"]], "torch.cuda.comm.broadcast_coalesced": [[1018, "torch-cuda-comm-broadcast-coalesced"]], "torch.concat": [[984, "torch-concat"]], "torch.cuda.comm.broadcast": [[1017, "torch-cuda-comm-broadcast"]], "torch.compiler.compile": [[976, "torch-compiler-compile"]], "torch.cpu.current_device": [[997, "torch-cpu-current-device"]], "torch.cuda.comm.gather": [[1019, "torch-cuda-comm-gather"]], "torch.cov": [[994, "torch-cov"]], "torch.cuda.caching_allocator_alloc": [[1012, "torch-cuda-caching-allocator-alloc"]], "torch.cos": [[991, "torch-cos"]], "torch.cross": [[1004, "torch-cross"]], "torch.cpu.synchronize": [[1003, "torch-cpu-synchronize"]], "torch.cpu.current_stream": [[998, "torch-cpu-current-stream"]], "torch.cuda.can_device_access_peer": [[1014, "torch-cuda-can-device-access-peer"]], "torch.column_stack": [[970, "torch-column-stack"]], "torch.cuda.caching_allocator_delete": [[1013, "torch-cuda-caching-allocator-delete"]], "torch.compiler.assume_constant_result": [[975, "torch-compiler-assume-constant-result"]], "torch.cuda.change_current_allocator": [[1015, "torch-cuda-change-current-allocator"]], "torch.cpu.device_count": [[999, "torch-cpu-device-count"]], "torch.compiler.is_compiling": [[979, "torch-compiler-is-compiling"]], "torch.compiler.cudagraph_mark_step_begin": [[977, "torch-compiler-cudagraph-mark-step-begin"]], "torch.complex": [[983, "torch-complex"]], "torch.cosh": [[992, "torch-cosh"]], "torch.cpu.stream": [[1002, "torch-cpu-stream"]], "torch.cuda.clock_rate": [[1016, "torch-cuda-clock-rate"]], "torch.concatenate": [[985, "torch-concatenate"]], "CUDAGraph": [[1005, "cudagraph"]], "CUDAPluggableAllocator": [[1006, "cudapluggableallocator"]], "torch.compile": [[972, "torch-compile"]], "torch.compiler.is_dynamo_compiling": [[980, "torch-compiler-is-dynamo-compiling"]], "torch.conj_physical": [[988, "torch-conj-physical"]], "torch.count_nonzero": [[993, "torch-count-nonzero"]], "torch.cuda.OutOfMemoryError": [[1009, "torch-cuda-outofmemoryerror"]], "torch.cpu.set_device": [[1001, "torch-cpu-set-device"]], "torch.compiled_with_cxx11_abi": [[973, "torch-compiled-with-cxx11-abi"]], "torch.combinations": [[971, "torch-combinations"]], "torch.copysign": [[989, "torch-copysign"]], "ExternalStream": [[1008, "externalstream"]], "torch.can_cast": [[957, "torch-can-cast"]], "StringTable": [[939, "stringtable"]], "torch.autograd.graph.Node.name": [[922, "torch-autograd-graph-node-name"]], "torch.cholesky": [[963, "torch-cholesky"]], "torch.autograd.gradcheck.gradcheck": [[919, "torch-autograd-gradcheck-gradcheck"]], "EnforceUnique": [[927, "enforceunique"]], "Kernel": [[937, "kernel"]], "torch.autograd.gradcheck.GradcheckError": [[918, "torch-autograd-gradcheck-gradcheckerror"]], "torch.bitwise_left_shift": [[945, "torch-bitwise-left-shift"]], "torch.autograd.graph.Node.register_prehook": [[925, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.gradcheck.gradgradcheck": [[920, "torch-autograd-gradcheck-gradgradcheck"]], "torch.blackman_window": [[950, "torch-blackman-window"]], "torch.bincount": [[943, "torch-bincount"]], "torch.clamp": [[967, "torch-clamp"]], "torch.autograd.graph.Node.next_functions": [[923, "torch-autograd-graph-node-next-functions"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[933, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.autograd.profiler.profile.key_averages": [[932, "torch-autograd-profiler-profile-key-averages"]], "torch.autograd.profiler.load_nvprof": [[929, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.profiler.parse_nvprof_trace": [[930, "torch-autograd-profiler-parse-nvprof-trace"]], "MemRecordsAcc": [[938, "memrecordsacc"]], "torch.autograd.profiler.profile.total_average": [[934, "torch-autograd-profiler-profile-total-average"]], "torch.autograd.graph.Node.register_hook": [[924, "torch-autograd-graph-node-register-hook"]], "torch.chain_matmul": [[962, "torch-chain-matmul"]], "torch.ceil": [[961, "torch-ceil"]], "torch.bitwise_not": [[946, "torch-bitwise-not"]], "torch.clip": [[968, "torch-clip"]], "torch.bitwise_xor": [[949, "torch-bitwise-xor"]], "torch.chunk": [[966, "torch-chunk"]], "torch.autograd.graph.Node.metadata": [[921, "torch-autograd-graph-node-metadata"]], "torch.broadcast_tensors": [[954, "torch-broadcast-tensors"]], "torch.cdist": [[960, "torch-cdist"]], "torch.bitwise_and": [[944, "torch-bitwise-and"]], "record_function": [[935, "record-function"]], "torch.autograd.profiler.profile.export_chrome_trace": [[931, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.bitwise_right_shift": [[948, "torch-bitwise-right-shift"]], "torch.broadcast_shapes": [[953, "torch-broadcast-shapes"]], "torch.bernoulli": [[942, "torch-bernoulli"]], "torch.bartlett_window": [[941, "torch-bartlett-window"]], "torch.block_diag": [[951, "torch-block-diag"]], "torch.broadcast_to": [[955, "torch-broadcast-to"]], "KinetoStepTracker": [[928, "kinetosteptracker"]], "torch.baddbmm": [[940, "torch-baddbmm"]], "torch.bmm": [[952, "torch-bmm"]], "torch.cartesian_prod": [[958, "torch-cartesian-prod"]], "torch.cholesky_solve": [[965, "torch-cholesky-solve"]], "torch.autograd.graph.increment_version": [[926, "torch-autograd-graph-increment-version"]], "torch.cat": [[959, "torch-cat"]], "torch.bitwise_or": [[947, "torch-bitwise-or"]], "torch.cholesky_inverse": [[964, "torch-cholesky-inverse"]], "Interval": [[936, "interval"]], "torch.bucketize": [[956, "torch-bucketize"]], "Train script": [[48, "train-script"]], "torch.__config__": [[13, "module-torch.__config__"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [2059, "tutorials"], [2060, "tutorials"], [2067, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "torch.export IR Specification": [[50, "torch-export-ir-specification"]], "Assumptions": [[50, "assumptions"], [2069, "assumptions"]], "What is Export IR": [[50, "what-is-export-ir"]], "ExportedProgram": [[50, "exportedprogram"]], "Graph": [[50, "graph"]], "Node": [[50, "node"]], "call_function": [[50, "call-function"]], "Metadata": [[50, "metadata"]], "placeholder": [[50, "placeholder"]], "output": [[50, "output"]], "get_attr": [[50, "get-attr"]], "SymInt": [[50, "symint"]], "FakeTensor": [[50, "faketensor"]], "Pytree-able Types": [[50, "pytree-able-types"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[32, "tensor-parallelism-torch-distributed-tensor-parallel"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[29, "distributed-checkpoint-torch-distributed-checkpoint"]], "torch.cpu": [[16, "module-torch.cpu"]], "torch.cuda": [[17, "module-torch.cuda"]], "Communication collectives": [[17, "communication-collectives"]], "Graphs (beta)": [[17, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[17, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[17, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[17, "stream-sanitizer-prototype"]], "Distributed Optimizers": [[31, "distributed-optimizers"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Serialization": [[11, "serialization"], [49, "serialization"], [2081, "serialization"]], "Autograd": [[11, "autograd"]], "Optimizers": [[11, "optimizers"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "Generic Join Context Manager": [[28, "generic-join-context-manager"]], "Control Flow - Cond": [[12, "control-flow-cond"]], "Examples": [[12, "examples"], [39, "examples"], [2089, "examples"]], "Invariants of torch.ops.higher_order.cond": [[12, "invariants-of-torch-ops-higher-order-cond"]], "Error Propagation": [[37, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[37, "methods-and-classes"]], "Rendezvous": [[44, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[44, "registry"]], "Handler": [[44, "handler"]], "Exceptions": [[44, "exceptions"]], "Implementations": [[44, "implementations"], [35, "implementations"]], "Dynamic Rendezvous": [[44, "dynamic-rendezvous"]], "C10d Backend": [[44, "c10d-backend"]], "Etcd Backend": [[44, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[44, "etcd-rendezvous-legacy"]], "Etcd Store": [[44, "etcd-store"]], "Etcd Server": [[44, "etcd-server"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Core Maintainers": [[9, "core-maintainers"], [10, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[9, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "DDP Communication Hooks": [[23, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[23, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[23, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[23, "default-communication-hooks"]], "PowerSGD Communication Hook": [[23, "powersgd-communication-hook"]], "PowerSGD State": [[23, "powersgd-state"]], "PowerSGD Hooks": [[23, "powersgd-hooks"]], "Debugging Communication Hooks": [[23, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[23, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[23, "acknowledgements"], [2060, "acknowledgements"]], "CUDA Environment Variables": [[19, "cuda-environment-variables"]], "Metrics": [[41, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[41, "metric-handlers"]], "Methods": [[41, "methods"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "Subprocess Handling": [[46, "module-torch.distributed.elastic.multiprocessing.subprocess_handler"]], "Retrieve SubprocessHandler": [[46, "retrieve-subprocesshandler"]], "SubprocessHandler": [[46, "subprocesshandler"]], "C++": [[15, "c"]], "TorchScript C++ API": [[15, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[15, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[15, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[15, "authoring-models-in-c"]], "Packaging for C++": [[15, "packaging-for-c"]], "Probability distributions - torch.distributions": [[33, "module-torch.distributions"]], "Score function": [[33, "score-function"]], "Pathwise derivative": [[33, "pathwise-derivative"]], "Distribution": [[33, "distribution"]], "ExponentialFamily": [[33, "exponentialfamily"]], "Bernoulli": [[33, "bernoulli"]], "Beta": [[33, "beta"]], "Binomial": [[33, "binomial"]], "Categorical": [[33, "categorical"]], "Cauchy": [[33, "cauchy"]], "Chi2": [[33, "chi2"]], "ContinuousBernoulli": [[33, "continuousbernoulli"]], "Dirichlet": [[33, "dirichlet"]], "Exponential": [[33, "exponential"]], "FisherSnedecor": [[33, "fishersnedecor"]], "Gamma": [[33, "gamma"]], "Geometric": [[33, "geometric"]], "Gumbel": [[33, "gumbel"]], "HalfCauchy": [[33, "halfcauchy"]], "HalfNormal": [[33, "halfnormal"]], "Independent": [[33, "independent"]], "InverseGamma": [[33, "inversegamma"]], "Kumaraswamy": [[33, "kumaraswamy"]], "LKJCholesky": [[33, "lkjcholesky"]], "Laplace": [[33, "laplace"]], "LogNormal": [[33, "lognormal"]], "LowRankMultivariateNormal": [[33, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[33, "mixturesamefamily"]], "Multinomial": [[33, "multinomial"]], "MultivariateNormal": [[33, "multivariatenormal"]], "NegativeBinomial": [[33, "negativebinomial"]], "Normal": [[33, "normal"]], "OneHotCategorical": [[33, "onehotcategorical"]], "Pareto": [[33, "pareto"]], "Poisson": [[33, "poisson"]], "RelaxedBernoulli": [[33, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[33, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[33, "relaxedonehotcategorical"]], "StudentT": [[33, "studentt"]], "TransformedDistribution": [[33, "transformeddistribution"]], "Uniform": [[33, "uniform"]], "VonMises": [[33, "vonmises"]], "Weibull": [[33, "weibull"]], "Wishart": [[33, "wishart"]], "KL Divergence": [[33, "module-torch.distributions.kl"]], "Transforms": [[33, "module-torch.distributions.transforms"]], "Constraint Registry": [[33, "module-torch.distributions.constraint_registry"]], "CUDA Stream Sanitizer": [[18, "cuda-stream-sanitizer"]], "Usage": [[18, "usage"], [30, null], [45, "usage"]], "Quickstart": [[43, "quickstart"]], "torch.utils.cpp_extension": [[14, "torch-utils-cpp-extension"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Custom Function utilities": [[1, "custom-function-utilities"]], "Numerical gradient checking": [[1, "module-torch.autograd.gradcheck"]], "Profiler": [[1, "profiler"]], "Debugging and anomaly detection": [[1, "debugging-and-anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "torch.utils.deterministic": [[26, "module-torch.utils.deterministic"]], "Multiprocessing": [[42, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[42, "starting-multiple-workers"]], "Process Context": [[42, "process-context"]], "TorchElastic Kubernetes": [[40, "torchelastic-kubernetes"]], "torch.utils.data": [[22, "module-torch.utils.data"]], "Dataset Types": [[22, "dataset-types"]], "Map-style datasets": [[22, "map-style-datasets"]], "Iterable-style datasets": [[22, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[22, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[22, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[22, "automatic-batching-default"]], "Disable automatic batching": [[22, "disable-automatic-batching"]], "Working with collate_fn": [[22, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[22, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[22, "single-process-data-loading-default"]], "Multi-process data loading": [[22, "multi-process-data-loading"]], "Platform-specific behaviors": [[22, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[22, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[22, "memory-pinning"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Expiration Timers": [[47, "module-torch.distributed.elastic.timer"]], "Client Methods": [[47, "client-methods"]], "Server/Client Implementations": [[47, "server-client-implementations"]], "Writing a custom timer server/client": [[47, "writing-a-custom-timer-server-client"]], "torch.export": [[49, "torch-export"]], "Existing frameworks": [[49, "existing-frameworks"]], "Exporting a PyTorch Model": [[49, "exporting-a-pytorch-model"]], "An Example": [[49, "an-example"]], "Non-Strict Export": [[49, "non-strict-export"]], "Expressing Dynamism": [[49, "expressing-dynamism"]], "Specializations": [[49, "specializations"]], "Input Tensor Shapes": [[49, "input-tensor-shapes"]], "Python Primitives": [[49, "python-primitives"]], "Python Containers": [[49, "python-containers"]], "Limitations of torch.export": [[49, "limitations-of-torch-export"]], "Data/Shape-Dependent Control Flow": [[49, "data-shape-dependent-control-flow"]], "Missing Meta Kernels for Operators": [[49, "missing-meta-kernels-for-operators"]], "Additional Links for Export Users": [[49, null]], "Deep Dive for PyTorch Developers": [[49, null], [2084, null]], "Torch Distributed Elastic": [[30, "torch-distributed-elastic"]], "Get Started": [[30, "get-started"]], "Documentation": [[30, "documentation"]], "API": [[30, null]], "Advanced": [[30, null]], "Plugins": [[30, null]], "Distributed communication package - torch.distributed": [[27, "distributed-communication-package-torch-distributed"]], "Backends": [[27, "backends"], [2067, "backends"]], "Backends that come with PyTorch": [[27, "backends-that-come-with-pytorch"]], "Which backend to use?": [[27, "which-backend-to-use"]], "Common environment variables": [[27, "common-environment-variables"]], "Choosing the network interface to use": [[27, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[27, "other-nccl-environment-variables"]], "Basics": [[27, "basics"], [2067, "basics"]], "Initialization": [[27, "initialization"]], "TCP initialization": [[27, "tcp-initialization"]], "Shared file-system initialization": [[27, "shared-file-system-initialization"]], "Environment variable initialization": [[27, "environment-variable-initialization"]], "Post-Initialization": [[27, "post-initialization"]], "Distributed Key-Value Store": [[27, "distributed-key-value-store"]], "Groups": [[27, "groups"]], "DeviceMesh": [[27, "devicemesh"]], "Point-to-point communication": [[27, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[27, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[27, "collective-functions"]], "Profiling Collective Communication": [[27, "profiling-collective-communication"]], "Multi-GPU collective functions": [[27, "multi-gpu-collective-functions"]], "Third-party backends": [[27, "third-party-backends"]], "Launch utility": [[27, "launch-utility"]], "Spawn utility": [[27, "spawn-utility"]], "Debugging torch.distributed applications": [[27, "debugging-torch-distributed-applications"]], "Python Breakpoint": [[27, "python-breakpoint"]], "Monitored Barrier": [[27, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[27, "torch-distributed-debug"]], "Logging": [[27, "logging"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "torch::deploy has been moved to pytorch/multipy": [[25, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "torchrun (Elastic Launch)": [[45, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[45, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[45, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[45, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[45, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[45, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[45, "note-on-rendezvous-backend"]], "Definitions": [[45, "definitions"]], "Environment Variables": [[45, "environment-variables"]], "Deployment": [[45, "deployment"]], "Failure Modes": [[45, "failure-modes"]], "Membership Changes": [[45, "membership-changes"]], "Important Notices": [[45, "important-notices"]], "Events": [[38, "module-torch.distributed.elastic.events"]], "API Methods": [[38, "api-methods"]], "Event Objects": [[38, "event-objects"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "AArch64 CPU": [[10, "aarch64-cpu"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "Elastic Agent": [[35, "module-torch.distributed.elastic.agent"]], "Server": [[35, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[35, "concepts"]], "Extending the Agent": [[35, "extending-the-agent"]], "Watchdog in the Agent": [[35, "watchdog-in-the-agent"]], "Health Check Server": [[35, "health-check-server"]], "torch.utils.dlpack": [[34, "torch-utils-dlpack"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "Customization": [[36, "customization"]], "Launcher": [[36, "launcher"]], "Rendezvous Handler": [[36, "rendezvous-handler"]], "Metric Handler": [[36, "metric-handler"]], "Events Handler": [[36, "events-handler"]], "Debugging Environment Variables": [[24, "debugging-environment-variables"]], "inference_mode": [[915, "inference-mode"]], "torch.argsort": [[876, "torch-argsort"]], "torch.atanh": [[885, "torch-atanh"]], "torch.autograd.forward_ad.make_dual": [[898, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.forward_ad.unpack_dual": [[899, "torch-autograd-forward-ad-unpack-dual"]], "torch.are_deterministic_algorithms_enabled": [[873, "torch-are-deterministic-algorithms-enabled"]], "torch.as_strided": [[878, "torch-as-strided"]], "torch.arccosh": [[867, "torch-arccosh"]], "torch.atan2": [[884, "torch-atan2"]], "BackwardCFunction": [[900, "backwardcfunction"]], "torch.argwhere": [[877, "torch-argwhere"]], "torch.autograd.functional.hvp": [[909, "torch-autograd-functional-hvp"]], "torch.arctan": [[870, "torch-arctan"]], "torch.autograd.Function.forward": [[890, "torch-autograd-function-forward"]], "InplaceFunction": [[905, "inplacefunction"]], "torch.autograd.grad": [[914, "torch-autograd-grad"]], "torch.atleast_2d": [[887, "torch-atleast-2d"]], "torch.arctanh": [[872, "torch-arctanh"]], "torch.atleast_1d": [[886, "torch-atleast-1d"]], "dual_level": [[895, "dual-level"]], "torch.autograd.Function.jvp": [[891, "torch-autograd-function-jvp"]], "torch.autograd.functional.vjp": [[913, "torch-autograd-functional-vjp"]], "torch.argmin": [[875, "torch-argmin"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[903, "torch-autograd-function-functionctx-save-for-backward"]], "torch.autograd.functional.jvp": [[911, "torch-autograd-functional-jvp"]], "NestedIOFunction": [[906, "nestediofunction"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[904, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.atleast_3d": [[888, "torch-atleast-3d"]], "torch.arcsinh": [[869, "torch-arcsinh"]], "torch.argmax": [[874, "torch-argmax"]], "torch.autograd.functional.jacobian": [[910, "torch-autograd-functional-jacobian"]], "set_grad_enabled": [[916, "set-grad-enabled"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[902, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[901, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.backward": [[893, "torch-autograd-backward"]], "torch.autograd.Function.vmap": [[892, "torch-autograd-function-vmap"]], "torch.atan": [[883, "torch-atan"]], "UnpackedDualTensor": [[894, "unpackeddualtensor"]], "torch.as_tensor": [[879, "torch-as-tensor"]], "torch.asinh": [[882, "torch-asinh"]], "torch.autograd.forward_ad.enter_dual_level": [[896, "torch-autograd-forward-ad-enter-dual-level"]], "torch.autograd.forward_ad.exit_dual_level": [[897, "torch-autograd-forward-ad-exit-dual-level"]], "torch.autograd.Function.backward": [[889, "torch-autograd-function-backward"]], "torch.autograd.functional.hessian": [[908, "torch-autograd-functional-hessian"]], "torch.asin": [[881, "torch-asin"]], "torch.autograd.function.once_differentiable": [[907, "torch-autograd-function-once-differentiable"]], "torch.autograd.functional.vhp": [[912, "torch-autograd-functional-vhp"]], "torch.arcsin": [[868, "torch-arcsin"]], "set_multithreading_enabled": [[917, "set-multithreading-enabled"]], "torch.asarray": [[880, "torch-asarray"]], "torch.arctan2": [[871, "torch-arctan2"]], "default_float_qparams_observer": [[829, "default-float-qparams-observer"]], "fuse_fx": [[860, "fuse-fx"]], "PlaceholderObserver": [[825, "placeholderobserver"]], "MinMaxObserver": [[819, "minmaxobserver"]], "float_qparams_weight_only_qconfig": [[852, "float-qparams-weight-only-qconfig"]], "float16_static_qconfig": [[851, "float16-static-qconfig"]], "MovingAveragePerChannelMinMaxObserver": [[821, "movingaverageperchannelminmaxobserver"]], "default_dynamic_qconfig": [[844, "default-dynamic-qconfig"]], "prepare_qat": [[838, "prepare-qat"]], "propagate_qconfig": [[839, "propagate-qconfig"]], "torch.arange": [[865, "torch-arange"]], "RecordingObserver": [[826, "recordingobserver"]], "default_observer": [[831, "default-observer"]], "NoopObserver": [[822, "noopobserver"]], "default_debug_observer": [[827, "default-debug-observer"]], "default_per_channel_qconfig": [[845, "default-per-channel-qconfig"]], "ObserverBase": [[823, "observerbase"]], "prepare": [[837, "prepare"]], "default_qat_qconfig_v2": [[847, "default-qat-qconfig-v2"]], "float16_dynamic_qconfig": [[850, "float16-dynamic-qconfig"]], "QConfigMapping": [[854, "qconfigmapping"]], "default_qconfig": [[848, "default-qconfig"]], "load_observer_state_dict": [[836, "load-observer-state-dict"]], "default_qat_qconfig": [[846, "default-qat-qconfig"]], "PrepareCustomConfig": [[816, "preparecustomconfig"]], "get_default_qconfig_mapping": [[856, "get-default-qconfig-mapping"]], "PerChannelMinMaxObserver": [[824, "perchannelminmaxobserver"]], "default_weight_observer": [[834, "default-weight-observer"]], "default_per_channel_weight_observer": [[832, "default-per-channel-weight-observer"]], "QConfig": [[841, "qconfig"], [2062, "qconfig"]], "model_is_exported": [[840, "model-is-exported"]], "default_debug_qconfig": [[843, "default-debug-qconfig"]], "default_weight_only_qconfig": [[849, "default-weight-only-qconfig"]], "quantize_dynamic": [[858, "quantize-dynamic"]], "MovingAverageMinMaxObserver": [[820, "movingaverageminmaxobserver"]], "default_activation_only_qconfig": [[842, "default-activation-only-qconfig"]], "get_default_qat_qconfig_mapping": [[855, "get-default-qat-qconfig-mapping"]], "HistogramObserver": [[818, "histogramobserver"]], "StandaloneModuleConfigEntry": [[817, "standalonemoduleconfigentry"]], "convert_fx": [[859, "convert-fx"]], "swap_module": [[864, "swap-module"]], "quantize": [[857, "quantize"]], "default_dynamic_quant_observer": [[828, "default-dynamic-quant-observer"]], "default_histogram_observer": [[830, "default-histogram-observer"]], "prepare_fx": [[861, "prepare-fx"]], "prepare_qat_fx": [[862, "prepare-qat-fx"]], "get_observer_state_dict": [[835, "get-observer-state-dict"]], "torch.arccos": [[866, "torch-arccos"]], "per_channel_dynamic_qconfig": [[853, "per-channel-dynamic-qconfig"]], "quantize_qat": [[863, "quantize-qat"]], "default_placeholder_observer": [[833, "default-placeholder-observer"]], "Best Practices for Backends": [[2087, "best-practices-for-backends"]], "x86 CPU": [[2087, "x86-cpu"]], "Quantization": [[2062, "module-torch.ao.quantization"]], "Introduction to Quantization": [[2062, "introduction-to-quantization"]], "Quantization API Summary": [[2062, "quantization-api-summary"]], "Eager Mode Quantization": [[2062, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[2062, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[2062, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[2062, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[2062, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype - maintenance mode) FX Graph Mode Quantization": [[2062, "prototype-maintenance-mode-fx-graph-mode-quantization"]], "(Prototype) PyTorch 2 Export Quantization": [[2062, "prototype-pytorch-2-export-quantization"]], "Quantization Stack": [[2062, "quantization-stack"]], "Quantized Model": [[2062, "quantized-model"]], "Quantized Tensor": [[2062, "quantized-tensor"]], "Quantize and Dequantize": [[2062, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[2062, "quantized-operators-modules"]], "Quantized Engine": [[2062, "quantized-engine"]], "Quantization Flow": [[2062, "quantization-flow"]], "Observer and FakeQuantize": [[2062, "observer-and-fakequantize"]], "General Quantization Flow": [[2062, "general-quantization-flow"]], "Quantization Support Matrix": [[2062, "quantization-support-matrix"]], "Quantization Mode Support": [[2062, "quantization-mode-support"]], "Quantization Flow Support": [[2062, "quantization-flow-support"]], "Backend/Hardware Support": [[2062, "backend-hardware-support"]], "Note for native CPU backends": [[2062, "note-for-native-cpu-backends"]], "Operator Support": [[2062, "operator-support"]], "Quantization API Reference": [[2062, "quantization-api-reference"], [2065, "quantization-api-reference"]], "Quantization Backend Configuration": [[2062, "quantization-backend-configuration"], [2064, "quantization-backend-configuration"]], "Quantization Accuracy Debugging": [[2062, "quantization-accuracy-debugging"], [2063, "quantization-accuracy-debugging"]], "Quantization Customizations": [[2062, "quantization-customizations"]], "Quantization Custom Module API": [[2062, "quantization-custom-module-api"]], "Best Practices": [[2062, "best-practices"]], "Common Errors": [[2062, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[2062, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[2062, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[2062, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[2062, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "CUDAGraph Trees": [[2088, "cudagraph-trees"]], "CUDAGraph Background": [[2088, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[2088, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[2088, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[2088, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[2088, "cudagraph-trees-integration"]], "Multiprocessing best practices": [[2048, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[2048, "cuda-in-multiprocessing"]], "Best practices and tips": [[2048, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[2048, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[2048, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[2048, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[2048, "hogwild"]], "CPU in multiprocessing": [[2048, "cpu-in-multiprocessing"]], "CPU oversubscription": [[2048, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[2048, "avoid-cpu-oversubscription"]], "Reproducibility": [[2050, "reproducibility"]], "Controlling sources of randomness": [[2050, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[2050, "pytorch-random-number-generator"]], "Python": [[2050, "python"]], "Random number generators in other libraries": [[2050, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[2050, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[2050, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[2050, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[2050, "cuda-rnn-and-lstm"]], "Filling uninitialized memory": [[2050, "filling-uninitialized-memory"]], "DataLoader": [[2050, "dataloader"]], "torch.ao.quantization": [[2065, "torch-ao-quantization"]], "Top level APIs": [[2065, "top-level-apis"]], "Preparing model for quantization": [[2065, "preparing-model-for-quantization"]], "Utility functions": [[2065, "utility-functions"], [2051, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[2065, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[2065, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[2065, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[2065, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[2065, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[2065, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.export_utils": [[2065, "torch-ao-quantization-pt2e-export-utils"]], "torch (quantization related functions)": [[2065, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[2065, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[2065, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[2065, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[2065, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[2065, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[2065, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[2065, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2065, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[2065, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2065, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[2065, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[2065, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[2065, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[2065, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[2065, "quantized-dtypes-and-quantization-schemes"]], "torch.signal": [[2070, "module-torch.signal"]], "torch.signal.windows": [[2070, "module-torch.signal.windows"]], "torch.sparse": [[2072, "torch-sparse"]], "Why and when to use sparsity": [[2072, "why-and-when-to-use-sparsity"]], "Functionality overview": [[2072, "functionality-overview"]], "Operator overview": [[2072, "operator-overview"]], "Sparse Semi-Structured Tensors": [[2072, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[2072, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[2072, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[2072, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[2072, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[2072, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[2072, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[2072, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[2072, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[2072, "sparse-csr-tensor"]], "Construction of CSR tensors": [[2072, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[2072, "csr-tensor-operations"]], "Sparse CSC Tensor": [[2072, "sparse-csc-tensor"]], "Construction of CSC tensors": [[2072, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[2072, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[2072, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[2072, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[2072, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[2072, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[2072, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[2072, "linear-algebra-operations"]], "Tensor methods and sparse": [[2072, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[2072, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[2072, "other-functions"]], "Unary functions": [[2072, "unary-functions"]], "Tensor Views": [[2076, "tensor-views"]], "Distributed Autograd Design": [[2068, "distributed-autograd-design"]], "Background": [[2068, "background"], [2069, "background"]], "Autograd recording during the forward pass": [[2068, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[2068, "distributed-autograd-context"]], "Distributed Backward Pass": [[2068, "distributed-backward-pass"]], "Computing dependencies": [[2068, "computing-dependencies"]], "FAST mode algorithm": [[2068, "fast-mode-algorithm"]], "SMART mode algorithm": [[2068, "smart-mode-algorithm"]], "Distributed Optimizer": [[2068, "distributed-optimizer"], [2067, "distributed-optimizer"]], "Simple end to end example": [[2068, "simple-end-to-end-example"]], "torch.ao.ns._numeric_suite_fx": [[2083, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[2083, "torch-ao-ns-fx-utils"]], "ONNX supported TorchScript operators": [[2057, "onnx-supported-torchscript-operators"]], "Supported operators": [[2057, "supported-operators"]], "ONNX support for TorchScript operators": [[2057, "id1"]], "Unsupported operators": [[2057, "unsupported-operators"], [2057, "id2"]], "torch.Size": [[2071, "torch-size"]], "TorchScript-based ONNX Exporter": [[2056, "torchscript-based-onnx-exporter"], [2053, "torchscript-based-onnx-exporter"]], "Example: AlexNet from PyTorch to ONNX": [[2056, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[2056, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[2056, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[2056, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[2056, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[2056, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[2056, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[2056, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[2056, "reads-gets"]], "Writes / Sets": [[2056, "writes-sets"]], "Adding support for operators": [[2056, "adding-support-for-operators"]], "ONNX exporter internals": [[2056, "onnx-exporter-internals"]], "ATen operators": [[2056, "aten-operators"]], "List of supported operators": [[2056, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[2056, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[2056, "torch-autograd-functions"]], "Static Symbolic Method": [[2056, "static-symbolic-method"]], "Inline Autograd Function": [[2056, "inline-autograd-function"]], "Custom operators": [[2056, "custom-operators"]], "ONNX-script functions": [[2056, "onnx-script-functions"]], "C++ Operators": [[2056, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[2056, "discovering-all-unconvertible-aten-ops-at-once"]], "Classes": [[2056, "classes"]], "Remote Reference Protocol": [[2069, "remote-reference-protocol"]], "RRef Lifetime": [[2069, "rref-lifetime"]], "Design Reasoning": [[2069, "design-reasoning"]], "Protocol Scenarios": [[2069, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[2069, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[2069, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[2069, "owner-share-rref-with-user"]], "User Share RRef with User": [[2069, "user-share-rref-with-user"]], "Default values for native configurations": [[2064, "default-values-for-native-configurations"]], "torch.special": [[2073, "torch-special"]], "Custom Backends": [[2089, "custom-backends"]], "Registering Custom Backends": [[2089, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[2089, "custom-backends-after-aotautograd"]], "Debugging Backend": [[2089, "debugging-backend"]], "Speedy Backend": [[2089, "speedy-backend"]], "Composable Backends": [[2089, "composable-backends"]], "Features for large-scale deployments": [[2045, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[2045, "fleet-wide-operator-profiling"]], "API usage logging": [[2045, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[2045, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[2045, "build-environment-considerations"]], "Common extension points": [[2045, "common-extension-points"]], "torch.testing": [[2079, "module-torch.testing"]], "Gradcheck mechanics": [[2043, "gradcheck-mechanics"]], "Notations and background information": [[2043, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[2043, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[2043, "real-to-real-functions"]], "Default real input numerical evaluation": [[2043, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[2043, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[2043, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[2043, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[2043, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[2043, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[2043, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[2043, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[2043, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[2043, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[2043, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[2043, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[2043, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[2043, "gradgradcheck-implementation"]], "Dynamic shapes": [[2090, "dynamic-shapes"]], "Abridged public API": [[2090, "abridged-public-api"]], "The Guard Model": [[2090, "the-guard-model"]], "Abridged internal API": [[2090, "abridged-internal-api"]], "DimDynamic policy": [[2090, "dimdynamic-policy"]], "Unbacked SymInts": [[2090, "unbacked-symints"]], "torch": [[2081, "module-torch"]], "Tensors": [[2081, "tensors"]], "Creation Ops": [[2081, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[2081, "indexing-slicing-joining-mutating-ops"]], "Generators": [[2081, "generators"]], "Random sampling": [[2081, "random-sampling"]], "In-place random sampling": [[2081, "in-place-random-sampling"]], "Quasi-random sampling": [[2081, "quasi-random-sampling"]], "Parallelism": [[2081, "parallelism"]], "Math operations": [[2081, "math-operations"]], "Pointwise Ops": [[2081, "pointwise-ops"]], "Reduction Ops": [[2081, "reduction-ops"]], "Comparison Ops": [[2081, "comparison-ops"]], "Spectral Ops": [[2081, "spectral-ops"]], "Other Operations": [[2081, "other-operations"]], "BLAS and LAPACK Operations": [[2081, "blas-and-lapack-operations"]], "Foreach Operations": [[2081, "foreach-operations"]], "Symbolic Numbers": [[2081, "symbolic-numbers"]], "Export Path": [[2081, "export-path"]], "Control Flow": [[2081, "control-flow"]], "Optimizations": [[2081, "optimizations"]], "Operator Tags": [[2081, "operator-tags"]], "torch.Storage": [[2074, "torch-storage"]], "Windows FAQ": [[2052, "windows-faq"]], "Building from source": [[2052, "building-from-source"]], "Include optional components": [[2052, "include-optional-components"]], "Speeding CUDA build for Windows": [[2052, "speeding-cuda-build-for-windows"]], "One key install script": [[2052, "one-key-install-script"]], "Extension": [[2052, "extension"]], "CFFI Extension": [[2052, "cffi-extension"]], "Cpp Extension": [[2052, "cpp-extension"]], "Installation": [[2052, "installation"]], "Package not found in win-32 channel.": [[2052, "package-not-found-in-win-32-channel"]], "Import error": [[2052, "import-error"]], "Usage (multiprocessing)": [[2052, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[2052, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[2052, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[2052, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[2052, "cuda-ipc-operations"]], "torch.package": [[2059, "torch-package"]], "Packaging your first model": [[2059, "packaging-your-first-model"]], "How do I\u2026": [[2059, "how-do-i"]], "See what is inside a package?": [[2059, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[2059, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[2059, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[2059, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[2059, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[2059, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[2059, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[2059, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[2059, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[2059, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[2059, "re-export-an-imported-object"]], "Package a TorchScript module?": [[2059, "package-a-torchscript-module"]], "Explanation": [[2059, "explanation"]], "torch.package Format Overview": [[2059, "torch-package-format-overview"]], "Framework files": [[2059, "framework-files"]], "User files": [[2059, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[2059, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[2059, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[2059, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[2059, "dependency-management"]], "intern": [[2059, "intern"]], "extern": [[2059, "extern"]], "mock": [[2059, "mock"]], "Refactoring": [[2059, "refactoring"]], "Patterns": [[2059, "patterns"]], "torch.package sharp edges": [[2059, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[2059, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[2059, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[2059, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[2059, "mangling"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[2041, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[2041, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[2041, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[2041, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[2041, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "AOTInductor: Ahead-Of-Time Compilation for Torch.Export-ed Models": [[2085, "aotinductor-ahead-of-time-compilation-for-torch-export-ed-models"]], "Model Compilation": [[2085, "model-compilation"]], "Inference in C++": [[2085, "inference-in-c"]], "Tensor Attributes": [[2075, "tensor-attributes"]], "torch.dtype": [[2075, "torch-dtype"]], "torch.device": [[2075, "torch-device"]], "torch.layout": [[2075, "torch-layout"]], "torch.memory_format": [[2075, "torch-memory-format"]], "torch.utils.tensorboard": [[2077, "module-torch.utils.tensorboard"]], "Serialization semantics": [[2051, "serialization-semantics"]], "Table of Contents": [[2051, "table-of-contents"]], "Saving and loading tensors": [[2051, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[2051, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[2051, "saving-and-loading-torch-nn-modules"]], "Serialized file format for torch.save": [[2051, "serialized-file-format-for-torch-save"]], "Serializing torch.nn.Modules and loading them in C++": [[2051, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[2051, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[2051, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[2051, "torch-full-always-inferring-a-float-dtype"]], "Data insensitive error": [[2063, "data-insensitive-error"]], "General tips": [[2063, "general-tips"]], "Int8 quantization tips": [[2063, "int8-quantization-tips"]], "Data sensitive error": [[2063, "data-sensitive-error"]], "Implementation error": [[2063, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[2063, "numerical-debugging-tooling-prototype"]], "MPS backend": [[2047, "mps-backend"]], "torch.optim": [[2058, "module-torch.optim"]], "How to use an optimizer": [[2058, "how-to-use-an-optimizer"]], "Constructing it": [[2058, "constructing-it"]], "Per-parameter options": [[2058, "per-parameter-options"]], "Taking an optimization step": [[2058, "taking-an-optimization-step"]], "optimizer.step()": [[2058, "optimizer-step"]], "optimizer.step(closure)": [[2058, "optimizer-step-closure"]], "Base class": [[2058, "base-class"]], "Algorithms": [[2058, "algorithms"]], "How to adjust learning rate": [[2058, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[2058, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[2058, "constructing-averaged-models"]], "Custom averaging strategies": [[2058, "custom-averaging-strategies"]], "SWA learning rate schedules": [[2058, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[2058, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[2058, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[2058, "putting-it-all-together-ema"]], "torch.compiler": [[2084, "torch-compiler"]], "Getting Started for PyTorch Users": [[2084, null]], "HowTo for PyTorch Backend Vendors": [[2084, null]], "ONNX Backend for TorchDynamo": [[2055, "onnx-backend-for-torchdynamo"]], "Pipeline Parallelism": [[2060, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[2060, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[2060, "pipelined-execution"]], "Pipe APIs in PyTorch": [[2060, "pipe-apis-in-pytorch"]], "Skip connections": [[2060, "skip-connections"]], "FSDP Notes": [[2042, "fsdp-notes"]], "FSDP Prefetch Nuances": [[2042, "fsdp-prefetch-nuances"]], "Communication payload size": [[2042, "communication-payload-size"]], "FSDP buffers sizes": [[2042, "fsdp-buffers-sizes"]], "HIP (ROCm) semantics": [[2044, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[2044, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[2044, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[2044, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[2044, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[2044, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[2044, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[2044, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[2044, "enabling-kernel-asserts"]], "torch.ao.ns._numeric_suite": [[2082, "torch-ao-ns-numeric-suite"]], "torch.compiler API reference": [[2086, "torch-compiler-api-reference"]], "torch.Tensor": [[2078, "torch-tensor"]], "Data types": [[2078, "data-types"]], "Initializing and basic operations": [[2078, "initializing-and-basic-operations"]], "Tensor class reference": [[2078, "tensor-class-reference"]], "torch.profiler": [[2061, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[2061, "intel-instrumentation-and-tracing-technology-apis"]], "torch.random": [[2066, "module-torch.random"]], "Extending torch.func with autograd.Function": [[2040, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[2040, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[2040, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[2040, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[2040, "limitations-and-gotchas"]], "torch.vmap() Support": [[2040, "torch-vmap-support"]], "Automatically generate a vmap rule": [[2040, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[2040, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[2040, "torch-func-jvp-support"]], "torch.onnx": [[2053, "torch-onnx"]], "TorchDynamo-based ONNX Exporter": [[2053, "torchdynamo-based-onnx-exporter"], [2054, "torchdynamo-based-onnx-exporter"]], "Contributing / Developing": [[2053, "contributing-developing"]], "A Simple Custom Module": [[2046, "a-simple-custom-module"]], "Modules as Building Blocks": [[2046, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[2046, "neural-network-training-with-modules"]], "Module State": [[2046, "module-state"]], "Module Initialization": [[2046, "module-initialization"]], "Module Hooks": [[2046, "module-hooks"]], "Advanced Features": [[2046, "advanced-features"]], "Distributed Training": [[2046, "distributed-training"]], "Profiling Performance": [[2046, "profiling-performance"]], "Improving Performance with Quantization": [[2046, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[2046, "improving-memory-usage-with-pruning"]], "Parametrizations": [[2046, "parametrizations"]], "Transforming Modules with FX": [[2046, "transforming-modules-with-fx"]], "Dependencies": [[2054, "dependencies"]], "A simple example": [[2054, "a-simple-example"]], "Inspecting the ONNX model using GUI": [[2054, "inspecting-the-onnx-model-using-gui"]], "Diagnosing issues with SARIF": [[2054, "diagnosing-issues-with-sarif"]], "ONNX Diagnostic SARIF Rules": [[2054, null]], "Numerical accuracy": [[2049, "numerical-accuracy"]], "Batched computations or slice computations": [[2049, "batched-computations-or-slice-computations"]], "Extremal values": [[2049, "extremal-values"]], "Linear algebra (torch.linalg)": [[2049, "linear-algebra-torch-linalg"]], "Non-finite values": [[2049, "non-finite-values"]], "Extremal values in linalg": [[2049, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere (and later) devices": [[2049, "tensorfloat-32-tf32-on-nvidia-ampere-and-later-devices"]], "Reduced Precision Reduction for FP16 and BF16 GEMMs": [[2049, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[2049, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Distributed RPC Framework": [[2067, "distributed-rpc-framework"]], "RPC": [[2067, "rpc"]], "TensorPipe Backend": [[2067, "tensorpipe-backend"]], "RRef": [[2067, "rref"]], "More Information about RRef": [[2067, null]], "RemoteModule": [[2067, "remotemodule"]], "Distributed Autograd Framework": [[2067, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[2067, null]], "Threading Environment Variables": [[2080, "threading-environment-variables"]], "hardswish": [[776, "hardswish"]], "adaptive_avg_pool2d": [[765, "adaptive-avg-pool2d"]], "linear": [[780, "linear"]], "conv2d": [[772, "conv2d"]], "max_pool2d": [[782, "max-pool2d"]], "default_fused_act_fake_quant": [[803, "default-fused-act-fake-quant"]], "elu": [[774, "elu"]], "hardtanh": [[777, "hardtanh"]], "celu": [[769, "celu"]], "default_fused_wt_fake_quant": [[805, "default-fused-wt-fake-quant"]], "default_weight_fake_quant": [[808, "default-weight-fake-quant"]], "disable_fake_quant": [[809, "disable-fake-quant"]], "upsample_nearest": [[786, "upsample-nearest"]], "default_fused_per_channel_wt_fake_quant": [[804, "default-fused-per-channel-wt-fake-quant"]], "leaky_relu": [[779, "leaky-relu"]], "conv1d": [[771, "conv1d"]], "avg_pool2d": [[767, "avg-pool2d"]], "fuse_modules": [[813, "fuse-modules"]], "FusedMovingAvgObsFakeQuantize": [[801, "fusedmovingavgobsfakequantize"]], "FakeQuantize": [[798, "fakequantize"]], "conv3d": [[773, "conv3d"]], "DTypeConfig": [[793, "dtypeconfig"]], "threshold": [[783, "threshold"]], "add_quant_dequant": [[790, "add-quant-dequant"]], "BackendConfig": [[791, "backendconfig"]], "ConvertCustomConfig": [[814, "convertcustomconfig"]], "hardsigmoid": [[775, "hardsigmoid"]], "upsample_bilinear": [[785, "upsample-bilinear"]], "disable_observer": [[810, "disable-observer"]], "QuantStub": [[788, "quantstub"]], "enable_observer": [[812, "enable-observer"]], "upsample": [[784, "upsample"]], "adaptive_avg_pool3d": [[766, "adaptive-avg-pool3d"]], "DeQuantStub": [[787, "dequantstub"]], "max_pool1d": [[781, "max-pool1d"]], "DTypeWithConstraints": [[794, "dtypewithconstraints"]], "avg_pool3d": [[768, "avg-pool3d"]], "FuseCustomConfig": [[815, "fusecustomconfig"]], "default_per_channel_weight_fake_quant": [[807, "default-per-channel-weight-fake-quant"]], "default_eval_fn": [[797, "default-eval-fn"]], "interpolate": [[778, "interpolate"]], "QuantWrapper": [[789, "quantwrapper"]], "FixedQParamsFakeQuantize": [[800, "fixedqparamsfakequantize"]], "enable_fake_quant": [[811, "enable-fake-quant"]], "BackendPatternConfig": [[792, "backendpatternconfig"]], "FakeQuantizeBase": [[799, "fakequantizebase"]], "default_fake_quant": [[802, "default-fake-quant"]], "convert": [[796, "convert"]], "default_histogram_fake_quant": [[806, "default-histogram-fake-quant"]], "ObservationType": [[795, "observationtype"]], "clamp": [[770, "clamp"]], "ConvReLU1d": [[724, "convrelu1d"], [707, "convrelu1d"]], "LinearReLU": [[727, "linearrelu"], [728, "linearrelu"], [719, "linearrelu"], [710, "linearrelu"]], "BNReLU2d": [[722, "bnrelu2d"], [699, "bnrelu2d"]], "ConvBnReLU3d": [[716, "convbnrelu3d"], [706, "convbnrelu3d"]], "freeze_bn_stats": [[720, "freeze-bn-stats"]], "update_bn_stats": [[721, "update-bn-stats"]], "QFunctional": [[756, "qfunctional"]], "BNReLU3d": [[723, "bnrelu3d"], [700, "bnrelu3d"]], "ConvReLU3d": [[726, "convrelu3d"], [718, "convrelu3d"], [709, "convrelu3d"]], "FXFloatFunctional": [[746, "fxfloatfunctional"]], "ConvBnReLU2d": [[715, "convbnrelu2d"], [705, "convbnrelu2d"]], "ConvReLU2d": [[717, "convrelu2d"], [725, "convrelu2d"], [708, "convrelu2d"]], "FloatFunctional": [[747, "floatfunctional"]], "ConvBnReLU1d": [[714, "convbnrelu1d"], [704, "convbnrelu1d"]], "torch.allclose": [[693, "torch-allclose"]], "torch._foreach_reciprocal_": [[663, "torch-foreach-reciprocal"]], "torch.angle": [[697, "torch-angle"]], "torch._foreach_trunc": [[676, "torch-foreach-trunc"]], "torch.abs": [[680, "torch-abs"]], "torch.adjoint": [[691, "torch-adjoint"]], "ConvBn3d": [[713, "convbn3d"], [703, "convbn3d"]], "torch._foreach_trunc_": [[677, "torch-foreach-trunc"]], "torch.amin": [[695, "torch-amin"]], "ConvBn1d": [[711, "convbn1d"], [701, "convbn1d"]], "torch._foreach_round_": [[665, "torch-foreach-round"]], "torch._foreach_tan": [[674, "torch-foreach-tan"]], "torch.addmv": [[689, "torch-addmv"]], "torch._foreach_sin": [[668, "torch-foreach-sin"]], "ConvBn2d": [[702, "convbn2d"], [712, "convbn2d"]], "torch.acosh": [[683, "torch-acosh"]], "torch._foreach_sinh_": [[671, "torch-foreach-sinh"]], "torch._foreach_sigmoid_": [[667, "torch-foreach-sigmoid"]], "torch.addr": [[690, "torch-addr"]], "torch._foreach_zero_": [[678, "torch-foreach-zero"]], "torch.aminmax": [[696, "torch-aminmax"]], "torch.addmm": [[688, "torch-addmm"]], "torch._logging.set_logs": [[679, "torch-logging-set-logs"]], "torch.all": [[692, "torch-all"]], "torch.amax": [[694, "torch-amax"]], "torch._foreach_round": [[664, "torch-foreach-round"]], "torch._foreach_sqrt": [[672, "torch-foreach-sqrt"]], "torch.add": [[684, "torch-add"]], "torch.any": [[698, "torch-any"]], "torch._foreach_sinh": [[670, "torch-foreach-sinh"]], "torch._foreach_sigmoid": [[666, "torch-foreach-sigmoid"]], "torch._foreach_tan_": [[675, "torch-foreach-tan"]], "torch.addbmm": [[685, "torch-addbmm"]], "torch.addcmul": [[687, "torch-addcmul"]], "torch.acos": [[682, "torch-acos"]], "torch._foreach_sqrt_": [[673, "torch-foreach-sqrt"]], "torch._foreach_sin_": [[669, "torch-foreach-sin"]], "torch.addcdiv": [[686, "torch-addcdiv"]], "torch.absolute": [[681, "torch-absolute"]], "torch._foreach_log_": [[659, "torch-foreach-log"]], "torch._foreach_asin_": [[629, "torch-foreach-asin"]], "torch._foreach_log2_": [[658, "torch-foreach-log2"]], "torch._assert": [[623, "torch-assert"]], "torch._foreach_floor": [[646, "torch-foreach-floor"]], "torch._foreach_floor_": [[647, "torch-foreach-floor"]], "torch._foreach_cosh_": [[637, "torch-foreach-cosh"]], "torch._foreach_frac_": [[649, "torch-foreach-frac"]], "torch._foreach_erf": [[638, "torch-foreach-erf"]], "torch.Tensor.vsplit": [[618, "torch-tensor-vsplit"]], "torch._foreach_cos": [[634, "torch-foreach-cos"]], "torch.Tensor.vdot": [[615, "torch-tensor-vdot"]], "torch._foreach_log10_": [[654, "torch-foreach-log10"]], "torch._foreach_reciprocal": [[662, "torch-foreach-reciprocal"]], "torch.Tensor.var": [[614, "torch-tensor-var"]], "torch._foreach_abs_": [[625, "torch-foreach-abs"]], "torch._foreach_atan_": [[631, "torch-foreach-atan"]], "torch._foreach_ceil": [[632, "torch-foreach-ceil"]], "torch._foreach_log10": [[653, "torch-foreach-log10"]], "torch.Tensor.zero_": [[622, "torch-tensor-zero"]], "torch._foreach_log": [[652, "torch-foreach-log"]], "torch._foreach_exp_": [[643, "torch-foreach-exp"]], "torch._foreach_lgamma": [[650, "torch-foreach-lgamma"]], "torch._foreach_log1p": [[655, "torch-foreach-log1p"]], "torch._foreach_cos_": [[635, "torch-foreach-cos"]], "torch._foreach_expm1": [[644, "torch-foreach-expm1"]], "torch._foreach_lgamma_": [[651, "torch-foreach-lgamma"]], "torch._foreach_log2": [[657, "torch-foreach-log2"]], "torch.Tensor.values": [[613, "torch-tensor-values"]], "torch._foreach_expm1_": [[645, "torch-foreach-expm1"]], "torch.Tensor.view": [[616, "torch-tensor-view"]], "torch._foreach_erf_": [[639, "torch-foreach-erf"]], "torch._foreach_frac": [[648, "torch-foreach-frac"]], "torch._foreach_erfc_": [[641, "torch-foreach-erfc"]], "torch.Tensor.view_as": [[617, "torch-tensor-view-as"]], "torch._foreach_acos_": [[627, "torch-foreach-acos"]], "torch._foreach_atan": [[630, "torch-foreach-atan"]], "torch._foreach_neg_": [[661, "torch-foreach-neg"]], "torch._foreach_erfc": [[640, "torch-foreach-erfc"]], "torch._foreach_cosh": [[636, "torch-foreach-cosh"]], "torch._foreach_abs": [[624, "torch-foreach-abs"]], "torch._foreach_ceil_": [[633, "torch-foreach-ceil"]], "torch._foreach_acos": [[626, "torch-foreach-acos"]], "torch._foreach_asin": [[628, "torch-foreach-asin"]], "torch.Tensor.where": [[619, "torch-tensor-where"]], "torch.Tensor.xlogy_": [[621, "torch-tensor-xlogy"]], "torch._foreach_log1p_": [[656, "torch-foreach-log1p"]], "torch.Tensor.xlogy": [[620, "torch-tensor-xlogy"]], "torch.Tensor.untyped_storage": [[612, "torch-tensor-untyped-storage"]], "torch._foreach_exp": [[642, "torch-foreach-exp"]], "torch._foreach_neg": [[660, "torch-foreach-neg"]], "torch.Tensor.type": [[602, "torch-tensor-type"]], "torch.Tensor.tril_": [[595, "torch-tensor-tril"]], "torch.Tensor.true_divide_": [[599, "torch-tensor-true-divide"]], "torch.Tensor.unsqueeze_": [[611, "torch-tensor-unsqueeze"]], "torch.Tensor.unflatten": [[605, "torch-tensor-unflatten"]], "torch.Tensor.unsqueeze": [[610, "torch-tensor-unsqueeze"]], "torch.Tensor.unfold": [[606, "torch-tensor-unfold"]], "torch.Tensor.sum_to_size": [[565, "torch-tensor-sum-to-size"]], "torch.Tensor.t_": [[570, "torch-tensor-t"]], "torch.Tensor.transpose": [[591, "torch-tensor-transpose"]], "torch.Tensor.triu": [[596, "torch-tensor-triu"]], "torch.Tensor.to_sparse_bsc": [[583, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.transpose_": [[592, "torch-tensor-transpose"]], "torch.Tensor.type_as": [[603, "torch-tensor-type-as"]], "torch.Tensor.tanh_": [[576, "torch-tensor-tanh"]], "torch.Tensor.unbind": [[604, "torch-tensor-unbind"]], "torch.Tensor.tolist": [[588, "torch-tensor-tolist"]], "torch.Tensor.sub_": [[561, "torch-tensor-sub"]], "torch.Tensor.trace": [[590, "torch-tensor-trace"]], "torch.Tensor.true_divide": [[598, "torch-tensor-true-divide"]], "torch.Tensor.to_sparse_csc": [[586, "torch-tensor-to-sparse-csc"]], "torch.Tensor.tan_": [[574, "torch-tensor-tan"]], "torch.Tensor.take": [[571, "torch-tensor-take"]], "torch.Tensor.tile": [[578, "torch-tensor-tile"]], "torch.Tensor.to_mkldnn": [[581, "torch-tensor-to-mkldnn"]], "torch.Tensor.tanh": [[575, "torch-tensor-tanh"]], "torch.Tensor.subtract": [[562, "torch-tensor-subtract"]], "torch.Tensor.uniform_": [[607, "torch-tensor-uniform"]], "torch.Tensor.tan": [[573, "torch-tensor-tan"]], "torch.Tensor.tensor_split": [[577, "torch-tensor-tensor-split"]], "torch.Tensor.take_along_dim": [[572, "torch-tensor-take-along-dim"]], "torch.Tensor.sum": [[564, "torch-tensor-sum"]], "torch.Tensor.triu_": [[597, "torch-tensor-triu"]], "torch.Tensor.svd": [[566, "torch-tensor-svd"]], "torch.Tensor.swapdims": [[568, "torch-tensor-swapdims"]], "torch.Tensor.unique": [[608, "torch-tensor-unique"]], "torch.Tensor.to": [[579, "torch-tensor-to"]], "torch.Tensor.to_sparse_csr": [[587, "torch-tensor-to-sparse-csr"]], "torch.Tensor.to_dense": [[580, "torch-tensor-to-dense"]], "torch.Tensor.triangular_solve": [[593, "torch-tensor-triangular-solve"]], "torch.Tensor.unique_consecutive": [[609, "torch-tensor-unique-consecutive"]], "torch.Tensor.swapaxes": [[567, "torch-tensor-swapaxes"]], "torch.Tensor.t": [[569, "torch-tensor-t"]], "torch.Tensor.to_sparse": [[582, "torch-tensor-to-sparse"]], "torch.Tensor.trunc_": [[601, "torch-tensor-trunc"]], "torch.Tensor.to_sparse_coo": [[585, "torch-tensor-to-sparse-coo"]], "torch.Tensor.topk": [[589, "torch-tensor-topk"]], "torch.Tensor.trunc": [[600, "torch-tensor-trunc"]], "torch.Tensor.to_sparse_bsr": [[584, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.tril": [[594, "torch-tensor-tril"]], "torch.Tensor.subtract_": [[563, "torch-tensor-subtract"]], "torch.Tensor.std": [[554, "torch-tensor-std"]], "torch.Tensor.short": [[524, "torch-tensor-short"]], "torch.Tensor.sinc": [[532, "torch-tensor-sinc"]], "torch.Tensor.size": [[536, "torch-tensor-size"]], "torch.Tensor.sparse_resize_and_clear_": [[545, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.sparse_resize_": [[544, "torch-tensor-sparse-resize"]], "torch.Tensor.select": [[517, "torch-tensor-select"]], "torch.Tensor.slice_scatter": [[537, "torch-tensor-slice-scatter"]], "torch.Tensor.softmax": [[540, "torch-tensor-softmax"]], "torch.Tensor.sign_": [[528, "torch-tensor-sign"]], "torch.Tensor.sparse_dim": [[542, "torch-tensor-sparse-dim"]], "torch.Tensor.sub": [[560, "torch-tensor-sub"]], "torch.Tensor.scatter": [[511, "torch-tensor-scatter"]], "torch.Tensor.sinc_": [[533, "torch-tensor-sinc"]], "torch.Tensor.sigmoid_": [[526, "torch-tensor-sigmoid"]], "torch.Tensor.scatter_reduce": [[515, "torch-tensor-scatter-reduce"]], "torch.Tensor.sparse_mask": [[543, "torch-tensor-sparse-mask"]], "torch.Tensor.stride": [[559, "torch-tensor-stride"]], "torch.Tensor.sgn_": [[521, "torch-tensor-sgn"]], "torch.Tensor.squeeze_": [[552, "torch-tensor-squeeze"]], "torch.Tensor.square_": [[550, "torch-tensor-square"]], "torch.Tensor.sqrt": [[547, "torch-tensor-sqrt"]], "torch.Tensor.sin_": [[531, "torch-tensor-sin"]], "torch.Tensor.square": [[549, "torch-tensor-square"]], "torch.Tensor.smm": [[539, "torch-tensor-smm"]], "torch.Tensor.signbit": [[529, "torch-tensor-signbit"]], "torch.Tensor.scatter_add_": [[514, "torch-tensor-scatter-add"]], "torch.Tensor.squeeze": [[551, "torch-tensor-squeeze"]], "torch.Tensor.shape": [[522, "torch-tensor-shape"]], "torch.Tensor.storage_offset": [[557, "torch-tensor-storage-offset"]], "torch.Tensor.select_scatter": [[518, "torch-tensor-select-scatter"]], "torch.Tensor.sgn": [[520, "torch-tensor-sgn"]], "torch.Tensor.sinh_": [[535, "torch-tensor-sinh"]], "torch.Tensor.share_memory_": [[523, "torch-tensor-share-memory"]], "torch.Tensor.rsqrt_": [[510, "torch-tensor-rsqrt"]], "torch.Tensor.sin": [[530, "torch-tensor-sin"]], "torch.Tensor.storage_type": [[558, "torch-tensor-storage-type"]], "torch.Tensor.sinh": [[534, "torch-tensor-sinh"]], "torch.Tensor.scatter_reduce_": [[516, "torch-tensor-scatter-reduce"]], "torch.Tensor.stft": [[555, "torch-tensor-stft"]], "torch.Tensor.set_": [[519, "torch-tensor-set"]], "torch.Tensor.scatter_add": [[513, "torch-tensor-scatter-add"]], "torch.Tensor.scatter_": [[512, "torch-tensor-scatter"]], "torch.Tensor.sigmoid": [[525, "torch-tensor-sigmoid"]], "torch.Tensor.sign": [[527, "torch-tensor-sign"]], "torch.Tensor.split": [[546, "torch-tensor-split"]], "torch.Tensor.sspaddmm": [[553, "torch-tensor-sspaddmm"]], "torch.Tensor.sqrt_": [[548, "torch-tensor-sqrt"]], "torch.Tensor.storage": [[556, "torch-tensor-storage"]], "torch.Tensor.sort": [[541, "torch-tensor-sort"]], "torch.Tensor.slogdet": [[538, "torch-tensor-slogdet"]], "torch.Tensor.random_": [[480, "torch-tensor-random"]], "torch.Tensor.renorm_": [[491, "torch-tensor-renorm"]], "torch.Tensor.pow": [[467, "torch-tensor-pow"]], "torch.Tensor.row_indices": [[508, "torch-tensor-row-indices"]], "torch.Tensor.q_zero_point": [[475, "torch-tensor-q-zero-point"]], "torch.Tensor.q_scale": [[474, "torch-tensor-q-scale"]], "torch.Tensor.reciprocal_": [[484, "torch-tensor-reciprocal"]], "torch.Tensor.requires_grad": [[494, "torch-tensor-requires-grad"]], "torch.Tensor.permute": [[461, "torch-tensor-permute"]], "torch.Tensor.remainder": [[488, "torch-tensor-remainder"]], "torch.Tensor.rad2deg": [[479, "torch-tensor-rad2deg"]], "torch.Tensor.pin_memory": [[462, "torch-tensor-pin-memory"]], "torch.Tensor.repeat_interleave": [[493, "torch-tensor-repeat-interleave"]], "torch.Tensor.resolve_neg": [[501, "torch-tensor-resolve-neg"]], "torch.Tensor.resolve_conj": [[500, "torch-tensor-resolve-conj"]], "torch.Tensor.reciprocal": [[483, "torch-tensor-reciprocal"]], "torch.Tensor.qscheme": [[477, "torch-tensor-qscheme"]], "torch.Tensor.resize_as_": [[499, "torch-tensor-resize-as"]], "torch.Tensor.register_post_accumulate_grad_hook": [[487, "torch-tensor-register-post-accumulate-grad-hook"]], "torch.Tensor.polygamma": [[464, "torch-tensor-polygamma"]], "torch.Tensor.quantile": [[478, "torch-tensor-quantile"]], "torch.Tensor.rot90": [[505, "torch-tensor-rot90"]], "torch.Tensor.reshape": [[496, "torch-tensor-reshape"]], "torch.Tensor.polygamma_": [[465, "torch-tensor-polygamma"]], "torch.Tensor.pow_": [[468, "torch-tensor-pow"]], "torch.Tensor.retains_grad": [[503, "torch-tensor-retains-grad"]], "torch.Tensor.ravel": [[481, "torch-tensor-ravel"]], "torch.Tensor.outer": [[460, "torch-tensor-outer"]], "torch.Tensor.q_per_channel_axis": [[471, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.pinverse": [[463, "torch-tensor-pinverse"]], "torch.Tensor.q_per_channel_zero_points": [[473, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.prod": [[469, "torch-tensor-prod"]], "torch.Tensor.real": [[482, "torch-tensor-real"]], "torch.Tensor.round": [[506, "torch-tensor-round"]], "torch.Tensor.reshape_as": [[497, "torch-tensor-reshape-as"]], "torch.Tensor.register_hook": [[486, "torch-tensor-register-hook"]], "torch.Tensor.positive": [[466, "torch-tensor-positive"]], "torch.Tensor.roll": [[504, "torch-tensor-roll"]], "torch.Tensor.put_": [[470, "torch-tensor-put"]], "torch.Tensor.rsqrt": [[509, "torch-tensor-rsqrt"]], "torch.Tensor.remainder_": [[489, "torch-tensor-remainder"]], "torch.Tensor.retain_grad": [[502, "torch-tensor-retain-grad"]], "torch.Tensor.resize_": [[498, "torch-tensor-resize"]], "torch.Tensor.q_per_channel_scales": [[472, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.requires_grad_": [[495, "torch-tensor-requires-grad"]], "torch.Tensor.repeat": [[492, "torch-tensor-repeat"]], "torch.Tensor.record_stream": [[485, "torch-tensor-record-stream"]], "torch.Tensor.qr": [[476, "torch-tensor-qr"]], "torch.Tensor.round_": [[507, "torch-tensor-round"]], "torch.Tensor.ormqr": [[459, "torch-tensor-ormqr"]], "torch.Tensor.renorm": [[490, "torch-tensor-renorm"]], "torch.Tensor.mean": [[408, "torch-tensor-mean"]], "torch.Tensor.new_empty": [[444, "torch-tensor-new-empty"]], "torch.Tensor.new_zeros": [[448, "torch-tensor-new-zeros"]], "torch.Tensor.nanmean": [[428, "torch-tensor-nanmean"]], "torch.Tensor.numpy": [[457, "torch-tensor-numpy"]], "torch.Tensor.median": [[409, "torch-tensor-median"]], "torch.Tensor.nbytes": [[434, "torch-tensor-nbytes"]], "torch.Tensor.new_ones": [[446, "torch-tensor-new-ones"]], "torch.Tensor.norm": [[452, "torch-tensor-norm"]], "torch.Tensor.mm": [[412, "torch-tensor-mm"]], "torch.Tensor.moveaxis": [[415, "torch-tensor-moveaxis"]], "torch.Tensor.not_equal": [[454, "torch-tensor-not-equal"]], "torch.Tensor.mvlgamma_": [[425, "torch-tensor-mvlgamma"]], "torch.Tensor.mvlgamma": [[424, "torch-tensor-mvlgamma"]], "torch.Tensor.multiply": [[421, "torch-tensor-multiply"]], "torch.Tensor.nansum": [[431, "torch-tensor-nansum"]], "torch.Tensor.new_full": [[445, "torch-tensor-new-full"]], "torch.Tensor.nanmedian": [[429, "torch-tensor-nanmedian"]], "torch.Tensor.nextafter": [[449, "torch-tensor-nextafter"]], "torch.Tensor.numel": [[456, "torch-tensor-numel"]], "torch.Tensor.mv": [[423, "torch-tensor-mv"]], "torch.Tensor.multinomial": [[420, "torch-tensor-multinomial"]], "torch.Tensor.narrow_copy": [[433, "torch-tensor-narrow-copy"]], "torch.Tensor.mul_": [[419, "torch-tensor-mul"]], "torch.Tensor.negative_": [[442, "torch-tensor-negative"]], "torch.Tensor.nextafter_": [[450, "torch-tensor-nextafter"]], "torch.Tensor.multiply_": [[422, "torch-tensor-multiply"]], "torch.Tensor.nan_to_num_": [[427, "torch-tensor-nan-to-num"]], "torch.Tensor.neg": [[439, "torch-tensor-neg"]], "torch.Tensor.min": [[410, "torch-tensor-min"]], "torch.Tensor.normal_": [[453, "torch-tensor-normal"]], "torch.Tensor.new_tensor": [[447, "torch-tensor-new-tensor"]], "torch.Tensor.msort": [[417, "torch-tensor-msort"]], "torch.Tensor.ndim": [[435, "torch-tensor-ndim"]], "torch.Tensor.mul": [[418, "torch-tensor-mul"]], "torch.Tensor.nonzero": [[451, "torch-tensor-nonzero"]], "torch.Tensor.ne_": [[438, "torch-tensor-ne"]], "torch.Tensor.negative": [[441, "torch-tensor-negative"]], "torch.Tensor.orgqr": [[458, "torch-tensor-orgqr"]], "torch.Tensor.mode": [[413, "torch-tensor-mode"]], "torch.Tensor.ne": [[437, "torch-tensor-ne"]], "torch.Tensor.narrow": [[432, "torch-tensor-narrow"]], "torch.Tensor.nanquantile": [[430, "torch-tensor-nanquantile"]], "torch.Tensor.nan_to_num": [[426, "torch-tensor-nan-to-num"]], "torch.Tensor.minimum": [[411, "torch-tensor-minimum"]], "torch.Tensor.movedim": [[416, "torch-tensor-movedim"]], "torch.Tensor.neg_": [[440, "torch-tensor-neg"]], "torch.Tensor.module_load": [[414, "torch-tensor-module-load"]], "torch.Tensor.ndimension": [[436, "torch-tensor-ndimension"]], "torch.Tensor.not_equal_": [[455, "torch-tensor-not-equal"]], "torch.Tensor.nelement": [[443, "torch-tensor-nelement"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "module": [[0, "module-torch.amp"], [0, "module-torch.amp.autocast_mode"], [0, "module-torch.amp.grad_scaler"], [0, "module-torch.cpu.amp"], [0, "module-torch.cpu.amp.autocast_mode"], [0, "module-torch.cpu.amp.grad_scaler"], [0, "module-torch.cuda.amp"], [0, "module-torch.cuda.amp.autocast_mode"], [0, "module-torch.cuda.amp.common"], [0, "module-torch.cuda.amp.grad_scaler"], [1, "module-torch.autograd"], [1, "module-torch.autograd.anomaly_mode"], [1, "module-torch.autograd.forward_ad"], [1, "module-torch.autograd.function"], [1, "module-torch.autograd.functional"], [1, "module-torch.autograd.grad_mode"], [1, "module-torch.autograd.gradcheck"], [1, "module-torch.autograd.graph"], [1, "module-torch.autograd.profiler"], [1, "module-torch.autograd.profiler_legacy"], [1, "module-torch.autograd.profiler_util"], [1, "module-torch.autograd.variable"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.cudnn.rnn"], [2, "module-torch.backends.mha"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.nnpack"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xeon.run_cpu"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [13, "module-torch.__config__"], [16, "module-torch.cpu"], [17, "module-torch.cuda"], [17, "module-torch.cuda.comm"], [17, "module-torch.cuda.error"], [17, "module-torch.cuda.graphs"], [17, "module-torch.cuda.jiterator"], [17, "module-torch.cuda.memory"], [17, "module-torch.cuda.nccl"], [17, "module-torch.cuda.nvtx"], [17, "module-torch.cuda.profiler"], [17, "module-torch.cuda.random"], [17, "module-torch.cuda.sparse"], [17, "module-torch.cuda.streams"], [18, "module-torch.cuda._sanitizer"], [22, "module-torch.utils.data"], [22, "module-torch.utils.data.datapipes"], [22, "module-torch.utils.data.datapipes.dataframe"], [22, "module-torch.utils.data.datapipes.iter"], [22, "module-torch.utils.data.datapipes.map"], [22, "module-torch.utils.data.datapipes.utils"], [26, "module-torch.utils.deterministic"], [27, "module-torch.distributed"], [27, "module-torch.distributed.algorithms"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"], [27, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"], [27, "module-torch.distributed.algorithms.join"], [27, "module-torch.distributed.algorithms.model_averaging"], [27, "module-torch.distributed.algorithms.model_averaging.averagers"], [27, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"], [27, "module-torch.distributed.algorithms.model_averaging.utils"], [27, "module-torch.distributed.argparse_util"], [27, "module-torch.distributed.c10d_logger"], [27, "module-torch.distributed.checkpoint.api"], [27, "module-torch.distributed.checkpoint.default_planner"], [27, "module-torch.distributed.checkpoint.filesystem"], [27, "module-torch.distributed.checkpoint.metadata"], [27, "module-torch.distributed.checkpoint.optimizer"], [27, "module-torch.distributed.checkpoint.planner"], [27, "module-torch.distributed.checkpoint.planner_helpers"], [27, "module-torch.distributed.checkpoint.resharding"], [27, "module-torch.distributed.checkpoint.state_dict"], [27, "module-torch.distributed.checkpoint.state_dict_loader"], [27, "module-torch.distributed.checkpoint.state_dict_saver"], [27, "module-torch.distributed.checkpoint.stateful"], [27, "module-torch.distributed.checkpoint.storage"], [27, "module-torch.distributed.checkpoint.utils"], [27, "module-torch.distributed.collective_utils"], [27, "module-torch.distributed.constants"], [27, "module-torch.distributed.device_mesh"], [27, "module-torch.distributed.distributed_c10d"], [27, "module-torch.distributed.elastic"], [27, "module-torch.distributed.elastic.agent.server.api"], [27, "module-torch.distributed.elastic.agent.server.local_elastic_agent"], [27, "module-torch.distributed.elastic.events.api"], [27, "module-torch.distributed.elastic.events.handlers"], [27, "module-torch.distributed.elastic.metrics.api"], [27, "module-torch.distributed.elastic.multiprocessing.api"], [27, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"], [27, "module-torch.distributed.elastic.multiprocessing.errors.handlers"], [27, "module-torch.distributed.elastic.multiprocessing.redirects"], [27, "module-torch.distributed.elastic.multiprocessing.tail_log"], [27, "module-torch.distributed.elastic.rendezvous.api"], [27, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"], [27, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"], [27, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"], [27, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"], [27, "module-torch.distributed.elastic.rendezvous.etcd_server"], [27, "module-torch.distributed.elastic.rendezvous.etcd_store"], [27, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"], [27, "module-torch.distributed.elastic.rendezvous.utils"], [27, "module-torch.distributed.elastic.timer.api"], [27, "module-torch.distributed.elastic.timer.file_based_local_timer"], [27, "module-torch.distributed.elastic.timer.local_timer"], [27, "module-torch.distributed.elastic.utils"], [27, "module-torch.distributed.elastic.utils.api"], [27, "module-torch.distributed.elastic.utils.data"], [27, "module-torch.distributed.elastic.utils.data.cycling_iterator"], [27, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"], [27, "module-torch.distributed.elastic.utils.distributed"], [27, "module-torch.distributed.elastic.utils.log_level"], [27, "module-torch.distributed.elastic.utils.logging"], [27, "module-torch.distributed.elastic.utils.store"], [27, "module-torch.distributed.fsdp.api"], [27, "module-torch.distributed.fsdp.fully_sharded_data_parallel"], [27, "module-torch.distributed.fsdp.sharded_grad_scaler"], [27, "module-torch.distributed.fsdp.wrap"], [27, "module-torch.distributed.launch"], [27, "module-torch.distributed.launcher"], [27, "module-torch.distributed.launcher.api"], [27, "module-torch.distributed.logging_handlers"], [27, "module-torch.distributed.nn"], [27, "module-torch.distributed.nn.api"], [27, "module-torch.distributed.nn.api.remote_module"], [27, "module-torch.distributed.nn.functional"], [27, "module-torch.distributed.nn.jit"], [27, "module-torch.distributed.nn.jit.instantiator"], [27, "module-torch.distributed.nn.jit.templates"], [27, "module-torch.distributed.nn.jit.templates.remote_module_template"], [27, "module-torch.distributed.optim.apply_optimizer_in_backward"], [27, "module-torch.distributed.optim.functional_adadelta"], [27, "module-torch.distributed.optim.functional_adagrad"], [27, "module-torch.distributed.optim.functional_adam"], [27, "module-torch.distributed.optim.functional_adamax"], [27, "module-torch.distributed.optim.functional_adamw"], [27, "module-torch.distributed.optim.functional_rmsprop"], [27, "module-torch.distributed.optim.functional_rprop"], [27, "module-torch.distributed.optim.functional_sgd"], [27, "module-torch.distributed.optim.named_optimizer"], [27, "module-torch.distributed.optim.optimizer"], [27, "module-torch.distributed.optim.post_localSGD_optimizer"], [27, "module-torch.distributed.optim.utils"], [27, "module-torch.distributed.optim.zero_redundancy_optimizer"], [27, "module-torch.distributed.pipeline"], [27, "module-torch.distributed.pipeline.sync"], [27, "module-torch.distributed.pipeline.sync.batchnorm"], [27, "module-torch.distributed.pipeline.sync.checkpoint"], [27, "module-torch.distributed.pipeline.sync.copy"], [27, "module-torch.distributed.pipeline.sync.dependency"], [27, "module-torch.distributed.pipeline.sync.microbatch"], [27, "module-torch.distributed.pipeline.sync.phony"], [27, "module-torch.distributed.pipeline.sync.pipe"], [27, "module-torch.distributed.pipeline.sync.pipeline"], [27, "module-torch.distributed.pipeline.sync.skip"], [27, "module-torch.distributed.pipeline.sync.skip.layout"], [27, "module-torch.distributed.pipeline.sync.skip.namespace"], [27, "module-torch.distributed.pipeline.sync.skip.portal"], [27, "module-torch.distributed.pipeline.sync.skip.skippable"], [27, "module-torch.distributed.pipeline.sync.skip.tracker"], [27, "module-torch.distributed.pipeline.sync.stream"], [27, "module-torch.distributed.pipeline.sync.utils"], [27, "module-torch.distributed.pipeline.sync.worker"], [27, "module-torch.distributed.remote_device"], [27, "module-torch.distributed.rendezvous"], [27, "module-torch.distributed.rpc.api"], [27, "module-torch.distributed.rpc.backend_registry"], [27, "module-torch.distributed.rpc.constants"], [27, "module-torch.distributed.rpc.functions"], [27, "module-torch.distributed.rpc.internal"], [27, "module-torch.distributed.rpc.options"], [27, "module-torch.distributed.rpc.rref_proxy"], [27, "module-torch.distributed.rpc.server_process_global_profiler"], [27, "module-torch.distributed.tensor"], [27, "module-torch.distributed.tensor.parallel.api"], [27, "module-torch.distributed.tensor.parallel.ddp"], [27, "module-torch.distributed.tensor.parallel.fsdp"], [27, "module-torch.distributed.tensor.parallel.input_reshard"], [27, "module-torch.distributed.tensor.parallel.loss"], [27, "module-torch.distributed.tensor.parallel.style"], [27, "module-torch.distributed.utils"], [29, "module-torch.distributed.checkpoint"], [29, "module-torch.distributed.checkpoint.format_utils"], [29, "module-torch.distributed.checkpoint.logger"], [29, "module-torch.distributed.checkpoint.logging_handlers"], [31, "module-torch.distributed.optim"], [32, "module-torch.distributed.tensor.parallel"], [33, "module-torch.distributions"], [33, "module-torch.distributions.bernoulli"], [33, "module-torch.distributions.beta"], [33, "module-torch.distributions.binomial"], [33, "module-torch.distributions.categorical"], [33, "module-torch.distributions.cauchy"], [33, "module-torch.distributions.chi2"], [33, "module-torch.distributions.constraint_registry"], [33, "module-torch.distributions.constraints"], [33, "module-torch.distributions.continuous_bernoulli"], [33, "module-torch.distributions.dirichlet"], [33, "module-torch.distributions.distribution"], [33, "module-torch.distributions.exp_family"], [33, "module-torch.distributions.exponential"], [33, "module-torch.distributions.fishersnedecor"], [33, "module-torch.distributions.gamma"], [33, "module-torch.distributions.geometric"], [33, "module-torch.distributions.gumbel"], [33, "module-torch.distributions.half_cauchy"], [33, "module-torch.distributions.half_normal"], [33, "module-torch.distributions.independent"], [33, "module-torch.distributions.inverse_gamma"], [33, "module-torch.distributions.kl"], [33, "module-torch.distributions.kumaraswamy"], [33, "module-torch.distributions.laplace"], [33, "module-torch.distributions.lkj_cholesky"], [33, "module-torch.distributions.log_normal"], [33, "module-torch.distributions.logistic_normal"], [33, "module-torch.distributions.lowrank_multivariate_normal"], [33, "module-torch.distributions.mixture_same_family"], [33, "module-torch.distributions.multinomial"], [33, "module-torch.distributions.multivariate_normal"], [33, "module-torch.distributions.negative_binomial"], [33, "module-torch.distributions.normal"], [33, "module-torch.distributions.one_hot_categorical"], [33, "module-torch.distributions.pareto"], [33, "module-torch.distributions.poisson"], [33, "module-torch.distributions.relaxed_bernoulli"], [33, "module-torch.distributions.relaxed_categorical"], [33, "module-torch.distributions.studentT"], [33, "module-torch.distributions.transformed_distribution"], [33, "module-torch.distributions.transforms"], [33, "module-torch.distributions.uniform"], [33, "module-torch.distributions.utils"], [33, "module-torch.distributions.von_mises"], [33, "module-torch.distributions.weibull"], [33, "module-torch.distributions.wishart"], [35, "module-torch.distributed.elastic.agent"], [35, "module-torch.distributed.elastic.agent.server"], [35, "module-torch.distributed.elastic.agent.server.health_check_server"], [37, "module-torch.distributed.elastic.multiprocessing.errors"], [38, "module-torch.distributed.elastic.events"], [41, "module-torch.distributed.elastic.metrics"], [42, "module-torch.distributed.elastic.multiprocessing"], [44, "module-torch.distributed.elastic.rendezvous"], [44, "module-torch.distributed.elastic.rendezvous.registry"], [45, "module-torch.distributed.run"], [46, "module-torch.distributed.elastic.multiprocessing.subprocess_handler"], [46, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.handlers"], [46, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler"], [47, "module-torch.distributed.elastic.timer"], [49, "module-torch.export"], [49, "module-torch.export.custom_obj"], [49, "module-torch.export.dynamic_shapes"], [49, "module-torch.export.exported_program"], [49, "module-torch.export.graph_signature"], [49, "module-torch.export.unflatten"], [51, "module-torch.fft"], [52, "module-torch.distributed.fsdp"], [54, "module-torch.func"], [59, "module-torch.__future__"], [60, "module-torch.futures"], [61, "module-torch.fx"], [61, "module-torch.fx.annotate"], [61, "module-torch.fx.config"], [61, "module-torch.fx.experimental"], [61, "module-torch.fx.experimental.accelerator_partitioner"], [61, "module-torch.fx.experimental.const_fold"], [61, "module-torch.fx.experimental.debug"], [61, "module-torch.fx.experimental.graph_gradual_typechecker"], [61, "module-torch.fx.experimental.merge_matmul"], [61, "module-torch.fx.experimental.meta_tracer"], [61, "module-torch.fx.experimental.migrate_gradual_types"], [61, "module-torch.fx.experimental.migrate_gradual_types.constraint"], [61, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"], [61, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"], [61, "module-torch.fx.experimental.migrate_gradual_types.operation"], [61, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"], [61, "module-torch.fx.experimental.migrate_gradual_types.util"], [61, "module-torch.fx.experimental.migrate_gradual_types.z3_types"], [61, "module-torch.fx.experimental.normalize"], [61, "module-torch.fx.experimental.optimization"], [61, "module-torch.fx.experimental.partitioner_utils"], [61, "module-torch.fx.experimental.proxy_tensor"], [61, "module-torch.fx.experimental.recording"], [61, "module-torch.fx.experimental.refinement_types"], [61, "module-torch.fx.experimental.rewriter"], [61, "module-torch.fx.experimental.schema_type_annotation"], [61, "module-torch.fx.experimental.sym_node"], [61, "module-torch.fx.experimental.unification"], [61, "module-torch.fx.experimental.unification.core"], [61, "module-torch.fx.experimental.unification.dispatch"], [61, "module-torch.fx.experimental.unification.match"], [61, "module-torch.fx.experimental.unification.more"], [61, "module-torch.fx.experimental.unification.multipledispatch"], [61, "module-torch.fx.experimental.unification.multipledispatch.conflict"], [61, "module-torch.fx.experimental.unification.multipledispatch.core"], [61, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"], [61, "module-torch.fx.experimental.unification.multipledispatch.utils"], [61, "module-torch.fx.experimental.unification.multipledispatch.variadic"], [61, "module-torch.fx.experimental.unification.unification_tools"], [61, "module-torch.fx.experimental.unification.utils"], [61, "module-torch.fx.experimental.unification.variable"], [61, "module-torch.fx.experimental.unify_refinements"], [61, "module-torch.fx.experimental.validator"], [61, "module-torch.fx.graph"], [61, "module-torch.fx.graph_module"], [61, "module-torch.fx.immutable_collections"], [61, "module-torch.fx.interpreter"], [61, "module-torch.fx.node"], [61, "module-torch.fx.operator_schemas"], [61, "module-torch.fx.passes"], [61, "module-torch.fx.passes.annotate_getitem_nodes"], [61, "module-torch.fx.passes.backends"], [61, "module-torch.fx.passes.backends.cudagraphs"], [61, "module-torch.fx.passes.dialect"], [61, "module-torch.fx.passes.dialect.common"], [61, "module-torch.fx.passes.dialect.common.cse_pass"], [61, "module-torch.fx.passes.fake_tensor_prop"], [61, "module-torch.fx.passes.graph_drawer"], [61, "module-torch.fx.passes.graph_manipulation"], [61, "module-torch.fx.passes.infra"], [61, "module-torch.fx.passes.infra.partitioner"], [61, "module-torch.fx.passes.infra.pass_base"], [61, "module-torch.fx.passes.infra.pass_manager"], [61, "module-torch.fx.passes.net_min_base"], [61, "module-torch.fx.passes.operator_support"], [61, "module-torch.fx.passes.param_fetch"], [61, "module-torch.fx.passes.pass_manager"], [61, "module-torch.fx.passes.reinplace"], [61, "module-torch.fx.passes.runtime_assert"], [61, "module-torch.fx.passes.shape_prop"], [61, "module-torch.fx.passes.split_module"], [61, "module-torch.fx.passes.split_utils"], [61, "module-torch.fx.passes.splitter_base"], [61, "module-torch.fx.passes.tests"], [61, "module-torch.fx.passes.tests.test_pass_manager"], [61, "module-torch.fx.passes.tools_common"], [61, "module-torch.fx.passes.utils"], [61, "module-torch.fx.passes.utils.common"], [61, "module-torch.fx.passes.utils.fuser_utils"], [61, "module-torch.fx.passes.utils.matcher_utils"], [61, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"], [61, "module-torch.fx.passes.utils.source_matcher_utils"], [61, "module-torch.fx.proxy"], [61, "module-torch.fx.subgraph_rewriter"], [61, "module-torch.fx.tensor_type"], [61, "module-torch.fx.traceback"], [62, "module-torch.fx.experimental.symbolic_shapes"], [2004, "module-torch.hub"], [2006, "module-torch.jit"], [2006, "module-torch.jit.annotations"], [2006, "module-torch.jit.frontend"], [2006, "module-torch.jit.generate_bytecode"], [2006, "module-torch.jit.mobile"], [2006, "module-torch.jit.quantized"], [2007, "module-torch.jit.supported_ops"], [2011, "module-torch.jit.unsupported_tensor_ops"], [2012, "module-torch.utils.jit"], [2013, "module-torch.library"], [2014, "module-torch.linalg"], [2015, "module-torch._logging"], [2016, "module-torch.masked"], [2016, "module-torch.masked.maskedtensor"], [2016, "module-torch.masked.maskedtensor.binary"], [2016, "module-torch.masked.maskedtensor.core"], [2016, "module-torch.masked.maskedtensor.creation"], [2016, "module-torch.masked.maskedtensor.passthrough"], [2016, "module-torch.masked.maskedtensor.reductions"], [2016, "module-torch.masked.maskedtensor.unary"], [2020, "module-torch.utils.model_zoo"], [2021, "module-torch.monitor"], [2022, "module-torch.mps"], [2022, "module-torch.mps.event"], [2022, "module-torch.mps.profiler"], [2023, "module-torch.mtia"], [2024, "module-torch.multiprocessing"], [2024, "module-torch.multiprocessing.pool"], [2024, "module-torch.multiprocessing.queue"], [2024, "module-torch.multiprocessing.reductions"], [2024, "module-torch.multiprocessing.spawn"], [2027, "module-torch.nested"], [2028, "module-torch.nn"], [2028, "module-torch.nn.backends"], [2028, "module-torch.nn.backends.thnn"], [2028, "module-torch.nn.common_types"], [2028, "module-torch.nn.cpp"], [2028, "module-torch.nn.functional"], [2028, "module-torch.nn.grad"], [2028, "module-torch.nn.init"], [2028, "module-torch.nn.modules"], [2028, "module-torch.nn.modules.activation"], [2028, "module-torch.nn.modules.adaptive"], [2028, "module-torch.nn.modules.batchnorm"], [2028, "module-torch.nn.modules.channelshuffle"], [2028, "module-torch.nn.modules.container"], [2028, "module-torch.nn.modules.conv"], [2028, "module-torch.nn.modules.distance"], [2028, "module-torch.nn.modules.dropout"], [2028, "module-torch.nn.modules.flatten"], [2028, "module-torch.nn.modules.fold"], [2028, "module-torch.nn.modules.instancenorm"], [2028, "module-torch.nn.modules.lazy"], [2028, "module-torch.nn.modules.linear"], [2028, "module-torch.nn.modules.loss"], [2028, "module-torch.nn.modules.module"], [2028, "module-torch.nn.modules.normalization"], [2028, "module-torch.nn.modules.padding"], [2028, "module-torch.nn.modules.pixelshuffle"], [2028, "module-torch.nn.modules.pooling"], [2028, "module-torch.nn.modules.rnn"], [2028, "module-torch.nn.modules.sparse"], [2028, "module-torch.nn.modules.transformer"], [2028, "module-torch.nn.modules.upsampling"], [2028, "module-torch.nn.modules.utils"], [2028, "module-torch.nn.parallel"], [2028, "module-torch.nn.parallel.comm"], [2028, "module-torch.nn.parallel.distributed"], [2028, "module-torch.nn.parallel.parallel_apply"], [2028, "module-torch.nn.parallel.replicate"], [2028, "module-torch.nn.parallel.scatter_gather"], [2028, "module-torch.nn.parameter"], [2028, "module-torch.nn.utils"], [2028, "module-torch.nn.utils.clip_grad"], [2028, "module-torch.nn.utils.convert_parameters"], [2028, "module-torch.nn.utils.fusion"], [2028, "module-torch.nn.utils.init"], [2028, "module-torch.nn.utils.memory_format"], [2028, "module-torch.nn.utils.parametrizations"], [2028, "module-torch.nn.utils.parametrize"], [2028, "module-torch.nn.utils.prune"], [2028, "module-torch.nn.utils.rnn"], [2028, "module-torch.nn.utils.stateless"], [2029, "module-torch.nn.attention"], [2030, "module-torch.nn.attention.bias"], [2053, "module-torch.onnx.errors"], [2053, "module-torch.onnx.operators"], [2053, "module-torch.onnx.symbolic_caffe2"], [2053, "module-torch.onnx.symbolic_helper"], [2053, "module-torch.onnx.symbolic_opset10"], [2053, "module-torch.onnx.symbolic_opset11"], [2053, "module-torch.onnx.symbolic_opset12"], [2053, "module-torch.onnx.symbolic_opset13"], [2053, "module-torch.onnx.symbolic_opset14"], [2053, "module-torch.onnx.symbolic_opset15"], [2053, "module-torch.onnx.symbolic_opset16"], [2053, "module-torch.onnx.symbolic_opset17"], [2053, "module-torch.onnx.symbolic_opset18"], [2053, "module-torch.onnx.symbolic_opset19"], [2053, "module-torch.onnx.symbolic_opset20"], [2053, "module-torch.onnx.symbolic_opset7"], [2053, "module-torch.onnx.symbolic_opset8"], [2053, "module-torch.onnx.symbolic_opset9"], [2053, "module-torch.onnx.utils"], [2053, "module-torch.onnx.verification"], [2056, "module-torch.onnx"], [2058, "module-torch.optim"], [2058, "module-torch.optim.adadelta"], [2058, "module-torch.optim.adagrad"], [2058, "module-torch.optim.adam"], [2058, "module-torch.optim.adamax"], [2058, "module-torch.optim.adamw"], [2058, "module-torch.optim.asgd"], [2058, "module-torch.optim.lbfgs"], [2058, "module-torch.optim.lr_scheduler"], [2058, "module-torch.optim.nadam"], [2058, "module-torch.optim.optimizer"], [2058, "module-torch.optim.radam"], [2058, "module-torch.optim.rmsprop"], [2058, "module-torch.optim.rprop"], [2058, "module-torch.optim.sgd"], [2058, "module-torch.optim.sparse_adam"], [2058, "module-torch.optim.swa_utils"], [2059, "module-torch.package"], [2059, "module-torch.package.analyze"], [2059, "module-torch.package.analyze.find_first_use_of_broken_modules"], [2059, "module-torch.package.analyze.is_from_package"], [2059, "module-torch.package.analyze.trace_dependencies"], [2059, "module-torch.package.file_structure_representation"], [2059, "module-torch.package.find_file_dependencies"], [2059, "module-torch.package.glob_group"], [2059, "module-torch.package.importer"], [2059, "module-torch.package.package_exporter"], [2059, "module-torch.package.package_importer"], [2061, "module-torch.profiler"], [2061, "module-torch.profiler.itt"], [2061, "module-torch.profiler.profiler"], [2061, "module-torch.profiler.python_tracer"], [2062, "module-torch.ao"], [2062, "module-torch.ao.nn"], [2062, "module-torch.ao.nn.intrinsic.modules.fused"], [2062, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"], [2062, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"], [2062, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"], [2062, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2062, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"], [2062, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"], [2062, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"], [2062, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"], [2062, "module-torch.ao.nn.qat.dynamic.modules.linear"], [2062, "module-torch.ao.nn.qat.modules.conv"], [2062, "module-torch.ao.nn.qat.modules.embedding_ops"], [2062, "module-torch.ao.nn.qat.modules.linear"], [2062, "module-torch.ao.nn.quantizable"], [2062, "module-torch.ao.nn.quantizable.modules"], [2062, "module-torch.ao.nn.quantizable.modules.activation"], [2062, "module-torch.ao.nn.quantizable.modules.rnn"], [2062, "module-torch.ao.nn.quantized"], [2062, "module-torch.ao.nn.quantized.dynamic.modules.conv"], [2062, "module-torch.ao.nn.quantized.dynamic.modules.linear"], [2062, "module-torch.ao.nn.quantized.dynamic.modules.rnn"], [2062, "module-torch.ao.nn.quantized.modules.activation"], [2062, "module-torch.ao.nn.quantized.modules.batchnorm"], [2062, "module-torch.ao.nn.quantized.modules.conv"], [2062, "module-torch.ao.nn.quantized.modules.dropout"], [2062, "module-torch.ao.nn.quantized.modules.embedding_ops"], [2062, "module-torch.ao.nn.quantized.modules.functional_modules"], [2062, "module-torch.ao.nn.quantized.modules.linear"], [2062, "module-torch.ao.nn.quantized.modules.normalization"], [2062, "module-torch.ao.nn.quantized.modules.rnn"], [2062, "module-torch.ao.nn.quantized.modules.utils"], [2062, "module-torch.ao.nn.quantized.reference"], [2062, "module-torch.ao.nn.quantized.reference.modules"], [2062, "module-torch.ao.nn.quantized.reference.modules.conv"], [2062, "module-torch.ao.nn.quantized.reference.modules.linear"], [2062, "module-torch.ao.nn.quantized.reference.modules.rnn"], [2062, "module-torch.ao.nn.quantized.reference.modules.sparse"], [2062, "module-torch.ao.nn.quantized.reference.modules.utils"], [2062, "module-torch.ao.nn.sparse"], [2062, "module-torch.ao.nn.sparse.quantized"], [2062, "module-torch.ao.nn.sparse.quantized.dynamic"], [2062, "module-torch.ao.nn.sparse.quantized.dynamic.linear"], [2062, "module-torch.ao.nn.sparse.quantized.linear"], [2062, "module-torch.ao.nn.sparse.quantized.utils"], [2062, "module-torch.ao.ns"], [2062, "module-torch.ao.ns.fx"], [2062, "module-torch.ao.ns.fx.graph_matcher"], [2062, "module-torch.ao.ns.fx.graph_passes"], [2062, "module-torch.ao.ns.fx.mappings"], [2062, "module-torch.ao.ns.fx.n_shadows_utils"], [2062, "module-torch.ao.ns.fx.ns_types"], [2062, "module-torch.ao.ns.fx.pattern_utils"], [2062, "module-torch.ao.ns.fx.qconfig_multi_mapping"], [2062, "module-torch.ao.ns.fx.utils"], [2062, "module-torch.ao.ns.fx.weight_utils"], [2062, "module-torch.ao.pruning"], [2062, "module-torch.ao.pruning.scheduler"], [2062, "module-torch.ao.pruning.scheduler.base_scheduler"], [2062, "module-torch.ao.pruning.scheduler.cubic_scheduler"], [2062, "module-torch.ao.pruning.scheduler.lambda_scheduler"], [2062, "module-torch.ao.pruning.sparsifier"], [2062, "module-torch.ao.pruning.sparsifier.base_sparsifier"], [2062, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"], [2062, "module-torch.ao.pruning.sparsifier.utils"], [2062, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"], [2062, "module-torch.ao.quantization"], [2062, "module-torch.ao.quantization.backend_config"], [2062, "module-torch.ao.quantization.backend_config.backend_config"], [2062, "module-torch.ao.quantization.backend_config.executorch"], [2062, "module-torch.ao.quantization.backend_config.fbgemm"], [2062, "module-torch.ao.quantization.backend_config.native"], [2062, "module-torch.ao.quantization.backend_config.observation_type"], [2062, "module-torch.ao.quantization.backend_config.onednn"], [2062, "module-torch.ao.quantization.backend_config.qnnpack"], [2062, "module-torch.ao.quantization.backend_config.tensorrt"], [2062, "module-torch.ao.quantization.backend_config.utils"], [2062, "module-torch.ao.quantization.backend_config.x86"], [2062, "module-torch.ao.quantization.fake_quantize"], [2062, "module-torch.ao.quantization.fuse_modules"], [2062, "module-torch.ao.quantization.fuser_method_mappings"], [2062, "module-torch.ao.quantization.fx"], [2062, "module-torch.ao.quantization.fx.convert"], [2062, "module-torch.ao.quantization.fx.custom_config"], [2062, "module-torch.ao.quantization.fx.fuse"], [2062, "module-torch.ao.quantization.fx.fuse_handler"], [2062, "module-torch.ao.quantization.fx.graph_module"], [2062, "module-torch.ao.quantization.fx.lower_to_fbgemm"], [2062, "module-torch.ao.quantization.fx.lower_to_qnnpack"], [2062, "module-torch.ao.quantization.fx.lstm_utils"], [2062, "module-torch.ao.quantization.fx.match_utils"], [2062, "module-torch.ao.quantization.fx.pattern_utils"], [2062, "module-torch.ao.quantization.fx.prepare"], [2062, "module-torch.ao.quantization.fx.qconfig_mapping_utils"], [2062, "module-torch.ao.quantization.fx.quantize_handler"], [2062, "module-torch.ao.quantization.fx.tracer"], [2062, "module-torch.ao.quantization.fx.utils"], [2062, "module-torch.ao.quantization.observer"], [2062, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"], [2062, "module-torch.ao.quantization.pt2e.export_utils"], [2062, "module-torch.ao.quantization.pt2e.graph_utils"], [2062, "module-torch.ao.quantization.pt2e.port_metadata_pass"], [2062, "module-torch.ao.quantization.pt2e.prepare"], [2062, "module-torch.ao.quantization.pt2e.qat_utils"], [2062, "module-torch.ao.quantization.pt2e.representation.rewrite"], [2062, "module-torch.ao.quantization.pt2e.utils"], [2062, "module-torch.ao.quantization.qconfig"], [2062, "module-torch.ao.quantization.qconfig_mapping"], [2062, "module-torch.ao.quantization.quant_type"], [2062, "module-torch.ao.quantization.quantization_mappings"], [2062, "module-torch.ao.quantization.quantize_fx"], [2062, "module-torch.ao.quantization.quantize_jit"], [2062, "module-torch.ao.quantization.quantize_pt2e"], [2062, "module-torch.ao.quantization.quantizer.composable_quantizer"], [2062, "module-torch.ao.quantization.quantizer.embedding_quantizer"], [2062, "module-torch.ao.quantization.quantizer.quantizer"], [2062, "module-torch.ao.quantization.quantizer.utils"], [2062, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"], [2062, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"], [2062, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"], [2062, "module-torch.ao.quantization.stubs"], [2062, "module-torch.ao.quantization.utils"], [2062, "module-torch.nn.intrinsic.modules.fused"], [2062, "module-torch.nn.intrinsic.qat.modules.conv_fused"], [2062, "module-torch.nn.intrinsic.qat.modules.linear_fused"], [2062, "module-torch.nn.intrinsic.qat.modules.linear_relu"], [2062, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"], [2062, "module-torch.nn.intrinsic.quantized.modules.bn_relu"], [2062, "module-torch.nn.intrinsic.quantized.modules.conv_relu"], [2062, "module-torch.nn.intrinsic.quantized.modules.linear_relu"], [2062, "module-torch.nn.qat.dynamic.modules.linear"], [2062, "module-torch.nn.qat.modules.conv"], [2062, "module-torch.nn.qat.modules.embedding_ops"], [2062, "module-torch.nn.qat.modules.linear"], [2062, "module-torch.nn.quantizable.modules.activation"], [2062, "module-torch.nn.quantizable.modules.rnn"], [2062, "module-torch.nn.quantized.dynamic.modules.conv"], [2062, "module-torch.nn.quantized.dynamic.modules.linear"], [2062, "module-torch.nn.quantized.dynamic.modules.rnn"], [2062, "module-torch.nn.quantized.functional"], [2062, "module-torch.nn.quantized.modules.activation"], [2062, "module-torch.nn.quantized.modules.batchnorm"], [2062, "module-torch.nn.quantized.modules.conv"], [2062, "module-torch.nn.quantized.modules.dropout"], [2062, "module-torch.nn.quantized.modules.embedding_ops"], [2062, "module-torch.nn.quantized.modules.functional_modules"], [2062, "module-torch.nn.quantized.modules.linear"], [2062, "module-torch.nn.quantized.modules.normalization"], [2062, "module-torch.nn.quantized.modules.rnn"], [2062, "module-torch.nn.quantized.modules.utils"], [2062, "module-torch.quantization.fake_quantize"], [2062, "module-torch.quantization.fuse_modules"], [2062, "module-torch.quantization.fuser_method_mappings"], [2062, "module-torch.quantization.fx.convert"], [2062, "module-torch.quantization.fx.fuse"], [2062, "module-torch.quantization.fx.fusion_patterns"], [2062, "module-torch.quantization.fx.graph_module"], [2062, "module-torch.quantization.fx.match_utils"], [2062, "module-torch.quantization.fx.pattern_utils"], [2062, "module-torch.quantization.fx.prepare"], [2062, "module-torch.quantization.fx.quantization_patterns"], [2062, "module-torch.quantization.fx.quantization_types"], [2062, "module-torch.quantization.fx.utils"], [2062, "module-torch.quantization.observer"], [2062, "module-torch.quantization.qconfig"], [2062, "module-torch.quantization.quant_type"], [2062, "module-torch.quantization.quantization_mappings"], [2062, "module-torch.quantization.quantize"], [2062, "module-torch.quantization.quantize_fx"], [2062, "module-torch.quantization.quantize_jit"], [2062, "module-torch.quantization.stubs"], [2062, "module-torch.quantization.utils"], [2065, "module-torch.ao.nn.intrinsic"], [2065, "module-torch.ao.nn.intrinsic.modules"], [2065, "module-torch.ao.nn.intrinsic.qat"], [2065, "module-torch.ao.nn.intrinsic.qat.modules"], [2065, "module-torch.ao.nn.intrinsic.quantized"], [2065, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [2065, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [2065, "module-torch.ao.nn.intrinsic.quantized.modules"], [2065, "module-torch.ao.nn.qat"], [2065, "module-torch.ao.nn.qat.dynamic"], [2065, "module-torch.ao.nn.qat.dynamic.modules"], [2065, "module-torch.ao.nn.qat.modules"], [2065, "module-torch.ao.nn.quantized.dynamic"], [2065, "module-torch.ao.nn.quantized.dynamic.modules"], [2065, "module-torch.ao.nn.quantized.functional"], [2065, "module-torch.ao.nn.quantized.modules"], [2065, "module-torch.ao.quantization.pt2e"], [2065, "module-torch.ao.quantization.pt2e.generate_numeric_debug_handle"], [2065, "module-torch.ao.quantization.pt2e.representation"], [2065, "module-torch.ao.quantization.quantizer"], [2065, "module-torch.nn.intrinsic"], [2065, "module-torch.nn.intrinsic.modules"], [2065, "module-torch.nn.intrinsic.qat"], [2065, "module-torch.nn.intrinsic.qat.modules"], [2065, "module-torch.nn.intrinsic.quantized"], [2065, "module-torch.nn.intrinsic.quantized.dynamic"], [2065, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [2065, "module-torch.nn.intrinsic.quantized.modules"], [2065, "module-torch.nn.qat"], [2065, "module-torch.nn.qat.dynamic"], [2065, "module-torch.nn.qat.dynamic.modules"], [2065, "module-torch.nn.qat.modules"], [2065, "module-torch.nn.quantizable"], [2065, "module-torch.nn.quantizable.modules"], [2065, "module-torch.nn.quantized"], [2065, "module-torch.nn.quantized.dynamic"], [2065, "module-torch.nn.quantized.dynamic.modules"], [2065, "module-torch.nn.quantized.modules"], [2065, "module-torch.quantization"], [2065, "module-torch.quantization.fx"], [2066, "module-torch.random"], [2067, "module-torch.distributed.autograd"], [2067, "module-torch.distributed.rpc"], [2070, "module-torch.signal"], [2070, "module-torch.signal.windows"], [2072, "module-torch.sparse"], [2073, "module-torch.special"], [2077, "module-torch.utils.tensorboard"], [2079, "module-torch.testing"], [2081, "module-torch"], [2081, "module-torch.contrib"], [2081, "module-torch.functional"], [2081, "module-torch.quasirandom"], [2081, "module-torch.return_types"], [2081, "module-torch.serialization"], [2081, "module-torch.signal.windows.windows"], [2081, "module-torch.sparse.semi_structured"], [2081, "module-torch.storage"], [2081, "module-torch.torch_version"], [2081, "module-torch.types"], [2081, "module-torch.utils.backcompat"], [2081, "module-torch.utils.hipify"], [2081, "module-torch.utils.model_dump"], [2081, "module-torch.utils.viz"], [2081, "module-torch.version"], [2082, "module-torch.ao.ns._numeric_suite"], [2083, "module-torch.ao.ns._numeric_suite_fx"], [2086, "module-torch.compiler"], [2104, "module-torch.overrides"], [2108, "module-torch.utils"], [2108, "module-torch.utils.backend_registration"], [2108, "module-torch.utils.benchmark.examples.blas_compare_setup"], [2108, "module-torch.utils.benchmark.examples.compare"], [2108, "module-torch.utils.benchmark.examples.fuzzer"], [2108, "module-torch.utils.benchmark.examples.op_benchmark"], [2108, "module-torch.utils.benchmark.examples.simple_timeit"], [2108, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"], [2108, "module-torch.utils.benchmark.op_fuzzers.binary"], [2108, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"], [2108, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"], [2108, "module-torch.utils.benchmark.op_fuzzers.spectral"], [2108, "module-torch.utils.benchmark.op_fuzzers.unary"], [2108, "module-torch.utils.benchmark.utils.common"], [2108, "module-torch.utils.benchmark.utils.compare"], [2108, "module-torch.utils.benchmark.utils.compile"], [2108, "module-torch.utils.benchmark.utils.cpp_jit"], [2108, "module-torch.utils.benchmark.utils.fuzzer"], [2108, "module-torch.utils.benchmark.utils.sparse_fuzzer"], [2108, "module-torch.utils.benchmark.utils.timer"], [2108, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"], [2108, "module-torch.utils.bundled_inputs"], [2108, "module-torch.utils.checkpoint"], [2108, "module-torch.utils.collect_env"], [2108, "module-torch.utils.cpp_backtrace"], [2108, "module-torch.utils.cpp_extension"], [2108, "module-torch.utils.data.backward_compatibility"], [2108, "module-torch.utils.data.dataloader"], [2108, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"], [2108, "module-torch.utils.data.datapipes.dataframe.dataframes"], [2108, "module-torch.utils.data.datapipes.dataframe.datapipes"], [2108, "module-torch.utils.data.datapipes.dataframe.structures"], [2108, "module-torch.utils.data.datapipes.datapipe"], [2108, "module-torch.utils.data.datapipes.gen_pyi"], [2108, "module-torch.utils.data.datapipes.iter.callable"], [2108, "module-torch.utils.data.datapipes.iter.combinatorics"], [2108, "module-torch.utils.data.datapipes.iter.combining"], [2108, "module-torch.utils.data.datapipes.iter.filelister"], [2108, "module-torch.utils.data.datapipes.iter.fileopener"], [2108, "module-torch.utils.data.datapipes.iter.grouping"], [2108, "module-torch.utils.data.datapipes.iter.routeddecoder"], [2108, "module-torch.utils.data.datapipes.iter.selecting"], [2108, "module-torch.utils.data.datapipes.iter.sharding"], [2108, "module-torch.utils.data.datapipes.iter.streamreader"], [2108, "module-torch.utils.data.datapipes.iter.utils"], [2108, "module-torch.utils.data.datapipes.map.callable"], [2108, "module-torch.utils.data.datapipes.map.combinatorics"], [2108, "module-torch.utils.data.datapipes.map.combining"], [2108, "module-torch.utils.data.datapipes.map.grouping"], [2108, "module-torch.utils.data.datapipes.map.utils"], [2108, "module-torch.utils.data.datapipes.utils.common"], [2108, "module-torch.utils.data.datapipes.utils.decoder"], [2108, "module-torch.utils.data.datapipes.utils.snapshot"], [2108, "module-torch.utils.data.dataset"], [2108, "module-torch.utils.data.distributed"], [2108, "module-torch.utils.data.graph"], [2108, "module-torch.utils.data.graph_settings"], [2108, "module-torch.utils.data.sampler"], [2108, "module-torch.utils.dlpack"], [2108, "module-torch.utils.file_baton"], [2108, "module-torch.utils.flop_counter"], [2108, "module-torch.utils.hipify.constants"], [2108, "module-torch.utils.hipify.cuda_to_hip_mappings"], [2108, "module-torch.utils.hipify.hipify_python"], [2108, "module-torch.utils.hipify.version"], [2108, "module-torch.utils.hooks"], [2108, "module-torch.utils.jit.log_extract"], [2108, "module-torch.utils.mkldnn"], [2108, "module-torch.utils.mobile_optimizer"], [2108, "module-torch.utils.show_pickle"], [2108, "module-torch.utils.tensorboard.summary"], [2108, "module-torch.utils.tensorboard.writer"], [2108, "module-torch.utils.throughput_benchmark"], [2108, "module-torch.utils.weak"], [2109, "module-torch.xpu"], [2109, "module-torch.xpu.random"], [2109, "module-torch.xpu.streams"]], "torch.amp": [[0, "module-torch.amp"]], "torch.amp.autocast_mode": [[0, "module-torch.amp.autocast_mode"]], "torch.amp.grad_scaler": [[0, "module-torch.amp.grad_scaler"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cpu.amp.autocast_mode": [[0, "module-torch.cpu.amp.autocast_mode"]], "torch.cpu.amp.grad_scaler": [[0, "module-torch.cpu.amp.grad_scaler"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "torch.cuda.amp.autocast_mode": [[0, "module-torch.cuda.amp.autocast_mode"]], "torch.cuda.amp.common": [[0, "module-torch.cuda.amp.common"]], "torch.cuda.amp.grad_scaler": [[0, "module-torch.cuda.amp.grad_scaler"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "gradientedge (class in torch.autograd.graph)": [[1, "torch.autograd.graph.GradientEdge"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "get_gradient_edge() (in module torch.autograd.graph)": [[1, "torch.autograd.graph.get_gradient_edge"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "torch.autograd.anomaly_mode": [[1, "module-torch.autograd.anomaly_mode"]], "torch.autograd.forward_ad": [[1, "module-torch.autograd.forward_ad"]], "torch.autograd.function": [[1, "module-torch.autograd.function"]], "torch.autograd.functional": [[1, "module-torch.autograd.functional"]], "torch.autograd.grad_mode": [[1, "module-torch.autograd.grad_mode"]], "torch.autograd.gradcheck": [[1, "module-torch.autograd.gradcheck"]], "torch.autograd.graph": [[1, "module-torch.autograd.graph"]], "torch.autograd.profiler": [[1, "module-torch.autograd.profiler"]], "torch.autograd.profiler_legacy": [[1, "module-torch.autograd.profiler_legacy"]], "torch.autograd.profiler_util": [[1, "module-torch.autograd.profiler_util"]], "torch.autograd.variable": [[1, "module-torch.autograd.variable"]], "sdpaparams (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPAParams"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "can_use_efficient_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_efficient_attention"]], "can_use_flash_attention() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.can_use_flash_attention"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cudnn_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cudnn_sdp_enabled"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_cudnn_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_cudnn_sdp"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.flags"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.get_fastpath_enabled"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_blas_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_blas_library"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "set_fastpath_enabled() (in module torch.backends.mha)": [[2, "torch.backends.mha.set_fastpath_enabled"]], "set_flags() (in module torch.backends.nnpack)": [[2, "torch.backends.nnpack.set_flags"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.cudnn.rnn": [[2, "module-torch.backends.cudnn.rnn"]], "torch.backends.mha": [[2, "module-torch.backends.mha"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.nnpack": [[2, "module-torch.backends.nnpack"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xeon.run_cpu": [[2, "module-torch.backends.xeon.run_cpu"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "adaptive_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.adaptive_autorange"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "set_checkpoint_debug_enabled() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.set_checkpoint_debug_enabled"]], "cond() (in module torch._higher_order_ops.cond)": [[12, "torch._higher_order_ops.cond.cond"]], "parallel_info() (in module torch.__config__)": [[13, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[13, "torch.__config__.show"]], "torch.__config__": [[13, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[14, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[16, "module-torch.cpu"]], "torch.cuda": [[17, "module-torch.cuda"]], "torch.cuda.comm": [[17, "module-torch.cuda.comm"]], "torch.cuda.error": [[17, "module-torch.cuda.error"]], "torch.cuda.graphs": [[17, "module-torch.cuda.graphs"]], "torch.cuda.jiterator": [[17, "module-torch.cuda.jiterator"]], "torch.cuda.memory": [[17, "module-torch.cuda.memory"]], "torch.cuda.nccl": [[17, "module-torch.cuda.nccl"]], "torch.cuda.nvtx": [[17, "module-torch.cuda.nvtx"]], "torch.cuda.profiler": [[17, "module-torch.cuda.profiler"]], "torch.cuda.random": [[17, "module-torch.cuda.random"]], "torch.cuda.sparse": [[17, "module-torch.cuda.sparse"]], "torch.cuda.streams": [[17, "module-torch.cuda.streams"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[18, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[18, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[22, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[22, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[22, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[22, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[22, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[22, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[22, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[22, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[22, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[22, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[22, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[22, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[22, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[22, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[22, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[22, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[22, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[22, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[22, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[22, "torch.utils.data.random_split"]], "torch.utils.data": [[22, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[22, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[22, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[22, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[22, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[22, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[23, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[23, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[23, "torch.distributed.GradBucket.set_buffer"]], "fill_uninitialized_memory (in module torch.utils.deterministic)": [[26, "torch.utils.deterministic.fill_uninitialized_memory"]], "torch.utils.deterministic": [[26, "module-torch.utils.deterministic"]], "backend (class in torch.distributed)": [[27, "torch.distributed.Backend"]], "devicemesh (class in torch.distributed.device_mesh)": [[27, "torch.distributed.device_mesh.DeviceMesh"]], "distbackenderror (class in torch.distributed)": [[27, "torch.distributed.DistBackendError"]], "disterror (class in torch.distributed)": [[27, "torch.distributed.DistError"]], "distnetworkerror (class in torch.distributed)": [[27, "torch.distributed.DistNetworkError"]], "diststoreerror (class in torch.distributed)": [[27, "torch.distributed.DistStoreError"]], "filestore (class in torch.distributed)": [[27, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[27, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[27, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[27, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[27, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[27, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[27, "torch.distributed.TCPStore"]], "work (class in torch.distributed)": [[27, "torch.distributed.Work"]], "add() (in module torch.distributed.store)": [[27, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[27, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[27, "torch.distributed.all_gather_into_tensor"]], "all_gather_object() (in module torch.distributed)": [[27, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[27, "torch.distributed.all_reduce"]], "all_to_all() (in module torch.distributed)": [[27, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[27, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[27, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[27, "torch.distributed.batch_isend_irecv"]], "breakpoint() (in module torch.distributed)": [[27, "torch.distributed.breakpoint"]], "broadcast() (in module torch.distributed)": [[27, "torch.distributed.broadcast"]], "broadcast_object_list() (in module torch.distributed)": [[27, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[27, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[27, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[27, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[27, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[27, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[27, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[27, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[27, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[27, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[27, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[27, "torch.distributed.get_world_size"]], "init_device_mesh() (in module torch.distributed.device_mesh)": [[27, "torch.distributed.device_mesh.init_device_mesh"]], "init_process_group() (in module torch.distributed)": [[27, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[27, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[27, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[27, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[27, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[27, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[27, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[27, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[27, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[27, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[27, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[27, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[27, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[27, "torch.distributed.reduce"]], "reduce_op (class in torch.distributed)": [[27, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[27, "torch.distributed.reduce_scatter"]], "reduce_scatter_tensor() (in module torch.distributed)": [[27, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[27, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[27, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[27, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[27, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[27, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[27, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[27, "module-torch.distributed"]], "torch.distributed.algorithms": [[27, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.ddp_zero_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.default_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.mixed_precision_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks"]], "torch.distributed.algorithms.ddp_comm_hooks.post_localsgd_hook": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.post_localSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks": [[27, "module-torch.distributed.algorithms.ddp_comm_hooks.quantization_hooks"]], "torch.distributed.algorithms.join": [[27, "module-torch.distributed.algorithms.join"]], "torch.distributed.algorithms.model_averaging": [[27, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.algorithms.model_averaging.averagers": [[27, "module-torch.distributed.algorithms.model_averaging.averagers"]], "torch.distributed.algorithms.model_averaging.hierarchical_model_averager": [[27, "module-torch.distributed.algorithms.model_averaging.hierarchical_model_averager"]], "torch.distributed.algorithms.model_averaging.utils": [[27, "module-torch.distributed.algorithms.model_averaging.utils"]], "torch.distributed.argparse_util": [[27, "module-torch.distributed.argparse_util"]], "torch.distributed.c10d_logger": [[27, "module-torch.distributed.c10d_logger"]], "torch.distributed.checkpoint.api": [[27, "module-torch.distributed.checkpoint.api"]], "torch.distributed.checkpoint.default_planner": [[27, "module-torch.distributed.checkpoint.default_planner"]], "torch.distributed.checkpoint.filesystem": [[27, "module-torch.distributed.checkpoint.filesystem"]], "torch.distributed.checkpoint.metadata": [[27, "module-torch.distributed.checkpoint.metadata"]], "torch.distributed.checkpoint.optimizer": [[27, "module-torch.distributed.checkpoint.optimizer"]], "torch.distributed.checkpoint.planner": [[27, "module-torch.distributed.checkpoint.planner"]], "torch.distributed.checkpoint.planner_helpers": [[27, "module-torch.distributed.checkpoint.planner_helpers"]], "torch.distributed.checkpoint.resharding": [[27, "module-torch.distributed.checkpoint.resharding"]], "torch.distributed.checkpoint.state_dict": [[27, "module-torch.distributed.checkpoint.state_dict"]], "torch.distributed.checkpoint.state_dict_loader": [[27, "module-torch.distributed.checkpoint.state_dict_loader"]], "torch.distributed.checkpoint.state_dict_saver": [[27, "module-torch.distributed.checkpoint.state_dict_saver"]], "torch.distributed.checkpoint.stateful": [[27, "module-torch.distributed.checkpoint.stateful"]], "torch.distributed.checkpoint.storage": [[27, "module-torch.distributed.checkpoint.storage"]], "torch.distributed.checkpoint.utils": [[27, "module-torch.distributed.checkpoint.utils"]], "torch.distributed.collective_utils": [[27, "module-torch.distributed.collective_utils"]], "torch.distributed.constants": [[27, "module-torch.distributed.constants"]], "torch.distributed.device_mesh": [[27, "module-torch.distributed.device_mesh"]], "torch.distributed.distributed_c10d": [[27, "module-torch.distributed.distributed_c10d"]], "torch.distributed.elastic": [[27, "module-torch.distributed.elastic"]], "torch.distributed.elastic.agent.server.api": [[27, "module-torch.distributed.elastic.agent.server.api"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[27, "module-torch.distributed.elastic.agent.server.local_elastic_agent"]], "torch.distributed.elastic.events.api": [[27, "module-torch.distributed.elastic.events.api"]], "torch.distributed.elastic.events.handlers": [[27, "module-torch.distributed.elastic.events.handlers"]], "torch.distributed.elastic.metrics.api": [[27, "module-torch.distributed.elastic.metrics.api"]], "torch.distributed.elastic.multiprocessing.api": [[27, "module-torch.distributed.elastic.multiprocessing.api"]], "torch.distributed.elastic.multiprocessing.errors.error_handler": [[27, "module-torch.distributed.elastic.multiprocessing.errors.error_handler"]], "torch.distributed.elastic.multiprocessing.errors.handlers": [[27, "module-torch.distributed.elastic.multiprocessing.errors.handlers"]], "torch.distributed.elastic.multiprocessing.redirects": [[27, "module-torch.distributed.elastic.multiprocessing.redirects"]], "torch.distributed.elastic.multiprocessing.tail_log": [[27, "module-torch.distributed.elastic.multiprocessing.tail_log"]], "torch.distributed.elastic.rendezvous.api": [[27, "module-torch.distributed.elastic.rendezvous.api"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[27, "module-torch.distributed.elastic.rendezvous.c10d_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[27, "module-torch.distributed.elastic.rendezvous.dynamic_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[27, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[27, "module-torch.distributed.elastic.rendezvous.etcd_rendezvous_backend"]], "torch.distributed.elastic.rendezvous.etcd_server": [[27, "module-torch.distributed.elastic.rendezvous.etcd_server"]], "torch.distributed.elastic.rendezvous.etcd_store": [[27, "module-torch.distributed.elastic.rendezvous.etcd_store"]], "torch.distributed.elastic.rendezvous.static_tcp_rendezvous": [[27, "module-torch.distributed.elastic.rendezvous.static_tcp_rendezvous"]], "torch.distributed.elastic.rendezvous.utils": [[27, "module-torch.distributed.elastic.rendezvous.utils"]], "torch.distributed.elastic.timer.api": [[27, "module-torch.distributed.elastic.timer.api"]], "torch.distributed.elastic.timer.file_based_local_timer": [[27, "module-torch.distributed.elastic.timer.file_based_local_timer"]], "torch.distributed.elastic.timer.local_timer": [[27, "module-torch.distributed.elastic.timer.local_timer"]], "torch.distributed.elastic.utils": [[27, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.api": [[27, "module-torch.distributed.elastic.utils.api"]], "torch.distributed.elastic.utils.data": [[27, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.elastic.utils.data.cycling_iterator": [[27, "module-torch.distributed.elastic.utils.data.cycling_iterator"]], "torch.distributed.elastic.utils.data.elastic_distributed_sampler": [[27, "module-torch.distributed.elastic.utils.data.elastic_distributed_sampler"]], "torch.distributed.elastic.utils.distributed": [[27, "module-torch.distributed.elastic.utils.distributed"]], "torch.distributed.elastic.utils.log_level": [[27, "module-torch.distributed.elastic.utils.log_level"]], "torch.distributed.elastic.utils.logging": [[27, "module-torch.distributed.elastic.utils.logging"]], "torch.distributed.elastic.utils.store": [[27, "module-torch.distributed.elastic.utils.store"]], "torch.distributed.fsdp.api": [[27, "module-torch.distributed.fsdp.api"]], "torch.distributed.fsdp.fully_sharded_data_parallel": [[27, "module-torch.distributed.fsdp.fully_sharded_data_parallel"]], "torch.distributed.fsdp.sharded_grad_scaler": [[27, "module-torch.distributed.fsdp.sharded_grad_scaler"]], "torch.distributed.fsdp.wrap": [[27, "module-torch.distributed.fsdp.wrap"]], "torch.distributed.launch": [[27, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[27, "module-torch.distributed.launcher"]], "torch.distributed.launcher.api": [[27, "module-torch.distributed.launcher.api"]], "torch.distributed.logging_handlers": [[27, "module-torch.distributed.logging_handlers"]], "torch.distributed.nn": [[27, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[27, "module-torch.distributed.nn.api"]], "torch.distributed.nn.api.remote_module": [[27, "module-torch.distributed.nn.api.remote_module"]], "torch.distributed.nn.functional": [[27, "module-torch.distributed.nn.functional"]], "torch.distributed.nn.jit": [[27, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.instantiator": [[27, "module-torch.distributed.nn.jit.instantiator"]], "torch.distributed.nn.jit.templates": [[27, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.nn.jit.templates.remote_module_template": [[27, "module-torch.distributed.nn.jit.templates.remote_module_template"]], "torch.distributed.optim.apply_optimizer_in_backward": [[27, "module-torch.distributed.optim.apply_optimizer_in_backward"]], "torch.distributed.optim.functional_adadelta": [[27, "module-torch.distributed.optim.functional_adadelta"]], "torch.distributed.optim.functional_adagrad": [[27, "module-torch.distributed.optim.functional_adagrad"]], "torch.distributed.optim.functional_adam": [[27, "module-torch.distributed.optim.functional_adam"]], "torch.distributed.optim.functional_adamax": [[27, "module-torch.distributed.optim.functional_adamax"]], "torch.distributed.optim.functional_adamw": [[27, "module-torch.distributed.optim.functional_adamw"]], "torch.distributed.optim.functional_rmsprop": [[27, "module-torch.distributed.optim.functional_rmsprop"]], "torch.distributed.optim.functional_rprop": [[27, "module-torch.distributed.optim.functional_rprop"]], "torch.distributed.optim.functional_sgd": [[27, "module-torch.distributed.optim.functional_sgd"]], "torch.distributed.optim.named_optimizer": [[27, "module-torch.distributed.optim.named_optimizer"]], "torch.distributed.optim.optimizer": [[27, "module-torch.distributed.optim.optimizer"]], "torch.distributed.optim.post_localsgd_optimizer": [[27, "module-torch.distributed.optim.post_localSGD_optimizer"]], "torch.distributed.optim.utils": [[27, "module-torch.distributed.optim.utils"]], "torch.distributed.optim.zero_redundancy_optimizer": [[27, "module-torch.distributed.optim.zero_redundancy_optimizer"]], "torch.distributed.pipeline": [[27, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[27, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.batchnorm": [[27, "module-torch.distributed.pipeline.sync.batchnorm"]], "torch.distributed.pipeline.sync.checkpoint": [[27, "module-torch.distributed.pipeline.sync.checkpoint"]], "torch.distributed.pipeline.sync.copy": [[27, "module-torch.distributed.pipeline.sync.copy"]], "torch.distributed.pipeline.sync.dependency": [[27, "module-torch.distributed.pipeline.sync.dependency"]], "torch.distributed.pipeline.sync.microbatch": [[27, "module-torch.distributed.pipeline.sync.microbatch"]], "torch.distributed.pipeline.sync.phony": [[27, "module-torch.distributed.pipeline.sync.phony"]], "torch.distributed.pipeline.sync.pipe": [[27, "module-torch.distributed.pipeline.sync.pipe"]], "torch.distributed.pipeline.sync.pipeline": [[27, "module-torch.distributed.pipeline.sync.pipeline"]], "torch.distributed.pipeline.sync.skip": [[27, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.pipeline.sync.skip.layout": [[27, "module-torch.distributed.pipeline.sync.skip.layout"]], "torch.distributed.pipeline.sync.skip.namespace": [[27, "module-torch.distributed.pipeline.sync.skip.namespace"]], "torch.distributed.pipeline.sync.skip.portal": [[27, "module-torch.distributed.pipeline.sync.skip.portal"]], "torch.distributed.pipeline.sync.skip.skippable": [[27, "module-torch.distributed.pipeline.sync.skip.skippable"]], "torch.distributed.pipeline.sync.skip.tracker": [[27, "module-torch.distributed.pipeline.sync.skip.tracker"]], "torch.distributed.pipeline.sync.stream": [[27, "module-torch.distributed.pipeline.sync.stream"]], "torch.distributed.pipeline.sync.utils": [[27, "module-torch.distributed.pipeline.sync.utils"]], "torch.distributed.pipeline.sync.worker": [[27, "module-torch.distributed.pipeline.sync.worker"]], "torch.distributed.remote_device": [[27, "module-torch.distributed.remote_device"]], "torch.distributed.rendezvous": [[27, "module-torch.distributed.rendezvous"]], "torch.distributed.rpc.api": [[27, "module-torch.distributed.rpc.api"]], "torch.distributed.rpc.backend_registry": [[27, "module-torch.distributed.rpc.backend_registry"]], "torch.distributed.rpc.constants": [[27, "module-torch.distributed.rpc.constants"]], "torch.distributed.rpc.functions": [[27, "module-torch.distributed.rpc.functions"]], "torch.distributed.rpc.internal": [[27, "module-torch.distributed.rpc.internal"]], "torch.distributed.rpc.options": [[27, "module-torch.distributed.rpc.options"]], "torch.distributed.rpc.rref_proxy": [[27, "module-torch.distributed.rpc.rref_proxy"]], "torch.distributed.rpc.server_process_global_profiler": [[27, "module-torch.distributed.rpc.server_process_global_profiler"]], "torch.distributed.tensor": [[27, "module-torch.distributed.tensor"]], "torch.distributed.tensor.parallel.api": [[27, "module-torch.distributed.tensor.parallel.api"]], "torch.distributed.tensor.parallel.ddp": [[27, "module-torch.distributed.tensor.parallel.ddp"]], "torch.distributed.tensor.parallel.fsdp": [[27, "module-torch.distributed.tensor.parallel.fsdp"]], "torch.distributed.tensor.parallel.input_reshard": [[27, "module-torch.distributed.tensor.parallel.input_reshard"]], "torch.distributed.tensor.parallel.loss": [[27, "module-torch.distributed.tensor.parallel.loss"]], "torch.distributed.tensor.parallel.style": [[27, "module-torch.distributed.tensor.parallel.style"]], "torch.distributed.utils": [[27, "module-torch.distributed.utils"]], "wait() (in module torch.distributed.store)": [[27, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[28, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[28, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[28, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[28, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[28, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[28, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[28, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[28, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[28, "torch.distributed.algorithms.JoinHook.post_hook"]], "broadcastingtorchsavereader (class in torch.distributed.checkpoint.format_utils)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.DefaultSavePlanner"]], "dynamicmetaloadplanner (class in torch.distributed.checkpoint.format_utils)": [[29, "torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.SavePlanner"]], "statedictoptions (class in torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.StateDictOptions"]], "stateful (class in torch.distributed.checkpoint.stateful)": [[29, "torch.distributed.checkpoint.stateful.Stateful"]], "storagereader (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[29, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint.planner)": [[29, "torch.distributed.checkpoint.planner.WriteItem"]], "async_save() (in module torch.distributed.checkpoint.state_dict_saver)": [[29, "torch.distributed.checkpoint.state_dict_saver.async_save"]], "checkpoint_id (torch.distributed.checkpoint.filesystemreader property)": [[29, "torch.distributed.checkpoint.FileSystemReader.checkpoint_id"]], "checkpoint_id (torch.distributed.checkpoint.filesystemwriter property)": [[29, "torch.distributed.checkpoint.FileSystemWriter.checkpoint_id"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "dcp_to_torch_save() (in module torch.distributed.checkpoint.format_utils)": [[29, "torch.distributed.checkpoint.format_utils.dcp_to_torch_save"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "get_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.get_model_state_dict"]], "get_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.get_optimizer_state_dict"]], "get_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.get_state_dict"]], "load() (in module torch.distributed.checkpoint.state_dict_loader)": [[29, "torch.distributed.checkpoint.state_dict_loader.load"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint.state_dict_loader)": [[29, "torch.distributed.checkpoint.state_dict_loader.load_state_dict"]], "load_state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[29, "torch.distributed.checkpoint.stateful.Stateful.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[29, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[29, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_data() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "read_metadata() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.read_metadata"]], "reset() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.reset"]], "reset() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.reset"]], "reset() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.reset"]], "resolve_bytes() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.resolve_bytes"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save() (in module torch.distributed.checkpoint.state_dict_saver)": [[29, "torch.distributed.checkpoint.state_dict_saver.save"]], "save_state_dict() (in module torch.distributed.checkpoint.state_dict_saver)": [[29, "torch.distributed.checkpoint.state_dict_saver.save_state_dict"]], "set_model_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.set_model_state_dict"]], "set_optimizer_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.set_optimizer_state_dict"]], "set_state_dict() (in module torch.distributed.checkpoint.state_dict)": [[29, "torch.distributed.checkpoint.state_dict.set_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[29, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[29, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.format_utils.dynamicmetaloadplanner method)": [[29, "torch.distributed.checkpoint.format_utils.DynamicMetaLoadPlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[29, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_reader() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "state_dict() (torch.distributed.checkpoint.stateful.stateful method)": [[29, "torch.distributed.checkpoint.stateful.Stateful.state_dict"]], "tensor_storage_size() (torch.distributed.checkpoint.planner.writeitem method)": [[29, "torch.distributed.checkpoint.planner.WriteItem.tensor_storage_size"]], "torch.distributed.checkpoint": [[29, "module-torch.distributed.checkpoint"]], "torch.distributed.checkpoint.format_utils": [[29, "module-torch.distributed.checkpoint.format_utils"]], "torch.distributed.checkpoint.logger": [[29, "module-torch.distributed.checkpoint.logger"]], "torch.distributed.checkpoint.logging_handlers": [[29, "module-torch.distributed.checkpoint.logging_handlers"]], "torch_save_to_dcp() (in module torch.distributed.checkpoint.format_utils)": [[29, "torch.distributed.checkpoint.format_utils.torch_save_to_dcp"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[29, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[29, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "validate_checkpoint_id() (torch.distributed.checkpoint.storagereader class method)": [[29, "torch.distributed.checkpoint.StorageReader.validate_checkpoint_id"]], "validate_checkpoint_id() (torch.distributed.checkpoint.storagewriter class method)": [[29, "torch.distributed.checkpoint.StorageWriter.validate_checkpoint_id"]], "validate_checkpoint_id() (torch.distributed.checkpoint.format_utils.broadcastingtorchsavereader class method)": [[29, "torch.distributed.checkpoint.format_utils.BroadcastingTorchSaveReader.validate_checkpoint_id"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[29, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[31, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[31, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_device (torch.distributed.optim.zeroredundancyoptimizer property)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.join_device"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "join_process_group (torch.distributed.optim.zeroredundancyoptimizer property)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.join_process_group"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[31, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[31, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[31, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[31, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[31, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[31, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel)": [[32, "torch.distributed.tensor.parallel.ColwiseParallel"]], "preparemoduleinput (class in torch.distributed.tensor.parallel)": [[32, "torch.distributed.tensor.parallel.PrepareModuleInput"]], "preparemoduleoutput (class in torch.distributed.tensor.parallel)": [[32, "torch.distributed.tensor.parallel.PrepareModuleOutput"]], "rowwiseparallel (class in torch.distributed.tensor.parallel)": [[32, "torch.distributed.tensor.parallel.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel)": [[32, "torch.distributed.tensor.parallel.SequenceParallel"]], "loss_parallel() (in module torch.distributed.tensor.parallel)": [[32, "torch.distributed.tensor.parallel.loss_parallel"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[32, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[32, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[33, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[33, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[33, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[33, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[33, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[33, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[33, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[33, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[33, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[33, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[33, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[33, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[33, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[33, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[33, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[33, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[33, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[33, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.IndependentTransform"]], "inversegamma (class in torch.distributions.inverse_gamma)": [[33, "torch.distributions.inverse_gamma.InverseGamma"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[33, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[33, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[33, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[33, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[33, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[33, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[33, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[33, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[33, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[33, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[33, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[33, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[33, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[33, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[33, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[33, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[33, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[33, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[33, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[33, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[33, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[33, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[33, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[33, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[33, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[33, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[33, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[33, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[33, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[33, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[33, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[33, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[33, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.inverse_gamma.inversegamma attribute)": [[33, "torch.distributions.inverse_gamma.InverseGamma.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[33, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[33, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[33, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[33, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[33, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[33, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[33, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[33, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[33, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[33, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[33, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[33, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[33, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[33, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[33, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[33, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[33, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[33, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[33, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[33, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[33, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[33, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[33, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[33, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[33, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[33, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration (torch.distributions.inverse_gamma.inversegamma property)": [[33, "torch.distributions.inverse_gamma.InverseGamma.concentration"]], "concentration0 (torch.distributions.beta.beta property)": [[33, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[33, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[33, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[33, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[33, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[33, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[33, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[33, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[33, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[33, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[33, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[33, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[33, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[33, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[33, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[33, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[33, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[33, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.inverse_gamma.inversegamma method)": [[33, "torch.distributions.inverse_gamma.InverseGamma.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[33, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[33, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[33, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[33, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[33, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[33, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[33, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[33, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[33, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[33, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[33, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[33, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[33, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[33, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[33, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[33, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[33, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[33, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[33, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[33, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[33, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[33, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[33, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[33, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[33, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[33, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[33, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[33, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[33, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.inverse_gamma.inversegamma method)": [[33, "torch.distributions.inverse_gamma.InverseGamma.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[33, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[33, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[33, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[33, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[33, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[33, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[33, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[33, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[33, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[33, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[33, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[33, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[33, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[33, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[33, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[33, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[33, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[33, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[33, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[33, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[33, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[33, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[33, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[33, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[33, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[33, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[33, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[33, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[33, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.inverse_gamma.inversegamma attribute)": [[33, "torch.distributions.inverse_gamma.InverseGamma.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[33, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[33, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[33, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[33, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[33, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[33, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[33, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[33, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[33, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[33, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[33, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[33, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[33, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[33, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[33, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[33, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[33, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[33, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[33, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[33, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[33, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[33, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[33, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[33, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[33, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[33, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[33, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[33, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[33, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[33, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[33, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[33, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[33, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[33, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[33, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[33, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[33, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[33, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[33, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[33, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[33, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[33, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[33, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[33, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[33, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[33, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[33, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[33, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[33, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[33, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[33, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[33, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[33, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[33, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[33, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[33, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[33, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[33, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[33, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[33, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[33, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[33, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[33, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[33, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[33, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[33, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[33, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.inverse_gamma.inversegamma property)": [[33, "torch.distributions.inverse_gamma.InverseGamma.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[33, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[33, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[33, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[33, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[33, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[33, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[33, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[33, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[33, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[33, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[33, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[33, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[33, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[33, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[33, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[33, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[33, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[33, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[33, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[33, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[33, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[33, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[33, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[33, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[33, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[33, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.inverse_gamma.inversegamma property)": [[33, "torch.distributions.inverse_gamma.InverseGamma.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[33, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[33, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[33, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[33, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[33, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[33, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[33, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[33, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[33, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[33, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[33, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[33, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[33, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[33, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[33, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[33, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[33, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[33, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[33, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[33, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[33, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[33, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[33, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[33, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[33, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "rate (torch.distributions.inverse_gamma.inversegamma property)": [[33, "torch.distributions.inverse_gamma.InverseGamma.rate"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[33, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[33, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[33, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[33, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[33, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[33, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[33, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[33, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[33, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[33, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[33, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[33, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[33, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[33, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[33, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[33, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[33, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[33, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[33, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[33, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[33, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[33, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[33, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[33, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[33, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[33, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[33, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[33, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[33, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[33, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[33, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[33, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[33, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[33, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[33, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[33, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[33, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[33, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[33, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[33, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[33, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[33, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[33, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[33, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[33, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[33, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[33, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[33, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[33, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[33, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[33, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[33, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.inverse_gamma.inversegamma attribute)": [[33, "torch.distributions.inverse_gamma.InverseGamma.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[33, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[33, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[33, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[33, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[33, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[33, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[33, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[33, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[33, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[33, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[33, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[33, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[33, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[33, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[33, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[33, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[33, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[33, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[33, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[33, "module-torch.distributions"]], "torch.distributions.bernoulli": [[33, "module-torch.distributions.bernoulli"]], "torch.distributions.beta": [[33, "module-torch.distributions.beta"]], "torch.distributions.binomial": [[33, "module-torch.distributions.binomial"]], "torch.distributions.categorical": [[33, "module-torch.distributions.categorical"]], "torch.distributions.cauchy": [[33, "module-torch.distributions.cauchy"]], "torch.distributions.chi2": [[33, "module-torch.distributions.chi2"]], "torch.distributions.constraint_registry": [[33, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[33, "module-torch.distributions.constraints"]], "torch.distributions.continuous_bernoulli": [[33, "module-torch.distributions.continuous_bernoulli"]], "torch.distributions.dirichlet": [[33, "module-torch.distributions.dirichlet"]], "torch.distributions.distribution": [[33, "module-torch.distributions.distribution"]], "torch.distributions.exp_family": [[33, "module-torch.distributions.exp_family"]], "torch.distributions.exponential": [[33, "module-torch.distributions.exponential"]], "torch.distributions.fishersnedecor": [[33, "module-torch.distributions.fishersnedecor"]], "torch.distributions.gamma": [[33, "module-torch.distributions.gamma"]], "torch.distributions.geometric": [[33, "module-torch.distributions.geometric"]], "torch.distributions.gumbel": [[33, "module-torch.distributions.gumbel"]], "torch.distributions.half_cauchy": [[33, "module-torch.distributions.half_cauchy"]], "torch.distributions.half_normal": [[33, "module-torch.distributions.half_normal"]], "torch.distributions.independent": [[33, "module-torch.distributions.independent"]], "torch.distributions.inverse_gamma": [[33, "module-torch.distributions.inverse_gamma"]], "torch.distributions.kl": [[33, "module-torch.distributions.kl"]], "torch.distributions.kumaraswamy": [[33, "module-torch.distributions.kumaraswamy"]], "torch.distributions.laplace": [[33, "module-torch.distributions.laplace"]], "torch.distributions.lkj_cholesky": [[33, "module-torch.distributions.lkj_cholesky"]], "torch.distributions.log_normal": [[33, "module-torch.distributions.log_normal"]], "torch.distributions.logistic_normal": [[33, "module-torch.distributions.logistic_normal"]], "torch.distributions.lowrank_multivariate_normal": [[33, "module-torch.distributions.lowrank_multivariate_normal"]], "torch.distributions.mixture_same_family": [[33, "module-torch.distributions.mixture_same_family"]], "torch.distributions.multinomial": [[33, "module-torch.distributions.multinomial"]], "torch.distributions.multivariate_normal": [[33, "module-torch.distributions.multivariate_normal"]], "torch.distributions.negative_binomial": [[33, "module-torch.distributions.negative_binomial"]], "torch.distributions.normal": [[33, "module-torch.distributions.normal"]], "torch.distributions.one_hot_categorical": [[33, "module-torch.distributions.one_hot_categorical"]], "torch.distributions.pareto": [[33, "module-torch.distributions.pareto"]], "torch.distributions.poisson": [[33, "module-torch.distributions.poisson"]], "torch.distributions.relaxed_bernoulli": [[33, "module-torch.distributions.relaxed_bernoulli"]], "torch.distributions.relaxed_categorical": [[33, "module-torch.distributions.relaxed_categorical"]], "torch.distributions.studentt": [[33, "module-torch.distributions.studentT"]], "torch.distributions.transformed_distribution": [[33, "module-torch.distributions.transformed_distribution"]], "torch.distributions.transforms": [[33, "module-torch.distributions.transforms"]], "torch.distributions.uniform": [[33, "module-torch.distributions.uniform"]], "torch.distributions.utils": [[33, "module-torch.distributions.utils"]], "torch.distributions.von_mises": [[33, "module-torch.distributions.von_mises"]], "torch.distributions.weibull": [[33, "module-torch.distributions.weibull"]], "torch.distributions.wishart": [[33, "module-torch.distributions.wishart"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[33, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[33, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[33, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[33, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[33, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[33, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[33, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[33, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[33, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[33, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[33, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[33, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[33, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[33, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[33, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[33, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[33, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.inverse_gamma.inversegamma property)": [[33, "torch.distributions.inverse_gamma.InverseGamma.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[33, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[33, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[33, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[33, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[33, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[33, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[33, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[33, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[33, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[33, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[33, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[33, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[33, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[33, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[33, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[33, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[33, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[34, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[34, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[35, "torch.distributed.elastic.agent.server.ElasticAgent"]], "healthcheckserver (class in torch.distributed.elastic.agent.server.health_check_server)": [[35, "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[35, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[35, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[35, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[35, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[35, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[35, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[35, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "create_healthcheck_server() (in module torch.distributed.elastic.agent.server.health_check_server)": [[35, "torch.distributed.elastic.agent.server.health_check_server.create_healthcheck_server"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[35, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[35, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[35, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[35, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "start() (torch.distributed.elastic.agent.server.health_check_server.healthcheckserver method)": [[35, "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer.start"]], "stop() (torch.distributed.elastic.agent.server.health_check_server.healthcheckserver method)": [[35, "torch.distributed.elastic.agent.server.health_check_server.HealthCheckServer.stop"]], "torch.distributed.elastic.agent": [[35, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[35, "module-torch.distributed.elastic.agent.server"]], "torch.distributed.elastic.agent.server.health_check_server": [[35, "module-torch.distributed.elastic.agent.server.health_check_server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[37, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[37, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[37, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[37, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[37, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[38, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[38, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[38, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[38, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[38, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[38, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[41, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[41, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[41, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[41, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[41, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[41, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[41, "module-torch.distributed.elastic.metrics"]], "defaultlogsspecs (class in torch.distributed.elastic.multiprocessing.api)": [[42, "torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs"]], "logsdest (class in torch.distributed.elastic.multiprocessing.api)": [[42, "torch.distributed.elastic.multiprocessing.api.LogsDest"]], "logsspecs (class in torch.distributed.elastic.multiprocessing.api)": [[42, "torch.distributed.elastic.multiprocessing.api.LogsSpecs"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[42, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[42, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[42, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[42, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "reify() (torch.distributed.elastic.multiprocessing.api.defaultlogsspecs method)": [[42, "torch.distributed.elastic.multiprocessing.api.DefaultLogsSpecs.reify"]], "reify() (torch.distributed.elastic.multiprocessing.api.logsspecs method)": [[42, "torch.distributed.elastic.multiprocessing.api.LogsSpecs.reify"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[42, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[42, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[44, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[44, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[44, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[44, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[44, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[44, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[44, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[44, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvousgracefulexiterror (class in torch.distributed.elastic.rendezvous)": [[44, "torch.distributed.elastic.rendezvous.RendezvousGracefulExitError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[44, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[44, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[44, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[44, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[44, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[44, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[44, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[44, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[44, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[44, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[44, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[44, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[44, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[44, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[44, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[44, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[44, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[44, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[44, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[44, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[45, "module-torch.distributed.run"]], "subprocesshandler (class in torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler)": [[46, "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler.SubprocessHandler"]], "get_subprocess_handler() (in module torch.distributed.elastic.multiprocessing.subprocess_handler.handlers)": [[46, "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers.get_subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler": [[46, "module-torch.distributed.elastic.multiprocessing.subprocess_handler"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.handlers": [[46, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.handlers"]], "torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler": [[46, "module-torch.distributed.elastic.multiprocessing.subprocess_handler.subprocess_handler"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[47, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[47, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[47, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[47, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[47, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[47, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[47, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[47, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[47, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[47, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[47, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[47, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[47, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[47, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[47, "module-torch.distributed.elastic.timer"]], "constraint (in module torch.export)": [[49, "torch.export.Constraint"]], "customobjargument (class in torch.export.graph_signature)": [[49, "torch.export.graph_signature.CustomObjArgument"]], "dim() (in module torch.export.dynamic_shapes)": [[49, "torch.export.dynamic_shapes.Dim"]], "exportbackwardsignature (class in torch.export)": [[49, "torch.export.ExportBackwardSignature"]], "exportgraphsignature (class in torch.export)": [[49, "torch.export.ExportGraphSignature"]], "exportgraphsignature (class in torch.export.graph_signature)": [[49, "torch.export.graph_signature.ExportGraphSignature"]], "exportedprogram (class in torch.export)": [[49, "torch.export.ExportedProgram"]], "flatargsadapter (class in torch.export.unflatten)": [[49, "torch.export.unflatten.FlatArgsAdapter"]], "inputkind (class in torch.export.graph_signature)": [[49, "torch.export.graph_signature.InputKind"]], "inputspec (class in torch.export.graph_signature)": [[49, "torch.export.graph_signature.InputSpec"]], "interpretermodule (class in torch.export.unflatten)": [[49, "torch.export.unflatten.InterpreterModule"]], "modulecallentry (class in torch.export)": [[49, "torch.export.ModuleCallEntry"]], "modulecallsignature (class in torch.export)": [[49, "torch.export.ModuleCallSignature"]], "outputkind (class in torch.export.graph_signature)": [[49, "torch.export.graph_signature.OutputKind"]], "outputspec (class in torch.export.graph_signature)": [[49, "torch.export.graph_signature.OutputSpec"]], "adapt() (torch.export.unflatten.flatargsadapter method)": [[49, "torch.export.unflatten.FlatArgsAdapter.adapt"]], "buffers() (torch.export.exportedprogram method)": [[49, "torch.export.ExportedProgram.buffers"]], "dims() (in module torch.export)": [[49, "torch.export.dims"]], "dynamic_dim() (in module torch.export.dynamic_shapes)": [[49, "torch.export.dynamic_shapes.dynamic_dim"]], "export() (in module torch.export)": [[49, "torch.export.export"]], "get_replace_hook() (torch.export.graph_signature.exportgraphsignature method)": [[49, "torch.export.graph_signature.ExportGraphSignature.get_replace_hook"]], "load() (in module torch.export)": [[49, "torch.export.load"]], "module() (torch.export.exportedprogram method)": [[49, "torch.export.ExportedProgram.module"]], "named_buffers() (torch.export.exportedprogram method)": [[49, "torch.export.ExportedProgram.named_buffers"]], "named_parameters() (torch.export.exportedprogram method)": [[49, "torch.export.ExportedProgram.named_parameters"]], "parameters() (torch.export.exportedprogram method)": [[49, "torch.export.ExportedProgram.parameters"]], "register_dataclass() (in module torch.export)": [[49, "torch.export.register_dataclass"]], "replace_all_uses() (torch.export.graph_signature.exportgraphsignature method)": [[49, "torch.export.graph_signature.ExportGraphSignature.replace_all_uses"]], "run_decompositions() (torch.export.exportedprogram method)": [[49, "torch.export.ExportedProgram.run_decompositions"]], "save() (in module torch.export)": [[49, "torch.export.save"]], "torch.export": [[49, "module-torch.export"]], "torch.export.custom_obj": [[49, "module-torch.export.custom_obj"]], "torch.export.dynamic_shapes": [[49, "module-torch.export.dynamic_shapes"]], "torch.export.exported_program": [[49, "module-torch.export.exported_program"]], "torch.export.graph_signature": [[49, "module-torch.export.graph_signature"]], "torch.export.unflatten": [[49, "module-torch.export.unflatten"]], "unflatten() (in module torch.export.unflatten)": [[49, "torch.export.unflatten.unflatten"]], "torch.fft": [[51, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp)": [[52, "torch.distributed.fsdp.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "check_is_root() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.check_is_root"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[52, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[52, "module-torch.distributed.fsdp"]], "torch.func": [[54, "module-torch.func"]], "get_overwrite_module_params_on_conversion() (in module torch.__future__)": [[59, "torch.__future__.get_overwrite_module_params_on_conversion"]], "get_swap_module_params_on_conversion() (in module torch.__future__)": [[59, "torch.__future__.get_swap_module_params_on_conversion"]], "set_overwrite_module_params_on_conversion() (in module torch.__future__)": [[59, "torch.__future__.set_overwrite_module_params_on_conversion"]], "set_swap_module_params_on_conversion() (in module torch.__future__)": [[59, "torch.__future__.set_swap_module_params_on_conversion"]], "torch.__future__": [[59, "module-torch.__future__"]], "future (class in torch.futures)": [[60, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[60, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[60, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[60, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[60, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[60, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[60, "torch.futures.Future.then"]], "torch.futures": [[60, "module-torch.futures"]], "value() (torch.futures.future method)": [[60, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[60, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[60, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[61, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[61, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[61, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[61, "torch.fx.Node"]], "proxy (class in torch.fx)": [[61, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[61, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[61, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[61, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[61, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[61, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[61, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[61, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[61, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[61, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[61, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[61, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[61, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[61, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[61, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[61, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[61, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[61, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[61, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[61, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.fetch_attr"]], "find_nodes() (torch.fx.graph method)": [[61, "torch.fx.Graph.find_nodes"]], "format_node() (torch.fx.node method)": [[61, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[61, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[61, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[61, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[61, "torch.fx.Graph.graph_copy"]], "insert_arg() (torch.fx.node method)": [[61, "torch.fx.Node.insert_arg"]], "inserting_after() (torch.fx.graph method)": [[61, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[61, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[61, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[61, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[61, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[61, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[61, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[61, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[61, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[61, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[61, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[61, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[61, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[61, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[61, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[61, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[61, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[61, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[61, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[61, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[61, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[61, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[61, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[61, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[61, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[61, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[61, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[61, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[61, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[61, "module-torch.fx"]], "torch.fx.annotate": [[61, "module-torch.fx.annotate"]], "torch.fx.config": [[61, "module-torch.fx.config"]], "torch.fx.experimental": [[61, "module-torch.fx.experimental"]], "torch.fx.experimental.accelerator_partitioner": [[61, "module-torch.fx.experimental.accelerator_partitioner"]], "torch.fx.experimental.const_fold": [[61, "module-torch.fx.experimental.const_fold"]], "torch.fx.experimental.debug": [[61, "module-torch.fx.experimental.debug"]], "torch.fx.experimental.graph_gradual_typechecker": [[61, "module-torch.fx.experimental.graph_gradual_typechecker"]], "torch.fx.experimental.merge_matmul": [[61, "module-torch.fx.experimental.merge_matmul"]], "torch.fx.experimental.meta_tracer": [[61, "module-torch.fx.experimental.meta_tracer"]], "torch.fx.experimental.migrate_gradual_types": [[61, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.migrate_gradual_types.constraint": [[61, "module-torch.fx.experimental.migrate_gradual_types.constraint"]], "torch.fx.experimental.migrate_gradual_types.constraint_generator": [[61, "module-torch.fx.experimental.migrate_gradual_types.constraint_generator"]], "torch.fx.experimental.migrate_gradual_types.constraint_transformation": [[61, "module-torch.fx.experimental.migrate_gradual_types.constraint_transformation"]], "torch.fx.experimental.migrate_gradual_types.operation": [[61, "module-torch.fx.experimental.migrate_gradual_types.operation"]], "torch.fx.experimental.migrate_gradual_types.transform_to_z3": [[61, "module-torch.fx.experimental.migrate_gradual_types.transform_to_z3"]], "torch.fx.experimental.migrate_gradual_types.util": [[61, "module-torch.fx.experimental.migrate_gradual_types.util"]], "torch.fx.experimental.migrate_gradual_types.z3_types": [[61, "module-torch.fx.experimental.migrate_gradual_types.z3_types"]], "torch.fx.experimental.normalize": [[61, "module-torch.fx.experimental.normalize"]], "torch.fx.experimental.optimization": [[61, "module-torch.fx.experimental.optimization"]], "torch.fx.experimental.partitioner_utils": [[61, "module-torch.fx.experimental.partitioner_utils"]], "torch.fx.experimental.proxy_tensor": [[61, "module-torch.fx.experimental.proxy_tensor"]], "torch.fx.experimental.recording": [[61, "module-torch.fx.experimental.recording"]], "torch.fx.experimental.refinement_types": [[61, "module-torch.fx.experimental.refinement_types"]], "torch.fx.experimental.rewriter": [[61, "module-torch.fx.experimental.rewriter"]], "torch.fx.experimental.schema_type_annotation": [[61, "module-torch.fx.experimental.schema_type_annotation"]], "torch.fx.experimental.sym_node": [[61, "module-torch.fx.experimental.sym_node"]], "torch.fx.experimental.unification": [[61, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.core": [[61, "module-torch.fx.experimental.unification.core"]], "torch.fx.experimental.unification.dispatch": [[61, "module-torch.fx.experimental.unification.dispatch"]], "torch.fx.experimental.unification.match": [[61, "module-torch.fx.experimental.unification.match"]], "torch.fx.experimental.unification.more": [[61, "module-torch.fx.experimental.unification.more"]], "torch.fx.experimental.unification.multipledispatch": [[61, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.experimental.unification.multipledispatch.conflict": [[61, "module-torch.fx.experimental.unification.multipledispatch.conflict"]], "torch.fx.experimental.unification.multipledispatch.core": [[61, "module-torch.fx.experimental.unification.multipledispatch.core"]], "torch.fx.experimental.unification.multipledispatch.dispatcher": [[61, "module-torch.fx.experimental.unification.multipledispatch.dispatcher"]], "torch.fx.experimental.unification.multipledispatch.utils": [[61, "module-torch.fx.experimental.unification.multipledispatch.utils"]], "torch.fx.experimental.unification.multipledispatch.variadic": [[61, "module-torch.fx.experimental.unification.multipledispatch.variadic"]], "torch.fx.experimental.unification.unification_tools": [[61, "module-torch.fx.experimental.unification.unification_tools"]], "torch.fx.experimental.unification.utils": [[61, "module-torch.fx.experimental.unification.utils"]], "torch.fx.experimental.unification.variable": [[61, "module-torch.fx.experimental.unification.variable"]], "torch.fx.experimental.unify_refinements": [[61, "module-torch.fx.experimental.unify_refinements"]], "torch.fx.experimental.validator": [[61, "module-torch.fx.experimental.validator"]], "torch.fx.graph": [[61, "module-torch.fx.graph"]], "torch.fx.graph_module": [[61, "module-torch.fx.graph_module"]], "torch.fx.immutable_collections": [[61, "module-torch.fx.immutable_collections"]], "torch.fx.interpreter": [[61, "module-torch.fx.interpreter"]], "torch.fx.node": [[61, "module-torch.fx.node"]], "torch.fx.operator_schemas": [[61, "module-torch.fx.operator_schemas"]], "torch.fx.passes": [[61, "module-torch.fx.passes"]], "torch.fx.passes.annotate_getitem_nodes": [[61, "module-torch.fx.passes.annotate_getitem_nodes"]], "torch.fx.passes.backends": [[61, "module-torch.fx.passes.backends"]], "torch.fx.passes.backends.cudagraphs": [[61, "module-torch.fx.passes.backends.cudagraphs"]], "torch.fx.passes.dialect": [[61, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[61, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.dialect.common.cse_pass": [[61, "module-torch.fx.passes.dialect.common.cse_pass"]], "torch.fx.passes.fake_tensor_prop": [[61, "module-torch.fx.passes.fake_tensor_prop"]], "torch.fx.passes.graph_drawer": [[61, "module-torch.fx.passes.graph_drawer"]], "torch.fx.passes.graph_manipulation": [[61, "module-torch.fx.passes.graph_manipulation"]], "torch.fx.passes.infra": [[61, "module-torch.fx.passes.infra"]], "torch.fx.passes.infra.partitioner": [[61, "module-torch.fx.passes.infra.partitioner"]], "torch.fx.passes.infra.pass_base": [[61, "module-torch.fx.passes.infra.pass_base"]], "torch.fx.passes.infra.pass_manager": [[61, "module-torch.fx.passes.infra.pass_manager"]], "torch.fx.passes.net_min_base": [[61, "module-torch.fx.passes.net_min_base"]], "torch.fx.passes.operator_support": [[61, "module-torch.fx.passes.operator_support"]], "torch.fx.passes.param_fetch": [[61, "module-torch.fx.passes.param_fetch"]], "torch.fx.passes.pass_manager": [[61, "module-torch.fx.passes.pass_manager"]], "torch.fx.passes.reinplace": [[61, "module-torch.fx.passes.reinplace"]], "torch.fx.passes.runtime_assert": [[61, "module-torch.fx.passes.runtime_assert"]], "torch.fx.passes.shape_prop": [[61, "module-torch.fx.passes.shape_prop"]], "torch.fx.passes.split_module": [[61, "module-torch.fx.passes.split_module"]], "torch.fx.passes.split_utils": [[61, "module-torch.fx.passes.split_utils"]], "torch.fx.passes.splitter_base": [[61, "module-torch.fx.passes.splitter_base"]], "torch.fx.passes.tests": [[61, "module-torch.fx.passes.tests"]], "torch.fx.passes.tests.test_pass_manager": [[61, "module-torch.fx.passes.tests.test_pass_manager"]], "torch.fx.passes.tools_common": [[61, "module-torch.fx.passes.tools_common"]], "torch.fx.passes.utils": [[61, "module-torch.fx.passes.utils"]], "torch.fx.passes.utils.common": [[61, "module-torch.fx.passes.utils.common"]], "torch.fx.passes.utils.fuser_utils": [[61, "module-torch.fx.passes.utils.fuser_utils"]], "torch.fx.passes.utils.matcher_utils": [[61, "module-torch.fx.passes.utils.matcher_utils"]], "torch.fx.passes.utils.matcher_with_name_node_map_utils": [[61, "module-torch.fx.passes.utils.matcher_with_name_node_map_utils"]], "torch.fx.passes.utils.source_matcher_utils": [[61, "module-torch.fx.passes.utils.source_matcher_utils"]], "torch.fx.proxy": [[61, "module-torch.fx.proxy"]], "torch.fx.subgraph_rewriter": [[61, "module-torch.fx.subgraph_rewriter"]], "torch.fx.tensor_type": [[61, "module-torch.fx.tensor_type"]], "torch.fx.traceback": [[61, "module-torch.fx.traceback"]], "trace() (torch.fx.tracer method)": [[61, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[61, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[61, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[61, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[61, "torch.fx.wrap"]], "torch.fx.experimental.symbolic_shapes": [[62, "module-torch.fx.experimental.symbolic_shapes"]], "generator (class in torch)": [[87, "torch.Generator"]], "clone_state() (torch.generator method)": [[87, "torch.Generator.clone_state"]], "device (torch.generator attribute)": [[87, "torch.Generator.device"]], "get_state() (torch.generator method)": [[87, "torch.Generator.get_state"]], "graphsafe_get_state() (torch.generator method)": [[87, "torch.Generator.graphsafe_get_state"]], "graphsafe_set_state() (torch.generator method)": [[87, "torch.Generator.graphsafe_set_state"]], "initial_seed() (torch.generator method)": [[87, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[87, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[87, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[87, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[88, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[89, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[90, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[91, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[92, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[93, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[94, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[95, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[96, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[97, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[98, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[99, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[100, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[101, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[102, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[103, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[104, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[105, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[106, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[107, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[108, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[109, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[110, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[111, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[112, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[113, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[114, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[115, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[116, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[117, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[118, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[119, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[120, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[121, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[122, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[123, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[124, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[125, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[126, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[127, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[128, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[129, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[130, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[131, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[132, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[133, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[134, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[135, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[136, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[137, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[138, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[139, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[140, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[141, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[142, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[143, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[144, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[145, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[146, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[147, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[148, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[149, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[150, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[151, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[152, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[153, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[154, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[155, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[156, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[157, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[158, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[159, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[160, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[161, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[162, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[163, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[164, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[165, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[166, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[167, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[168, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[169, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[170, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[171, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[172, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[173, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[174, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[175, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[176, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[177, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[178, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[179, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[180, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[181, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[182, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[183, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[184, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[185, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[186, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[187, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[188, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[189, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[190, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[191, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[192, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[193, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[194, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[195, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[196, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[197, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[198, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[199, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[200, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[201, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[202, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[203, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[204, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[205, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[206, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[207, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[208, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[209, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[210, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[211, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[212, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[213, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[214, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[215, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[216, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[217, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[218, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[219, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[220, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[221, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[222, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[223, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[224, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[225, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[226, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[227, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[228, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[229, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[230, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[231, "torch.Tensor.dim"]], "dim_order() (torch.tensor method)": [[232, "torch.Tensor.dim_order"]], "dist() (torch.tensor method)": [[233, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[234, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[235, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[236, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[237, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[238, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[239, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[240, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[241, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[242, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[243, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[244, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[245, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[246, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[247, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[248, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[249, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[250, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[251, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[252, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[253, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[254, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[255, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[256, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[257, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[258, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[259, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[260, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[261, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[262, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[263, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[264, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[265, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[266, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[267, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[268, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[269, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[270, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[271, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[272, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[273, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[274, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[275, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[276, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[277, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[278, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[279, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[280, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[281, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[282, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[283, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[284, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[285, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[286, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[287, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[288, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[289, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[290, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[291, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[292, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[293, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[294, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[295, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[296, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[297, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[298, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[299, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[300, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[301, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[302, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[303, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[304, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[305, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[306, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[307, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[308, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[309, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[310, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[311, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[312, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[313, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[314, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[315, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[316, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[317, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[318, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[319, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[320, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[321, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[322, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[323, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[324, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[325, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[326, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[327, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[328, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[329, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[330, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[331, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[332, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[333, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[334, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[335, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[336, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[337, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[338, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[339, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[340, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[341, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[342, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[343, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[344, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[345, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[346, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[347, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[348, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[349, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[350, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[351, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[352, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[353, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[354, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[355, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[356, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[357, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[358, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[359, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[360, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[361, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[362, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[363, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[364, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[365, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[366, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[367, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[368, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[369, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[370, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[371, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[372, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[373, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[374, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[375, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[376, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[377, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[378, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[379, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[380, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[381, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[382, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[383, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[384, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[385, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[386, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[387, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[388, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[389, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[390, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[391, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[392, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[393, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[394, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[395, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[396, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[397, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[398, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[399, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[400, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[401, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[402, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[403, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[404, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[405, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[406, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[407, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[408, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[409, "torch.Tensor.median"]], "min() (torch.tensor method)": [[410, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[411, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[412, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[413, "torch.Tensor.mode"]], "module_load() (torch.tensor method)": [[414, "torch.Tensor.module_load"]], "moveaxis() (torch.tensor method)": [[415, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[416, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[417, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[418, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[419, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[420, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[421, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[422, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[423, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[424, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[425, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[426, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[427, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[428, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[429, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[430, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[431, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[432, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[433, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[434, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[435, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[436, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[437, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[438, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[439, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[440, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[441, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[442, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[443, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[444, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[445, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[446, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[447, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[448, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[449, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[450, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[451, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[452, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[453, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[454, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[455, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[456, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[457, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[458, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[459, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[460, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[461, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[462, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[463, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[464, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[465, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[466, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[467, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[468, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[469, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[470, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[471, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[472, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[473, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[474, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[475, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[476, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[477, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[478, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[479, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[480, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[481, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[482, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[483, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[484, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[485, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[486, "torch.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (torch.tensor method)": [[487, "torch.Tensor.register_post_accumulate_grad_hook"]], "remainder() (torch.tensor method)": [[488, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[489, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[490, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[491, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[492, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[493, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[494, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[495, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[496, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[497, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[498, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[499, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[500, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[501, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[502, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[503, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[504, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[505, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[506, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[507, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[508, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[509, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[510, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[511, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[512, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[513, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[514, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[515, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[516, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[517, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[518, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[519, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[520, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[521, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[522, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[523, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[524, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[525, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[526, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[527, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[528, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[529, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[530, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[531, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[532, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[533, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[534, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[535, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[536, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[537, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[538, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[539, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[540, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[541, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[542, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[543, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[544, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[545, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[546, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[547, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[548, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[549, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[550, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[551, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[552, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[553, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[554, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[555, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[556, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[557, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[558, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[559, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[560, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[561, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[562, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[563, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[564, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[565, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[566, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[567, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[568, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[569, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[570, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[571, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[572, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[573, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[574, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[575, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[576, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[577, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[578, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[579, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[580, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[581, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[582, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[583, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[584, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[585, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[586, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[587, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[588, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[589, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[590, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[591, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[592, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[593, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[594, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[595, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[596, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[597, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[598, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[599, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[600, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[601, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[602, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[603, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[604, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[605, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[606, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[607, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[608, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[609, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[610, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[611, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[612, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[613, "torch.Tensor.values"]], "var() (torch.tensor method)": [[614, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[615, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[616, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[617, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[618, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[619, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[620, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[621, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[622, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[623, "torch._assert"]], "_foreach_abs() (in module torch)": [[624, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[625, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[626, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[627, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[628, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[629, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[630, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[631, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[632, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[633, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[634, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[635, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[636, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[637, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[638, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[639, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[640, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[641, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[642, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[643, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[644, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[645, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[646, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[647, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[648, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[649, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[650, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[651, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[652, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[653, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[654, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[655, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[656, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[657, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[658, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[659, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[660, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[661, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[662, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[663, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[664, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[665, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[666, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[667, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[668, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[669, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[670, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[671, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[672, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[673, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[674, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[675, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[676, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[677, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[678, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[679, "torch._logging.set_logs"]], "abs() (in module torch)": [[680, "torch.abs"]], "absolute() (in module torch)": [[681, "torch.absolute"]], "acos() (in module torch)": [[682, "torch.acos"]], "acosh() (in module torch)": [[683, "torch.acosh"]], "add() (in module torch)": [[684, "torch.add"]], "addbmm() (in module torch)": [[685, "torch.addbmm"]], "addcdiv() (in module torch)": [[686, "torch.addcdiv"]], "addcmul() (in module torch)": [[687, "torch.addcmul"]], "addmm() (in module torch)": [[688, "torch.addmm"]], "addmv() (in module torch)": [[689, "torch.addmv"]], "addr() (in module torch)": [[690, "torch.addr"]], "adjoint() (in module torch)": [[691, "torch.adjoint"]], "all() (in module torch)": [[692, "torch.all"]], "allclose() (in module torch)": [[693, "torch.allclose"]], "amax() (in module torch)": [[694, "torch.amax"]], "amin() (in module torch)": [[695, "torch.amin"]], "aminmax() (in module torch)": [[696, "torch.aminmax"]], "angle() (in module torch)": [[697, "torch.angle"]], "any() (in module torch)": [[698, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[703, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[704, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[706, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[707, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[708, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[709, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[710, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[714, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[715, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[716, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[717, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[718, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[719, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[720, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[721, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[722, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[723, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[724, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[725, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[726, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[727, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[728, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[729, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[730, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[731, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[731, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[732, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[733, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[734, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[734, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[734, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[737, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[738, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[739, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[744, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[745, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[755, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[755, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[756, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[757, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[758, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[759, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[760, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[761, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[762, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[763, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[763, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[763, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[764, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[784, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[785, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[786, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[787, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[788, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[789, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[790, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[791, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[791, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[791, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[792, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[793, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[793, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[793, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[794, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[795, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[795, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[795, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[795, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[796, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[797, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "extra_repr() (torch.ao.quantization.fake_quantize.fixedqparamsfakequantize method)": [[800, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.extra_repr"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[805, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[806, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[808, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[809, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[810, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[811, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[812, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization.fuse_modules)": [[813, "torch.ao.quantization.fuse_modules.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[815, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[815, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[815, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[815, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[816, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[817, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[819, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[819, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[819, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[823, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[823, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[824, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[833, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[834, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[835, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[836, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[837, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[838, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[839, "torch.ao.quantization.propagate_qconfig_"]], "model_is_exported (class in torch.ao.quantization.pt2e.export_utils)": [[840, "torch.ao.quantization.pt2e.export_utils.model_is_exported"]], "qconfig (class in torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[845, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[846, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[847, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[848, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[849, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[850, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[851, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[852, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[853, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[854, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[854, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[854, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[854, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[854, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[854, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[854, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[854, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[855, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[856, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[857, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[858, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[859, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[860, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[861, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[862, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[863, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[864, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[865, "torch.arange"]], "arccos() (in module torch)": [[866, "torch.arccos"]], "arccosh() (in module torch)": [[867, "torch.arccosh"]], "arcsin() (in module torch)": [[868, "torch.arcsin"]], "arcsinh() (in module torch)": [[869, "torch.arcsinh"]], "arctan() (in module torch)": [[870, "torch.arctan"]], "arctan2() (in module torch)": [[871, "torch.arctan2"]], "arctanh() (in module torch)": [[872, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[873, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[874, "torch.argmax"]], "argmin() (in module torch)": [[875, "torch.argmin"]], "argsort() (in module torch)": [[876, "torch.argsort"]], "argwhere() (in module torch)": [[877, "torch.argwhere"]], "as_strided() (in module torch)": [[878, "torch.as_strided"]], "as_tensor() (in module torch)": [[879, "torch.as_tensor"]], "asarray() (in module torch)": [[880, "torch.asarray"]], "asin() (in module torch)": [[881, "torch.asin"]], "asinh() (in module torch)": [[882, "torch.asinh"]], "atan() (in module torch)": [[883, "torch.atan"]], "atan2() (in module torch)": [[884, "torch.atan2"]], "atanh() (in module torch)": [[885, "torch.atanh"]], "atleast_1d() (in module torch)": [[886, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[887, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[888, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[889, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[890, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[891, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[892, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[893, "torch.autograd.backward"]], "unpackeddualtensor (class in torch.autograd.forward_ad)": [[894, "torch.autograd.forward_ad.UnpackedDualTensor"]], "count() (torch.autograd.forward_ad.unpackeddualtensor method)": [[894, "torch.autograd.forward_ad.UnpackedDualTensor.count"]], "index() (torch.autograd.forward_ad.unpackeddualtensor method)": [[894, "torch.autograd.forward_ad.UnpackedDualTensor.index"]], "primal (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[894, "torch.autograd.forward_ad.UnpackedDualTensor.primal"]], "tangent (torch.autograd.forward_ad.unpackeddualtensor attribute)": [[894, "torch.autograd.forward_ad.UnpackedDualTensor.tangent"]], "dual_level (class in torch.autograd.forward_ad)": [[895, "torch.autograd.forward_ad.dual_level"]], "enter_dual_level() (in module torch.autograd.forward_ad)": [[896, "torch.autograd.forward_ad.enter_dual_level"]], "exit_dual_level() (in module torch.autograd.forward_ad)": [[897, "torch.autograd.forward_ad.exit_dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[898, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[899, "torch.autograd.forward_ad.unpack_dual"]], "backwardcfunction (class in torch.autograd.function)": [[900, "torch.autograd.function.BackwardCFunction"]], "apply() (torch.autograd.function.backwardcfunction method)": [[900, "torch.autograd.function.BackwardCFunction.apply"]], "apply_jvp() (torch.autograd.function.backwardcfunction method)": [[900, "torch.autograd.function.BackwardCFunction.apply_jvp"]], "mark_dirty() (torch.autograd.function.backwardcfunction method)": [[900, "torch.autograd.function.BackwardCFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.backwardcfunction method)": [[900, "torch.autograd.function.BackwardCFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.backwardcfunction method)": [[900, "torch.autograd.function.BackwardCFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.backwardcfunction method)": [[900, "torch.autograd.function.BackwardCFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.backwardcfunction method)": [[900, "torch.autograd.function.BackwardCFunction.set_materialize_grads"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[901, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[902, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[903, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[904, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "inplacefunction (class in torch.autograd.function)": [[905, "torch.autograd.function.InplaceFunction"]], "backward() (torch.autograd.function.inplacefunction static method)": [[905, "torch.autograd.function.InplaceFunction.backward"]], "forward() (torch.autograd.function.inplacefunction static method)": [[905, "torch.autograd.function.InplaceFunction.forward"]], "jvp() (torch.autograd.function.inplacefunction static method)": [[905, "torch.autograd.function.InplaceFunction.jvp"]], "mark_dirty() (torch.autograd.function.inplacefunction method)": [[905, "torch.autograd.function.InplaceFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.inplacefunction method)": [[905, "torch.autograd.function.InplaceFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.inplacefunction method)": [[905, "torch.autograd.function.InplaceFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.inplacefunction method)": [[905, "torch.autograd.function.InplaceFunction.save_for_forward"]], "set_materialize_grads() (torch.autograd.function.inplacefunction method)": [[905, "torch.autograd.function.InplaceFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.inplacefunction static method)": [[905, "torch.autograd.function.InplaceFunction.setup_context"]], "vjp() (torch.autograd.function.inplacefunction static method)": [[905, "torch.autograd.function.InplaceFunction.vjp"]], "vmap() (torch.autograd.function.inplacefunction static method)": [[905, "torch.autograd.function.InplaceFunction.vmap"]], "nestediofunction (class in torch.autograd.function)": [[906, "torch.autograd.function.NestedIOFunction"]], "backward() (torch.autograd.function.nestediofunction method)": [[906, "torch.autograd.function.NestedIOFunction.backward"]], "backward_extended() (torch.autograd.function.nestediofunction method)": [[906, "torch.autograd.function.NestedIOFunction.backward_extended"]], "forward() (torch.autograd.function.nestediofunction method)": [[906, "torch.autograd.function.NestedIOFunction.forward"]], "forward_extended() (torch.autograd.function.nestediofunction method)": [[906, "torch.autograd.function.NestedIOFunction.forward_extended"]], "jvp() (torch.autograd.function.nestediofunction static method)": [[906, "torch.autograd.function.NestedIOFunction.jvp"]], "mark_dirty() (torch.autograd.function.nestediofunction method)": [[906, "torch.autograd.function.NestedIOFunction.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.nestediofunction method)": [[906, "torch.autograd.function.NestedIOFunction.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.nestediofunction method)": [[906, "torch.autograd.function.NestedIOFunction.save_for_backward"]], "save_for_forward() (torch.autograd.function.nestediofunction method)": [[906, "torch.autograd.function.NestedIOFunction.save_for_forward"]], "saved_tensors (torch.autograd.function.nestediofunction property)": [[906, "torch.autograd.function.NestedIOFunction.saved_tensors"]], "set_materialize_grads() (torch.autograd.function.nestediofunction method)": [[906, "torch.autograd.function.NestedIOFunction.set_materialize_grads"]], "setup_context() (torch.autograd.function.nestediofunction static method)": [[906, "torch.autograd.function.NestedIOFunction.setup_context"]], "vjp() (torch.autograd.function.nestediofunction static method)": [[906, "torch.autograd.function.NestedIOFunction.vjp"]], "vmap() (torch.autograd.function.nestediofunction static method)": [[906, "torch.autograd.function.NestedIOFunction.vmap"]], "once_differentiable() (in module torch.autograd.function)": [[907, "torch.autograd.function.once_differentiable"]], "hessian() (in module torch.autograd.functional)": [[908, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[909, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[910, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[911, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[912, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[913, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[914, "torch.autograd.grad"]], "clone() (torch.autograd.grad_mode.inference_mode method)": [[915, "torch.autograd.grad_mode.inference_mode.clone"]], "inference_mode (class in torch.autograd.grad_mode)": [[915, "torch.autograd.grad_mode.inference_mode"]], "clone() (torch.autograd.grad_mode.set_grad_enabled method)": [[916, "torch.autograd.grad_mode.set_grad_enabled.clone"]], "set_grad_enabled (class in torch.autograd.grad_mode)": [[916, "torch.autograd.grad_mode.set_grad_enabled"]], "clone() (torch.autograd.grad_mode.set_multithreading_enabled method)": [[917, "torch.autograd.grad_mode.set_multithreading_enabled.clone"]], "set_multithreading_enabled (class in torch.autograd.grad_mode)": [[917, "torch.autograd.grad_mode.set_multithreading_enabled"]], "gradcheckerror": [[918, "torch.autograd.gradcheck.GradcheckError"]], "gradcheck() (in module torch.autograd.gradcheck)": [[919, "torch.autograd.gradcheck.gradcheck"]], "gradgradcheck() (in module torch.autograd.gradcheck)": [[920, "torch.autograd.gradcheck.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[921, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[922, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[923, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[924, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[925, "torch.autograd.graph.Node.register_prehook"]], "increment_version() (in module torch.autograd.graph)": [[926, "torch.autograd.graph.increment_version"]], "enforceunique (class in torch.autograd.profiler)": [[927, "torch.autograd.profiler.EnforceUnique"]], "see() (torch.autograd.profiler.enforceunique method)": [[927, "torch.autograd.profiler.EnforceUnique.see"]], "kinetosteptracker (class in torch.autograd.profiler)": [[928, "torch.autograd.profiler.KinetoStepTracker"]], "current_step() (torch.autograd.profiler.kinetosteptracker class method)": [[928, "torch.autograd.profiler.KinetoStepTracker.current_step"]], "erase_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[928, "torch.autograd.profiler.KinetoStepTracker.erase_step_count"]], "increment_step() (torch.autograd.profiler.kinetosteptracker class method)": [[928, "torch.autograd.profiler.KinetoStepTracker.increment_step"]], "init_step_count() (torch.autograd.profiler.kinetosteptracker class method)": [[928, "torch.autograd.profiler.KinetoStepTracker.init_step_count"]], "load_nvprof() (in module torch.autograd.profiler)": [[929, "torch.autograd.profiler.load_nvprof"]], "parse_nvprof_trace() (in module torch.autograd.profiler)": [[930, "torch.autograd.profiler.parse_nvprof_trace"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[931, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[932, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[933, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[934, "torch.autograd.profiler.profile.total_average"]], "record_function (class in torch.autograd.profiler)": [[935, "torch.autograd.profiler.record_function"]], "interval (class in torch.autograd.profiler_util)": [[936, "torch.autograd.profiler_util.Interval"]], "elapsed_us() (torch.autograd.profiler_util.interval method)": [[936, "torch.autograd.profiler_util.Interval.elapsed_us"]], "kernel (class in torch.autograd.profiler_util)": [[937, "torch.autograd.profiler_util.Kernel"]], "count() (torch.autograd.profiler_util.kernel method)": [[937, "torch.autograd.profiler_util.Kernel.count"]], "device (torch.autograd.profiler_util.kernel attribute)": [[937, "torch.autograd.profiler_util.Kernel.device"]], "duration (torch.autograd.profiler_util.kernel attribute)": [[937, "torch.autograd.profiler_util.Kernel.duration"]], "index() (torch.autograd.profiler_util.kernel method)": [[937, "torch.autograd.profiler_util.Kernel.index"]], "name (torch.autograd.profiler_util.kernel attribute)": [[937, "torch.autograd.profiler_util.Kernel.name"]], "memrecordsacc (class in torch.autograd.profiler_util)": [[938, "torch.autograd.profiler_util.MemRecordsAcc"]], "in_interval() (torch.autograd.profiler_util.memrecordsacc method)": [[938, "torch.autograd.profiler_util.MemRecordsAcc.in_interval"]], "stringtable (class in torch.autograd.profiler_util)": [[939, "torch.autograd.profiler_util.StringTable"]], "clear() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.clear"]], "copy() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.copy"]], "default_factory (torch.autograd.profiler_util.stringtable attribute)": [[939, "torch.autograd.profiler_util.StringTable.default_factory"]], "fromkeys() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.fromkeys"]], "get() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.get"]], "items() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.items"]], "keys() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.keys"]], "pop() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.pop"]], "popitem() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.popitem"]], "setdefault() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.setdefault"]], "update() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.update"]], "values() (torch.autograd.profiler_util.stringtable method)": [[939, "torch.autograd.profiler_util.StringTable.values"]], "baddbmm() (in module torch)": [[940, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[941, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[942, "torch.bernoulli"]], "bincount() (in module torch)": [[943, "torch.bincount"]], "bitwise_and() (in module torch)": [[944, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[945, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[946, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[947, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[948, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[949, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[950, "torch.blackman_window"]], "block_diag() (in module torch)": [[951, "torch.block_diag"]], "bmm() (in module torch)": [[952, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[953, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[954, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[955, "torch.broadcast_to"]], "bucketize() (in module torch)": [[956, "torch.bucketize"]], "can_cast() (in module torch)": [[957, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[958, "torch.cartesian_prod"]], "cat() (in module torch)": [[959, "torch.cat"]], "cdist() (in module torch)": [[960, "torch.cdist"]], "ceil() (in module torch)": [[961, "torch.ceil"]], "chain_matmul() (in module torch)": [[962, "torch.chain_matmul"]], "cholesky() (in module torch)": [[963, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[964, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[965, "torch.cholesky_solve"]], "chunk() (in module torch)": [[966, "torch.chunk"]], "clamp() (in module torch)": [[967, "torch.clamp"]], "clip() (in module torch)": [[968, "torch.clip"]], "clone() (in module torch)": [[969, "torch.clone"]], "column_stack() (in module torch)": [[970, "torch.column_stack"]], "combinations() (in module torch)": [[971, "torch.combinations"]], "compile() (in module torch)": [[972, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[973, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[974, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[975, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[976, "torch.compiler.compile"]], "cudagraph_mark_step_begin() (in module torch.compiler)": [[977, "torch.compiler.cudagraph_mark_step_begin"]], "disable() (in module torch.compiler)": [[978, "torch.compiler.disable"]], "is_compiling() (in module torch.compiler)": [[979, "torch.compiler.is_compiling"]], "is_dynamo_compiling() (in module torch.compiler)": [[980, "torch.compiler.is_dynamo_compiling"]], "list_backends() (in module torch.compiler)": [[981, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[982, "torch.compiler.reset"]], "complex() (in module torch)": [[983, "torch.complex"]], "concat() (in module torch)": [[984, "torch.concat"]], "concatenate() (in module torch)": [[985, "torch.concatenate"]], "cond() (in module torch)": [[986, "torch.cond"]], "conj() (in module torch)": [[987, "torch.conj"]], "conj_physical() (in module torch)": [[988, "torch.conj_physical"]], "copysign() (in module torch)": [[989, "torch.copysign"]], "corrcoef() (in module torch)": [[990, "torch.corrcoef"]], "cos() (in module torch)": [[991, "torch.cos"]], "cosh() (in module torch)": [[992, "torch.cosh"]], "count_nonzero() (in module torch)": [[993, "torch.count_nonzero"]], "cov() (in module torch)": [[994, "torch.cov"]], "stream (class in torch.cpu)": [[995, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[996, "torch.cpu.StreamContext"]], "current_device() (in module torch.cpu)": [[997, "torch.cpu.current_device"]], "current_stream() (in module torch.cpu)": [[998, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[999, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[1000, "torch.cpu.is_available"]], "set_device() (in module torch.cpu)": [[1001, "torch.cpu.set_device"]], "stream() (in module torch.cpu)": [[1002, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[1003, "torch.cpu.synchronize"]], "cross() (in module torch)": [[1004, "torch.cross"]], "cudagraph (class in torch.cuda)": [[1005, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[1005, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[1005, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[1005, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[1005, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[1005, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[1005, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[1005, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[1006, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[1007, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[1007, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[1007, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[1007, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[1007, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[1007, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[1007, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[1007, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[1008, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[1008, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[1008, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[1008, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[1008, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[1008, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[1009, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[1010, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[1010, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[1010, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[1010, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[1010, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[1010, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[1011, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[1012, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[1013, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[1014, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[1015, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[1016, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[1017, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[1018, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[1019, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[1020, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[1021, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[1022, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[1023, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[1024, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[1025, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[1026, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[1027, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[1028, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[1029, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[1030, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[1031, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[1032, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1033, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1034, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1035, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1036, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1037, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1038, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1039, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1040, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1041, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1042, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1043, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1044, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1045, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1046, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1047, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1048, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1049, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1050, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1051, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1052, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1053, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1054, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1055, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1056, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1057, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1058, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1059, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1060, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1061, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1062, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1063, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1064, "torch.cuda.nvtx.mark"]], "range() (in module torch.cuda.nvtx)": [[1065, "torch.cuda.nvtx.range"]], "range_pop() (in module torch.cuda.nvtx)": [[1066, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1067, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1068, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1069, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1070, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1071, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1072, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1073, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1074, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1075, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1076, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1077, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1078, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1079, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1080, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1081, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1082, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1083, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1084, "torch.cummax"]], "cummin() (in module torch)": [[1085, "torch.cummin"]], "cumprod() (in module torch)": [[1086, "torch.cumprod"]], "cumsum() (in module torch)": [[1087, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1088, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1089, "torch.deg2rad"]], "dequantize() (in module torch)": [[1090, "torch.dequantize"]], "det() (in module torch)": [[1091, "torch.det"]], "diag() (in module torch)": [[1092, "torch.diag"]], "diag_embed() (in module torch)": [[1093, "torch.diag_embed"]], "diagflat() (in module torch)": [[1094, "torch.diagflat"]], "diagonal() (in module torch)": [[1095, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1096, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1097, "torch.diff"]], "digamma() (in module torch)": [[1098, "torch.digamma"]], "dist() (in module torch)": [[1099, "torch.dist"]], "div() (in module torch)": [[1100, "torch.div"]], "divide() (in module torch)": [[1101, "torch.divide"]], "dot() (in module torch)": [[1102, "torch.dot"]], "dsplit() (in module torch)": [[1103, "torch.dsplit"]], "dstack() (in module torch)": [[1104, "torch.dstack"]], "einsum() (in module torch)": [[1105, "torch.einsum"]], "empty() (in module torch)": [[1106, "torch.empty"]], "empty_like() (in module torch)": [[1107, "torch.empty_like"]], "empty_strided() (in module torch)": [[1108, "torch.empty_strided"]], "enable_grad (class in torch)": [[1109, "torch.enable_grad"]], "eq() (in module torch)": [[1110, "torch.eq"]], "equal() (in module torch)": [[1111, "torch.equal"]], "erf() (in module torch)": [[1112, "torch.erf"]], "erfc() (in module torch)": [[1113, "torch.erfc"]], "erfinv() (in module torch)": [[1114, "torch.erfinv"]], "exp() (in module torch)": [[1115, "torch.exp"]], "exp2() (in module torch)": [[1116, "torch.exp2"]], "expm1() (in module torch)": [[1117, "torch.expm1"]], "eye() (in module torch)": [[1118, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1119, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1120, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1121, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1122, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1123, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1124, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1125, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1126, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1127, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1128, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1129, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1130, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1131, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1132, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1133, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1134, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1135, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1136, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1137, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1138, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1139, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1140, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1141, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1142, "torch.fft.rfftn"]], "fix() (in module torch)": [[1143, "torch.fix"]], "flatten() (in module torch)": [[1144, "torch.flatten"]], "flip() (in module torch)": [[1145, "torch.flip"]], "fliplr() (in module torch)": [[1146, "torch.fliplr"]], "flipud() (in module torch)": [[1147, "torch.flipud"]], "float_power() (in module torch)": [[1148, "torch.float_power"]], "floor() (in module torch)": [[1149, "torch.floor"]], "floor_divide() (in module torch)": [[1150, "torch.floor_divide"]], "fmax() (in module torch)": [[1151, "torch.fmax"]], "fmin() (in module torch)": [[1152, "torch.fmin"]], "fmod() (in module torch)": [[1153, "torch.fmod"]], "frac() (in module torch)": [[1154, "torch.frac"]], "frexp() (in module torch)": [[1155, "torch.frexp"]], "from_dlpack() (in module torch)": [[1156, "torch.from_dlpack"]], "from_file() (in module torch)": [[1157, "torch.from_file"]], "from_numpy() (in module torch)": [[1158, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1159, "torch.frombuffer"]], "full() (in module torch)": [[1160, "torch.full"]], "full_like() (in module torch)": [[1161, "torch.full_like"]], "functional_call() (in module torch.func)": [[1162, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1163, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1164, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1165, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1166, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1167, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1168, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1169, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1170, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1171, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1172, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1173, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1174, "torch.func.vmap"]], "callmethodkey (class in torch.fx.experimental.symbolic_shapes)": [[1175, "torch.fx.experimental.symbolic_shapes.CallMethodKey"]], "get() (torch.fx.experimental.symbolic_shapes.callmethodkey method)": [[1175, "torch.fx.experimental.symbolic_shapes.CallMethodKey.get"]], "convertintkey (class in torch.fx.experimental.symbolic_shapes)": [[1176, "torch.fx.experimental.symbolic_shapes.ConvertIntKey"]], "get() (torch.fx.experimental.symbolic_shapes.convertintkey method)": [[1176, "torch.fx.experimental.symbolic_shapes.ConvertIntKey.get"]], "dimconstraints (class in torch.fx.experimental.symbolic_shapes)": [[1177, "torch.fx.experimental.symbolic_shapes.DimConstraints"]], "add() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1177, "torch.fx.experimental.symbolic_shapes.DimConstraints.add"]], "add_equality() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1177, "torch.fx.experimental.symbolic_shapes.DimConstraints.add_equality"]], "forced_specializations() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1177, "torch.fx.experimental.symbolic_shapes.DimConstraints.forced_specializations"]], "prettify_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1177, "torch.fx.experimental.symbolic_shapes.DimConstraints.prettify_results"]], "remove_redundant_dynamic_results() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1177, "torch.fx.experimental.symbolic_shapes.DimConstraints.remove_redundant_dynamic_results"]], "rewrite_with_congruences() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1177, "torch.fx.experimental.symbolic_shapes.DimConstraints.rewrite_with_congruences"]], "solve() (torch.fx.experimental.symbolic_shapes.dimconstraints method)": [[1177, "torch.fx.experimental.symbolic_shapes.DimConstraints.solve"]], "dimdynamic (class in torch.fx.experimental.symbolic_shapes)": [[1178, "torch.fx.experimental.symbolic_shapes.DimDynamic"]], "equalityconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1179, "torch.fx.experimental.symbolic_shapes.EqualityConstraint"]], "relaxedunspecconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1180, "torch.fx.experimental.symbolic_shapes.RelaxedUnspecConstraint"]], "shapeenv (class in torch.fx.experimental.symbolic_shapes)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv"]], "add_var_to_val() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.add_var_to_val"]], "bind_symbols() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.bind_symbols"]], "bound_sympy() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.bound_sympy"]], "check_equal() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.check_equal"]], "cleanup() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.cleanup"]], "create_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbol"]], "create_symbolic_sizes_strides_storage_offset() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symbolic_sizes_strides_storage_offset"]], "create_symboolnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symboolnode"]], "create_symintnode() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_symintnode"]], "create_unbacked_symbool() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symbool"]], "create_unbacked_symfloat() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symfloat"]], "create_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unbacked_symint"]], "create_unspecified_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symbol"]], "create_unspecified_symint_and_symbol() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.create_unspecified_symint_and_symbol"]], "defer_runtime_assert() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.defer_runtime_assert"]], "evaluate_expr() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_expr"]], "evaluate_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_expression"]], "evaluate_guards_for_args() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.evaluate_guards_for_args"]], "format_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.format_guards"]], "freeze() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.freeze"]], "get_nontrivial_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.get_nontrivial_guards"]], "is_unbacked_symint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.is_unbacked_symint"]], "produce_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards"]], "produce_guards_expression() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.produce_guards_expression"]], "replace() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.replace"]], "simplify() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.simplify"]], "size_hint() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.size_hint"]], "suppress_guards() (torch.fx.experimental.symbolic_shapes.shapeenv method)": [[1181, "torch.fx.experimental.symbolic_shapes.ShapeEnv.suppress_guards"]], "shapeenvsettings (class in torch.fx.experimental.symbolic_shapes)": [[1182, "torch.fx.experimental.symbolic_shapes.ShapeEnvSettings"]], "statefulsymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1183, "torch.fx.experimental.symbolic_shapes.StatefulSymbolicContext"]], "statelesssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1184, "torch.fx.experimental.symbolic_shapes.StatelessSymbolicContext"]], "strictminmaxconstraint (class in torch.fx.experimental.symbolic_shapes)": [[1185, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint"]], "render() (torch.fx.experimental.symbolic_shapes.strictminmaxconstraint method)": [[1185, "torch.fx.experimental.symbolic_shapes.StrictMinMaxConstraint.render"]], "subclasssymboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1186, "torch.fx.experimental.symbolic_shapes.SubclassSymbolicContext"]], "symboliccontext (class in torch.fx.experimental.symbolic_shapes)": [[1187, "torch.fx.experimental.symbolic_shapes.SymbolicContext"]], "canonicalize_bool_expr() (in module torch.fx.experimental.symbolic_shapes)": [[1188, "torch.fx.experimental.symbolic_shapes.canonicalize_bool_expr"]], "check_consistent() (in module torch.fx.experimental.symbolic_shapes)": [[1189, "torch.fx.experimental.symbolic_shapes.check_consistent"]], "compute_unbacked_bindings() (in module torch.fx.experimental.symbolic_shapes)": [[1190, "torch.fx.experimental.symbolic_shapes.compute_unbacked_bindings"]], "constrain_range() (in module torch.fx.experimental.symbolic_shapes)": [[1191, "torch.fx.experimental.symbolic_shapes.constrain_range"]], "constrain_unify() (in module torch.fx.experimental.symbolic_shapes)": [[1192, "torch.fx.experimental.symbolic_shapes.constrain_unify"]], "definitely_false() (in module torch.fx.experimental.symbolic_shapes)": [[1193, "torch.fx.experimental.symbolic_shapes.definitely_false"]], "definitely_true() (in module torch.fx.experimental.symbolic_shapes)": [[1194, "torch.fx.experimental.symbolic_shapes.definitely_true"]], "guard_size_oblivious() (in module torch.fx.experimental.symbolic_shapes)": [[1195, "torch.fx.experimental.symbolic_shapes.guard_size_oblivious"]], "has_free_symbols() (in module torch.fx.experimental.symbolic_shapes)": [[1196, "torch.fx.experimental.symbolic_shapes.has_free_symbols"]], "hint_int() (in module torch.fx.experimental.symbolic_shapes)": [[1197, "torch.fx.experimental.symbolic_shapes.hint_int"]], "is_concrete_bool() (in module torch.fx.experimental.symbolic_shapes)": [[1198, "torch.fx.experimental.symbolic_shapes.is_concrete_bool"]], "is_concrete_int() (in module torch.fx.experimental.symbolic_shapes)": [[1199, "torch.fx.experimental.symbolic_shapes.is_concrete_int"]], "lru_cache() (in module torch.fx.experimental.symbolic_shapes)": [[1200, "torch.fx.experimental.symbolic_shapes.lru_cache"]], "parallel_and() (in module torch.fx.experimental.symbolic_shapes)": [[1201, "torch.fx.experimental.symbolic_shapes.parallel_and"]], "parallel_or() (in module torch.fx.experimental.symbolic_shapes)": [[1202, "torch.fx.experimental.symbolic_shapes.parallel_or"]], "rebind_unbacked() (in module torch.fx.experimental.symbolic_shapes)": [[1203, "torch.fx.experimental.symbolic_shapes.rebind_unbacked"]], "statically_known_true() (in module torch.fx.experimental.symbolic_shapes)": [[1204, "torch.fx.experimental.symbolic_shapes.statically_known_true"]], "sym_eq() (in module torch.fx.experimental.symbolic_shapes)": [[1205, "torch.fx.experimental.symbolic_shapes.sym_eq"]], "gather() (in module torch)": [[1206, "torch.gather"]], "gcd() (in module torch)": [[1207, "torch.gcd"]], "ge() (in module torch)": [[1208, "torch.ge"]], "geqrf() (in module torch)": [[1209, "torch.geqrf"]], "ger() (in module torch)": [[1210, "torch.ger"]], "get_default_device() (in module torch)": [[1211, "torch.get_default_device"]], "get_default_dtype() (in module torch)": [[1212, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1213, "torch.get_deterministic_debug_mode"]], "get_device_module() (in module torch)": [[1214, "torch.get_device_module"]], "get_float32_matmul_precision() (in module torch)": [[1215, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1216, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1217, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1218, "torch.get_rng_state"]], "gradient() (in module torch)": [[1219, "torch.gradient"]], "greater() (in module torch)": [[1220, "torch.greater"]], "greater_equal() (in module torch)": [[1221, "torch.greater_equal"]], "gt() (in module torch)": [[1222, "torch.gt"]], "hamming_window() (in module torch)": [[1223, "torch.hamming_window"]], "hann_window() (in module torch)": [[1224, "torch.hann_window"]], "heaviside() (in module torch)": [[1225, "torch.heaviside"]], "histc() (in module torch)": [[1226, "torch.histc"]], "histogram() (in module torch)": [[1227, "torch.histogram"]], "histogramdd() (in module torch)": [[1228, "torch.histogramdd"]], "hsplit() (in module torch)": [[1229, "torch.hsplit"]], "hspmm() (in module torch)": [[1230, "torch.hspmm"]], "hstack() (in module torch)": [[1231, "torch.hstack"]], "hypot() (in module torch)": [[1232, "torch.hypot"]], "i0() (in module torch)": [[1233, "torch.i0"]], "igamma() (in module torch)": [[1234, "torch.igamma"]], "igammac() (in module torch)": [[1235, "torch.igammac"]], "imag() (in module torch)": [[1236, "torch.imag"]], "index_add() (in module torch)": [[1237, "torch.index_add"]], "index_copy() (in module torch)": [[1238, "torch.index_copy"]], "index_reduce() (in module torch)": [[1239, "torch.index_reduce"]], "index_select() (in module torch)": [[1240, "torch.index_select"]], "initial_seed() (in module torch)": [[1241, "torch.initial_seed"]], "inner() (in module torch)": [[1242, "torch.inner"]], "inverse() (in module torch)": [[1243, "torch.inverse"]], "is_complex() (in module torch)": [[1244, "torch.is_complex"]], "is_conj() (in module torch)": [[1245, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1246, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1247, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1248, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1249, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1250, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1251, "torch.is_storage"]], "is_tensor() (in module torch)": [[1252, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1253, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1254, "torch.isclose"]], "isfinite() (in module torch)": [[1255, "torch.isfinite"]], "isin() (in module torch)": [[1256, "torch.isin"]], "isinf() (in module torch)": [[1257, "torch.isinf"]], "isnan() (in module torch)": [[1258, "torch.isnan"]], "isneginf() (in module torch)": [[1259, "torch.isneginf"]], "isposinf() (in module torch)": [[1260, "torch.isposinf"]], "isreal() (in module torch)": [[1261, "torch.isreal"]], "istft() (in module torch)": [[1262, "torch.istft"]], "attribute (class in torch.jit)": [[1263, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1263, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1263, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1263, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1263, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1264, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1264, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1264, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1264, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1265, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1265, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1265, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1265, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1265, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1265, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1266, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1267, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1268, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1269, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1270, "torch.jit.ignore"]], "interface() (in module torch.jit)": [[1271, "torch.jit.interface"]], "isinstance() (in module torch.jit)": [[1272, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1273, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1274, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1275, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1276, "torch.jit.save"]], "script() (in module torch.jit)": [[1277, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1278, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1279, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1280, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1281, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1282, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1283, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1284, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1285, "torch.kaiser_window"]], "kron() (in module torch)": [[1286, "torch.kron"]], "kthvalue() (in module torch)": [[1287, "torch.kthvalue"]], "lcm() (in module torch)": [[1288, "torch.lcm"]], "ldexp() (in module torch)": [[1289, "torch.ldexp"]], "le() (in module torch)": [[1290, "torch.le"]], "lerp() (in module torch)": [[1291, "torch.lerp"]], "less() (in module torch)": [[1292, "torch.less"]], "less_equal() (in module torch)": [[1293, "torch.less_equal"]], "lgamma() (in module torch)": [[1294, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1295, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1296, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1297, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1298, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1299, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1300, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1301, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1302, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1303, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1304, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1305, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1306, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1307, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1308, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1309, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1310, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1311, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1312, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1313, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1314, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1315, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1316, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1317, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1318, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1319, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1320, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1321, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1322, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1323, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1324, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1325, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1326, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1327, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1328, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1329, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1330, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1331, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1332, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1333, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1334, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1335, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1336, "torch.linspace"]], "load() (in module torch)": [[1337, "torch.load"]], "lobpcg() (in module torch)": [[1338, "torch.lobpcg"]], "log() (in module torch)": [[1339, "torch.log"]], "log10() (in module torch)": [[1340, "torch.log10"]], "log1p() (in module torch)": [[1341, "torch.log1p"]], "log2() (in module torch)": [[1342, "torch.log2"]], "logaddexp() (in module torch)": [[1343, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1344, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1345, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1346, "torch.logdet"]], "logical_and() (in module torch)": [[1347, "torch.logical_and"]], "logical_not() (in module torch)": [[1348, "torch.logical_not"]], "logical_or() (in module torch)": [[1349, "torch.logical_or"]], "logical_xor() (in module torch)": [[1350, "torch.logical_xor"]], "logit() (in module torch)": [[1351, "torch.logit"]], "logspace() (in module torch)": [[1352, "torch.logspace"]], "logsumexp() (in module torch)": [[1353, "torch.logsumexp"]], "lt() (in module torch)": [[1354, "torch.lt"]], "lu() (in module torch)": [[1355, "torch.lu"]], "lu_solve() (in module torch)": [[1356, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1357, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1358, "torch.manual_seed"]], "masked_select() (in module torch)": [[1359, "torch.masked_select"]], "matmul() (in module torch)": [[1360, "torch.matmul"]], "matrix_exp() (in module torch)": [[1361, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1362, "torch.matrix_power"]], "max() (in module torch)": [[1363, "torch.max"]], "maximum() (in module torch)": [[1364, "torch.maximum"]], "mean() (in module torch)": [[1365, "torch.mean"]], "median() (in module torch)": [[1366, "torch.median"]], "meshgrid() (in module torch)": [[1367, "torch.meshgrid"]], "min() (in module torch)": [[1368, "torch.min"]], "minimum() (in module torch)": [[1369, "torch.minimum"]], "mm() (in module torch)": [[1370, "torch.mm"]], "mode() (in module torch)": [[1371, "torch.mode"]], "moveaxis() (in module torch)": [[1372, "torch.moveaxis"]], "movedim() (in module torch)": [[1373, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1374, "torch.mps.current_allocated_memory"]], "device_count() (in module torch.mps)": [[1375, "torch.mps.device_count"]], "driver_allocated_memory() (in module torch.mps)": [[1376, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1377, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1378, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1378, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1378, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1378, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1378, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1378, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1379, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1380, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1381, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1382, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1383, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1384, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1385, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1386, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1387, "torch.mps.synchronize"]], "msort() (in module torch)": [[1388, "torch.msort"]], "deferredmtiacallerror": [[1389, "torch.mtia.DeferredMtiaCallError"]], "event (class in torch.mtia)": [[1390, "torch.mtia.Event"]], "stream (class in torch.mtia)": [[1391, "torch.mtia.Stream"]], "streamcontext (class in torch.mtia)": [[1392, "torch.mtia.StreamContext"]], "current_device() (in module torch.mtia)": [[1393, "torch.mtia.current_device"]], "current_stream() (in module torch.mtia)": [[1394, "torch.mtia.current_stream"]], "default_stream() (in module torch.mtia)": [[1395, "torch.mtia.default_stream"]], "device (class in torch.mtia)": [[1396, "torch.mtia.device"]], "device_count() (in module torch.mtia)": [[1397, "torch.mtia.device_count"]], "init() (in module torch.mtia)": [[1398, "torch.mtia.init"]], "is_available() (in module torch.mtia)": [[1399, "torch.mtia.is_available"]], "is_initialized() (in module torch.mtia)": [[1400, "torch.mtia.is_initialized"]], "set_stream() (in module torch.mtia)": [[1401, "torch.mtia.set_stream"]], "stream() (in module torch.mtia)": [[1402, "torch.mtia.stream"]], "synchronize() (in module torch.mtia)": [[1403, "torch.mtia.synchronize"]], "mul() (in module torch)": [[1404, "torch.mul"]], "multinomial() (in module torch)": [[1405, "torch.multinomial"]], "multiply() (in module torch)": [[1406, "torch.multiply"]], "mv() (in module torch)": [[1407, "torch.mv"]], "mvlgamma() (in module torch)": [[1408, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1409, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1410, "torch.nanmean"]], "nanmedian() (in module torch)": [[1411, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1412, "torch.nanquantile"]], "nansum() (in module torch)": [[1413, "torch.nansum"]], "narrow() (in module torch)": [[1414, "torch.narrow"]], "narrow_copy() (in module torch)": [[1415, "torch.narrow_copy"]], "ne() (in module torch)": [[1416, "torch.ne"]], "neg() (in module torch)": [[1417, "torch.neg"]], "negative() (in module torch)": [[1418, "torch.negative"]], "nextafter() (in module torch)": [[1419, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1420, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1421, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1422, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1423, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1423, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1423, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1424, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1425, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1426, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1427, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1428, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1429, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1430, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1431, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1432, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1433, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1434, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1435, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1436, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1437, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1438, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1439, "torch.nn.ChannelShuffle"]], "circularpad1d (class in torch.nn)": [[1440, "torch.nn.CircularPad1d"]], "circularpad2d (class in torch.nn)": [[1441, "torch.nn.CircularPad2d"]], "circularpad3d (class in torch.nn)": [[1442, "torch.nn.CircularPad3d"]], "constantpad1d (class in torch.nn)": [[1443, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1444, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1445, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1446, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1447, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1448, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1449, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1450, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1451, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1452, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1453, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1454, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1455, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1456, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1457, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1458, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1459, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1460, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1461, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1461, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1462, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1462, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1462, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1463, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1464, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1465, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1466, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1467, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1468, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1469, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1470, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1471, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1472, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1473, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1474, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1475, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1476, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1477, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1478, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1479, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1480, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1481, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1482, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1483, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1484, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1485, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1486, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1487, "torch.nn.LPPool2d"]], "lppool3d (class in torch.nn)": [[1488, "torch.nn.LPPool3d"]], "lstm (class in torch.nn)": [[1489, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1490, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1491, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1492, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1492, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1493, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1493, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1494, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1494, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1495, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1495, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1496, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1496, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1497, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1497, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1498, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1498, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1499, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1499, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1500, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1500, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1501, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1501, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1502, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1502, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1503, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1503, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1504, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1504, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1505, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1506, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1507, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1508, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1509, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1510, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1511, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1512, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1513, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1514, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1515, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1516, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1517, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1518, "torch.nn.Mish"]], "module (class in torch.nn)": [[1519, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1519, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1519, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1519, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1519, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1519, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1519, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1519, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1519, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1519, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1519, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1519, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1519, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1519, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1519, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1519, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1519, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1519, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1519, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1519, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1519, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1519, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1519, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1519, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1519, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1519, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1519, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1519, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1519, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1519, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1519, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1519, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1519, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1519, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1519, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1519, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1519, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1519, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1519, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1519, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1519, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1519, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1519, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1519, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1519, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1519, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1519, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1520, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1520, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1520, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1520, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1520, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1520, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1520, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1521, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1521, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1521, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1521, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1522, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1523, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1524, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1525, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1525, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1525, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1526, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1527, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1528, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1529, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1529, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1530, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1530, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1530, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1531, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1532, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1533, "torch.nn.PoissonNLLLoss"]], "rmsnorm (class in torch.nn)": [[1534, "torch.nn.RMSNorm"]], "extra_repr() (torch.nn.rmsnorm method)": [[1534, "torch.nn.RMSNorm.extra_repr"]], "forward() (torch.nn.rmsnorm method)": [[1534, "torch.nn.RMSNorm.forward"]], "reset_parameters() (torch.nn.rmsnorm method)": [[1534, "torch.nn.RMSNorm.reset_parameters"]], "rnn (class in torch.nn)": [[1535, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1536, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1536, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1537, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1538, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1539, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1540, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1541, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1542, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1543, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1544, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1545, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1546, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1547, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1548, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1548, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1549, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1550, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1551, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1552, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1553, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1554, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1555, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1556, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1557, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1558, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1559, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1559, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1560, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1561, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1562, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1563, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1563, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1563, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1564, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1564, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1565, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1565, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1566, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1566, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1567, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1567, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1568, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1569, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1570, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1571, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1572, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1573, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1574, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1575, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1576, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1577, "torch.nn.ZeroPad3d"]], "sdpbackend (class in torch.nn.attention)": [[1578, "torch.nn.attention.SDPBackend"]], "name (torch.nn.attention.sdpbackend property)": [[1578, "torch.nn.attention.SDPBackend.name"]], "causalbias (class in torch.nn.attention.bias)": [[1579, "torch.nn.attention.bias.CausalBias"]], "causalvariant (class in torch.nn.attention.bias)": [[1580, "torch.nn.attention.bias.CausalVariant"]], "causal_lower_right() (in module torch.nn.attention.bias)": [[1581, "torch.nn.attention.bias.causal_lower_right"]], "causal_upper_left() (in module torch.nn.attention.bias)": [[1582, "torch.nn.attention.bias.causal_upper_left"]], "sdpa_kernel() (in module torch.nn.attention)": [[1583, "torch.nn.attention.sdpa_kernel"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1584, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1585, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1586, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1587, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1588, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1589, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1590, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1591, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1592, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1593, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1594, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1595, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1596, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1597, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1598, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1599, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1600, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1601, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1602, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1603, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1604, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1605, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1606, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1607, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1608, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1609, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1610, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1611, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1612, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1613, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1614, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1615, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1616, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1617, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1618, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1619, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1620, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1621, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1622, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1623, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1624, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1625, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1626, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1627, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1628, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1629, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1630, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1631, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1632, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1633, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1634, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1635, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1636, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1637, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1638, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1639, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1640, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1641, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1642, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1643, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1644, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1645, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1646, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1647, "torch.nn.functional.lp_pool2d"]], "lp_pool3d() (in module torch.nn.functional)": [[1648, "torch.nn.functional.lp_pool3d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1649, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1650, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1651, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1652, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1653, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1654, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1655, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1656, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1657, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1658, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1659, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1660, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1661, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1662, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1663, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1664, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1665, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1666, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1667, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1668, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1669, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1670, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1671, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1672, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1673, "torch.nn.functional.relu_"]], "rms_norm() (in module torch.nn.functional)": [[1674, "torch.nn.functional.rms_norm"]], "rrelu() (in module torch.nn.functional)": [[1675, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1676, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1677, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1678, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1679, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1680, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1681, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1682, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1683, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1684, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1685, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1686, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1687, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1688, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1689, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1690, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1691, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1692, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1693, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1694, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1695, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1696, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1697, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1698, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1699, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1699, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1699, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1700, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1701, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1702, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1703, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1704, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1705, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1706, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1707, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "rmsnorm (class in torch.nn.modules.normalization)": [[1708, "torch.nn.modules.normalization.RMSNorm"]], "extra_repr() (torch.nn.modules.normalization.rmsnorm method)": [[1708, "torch.nn.modules.normalization.RMSNorm.extra_repr"]], "forward() (torch.nn.modules.normalization.rmsnorm method)": [[1708, "torch.nn.modules.normalization.RMSNorm.forward"]], "reset_parameters() (torch.nn.modules.normalization.rmsnorm method)": [[1708, "torch.nn.modules.normalization.RMSNorm.reset_parameters"]], "distributeddataparallel (class in torch.nn.parallel)": [[1709, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1709, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1709, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1709, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1709, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1710, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1711, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1712, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1712, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm() (in module torch.nn.utils)": [[1713, "torch.nn.utils.clip_grad_norm"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1714, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1715, "torch.nn.utils.clip_grad_value_"]], "convert_conv2d_weight_memory_format() (in module torch.nn.utils)": [[1716, "torch.nn.utils.convert_conv2d_weight_memory_format"]], "convert_conv3d_weight_memory_format() (in module torch.nn.utils)": [[1717, "torch.nn.utils.convert_conv3d_weight_memory_format"]], "fuse_conv_bn_eval() (in module torch.nn.utils)": [[1718, "torch.nn.utils.fuse_conv_bn_eval"]], "fuse_conv_bn_weights() (in module torch.nn.utils)": [[1719, "torch.nn.utils.fuse_conv_bn_weights"]], "fuse_linear_bn_eval() (in module torch.nn.utils)": [[1720, "torch.nn.utils.fuse_linear_bn_eval"]], "fuse_linear_bn_weights() (in module torch.nn.utils)": [[1721, "torch.nn.utils.fuse_linear_bn_weights"]], "parameters_to_vector() (in module torch.nn.utils)": [[1722, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1723, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1724, "torch.nn.utils.parametrizations.spectral_norm"]], "weight_norm() (in module torch.nn.utils.parametrizations)": [[1725, "torch.nn.utils.parametrizations.weight_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1726, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1726, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1727, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1728, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1729, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1730, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1731, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1731, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1731, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1731, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1731, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1731, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1732, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1732, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1732, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1732, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1732, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1733, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1733, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1733, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1733, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1733, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1734, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1734, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1734, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1734, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1734, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1735, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1735, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1735, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1735, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1735, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1735, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1736, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1736, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1736, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1736, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1736, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1736, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1736, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1737, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1737, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1737, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1737, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1737, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1737, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1738, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1738, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1738, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1738, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1738, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1739, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1740, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1741, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1742, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1743, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1744, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1745, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1746, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1747, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1748, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1749, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1750, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1750, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1750, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1750, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1750, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1750, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1750, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1750, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1750, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1750, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1751, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1752, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1753, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1754, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1755, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1756, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1757, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1758, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1759, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1760, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1761, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1762, "torch.no_grad"]], "nonzero() (in module torch)": [[1763, "torch.nonzero"]], "norm() (in module torch)": [[1764, "torch.norm"]], "normal() (in module torch)": [[1765, "torch.normal"]], "not_equal() (in module torch)": [[1766, "torch.not_equal"]], "numel() (in module torch)": [[1767, "torch.numel"]], "ones() (in module torch)": [[1768, "torch.ones"]], "ones_like() (in module torch)": [[1769, "torch.ones_like"]], "jitscalartype (class in torch.onnx)": [[1770, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1770, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1770, "torch.onnx.JitScalarType.from_dtype"]], "from_onnx_type() (torch.onnx.jitscalartype class method)": [[1770, "torch.onnx.JitScalarType.from_onnx_type"]], "from_value() (torch.onnx.jitscalartype class method)": [[1770, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1770, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1770, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1770, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1770, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1771, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1771, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1772, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1773, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1773, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1774, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1774, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1775, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1775, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1776, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1776, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1776, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1776, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1776, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1776, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1776, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1776, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1776, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1776, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1776, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1776, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1777, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1777, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1778, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1778, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1779, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1779, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1780, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1780, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1781, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1782, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1783, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1784, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1785, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1786, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1786, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1787, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1787, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1788, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1788, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1789, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1789, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1790, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1790, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1791, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1791, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1791, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1791, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1791, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1792, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1792, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1792, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1792, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1792, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1793, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1793, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1793, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1793, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1793, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1794, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1794, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1794, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1794, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1794, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1794, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1795, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1795, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1795, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1795, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1796, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1796, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1796, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1796, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1796, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1797, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1797, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1797, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1797, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1797, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1798, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1798, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1798, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1798, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1798, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1799, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1799, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1799, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1799, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1799, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1800, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1800, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1800, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1800, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1800, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1801, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1801, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1801, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1801, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1801, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1802, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1802, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1802, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1802, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1802, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1803, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "get_last_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1803, "torch.optim.lr_scheduler.ReduceLROnPlateau.get_last_lr"]], "print_lr() (torch.optim.lr_scheduler.reducelronplateau method)": [[1803, "torch.optim.lr_scheduler.ReduceLROnPlateau.print_lr"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1804, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1804, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1804, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1804, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1804, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1805, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1805, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1805, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1805, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1805, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1806, "torch.orgqr"]], "ormqr() (in module torch)": [[1807, "torch.ormqr"]], "outer() (in module torch)": [[1808, "torch.outer"]], "pca_lowrank() (in module torch)": [[1809, "torch.pca_lowrank"]], "permute() (in module torch)": [[1810, "torch.permute"]], "pinverse() (in module torch)": [[1811, "torch.pinverse"]], "poisson() (in module torch)": [[1812, "torch.poisson"]], "polar() (in module torch)": [[1813, "torch.polar"]], "polygamma() (in module torch)": [[1814, "torch.polygamma"]], "positive() (in module torch)": [[1815, "torch.positive"]], "pow() (in module torch)": [[1816, "torch.pow"]], "prod() (in module torch)": [[1817, "torch.prod"]], "promote_types() (in module torch)": [[1818, "torch.promote_types"]], "qr() (in module torch)": [[1819, "torch.qr"]], "quantile() (in module torch)": [[1820, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1821, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1822, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1823, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1824, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1825, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1826, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1826, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1826, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1826, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1826, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1827, "torch.rad2deg"]], "rand() (in module torch)": [[1828, "torch.rand"]], "rand_like() (in module torch)": [[1829, "torch.rand_like"]], "randint() (in module torch)": [[1830, "torch.randint"]], "randint_like() (in module torch)": [[1831, "torch.randint_like"]], "randn() (in module torch)": [[1832, "torch.randn"]], "randn_like() (in module torch)": [[1833, "torch.randn_like"]], "randperm() (in module torch)": [[1834, "torch.randperm"]], "range() (in module torch)": [[1835, "torch.range"]], "ravel() (in module torch)": [[1836, "torch.ravel"]], "real() (in module torch)": [[1837, "torch.real"]], "reciprocal() (in module torch)": [[1838, "torch.reciprocal"]], "remainder() (in module torch)": [[1839, "torch.remainder"]], "renorm() (in module torch)": [[1840, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1841, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1842, "torch.reshape"]], "resolve_conj() (in module torch)": [[1843, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1844, "torch.resolve_neg"]], "result_type() (in module torch)": [[1845, "torch.result_type"]], "roll() (in module torch)": [[1846, "torch.roll"]], "rot90() (in module torch)": [[1847, "torch.rot90"]], "round() (in module torch)": [[1848, "torch.round"]], "row_stack() (in module torch)": [[1849, "torch.row_stack"]], "rsqrt() (in module torch)": [[1850, "torch.rsqrt"]], "save() (in module torch)": [[1851, "torch.save"]], "scatter() (in module torch)": [[1852, "torch.scatter"]], "scatter_add() (in module torch)": [[1853, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1854, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1855, "torch.searchsorted"]], "seed() (in module torch)": [[1856, "torch.seed"]], "select() (in module torch)": [[1857, "torch.select"]], "select_scatter() (in module torch)": [[1858, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1859, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1860, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1861, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1862, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1863, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1864, "torch.set_flush_denormal"]], "set_num_interop_threads() (in module torch)": [[1865, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1866, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1867, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1868, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1869, "torch.set_warn_always"]], "sgn() (in module torch)": [[1870, "torch.sgn"]], "sigmoid() (in module torch)": [[1871, "torch.sigmoid"]], "sign() (in module torch)": [[1872, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1873, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1874, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1875, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1876, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1877, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1878, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1879, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1880, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1881, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1882, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1883, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1884, "torch.signbit"]], "sin() (in module torch)": [[1885, "torch.sin"]], "sinc() (in module torch)": [[1886, "torch.sinc"]], "sinh() (in module torch)": [[1887, "torch.sinh"]], "slice_scatter() (in module torch)": [[1888, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1889, "torch.slogdet"]], "smm() (in module torch)": [[1890, "torch.smm"]], "softmax() (in module torch)": [[1891, "torch.softmax"]], "sort() (in module torch)": [[1892, "torch.sort"]], "addmm() (in module torch.sparse)": [[1893, "torch.sparse.addmm"]], "as_sparse_gradcheck() (in module torch.sparse)": [[1894, "torch.sparse.as_sparse_gradcheck"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1895, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1895, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1895, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1895, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1896, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1897, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1898, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1899, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1900, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1901, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1902, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1903, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1904, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1905, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1906, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1907, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1908, "torch.split"]], "sqrt() (in module torch)": [[1909, "torch.sqrt"]], "square() (in module torch)": [[1910, "torch.square"]], "squeeze() (in module torch)": [[1911, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1912, "torch.sspaddmm"]], "stack() (in module torch)": [[1913, "torch.stack"]], "std() (in module torch)": [[1914, "torch.std"]], "std_mean() (in module torch)": [[1915, "torch.std_mean"]], "stft() (in module torch)": [[1916, "torch.stft"]], "sub() (in module torch)": [[1917, "torch.sub"]], "subtract() (in module torch)": [[1918, "torch.subtract"]], "sum() (in module torch)": [[1919, "torch.sum"]], "svd() (in module torch)": [[1920, "torch.svd"]], "svd_lowrank() (in module torch)": [[1921, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1922, "torch.swapaxes"]], "swapdims() (in module torch)": [[1923, "torch.swapdims"]], "sym_float() (in module torch)": [[1924, "torch.sym_float"]], "sym_int() (in module torch)": [[1925, "torch.sym_int"]], "sym_ite() (in module torch)": [[1926, "torch.sym_ite"]], "sym_max() (in module torch)": [[1927, "torch.sym_max"]], "sym_min() (in module torch)": [[1928, "torch.sym_min"]], "sym_not() (in module torch)": [[1929, "torch.sym_not"]], "t() (in module torch)": [[1930, "torch.t"]], "take() (in module torch)": [[1931, "torch.take"]], "take_along_dim() (in module torch)": [[1932, "torch.take_along_dim"]], "tan() (in module torch)": [[1933, "torch.tan"]], "tanh() (in module torch)": [[1934, "torch.tanh"]], "tensor() (in module torch)": [[1935, "torch.tensor"]], "tensor_split() (in module torch)": [[1936, "torch.tensor_split"]], "tensordot() (in module torch)": [[1937, "torch.tensordot"]], "tile() (in module torch)": [[1938, "torch.tile"]], "topk() (in module torch)": [[1939, "torch.topk"]], "trace() (in module torch)": [[1940, "torch.trace"]], "transpose() (in module torch)": [[1941, "torch.transpose"]], "trapezoid() (in module torch)": [[1942, "torch.trapezoid"]], "trapz() (in module torch)": [[1943, "torch.trapz"]], "triangular_solve() (in module torch)": [[1944, "torch.triangular_solve"]], "tril() (in module torch)": [[1945, "torch.tril"]], "tril_indices() (in module torch)": [[1946, "torch.tril_indices"]], "triu() (in module torch)": [[1947, "torch.triu"]], "triu_indices() (in module torch)": [[1948, "torch.triu_indices"]], "true_divide() (in module torch)": [[1949, "torch.true_divide"]], "trunc() (in module torch)": [[1950, "torch.trunc"]], "unbind() (in module torch)": [[1951, "torch.unbind"]], "unflatten() (in module torch)": [[1952, "torch.unflatten"]], "unique() (in module torch)": [[1953, "torch.unique"]], "unique_consecutive() (in module torch)": [[1954, "torch.unique_consecutive"]], "unravel_index() (in module torch)": [[1955, "torch.unravel_index"]], "unsqueeze() (in module torch)": [[1956, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1957, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1958, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1959, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1960, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1961, "torch.utils.set_module"]], "swap_tensors() (in module torch.utils)": [[1962, "torch.utils.swap_tensors"]], "vander() (in module torch)": [[1963, "torch.vander"]], "var() (in module torch)": [[1964, "torch.var"]], "var_mean() (in module torch)": [[1965, "torch.var_mean"]], "vdot() (in module torch)": [[1966, "torch.vdot"]], "view_as_complex() (in module torch)": [[1967, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1968, "torch.view_as_real"]], "vmap() (in module torch)": [[1969, "torch.vmap"]], "vsplit() (in module torch)": [[1970, "torch.vsplit"]], "vstack() (in module torch)": [[1971, "torch.vstack"]], "where() (in module torch)": [[1972, "torch.where"]], "xlogy() (in module torch)": [[1973, "torch.xlogy"]], "event (class in torch.xpu)": [[1974, "torch.xpu.Event"]], "elapsed_time() (torch.xpu.event method)": [[1974, "torch.xpu.Event.elapsed_time"]], "query() (torch.xpu.event method)": [[1974, "torch.xpu.Event.query"]], "record() (torch.xpu.event method)": [[1974, "torch.xpu.Event.record"]], "synchronize() (torch.xpu.event method)": [[1974, "torch.xpu.Event.synchronize"]], "wait() (torch.xpu.event method)": [[1974, "torch.xpu.Event.wait"]], "stream (class in torch.xpu)": [[1975, "torch.xpu.Stream"]], "query() (torch.xpu.stream method)": [[1975, "torch.xpu.Stream.query"]], "record_event() (torch.xpu.stream method)": [[1975, "torch.xpu.Stream.record_event"]], "synchronize() (torch.xpu.stream method)": [[1975, "torch.xpu.Stream.synchronize"]], "wait_event() (torch.xpu.stream method)": [[1975, "torch.xpu.Stream.wait_event"]], "wait_stream() (torch.xpu.stream method)": [[1975, "torch.xpu.Stream.wait_stream"]], "streamcontext (class in torch.xpu)": [[1976, "torch.xpu.StreamContext"]], "current_device() (in module torch.xpu)": [[1977, "torch.xpu.current_device"]], "current_stream() (in module torch.xpu)": [[1978, "torch.xpu.current_stream"]], "device (class in torch.xpu)": [[1979, "torch.xpu.device"]], "device_count() (in module torch.xpu)": [[1980, "torch.xpu.device_count"]], "device_of (class in torch.xpu)": [[1981, "torch.xpu.device_of"]], "empty_cache() (in module torch.xpu)": [[1982, "torch.xpu.empty_cache"]], "get_device_capability() (in module torch.xpu)": [[1983, "torch.xpu.get_device_capability"]], "get_device_name() (in module torch.xpu)": [[1984, "torch.xpu.get_device_name"]], "get_device_properties() (in module torch.xpu)": [[1985, "torch.xpu.get_device_properties"]], "get_rng_state() (in module torch.xpu)": [[1986, "torch.xpu.get_rng_state"]], "get_rng_state_all() (in module torch.xpu)": [[1987, "torch.xpu.get_rng_state_all"]], "init() (in module torch.xpu)": [[1988, "torch.xpu.init"]], "initial_seed() (in module torch.xpu)": [[1989, "torch.xpu.initial_seed"]], "is_available() (in module torch.xpu)": [[1990, "torch.xpu.is_available"]], "is_initialized() (in module torch.xpu)": [[1991, "torch.xpu.is_initialized"]], "manual_seed() (in module torch.xpu)": [[1992, "torch.xpu.manual_seed"]], "manual_seed_all() (in module torch.xpu)": [[1993, "torch.xpu.manual_seed_all"]], "seed() (in module torch.xpu)": [[1994, "torch.xpu.seed"]], "seed_all() (in module torch.xpu)": [[1995, "torch.xpu.seed_all"]], "set_device() (in module torch.xpu)": [[1996, "torch.xpu.set_device"]], "set_rng_state() (in module torch.xpu)": [[1997, "torch.xpu.set_rng_state"]], "set_rng_state_all() (in module torch.xpu)": [[1998, "torch.xpu.set_rng_state_all"]], "set_stream() (in module torch.xpu)": [[1999, "torch.xpu.set_stream"]], "stream() (in module torch.xpu)": [[2000, "torch.xpu.stream"]], "synchronize() (in module torch.xpu)": [[2001, "torch.xpu.synchronize"]], "zeros() (in module torch)": [[2002, "torch.zeros"]], "zeros_like() (in module torch)": [[2003, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[2004, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[2004, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[2004, "torch.hub.help"]], "list() (in module torch.hub)": [[2004, "torch.hub.list"]], "load() (in module torch.hub)": [[2004, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[2004, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[2004, "torch.hub.set_dir"]], "torch.hub": [[2004, "module-torch.hub"]], "pytorch_jit": [[2006, "envvar-PYTORCH_JIT"]], "environment variable": [[2006, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[2006, "torch.jit.export"]], "torch.jit": [[2006, "module-torch.jit"]], "torch.jit.annotations": [[2006, "module-torch.jit.annotations"]], "torch.jit.frontend": [[2006, "module-torch.jit.frontend"]], "torch.jit.generate_bytecode": [[2006, "module-torch.jit.generate_bytecode"]], "torch.jit.mobile": [[2006, "module-torch.jit.mobile"]], "torch.jit.quantized": [[2006, "module-torch.jit.quantized"]], "torch.jit.supported_ops": [[2007, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[2008, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[2008, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[2011, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[2012, "module-torch.utils.jit"]], "library (class in torch.library)": [[2013, "torch.library.Library"]], "custom_op() (in module torch.library)": [[2013, "torch.library.custom_op"]], "define() (in module torch.library)": [[2013, "torch.library.define"]], "define() (torch.library.library method)": [[2013, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[2013, "torch.library.fallthrough_kernel"]], "get_ctx() (in module torch.library)": [[2013, "torch.library.get_ctx"]], "impl() (in module torch.library)": [[2013, "torch.library.impl"]], "impl() (torch.library.library method)": [[2013, "torch.library.Library.impl"]], "impl_abstract() (in module torch.library)": [[2013, "torch.library.impl_abstract"]], "opcheck() (in module torch.library)": [[2013, "torch.library.opcheck"]], "register_autograd() (in module torch.library)": [[2013, "torch.library.register_autograd"]], "register_fake() (in module torch.library)": [[2013, "torch.library.register_fake"]], "register_kernel() (in module torch.library)": [[2013, "torch.library.register_kernel"]], "torch.library": [[2013, "module-torch.library"]], "torch.linalg": [[2014, "module-torch.linalg"]], "torch._logging": [[2015, "module-torch._logging"]], "torch.masked": [[2016, "module-torch.masked"]], "torch.masked.maskedtensor": [[2016, "module-torch.masked.maskedtensor"]], "torch.masked.maskedtensor.binary": [[2016, "module-torch.masked.maskedtensor.binary"]], "torch.masked.maskedtensor.core": [[2016, "module-torch.masked.maskedtensor.core"]], "torch.masked.maskedtensor.creation": [[2016, "module-torch.masked.maskedtensor.creation"]], "torch.masked.maskedtensor.passthrough": [[2016, "module-torch.masked.maskedtensor.passthrough"]], "torch.masked.maskedtensor.reductions": [[2016, "module-torch.masked.maskedtensor.reductions"]], "torch.masked.maskedtensor.unary": [[2016, "module-torch.masked.maskedtensor.unary"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[2019, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[2020, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[2020, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[2021, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[2021, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[2021, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[2021, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[2021, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[2021, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[2021, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[2021, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[2021, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[2021, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[2021, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[2021, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[2021, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[2021, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[2021, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[2021, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[2021, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[2021, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[2021, "torch.monitor.Event.timestamp"]], "torch.monitor": [[2021, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[2021, "torch.monitor.unregister_event_handler"]], "torch.mps": [[2022, "module-torch.mps"]], "torch.mps.event": [[2022, "module-torch.mps.event"]], "torch.mps.profiler": [[2022, "module-torch.mps.profiler"]], "torch.mtia": [[2023, "module-torch.mtia"]], "spawncontext (class in torch.multiprocessing)": [[2024, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[2024, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[2024, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[2024, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[2024, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing.spawn)": [[2024, "torch.multiprocessing.spawn.spawn"]], "torch.multiprocessing": [[2024, "module-torch.multiprocessing"]], "torch.multiprocessing.pool": [[2024, "module-torch.multiprocessing.pool"]], "torch.multiprocessing.queue": [[2024, "module-torch.multiprocessing.queue"]], "torch.multiprocessing.reductions": [[2024, "module-torch.multiprocessing.reductions"]], "torch.multiprocessing.spawn": [[2024, "module-torch.multiprocessing.spawn"]], "align_as() (torch.tensor method)": [[2026, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[2026, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[2026, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[2026, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[2026, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[2026, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[2027, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[2027, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[2027, "torch.nested.to_padded_tensor"]], "torch.nested": [[2027, "module-torch.nested"]], "torch.nn": [[2028, "module-torch.nn"]], "torch.nn.backends": [[2028, "module-torch.nn.backends"]], "torch.nn.backends.thnn": [[2028, "module-torch.nn.backends.thnn"]], "torch.nn.common_types": [[2028, "module-torch.nn.common_types"]], "torch.nn.cpp": [[2028, "module-torch.nn.cpp"]], "torch.nn.functional": [[2028, "module-torch.nn.functional"]], "torch.nn.grad": [[2028, "module-torch.nn.grad"]], "torch.nn.init": [[2028, "module-torch.nn.init"]], "torch.nn.modules": [[2028, "module-torch.nn.modules"]], "torch.nn.modules.activation": [[2028, "module-torch.nn.modules.activation"]], "torch.nn.modules.adaptive": [[2028, "module-torch.nn.modules.adaptive"]], "torch.nn.modules.batchnorm": [[2028, "module-torch.nn.modules.batchnorm"]], "torch.nn.modules.channelshuffle": [[2028, "module-torch.nn.modules.channelshuffle"]], "torch.nn.modules.container": [[2028, "module-torch.nn.modules.container"]], "torch.nn.modules.conv": [[2028, "module-torch.nn.modules.conv"]], "torch.nn.modules.distance": [[2028, "module-torch.nn.modules.distance"]], "torch.nn.modules.dropout": [[2028, "module-torch.nn.modules.dropout"]], "torch.nn.modules.flatten": [[2028, "module-torch.nn.modules.flatten"]], "torch.nn.modules.fold": [[2028, "module-torch.nn.modules.fold"]], "torch.nn.modules.instancenorm": [[2028, "module-torch.nn.modules.instancenorm"]], "torch.nn.modules.lazy": [[2028, "module-torch.nn.modules.lazy"]], "torch.nn.modules.linear": [[2028, "module-torch.nn.modules.linear"]], "torch.nn.modules.loss": [[2028, "module-torch.nn.modules.loss"]], "torch.nn.modules.module": [[2028, "module-torch.nn.modules.module"]], "torch.nn.modules.normalization": [[2028, "module-torch.nn.modules.normalization"]], "torch.nn.modules.padding": [[2028, "module-torch.nn.modules.padding"]], "torch.nn.modules.pixelshuffle": [[2028, "module-torch.nn.modules.pixelshuffle"]], "torch.nn.modules.pooling": [[2028, "module-torch.nn.modules.pooling"]], "torch.nn.modules.rnn": [[2028, "module-torch.nn.modules.rnn"]], "torch.nn.modules.sparse": [[2028, "module-torch.nn.modules.sparse"]], "torch.nn.modules.transformer": [[2028, "module-torch.nn.modules.transformer"]], "torch.nn.modules.upsampling": [[2028, "module-torch.nn.modules.upsampling"]], "torch.nn.modules.utils": [[2028, "module-torch.nn.modules.utils"]], "torch.nn.parallel": [[2028, "module-torch.nn.parallel"]], "torch.nn.parallel.comm": [[2028, "module-torch.nn.parallel.comm"]], "torch.nn.parallel.distributed": [[2028, "module-torch.nn.parallel.distributed"]], "torch.nn.parallel.parallel_apply": [[2028, "module-torch.nn.parallel.parallel_apply"]], "torch.nn.parallel.replicate": [[2028, "module-torch.nn.parallel.replicate"]], "torch.nn.parallel.scatter_gather": [[2028, "module-torch.nn.parallel.scatter_gather"]], "torch.nn.parameter": [[2028, "module-torch.nn.parameter"]], "torch.nn.utils": [[2028, "module-torch.nn.utils"]], "torch.nn.utils.clip_grad": [[2028, "module-torch.nn.utils.clip_grad"]], "torch.nn.utils.convert_parameters": [[2028, "module-torch.nn.utils.convert_parameters"]], "torch.nn.utils.fusion": [[2028, "module-torch.nn.utils.fusion"]], "torch.nn.utils.init": [[2028, "module-torch.nn.utils.init"]], "torch.nn.utils.memory_format": [[2028, "module-torch.nn.utils.memory_format"]], "torch.nn.utils.parametrizations": [[2028, "module-torch.nn.utils.parametrizations"]], "torch.nn.utils.parametrize": [[2028, "module-torch.nn.utils.parametrize"]], "torch.nn.utils.prune": [[2028, "module-torch.nn.utils.prune"]], "torch.nn.utils.rnn": [[2028, "module-torch.nn.utils.rnn"]], "torch.nn.utils.stateless": [[2028, "module-torch.nn.utils.stateless"]], "torch.nn.attention": [[2029, "module-torch.nn.attention"]], "torch.nn.attention.bias": [[2030, "module-torch.nn.attention.bias"]], "calculate_gain() (in module torch.nn.init)": [[2032, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[2032, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[2032, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[2032, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[2032, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[2032, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[2032, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[2032, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[2032, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[2032, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[2032, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[2032, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[2032, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[2032, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[2032, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[2051, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[2051, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[2051, "torch.serialization.set_default_load_endianness"]], "torch.onnx.errors": [[2053, "module-torch.onnx.errors"]], "torch.onnx.operators": [[2053, "module-torch.onnx.operators"]], "torch.onnx.symbolic_caffe2": [[2053, "module-torch.onnx.symbolic_caffe2"]], "torch.onnx.symbolic_helper": [[2053, "module-torch.onnx.symbolic_helper"]], "torch.onnx.symbolic_opset10": [[2053, "module-torch.onnx.symbolic_opset10"]], "torch.onnx.symbolic_opset11": [[2053, "module-torch.onnx.symbolic_opset11"]], "torch.onnx.symbolic_opset12": [[2053, "module-torch.onnx.symbolic_opset12"]], "torch.onnx.symbolic_opset13": [[2053, "module-torch.onnx.symbolic_opset13"]], "torch.onnx.symbolic_opset14": [[2053, "module-torch.onnx.symbolic_opset14"]], "torch.onnx.symbolic_opset15": [[2053, "module-torch.onnx.symbolic_opset15"]], "torch.onnx.symbolic_opset16": [[2053, "module-torch.onnx.symbolic_opset16"]], "torch.onnx.symbolic_opset17": [[2053, "module-torch.onnx.symbolic_opset17"]], "torch.onnx.symbolic_opset18": [[2053, "module-torch.onnx.symbolic_opset18"]], "torch.onnx.symbolic_opset19": [[2053, "module-torch.onnx.symbolic_opset19"]], "torch.onnx.symbolic_opset20": [[2053, "module-torch.onnx.symbolic_opset20"]], "torch.onnx.symbolic_opset7": [[2053, "module-torch.onnx.symbolic_opset7"]], "torch.onnx.symbolic_opset8": [[2053, "module-torch.onnx.symbolic_opset8"]], "torch.onnx.symbolic_opset9": [[2053, "module-torch.onnx.symbolic_opset9"]], "torch.onnx.utils": [[2053, "module-torch.onnx.utils"]], "torch.onnx.verification": [[2053, "module-torch.onnx.verification"]], "diagnosticoptions (class in torch.onnx)": [[2054, "torch.onnx.DiagnosticOptions"]], "exportoptions (class in torch.onnx)": [[2054, "torch.onnx.ExportOptions"]], "invalidexportoptionserror (class in torch.onnx)": [[2054, "torch.onnx.InvalidExportOptionsError"]], "onnxprogram (class in torch.onnx)": [[2054, "torch.onnx.ONNXProgram"]], "onnxprogramserializer (class in torch.onnx)": [[2054, "torch.onnx.ONNXProgramSerializer"]], "onnxruntimeoptions (class in torch.onnx)": [[2054, "torch.onnx.ONNXRuntimeOptions"]], "onnxexportererror (class in torch.onnx)": [[2054, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[2054, "torch.onnx.OnnxRegistry"]], "adapt_torch_inputs_to_onnx() (torch.onnx.onnxprogram method)": [[2054, "torch.onnx.ONNXProgram.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.onnxprogram method)": [[2054, "torch.onnx.ONNXProgram.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.onnxprogram property)": [[2054, "torch.onnx.ONNXProgram.diagnostic_context"]], "dynamo_export() (in module torch.onnx)": [[2054, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[2054, "torch.onnx.enable_fake_mode"]], "fake_context (torch.onnx.onnxprogram property)": [[2054, "torch.onnx.ONNXProgram.fake_context"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[2054, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[2054, "torch.onnx.OnnxRegistry.is_registered_op"]], "model_proto (torch.onnx.onnxprogram property)": [[2054, "torch.onnx.ONNXProgram.model_proto"]], "model_signature (torch.onnx.onnxprogram property)": [[2054, "torch.onnx.ONNXProgram.model_signature"]], "opset_version (torch.onnx.onnxregistry property)": [[2054, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[2054, "torch.onnx.OnnxRegistry.register_op"]], "save() (torch.onnx.onnxprogram method)": [[2054, "torch.onnx.ONNXProgram.save"]], "save_diagnostics() (torch.onnx.onnxprogram method)": [[2054, "torch.onnx.ONNXProgram.save_diagnostics"]], "serialize() (torch.onnx.onnxprogramserializer method)": [[2054, "torch.onnx.ONNXProgramSerializer.serialize"]], "is_onnxrt_backend_supported() (in module torch.onnx)": [[2055, "torch.onnx.is_onnxrt_backend_supported"]], "disable_log() (in module torch.onnx)": [[2056, "torch.onnx.disable_log"]], "enable_log() (in module torch.onnx)": [[2056, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[2056, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[2056, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[2056, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[2056, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[2056, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[2056, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[2056, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[2056, "torch.onnx.unregister_custom_op_symbolic"]], "optimizer (class in torch.optim)": [[2058, "torch.optim.Optimizer"]], "torch.optim": [[2058, "module-torch.optim"]], "torch.optim.adadelta": [[2058, "module-torch.optim.adadelta"]], "torch.optim.adagrad": [[2058, "module-torch.optim.adagrad"]], "torch.optim.adam": [[2058, "module-torch.optim.adam"]], "torch.optim.adamax": [[2058, "module-torch.optim.adamax"]], "torch.optim.adamw": [[2058, "module-torch.optim.adamw"]], "torch.optim.asgd": [[2058, "module-torch.optim.asgd"]], "torch.optim.lbfgs": [[2058, "module-torch.optim.lbfgs"]], "torch.optim.lr_scheduler": [[2058, "module-torch.optim.lr_scheduler"]], "torch.optim.nadam": [[2058, "module-torch.optim.nadam"]], "torch.optim.optimizer": [[2058, "module-torch.optim.optimizer"]], "torch.optim.radam": [[2058, "module-torch.optim.radam"]], "torch.optim.rmsprop": [[2058, "module-torch.optim.rmsprop"]], "torch.optim.rprop": [[2058, "module-torch.optim.rprop"]], "torch.optim.sgd": [[2058, "module-torch.optim.sgd"]], "torch.optim.sparse_adam": [[2058, "module-torch.optim.sparse_adam"]], "torch.optim.swa_utils": [[2058, "module-torch.optim.swa_utils"]], "directory (class in torch.package)": [[2059, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[2059, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[2059, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[2059, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[2059, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[2059, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[2059, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[2059, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[2059, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[2059, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[2059, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[2059, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[2059, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[2059, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[2059, "torch.package.PackageExporter.save_text"]], "torch.package": [[2059, "module-torch.package"]], "torch.package.analyze": [[2059, "module-torch.package.analyze"]], "torch.package.analyze.find_first_use_of_broken_modules": [[2059, "module-torch.package.analyze.find_first_use_of_broken_modules"]], "torch.package.analyze.is_from_package": [[2059, "module-torch.package.analyze.is_from_package"]], "torch.package.analyze.trace_dependencies": [[2059, "module-torch.package.analyze.trace_dependencies"]], "torch.package.file_structure_representation": [[2059, "module-torch.package.file_structure_representation"]], "torch.package.find_file_dependencies": [[2059, "module-torch.package.find_file_dependencies"]], "torch.package.glob_group": [[2059, "module-torch.package.glob_group"]], "torch.package.importer": [[2059, "module-torch.package.importer"]], "torch.package.package_exporter": [[2059, "module-torch.package.package_exporter"]], "torch.package.package_importer": [[2059, "module-torch.package.package_importer"]], "pipe (class in torch.distributed.pipeline.sync)": [[2060, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[2060, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[2060, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[2060, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[2060, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[2060, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[2061, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[2061, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[2061, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[2061, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[2061, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[2061, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[2061, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[2061, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[2061, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[2061, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[2061, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[2061, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[2061, "torch.profiler.ProfilerActivity.name"]], "preset_metadata_json() (torch.profiler._kinetoprofile method)": [[2061, "torch.profiler._KinetoProfile.preset_metadata_json"]], "profile (class in torch.profiler)": [[2061, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[2061, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[2061, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[2061, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[2061, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[2061, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[2061, "module-torch.profiler"]], "torch.profiler.itt": [[2061, "module-torch.profiler.itt"]], "torch.profiler.profiler": [[2061, "module-torch.profiler.profiler"]], "torch.profiler.python_tracer": [[2061, "module-torch.profiler.python_tracer"]], "torch.ao": [[2062, "module-torch.ao"]], "torch.ao.nn": [[2062, "module-torch.ao.nn"]], "torch.ao.nn.intrinsic.modules.fused": [[2062, "module-torch.ao.nn.intrinsic.modules.fused"]], "torch.ao.nn.intrinsic.qat.modules.conv_fused": [[2062, "module-torch.ao.nn.intrinsic.qat.modules.conv_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_fused": [[2062, "module-torch.ao.nn.intrinsic.qat.modules.linear_fused"]], "torch.ao.nn.intrinsic.qat.modules.linear_relu": [[2062, "module-torch.ao.nn.intrinsic.qat.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2062, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.ao.nn.intrinsic.quantized.modules.bn_relu": [[2062, "module-torch.ao.nn.intrinsic.quantized.modules.bn_relu"]], "torch.ao.nn.intrinsic.quantized.modules.conv_add": [[2062, "module-torch.ao.nn.intrinsic.quantized.modules.conv_add"]], "torch.ao.nn.intrinsic.quantized.modules.conv_relu": [[2062, "module-torch.ao.nn.intrinsic.quantized.modules.conv_relu"]], "torch.ao.nn.intrinsic.quantized.modules.linear_relu": [[2062, "module-torch.ao.nn.intrinsic.quantized.modules.linear_relu"]], "torch.ao.nn.qat.dynamic.modules.linear": [[2062, "module-torch.ao.nn.qat.dynamic.modules.linear"]], "torch.ao.nn.qat.modules.conv": [[2062, "module-torch.ao.nn.qat.modules.conv"]], "torch.ao.nn.qat.modules.embedding_ops": [[2062, "module-torch.ao.nn.qat.modules.embedding_ops"]], "torch.ao.nn.qat.modules.linear": [[2062, "module-torch.ao.nn.qat.modules.linear"]], "torch.ao.nn.quantizable": [[2062, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[2062, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantizable.modules.activation": [[2062, "module-torch.ao.nn.quantizable.modules.activation"]], "torch.ao.nn.quantizable.modules.rnn": [[2062, "module-torch.ao.nn.quantizable.modules.rnn"]], "torch.ao.nn.quantized": [[2062, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.dynamic.modules.conv": [[2062, "module-torch.ao.nn.quantized.dynamic.modules.conv"]], "torch.ao.nn.quantized.dynamic.modules.linear": [[2062, "module-torch.ao.nn.quantized.dynamic.modules.linear"]], "torch.ao.nn.quantized.dynamic.modules.rnn": [[2062, "module-torch.ao.nn.quantized.dynamic.modules.rnn"]], "torch.ao.nn.quantized.modules.activation": [[2062, "module-torch.ao.nn.quantized.modules.activation"]], "torch.ao.nn.quantized.modules.batchnorm": [[2062, "module-torch.ao.nn.quantized.modules.batchnorm"]], "torch.ao.nn.quantized.modules.conv": [[2062, "module-torch.ao.nn.quantized.modules.conv"]], "torch.ao.nn.quantized.modules.dropout": [[2062, "module-torch.ao.nn.quantized.modules.dropout"]], "torch.ao.nn.quantized.modules.embedding_ops": [[2062, "module-torch.ao.nn.quantized.modules.embedding_ops"]], "torch.ao.nn.quantized.modules.functional_modules": [[2062, "module-torch.ao.nn.quantized.modules.functional_modules"]], "torch.ao.nn.quantized.modules.linear": [[2062, "module-torch.ao.nn.quantized.modules.linear"]], "torch.ao.nn.quantized.modules.normalization": [[2062, "module-torch.ao.nn.quantized.modules.normalization"]], "torch.ao.nn.quantized.modules.rnn": [[2062, "module-torch.ao.nn.quantized.modules.rnn"]], "torch.ao.nn.quantized.modules.utils": [[2062, "module-torch.ao.nn.quantized.modules.utils"]], "torch.ao.nn.quantized.reference": [[2062, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[2062, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.quantized.reference.modules.conv": [[2062, "module-torch.ao.nn.quantized.reference.modules.conv"]], "torch.ao.nn.quantized.reference.modules.linear": [[2062, "module-torch.ao.nn.quantized.reference.modules.linear"]], "torch.ao.nn.quantized.reference.modules.rnn": [[2062, "module-torch.ao.nn.quantized.reference.modules.rnn"]], "torch.ao.nn.quantized.reference.modules.sparse": [[2062, "module-torch.ao.nn.quantized.reference.modules.sparse"]], "torch.ao.nn.quantized.reference.modules.utils": [[2062, "module-torch.ao.nn.quantized.reference.modules.utils"]], "torch.ao.nn.sparse": [[2062, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[2062, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[2062, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.nn.sparse.quantized.dynamic.linear": [[2062, "module-torch.ao.nn.sparse.quantized.dynamic.linear"]], "torch.ao.nn.sparse.quantized.linear": [[2062, "module-torch.ao.nn.sparse.quantized.linear"]], "torch.ao.nn.sparse.quantized.utils": [[2062, "module-torch.ao.nn.sparse.quantized.utils"]], "torch.ao.ns": [[2062, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[2062, "module-torch.ao.ns.fx"]], "torch.ao.ns.fx.graph_matcher": [[2062, "module-torch.ao.ns.fx.graph_matcher"]], "torch.ao.ns.fx.graph_passes": [[2062, "module-torch.ao.ns.fx.graph_passes"]], "torch.ao.ns.fx.mappings": [[2062, "module-torch.ao.ns.fx.mappings"]], "torch.ao.ns.fx.n_shadows_utils": [[2062, "module-torch.ao.ns.fx.n_shadows_utils"]], "torch.ao.ns.fx.ns_types": [[2062, "module-torch.ao.ns.fx.ns_types"]], "torch.ao.ns.fx.pattern_utils": [[2062, "module-torch.ao.ns.fx.pattern_utils"]], "torch.ao.ns.fx.qconfig_multi_mapping": [[2062, "module-torch.ao.ns.fx.qconfig_multi_mapping"]], "torch.ao.ns.fx.utils": [[2062, "module-torch.ao.ns.fx.utils"]], "torch.ao.ns.fx.weight_utils": [[2062, "module-torch.ao.ns.fx.weight_utils"]], "torch.ao.pruning": [[2062, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[2062, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.scheduler.base_scheduler": [[2062, "module-torch.ao.pruning.scheduler.base_scheduler"]], "torch.ao.pruning.scheduler.cubic_scheduler": [[2062, "module-torch.ao.pruning.scheduler.cubic_scheduler"]], "torch.ao.pruning.scheduler.lambda_scheduler": [[2062, "module-torch.ao.pruning.scheduler.lambda_scheduler"]], "torch.ao.pruning.sparsifier": [[2062, "module-torch.ao.pruning.sparsifier"]], "torch.ao.pruning.sparsifier.base_sparsifier": [[2062, "module-torch.ao.pruning.sparsifier.base_sparsifier"]], "torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier": [[2062, "module-torch.ao.pruning.sparsifier.nearly_diagonal_sparsifier"]], "torch.ao.pruning.sparsifier.utils": [[2062, "module-torch.ao.pruning.sparsifier.utils"]], "torch.ao.pruning.sparsifier.weight_norm_sparsifier": [[2062, "module-torch.ao.pruning.sparsifier.weight_norm_sparsifier"]], "torch.ao.quantization": [[2062, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[2062, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.backend_config.backend_config": [[2062, "module-torch.ao.quantization.backend_config.backend_config"]], "torch.ao.quantization.backend_config.executorch": [[2062, "module-torch.ao.quantization.backend_config.executorch"]], "torch.ao.quantization.backend_config.fbgemm": [[2062, "module-torch.ao.quantization.backend_config.fbgemm"]], "torch.ao.quantization.backend_config.native": [[2062, "module-torch.ao.quantization.backend_config.native"]], "torch.ao.quantization.backend_config.observation_type": [[2062, "module-torch.ao.quantization.backend_config.observation_type"]], "torch.ao.quantization.backend_config.onednn": [[2062, "module-torch.ao.quantization.backend_config.onednn"]], "torch.ao.quantization.backend_config.qnnpack": [[2062, "module-torch.ao.quantization.backend_config.qnnpack"]], "torch.ao.quantization.backend_config.tensorrt": [[2062, "module-torch.ao.quantization.backend_config.tensorrt"]], "torch.ao.quantization.backend_config.utils": [[2062, "module-torch.ao.quantization.backend_config.utils"]], "torch.ao.quantization.backend_config.x86": [[2062, "module-torch.ao.quantization.backend_config.x86"]], "torch.ao.quantization.fake_quantize": [[2062, "module-torch.ao.quantization.fake_quantize"]], "torch.ao.quantization.fuse_modules": [[2062, "module-torch.ao.quantization.fuse_modules"]], "torch.ao.quantization.fuser_method_mappings": [[2062, "module-torch.ao.quantization.fuser_method_mappings"]], "torch.ao.quantization.fx": [[2062, "module-torch.ao.quantization.fx"]], "torch.ao.quantization.fx.convert": [[2062, "module-torch.ao.quantization.fx.convert"]], "torch.ao.quantization.fx.custom_config": [[2062, "module-torch.ao.quantization.fx.custom_config"]], "torch.ao.quantization.fx.fuse": [[2062, "module-torch.ao.quantization.fx.fuse"]], "torch.ao.quantization.fx.fuse_handler": [[2062, "module-torch.ao.quantization.fx.fuse_handler"]], "torch.ao.quantization.fx.graph_module": [[2062, "module-torch.ao.quantization.fx.graph_module"]], "torch.ao.quantization.fx.lower_to_fbgemm": [[2062, "module-torch.ao.quantization.fx.lower_to_fbgemm"]], "torch.ao.quantization.fx.lower_to_qnnpack": [[2062, "module-torch.ao.quantization.fx.lower_to_qnnpack"]], "torch.ao.quantization.fx.lstm_utils": [[2062, "module-torch.ao.quantization.fx.lstm_utils"]], "torch.ao.quantization.fx.match_utils": [[2062, "module-torch.ao.quantization.fx.match_utils"]], "torch.ao.quantization.fx.pattern_utils": [[2062, "module-torch.ao.quantization.fx.pattern_utils"]], "torch.ao.quantization.fx.prepare": [[2062, "module-torch.ao.quantization.fx.prepare"]], "torch.ao.quantization.fx.qconfig_mapping_utils": [[2062, "module-torch.ao.quantization.fx.qconfig_mapping_utils"]], "torch.ao.quantization.fx.quantize_handler": [[2062, "module-torch.ao.quantization.fx.quantize_handler"]], "torch.ao.quantization.fx.tracer": [[2062, "module-torch.ao.quantization.fx.tracer"]], "torch.ao.quantization.fx.utils": [[2062, "module-torch.ao.quantization.fx.utils"]], "torch.ao.quantization.observer": [[2062, "module-torch.ao.quantization.observer"]], "torch.ao.quantization.pt2e.duplicate_dq_pass": [[2062, "module-torch.ao.quantization.pt2e.duplicate_dq_pass"]], "torch.ao.quantization.pt2e.export_utils": [[2062, "module-torch.ao.quantization.pt2e.export_utils"]], "torch.ao.quantization.pt2e.graph_utils": [[2062, "module-torch.ao.quantization.pt2e.graph_utils"]], "torch.ao.quantization.pt2e.port_metadata_pass": [[2062, "module-torch.ao.quantization.pt2e.port_metadata_pass"]], "torch.ao.quantization.pt2e.prepare": [[2062, "module-torch.ao.quantization.pt2e.prepare"]], "torch.ao.quantization.pt2e.qat_utils": [[2062, "module-torch.ao.quantization.pt2e.qat_utils"]], "torch.ao.quantization.pt2e.representation.rewrite": [[2062, "module-torch.ao.quantization.pt2e.representation.rewrite"]], "torch.ao.quantization.pt2e.utils": [[2062, "module-torch.ao.quantization.pt2e.utils"]], "torch.ao.quantization.qconfig": [[2062, "module-torch.ao.quantization.qconfig"]], "torch.ao.quantization.qconfig_mapping": [[2062, "module-torch.ao.quantization.qconfig_mapping"]], "torch.ao.quantization.quant_type": [[2062, "module-torch.ao.quantization.quant_type"]], "torch.ao.quantization.quantization_mappings": [[2062, "module-torch.ao.quantization.quantization_mappings"]], "torch.ao.quantization.quantize_fx": [[2062, "module-torch.ao.quantization.quantize_fx"]], "torch.ao.quantization.quantize_jit": [[2062, "module-torch.ao.quantization.quantize_jit"]], "torch.ao.quantization.quantize_pt2e": [[2062, "module-torch.ao.quantization.quantize_pt2e"]], "torch.ao.quantization.quantizer.composable_quantizer": [[2062, "module-torch.ao.quantization.quantizer.composable_quantizer"]], "torch.ao.quantization.quantizer.embedding_quantizer": [[2062, "module-torch.ao.quantization.quantizer.embedding_quantizer"]], "torch.ao.quantization.quantizer.quantizer": [[2062, "module-torch.ao.quantization.quantizer.quantizer"]], "torch.ao.quantization.quantizer.utils": [[2062, "module-torch.ao.quantization.quantizer.utils"]], "torch.ao.quantization.quantizer.x86_inductor_quantizer": [[2062, "module-torch.ao.quantization.quantizer.x86_inductor_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer": [[2062, "module-torch.ao.quantization.quantizer.xnnpack_quantizer"]], "torch.ao.quantization.quantizer.xnnpack_quantizer_utils": [[2062, "module-torch.ao.quantization.quantizer.xnnpack_quantizer_utils"]], "torch.ao.quantization.stubs": [[2062, "module-torch.ao.quantization.stubs"]], "torch.ao.quantization.utils": [[2062, "module-torch.ao.quantization.utils"]], "torch.nn.intrinsic.modules.fused": [[2062, "module-torch.nn.intrinsic.modules.fused"]], "torch.nn.intrinsic.qat.modules.conv_fused": [[2062, "module-torch.nn.intrinsic.qat.modules.conv_fused"]], "torch.nn.intrinsic.qat.modules.linear_fused": [[2062, "module-torch.nn.intrinsic.qat.modules.linear_fused"]], "torch.nn.intrinsic.qat.modules.linear_relu": [[2062, "module-torch.nn.intrinsic.qat.modules.linear_relu"]], "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu": [[2062, "module-torch.nn.intrinsic.quantized.dynamic.modules.linear_relu"]], "torch.nn.intrinsic.quantized.modules.bn_relu": [[2062, "module-torch.nn.intrinsic.quantized.modules.bn_relu"]], "torch.nn.intrinsic.quantized.modules.conv_relu": [[2062, "module-torch.nn.intrinsic.quantized.modules.conv_relu"]], "torch.nn.intrinsic.quantized.modules.linear_relu": [[2062, "module-torch.nn.intrinsic.quantized.modules.linear_relu"]], "torch.nn.qat.dynamic.modules.linear": [[2062, "module-torch.nn.qat.dynamic.modules.linear"]], "torch.nn.qat.modules.conv": [[2062, "module-torch.nn.qat.modules.conv"]], "torch.nn.qat.modules.embedding_ops": [[2062, "module-torch.nn.qat.modules.embedding_ops"]], "torch.nn.qat.modules.linear": [[2062, "module-torch.nn.qat.modules.linear"]], "torch.nn.quantizable.modules.activation": [[2062, "module-torch.nn.quantizable.modules.activation"]], "torch.nn.quantizable.modules.rnn": [[2062, "module-torch.nn.quantizable.modules.rnn"]], "torch.nn.quantized.dynamic.modules.conv": [[2062, "module-torch.nn.quantized.dynamic.modules.conv"]], "torch.nn.quantized.dynamic.modules.linear": [[2062, "module-torch.nn.quantized.dynamic.modules.linear"]], "torch.nn.quantized.dynamic.modules.rnn": [[2062, "module-torch.nn.quantized.dynamic.modules.rnn"]], "torch.nn.quantized.functional": [[2062, "module-torch.nn.quantized.functional"]], "torch.nn.quantized.modules.activation": [[2062, "module-torch.nn.quantized.modules.activation"]], "torch.nn.quantized.modules.batchnorm": [[2062, "module-torch.nn.quantized.modules.batchnorm"]], "torch.nn.quantized.modules.conv": [[2062, "module-torch.nn.quantized.modules.conv"]], "torch.nn.quantized.modules.dropout": [[2062, "module-torch.nn.quantized.modules.dropout"]], "torch.nn.quantized.modules.embedding_ops": [[2062, "module-torch.nn.quantized.modules.embedding_ops"]], "torch.nn.quantized.modules.functional_modules": [[2062, "module-torch.nn.quantized.modules.functional_modules"]], "torch.nn.quantized.modules.linear": [[2062, "module-torch.nn.quantized.modules.linear"]], "torch.nn.quantized.modules.normalization": [[2062, "module-torch.nn.quantized.modules.normalization"]], "torch.nn.quantized.modules.rnn": [[2062, "module-torch.nn.quantized.modules.rnn"]], "torch.nn.quantized.modules.utils": [[2062, "module-torch.nn.quantized.modules.utils"]], "torch.quantization.fake_quantize": [[2062, "module-torch.quantization.fake_quantize"]], "torch.quantization.fuse_modules": [[2062, "module-torch.quantization.fuse_modules"]], "torch.quantization.fuser_method_mappings": [[2062, "module-torch.quantization.fuser_method_mappings"]], "torch.quantization.fx.convert": [[2062, "module-torch.quantization.fx.convert"]], "torch.quantization.fx.fuse": [[2062, "module-torch.quantization.fx.fuse"]], "torch.quantization.fx.fusion_patterns": [[2062, "module-torch.quantization.fx.fusion_patterns"]], "torch.quantization.fx.graph_module": [[2062, "module-torch.quantization.fx.graph_module"]], "torch.quantization.fx.match_utils": [[2062, "module-torch.quantization.fx.match_utils"]], "torch.quantization.fx.pattern_utils": [[2062, "module-torch.quantization.fx.pattern_utils"]], "torch.quantization.fx.prepare": [[2062, "module-torch.quantization.fx.prepare"]], "torch.quantization.fx.quantization_patterns": [[2062, "module-torch.quantization.fx.quantization_patterns"]], "torch.quantization.fx.quantization_types": [[2062, "module-torch.quantization.fx.quantization_types"]], "torch.quantization.fx.utils": [[2062, "module-torch.quantization.fx.utils"]], "torch.quantization.observer": [[2062, "module-torch.quantization.observer"]], "torch.quantization.qconfig": [[2062, "module-torch.quantization.qconfig"]], "torch.quantization.quant_type": [[2062, "module-torch.quantization.quant_type"]], "torch.quantization.quantization_mappings": [[2062, "module-torch.quantization.quantization_mappings"]], "torch.quantization.quantize": [[2062, "module-torch.quantization.quantize"]], "torch.quantization.quantize_fx": [[2062, "module-torch.quantization.quantize_fx"]], "torch.quantization.quantize_jit": [[2062, "module-torch.quantization.quantize_jit"]], "torch.quantization.stubs": [[2062, "module-torch.quantization.stubs"]], "torch.quantization.utils": [[2062, "module-torch.quantization.utils"]], "torch.ao.nn.intrinsic": [[2065, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[2065, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[2065, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[2065, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[2065, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[2065, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[2065, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[2065, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[2065, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[2065, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[2065, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[2065, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[2065, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[2065, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[2065, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[2065, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[2065, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.generate_numeric_debug_handle": [[2065, "module-torch.ao.quantization.pt2e.generate_numeric_debug_handle"]], "torch.ao.quantization.pt2e.representation": [[2065, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[2065, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[2065, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[2065, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[2065, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[2065, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[2065, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[2065, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[2065, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[2065, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[2065, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[2065, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[2065, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[2065, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[2065, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[2065, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[2065, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[2065, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[2065, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[2065, "module-torch.nn.quantized.modules"]], "torch.quantization": [[2065, "module-torch.quantization"]], "torch.quantization.fx": [[2065, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[2066, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[2066, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[2066, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[2066, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[2066, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[2066, "torch.random.set_rng_state"]], "torch.random": [[2066, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[2067, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[2067, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[2067, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[2067, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[2067, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[2067, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[2067, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[2067, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[2067, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2067, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2067, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[2067, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2067, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[2067, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[2067, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[2067, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2067, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[2067, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[2067, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2067, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[2067, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[2067, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[2067, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[2067, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[2067, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[2067, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2067, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[2067, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[2067, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[2067, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[2067, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[2067, "module-torch.distributed.rpc"]], "torch.signal": [[2070, "module-torch.signal"]], "torch.signal.windows": [[2070, "module-torch.signal.windows"]], "size (class in torch)": [[2071, "torch.Size"]], "count() (torch.size method)": [[2071, "torch.Size.count"]], "index() (torch.size method)": [[2071, "torch.Size.index"]], "numel() (torch.size method)": [[2071, "torch.Size.numel"]], "torch.sparse": [[2072, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[2073, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[2073, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[2073, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[2073, "torch.special.digamma"]], "entr() (in module torch.special)": [[2073, "torch.special.entr"]], "erf() (in module torch.special)": [[2073, "torch.special.erf"]], "erfc() (in module torch.special)": [[2073, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[2073, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[2073, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[2073, "torch.special.exp2"]], "expit() (in module torch.special)": [[2073, "torch.special.expit"]], "expm1() (in module torch.special)": [[2073, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[2073, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[2073, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[2073, "torch.special.gammaln"]], "i0() (in module torch.special)": [[2073, "torch.special.i0"]], "i0e() (in module torch.special)": [[2073, "torch.special.i0e"]], "i1() (in module torch.special)": [[2073, "torch.special.i1"]], "i1e() (in module torch.special)": [[2073, "torch.special.i1e"]], "log1p() (in module torch.special)": [[2073, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[2073, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[2073, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[2073, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[2073, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[2073, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[2073, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[2073, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[2073, "torch.special.polygamma"]], "psi() (in module torch.special)": [[2073, "torch.special.psi"]], "round() (in module torch.special)": [[2073, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[2073, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[2073, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[2073, "torch.special.sinc"]], "softmax() (in module torch.special)": [[2073, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[2073, "torch.special.spherical_bessel_j0"]], "torch.special": [[2073, "module-torch.special"]], "xlog1py() (in module torch.special)": [[2073, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[2073, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[2073, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[2074, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[2074, "torch.BoolStorage"]], "bytestorage (class in torch)": [[2074, "torch.ByteStorage"]], "charstorage (class in torch)": [[2074, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[2074, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[2074, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[2074, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[2074, "torch.FloatStorage"]], "halfstorage (class in torch)": [[2074, "torch.HalfStorage"]], "intstorage (class in torch)": [[2074, "torch.IntStorage"]], "longstorage (class in torch)": [[2074, "torch.LongStorage"]], "qint32storage (class in torch)": [[2074, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[2074, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[2074, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[2074, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[2074, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[2074, "torch.ShortStorage"]], "typedstorage (class in torch)": [[2074, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[2074, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[2074, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[2074, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[2074, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[2074, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[2074, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[2074, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[2074, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[2074, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[2074, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[2074, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[2074, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[2074, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[2074, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[2074, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[2074, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[2074, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[2074, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[2074, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[2074, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[2074, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[2074, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[2074, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[2074, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[2074, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[2074, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[2074, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[2074, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[2074, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[2074, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[2074, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[2074, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[2074, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[2074, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.element_size"]], "filename (torch.typedstorage property)": [[2074, "torch.TypedStorage.filename"]], "filename (torch.untypedstorage property)": [[2074, "torch.UntypedStorage.filename"]], "fill_() (torch.typedstorage method)": [[2074, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[2074, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.float"]], "float8_e4m3fn() (torch.typedstorage method)": [[2074, "torch.TypedStorage.float8_e4m3fn"]], "float8_e4m3fn() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.float8_e4m3fn"]], "float8_e4m3fnuz() (torch.typedstorage method)": [[2074, "torch.TypedStorage.float8_e4m3fnuz"]], "float8_e4m3fnuz() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.float8_e4m3fnuz"]], "float8_e5m2() (torch.typedstorage method)": [[2074, "torch.TypedStorage.float8_e5m2"]], "float8_e5m2() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.float8_e5m2"]], "float8_e5m2fnuz() (torch.typedstorage method)": [[2074, "torch.TypedStorage.float8_e5m2fnuz"]], "float8_e5m2fnuz() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.float8_e5m2fnuz"]], "from_buffer() (torch.typedstorage class method)": [[2074, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[2074, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[2074, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[2074, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[2074, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[2074, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[2074, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[2074, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[2074, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[2074, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[2074, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[2074, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[2074, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[2074, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[2074, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[2074, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[2074, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[2074, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[2074, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[2074, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[2074, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.pin_memory"]], "resizable() (torch.typedstorage method)": [[2074, "torch.TypedStorage.resizable"]], "resizable() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.resizable"]], "resize_() (torch.typedstorage method)": [[2074, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[2074, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[2074, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[2074, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[2074, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[2074, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[2074, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[2074, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[2075, "torch.device"]], "dtype (class in torch)": [[2075, "torch.dtype"]], "layout (class in torch)": [[2075, "torch.layout"]], "memory_format (class in torch)": [[2075, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[2077, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[2077, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[2078, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[2078, "torch.Tensor.T"]], "tensor (class in torch)": [[2078, "torch.Tensor"]], "mh (torch.tensor attribute)": [[2078, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[2078, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[2079, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[2079, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[2079, "torch.testing.make_tensor"]], "torch.testing": [[2079, "module-torch.testing"]], "symbool (class in torch)": [[2081, "torch.SymBool"]], "symfloat (class in torch)": [[2081, "torch.SymFloat"]], "symint (class in torch)": [[2081, "torch.SymInt"]], "tag (class in torch)": [[2081, "torch.Tag"]], "default_generator (torch.torch attribute)": [[2081, "torch.torch.default_generator"]], "is_integer() (torch.symfloat method)": [[2081, "torch.SymFloat.is_integer"]], "name (torch.tag property)": [[2081, "torch.Tag.name"]], "torch": [[2081, "module-torch"]], "torch.contrib": [[2081, "module-torch.contrib"]], "torch.functional": [[2081, "module-torch.functional"]], "torch.quasirandom": [[2081, "module-torch.quasirandom"]], "torch.return_types": [[2081, "module-torch.return_types"]], "torch.serialization": [[2081, "module-torch.serialization"]], "torch.signal.windows.windows": [[2081, "module-torch.signal.windows.windows"]], "torch.sparse.semi_structured": [[2081, "module-torch.sparse.semi_structured"]], "torch.storage": [[2081, "module-torch.storage"]], "torch.torch_version": [[2081, "module-torch.torch_version"]], "torch.types": [[2081, "module-torch.types"]], "torch.utils.backcompat": [[2081, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[2081, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[2081, "module-torch.utils.model_dump"]], "torch.utils.viz": [[2081, "module-torch.utils.viz"]], "torch.version": [[2081, "module-torch.version"]], "logger (class in torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[2082, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[2082, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2082, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[2082, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[2082, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[2082, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[2082, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[2082, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[2082, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[2082, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[2082, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[2082, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[2083, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[2083, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[2083, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[2083, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[2083, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[2083, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[2083, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[2083, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[2086, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[2104, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[2104, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[2104, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[2104, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[2104, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[2104, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[2104, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[2104, "torch.overrides.resolve_name"]], "torch.overrides": [[2104, "module-torch.overrides"]], "wrap_torch_function() (in module torch.overrides)": [[2104, "torch.overrides.wrap_torch_function"]], "_dump_snapshot() (in module torch.cuda.memory)": [[2105, "torch.cuda.memory._dump_snapshot"]], "_record_memory_history() (in module torch.cuda.memory)": [[2105, "torch.cuda.memory._record_memory_history"]], "_snapshot() (in module torch.cuda.memory)": [[2105, "torch.cuda.memory._snapshot"]], "torch.finfo (class in torch)": [[2107, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[2107, "torch.torch.iinfo"]], "torch.utils": [[2108, "module-torch.utils"]], "torch.utils.backend_registration": [[2108, "module-torch.utils.backend_registration"]], "torch.utils.benchmark.examples.blas_compare_setup": [[2108, "module-torch.utils.benchmark.examples.blas_compare_setup"]], "torch.utils.benchmark.examples.compare": [[2108, "module-torch.utils.benchmark.examples.compare"]], "torch.utils.benchmark.examples.fuzzer": [[2108, "module-torch.utils.benchmark.examples.fuzzer"]], "torch.utils.benchmark.examples.op_benchmark": [[2108, "module-torch.utils.benchmark.examples.op_benchmark"]], "torch.utils.benchmark.examples.simple_timeit": [[2108, "module-torch.utils.benchmark.examples.simple_timeit"]], "torch.utils.benchmark.examples.spectral_ops_fuzz_test": [[2108, "module-torch.utils.benchmark.examples.spectral_ops_fuzz_test"]], "torch.utils.benchmark.op_fuzzers.binary": [[2108, "module-torch.utils.benchmark.op_fuzzers.binary"]], "torch.utils.benchmark.op_fuzzers.sparse_binary": [[2108, "module-torch.utils.benchmark.op_fuzzers.sparse_binary"]], "torch.utils.benchmark.op_fuzzers.sparse_unary": [[2108, "module-torch.utils.benchmark.op_fuzzers.sparse_unary"]], "torch.utils.benchmark.op_fuzzers.spectral": [[2108, "module-torch.utils.benchmark.op_fuzzers.spectral"]], "torch.utils.benchmark.op_fuzzers.unary": [[2108, "module-torch.utils.benchmark.op_fuzzers.unary"]], "torch.utils.benchmark.utils.common": [[2108, "module-torch.utils.benchmark.utils.common"]], "torch.utils.benchmark.utils.compare": [[2108, "module-torch.utils.benchmark.utils.compare"]], "torch.utils.benchmark.utils.compile": [[2108, "module-torch.utils.benchmark.utils.compile"]], "torch.utils.benchmark.utils.cpp_jit": [[2108, "module-torch.utils.benchmark.utils.cpp_jit"]], "torch.utils.benchmark.utils.fuzzer": [[2108, "module-torch.utils.benchmark.utils.fuzzer"]], "torch.utils.benchmark.utils.sparse_fuzzer": [[2108, "module-torch.utils.benchmark.utils.sparse_fuzzer"]], "torch.utils.benchmark.utils.timer": [[2108, "module-torch.utils.benchmark.utils.timer"]], "torch.utils.benchmark.utils.valgrind_wrapper.timer_interface": [[2108, "module-torch.utils.benchmark.utils.valgrind_wrapper.timer_interface"]], "torch.utils.bundled_inputs": [[2108, "module-torch.utils.bundled_inputs"]], "torch.utils.checkpoint": [[2108, "module-torch.utils.checkpoint"]], "torch.utils.collect_env": [[2108, "module-torch.utils.collect_env"]], "torch.utils.cpp_backtrace": [[2108, "module-torch.utils.cpp_backtrace"]], "torch.utils.cpp_extension": [[2108, "module-torch.utils.cpp_extension"]], "torch.utils.data.backward_compatibility": [[2108, "module-torch.utils.data.backward_compatibility"]], "torch.utils.data.dataloader": [[2108, "module-torch.utils.data.dataloader"]], "torch.utils.data.datapipes.dataframe.dataframe_wrapper": [[2108, "module-torch.utils.data.datapipes.dataframe.dataframe_wrapper"]], "torch.utils.data.datapipes.dataframe.dataframes": [[2108, "module-torch.utils.data.datapipes.dataframe.dataframes"]], "torch.utils.data.datapipes.dataframe.datapipes": [[2108, "module-torch.utils.data.datapipes.dataframe.datapipes"]], "torch.utils.data.datapipes.dataframe.structures": [[2108, "module-torch.utils.data.datapipes.dataframe.structures"]], "torch.utils.data.datapipes.datapipe": [[2108, "module-torch.utils.data.datapipes.datapipe"]], "torch.utils.data.datapipes.gen_pyi": [[2108, "module-torch.utils.data.datapipes.gen_pyi"]], "torch.utils.data.datapipes.iter.callable": [[2108, "module-torch.utils.data.datapipes.iter.callable"]], "torch.utils.data.datapipes.iter.combinatorics": [[2108, "module-torch.utils.data.datapipes.iter.combinatorics"]], "torch.utils.data.datapipes.iter.combining": [[2108, "module-torch.utils.data.datapipes.iter.combining"]], "torch.utils.data.datapipes.iter.filelister": [[2108, "module-torch.utils.data.datapipes.iter.filelister"]], "torch.utils.data.datapipes.iter.fileopener": [[2108, "module-torch.utils.data.datapipes.iter.fileopener"]], "torch.utils.data.datapipes.iter.grouping": [[2108, "module-torch.utils.data.datapipes.iter.grouping"]], "torch.utils.data.datapipes.iter.routeddecoder": [[2108, "module-torch.utils.data.datapipes.iter.routeddecoder"]], "torch.utils.data.datapipes.iter.selecting": [[2108, "module-torch.utils.data.datapipes.iter.selecting"]], "torch.utils.data.datapipes.iter.sharding": [[2108, "module-torch.utils.data.datapipes.iter.sharding"]], "torch.utils.data.datapipes.iter.streamreader": [[2108, "module-torch.utils.data.datapipes.iter.streamreader"]], "torch.utils.data.datapipes.iter.utils": [[2108, "module-torch.utils.data.datapipes.iter.utils"]], "torch.utils.data.datapipes.map.callable": [[2108, "module-torch.utils.data.datapipes.map.callable"]], "torch.utils.data.datapipes.map.combinatorics": [[2108, "module-torch.utils.data.datapipes.map.combinatorics"]], "torch.utils.data.datapipes.map.combining": [[2108, "module-torch.utils.data.datapipes.map.combining"]], "torch.utils.data.datapipes.map.grouping": [[2108, "module-torch.utils.data.datapipes.map.grouping"]], "torch.utils.data.datapipes.map.utils": [[2108, "module-torch.utils.data.datapipes.map.utils"]], "torch.utils.data.datapipes.utils.common": [[2108, "module-torch.utils.data.datapipes.utils.common"]], "torch.utils.data.datapipes.utils.decoder": [[2108, "module-torch.utils.data.datapipes.utils.decoder"]], "torch.utils.data.datapipes.utils.snapshot": [[2108, "module-torch.utils.data.datapipes.utils.snapshot"]], "torch.utils.data.dataset": [[2108, "module-torch.utils.data.dataset"]], "torch.utils.data.distributed": [[2108, "module-torch.utils.data.distributed"]], "torch.utils.data.graph": [[2108, "module-torch.utils.data.graph"]], "torch.utils.data.graph_settings": [[2108, "module-torch.utils.data.graph_settings"]], "torch.utils.data.sampler": [[2108, "module-torch.utils.data.sampler"]], "torch.utils.dlpack": [[2108, "module-torch.utils.dlpack"]], "torch.utils.file_baton": [[2108, "module-torch.utils.file_baton"]], "torch.utils.flop_counter": [[2108, "module-torch.utils.flop_counter"]], "torch.utils.hipify.constants": [[2108, "module-torch.utils.hipify.constants"]], "torch.utils.hipify.cuda_to_hip_mappings": [[2108, "module-torch.utils.hipify.cuda_to_hip_mappings"]], "torch.utils.hipify.hipify_python": [[2108, "module-torch.utils.hipify.hipify_python"]], "torch.utils.hipify.version": [[2108, "module-torch.utils.hipify.version"]], "torch.utils.hooks": [[2108, "module-torch.utils.hooks"]], "torch.utils.jit.log_extract": [[2108, "module-torch.utils.jit.log_extract"]], "torch.utils.mkldnn": [[2108, "module-torch.utils.mkldnn"]], "torch.utils.mobile_optimizer": [[2108, "module-torch.utils.mobile_optimizer"]], "torch.utils.show_pickle": [[2108, "module-torch.utils.show_pickle"]], "torch.utils.tensorboard.summary": [[2108, "module-torch.utils.tensorboard.summary"]], "torch.utils.tensorboard.writer": [[2108, "module-torch.utils.tensorboard.writer"]], "torch.utils.throughput_benchmark": [[2108, "module-torch.utils.throughput_benchmark"]], "torch.utils.weak": [[2108, "module-torch.utils.weak"]], "torch.xpu": [[2109, "module-torch.xpu"]], "torch.xpu.random": [[2109, "module-torch.xpu.random"]], "torch.xpu.streams": [[2109, "module-torch.xpu.streams"]]}})